{
  "gmp/gmp-6.1.2/assert.c": {
    "__gmp_assert_header": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"%s:\"",
        "\"%d: \""
      ]
    },
    "__gmp_assert_fail": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": [
        "\"GNU MP assertion failed: %s\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/bootstrap.c": {
    "isprime": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "log2_ceil": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "mpz_preinv_invert": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "mpz_invert_2exp": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "mpz_invert_ui_2exp": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/compat.c": {
    "__MPN": [
      {
        "start_point": [
          37,
          0
        ],
        "end_point": [
          41,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          46,
          0
        ],
        "end_point": [
          50,
          1
        ],
        "strings": []
      }
    ],
    "__gmpz_legendre": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/errno.c": {
    "__gmp_exception": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "__gmp_sqrt_of_negative": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "__gmp_divide_by_zero": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/extract-dbl.c": {},
  "gmp/gmp-6.1.2/gen-bases.c": {
    "ulog2": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "generate": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "header": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"/* This file generated by gen-bases.c - DO NOT EDIT. */\\n\"",
        "\"\\n\"",
        "\"#if GMP_NUMB_BITS != %d\\n\"",
        "\"Error, error, this data is for %d bits\\n\"",
        "\"#endif\\n\"",
        "\"\\n\"",
        "\"/* mp_bases[10] data, as literal values */\\n\"",
        "\"#define MP_BASES_CHARS_PER_LIMB_10      %d\\n\"",
        "\"#define MP_BASES_BIG_BASE_10            CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"#define MP_BASES_BIG_BASE_INVERTED_10   CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"#define MP_BASES_NORMALIZATION_STEPS_10 %d\\n\""
      ]
    },
    "mp_2logb": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "table": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": [
        "\"/* This file generated by gen-bases.c - DO NOT EDIT. */\\n\"",
        "\"\\n\"",
        "\"#include \\\"gmp.h\\\"\\n\"",
        "\"#include \\\"gmp-impl.h\\\"\\n\"",
        "\"\\n\"",
        "\"#if GMP_NUMB_BITS != %d\\n\"",
        "\"Error, error, this data is for %d bits\\n\"",
        "\"#endif\\n\"",
        "\"\\n\"",
        "\"const struct bases mp_bases[257] =\\n{\"",
        "\"  /*   0 */ { 0, 0, 0, 0, 0 },\"",
        "\"  /*   1 */ { 0, 0, 0, 0, 0 },\"",
        "\"  /* %3u */ { \"",
        "\"%u,\"",
        "\" CNST_LIMB(0x\"",
        "\"), CNST_LIMB(0x\"",
        "\"), CNST_LIMB(0x\"",
        "\"), CNST_LIMB(0x\"",
        "\") },\\n\"",
        "\"};\""
      ]
    },
    "main": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": [
        "\"Usage: gen-bases <header|table> <limbbits> <nailbits>\\n\"",
        "\"Invalid limb/nail bits: %d %d\\n\"",
        "\"header\"",
        "\"table\"",
        "\"Invalid header/table choice: %s\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/gen-fac.c": {
    "mpz_remove_twos": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "gen_consts": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": [
        "\"/* This file is automatically generated by gen-fac.c */\\n\\n\"",
        "\"#if GMP_NUMB_BITS != %d\\n\"",
        "\"Error , error this data is for %d GMP_NUMB_BITS only\\n\"",
        "\"#endif\\n\"",
        "\"#if GMP_LIMB_BITS != %d\\n\"",
        "\"Error , error this data is for %d GMP_LIMB_BITS only\\n\"",
        "\"#endif\\n\"",
        "\"/* This table is 0!,1!,2!,3!,...,n! where n! has <= GMP_NUMB_BITS bits */\\n\"",
        "\"#define ONE_LIMB_FACTORIAL_TABLE CNST_LIMB(0x1),CNST_LIMB(0x1\"",
        "\"),CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"\\n/* This table is 0!,1!,2!/2,3!/2,...,n!/2^sn where n!/2^sn is an */\\n\"",
        "\"/* odd integer for each n, and n!/2^sn has <= GMP_NUMB_BITS bits */\\n\"",
        "\"#define ONE_LIMB_ODD_FACTORIAL_TABLE CNST_LIMB(0x1),CNST_LIMB(0x1),CNST_LIMB(0x1\"",
        "\"),CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"#define ODD_FACTORIAL_TABLE_MAX CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"#define ODD_FACTORIAL_TABLE_LIMIT (%lu)\\n\"",
        "\"\\n/* Previous table, continued, values modulo 2^GMP_NUMB_BITS */\\n\"",
        "\"#define ONE_LIMB_ODD_FACTORIAL_EXTTABLE CNST_LIMB(0x\"",
        "\"),CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"#define ODD_FACTORIAL_EXTTABLE_LIMIT (%lu)\\n\"",
        "\"\\n/* This table is 1!!,3!!,...,(2n+1)!! where (2n+1)!! has <= GMP_NUMB_BITS bits */\\n\"",
        "\"#define ONE_LIMB_ODD_DOUBLEFACTORIAL_TABLE CNST_LIMB(0x1\"",
        "\"),CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"#define ODD_DOUBLEFACTORIAL_TABLE_MAX CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"#define ODD_DOUBLEFACTORIAL_TABLE_LIMIT (%lu)\\n\"",
        "\"\\n/* This table x_1, x_2,... contains values s.t. x_n^n has <= GMP_NUMB_BITS bits */\\n\"",
        "\"#define NTH_ROOT_NUMB_MASK_TABLE (GMP_NUMB_MASK\"",
        "\"),CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"\\n/* This table contains inverses of odd factorials, modulo 2^GMP_NUMB_BITS */\\n\"",
        "\"\\n/* It begins with (2!/2)^-1=1 */\\n\"",
        "\"#define ONE_LIMB_ODD_FACTORIAL_INVERSES_TABLE CNST_LIMB(0x1\"",
        "\"),CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"\\n/* This table contains 2n-popc(2n) for small n */\\n\"",
        "\"\\n/* It begins with 2-1=1 (n=1) */\\n\"",
        "\"#define TABLE_2N_MINUS_POPC_2N 1\"",
        "\",%lu\"",
        "\"\\n\"",
        "\"#define TABLE_LIMIT_2N_MINUS_POPC_2N %lu\\n\"",
        "\"#define ODD_CENTRAL_BINOMIAL_OFFSET (%lu)\\n\"",
        "\"\\n/* This table contains binomial(2k,k)/2^t */\\n\"",
        "\"\\n/* It begins with ODD_CENTRAL_BINOMIAL_TABLE_MIN */\\n\"",
        "\"#define ONE_LIMB_ODD_CENTRAL_BINOMIAL_TABLE \"",
        "\"),\"",
        "\"CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"#define ODD_CENTRAL_BINOMIAL_TABLE_LIMIT (%lu)\\n\"",
        "\"\\n/* This table contains the inverses of elements in the previous table. */\\n\"",
        "\"#define ONE_LIMB_ODD_CENTRAL_BINOMIAL_INVERSE_TABLE CNST_LIMB(0x\"",
        "\"),CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"\\n/* This table contains the values t in the formula binomial(2k,k)/2^t */\\n\"",
        "\"#define CENTRAL_BINOMIAL_2FAC_TABLE \"",
        "\"%d\"",
        "\",\"",
        "\"\\n\""
      ]
    },
    "main": {
      "start_point": [
        263,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": [
        "\"Usage: gen-fac limbbits nailbits\\n\"",
        "\"Invalid limb/nail bits %d,%d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/gen-fib.c": {
    "generate": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "header": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": [
        "\"/* This file generated by gen-fib.c - DO NOT EDIT. */\\n\"",
        "\"\\n\"",
        "\"#if GMP_NUMB_BITS != %d\\n\"",
        "\"Error, error, this data is for %d bits\\n\"",
        "\"#endif\\n\"",
        "\"\\n\"",
        "\"#define FIB_TABLE_LIMIT         %d\\n\"",
        "\"#define FIB_TABLE_LUCNUM_LIMIT  %d\\n\""
      ]
    },
    "table": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"/* This file generated by gen-fib.c - DO NOT EDIT. */\\n\"",
        "\"\\n\"",
        "\"#include \\\"gmp.h\\\"\\n\"",
        "\"#include \\\"gmp-impl.h\\\"\\n\"",
        "\"\\n\"",
        "\"#if GMP_NUMB_BITS != %d\\n\"",
        "\"Error, error, this data is for %d bits\\n\"",
        "\"#endif\\n\"",
        "\"\\n\"",
        "\"const mp_limb_t\\n\"",
        "\"__gmp_fib_table[FIB_TABLE_LIMIT+2] = {\\n\"",
        "\"  CNST_LIMB (0x\"",
        "\"),  /* %d */\\n\"",
        "\"};\\n\""
      ]
    },
    "main": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": [
        "\"Usage: gen-fib <header|table> <limbbits> <nailbits>\\n\"",
        "\"Invalid limb/nail bits: %d %d\\n\"",
        "\"header\"",
        "\"table\"",
        "\"Invalid header/table choice: %s\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/gen-jacobitab.c": {
    "encode": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"\\n\"",
        "\"%2d,\"",
        "\"\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/gen-psqr.c": {
    "f_cmp_divisor": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "f_cmp_fraction": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "mul_2exp_mod": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "neg_mod": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "square_mask": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": []
    },
    "generate_sq_res_0x100": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": []
    },
    "generate_mod": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        431,
        1
      ],
      "strings": [
        "\"GMP_NUMB_BITS % 4 != 0\"",
        "\"GMP_NUMB_BITS / 4 too small\"",
        "\"only %d small factor%s\"",
        "\"\"",
        "\"s\""
      ]
    },
    "print": {
      "start_point": [
        433,
        0
      ],
      "end_point": [
        553,
        1
      ],
      "strings": [
        "\"/* This file generated by gen-psqr.c - DO NOT EDIT. */\\n\"",
        "\"\\n\"",
        "\"#if GMP_LIMB_BITS != %d || GMP_NAIL_BITS != %d\\n\"",
        "\"Error, error, this data is for %d bit limb and %d bit nail\\n\"",
        "\"#endif\\n\"",
        "\"\\n\"",
        "\"/* Non-zero bit indicates a quadratic residue mod 0x100.\\n\"",
        "\"   This test identifies %.2f%% as non-squares (%d/256). */\\n\"",
        "\"static const mp_limb_t\\n\"",
        "\"sq_res_0x100[%d] = {\\n\"",
        "\"  CNST_LIMB(0x\"",
        "\"),\\n\"",
        "\"};\\n\"",
        "\"\\n\"",
        "\"/* mpn_mod_34lsub1 not used due to %s */\\n\"",
        "\"/* PERFSQR_PP = \"",
        "\"/* 2^%d-1 = \"",
        "\" * \"",
        "\"%d\"",
        "\"^%d\"",
        "\" %s*/\\n\"",
        "\"... \"",
        "\"\"",
        "\"#define PERFSQR_MOD_BITS  %d\\n\"",
        "\"#define PERFSQR_PP            CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"#define PERFSQR_PP_NORM       CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"#define PERFSQR_PP_INVERTED   CNST_LIMB(0x\"",
        "\")\\n\"",
        "\"\\n\"",
        "\"/* This test identifies %.2f%% as non-squares. */\\n\"",
        "\"#define PERFSQR_MOD_TEST(up, usize) \\\\\\n\"",
        "\"  do {                              \\\\\\n\"",
        "\"    mp_limb_t  r;                   \\\\\\n\"",
        "\"    PERFSQR_MOD_PP (r, up, usize);  \\\\\\n\"",
        "\"    PERFSQR_MOD_34 (r, up, usize);  \\\\\\n\"",
        "\"                                    \\\\\\n\"",
        "\"    /* %5.2f%% */                    \\\\\\n\"",
        "\"    PERFSQR_MOD_%d (r, CNST_LIMB(%2d), CNST_LIMB(0x\"",
        "\"), \\\\\\n\"",
        "\"                   CNST_LIMB(0x\"",
        "\"), CNST_LIMB(0x\"",
        "\")); \\\\\\n\"",
        "\"  } while (0)\\n\"",
        "\"\\n\"",
        "\"/* Grand total sq_res_0x100 and PERFSQR_MOD_TEST, %.2f%% non-squares. */\\n\"",
        "\"\\n\"",
        "\"/* helper for tests/mpz/t-perfsqr.c */\\n\"",
        "\"#define PERFSQR_DIVISORS  { 256,\"",
        "\" %d,\"",
        "\" }\\n\""
      ]
    },
    "main": {
      "start_point": [
        555,
        0
      ],
      "end_point": [
        584,
        1
      ],
      "strings": [
        "\"Usage: gen-psqr <limbbits> <nailbits>\\n\"",
        "\"Invalid limb/nail bits: %d %d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/gen-trialdivtab.c": {
    "main": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": [
        "\"usage: %s bits endprime\\n\"",
        "\"#if GMP_LIMB_BITS != %d\\n\"",
        "\"#error This table is for GMP_LIMB_BITS = %d\\n\"",
        "\"#endif\\n\\n\"",
        "\"#if GMP_NAIL_BITS != 0\\n\"",
        "\"#error This table does not support nails\\n\"",
        "\"#endif\\n\\n\"",
        "\"#ifdef WANT_dtab\\n\"",
        "\"  P(%d,\"",
        "\"CNST_LIMB(0x\"",
        "\"),\"",
        "\"CNST_LIMB(0x\"",
        "\")),\\n\"",
        "\"#define SMALLEST_OMITTED_PRIME %d\\n\"",
        "\"#endif\\n\"",
        "\"#ifdef WANT_ptab\\n\"",
        "\"\"",
        "\"%s\"",
        "\"  {CNST_LIMB(0x\"",
        "\"),{CNST_LIMB(0x\"",
        "\"),%d\"",
        "\",\"",
        "\"CNST_LIMB(0x\"",
        "\")\"",
        "\"},\"",
        "\"%d,\"",
        "\"%d}\"",
        "\",\\n\"",
        "\"\\n\"",
        "\"#endif\\n\""
      ]
    },
    "mpz_log2": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "mpn_mod_1s_4p_cps": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": []
    },
    "sumspills": {
      "start_point": [
        283,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/gmp-impl.h": {
    "mpn_mulmod_bnm1_itch": {
      "start_point": [
        1173,
        0
      ],
      "end_point": [
        1180,
        1
      ],
      "strings": []
    },
    "mpn_sqrmod_bnm1_itch": {
      "start_point": [
        1186,
        0
      ],
      "end_point": [
        1193,
        1
      ],
      "strings": []
    },
    "_mpz_newalloc": {
      "start_point": [
        1945,
        0
      ],
      "end_point": [
        1952,
        1
      ],
      "strings": []
    },
    "log_n_max": {
      "start_point": [
        2006,
        0
      ],
      "end_point": [
        2012,
        1
      ],
      "strings": []
    },
    "mpn_jacobi_init": {
      "start_point": [
        4082,
        0
      ],
      "end_point": [
        4088,
        1
      ],
      "strings": []
    },
    "mpn_jacobi_finish": {
      "start_point": [
        4090,
        0
      ],
      "end_point": [
        4097,
        1
      ],
      "strings": []
    },
    "mpn_jacobi_update": {
      "start_point": [
        4099,
        0
      ],
      "end_point": [
        4132,
        1
      ],
      "strings": []
    },
    "mpn_add_nc": {
      "start_point": [
        4664,
        0
      ],
      "end_point": [
        4672,
        1
      ],
      "strings": []
    },
    "mpn_sub_nc": {
      "start_point": [
        4679,
        0
      ],
      "end_point": [
        4686,
        1
      ],
      "strings": []
    },
    "mpn_toom6h_mul_itch": {
      "start_point": [
        5089,
        0
      ],
      "end_point": [
        5094,
        1
      ],
      "strings": []
    },
    "mpn_toom8h_mul_itch": {
      "start_point": [
        5109,
        0
      ],
      "end_point": [
        5114,
        1
      ],
      "strings": []
    },
    "mpn_toom32_mul_itch": {
      "start_point": [
        5116,
        0
      ],
      "end_point": [
        5123,
        1
      ],
      "strings": []
    },
    "mpn_toom42_mul_itch": {
      "start_point": [
        5125,
        0
      ],
      "end_point": [
        5130,
        1
      ],
      "strings": []
    },
    "mpn_toom43_mul_itch": {
      "start_point": [
        5132,
        0
      ],
      "end_point": [
        5138,
        1
      ],
      "strings": []
    },
    "mpn_toom52_mul_itch": {
      "start_point": [
        5140,
        0
      ],
      "end_point": [
        5145,
        1
      ],
      "strings": []
    },
    "mpn_toom53_mul_itch": {
      "start_point": [
        5147,
        0
      ],
      "end_point": [
        5152,
        1
      ],
      "strings": []
    },
    "mpn_toom62_mul_itch": {
      "start_point": [
        5154,
        0
      ],
      "end_point": [
        5159,
        1
      ],
      "strings": []
    },
    "mpn_toom63_mul_itch": {
      "start_point": [
        5161,
        0
      ],
      "end_point": [
        5166,
        1
      ],
      "strings": []
    },
    "mpn_toom54_mul_itch": {
      "start_point": [
        5168,
        0
      ],
      "end_point": [
        5173,
        1
      ],
      "strings": []
    },
    "gmp_allocated_string": {
      "start_point": [
        5197,
        0
      ],
      "end_point": [
        5210,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/gmpxx.h": {
    "__mpz_set_ui_safe": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "__mpz_set_si_safe": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "__gmpxx_abs_ui": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "eval": [
      {
        "start_point": [
          162,
          0
        ],
        "end_point": [
          165,
          62
        ],
        "strings": []
      },
      {
        "start_point": [
          166,
          2
        ],
        "end_point": [
          166,
          62
        ],
        "strings": []
      },
      {
        "start_point": [
          169,
          0
        ],
        "end_point": [
          172,
          62
        ],
        "strings": []
      },
      {
        "start_point": [
          173,
          2
        ],
        "end_point": [
          173,
          62
        ],
        "strings": []
      },
      {
        "start_point": [
          181,
          0
        ],
        "end_point": [
          196,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          197,
          2
        ],
        "end_point": [
          198,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          199,
          2
        ],
        "end_point": [
          205,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          206,
          2
        ],
        "end_point": [
          207,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          208,
          2
        ],
        "end_point": [
          209,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          210,
          2
        ],
        "end_point": [
          211,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          213,
          2
        ],
        "end_point": [
          214,
          23
        ],
        "strings": []
      },
      {
        "start_point": [
          216,
          2
        ],
        "end_point": [
          233,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          234,
          2
        ],
        "end_point": [
          235,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          238,
          2
        ],
        "end_point": [
          239,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          240,
          2
        ],
        "end_point": [
          241,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          242,
          2
        ],
        "end_point": [
          243,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          245,
          2
        ],
        "end_point": [
          255,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          256,
          2
        ],
        "end_point": [
          257,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          259,
          2
        ],
        "end_point": [
          260,
          23
        ],
        "strings": []
      },
      {
        "start_point": [
          262,
          2
        ],
        "end_point": [
          263,
          26
        ],
        "strings": []
      },
      {
        "start_point": [
          264,
          2
        ],
        "end_point": [
          265,
          26
        ],
        "strings": []
      },
      {
        "start_point": [
          266,
          2
        ],
        "end_point": [
          272,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          273,
          2
        ],
        "end_point": [
          274,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          275,
          2
        ],
        "end_point": [
          282,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          283,
          2
        ],
        "end_point": [
          284,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          287,
          0
        ],
        "end_point": [
          300,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          301,
          2
        ],
        "end_point": [
          309,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          310,
          2
        ],
        "end_point": [
          316,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          317,
          2
        ],
        "end_point": [
          326,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          327,
          2
        ],
        "end_point": [
          328,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          329,
          2
        ],
        "end_point": [
          330,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          332,
          2
        ],
        "end_point": [
          333,
          23
        ],
        "strings": []
      },
      {
        "start_point": [
          335,
          2
        ],
        "end_point": [
          352,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          353,
          2
        ],
        "end_point": [
          354,
          35
        ],
        "strings": []
      },
      {
        "start_point": [
          355,
          2
        ],
        "end_point": [
          361,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          362,
          2
        ],
        "end_point": [
          363,
          35
        ],
        "strings": []
      },
      {
        "start_point": [
          364,
          2
        ],
        "end_point": [
          365,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          366,
          2
        ],
        "end_point": [
          367,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          369,
          2
        ],
        "end_point": [
          379,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          380,
          2
        ],
        "end_point": [
          381,
          35
        ],
        "strings": []
      },
      {
        "start_point": [
          383,
          2
        ],
        "end_point": [
          384,
          23
        ],
        "strings": []
      },
      {
        "start_point": [
          386,
          2
        ],
        "end_point": [
          387,
          26
        ],
        "strings": []
      },
      {
        "start_point": [
          388,
          2
        ],
        "end_point": [
          389,
          26
        ],
        "strings": []
      },
      {
        "start_point": [
          390,
          2
        ],
        "end_point": [
          396,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          397,
          2
        ],
        "end_point": [
          404,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          405,
          2
        ],
        "end_point": [
          412,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          413,
          2
        ],
        "end_point": [
          420,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          424,
          0
        ],
        "end_point": [
          431,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          444,
          2
        ],
        "end_point": [
          452,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          453,
          2
        ],
        "end_point": [
          454,
          28
        ],
        "strings": []
      },
      {
        "start_point": [
          468,
          2
        ],
        "end_point": [
          476,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          477,
          2
        ],
        "end_point": [
          478,
          28
        ],
        "strings": []
      },
      {
        "start_point": [
          481,
          0
        ],
        "end_point": [
          504,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          505,
          2
        ],
        "end_point": [
          506,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          507,
          2
        ],
        "end_point": [
          518,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          519,
          2
        ],
        "end_point": [
          520,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          521,
          2
        ],
        "end_point": [
          522,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          523,
          2
        ],
        "end_point": [
          524,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          526,
          2
        ],
        "end_point": [
          527,
          23
        ],
        "strings": []
      },
      {
        "start_point": [
          529,
          2
        ],
        "end_point": [
          549,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          550,
          2
        ],
        "end_point": [
          551,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          552,
          2
        ],
        "end_point": [
          566,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          567,
          2
        ],
        "end_point": [
          568,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          569,
          2
        ],
        "end_point": [
          570,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          571,
          2
        ],
        "end_point": [
          572,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          574,
          2
        ],
        "end_point": [
          575,
          23
        ],
        "strings": []
      },
      {
        "start_point": [
          577,
          2
        ],
        "end_point": [
          578,
          26
        ],
        "strings": []
      },
      {
        "start_point": [
          579,
          2
        ],
        "end_point": [
          580,
          26
        ],
        "strings": []
      },
      {
        "start_point": [
          581,
          2
        ],
        "end_point": [
          590,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          591,
          2
        ],
        "end_point": [
          592,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          593,
          2
        ],
        "end_point": [
          600,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          601,
          2
        ],
        "end_point": [
          602,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          605,
          0
        ],
        "end_point": [
          627,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          628,
          2
        ],
        "end_point": [
          648,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          649,
          2
        ],
        "end_point": [
          658,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          659,
          2
        ],
        "end_point": [
          669,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          670,
          2
        ],
        "end_point": [
          671,
          50
        ],
        "strings": []
      },
      {
        "start_point": [
          672,
          2
        ],
        "end_point": [
          673,
          50
        ],
        "strings": []
      },
      {
        "start_point": [
          675,
          2
        ],
        "end_point": [
          676,
          23
        ],
        "strings": []
      },
      {
        "start_point": [
          678,
          2
        ],
        "end_point": [
          689,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          690,
          2
        ],
        "end_point": [
          691,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          692,
          2
        ],
        "end_point": [
          706,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          707,
          2
        ],
        "end_point": [
          708,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          709,
          2
        ],
        "end_point": [
          710,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          711,
          2
        ],
        "end_point": [
          712,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          714,
          2
        ],
        "end_point": [
          715,
          23
        ],
        "strings": []
      },
      {
        "start_point": [
          717,
          2
        ],
        "end_point": [
          718,
          26
        ],
        "strings": []
      },
      {
        "start_point": [
          719,
          2
        ],
        "end_point": [
          720,
          26
        ],
        "strings": []
      },
      {
        "start_point": [
          721,
          2
        ],
        "end_point": [
          730,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          731,
          2
        ],
        "end_point": [
          740,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          741,
          2
        ],
        "end_point": [
          748,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          749,
          2
        ],
        "end_point": [
          756,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          759,
          0
        ],
        "end_point": [
          765,
          29
        ],
        "strings": []
      },
      {
        "start_point": [
          766,
          2
        ],
        "end_point": [
          783,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          784,
          2
        ],
        "end_point": [
          787,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          788,
          2
        ],
        "end_point": [
          798,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          799,
          2
        ],
        "end_point": [
          800,
          50
        ],
        "strings": []
      },
      {
        "start_point": [
          801,
          2
        ],
        "end_point": [
          802,
          50
        ],
        "strings": []
      },
      {
        "start_point": [
          805,
          0
        ],
        "end_point": [
          811,
          48
        ],
        "strings": []
      },
      {
        "start_point": [
          812,
          2
        ],
        "end_point": [
          813,
          21
        ],
        "strings": []
      },
      {
        "start_point": [
          814,
          2
        ],
        "end_point": [
          815,
          48
        ],
        "strings": []
      },
      {
        "start_point": [
          816,
          2
        ],
        "end_point": [
          817,
          21
        ],
        "strings": []
      },
      {
        "start_point": [
          818,
          2
        ],
        "end_point": [
          819,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          820,
          2
        ],
        "end_point": [
          821,
          21
        ],
        "strings": []
      },
      {
        "start_point": [
          824,
          0
        ],
        "end_point": [
          829,
          48
        ],
        "strings": []
      },
      {
        "start_point": [
          830,
          2
        ],
        "end_point": [
          831,
          21
        ],
        "strings": []
      },
      {
        "start_point": [
          832,
          2
        ],
        "end_point": [
          833,
          48
        ],
        "strings": []
      },
      {
        "start_point": [
          834,
          2
        ],
        "end_point": [
          835,
          21
        ],
        "strings": []
      },
      {
        "start_point": [
          836,
          2
        ],
        "end_point": [
          837,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          838,
          2
        ],
        "end_point": [
          839,
          21
        ],
        "strings": []
      },
      {
        "start_point": [
          842,
          0
        ],
        "end_point": [
          847,
          48
        ],
        "strings": []
      },
      {
        "start_point": [
          848,
          2
        ],
        "end_point": [
          849,
          21
        ],
        "strings": []
      },
      {
        "start_point": [
          850,
          2
        ],
        "end_point": [
          851,
          48
        ],
        "strings": []
      },
      {
        "start_point": [
          852,
          2
        ],
        "end_point": [
          853,
          21
        ],
        "strings": []
      },
      {
        "start_point": [
          854,
          2
        ],
        "end_point": [
          855,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          856,
          2
        ],
        "end_point": [
          857,
          21
        ],
        "strings": []
      },
      {
        "start_point": [
          860,
          0
        ],
        "end_point": [
          865,
          30
        ],
        "strings": []
      },
      {
        "start_point": [
          866,
          2
        ],
        "end_point": [
          867,
          31
        ],
        "strings": []
      },
      {
        "start_point": [
          868,
          2
        ],
        "end_point": [
          869,
          30
        ],
        "strings": []
      },
      {
        "start_point": [
          870,
          2
        ],
        "end_point": [
          871,
          31
        ],
        "strings": []
      },
      {
        "start_point": [
          872,
          2
        ],
        "end_point": [
          873,
          29
        ],
        "strings": []
      },
      {
        "start_point": [
          874,
          2
        ],
        "end_point": [
          875,
          30
        ],
        "strings": []
      },
      {
        "start_point": [
          877,
          2
        ],
        "end_point": [
          877,
          71
        ],
        "strings": []
      },
      {
        "start_point": [
          879,
          2
        ],
        "end_point": [
          880,
          33
        ],
        "strings": []
      },
      {
        "start_point": [
          881,
          2
        ],
        "end_point": [
          882,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          883,
          2
        ],
        "end_point": [
          884,
          33
        ],
        "strings": []
      },
      {
        "start_point": [
          885,
          2
        ],
        "end_point": [
          886,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          887,
          2
        ],
        "end_point": [
          888,
          51
        ],
        "strings": []
      },
      {
        "start_point": [
          889,
          2
        ],
        "end_point": [
          890,
          51
        ],
        "strings": []
      },
      {
        "start_point": [
          891,
          2
        ],
        "end_point": [
          892,
          29
        ],
        "strings": []
      },
      {
        "start_point": [
          893,
          2
        ],
        "end_point": [
          894,
          30
        ],
        "strings": []
      },
      {
        "start_point": [
          896,
          2
        ],
        "end_point": [
          896,
          71
        ],
        "strings": []
      },
      {
        "start_point": [
          898,
          2
        ],
        "end_point": [
          899,
          30
        ],
        "strings": []
      },
      {
        "start_point": [
          900,
          2
        ],
        "end_point": [
          901,
          31
        ],
        "strings": []
      },
      {
        "start_point": [
          902,
          2
        ],
        "end_point": [
          903,
          30
        ],
        "strings": []
      },
      {
        "start_point": [
          904,
          2
        ],
        "end_point": [
          905,
          31
        ],
        "strings": []
      },
      {
        "start_point": [
          906,
          2
        ],
        "end_point": [
          907,
          29
        ],
        "strings": []
      },
      {
        "start_point": [
          908,
          2
        ],
        "end_point": [
          909,
          30
        ],
        "strings": []
      },
      {
        "start_point": [
          910,
          2
        ],
        "end_point": [
          911,
          29
        ],
        "strings": []
      },
      {
        "start_point": [
          912,
          2
        ],
        "end_point": [
          913,
          30
        ],
        "strings": []
      },
      {
        "start_point": [
          914,
          2
        ],
        "end_point": [
          922,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          923,
          2
        ],
        "end_point": [
          924,
          25
        ],
        "strings": []
      },
      {
        "start_point": [
          927,
          0
        ],
        "end_point": [
          932,
          35
        ],
        "strings": []
      },
      {
        "start_point": [
          933,
          2
        ],
        "end_point": [
          934,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          935,
          2
        ],
        "end_point": [
          936,
          35
        ],
        "strings": []
      },
      {
        "start_point": [
          937,
          2
        ],
        "end_point": [
          938,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          939,
          2
        ],
        "end_point": [
          940,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          941,
          2
        ],
        "end_point": [
          942,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          944,
          2
        ],
        "end_point": [
          945,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          947,
          2
        ],
        "end_point": [
          948,
          38
        ],
        "strings": []
      },
      {
        "start_point": [
          949,
          2
        ],
        "end_point": [
          950,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          951,
          2
        ],
        "end_point": [
          952,
          38
        ],
        "strings": []
      },
      {
        "start_point": [
          953,
          2
        ],
        "end_point": [
          954,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          955,
          2
        ],
        "end_point": [
          956,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          957,
          2
        ],
        "end_point": [
          958,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          959,
          2
        ],
        "end_point": [
          960,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          961,
          2
        ],
        "end_point": [
          962,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          964,
          2
        ],
        "end_point": [
          964,
          77
        ],
        "strings": []
      },
      {
        "start_point": [
          966,
          2
        ],
        "end_point": [
          967,
          35
        ],
        "strings": []
      },
      {
        "start_point": [
          968,
          2
        ],
        "end_point": [
          969,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          970,
          2
        ],
        "end_point": [
          971,
          35
        ],
        "strings": []
      },
      {
        "start_point": [
          972,
          2
        ],
        "end_point": [
          973,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          974,
          2
        ],
        "end_point": [
          975,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          976,
          2
        ],
        "end_point": [
          977,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          978,
          2
        ],
        "end_point": [
          979,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          980,
          2
        ],
        "end_point": [
          981,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          982,
          2
        ],
        "end_point": [
          983,
          49
        ],
        "strings": []
      },
      {
        "start_point": [
          984,
          2
        ],
        "end_point": [
          985,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          988,
          0
        ],
        "end_point": [
          993,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          994,
          2
        ],
        "end_point": [
          995,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          996,
          2
        ],
        "end_point": [
          997,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          998,
          2
        ],
        "end_point": [
          999,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          1000,
          2
        ],
        "end_point": [
          1001,
          33
        ],
        "strings": []
      },
      {
        "start_point": [
          1002,
          2
        ],
        "end_point": [
          1003,
          33
        ],
        "strings": []
      },
      {
        "start_point": [
          1005,
          2
        ],
        "end_point": [
          1005,
          76
        ],
        "strings": []
      },
      {
        "start_point": [
          1007,
          2
        ],
        "end_point": [
          1008,
          37
        ],
        "strings": []
      },
      {
        "start_point": [
          1009,
          2
        ],
        "end_point": [
          1010,
          37
        ],
        "strings": []
      },
      {
        "start_point": [
          1011,
          2
        ],
        "end_point": [
          1012,
          37
        ],
        "strings": []
      },
      {
        "start_point": [
          1013,
          2
        ],
        "end_point": [
          1014,
          37
        ],
        "strings": []
      },
      {
        "start_point": [
          1015,
          2
        ],
        "end_point": [
          1016,
          55
        ],
        "strings": []
      },
      {
        "start_point": [
          1017,
          2
        ],
        "end_point": [
          1018,
          55
        ],
        "strings": []
      },
      {
        "start_point": [
          1019,
          2
        ],
        "end_point": [
          1020,
          33
        ],
        "strings": []
      },
      {
        "start_point": [
          1021,
          2
        ],
        "end_point": [
          1022,
          33
        ],
        "strings": []
      },
      {
        "start_point": [
          1024,
          2
        ],
        "end_point": [
          1024,
          76
        ],
        "strings": []
      },
      {
        "start_point": [
          1026,
          2
        ],
        "end_point": [
          1027,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          1028,
          2
        ],
        "end_point": [
          1029,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          1030,
          2
        ],
        "end_point": [
          1031,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          1032,
          2
        ],
        "end_point": [
          1033,
          34
        ],
        "strings": []
      },
      {
        "start_point": [
          1034,
          2
        ],
        "end_point": [
          1035,
          33
        ],
        "strings": []
      },
      {
        "start_point": [
          1036,
          2
        ],
        "end_point": [
          1037,
          33
        ],
        "strings": []
      },
      {
        "start_point": [
          1038,
          2
        ],
        "end_point": [
          1039,
          33
        ],
        "strings": []
      },
      {
        "start_point": [
          1040,
          2
        ],
        "end_point": [
          1041,
          33
        ],
        "strings": []
      },
      {
        "start_point": [
          1042,
          2
        ],
        "end_point": [
          1043,
          48
        ],
        "strings": []
      },
      {
        "start_point": [
          1044,
          2
        ],
        "end_point": [
          1045,
          48
        ],
        "strings": []
      },
      {
        "start_point": [
          1054,
          0
        ],
        "end_point": [
          1058,
          59
        ],
        "strings": []
      },
      {
        "start_point": [
          1059,
          2
        ],
        "end_point": [
          1059,
          54
        ],
        "strings": []
      },
      {
        "start_point": [
          1062,
          0
        ],
        "end_point": [
          1066,
          59
        ],
        "strings": []
      },
      {
        "start_point": [
          1067,
          2
        ],
        "end_point": [
          1067,
          54
        ],
        "strings": []
      },
      {
        "start_point": [
          1070,
          0
        ],
        "end_point": [
          1073,
          62
        ],
        "strings": []
      },
      {
        "start_point": [
          1074,
          2
        ],
        "end_point": [
          1074,
          62
        ],
        "strings": []
      },
      {
        "start_point": [
          1092,
          0
        ],
        "end_point": [
          1095,
          63
        ],
        "strings": []
      },
      {
        "start_point": [
          1098,
          0
        ],
        "end_point": [
          1121,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          1122,
          2
        ],
        "end_point": [
          1123,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          1124,
          2
        ],
        "end_point": [
          1125,
          36
        ],
        "strings": []
      },
      {
        "start_point": [
          1126,
          2
        ],
        "end_point": [
          1127,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          1128,
          2
        ],
        "end_point": [
          1138,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          1139,
          2
        ],
        "end_point": [
          1140,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          1143,
          0
        ],
        "end_point": [
          1146,
          54
        ],
        "strings": []
      },
      {
        "start_point": [
          1147,
          2
        ],
        "end_point": [
          1147,
          54
        ],
        "strings": []
      },
      {
        "start_point": [
          1150,
          0
        ],
        "end_point": [
          1155,
          26
        ],
        "strings": []
      },
      {
        "start_point": [
          1156,
          2
        ],
        "end_point": [
          1157,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          1158,
          2
        ],
        "end_point": [
          1159,
          36
        ],
        "strings": []
      },
      {
        "start_point": [
          1160,
          2
        ],
        "end_point": [
          1161,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          1162,
          2
        ],
        "end_point": [
          1163,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          1164,
          2
        ],
        "end_point": [
          1165,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          1168,
          0
        ],
        "end_point": [
          1173,
          26
        ],
        "strings": []
      },
      {
        "start_point": [
          1174,
          2
        ],
        "end_point": [
          1175,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          1176,
          2
        ],
        "end_point": [
          1177,
          36
        ],
        "strings": []
      },
      {
        "start_point": [
          1178,
          2
        ],
        "end_point": [
          1179,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          1180,
          2
        ],
        "end_point": [
          1181,
          47
        ],
        "strings": []
      },
      {
        "start_point": [
          1182,
          2
        ],
        "end_point": [
          1183,
          20
        ],
        "strings": []
      },
      {
        "start_point": [
          1186,
          0
        ],
        "end_point": [
          1191,
          28
        ],
        "strings": []
      },
      {
        "start_point": [
          1192,
          2
        ],
        "end_point": [
          1193,
          31
        ],
        "strings": []
      },
      {
        "start_point": [
          2354,
          2
        ],
        "end_point": [
          2366,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2389,
          2
        ],
        "end_point": [
          2401,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2424,
          2
        ],
        "end_point": [
          2436,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2461,
          2
        ],
        "end_point": [
          2465,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2482,
          2
        ],
        "end_point": [
          2486,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2507,
          2
        ],
        "end_point": [
          2512,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2535,
          2
        ],
        "end_point": [
          2540,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2563,
          2
        ],
        "end_point": [
          2568,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          3151,
          2
        ],
        "end_point": [
          3151,
          75
        ],
        "strings": []
      },
      {
        "start_point": [
          3163,
          2
        ],
        "end_point": [
          3164,
          61
        ],
        "strings": []
      },
      {
        "start_point": [
          3176,
          2
        ],
        "end_point": [
          3180,
          3
        ],
        "strings": []
      }
    ],
    "__gmp_alloc_cstring": {
      "start_point": [
        1206,
        0
      ],
      "end_point": [
        1215,
        3
      ],
      "strings": []
    },
    "std": {
      "start_point": [
        1302,
        0
      ],
      "end_point": [
        1310,
        3
      ],
      "strings": []
    },
    "val": {
      "start_point": [
        1351,
        2
      ],
      "end_point": [
        1351,
        43
      ],
      "strings": []
    },
    "assign_ui": {
      "start_point": [
        1435,
        2
      ],
      "end_point": [
        1441,
        3
      ],
      "strings": []
    },
    "assign_si": {
      "start_point": [
        1442,
        2
      ],
      "end_point": [
        1453,
        3
      ],
      "strings": []
    },
    "assign_d": {
      "start_point": [
        1454,
        2
      ],
      "end_point": [
        1457,
        3
      ],
      "strings": []
    },
    "init_ui": {
      "start_point": [
        1459,
        2
      ],
      "end_point": [
        1465,
        3
      ],
      "strings": []
    },
    "init_si": {
      "start_point": [
        1466,
        2
      ],
      "end_point": [
        1477,
        3
      ],
      "strings": []
    },
    "init_d": {
      "start_point": [
        1478,
        2
      ],
      "end_point": [
        1481,
        3
      ],
      "strings": []
    },
    "__gmp_expr": {
      "start_point": [
        1520,
        2
      ],
      "end_point": [
        1520,
        60
      ],
      "strings": []
    },
    "swap": [
      {
        "start_point": [
          1524,
          2
        ],
        "end_point": [
          1524,
          70
        ],
        "strings": []
      },
      {
        "start_point": [
          1701,
          2
        ],
        "end_point": [
          1701,
          70
        ],
        "strings": []
      }
    ],
    "set_str": [
      {
        "start_point": [
          1553,
          2
        ],
        "end_point": [
          1554,
          38
        ],
        "strings": []
      },
      {
        "start_point": [
          1555,
          2
        ],
        "end_point": [
          1556,
          46
        ],
        "strings": []
      },
      {
        "start_point": [
          1732,
          2
        ],
        "end_point": [
          1733,
          38
        ],
        "strings": []
      },
      {
        "start_point": [
          1734,
          2
        ],
        "end_point": [
          1735,
          46
        ],
        "strings": []
      }
    ],
    "__get_mp": [
      {
        "start_point": [
          1564,
          2
        ],
        "end_point": [
          1564,
          44
        ],
        "strings": []
      },
      {
        "start_point": [
          1565,
          2
        ],
        "end_point": [
          1565,
          35
        ],
        "strings": []
      },
      {
        "start_point": [
          1756,
          2
        ],
        "end_point": [
          1756,
          44
        ],
        "strings": []
      },
      {
        "start_point": [
          1757,
          2
        ],
        "end_point": [
          1757,
          35
        ],
        "strings": []
      },
      {
        "start_point": [
          1960,
          2
        ],
        "end_point": [
          1960,
          44
        ],
        "strings": []
      },
      {
        "start_point": [
          1961,
          2
        ],
        "end_point": [
          1961,
          35
        ],
        "strings": []
      }
    ],
    "get_mpz_t": [
      {
        "start_point": [
          1566,
          2
        ],
        "end_point": [
          1566,
          45
        ],
        "strings": []
      },
      {
        "start_point": [
          1567,
          2
        ],
        "end_point": [
          1567,
          36
        ],
        "strings": []
      }
    ],
    "get_si": [
      {
        "start_point": [
          1569,
          2
        ],
        "end_point": [
          1569,
          59
        ],
        "strings": []
      },
      {
        "start_point": [
          1965,
          2
        ],
        "end_point": [
          1965,
          59
        ],
        "strings": []
      }
    ],
    "get_ui": [
      {
        "start_point": [
          1570,
          2
        ],
        "end_point": [
          1570,
          61
        ],
        "strings": []
      },
      {
        "start_point": [
          1966,
          2
        ],
        "end_point": [
          1966,
          61
        ],
        "strings": []
      }
    ],
    "get_d": [
      {
        "start_point": [
          1571,
          2
        ],
        "end_point": [
          1571,
          48
        ],
        "strings": []
      },
      {
        "start_point": [
          1766,
          2
        ],
        "end_point": [
          1766,
          48
        ],
        "strings": []
      },
      {
        "start_point": [
          1967,
          2
        ],
        "end_point": [
          1967,
          48
        ],
        "strings": []
      }
    ],
    "fits_sint_p": [
      {
        "start_point": [
          1575,
          2
        ],
        "end_point": [
          1575,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          1971,
          2
        ],
        "end_point": [
          1971,
          58
        ],
        "strings": []
      }
    ],
    "fits_uint_p": [
      {
        "start_point": [
          1576,
          2
        ],
        "end_point": [
          1576,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          1972,
          2
        ],
        "end_point": [
          1972,
          58
        ],
        "strings": []
      }
    ],
    "fits_sshort_p": [
      {
        "start_point": [
          1577,
          2
        ],
        "end_point": [
          1577,
          62
        ],
        "strings": []
      },
      {
        "start_point": [
          1973,
          2
        ],
        "end_point": [
          1973,
          62
        ],
        "strings": []
      }
    ],
    "fits_ushort_p": [
      {
        "start_point": [
          1578,
          2
        ],
        "end_point": [
          1578,
          62
        ],
        "strings": []
      },
      {
        "start_point": [
          1974,
          2
        ],
        "end_point": [
          1974,
          62
        ],
        "strings": []
      }
    ],
    "fits_slong_p": [
      {
        "start_point": [
          1579,
          2
        ],
        "end_point": [
          1579,
          60
        ],
        "strings": []
      },
      {
        "start_point": [
          1975,
          2
        ],
        "end_point": [
          1975,
          60
        ],
        "strings": []
      }
    ],
    "fits_ulong_p": [
      {
        "start_point": [
          1580,
          2
        ],
        "end_point": [
          1580,
          60
        ],
        "strings": []
      },
      {
        "start_point": [
          1976,
          2
        ],
        "end_point": [
          1976,
          60
        ],
        "strings": []
      }
    ],
    "get_num": {
      "start_point": [
        1747,
        2
      ],
      "end_point": [
        1748,
        66
      ],
      "strings": []
    },
    "get_den": {
      "start_point": [
        1751,
        2
      ],
      "end_point": [
        1752,
        66
      ],
      "strings": []
    },
    "get_mpq_t": [
      {
        "start_point": [
          1758,
          2
        ],
        "end_point": [
          1758,
          45
        ],
        "strings": []
      },
      {
        "start_point": [
          1759,
          2
        ],
        "end_point": [
          1759,
          36
        ],
        "strings": []
      }
    ],
    "get_num_mpz_t": [
      {
        "start_point": [
          1761,
          2
        ],
        "end_point": [
          1761,
          61
        ],
        "strings": []
      },
      {
        "start_point": [
          1762,
          2
        ],
        "end_point": [
          1762,
          52
        ],
        "strings": []
      }
    ],
    "get_den_mpz_t": [
      {
        "start_point": [
          1763,
          2
        ],
        "end_point": [
          1763,
          61
        ],
        "strings": []
      },
      {
        "start_point": [
          1764,
          2
        ],
        "end_point": [
          1764,
          52
        ],
        "strings": []
      }
    ],
    "get_mpf_t": [
      {
        "start_point": [
          1962,
          2
        ],
        "end_point": [
          1962,
          45
        ],
        "strings": []
      },
      {
        "start_point": [
          1963,
          2
        ],
        "end_point": [
          1963,
          36
        ],
        "strings": []
      }
    ],
    "get_val1": [
      {
        "start_point": [
          2367,
          2
        ],
        "end_point": [
          2367,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2402,
          2
        ],
        "end_point": [
          2402,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2437,
          2
        ],
        "end_point": [
          2437,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2466,
          2
        ],
        "end_point": [
          2466,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2487,
          2
        ],
        "end_point": [
          2487,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2513,
          2
        ],
        "end_point": [
          2513,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2541,
          2
        ],
        "end_point": [
          2541,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2569,
          2
        ],
        "end_point": [
          2569,
          58
        ],
        "strings": []
      }
    ],
    "get_val2": [
      {
        "start_point": [
          2368,
          2
        ],
        "end_point": [
          2368,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2403,
          2
        ],
        "end_point": [
          2403,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2438,
          2
        ],
        "end_point": [
          2438,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2467,
          2
        ],
        "end_point": [
          2467,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2488,
          2
        ],
        "end_point": [
          2488,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2514,
          2
        ],
        "end_point": [
          2514,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2542,
          2
        ],
        "end_point": [
          2542,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          2570,
          2
        ],
        "end_point": [
          2570,
          58
        ],
        "strings": []
      }
    ],
    "get_prec": [
      {
        "start_point": [
          2369,
          2
        ],
        "end_point": [
          2374,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2404,
          2
        ],
        "end_point": [
          2409,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2439,
          2
        ],
        "end_point": [
          2444,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2468,
          2
        ],
        "end_point": [
          2468,
          63
        ],
        "strings": []
      },
      {
        "start_point": [
          2489,
          2
        ],
        "end_point": [
          2489,
          63
        ],
        "strings": []
      },
      {
        "start_point": [
          2515,
          2
        ],
        "end_point": [
          2520,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2543,
          2
        ],
        "end_point": [
          2548,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          2571,
          2
        ],
        "end_point": [
          2576,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          3152,
          2
        ],
        "end_point": [
          3152,
          65
        ],
        "strings": []
      },
      {
        "start_point": [
          3165,
          2
        ],
        "end_point": [
          3165,
          65
        ],
        "strings": []
      },
      {
        "start_point": [
          3181,
          2
        ],
        "end_point": [
          3187,
          3
        ],
        "strings": []
      }
    ],
    "__GMPF_DEFINE_COMPOUND_OPERATOR": [
      {
        "start_point": [
          3140,
          0
        ],
        "end_point": [
          3140,
          30
        ],
        "strings": []
      },
      {
        "start_point": [
          3141,
          0
        ],
        "end_point": [
          3141,
          30
        ],
        "strings": []
      }
    ],
    "seed": [
      {
        "start_point": [
          3196,
          0
        ],
        "end_point": [
          3252,
          1
        ],
        "strings": [
          "\"gmp_randinit_lc_2exp_size\""
        ]
      },
      {
        "start_point": [
          3237,
          2
        ],
        "end_point": [
          3237,
          63
        ],
        "strings": []
      },
      {
        "start_point": [
          3238,
          2
        ],
        "end_point": [
          3238,
          71
        ],
        "strings": []
      }
    ],
    "min": [
      {
        "start_point": [
          3257,
          0
        ],
        "end_point": [
          3368,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          3262,
          4
        ],
        "end_point": [
          3262,
          50
        ],
        "strings": []
      },
      {
        "start_point": [
          3299,
          4
        ],
        "end_point": [
          3299,
          50
        ],
        "strings": []
      },
      {
        "start_point": [
          3336,
          4
        ],
        "end_point": [
          3336,
          50
        ],
        "strings": []
      }
    ],
    "max": [
      {
        "start_point": [
          3263,
          4
        ],
        "end_point": [
          3263,
          50
        ],
        "strings": []
      },
      {
        "start_point": [
          3300,
          4
        ],
        "end_point": [
          3300,
          50
        ],
        "strings": []
      },
      {
        "start_point": [
          3337,
          4
        ],
        "end_point": [
          3337,
          50
        ],
        "strings": []
      }
    ],
    "lowest": [
      {
        "start_point": [
          3264,
          4
        ],
        "end_point": [
          3264,
          53
        ],
        "strings": []
      },
      {
        "start_point": [
          3301,
          4
        ],
        "end_point": [
          3301,
          53
        ],
        "strings": []
      },
      {
        "start_point": [
          3338,
          4
        ],
        "end_point": [
          3338,
          53
        ],
        "strings": []
      }
    ],
    "epsilon": [
      {
        "start_point": [
          3272,
          4
        ],
        "end_point": [
          3272,
          54
        ],
        "strings": []
      },
      {
        "start_point": [
          3309,
          4
        ],
        "end_point": [
          3309,
          54
        ],
        "strings": []
      },
      {
        "start_point": [
          3346,
          4
        ],
        "end_point": [
          3346,
          54
        ],
        "strings": []
      }
    ],
    "round_error": [
      {
        "start_point": [
          3273,
          4
        ],
        "end_point": [
          3273,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          3310,
          4
        ],
        "end_point": [
          3310,
          58
        ],
        "strings": []
      },
      {
        "start_point": [
          3347,
          4
        ],
        "end_point": [
          3347,
          58
        ],
        "strings": []
      }
    ],
    "infinity": [
      {
        "start_point": [
          3283,
          4
        ],
        "end_point": [
          3283,
          55
        ],
        "strings": []
      },
      {
        "start_point": [
          3320,
          4
        ],
        "end_point": [
          3320,
          55
        ],
        "strings": []
      },
      {
        "start_point": [
          3357,
          4
        ],
        "end_point": [
          3357,
          55
        ],
        "strings": []
      }
    ],
    "quiet_NaN": [
      {
        "start_point": [
          3284,
          4
        ],
        "end_point": [
          3284,
          56
        ],
        "strings": []
      },
      {
        "start_point": [
          3321,
          4
        ],
        "end_point": [
          3321,
          56
        ],
        "strings": []
      },
      {
        "start_point": [
          3358,
          4
        ],
        "end_point": [
          3358,
          56
        ],
        "strings": []
      }
    ],
    "signaling_NaN": [
      {
        "start_point": [
          3285,
          4
        ],
        "end_point": [
          3285,
          60
        ],
        "strings": []
      },
      {
        "start_point": [
          3322,
          4
        ],
        "end_point": [
          3322,
          60
        ],
        "strings": []
      },
      {
        "start_point": [
          3359,
          4
        ],
        "end_point": [
          3359,
          60
        ],
        "strings": []
      }
    ],
    "denorm_min": [
      {
        "start_point": [
          3286,
          4
        ],
        "end_point": [
          3286,
          57
        ],
        "strings": []
      },
      {
        "start_point": [
          3323,
          4
        ],
        "end_point": [
          3323,
          57
        ],
        "strings": []
      },
      {
        "start_point": [
          3360,
          4
        ],
        "end_point": [
          3360,
          57
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/invalid.c": {
    "__gmp_invalid_operation": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/longlong.h": {},
  "gmp/gmp-6.1.2/memory.c": {
    "__gmp_default_allocate": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": [
        "\"GNU MP: Cannot allocate memory (size=%lu)\\n\""
      ]
    },
    "__gmp_default_reallocate": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"gmp: (realloc) data clobbered before allocation block\\n\"",
        "\"gmp: (realloc) data clobbered after allocation block\\n\"",
        "\"GNU MP: Cannot reallocate memory (old_size=%lu new_size=%lu)\\n\""
      ]
    },
    "__gmp_default_free": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": [
        "\"gmp: (free) data clobbered before allocation block\\n\"",
        "\"gmp: (free) data clobbered after allocation block\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mp_bpl.c": {},
  "gmp/gmp-6.1.2/mp_clz_tab.c": {},
  "gmp/gmp-6.1.2/mp_dv_tab.c": {},
  "gmp/gmp-6.1.2/mp_get_fns.c": {},
  "gmp/gmp-6.1.2/mp_minv_tab.c": {},
  "gmp/gmp-6.1.2/mp_set_fns.c": {},
  "gmp/gmp-6.1.2/nextprime.c": {
    "gmp_nextprime": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "gmp_init_primesieve": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/primesieve.c": {
    "bit_to_n": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        80,
        48
      ],
      "strings": []
    },
    "id_to_n": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        85,
        50
      ],
      "strings": []
    },
    "n_to_bit": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        89,
        47
      ],
      "strings": []
    },
    "primesieve_size": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        93,
        73
      ],
      "strings": []
    },
    "first_block_primesieve": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "block_resieve": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "gmp_primesieve": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tal-debug.c": {
    "__gmp_tmp_debug_mark": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": [
        "\"GNU MP: TMP_MARK(%s) but TMP_DECL(%s) is in scope\\n\"",
        "\"GNU MP: Repeat of TMP_MARK(%s)\\n\"",
        "\"previous was here\\n\""
      ]
    },
    "__gmp_tmp_debug_alloc": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": [
        "\"GNU MP: TMP_ALLOC without TMP_MARK(%s)\\n\""
      ]
    },
    "__gmp_tmp_debug_free": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": [
        "\"GNU MP: TMP_FREE(%s) without TMP_MARK(%s)\\n\"",
        "\"GNU MP: TMP_FREE(%s) when TMP_DECL(%s) is in scope\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tal-notreent.c": {
    "__gmp_tmp_alloc": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "__gmp_tmp_mark": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "__gmp_tmp_free": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tal-reent.c": {
    "__gmp_tmp_reentrant_alloc": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "__gmp_tmp_reentrant_free": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/version.c": {},
  "gmp/gmp-6.1.2/demos/factorize.c": {
    "factor_init": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "factor_clear": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "factor_insert": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "factor_insert_ui": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "factor_using_division": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"[trial division] \""
      ]
    },
    "mp_millerrabin": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": []
    },
    "mp_prime_p": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": [
        "\"Lucas prime test failure.  This should not happen\\n\""
      ]
    },
    "factor_using_pollard_rho": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": [
        "\"[pollard-rho (%lu)] \"",
        "\"[composite factor--restarting pollard-rho] \""
      ]
    },
    "factor": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": [
        "\"[is number prime?] \""
      ]
    },
    "main": {
      "start_point": [
        387,
        0
      ],
      "end_point": [
        446,
        1
      ],
      "strings": [
        "\"-v\"",
        "\"-w\"",
        "\"%Zd:\"",
        "\" %Zd\"",
        "\"\"",
        "\"%Zd:\"",
        "\" %Zd\"",
        "\"\""
      ]
    }
  },
  "gmp/gmp-6.1.2/demos/isprime.c": {
    "print_usage_and_exit": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": [
        "\"usage: %s -q nnn\\n\"",
        "\"usage: %s nnn ...\\n\""
      ]
    },
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"-q\"",
        "\" is composite\"",
        "\" is a probable prime\"",
        "\" is a prime\""
      ]
    }
  },
  "gmp/gmp-6.1.2/demos/pexpr.c": {
    "cputime": [
      {
        "start_point": [
          141,
          0
        ],
        "end_point": [
          148,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          151,
          0
        ],
        "end_point": [
          157,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          159,
          0
        ],
        "end_point": [
          163,
          1
        ],
        "strings": []
      }
    ],
    "stack_downwards_helper": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    },
    "stack_downwards_p": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": []
    },
    "setup_error_handler": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": [
        "\"sigaltstack\"",
        "\"sigstack\""
      ]
    },
    "main": {
      "start_point": [
        263,
        0
      ],
      "end_point": [
        485,
        1
      ],
      "strings": [
        "\"error: invalid output base\\n\"",
        "\"pexpr linked to gmp %s\\n\"",
        "\"-html\"",
        "\"<br>\"",
        "\"-wml\"",
        "\"<br/>\"",
        "\"-split\"",
        "\"-noprint\"",
        "\"error: unknown option `%s'\\n\"",
        "\"error: %s%s\\n\"",
        "\"       %s%s\\n\"",
        "\"       \"",
        "\"^\\n\"",
        "\"error: garbage where end of expression expected%s\\n\"",
        "\"       %s%s\\n\"",
        "\"        \"",
        "\"^\\n\"",
        "\"error: %s%s\\n\"",
        "\"       %s%s\\n\"",
        "\"       \"",
        "\"^\\n\"",
        "\"computation took %d ms%s\\n\"",
        "\"result is about %ld digits, not printing it%s\\n\"",
        "\"output conversion \"",
        "\"took %d ms%s\\n\"",
        "\"%s\\n\"",
        "\"%s\\n\"",
        "\"result is approximately %ld digits%s\\n\""
      ]
    },
    "expr": {
      "start_point": [
        487,
        0
      ],
      "end_point": [
        547,
        1
      ],
      "strings": [
        "\"plus\"",
        "\"minus\""
      ]
    },
    "term": {
      "start_point": [
        549,
        0
      ],
      "end_point": [
        634,
        1
      ],
      "strings": [
        "\"mul\"",
        "\"mod\"",
        "\"div\"",
        "\"rem\"",
        "\"invmod\"",
        "\"times\"",
        "\"thru\"",
        "\"through\""
      ]
    },
    "power": {
      "start_point": [
        636,
        0
      ],
      "end_point": [
        654,
        1
      ],
      "strings": []
    },
    "match": {
      "start_point": [
        656,
        0
      ],
      "end_point": [
        669,
        1
      ],
      "strings": []
    },
    "matchp": {
      "start_point": [
        671,
        0
      ],
      "end_point": [
        686,
        1
      ],
      "strings": []
    },
    "factor": {
      "start_point": [
        739,
        0
      ],
      "end_point": [
        852,
        1
      ],
      "strings": [
        "\"expected `)'\"",
        "\"expected `,' and another operand\"",
        "\"expected `)'\"",
        "\"expected `)'\"",
        "\"operand expected\""
      ]
    },
    "skipspace": {
      "start_point": [
        854,
        0
      ],
      "end_point": [
        860,
        1
      ],
      "strings": []
    },
    "makeexp": {
      "start_point": [
        864,
        0
      ],
      "end_point": [
        874,
        1
      ],
      "strings": []
    },
    "free_expr": {
      "start_point": [
        877,
        0
      ],
      "end_point": [
        890,
        1
      ],
      "strings": []
    },
    "mpz_eval_expr": {
      "start_point": [
        893,
        0
      ],
      "end_point": [
        1306,
        1
      ],
      "strings": [
        "\"result of `pow' operator too large\"",
        "\"cannot take square root of negative numbers\"",
        "\"cannot take non-positive root orders\"",
        "\"cannot take even root orders of negative numbers\"",
        "\"result of `!' operator too large\"",
        "\"logarithm of non-positive number\"",
        "\"logarithm of non-positive number\"",
        "\"logarithm base too large\"",
        "\"too large Mersenne number index\"",
        "\"too large Mersenne number index\"",
        "\"Fibonacci index out of range\"",
        "\"random number size out of range\"",
        "\"k too large in (n over k) expression\"",
        "\"time: %d\\n\""
      ]
    },
    "mpz_eval_mod_expr": {
      "start_point": [
        1309,
        0
      ],
      "end_point": [
        1360,
        1
      ],
      "strings": []
    },
    "cleanup_and_exit": {
      "start_point": [
        1362,
        0
      ],
      "end_point": [
        1379,
        1
      ],
      "strings": [
        "\"expression took too long to evaluate%s\\n\"",
        "\"divide by zero%s\\n\"",
        "\"expression required too much memory to evaluate%s\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/demos/primes.c": {
    "report": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"\\n\""
      ]
    },
    "main": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": [
        "\"-c\"",
        "\"-p\"",
        "\"-g\"",
        "\"usage: %s [-c] [-p] [-g] [from [+]]to\\n\"",
        "\"sieve_lim = %lu\\n\"",
        "\"n_primes = %lu (3..%u)\\n\"",
        "\"Sieving region [\"",
        "\",\"",
        "\"]\\n\"",
        "\"Pi(interval) = %lu\\n\"",
        "\"max gap: %lu\\n\""
      ]
    },
    "sieve_region": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": []
    },
    "find_primes": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": []
    },
    "make_primelist": {
      "start_point": [
        339,
        0
      ],
      "end_point": [
        386,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/demos/primes.h": {},
  "gmp/gmp-6.1.2/demos/qcn.c": {
    "prime_p": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "qcn_estimate": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "qcn_str": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\" is not supported (negatives only)\\n\"",
        "\" is not a discriminant (must == 0 or 1 mod 4)\\n\"",
        "\"h(\"",
        "\") approx %.1f\\n\""
      ]
    },
    "main": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": [
        "\"-p\"",
        "\"Missing argument to -p\\n\"",
        "\"-85702502803\"",
        "\"-328878692999\"",
        "\"-928185925902146563\"",
        "\"-84148631888752647283\""
      ]
    }
  },
  "gmp/gmp-6.1.2/demos/calc/calc-common.h": {},
  "gmp/gmp-6.1.2/demos/calc/calc.c": {
    "calc_help": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"Examples:\\n\"",
        "\"    2+3*4        expressions are evaluated\\n\"",
        "\"    x=5^6        variables a to z can be set and used\\n\"",
        "\"Operators:\\n\"",
        "\"    + - *        arithmetic\\n\"",
        "\"    / %%          division and remainder (rounding towards negative infinity)\\n\"",
        "\"    ^            exponentiation\\n\"",
        "\"    !            factorial\\n\"",
        "\"    << >>        left and right shifts\\n\"",
        "\"    <= >= >      \\\\ comparisons, giving 1 if true, 0 if false\\n\"",
        "\"    == != <      /\\n\"",
        "\"    && ||        logical and/or, giving 1 if true, 0 if false\\n\"",
        "\"Functions:\\n\"",
        "\"    abs(n)       absolute value\\n\"",
        "\"    bin(n,m)     binomial coefficient\\n\"",
        "\"    fib(n)       fibonacci number\\n\"",
        "\"    gcd(a,b,..)  greatest common divisor\\n\"",
        "\"    kron(a,b)    kronecker symbol\\n\"",
        "\"    lcm(a,b,..)  least common multiple\\n\"",
        "\"    lucnum(n)    lucas number\\n\"",
        "\"    nextprime(n) next prime after n\\n\"",
        "\"    powm(b,e,m)  modulo powering, b^e%%m\\n\"",
        "\"    root(n,r)    r-th root\\n\"",
        "\"    sqrt(n)      square root\\n\"",
        "\"Other:\\n\"",
        "\"    hex          \\\\ set hex or decimal for input and output\\n\"",
        "\"    decimal      /   (\\\"0x\\\" can be used for hex too)\\n\"",
        "\"    quit         exit program (EOF works too)\\n\"",
        "\"    ;            statements are separated with a ; or newline\\n\"",
        "\"    \\\\            continue expressions with \\\\ before newline\\n\"",
        "\"    # xxx        comments are # though to newline\\n\"",
        "\"Hex numbers must be entered in upper case, to distinguish them from the\\n\"",
        "\"variables a to f (like in bc).\\n\""
      ]
    },
    "yytnamerr": {
      "start_point": [
        1219,
        0
      ],
      "end_point": [
        1256,
        1
      ],
      "strings": []
    },
    "yysyntax_error": {
      "start_point": [
        1267,
        0
      ],
      "end_point": [
        1396,
        1
      ],
      "strings": [
        "\"syntax error\"",
        "\"syntax error, unexpected %s\"",
        "\"syntax error, unexpected %s, expecting %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s or %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s or %s or %s\""
      ]
    },
    "main": {
      "start_point": [
        2208,
        0
      ],
      "end_point": [
        2253,
        1
      ],
      "strings": [
        "\"--readline\"",
        "\"--noreadline\"",
        "\"--help\"",
        "\"Usage: calc [--option]...\\n\"",
        "\"  --readline    use readline\\n\"",
        "\"  --noreadline  don't use readline\\n\"",
        "\"  --help        this message\\n\"",
        "\"Readline is only available when compiled in,\\n\"",
        "\"and in that case it's the default on a tty.\\n\"",
        "\"Unrecognised option: %s\\n\"",
        "\"Readline support not available\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/demos/calc/calc.h": {},
  "gmp/gmp-6.1.2/demos/calc/calc.y": {
    "calc_help": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"Examples:\\n\"",
        "\"    2+3*4        expressions are evaluated\\n\"",
        "\"    x=5^6        variables a to z can be set and used\\n\"",
        "\"Operators:\\n\"",
        "\"    + - *        arithmetic\\n\"",
        "\"    / %%          division and remainder (rounding towards negative infinity)\\n\"",
        "\"    ^            exponentiation\\n\"",
        "\"    !            factorial\\n\"",
        "\"    << >>        left and right shifts\\n\"",
        "\"    <= >= >      \\\\ comparisons, giving 1 if true, 0 if false\\n\"",
        "\"    == != <      /\\n\"",
        "\"    && ||        logical and/or, giving 1 if true, 0 if false\\n\"",
        "\"Functions:\\n\"",
        "\"    abs(n)       absolute value\\n\"",
        "\"    bin(n,m)     binomial coefficient\\n\"",
        "\"    fib(n)       fibonacci number\\n\"",
        "\"    gcd(a,b,..)  greatest common divisor\\n\"",
        "\"    kron(a,b)    kronecker symbol\\n\"",
        "\"    lcm(a,b,..)  least common multiple\\n\"",
        "\"    lucnum(n)    lucas number\\n\"",
        "\"    nextprime(n) next prime after n\\n\"",
        "\"    powm(b,e,m)  modulo powering, b^e%%m\\n\"",
        "\"    root(n,r)    r-th root\\n\"",
        "\"    sqrt(n)      square root\\n\"",
        "\"Other:\\n\"",
        "\"    hex          \\\\ set hex or decimal for input and output\\n\"",
        "\"    decimal      /   (\\\"0x\\\" can be used for hex too)\\n\"",
        "\"    quit         exit program (EOF works too)\\n\"",
        "\"    ;            statements are separated with a ; or newline\\n\"",
        "\"    \\\\            continue expressions with \\\\ before newline\\n\"",
        "\"    # xxx        comments are # though to newline\\n\"",
        "\"Hex numbers must be entered in upper case, to distinguish them from the\\n\"",
        "\"variables a to f (like in bc).\\n\""
      ]
    },
    "token": [
      {
        "start_point": [
          171,
          15
        ],
        "end_point": [
          172,
          41
        ],
        "strings": []
      },
      {
        "start_point": [
          204,
          6
        ],
        "end_point": [
          205,
          69
        ],
        "strings": [
          "\"Shift count\""
        ]
      },
      {
        "start_point": [
          206,
          6
        ],
        "end_point": [
          207,
          72
        ],
        "strings": [
          "\"Shift count\""
        ]
      },
      {
        "start_point": [
          213,
          6
        ],
        "end_point": [
          213,
          69
        ],
        "strings": []
      },
      {
        "start_point": [
          214,
          6
        ],
        "end_point": [
          214,
          69
        ],
        "strings": []
      },
      {
        "start_point": [
          215,
          6
        ],
        "end_point": [
          215,
          69
        ],
        "strings": []
      },
      {
        "start_point": [
          216,
          6
        ],
        "end_point": [
          216,
          69
        ],
        "strings": []
      },
      {
        "start_point": [
          219,
          6
        ],
        "end_point": [
          219,
          76
        ],
        "strings": []
      },
      {
        "start_point": [
          220,
          6
        ],
        "end_point": [
          220,
          76
        ],
        "strings": []
      }
    ],
    "main": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": [
        "\"--readline\"",
        "\"--noreadline\"",
        "\"--help\"",
        "\"Usage: calc [--option]...\\n\"",
        "\"  --readline    use readline\\n\"",
        "\"  --noreadline  don't use readline\\n\"",
        "\"  --help        this message\\n\"",
        "\"Readline is only available when compiled in,\\n\"",
        "\"and in that case it's the default on a tty.\\n\"",
        "\"Unrecognised option: %s\\n\"",
        "\"Readline support not available\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/demos/calc/calclex.c": {
    "yy_get_next_buffer": {
      "start_point": [
        944,
        0
      ],
      "end_point": [
        1072,
        2
      ],
      "strings": [
        "\"fatal flex scanner internal error--end of buffer missed\"",
        "\"input buffer overflow, can't enlarge buffer because scanner uses REJECT\"",
        "\"fatal error - scanner input buffer overflow\""
      ]
    },
    "yy_get_previous_state": {
      "start_point": [
        1080,
        0
      ],
      "end_point": [
        1106,
        2
      ],
      "strings": []
    },
    "yy_load_buffer_state": {
      "start_point": [
        1316,
        0
      ],
      "end_point": [
        1323,
        2
      ],
      "strings": []
    },
    "yy_pop_state": {
      "start_point": [
        1572,
        0
      ],
      "end_point": [
        1579,
        2
      ],
      "strings": [
        "\"start-condition stack underflow\""
      ]
    },
    "yy_top_state": {
      "start_point": [
        1587,
        0
      ],
      "end_point": [
        1591,
        2
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        1701,
        0
      ],
      "end_point": [
        1705,
        2
      ],
      "strings": []
    },
    "yywrap": {
      "start_point": [
        1710,
        0
      ],
      "end_point": [
        1714,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/demos/calc/calclex.l": {
    "yywrap": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/demos/calc/calcread.c": {
    "calc_completion_entry": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"calc_completion_entry %s %d, index=%d len=%d\\n\""
      ]
    },
    "calc_init_readline": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"calc_option_readline %d\\n\"",
        "\"GNU MP demo calculator program, gmp version %s\\n\"",
        "\"Type \\\"help\\\" for help.\\n\"",
        "\"gmp-calc\""
      ]
    },
    "calc_input": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": [
        "\"more> \"",
        "\"> \"",
        "\"readline: %s\\n\""
      ]
    },
    "input": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/demos/expr/expr-impl.h": {},
  "gmp/gmp-6.1.2/demos/expr/expr.c": {
    "lookahead": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": [
        "\"lookahead EOF\\n\"",
        "\"lookahead at: \\\"%.*s\\\" length %u, word %u\\n\"",
        "\"new\\n\"",
        "\"end of string expecting a variable\"",
        "\"bad variable name\"",
        "\"lookahead function: %s\\n\"",
        "\"lookahead operator: %s\\n\"",
        "\"lookahead number\"",
        "\"NULL variable\"",
        "\"lookahead variable: var[%d] = \"",
        "\"\"",
        "\"no token matched\""
      ]
    },
    "mpexpr_evaluate": {
      "start_point": [
        369,
        0
      ],
      "end_point": [
        833,
        1
      ],
      "strings": [
        "\"mpexpr_evaluate() base %d \\\"%.*s\\\"\\n\"",
        "\"DONE\"",
        "\"another expr\\n\"",
        "\"operator %s\\n\"",
        "\"expected a prefix operator\"",
        "\"expected open paren for function\"",
        "\"open paren for function \\\"%s\\\"\\n\"",
        "\"expected close paren for 0ary function\"",
        "\"unrecognised start of expression\"",
        "\"another operator maybe: %s\\n\"",
        "\"defer operator: %s (prec %d vs %d, type 0x%X)\\n\"",
        "\"ARGSEP not in a function call\"",
        "\"argsep for function \\\"%s\\\"(%d)\\n\"",
        "\"    will reduce pairwise now\\n\"",
        "\"postfix unary operator: %s\\n\"",
        "\"prefix unary operator used postfix\"",
        "\"unrecognised operator \\\"%s\\\" type: 0x%X\"",
        "\"\"",
        "\"expecting an operator, got token %d\"",
        "\"\"",
        "\"apply control: nested %d, \\\"%s\\\" 0x%X, %d args\\n\"",
        "\"apply 0x%X-ary\\n\"",
        "\"unrecognised 0ary argument calling style\"",
        "\"unary\"",
        "\"before\"",
        "\"special done\\n\"",
        "\"special logical not\\n\"",
        "\"close paren matching open paren\\n\"",
        "\"close paren for function\\n\"",
        "\"unexpected close paren\"",
        "\"unrecognised special unary operator 0x%X\"",
        "\"\"",
        "\"unrecognised unary argument calling style\"",
        "\"binary\"",
        "\"lhs\"",
        "\"rhs\"",
        "\"'?' without ':'\"",
        "\"special colon\\n\"",
        "\"':' without '?'\"",
        "\"query\"",
        "\"true\"",
        "\"false\"",
        "\"special logical and\\n\"",
        "\"special logical and\\n\"",
        "\"special max\\n\"",
        "\"special min\\n\"",
        "\"unrecognised special binary operator\"",
        "\"unrecognised binary argument calling style\"",
        "\"ternary\"",
        "\"arg1\"",
        "\"arg2\"",
        "\"arg3\"",
        "\"unrecognised binary argument calling style\"",
        "\"unrecognised operator type: 0x%X\\n\"",
        "\"\"",
        "\"result\"",
        "\"data stack want top at 0, got %d\\n\"",
        "\"clear %d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/demos/expr/expr.h": {},
  "gmp/gmp-6.1.2/demos/expr/exprf.c": {
    "e_mpf_sgn": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "mpf_expr": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": [
        "\"mpf_expr(): base %d, %s\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/demos/expr/exprfa.c": {
    "e_mpf_number": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": [
        "\"mpf_number base=%d \\\"%.*s\\\"\\n\"",
        "\"  parsed i=%u \\\"%.*s\\\"\\n\""
      ]
    },
    "e_mpf_ulong_p": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "e_mpf_set_or_swap": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "mpf_expr_a": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/demos/expr/exprq.c": {
    "e_mpq_pow_ui": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "e_mpq_sgn": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "e_mpq_equal": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "e_mpq_notequal": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "e_mpq_num": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "e_mpq_den": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "mpq_expr": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": [
        "\"mpq_expr(): base %d, %s\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/demos/expr/exprqa.c": {
    "e_mpq_ulong_p": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "e_mpq_get_ui_fits": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "e_mpq_set_si1": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "e_mpq_number": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "e_mpq_init": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "mpq_expr_a": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/demos/expr/exprv.c": {
    "mpexpr_va_to_var": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/demos/expr/exprz.c": {
    "e_mpz_sgn": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "e_mpz_odd_p": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "e_mpz_even_p": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "e_mpz_hamdist": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "e_mpz_popcount": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "e_mpz_scan0": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "e_mpz_scan1": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "e_mpz_setbit": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "e_mpz_clrbit": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "mpz_expr": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": [
        "\"mpz_expr(): base %d, %s\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/demos/expr/exprza.c": {
    "mpexpr_mpz_number": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "e_mpz_init": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "mpz_expr_a": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/demos/expr/run-expr.c": {
    "run_expr": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": [
        "\"\\\"%s\\\" base %d: \"",
        "\"result \"",
        "\"\\n\"",
        "\"invalid (return code %d)\\n\"",
        "\"\\\"%s\\\" base %d: \"",
        "\"result \"",
        "\"\\n\"",
        "\"invalid (return code %d)\\n\"",
        "\"\\\"%s\\\" base %d: \"",
        "\"result \"",
        "\"\\n\"",
        "\"invalid (return code %d)\\n\""
      ]
    },
    "main": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": [
        "\"Need argument for -%c\\n\"",
        "\"Unrecognised option --%s\\n\"",
        "\"Unrecognised option -%c\\n\"",
        "\"Usage: %s [-z] [-q] [-f] [-p prec] [-b base] expression...\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/demos/expr/t-expr.c": {
    "check_z": {
      "start_point": [
        273,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": [
        "\"mpz_expr \\\"%s\\\"\\n\"",
        "\"mpz_expr wrong return value, got %d, expected failure\\n\"",
        "\"Cannot parse wanted value string\\n\"",
        "\"mpz_expr failed unexpectedly\\n\"",
        "\"   return value %d\\n\"",
        "\"mpz_expr wrong result\\n\"",
        "\"   got  \"",
        "\"\\n\"",
        "\"   want \"",
        "\"\\n\"",
        "\"   base %d\\n\"",
        "\"   expr \\\"%s\\\"\\n\"",
        "\"   want \\\"%s\\\"\\n\""
      ]
    },
    "check_q": {
      "start_point": [
        344,
        0
      ],
      "end_point": [
        418,
        1
      ],
      "strings": [
        "\"mpq_expr \\\"%s\\\"\\n\"",
        "\"mpq_expr wrong return value, got %d, expected failure\\n\"",
        "\"Cannot parse wanted value string\\n\"",
        "\"mpq_expr failed unexpectedly\\n\"",
        "\"   return value %d\\n\"",
        "\"mpq_expr wrong result\\n\"",
        "\"   got  \"",
        "\"\\n\"",
        "\"   want \"",
        "\"\\n\"",
        "\"   base %d\\n\"",
        "\"   expr \\\"%s\\\"\\n\"",
        "\"   want \\\"%s\\\"\\n\""
      ]
    },
    "check_f": {
      "start_point": [
        420,
        0
      ],
      "end_point": [
        492,
        1
      ],
      "strings": [
        "\"mpf_expr \\\"%s\\\"\\n\"",
        "\"mpf_expr wrong return value, got %d, expected failure\\n\"",
        "\"Cannot parse wanted value string\\n\"",
        "\"mpf_expr failed unexpectedly\\n\"",
        "\"   return value %d\\n\"",
        "\"mpf_expr wrong result\\n\"",
        "\"   got  \"",
        "\"\\n\"",
        "\"   want \"",
        "\"\\n\"",
        "\"   base %d\\n\"",
        "\"   expr \\\"%s\\\"\\n\"",
        "\"   want \\\"%s\\\"\\n\""
      ]
    },
    "main": {
      "start_point": [
        495,
        0
      ],
      "end_point": [
        509,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/mini-gmp.c": {
    "gmp_die": {
      "start_point": [
        244,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": [
        "\"%s\\n\""
      ]
    },
    "gmp_default_alloc": {
      "start_point": [
        251,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": [
        "\"gmp_default_alloc: Virtual memory exhausted.\""
      ]
    },
    "gmp_default_realloc": {
      "start_point": [
        265,
        0
      ],
      "end_point": [
        276,
        1
      ],
      "strings": [
        "\"gmp_default_realloc: Virtual memory exhausted.\""
      ]
    },
    "gmp_default_free": {
      "start_point": [
        278,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": []
    },
    "mp_get_memory_functions": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": []
    },
    "mp_set_memory_functions": {
      "start_point": [
        303,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": []
    },
    "gmp_xalloc_limbs": {
      "start_point": [
        323,
        0
      ],
      "end_point": [
        327,
        1
      ],
      "strings": []
    },
    "gmp_xrealloc_limbs": {
      "start_point": [
        329,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "mpn_copyi": {
      "start_point": [
        339,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": []
    },
    "mpn_copyd": {
      "start_point": [
        347,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": []
    },
    "mpn_cmp": {
      "start_point": [
        354,
        0
      ],
      "end_point": [
        363,
        1
      ],
      "strings": []
    },
    "mpn_cmp4": {
      "start_point": [
        365,
        0
      ],
      "end_point": [
        372,
        1
      ],
      "strings": []
    },
    "mpn_normalized_size": {
      "start_point": [
        374,
        0
      ],
      "end_point": [
        380,
        1
      ],
      "strings": []
    },
    "mpn_zero_p": {
      "start_point": [
        382,
        0
      ],
      "end_point": [
        386,
        1
      ],
      "strings": []
    },
    "mpn_zero": {
      "start_point": [
        388,
        0
      ],
      "end_point": [
        393,
        1
      ],
      "strings": []
    },
    "mpn_add_1": {
      "start_point": [
        395,
        0
      ],
      "end_point": [
        412,
        1
      ],
      "strings": []
    },
    "mpn_add_n": {
      "start_point": [
        414,
        0
      ],
      "end_point": [
        431,
        1
      ],
      "strings": []
    },
    "mpn_add": {
      "start_point": [
        433,
        0
      ],
      "end_point": [
        444,
        1
      ],
      "strings": []
    },
    "mpn_sub_1": {
      "start_point": [
        446,
        0
      ],
      "end_point": [
        465,
        1
      ],
      "strings": []
    },
    "mpn_sub_n": {
      "start_point": [
        467,
        0
      ],
      "end_point": [
        483,
        1
      ],
      "strings": []
    },
    "mpn_sub": {
      "start_point": [
        485,
        0
      ],
      "end_point": [
        496,
        1
      ],
      "strings": []
    },
    "mpn_mul_1": {
      "start_point": [
        498,
        0
      ],
      "end_point": [
        519,
        1
      ],
      "strings": []
    },
    "mpn_addmul_1": {
      "start_point": [
        521,
        0
      ],
      "end_point": [
        545,
        1
      ],
      "strings": []
    },
    "mpn_submul_1": {
      "start_point": [
        547,
        0
      ],
      "end_point": [
        571,
        1
      ],
      "strings": []
    },
    "mpn_mul": {
      "start_point": [
        573,
        0
      ],
      "end_point": [
        594,
        1
      ],
      "strings": []
    },
    "mpn_mul_n": {
      "start_point": [
        596,
        0
      ],
      "end_point": [
        600,
        1
      ],
      "strings": []
    },
    "mpn_sqr": {
      "start_point": [
        602,
        0
      ],
      "end_point": [
        606,
        1
      ],
      "strings": []
    },
    "mpn_lshift": {
      "start_point": [
        608,
        0
      ],
      "end_point": [
        636,
        1
      ],
      "strings": []
    },
    "mpn_rshift": {
      "start_point": [
        638,
        0
      ],
      "end_point": [
        663,
        1
      ],
      "strings": []
    },
    "mpn_common_scan": {
      "start_point": [
        665,
        0
      ],
      "end_point": [
        683,
        1
      ],
      "strings": []
    },
    "mpn_scan1": {
      "start_point": [
        685,
        0
      ],
      "end_point": [
        693,
        1
      ],
      "strings": []
    },
    "mpn_scan0": {
      "start_point": [
        695,
        0
      ],
      "end_point": [
        703,
        1
      ],
      "strings": []
    },
    "mpn_com": {
      "start_point": [
        705,
        0
      ],
      "end_point": [
        710,
        1
      ],
      "strings": []
    },
    "mpn_neg": {
      "start_point": [
        712,
        0
      ],
      "end_point": [
        725,
        1
      ],
      "strings": []
    },
    "mpn_invert_3by2": {
      "start_point": [
        734,
        0
      ],
      "end_point": [
        838,
        1
      ],
      "strings": []
    },
    "mpn_div_qr_1_invert": {
      "start_point": [
        850,
        0
      ],
      "end_point": [
        860,
        1
      ],
      "strings": []
    },
    "mpn_div_qr_2_invert": {
      "start_point": [
        862,
        0
      ],
      "end_point": [
        879,
        1
      ],
      "strings": []
    },
    "mpn_div_qr_invert": {
      "start_point": [
        881,
        0
      ],
      "end_point": [
        910,
        1
      ],
      "strings": []
    },
    "mpn_div_qr_1_preinv": {
      "start_point": [
        914,
        0
      ],
      "end_point": [
        945,
        1
      ],
      "strings": []
    },
    "mpn_div_qr_1": {
      "start_point": [
        947,
        0
      ],
      "end_point": [
        975,
        1
      ],
      "strings": []
    },
    "mpn_div_qr_2_preinv": {
      "start_point": [
        977,
        0
      ],
      "end_point": [
        1026,
        1
      ],
      "strings": []
    },
    "mpn_div_qr_2": {
      "start_point": [
        1029,
        0
      ],
      "end_point": [
        1038,
        1
      ],
      "strings": []
    },
    "mpn_div_qr_pi1": {
      "start_point": [
        1041,
        0
      ],
      "end_point": [
        1102,
        1
      ],
      "strings": []
    },
    "mpn_div_qr_preinv": {
      "start_point": [
        1104,
        0
      ],
      "end_point": [
        1136,
        1
      ],
      "strings": []
    },
    "mpn_div_qr": {
      "start_point": [
        1138,
        0
      ],
      "end_point": [
        1157,
        1
      ],
      "strings": []
    },
    "mpn_base_power_of_two_p": {
      "start_point": [
        1161,
        0
      ],
      "end_point": [
        1176,
        1
      ],
      "strings": []
    },
    "mpn_get_base_info": {
      "start_point": [
        1186,
        0
      ],
      "end_point": [
        1199,
        1
      ],
      "strings": []
    },
    "mpn_limb_size_in_base_2": {
      "start_point": [
        1201,
        0
      ],
      "end_point": [
        1209,
        1
      ],
      "strings": []
    },
    "mpn_get_str_bits": {
      "start_point": [
        1211,
        0
      ],
      "end_point": [
        1238,
        1
      ],
      "strings": []
    },
    "mpn_limb_get_str": {
      "start_point": [
        1242,
        0
      ],
      "end_point": [
        1261,
        1
      ],
      "strings": []
    },
    "mpn_get_str_other": {
      "start_point": [
        1263,
        0
      ],
      "end_point": [
        1305,
        1
      ],
      "strings": []
    },
    "mpn_get_str": {
      "start_point": [
        1307,
        0
      ],
      "end_point": [
        1325,
        1
      ],
      "strings": []
    },
    "mpn_set_str_bits": {
      "start_point": [
        1327,
        0
      ],
      "end_point": [
        1356,
        1
      ],
      "strings": []
    },
    "mpn_set_str_other": {
      "start_point": [
        1360,
        0
      ],
      "end_point": [
        1396,
        1
      ],
      "strings": []
    },
    "mpn_set_str": {
      "start_point": [
        1398,
        0
      ],
      "end_point": [
        1416,
        1
      ],
      "strings": []
    },
    "mpz_init": {
      "start_point": [
        1420,
        0
      ],
      "end_point": [
        1428,
        1
      ],
      "strings": []
    },
    "mpz_init2": {
      "start_point": [
        1432,
        0
      ],
      "end_point": [
        1443,
        1
      ],
      "strings": []
    },
    "mpz_clear": {
      "start_point": [
        1445,
        0
      ],
      "end_point": [
        1450,
        1
      ],
      "strings": []
    },
    "mpz_realloc": {
      "start_point": [
        1452,
        0
      ],
      "end_point": [
        1467,
        1
      ],
      "strings": []
    },
    "mpz_set_si": {
      "start_point": [
        1475,
        0
      ],
      "end_point": [
        1485,
        1
      ],
      "strings": []
    },
    "mpz_set_ui": {
      "start_point": [
        1487,
        0
      ],
      "end_point": [
        1497,
        1
      ],
      "strings": []
    },
    "mpz_set": {
      "start_point": [
        1499,
        0
      ],
      "end_point": [
        1514,
        1
      ],
      "strings": []
    },
    "mpz_init_set_si": {
      "start_point": [
        1516,
        0
      ],
      "end_point": [
        1521,
        1
      ],
      "strings": []
    },
    "mpz_init_set_ui": {
      "start_point": [
        1523,
        0
      ],
      "end_point": [
        1528,
        1
      ],
      "strings": []
    },
    "mpz_init_set": {
      "start_point": [
        1530,
        0
      ],
      "end_point": [
        1535,
        1
      ],
      "strings": []
    },
    "mpz_fits_slong_p": {
      "start_point": [
        1537,
        0
      ],
      "end_point": [
        1548,
        1
      ],
      "strings": []
    },
    "mpz_fits_ulong_p": {
      "start_point": [
        1550,
        0
      ],
      "end_point": [
        1556,
        1
      ],
      "strings": []
    },
    "mpz_get_si": {
      "start_point": [
        1558,
        0
      ],
      "end_point": [
        1566,
        1
      ],
      "strings": []
    },
    "mpz_get_ui": {
      "start_point": [
        1568,
        0
      ],
      "end_point": [
        1572,
        1
      ],
      "strings": []
    },
    "mpz_size": {
      "start_point": [
        1574,
        0
      ],
      "end_point": [
        1578,
        1
      ],
      "strings": []
    },
    "mpz_getlimbn": {
      "start_point": [
        1580,
        0
      ],
      "end_point": [
        1587,
        1
      ],
      "strings": []
    },
    "mpz_realloc2": {
      "start_point": [
        1589,
        0
      ],
      "end_point": [
        1593,
        1
      ],
      "strings": []
    },
    "mpz_limbs_read": {
      "start_point": [
        1595,
        0
      ],
      "end_point": [
        1599,
        1
      ],
      "strings": []
    },
    "mpz_limbs_modify": {
      "start_point": [
        1601,
        0
      ],
      "end_point": [
        1606,
        1
      ],
      "strings": []
    },
    "mpz_limbs_write": {
      "start_point": [
        1608,
        0
      ],
      "end_point": [
        1612,
        1
      ],
      "strings": []
    },
    "mpz_limbs_finish": {
      "start_point": [
        1614,
        0
      ],
      "end_point": [
        1620,
        1
      ],
      "strings": []
    },
    "mpz_roinit_n": {
      "start_point": [
        1622,
        0
      ],
      "end_point": [
        1629,
        1
      ],
      "strings": []
    },
    "mpz_set_d": {
      "start_point": [
        1633,
        0
      ],
      "end_point": [
        1682,
        1
      ],
      "strings": []
    },
    "mpz_init_set_d": {
      "start_point": [
        1684,
        0
      ],
      "end_point": [
        1689,
        1
      ],
      "strings": []
    },
    "mpz_get_d": {
      "start_point": [
        1691,
        0
      ],
      "end_point": [
        1711,
        1
      ],
      "strings": []
    },
    "mpz_cmpabs_d": {
      "start_point": [
        1713,
        0
      ],
      "end_point": [
        1752,
        1
      ],
      "strings": []
    },
    "mpz_cmp_d": {
      "start_point": [
        1754,
        0
      ],
      "end_point": [
        1771,
        1
      ],
      "strings": []
    },
    "mpz_sgn": {
      "start_point": [
        1775,
        0
      ],
      "end_point": [
        1779,
        1
      ],
      "strings": []
    },
    "mpz_cmp_si": {
      "start_point": [
        1781,
        0
      ],
      "end_point": [
        1794,
        1
      ],
      "strings": []
    },
    "mpz_cmp_ui": {
      "start_point": [
        1796,
        0
      ],
      "end_point": [
        1807,
        1
      ],
      "strings": []
    },
    "mpz_cmp": {
      "start_point": [
        1809,
        0
      ],
      "end_point": [
        1821,
        1
      ],
      "strings": []
    },
    "mpz_cmpabs_ui": {
      "start_point": [
        1823,
        0
      ],
      "end_point": [
        1830,
        1
      ],
      "strings": []
    },
    "mpz_cmpabs": {
      "start_point": [
        1832,
        0
      ],
      "end_point": [
        1837,
        1
      ],
      "strings": []
    },
    "mpz_abs": {
      "start_point": [
        1839,
        0
      ],
      "end_point": [
        1844,
        1
      ],
      "strings": []
    },
    "mpz_neg": {
      "start_point": [
        1846,
        0
      ],
      "end_point": [
        1851,
        1
      ],
      "strings": []
    },
    "mpz_swap": {
      "start_point": [
        1853,
        0
      ],
      "end_point": [
        1859,
        1
      ],
      "strings": []
    },
    "mpz_abs_add_ui": {
      "start_point": [
        1865,
        0
      ],
      "end_point": [
        1886,
        1
      ],
      "strings": []
    },
    "mpz_abs_sub_ui": {
      "start_point": [
        1890,
        0
      ],
      "end_point": [
        1912,
        1
      ],
      "strings": []
    },
    "mpz_add_ui": {
      "start_point": [
        1914,
        0
      ],
      "end_point": [
        1921,
        1
      ],
      "strings": []
    },
    "mpz_sub_ui": {
      "start_point": [
        1923,
        0
      ],
      "end_point": [
        1930,
        1
      ],
      "strings": []
    },
    "mpz_ui_sub": {
      "start_point": [
        1932,
        0
      ],
      "end_point": [
        1939,
        1
      ],
      "strings": []
    },
    "mpz_abs_add": {
      "start_point": [
        1941,
        0
      ],
      "end_point": [
        1961,
        1
      ],
      "strings": []
    },
    "mpz_abs_sub": {
      "start_point": [
        1963,
        0
      ],
      "end_point": [
        1986,
        1
      ],
      "strings": []
    },
    "mpz_add": {
      "start_point": [
        1988,
        0
      ],
      "end_point": [
        1999,
        1
      ],
      "strings": []
    },
    "mpz_sub": {
      "start_point": [
        2001,
        0
      ],
      "end_point": [
        2012,
        1
      ],
      "strings": []
    },
    "mpz_mul_si": {
      "start_point": [
        2016,
        0
      ],
      "end_point": [
        2026,
        1
      ],
      "strings": []
    },
    "mpz_mul_ui": {
      "start_point": [
        2028,
        0
      ],
      "end_point": [
        2051,
        1
      ],
      "strings": []
    },
    "mpz_mul": {
      "start_point": [
        2053,
        0
      ],
      "end_point": [
        2089,
        1
      ],
      "strings": []
    },
    "mpz_mul_2exp": {
      "start_point": [
        2091,
        0
      ],
      "end_point": [
        2123,
        1
      ],
      "strings": []
    },
    "mpz_addmul_ui": {
      "start_point": [
        2125,
        0
      ],
      "end_point": [
        2133,
        1
      ],
      "strings": []
    },
    "mpz_submul_ui": {
      "start_point": [
        2135,
        0
      ],
      "end_point": [
        2143,
        1
      ],
      "strings": []
    },
    "mpz_addmul": {
      "start_point": [
        2145,
        0
      ],
      "end_point": [
        2153,
        1
      ],
      "strings": []
    },
    "mpz_submul": {
      "start_point": [
        2155,
        0
      ],
      "end_point": [
        2163,
        1
      ],
      "strings": []
    },
    "mpz_div_qr": {
      "start_point": [
        2170,
        0
      ],
      "end_point": [
        2280,
        1
      ],
      "strings": [
        "\"mpz_div_qr: Divide by zero.\""
      ]
    },
    "mpz_cdiv_qr": {
      "start_point": [
        2282,
        0
      ],
      "end_point": [
        2286,
        1
      ],
      "strings": []
    },
    "mpz_fdiv_qr": {
      "start_point": [
        2288,
        0
      ],
      "end_point": [
        2292,
        1
      ],
      "strings": []
    },
    "mpz_tdiv_qr": {
      "start_point": [
        2294,
        0
      ],
      "end_point": [
        2298,
        1
      ],
      "strings": []
    },
    "mpz_cdiv_q": {
      "start_point": [
        2300,
        0
      ],
      "end_point": [
        2304,
        1
      ],
      "strings": []
    },
    "mpz_fdiv_q": {
      "start_point": [
        2306,
        0
      ],
      "end_point": [
        2310,
        1
      ],
      "strings": []
    },
    "mpz_tdiv_q": {
      "start_point": [
        2312,
        0
      ],
      "end_point": [
        2316,
        1
      ],
      "strings": []
    },
    "mpz_cdiv_r": {
      "start_point": [
        2318,
        0
      ],
      "end_point": [
        2322,
        1
      ],
      "strings": []
    },
    "mpz_fdiv_r": {
      "start_point": [
        2324,
        0
      ],
      "end_point": [
        2328,
        1
      ],
      "strings": []
    },
    "mpz_tdiv_r": {
      "start_point": [
        2330,
        0
      ],
      "end_point": [
        2334,
        1
      ],
      "strings": []
    },
    "mpz_mod": {
      "start_point": [
        2336,
        0
      ],
      "end_point": [
        2340,
        1
      ],
      "strings": []
    },
    "mpz_div_q_2exp": {
      "start_point": [
        2342,
        0
      ],
      "end_point": [
        2394,
        1
      ],
      "strings": []
    },
    "mpz_div_r_2exp": {
      "start_point": [
        2396,
        0
      ],
      "end_point": [
        2464,
        1
      ],
      "strings": []
    },
    "mpz_cdiv_q_2exp": {
      "start_point": [
        2466,
        0
      ],
      "end_point": [
        2470,
        1
      ],
      "strings": []
    },
    "mpz_fdiv_q_2exp": {
      "start_point": [
        2472,
        0
      ],
      "end_point": [
        2476,
        1
      ],
      "strings": []
    },
    "mpz_tdiv_q_2exp": {
      "start_point": [
        2478,
        0
      ],
      "end_point": [
        2482,
        1
      ],
      "strings": []
    },
    "mpz_cdiv_r_2exp": {
      "start_point": [
        2484,
        0
      ],
      "end_point": [
        2488,
        1
      ],
      "strings": []
    },
    "mpz_fdiv_r_2exp": {
      "start_point": [
        2490,
        0
      ],
      "end_point": [
        2494,
        1
      ],
      "strings": []
    },
    "mpz_tdiv_r_2exp": {
      "start_point": [
        2496,
        0
      ],
      "end_point": [
        2500,
        1
      ],
      "strings": []
    },
    "mpz_divexact": {
      "start_point": [
        2502,
        0
      ],
      "end_point": [
        2506,
        1
      ],
      "strings": []
    },
    "mpz_divisible_p": {
      "start_point": [
        2508,
        0
      ],
      "end_point": [
        2512,
        1
      ],
      "strings": []
    },
    "mpz_congruent_p": {
      "start_point": [
        2514,
        0
      ],
      "end_point": [
        2530,
        1
      ],
      "strings": []
    },
    "mpz_div_qr_ui": {
      "start_point": [
        2532,
        0
      ],
      "end_point": [
        2586,
        1
      ],
      "strings": []
    },
    "mpz_cdiv_qr_ui": {
      "start_point": [
        2588,
        0
      ],
      "end_point": [
        2592,
        1
      ],
      "strings": []
    },
    "mpz_fdiv_qr_ui": {
      "start_point": [
        2594,
        0
      ],
      "end_point": [
        2598,
        1
      ],
      "strings": []
    },
    "mpz_tdiv_qr_ui": {
      "start_point": [
        2600,
        0
      ],
      "end_point": [
        2604,
        1
      ],
      "strings": []
    },
    "mpz_cdiv_q_ui": {
      "start_point": [
        2606,
        0
      ],
      "end_point": [
        2610,
        1
      ],
      "strings": []
    },
    "mpz_fdiv_q_ui": {
      "start_point": [
        2612,
        0
      ],
      "end_point": [
        2616,
        1
      ],
      "strings": []
    },
    "mpz_tdiv_q_ui": {
      "start_point": [
        2618,
        0
      ],
      "end_point": [
        2622,
        1
      ],
      "strings": []
    },
    "mpz_cdiv_r_ui": {
      "start_point": [
        2624,
        0
      ],
      "end_point": [
        2628,
        1
      ],
      "strings": []
    },
    "mpz_fdiv_r_ui": {
      "start_point": [
        2629,
        0
      ],
      "end_point": [
        2633,
        1
      ],
      "strings": []
    },
    "mpz_tdiv_r_ui": {
      "start_point": [
        2634,
        0
      ],
      "end_point": [
        2638,
        1
      ],
      "strings": []
    },
    "mpz_cdiv_ui": {
      "start_point": [
        2640,
        0
      ],
      "end_point": [
        2644,
        1
      ],
      "strings": []
    },
    "mpz_fdiv_ui": {
      "start_point": [
        2646,
        0
      ],
      "end_point": [
        2650,
        1
      ],
      "strings": []
    },
    "mpz_tdiv_ui": {
      "start_point": [
        2652,
        0
      ],
      "end_point": [
        2656,
        1
      ],
      "strings": []
    },
    "mpz_mod_ui": {
      "start_point": [
        2658,
        0
      ],
      "end_point": [
        2662,
        1
      ],
      "strings": []
    },
    "mpz_divexact_ui": {
      "start_point": [
        2664,
        0
      ],
      "end_point": [
        2668,
        1
      ],
      "strings": []
    },
    "mpz_divisible_ui_p": {
      "start_point": [
        2670,
        0
      ],
      "end_point": [
        2674,
        1
      ],
      "strings": []
    },
    "mpn_gcd_11": {
      "start_point": [
        2678,
        0
      ],
      "end_point": [
        2719,
        1
      ],
      "strings": []
    },
    "mpz_gcd_ui": {
      "start_point": [
        2721,
        0
      ],
      "end_point": [
        2742,
        1
      ],
      "strings": []
    },
    "mpz_make_odd": {
      "start_point": [
        2744,
        0
      ],
      "end_point": [
        2755,
        1
      ],
      "strings": []
    },
    "mpz_gcd": {
      "start_point": [
        2757,
        0
      ],
      "end_point": [
        2818,
        1
      ],
      "strings": []
    },
    "mpz_gcdext": {
      "start_point": [
        2820,
        0
      ],
      "end_point": [
        3000,
        1
      ],
      "strings": []
    },
    "mpz_lcm": {
      "start_point": [
        3002,
        0
      ],
      "end_point": [
        3021,
        1
      ],
      "strings": []
    },
    "mpz_lcm_ui": {
      "start_point": [
        3023,
        0
      ],
      "end_point": [
        3036,
        1
      ],
      "strings": []
    },
    "mpz_invert": {
      "start_point": [
        3038,
        0
      ],
      "end_point": [
        3068,
        1
      ],
      "strings": []
    },
    "mpz_pow_ui": {
      "start_point": [
        3073,
        0
      ],
      "end_point": [
        3092,
        1
      ],
      "strings": []
    },
    "mpz_ui_pow_ui": {
      "start_point": [
        3094,
        0
      ],
      "end_point": [
        3099,
        1
      ],
      "strings": []
    },
    "mpz_powm": {
      "start_point": [
        3101,
        0
      ],
      "end_point": [
        3204,
        1
      ],
      "strings": [
        "\"mpz_powm: Zero modulo.\"",
        "\"mpz_powm: Negative exponent and non-invertible base.\""
      ]
    },
    "mpz_powm_ui": {
      "start_point": [
        3206,
        0
      ],
      "end_point": [
        3211,
        1
      ],
      "strings": []
    },
    "mpz_rootrem": {
      "start_point": [
        3214,
        0
      ],
      "end_point": [
        3272,
        1
      ],
      "strings": [
        "\"mpz_rootrem: Negative argument, with even root.\"",
        "\"mpz_rootrem: Zeroth root.\""
      ]
    },
    "mpz_root": {
      "start_point": [
        3274,
        0
      ],
      "end_point": [
        3286,
        1
      ],
      "strings": []
    },
    "mpz_sqrtrem": {
      "start_point": [
        3289,
        0
      ],
      "end_point": [
        3293,
        1
      ],
      "strings": []
    },
    "mpz_sqrt": {
      "start_point": [
        3295,
        0
      ],
      "end_point": [
        3299,
        1
      ],
      "strings": []
    },
    "mpz_perfect_square_p": {
      "start_point": [
        3301,
        0
      ],
      "end_point": [
        3308,
        1
      ],
      "strings": []
    },
    "mpn_perfect_square_p": {
      "start_point": [
        3310,
        0
      ],
      "end_point": [
        3318,
        1
      ],
      "strings": []
    },
    "mpn_sqrtrem": {
      "start_point": [
        3320,
        0
      ],
      "end_point": [
        3341,
        1
      ],
      "strings": []
    },
    "mpz_fac_ui": {
      "start_point": [
        3345,
        0
      ],
      "end_point": [
        3351,
        1
      ],
      "strings": []
    },
    "mpz_bin_uiui": {
      "start_point": [
        3353,
        0
      ],
      "end_point": [
        3371,
        1
      ],
      "strings": []
    },
    "gmp_millerrabin": {
      "start_point": [
        3375,
        0
      ],
      "end_point": [
        3399,
        1
      ],
      "strings": []
    },
    "mpz_probab_prime_p": {
      "start_point": [
        3408,
        0
      ],
      "end_point": [
        3467,
        1
      ],
      "strings": []
    },
    "mpz_tstbit": {
      "start_point": [
        3494,
        0
      ],
      "end_point": [
        3525,
        1
      ],
      "strings": []
    },
    "mpz_abs_add_bit": {
      "start_point": [
        3527,
        0
      ],
      "end_point": [
        3566,
        1
      ],
      "strings": []
    },
    "mpz_abs_sub_bit": {
      "start_point": [
        3568,
        0
      ],
      "end_point": [
        3587,
        1
      ],
      "strings": []
    },
    "mpz_setbit": {
      "start_point": [
        3589,
        0
      ],
      "end_point": [
        3599,
        1
      ],
      "strings": []
    },
    "mpz_clrbit": {
      "start_point": [
        3601,
        0
      ],
      "end_point": [
        3611,
        1
      ],
      "strings": []
    },
    "mpz_combit": {
      "start_point": [
        3613,
        0
      ],
      "end_point": [
        3620,
        1
      ],
      "strings": []
    },
    "mpz_com": {
      "start_point": [
        3622,
        0
      ],
      "end_point": [
        3627,
        1
      ],
      "strings": []
    },
    "mpz_and": {
      "start_point": [
        3629,
        0
      ],
      "end_point": [
        3699,
        1
      ],
      "strings": []
    },
    "mpz_ior": {
      "start_point": [
        3701,
        0
      ],
      "end_point": [
        3772,
        1
      ],
      "strings": []
    },
    "mpz_xor": {
      "start_point": [
        3774,
        0
      ],
      "end_point": [
        3841,
        1
      ],
      "strings": []
    },
    "gmp_popcount_limb": {
      "start_point": [
        3843,
        0
      ],
      "end_point": [
        3858,
        1
      ],
      "strings": []
    },
    "mpn_popcount": {
      "start_point": [
        3860,
        0
      ],
      "end_point": [
        3870,
        1
      ],
      "strings": []
    },
    "mpz_popcount": {
      "start_point": [
        3872,
        0
      ],
      "end_point": [
        3883,
        1
      ],
      "strings": []
    },
    "mpz_hamdist": {
      "start_point": [
        3885,
        0
      ],
      "end_point": [
        3934,
        1
      ],
      "strings": []
    },
    "mpz_scan1": {
      "start_point": [
        3936,
        0
      ],
      "end_point": [
        3970,
        1
      ],
      "strings": []
    },
    "mpz_scan0": {
      "start_point": [
        3972,
        0
      ],
      "end_point": [
        3999,
        1
      ],
      "strings": []
    },
    "mpz_sizeinbase": {
      "start_point": [
        4004,
        0
      ],
      "end_point": [
        4055,
        1
      ],
      "strings": []
    },
    "mpz_get_str": {
      "start_point": [
        4057,
        0
      ],
      "end_point": [
        4120,
        1
      ],
      "strings": [
        "\"0123456789abcdefghijklmnopqrstuvwxyz\"",
        "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\""
      ]
    },
    "mpz_set_str": {
      "start_point": [
        4122,
        0
      ],
      "end_point": [
        4224,
        1
      ],
      "strings": []
    },
    "mpz_init_set_str": {
      "start_point": [
        4226,
        0
      ],
      "end_point": [
        4231,
        1
      ],
      "strings": []
    },
    "mpz_out_str": {
      "start_point": [
        4233,
        0
      ],
      "end_point": [
        4244,
        1
      ],
      "strings": []
    },
    "gmp_detect_endian": {
      "start_point": [
        4247,
        0
      ],
      "end_point": [
        4253,
        1
      ],
      "strings": []
    },
    "mpz_import": {
      "start_point": [
        4256,
        0
      ],
      "end_point": [
        4322,
        1
      ],
      "strings": [
        "\"mpz_import: Nails not supported.\""
      ]
    },
    "mpz_export": {
      "start_point": [
        4324,
        0
      ],
      "end_point": [
        4411,
        1
      ],
      "strings": [
        "\"mpz_import: Nails not supported.\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/mini-gmp.h": {},
  "gmp/gmp-6.1.2/mini-gmp/tests/hex-random.c": {
    "mkseed": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": [
        "\"/dev/urandom\"",
        "\"rb\""
      ]
    },
    "hex_random_init": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"GMP_CHECK_RANDOMIZE\"",
        "\"Re-seeding with GMP_CHECK_RANDOMIZE=%Zd\\n\"",
        "\"Seed GMP_CHECK_RANDOMIZE=%Zd (include this in bug reports)\\n\""
      ]
    },
    "hex_urandomb": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"%Zx\""
      ]
    },
    "hex_rrandomb": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": [
        "\"%Zx\""
      ]
    },
    "hex_rrandomb_export": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": [
        "\"%Zx\""
      ]
    },
    "hex_random_op2": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": [
        "\"%Zx\"",
        "\"%Zx\""
      ]
    },
    "hex_random_op3": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": [
        "\"%Zx\"",
        "\"%Zx\"",
        "\"%Zx\""
      ]
    },
    "hex_random_op4": {
      "start_point": [
        258,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": [
        "\"%Zx\"",
        "\"%Zx\"",
        "\"%Zx\"",
        "\"%Zx\""
      ]
    },
    "hex_random_bit_op": {
      "start_point": [
        358,
        0
      ],
      "end_point": [
        421,
        1
      ],
      "strings": [
        "\"%Zx\"",
        "\"%Zx\""
      ]
    },
    "hex_random_scan_op": {
      "start_point": [
        423,
        0
      ],
      "end_point": [
        458,
        1
      ],
      "strings": [
        "\"%Zx\""
      ]
    },
    "hex_random_str_op": {
      "start_point": [
        460,
        0
      ],
      "end_point": [
        482,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/hex-random.h": {},
  "gmp/gmp-6.1.2/mini-gmp/tests/mini-random.c": {
    "set_str": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": [
        "\"mpz_set_str failed on input %s\\n\""
      ]
    },
    "mini_urandomb": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "mini_rrandomb": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "mini_rrandomb_export": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "mini_random_op2": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "mini_random_op3": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "mini_random_op4": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "mini_random_bit_op": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "mini_random_scan_op": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/mini-random.h": {},
  "gmp/gmp-6.1.2/mini-gmp/tests/t-add.c": {
    "testmain": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"mpz_add failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-aorsmul.c": {
    "testmain": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"mpz_addmul failed:\\n\"",
        "\"mpz_submul failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-bitops.c": {
    "testmain": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": [
        "\"mpz_setbit failed:\\n\"",
        "\"a\"",
        "\"b: %lu\\n\"",
        "\"r\"",
        "\"ref\"",
        "\"mpz_tstbit failed (after mpz_setbit):\\n\"",
        "\"res\"",
        "\"b: %lu\\n\"",
        "\"mpz_clrbit failed:\\n\"",
        "\"a\"",
        "\"b: %lu\\n\"",
        "\"r\"",
        "\"ref\"",
        "\"mpz_tstbit failed (after mpz_clrbit):\\n\"",
        "\"res\"",
        "\"b: %lu\\n\"",
        "\"mpz_combit failed:\\n\"",
        "\"a\"",
        "\"b: %lu\\n\"",
        "\"r\"",
        "\"ref\"",
        "\"mpz_tstbit failed (after mpz_combit):\\n\"",
        "\"res\"",
        "\"b: %lu\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-cmp_d.c": {
    "check_one": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": [
        "\"mpz_cmp_d wrong (from %s)\\n\"",
        "\"  got  %d\\n\"",
        "\"  want %d\\n\"",
        "\"  x=\"",
        "\"\\n  y %g\\n\"",
        "\"  x=0x\"",
        "\"\\n  y %g\\n\"",
        "\"  y\"",
        "\" %02X\"",
        "\"\\n\"",
        "\"mpz_cmpabs_d wrong\\n\"",
        "\"  got  %d\\n\"",
        "\"  want %d\\n\""
      ]
    },
    "check_data": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"-1\"",
        "\"1\"",
        "\"-1\"",
        "\"0\"",
        "\"0\"",
        "\"0x1000000000000000000000000000000000000000000000000\"",
        "\"-0x1000000000000000000000000000000000000000000000000\"",
        "\"0\"",
        "\"0\"",
        "\"2\"",
        "\"2\"",
        "\"-2\"",
        "\"-2\"",
        "\"check_data\""
      ]
    },
    "check_onebits": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"check_onebits\"",
        "\"check_onebits\"",
        "\"check_onebits\"",
        "\"check_onebits\""
      ]
    },
    "check_low_z_one": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": [
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\""
      ]
    },
    "check_one_2exp": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": [
        "\"check_one_2exp\"",
        "\"check_one_2exp\"",
        "\"check_one_2exp\"",
        "\"check_one_2exp\""
      ]
    },
    "check_infinity": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": [
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\""
      ]
    },
    "testmain": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-comb.c": {
    "try_mpz_bin_uiui": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"mpz_bin_uiui wrong\\n\"",
        "\"  n=%lu\\n\"",
        "\"  k=%lu\\n\"",
        "\"  got=\"",
        "\"\\n\"",
        "\"  want=\"",
        "\"\\n\""
      ]
    },
    "bin_smallexaustive": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "fac_smallexaustive": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"mpz_fac_ui(%lu) wrong\\n\"",
        "\"  got  \"",
        "\"\\n\"",
        "\"  want \"",
        "\"\\n\""
      ]
    },
    "checkWilson": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": [
        "\"mpz_fac_ui(%lu) wrong\\n\"",
        "\"  Wilson's theorem not verified: got %lu, expected %lu.\\n\""
      ]
    },
    "checkprimes": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": [
        "\"checkprimes(%lu, %lu, %lu) wrong\\n\"",
        "\" %lu - 1 != %lu - 1 + %lu - 1 \\n\"",
        "\"checkprimes(%lu, %lu, %lu) wrong\\n\"",
        "\"  got  \"",
        "\"\\n\"",
        "\"  want \"",
        "\"\\n\""
      ]
    },
    "testmain": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-cong.c": {
    "check_one": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": [
        "\"mpz_congruent_p wrong\\n\"",
        "\"   expected %d got %d\\n\"",
        "\"\t a\"",
        "\"\t c\"",
        "\"\t d\"",
        "\"mpz_congruent_ui_p wrong\\n\"",
        "\"   expected %d got %d\\n\"",
        "\"   a\"",
        "\"   c=%lu\\n\"",
        "\"   d=%lu\\n\""
      ]
    },
    "check_data": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"11\"",
        "\"11\"",
        "\"0\"",
        "\"3\"",
        "\"11\"",
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"123\"",
        "\"456\"",
        "\"1\"",
        "\"0x123456789123456789\"",
        "\"0x987654321987654321\"",
        "\"1\"",
        "\"0x3333333333333333\"",
        "\"0x33333333\"",
        "\"0x180000000\"",
        "\"0x33333333333333333333333333333333\"",
        "\"0x3333333333333333\"",
        "\"0x18000000000000000\"",
        "\"0x444444441\"",
        "\"-0x22222221F\"",
        "\"0x333333330\"",
        "\"0x44444444444444441\"",
        "\"-0x2222222222222221F\"",
        "\"0x33333333333333330\""
      ]
    },
    "check_random": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "testmain": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-div.c": {
    "testmain": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": [
        "\"mpz_%cdiv_qr failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r   \"",
        "\"rref\"",
        "\"q   \"",
        "\"qref\"",
        "\"mpz_%cdiv_q failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"q   \"",
        "\"qref\"",
        "\"mpz_%cdiv_r failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r   \"",
        "\"rref\"",
        "\"mpz_divisible_p failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r   \"",
        "\"mpz_mod failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r   \"",
        "\"rref\"",
        "\"mpz_mod failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r   \"",
        "\"rref\"",
        "\"mpz_%cdiv_qr_ui failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"rl   = %lx\\n\"",
        "\"r   \"",
        "\"rref\"",
        "\"q   \"",
        "\"qref\"",
        "\"mpz_%cdiv_q_ui failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"rl   = %lx\\n\"",
        "\"rref\"",
        "\"q   \"",
        "\"qref\"",
        "\"mpz_%cdiv_qr_ui failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"rl   = %lx\\n\"",
        "\"r   \"",
        "\"rref\"",
        "\"mpz_%cdiv_qr_ui failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"rl   = %lx\\n\"",
        "\"rref\"",
        "\"mpz_divisible_ui_p failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r   \"",
        "\"mpz_mod failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r   \"",
        "\"rref\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-div_2exp.c": {
    "testmain": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": [
        "\"cdiv_q\"",
        "\"cdiv_r\"",
        "\"fdiv_q\"",
        "\"fdiv_r\"",
        "\"tdiv_q\"",
        "\"tdiv_r\"",
        "\"mpz_%s_2exp failed:\\n\"",
        "\"a\"",
        "\"b: %lu\\n\"",
        "\"r\"",
        "\"ref\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-double.c": {
    "testmain": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": [
        "\"mpz_set_d failed:\\n\"",
        "\"d = %.20g\\n\"",
        "\"s = %s\\n\"",
        "\"r = %s\\n\"",
        "\"mpz_set_d/mpz_get_d failed:\\n\"",
        "\"mpz_cmp_d (x, d) failed:\\n\"",
        "\"mpz_cmp_d (x, f) failed:\\n\"",
        "\"mpz_set_d/mpz_get_d failed:\\n\"",
        "\"x\"",
        "\"m = %lx, e = %i\\n\"",
        "\"d = %.15g\\n\"",
        "\"f = %.15g\\n\"",
        "\"f - d = %.5g\\n\"",
        "\"mpz_cmp_d (x, d) failed:\\n\"",
        "\"mpz_cmp_d (x, f) failed:\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-gcd.c": {
    "gcdext_valid_p": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "testmain": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": [
        "\"mpz_gcd failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\"",
        "\"mpz_gcdext failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"g\"",
        "\"s\"",
        "\"t\"",
        "\"mpz_gcd failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-import.c": {
    "dump_bytes": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": [
        "\"%s:\"",
        "\"\\n\"",
        "\" %02x\"",
        "\"\\n\""
      ]
    },
    "testmain": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": [
        "\"mpz_import failed:\\n\"",
        "\"in_count %lu, out_count %lu, endian = %d, order = %d\\n\"",
        "\"a\"",
        "\"res\"",
        "\"mpz_export failed:\\n\"",
        "\"in_count %lu, out_count %lu, endian = %d, order = %d\\n\"",
        "\"input\"",
        "\"output\"",
        "\"Overwrite at -1, value %02x\\n\"",
        "\"Overwrite at %lu, value %02x\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-invert.c": {
    "test_2by1": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"mpn_invert_limb failed:\\n\"",
        "\"u\"",
        "\"m\"",
        "\"p\"",
        "\"t\""
      ]
    },
    "test_3by2": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": [
        "\"mpn_invert_3by2 failed:\\n\"",
        "\"u\"",
        "\"m\"",
        "\"p\"",
        "\"t\""
      ]
    },
    "testmain": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": [
        "\"80007fff3ffe0000\"",
        "\"80007fff3ffe000000000000000003ff\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-lcm.c": {
    "testmain": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"mpz_lcm failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\"",
        "\"mpz_lcm_ui failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-limbs.c": {
    "my_mpz_mul": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "testmain": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"my_mpz_mul failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\"",
        "\"getlimbn - limbs_read differ.\\n\"",
        "\"mpz_realloc2 did not clear res.\\n\"",
        "\"mpz_limbs_finish did not clear res.\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-logops.c": {
    "testlogops": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": [
        "\"mpz_and failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\"",
        "\"mpz_ior failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\"",
        "\"mpz_xor failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\"",
        "\"mpz_popcount(r) + %lu and mpz_hamdist(a,b) differ:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"mpz_popcount(r) = %lu:\\n\"",
        "\"mpz_hamdist(a,b) = %lu:\\n\""
      ]
    },
    "testmain": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-mul.c": {
    "testmain": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"mpz_mul failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\"",
        "\"mpn_mul_n failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"ref\"",
        "\"mpz_mul_si failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\"",
        "\"mpn (squaring) failed:\\n\"",
        "\"a\"",
        "\"ref\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-powm.c": {
    "testmain": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"mpz_powm failed:\\n\"",
        "\"b\"",
        "\"e\"",
        "\"m\"",
        "\"r\"",
        "\"ref\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-pprime_p.c": {
    "isprime": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "check_one": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"mpz_probab_prime_p\\n\"",
        "\"  n    \"",
        "\"  got =%d\"",
        "\"  want=%d\\n\""
      ]
    },
    "check_pn": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "check_small": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "check_composites": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "check_primes": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": [
        "\"2\"",
        "\"17\"",
        "\"65537\"",
        "\"0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1\"",
        "\"29024E088A67CC74020BBEA63B139B22514A08798E3404DD\"",
        "\"EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245\"",
        "\"E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED\"",
        "\"EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE65381\"",
        "\"FFFFFFFFFFFFFFFF\""
      ]
    },
    "testmain": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-reuse.c": {
    "mpz_xinvert": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "testmain": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        624,
        1
      ],
      "strings": [
        "\"mpz_sqrt\"",
        "\"mpz_fdiv_q_2exp\"",
        "\"mpz_mul_2exp\"",
        "\"mpz_pow_ui\"",
        "\"mpz/reuse: %ld error%s\\n\"",
        "\"s\""
      ]
    },
    "dump3": {
      "start_point": [
        626,
        0
      ],
      "end_point": [
        642,
        1
      ],
      "strings": [
        "\"failure in %s (\"",
        "\" \"",
        "\" \"",
        "\")\\n\""
      ]
    },
    "mpz_check_format": {
      "start_point": [
        644,
        0
      ],
      "end_point": [
        662,
        1
      ],
      "strings": [
        "\"mpz_t size exceeds allocation!\\n\"",
        "\"Unnormalized mpz_t!\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-root.c": {
    "rootrem_valid_p": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "testmain": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"mpz_rootrem(%lu-th) failed:\\n\"",
        "\"u\"",
        "\"root\"",
        "\"rem\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-scan.c": {
    "testmain": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": [
        "\"mpz_scan0 failed:\\n\"",
        "\"a\"",
        "\"b: %lu\\n\"",
        "\"r: %lu\\n\"",
        "\"ref: %lu\\n\"",
        "\"mpn_scan0 failed:\\n\"",
        "\"a\"",
        "\"b: %lu\\n\"",
        "\"r: %lu\\n\"",
        "\"ref: %lu\\n\"",
        "\"mpz_scan1 failed:\\n\"",
        "\"a\"",
        "\"b: %lu\\n\"",
        "\"r: %lu\\n\"",
        "\"ref: %lu\\n\"",
        "\"mpn_scan1 failed:\\n\"",
        "\"a\"",
        "\"b: %lu\\n\"",
        "\"r: %lu\\n\"",
        "\"ref: %lu\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-signed.c": {
    "check_si": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": [
        "\"mpz_cmp_si (sz, %ld) != 0.\\n\"",
        "\"mpz_get_si (sz) != %ld.\\n\"",
        "\"mpz_init_set_si (%ld) failed.\\n\"",
        "\" got=\"",
        "\"\\n\""
      ]
    },
    "check_si_cmp": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"mpz_cmp (sz, oz) != %i.\\n\"",
        "\"mpz_cmp_si (oz, %ld) != %i.\\n\"",
        "\"mpz_cmp_si (sz, %ld) != %i.\\n\"",
        "\"mpz_cmp_si (sz, %i) != %i.\\n\"",
        "\"mpz_cmp_si (sz, %ld) != %i.\\n\"",
        "\" sz=\"",
        "\"\\n\"",
        "\" si=%ld\\n\"",
        "\" oz=\"",
        "\"\\n\"",
        "\" oi=%ld\\n\""
      ]
    },
    "try_op_si": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "try_fits_slong_p": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"mpz_fits_slong_p (LONG_MAX) false!\\n\"",
        "\"mpz_fits_slong_p (LONG_MAX + 1) true!\\n\"",
        "\"mpz_fits_slong_p (LONG_MIN) false!\\n\"",
        "\"mpz_fits_slong_p (LONG_MIN - 1) true!\\n\""
      ]
    },
    "testmain": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-sqrt.c": {
    "sqrtrem_valid_p": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "mpz_mpn_sqrtrem": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"mpn_sqrtrem buffer overrun on sp.\\n\"",
        "\"mpn_sqrtrem wrong return value with NULL.\\n\"",
        "\"mpn_sqrtrem wrong return value.\\n\"",
        "\"mpn_sqrtrem buffer overrun on rp.\\n\""
      ]
    },
    "testmain": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"mpz_perfect_square_p failed on -1.\\n\"",
        "\"mpz_perfect_square_p failed on 0.\\n\"",
        "\"mpz_sqrtrem failed:\\n\"",
        "\"u\"",
        "\"sqrt\"",
        "\"rem\"",
        "\"mpn_sqrtrem failed:\\n\"",
        "\"u\"",
        "\"sqrt\"",
        "\"rem\"",
        "\"mp%s_perfect_square_p failed on non square:\\n\"",
        "\"z\"",
        "\"n\"",
        "\"u\"",
        "\"mp%s_perfect_square_p failed on square:\\n\"",
        "\"z\"",
        "\"n\"",
        "\"u\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-str.c": {
    "test_small": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"183407\"",
        "\"183407\"",
        "\" 763959\"",
        "\"763959 \"",
        "\"9 81999\"",
        "\"981999\"",
        "\"10\\t7398 \"",
        "\"107398\"",
        "\"-9585 44\"",
        "\"-00958544\"",
        "\"-0\"",
        "\"0000\"",
        "\" -000  \"",
        "\"0\"",
        "\"0704436\"",
        "\"231710\"",
        "\"0000000000000000000000000\"",
        "\"0000000000000000000000000\"",
        "\"000000000000000000000000704436\"",
        "\"000000000000000000000000231710\"",
        "\" 02503517\"",
        "\"689999\"",
        "\"0 1312143\"",
        "\"365667\"",
        "\"-03 274062\"",
        "\"-882738\"",
        "\"012\\t242\"",
        "\"005282\"",
        "\"0b11010111110010001111\"",
        "\"883855\"",
        "\" 0b11001010010100001\"",
        "\"103585\"",
        "\"-0b101010110011101111\"",
        "\"-175343\"",
        "\"0b 1111111011011100110\"",
        "\"521958\"",
        "\"0b1 1111110111001000011\"",
        "\"1044035\"",
        "\" 0x53dfc\"",
        "\"343548\"",
        "\"0xfA019\"",
        "\"1024025\"",
        "\"0x 642d1\"",
        "\"410321\"",
        "\"0x5 8067\"",
        "\"360551\"",
        "\"-0xd6Be6\"",
        "\"-879590\"",
        "\"\\t0B1110000100000000011\"",
        "\"460803\"",
        "\"0B\\t1111110010010100101\"",
        "\"517285\"",
        "\"0B1\\t010111101101110100\"",
        "\"359284\"",
        "\"-0B101\\t1001101111111001\"",
        "\"-367609\"",
        "\"0B10001001010111110000\"",
        "\"562672\"",
        "\"0Xe4B7e\"",
        "\"936830\"",
        "\"0X1E4bf\"",
        "\"124095\"",
        "\"-0Xfdb90\"",
        "\"-1039248\"",
        "\"0X7fc47\"",
        "\"523335\"",
        "\"0X8167c\"",
        "\"530044\"",
        "\"\"",
        "\"0x\"",
        "\"0b\"",
        "\"0z\"",
        "\"-\"",
        "\"-0x \"",
        "\"0|1\"",
        "\"4+4\"",
        "\"0ab\"",
        "\"10x0\"",
        "\"0xxab\"",
        "\"ab\"",
        "\"0%#\"",
        "\"$foo\"",
        "\"mpz_set_str returned -1, input: %s\\n\"",
        "\"mpz_set_str returned -1, decimal input: %s\\n\"",
        "\"mpz_set_str failed for input: %s\\n\"",
        "\"got\"",
        "\"ref\"",
        "\"mpz_set_str returned %d, invalid input: %s\\n\""
      ]
    },
    "testmain": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": [
        "\"Failed to create temporary file. Skipping mpz_out_str tests.\\n\"",
        "\"mpz_set_str failed on input %s\\n\"",
        "\"mpz_sizeinbase failed:\\n\"",
        "\"a\"",
        "\"r = %s\\n\"",
        "\"  base %d, correct size %u, got %u\\n\"",
        "\"mpz_get_str failed:\\n\"",
        "\"a\"",
        "\"b = %s\\n\"",
        "\"  base = %d\\n\"",
        "\"r = %s\\n\"",
        "\"mpz_out_str, bad return value:\\n\"",
        "\"a\"",
        "\"r = %s\\n\"",
        "\"  base %d, correct size %u, got %u\\n\"",
        "\"fread failed, expected %lu bytes, got only %lu.\\n\"",
        "\"mpz_out_str failed:\\n\"",
        "\"a\"",
        "\"b = %s\\n\"",
        "\"  base = %d\\n\"",
        "\"r = %s\\n\"",
        "\"mpz_set_str failed:\\n\"",
        "\"r = %s\\n\"",
        "\"  base = %d\\n\"",
        "\"r = %s\\n\"",
        "\"  base = 16\\n\"",
        "\"b\"",
        "\"r\"",
        "\"mpn_get_str failed:\\n\"",
        "\"returned length: %lu (bad)\\n\"",
        "\"expected: %lu\\n\"",
        "\"  base = %d\\n\"",
        "\"r = %s\\n\"",
        "\"  base = 16\\n\"",
        "\"b\"",
        "\"r\"",
        "\"Internal error in test.\\n\"",
        "\"mpn_get_str failed:\\n\"",
        "\"digit %lu: %d (bad)\\n\"",
        "\"expected: %d\\n\"",
        "\"  base = %d\\n\"",
        "\"r = %s\\n\"",
        "\"  base = 16\\n\"",
        "\"b\"",
        "\"r\"",
        "\"mpn_set_str failed:\\n\"",
        "\"r = %s\\n\"",
        "\"  base = %d\\n\"",
        "\"r = %s\\n\"",
        "\"  base = 16\\n\"",
        "\"r\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/t-sub.c": {
    "testmain": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": [
        "\"mpz_sub failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\"",
        "\"mpz_ui_sub failed:\\n\"",
        "\"a\"",
        "\"b\"",
        "\"r\"",
        "\"ref\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/testutils.c": {
    "block_init": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "block_check": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"red zone overwritten.\\n\""
      ]
    },
    "tu_alloc": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": [
        "\"Virtual memory exhausted.\\n\""
      ]
    },
    "tu_realloc": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"Virtual memory exhausted.\\n\""
      ]
    },
    "tu_free": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "testfree": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"Memory leaked: %lu bytes.\\n\""
      ]
    },
    "testhalves": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"First half, memory leaked: %lu bytes.\\n\""
      ]
    },
    "dump": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": [
        "\"%s: %s\\n\""
      ]
    },
    "mpz_set_str_or_abort": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": [
        "\"ERROR: mpz_set_str failed\\n\"",
        "\"   str  = \\\"%s\\\"\\n\"",
        "\"   base = %d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mini-gmp/tests/testutils.h": {},
  "gmp/gmp-6.1.2/mpf/abs.c": {
    "mpf_abs": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/add.c": {
    "mpf_add": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/add_ui.c": {
    "mpf_add_ui": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/ceilfloor.c": {
    "mpf_ceil_or_floor": {
      "start_point": [
        42,
        17
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "mpf_ceil": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "mpf_floor": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/clear.c": {
    "mpf_clear": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/clears.c": {
    "mpf_clears": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/cmp.c": {
    "mpf_cmp": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/cmp_d.c": {
    "mpf_cmp_d": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/cmp_si.c": {
    "mpf_cmp_si": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/cmp_ui.c": {
    "mpf_cmp_ui": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/cmp_z.c": {
    "mpf_cmp_z": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/div.c": {
    "mpf_div": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/div_2exp.c": {
    "mpf_div_2exp": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/div_ui.c": {
    "mpf_div_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/dump.c": {
    "mpf_dump": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"-0.%se%ld\\n\"",
        "\"0.%se%ld\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpf/eq.c": {
    "mpf_eq": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/fits_s.h": {
    "FUNCTION": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/fits_sint.c": {},
  "gmp/gmp-6.1.2/mpf/fits_slong.c": {},
  "gmp/gmp-6.1.2/mpf/fits_sshort.c": {},
  "gmp/gmp-6.1.2/mpf/fits_u.h": {
    "FUNCTION": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/fits_uint.c": {},
  "gmp/gmp-6.1.2/mpf/fits_ulong.c": {},
  "gmp/gmp-6.1.2/mpf/fits_ushort.c": {},
  "gmp/gmp-6.1.2/mpf/get_d.c": {
    "mpf_get_d": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/get_dfl_prec.c": {
    "mpf_get_default_prec": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/get_d_2exp.c": {
    "mpf_get_d_2exp": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/get_prc.c": {
    "mpf_get_prec": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/get_si.c": {
    "mpf_get_si": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/get_str.c": {
    "mpn_pow_1_highpart": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "mpf_get_str": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        323,
        1
      ],
      "strings": [
        "\"0123456789abcdefghijklmnopqrstuvwxyz\"",
        "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"",
        "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpf/get_ui.c": {
    "mpf_get_ui": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/init.c": {
    "mpf_init": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/init2.c": {
    "mpf_init2": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/inits.c": {
    "mpf_inits": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/inp_str.c": {
    "mpf_inp_str": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/int_p.c": {
    "mpf_integer_p": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/iset.c": {
    "mpf_init_set": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/iset_d.c": {
    "mpf_init_set_d": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/iset_si.c": {
    "mpf_init_set_si": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/iset_str.c": {
    "mpf_init_set_str": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/iset_ui.c": {
    "mpf_init_set_ui": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/mul.c": {
    "mpf_mul": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/mul_2exp.c": {
    "mpf_mul_2exp": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/mul_ui.c": {
    "mpf_mul_ui": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/neg.c": {
    "mpf_neg": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/out_str.c": {
    "mpf_out_str": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"e%ld\"",
        "\"@%ld\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpf/pow_ui.c": {
    "mpf_pow_ui": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/random2.c": {
    "mpf_random2": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/reldiff.c": {
    "mpf_reldiff": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/set.c": {
    "mpf_set": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/set_d.c": {
    "mpf_set_d": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/set_dfl_prec.c": {
    "mpf_set_default_prec": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/set_prc.c": {
    "mpf_set_prec": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/set_prc_raw.c": {
    "mpf_set_prec_raw": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/set_q.c": {
    "mpf_set_q": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/set_si.c": {
    "mpf_set_si": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/set_str.c": {
    "mpn_pow_1_highpart": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "mpf_set_str": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        401,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/set_ui.c": {
    "mpf_set_ui": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/set_z.c": {
    "mpf_set_z": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/size.c": {
    "mpf_size": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/sqrt.c": {
    "mpf_sqrt": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/sqrt_ui.c": {
    "mpf_sqrt_ui": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/sub.c": {
    "mpf_sub": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/sub_ui.c": {
    "mpf_sub_ui": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/swap.c": {
    "mpf_swap": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/trunc.c": {
    "mpf_trunc": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/ui_div.c": {
    "mpf_ui_div": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/ui_sub.c": {
    "mpf_ui_sub": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpf/urandomb.c": {
    "mpf_urandomb": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/alpha/dive_1.c": {
    "mpn_divexact_1": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/alpha/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/alpha/ev5/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/alpha/ev6/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/alpha/ev6/nails/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/arm/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/arm/v6/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/arm/v7a/cora15/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/arm/v7a/cora7/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/arm/v7a/cora8/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/arm/v7a/cora9/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/arm64/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/cray/add_n.c": {
    "mpn_add_n": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/cray/hamdist.c": {
    "mpn_hamdist": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/lshift.c": {
    "mpn_lshift": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/popcount.c": {
    "mpn_popcount": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/rshift.c": {
    "mpn_rshift": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/sub_n.c": {
    "mpn_sub_n": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/cfp/addmul_1.c": {
    "mpn_addmul_1": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/cfp/mul_1.c": {
    "mpn_mul_1": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/cfp/submul_1.c": {
    "mpn_submul_1": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/ieee/addmul_1.c": {
    "mpn_addmul_1": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/ieee/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/cray/ieee/invert_limb.c": {
    "mpn_invert_limb": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/ieee/mul_1.c": {
    "mpn_mul_1": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/ieee/mul_basecase.c": {
    "mpn_mul_basecase": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/ieee/sqr_basecase.c": {
    "mpn_sqr_basecase": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/cray/ieee/submul_1.c": {
    "mpn_submul_1": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/add.c": {},
  "gmp/gmp-6.1.2/mpn/generic/addmul_1.c": {
    "mpn_addmul_1": [
      {
        "start_point": [
          40,
          0
        ],
        "end_point": [
          65,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          71,
          0
        ],
        "end_point": [
          101,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          107,
          0
        ],
        "end_point": [
          136,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/add_1.c": {},
  "gmp/gmp-6.1.2/mpn/generic/add_err1_n.c": {
    "mpn_add_err1_n": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/add_err2_n.c": {
    "mpn_add_err2_n": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/add_err3_n.c": {
    "mpn_add_err3_n": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/add_n.c": {
    "mpn_add_n": [
      {
        "start_point": [
          36,
          0
        ],
        "end_point": [
          60,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          66,
          0
        ],
        "end_point": [
          87,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/add_n_sub_n.c": {
    "mpn_add_n_sub_n": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": [
        "\"              separate add and sub: %.3f\\n\"",
        "\"combined addsub separate variables: %.3f\\n\"",
        "\"        combined addsub r1 overlap: %.3f\\n\"",
        "\"        combined addsub r2 overlap: %.3f\\n\"",
        "\"          combined addsub in-place: %.3f\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/bdiv_dbm1c.c": {
    "mpn_bdiv_dbm1c": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/bdiv_q.c": {
    "mpn_bdiv_q": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "mpn_bdiv_q_itch": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/bdiv_qr.c": {
    "mpn_bdiv_qr": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "mpn_bdiv_qr_itch": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/bdiv_q_1.c": {
    "mpn_pi1_bdiv_q_1": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "mpn_bdiv_q_1": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/binvert.c": {
    "mpn_binvert_itch": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "mpn_binvert": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/broot.c": {
    "powlimb": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "mpn_broot_invm1": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "mpn_broot": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/brootinv.c": {
    "powlimb": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "mpn_brootinv": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/bsqrt.c": {
    "mpn_bsqrt": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/bsqrtinv.c": {
    "mpn_bsqrtinv": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/cmp.c": {},
  "gmp/gmp-6.1.2/mpn/generic/cnd_add_n.c": {
    "mpn_cnd_add_n": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/cnd_sub_n.c": {
    "mpn_cnd_sub_n": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/cnd_swap.c": {
    "mpn_cnd_swap": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/com.c": {
    "mpn_com": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/comb_tables.c": {},
  "gmp/gmp-6.1.2/mpn/generic/copyd.c": {
    "mpn_copyd": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/copyi.c": {
    "mpn_copyi": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/dcpi1_bdiv_q.c": {
    "mpn_dcpi1_bdiv_q_n_itch": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "mpn_dcpi1_bdiv_q_n": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "mpn_dcpi1_bdiv_q": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/dcpi1_bdiv_qr.c": {
    "mpn_dcpi1_bdiv_qr_n_itch": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "mpn_dcpi1_bdiv_qr_n": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "mpn_dcpi1_bdiv_qr": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/dcpi1_divappr_q.c": {
    "mpn_dcpi1_divappr_q_n": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "mpn_dcpi1_divappr_q": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/dcpi1_div_q.c": {
    "mpn_dcpi1_div_q": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/dcpi1_div_qr.c": {
    "mpn_dcpi1_div_qr_n": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "mpn_dcpi1_div_qr": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/diveby3.c": {
    "mpn_divexact_by3c": [
      {
        "start_point": [
          35,
          0
        ],
        "end_point": [
          45,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          73,
          0
        ],
        "end_point": [
          99,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          142,
          0
        ],
        "end_point": [
          171,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/divexact.c": {
    "mpn_divexact": [
      {
        "start_point": [
          44,
          0
        ],
        "end_point": [
          101,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          130,
          0
        ],
        "end_point": [
          292,
          1
        ],
        "strings": []
      }
    ],
    "mpn_divexact_itch": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/dive_1.c": {
    "mpn_divexact_1": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/divis.c": {
    "mpn_divisible_p": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/divrem.c": {
    "mpn_divrem": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/divrem_1.c": {
    "mpn_divrem_1": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        254,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/divrem_2.c": {
    "mpn_divrem_2": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/div_q.c": {
    "mpn_div_q": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/div_qr_1.c": {
    "mpn_div_qr_1": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/div_qr_1n_pi1.c": {
    "mpn_div_qr_1n_pi1": [
      {
        "start_point": [
          162,
          0
        ],
        "end_point": [
          182,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          186,
          0
        ],
        "end_point": [
          272,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/div_qr_1n_pi2.c": {
    "mpn_div_qr_1n_pi2": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/div_qr_1u_pi2.c": {
    "mpn_div_qr_1u_pi2": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/div_qr_2.c": {
    "invert_4by2": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    },
    "mpn_div_qr_2n_pi2": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": []
    },
    "mpn_div_qr_2": {
      "start_point": [
        290,
        0
      ],
      "end_point": [
        331,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/div_qr_2n_pi1.c": {
    "mpn_div_qr_2n_pi1": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/div_qr_2u_pi1.c": {
    "mpn_div_qr_2u_pi1": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/dump.c": {
    "mpn_dump": [
      {
        "start_point": [
          38,
          0
        ],
        "end_point": [
          71,
          1
        ],
        "strings": [
          "\"0\\n\"",
          "\"%lX\"",
          "\"%0*lX\"",
          "\"%lX\"",
          "\"%0*lX\"",
          "\"%0*lX\"",
          "\"%0*lX\"",
          "\"\\n\""
        ]
      },
      {
        "start_point": [
          88,
          0
        ],
        "end_point": [
          97,
          1
        ],
        "strings": []
      }
    ],
    "mpn_recdump": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": [
        "\"%lX\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/fib2_ui.c": {
    "mpn_fib2_ui": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": [
        "\"mpn_fib2_ui n=%lu\\n\"",
        "\"nfirst=%lu mask=0x%lX\\n\"",
        "\"k=%lu mask=0x%lX size=%ld alloc=%ld\\n\"",
        "\"fp \"",
        "\"f1p\"",
        "\"done size=%ld\\n\"",
        "\"fp \"",
        "\"f1p\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/gcd.c": {
    "gcd_hook": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "gcd_2": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "mpn_gcd": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/gcdext.c": {
    "hgcd_mul_matrix_vector": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "compute_v": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "mpn_gcdext": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        557,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/gcdext_1.c": {
    "mpn_gcdext_1": [
      {
        "start_point": [
          57,
          0
        ],
        "end_point": [
          266,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          275,
          0
        ],
        "end_point": [
          326,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/gcdext_lehmer.c": {
    "mpn_gcdext_hook": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "mpn_gcdext_lehmer_n": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/gcd_1.c": {
    "mpn_gcd_1": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/gcd_subdiv_step.c": {
    "mpn_gcd_subdiv_step": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/get_d.c": {
    "mpn_get_d": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        411,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/get_str.c": {
    "mpn_sb_get_str": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": []
    },
    "mpn_dc_get_str": {
      "start_point": [
        309,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": []
    },
    "mpn_get_str": {
      "start_point": [
        366,
        0
      ],
      "end_point": [
        552,
        1
      ],
      "strings": [
        "\"Computed table values for base=%d, un=%d, xn=%d:\\n\"",
        "\"%2d: %10ld %10ld %11ld %ld\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/generic/hgcd.c": {
    "mpn_hgcd_itch": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "mpn_hgcd": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/hgcd2.c": {
    "div1": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "div2": [
      {
        "start_point": [
          98,
          0
        ],
        "end_point": [
          154,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          159,
          0
        ],
        "end_point": [
          197,
          1
        ],
        "strings": []
      }
    ],
    "mpn_hgcd2": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        413,
        1
      ],
      "strings": []
    },
    "mpn_hgcd_mul_matrix1_vector": {
      "start_point": [
        417,
        0
      ],
      "end_point": [
        446,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/hgcd2_jacobi.c": {
    "div1": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "div2": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "mpn_hgcd2_jacobi": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        365,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/hgcd_appr.c": {
    "mpn_hgcd_appr_itch": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "mpn_hgcd_appr": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        267,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/hgcd_jacobi.c": {
    "hgcd_jacobi_hook": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "hgcd_jacobi_step": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    },
    "mpn_hgcd_jacobi": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/hgcd_matrix.c": {
    "mpn_hgcd_matrix_init": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "mpn_hgcd_matrix_update_q": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "mpn_hgcd_matrix_mul_1": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "mpn_hgcd_matrix_mul": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    },
    "mpn_hgcd_matrix_adjust": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/hgcd_reduce.c": {
    "submul": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "hgcd_matrix_apply": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    },
    "mpn_hgcd_reduce_itch": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    },
    "mpn_hgcd_reduce": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/hgcd_step.c": {
    "hgcd_hook": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "mpn_hgcd_step": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/invert.c": {
    "mpn_invert": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/invertappr.c": {
    "mpn_bc_invertappr": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "mpn_ni_invertappr": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": []
    },
    "mpn_invertappr": {
      "start_point": [
        291,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/jacbase.c": {
    "mpn_jacobi_base": [
      {
        "start_point": [
          137,
          0
        ],
        "end_point": [
          178,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          187,
          0
        ],
        "end_point": [
          241,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/jacobi.c": {
    "jacobi_hook": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "mpn_jacobi_n": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/jacobi_2.c": {
    "mpn_jacobi_2": [
      {
        "start_point": [
          45,
          0
        ],
        "end_point": [
          170,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          172,
          0
        ],
        "end_point": [
          348,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/logops_n.c": {
    "func": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/lshift.c": {
    "mpn_lshift": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/lshiftc.c": {
    "mpn_lshiftc": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/matrix22_mul.c": {
    "abs_sub_n": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "add_signed_n": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "mpn_matrix22_mul_itch": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "mpn_matrix22_mul_strassen": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": []
    },
    "mpn_matrix22_mul": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        321,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/matrix22_mul1_inverse_vector.c": {
    "mpn_matrix22_mul1_inverse_vector": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mode1o.c": {
    "mpn_modexact_1c_odd": [
      {
        "start_point": [
          113,
          0
        ],
        "end_point": [
          187,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          204,
          0
        ],
        "end_point": [
          233,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/mod_1.c": {
    "mpn_mod_1_unnorm": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "mpn_mod_1_norm": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "mpn_mod_1": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mod_1_1.c": {
    "mpn_mod_1_1p_cps": [
      {
        "start_point": [
          158,
          0
        ],
        "end_point": [
          186,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          235,
          0
        ],
        "end_point": [
          260,
          1
        ],
        "strings": []
      }
    ],
    "mpn_mod_1_1p": [
      {
        "start_point": [
          188,
          0
        ],
        "end_point": [
          231,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          262,
          0
        ],
        "end_point": [
          330,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/mod_1_2.c": {
    "mpn_mod_1s_2p_cps": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "mpn_mod_1s_2p": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mod_1_3.c": {
    "mpn_mod_1s_3p_cps": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "mpn_mod_1s_3p": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mod_1_4.c": {
    "mpn_mod_1s_4p_cps": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "mpn_mod_1s_4p": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mod_34lsub1.c": {
    "mpn_mod_34lsub1": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mul.c": {
    "mpn_mul": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        440,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mullo_basecase.c": {
    "mpn_mullo_basecase": [
      {
        "start_point": [
          46,
          0
        ],
        "end_point": [
          59,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          64,
          0
        ],
        "end_point": [
          89,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/mullo_n.c": {
    "mpn_mullo_n_itch": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    },
    "mpn_dc_mullo_n": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "mpn_mullo_n": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mulmid.c": {
    "mpn_mulmid": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mulmid_basecase.c": {
    "mpn_mulmid_basecase": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mulmid_n.c": {
    "mpn_mulmid_n": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mulmod_bnm1.c": {
    "mpn_bc_mulmod_bnm1": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "mpn_bc_mulmod_bnp1": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "mpn_mulmod_bnm1": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "mpn_mulmod_bnm1_next_size": {
      "start_point": [
        336,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mul_1.c": {
    "mpn_mul_1": [
      {
        "start_point": [
          38,
          0
        ],
        "end_point": [
          60,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          66,
          0
        ],
        "end_point": [
          94,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/mul_basecase.c": {
    "mpn_mul_basecase": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mul_fft.c": {
    "mpn_fft_best_k": [
      {
        "start_point": [
          113,
          0
        ],
        "end_point": [
          131,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          145,
          0
        ],
        "end_point": [
          159,
          1
        ],
        "strings": []
      }
    ],
    "mpn_fft_next_size": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    },
    "mpn_fft_initl": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    },
    "mpn_fft_mul_2exp_modF": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": []
    },
    "mpn_fft_add_modF": {
      "start_point": [
        295,
        0
      ],
      "end_point": [
        321,
        1
      ],
      "strings": []
    },
    "mpn_fft_sub_modF": {
      "start_point": [
        326,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": []
    },
    "mpn_fft_fft": {
      "start_point": [
        358,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": []
    },
    "mpn_fft_normalize": {
      "start_point": [
        411,
        0
      ],
      "end_point": [
        427,
        1
      ],
      "strings": []
    },
    "mpn_fft_mul_modF_K": {
      "start_point": [
        430,
        0
      ],
      "end_point": [
        539,
        1
      ],
      "strings": [
        "\"recurse: %ldx%ld limbs -> %ld times %ldx%ld (%1.2f)\\n\"",
        "\"  mpn_mul_n %ld of %ld limbs\\n\""
      ]
    },
    "mpn_fft_fftinv": {
      "start_point": [
        547,
        0
      ],
      "end_point": [
        582,
        1
      ],
      "strings": []
    },
    "mpn_fft_div_2exp_modF": {
      "start_point": [
        586,
        0
      ],
      "end_point": [
        597,
        1
      ],
      "strings": []
    },
    "mpn_fft_norm_modF": {
      "start_point": [
        604,
        0
      ],
      "end_point": [
        633,
        1
      ],
      "strings": []
    },
    "mpn_mul_fft_decompose": {
      "start_point": [
        641,
        0
      ],
      "end_point": [
        716,
        1
      ],
      "strings": []
    },
    "mpn_mul_fft_internal": {
      "start_point": [
        724,
        0
      ],
      "end_point": [
        807,
        1
      ],
      "strings": []
    },
    "mpn_mul_fft_lcm": {
      "start_point": [
        810,
        0
      ],
      "end_point": [
        821,
        1
      ],
      "strings": []
    },
    "mpn_mul_fft": {
      "start_point": [
        824,
        0
      ],
      "end_point": [
        907,
        1
      ],
      "strings": [
        "\"\\nmpn_mul_fft pl=%ld nl=%ld ml=%ld k=%d\\n\"",
        "\"N=%ld K=%ld, M=%ld, l=%ld, maxLK=%ld, Np=%ld, np=%ld\\n\"",
        "\"new maxLK=%ld, Np=%ld, np=%ld\\n\"",
        "\"%ldx%ld limbs -> %ld times %ldx%ld limbs (%1.2f)\\n\"",
        "\"   temp space %ld\\n\""
      ]
    },
    "mpn_mul_fft_full": {
      "start_point": [
        911,
        0
      ],
      "end_point": [
        1012,
        1
      ],
      "strings": [
        "\"mpn_mul_fft_full nl=%ld ml=%ld -> pl2=%ld pl3=%ld k=%d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mul_n.c": {
    "mpn_mul_n": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mu_bdiv_q.c": {
    "mpn_mu_bdiv_q": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": []
    },
    "mpn_mu_bdiv_q_itch": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        271,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mu_bdiv_qr.c": {
    "mpn_mu_bdiv_qr": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    },
    "mpn_mu_bdiv_qr_itch": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mu_divappr_q.c": {
    "mpn_mu_divappr_q": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "mpn_preinv_mu_divappr_q": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": [
        "\"  %d(%.1f%%)\"",
        "\"\\n\""
      ]
    },
    "mpn_mu_divappr_q_choose_in": {
      "start_point": [
        314,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": []
    },
    "mpn_mu_divappr_q_itch": {
      "start_point": [
        347,
        0
      ],
      "end_point": [
        365,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mu_div_q.c": {
    "mpn_mu_div_q": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    },
    "mpn_mu_div_q_itch": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/mu_div_qr.c": {
    "mpn_mu_div_qr": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "mpn_mu_div_qr2": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": []
    },
    "mpn_preinv_mu_div_qr": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": [
        "\"  %d(%.1f%%)\"",
        "\"\\n\""
      ]
    },
    "mpn_mu_div_qr_choose_in": {
      "start_point": [
        365,
        0
      ],
      "end_point": [
        396,
        1
      ],
      "strings": []
    },
    "mpn_mu_div_qr_itch": {
      "start_point": [
        398,
        0
      ],
      "end_point": [
        407,
        1
      ],
      "strings": []
    },
    "mpn_preinv_mu_div_qr_itch": {
      "start_point": [
        409,
        0
      ],
      "end_point": [
        416,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/neg.c": {},
  "gmp/gmp-6.1.2/mpn/generic/nussbaumer_mul.c": {
    "mpn_nussbaumer_mul": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/perfpow.c": {
    "pow_equals": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "is_kth_power": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "perfpow": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": []
    },
    "mpn_perfect_power_p": {
      "start_point": [
        241,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/perfsqr.c": {
    "mpn_perfect_square_p": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": [
        "\"mpn_perfect_square_p %Nd\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/popham.c": {},
  "gmp/gmp-6.1.2/mpn/generic/powlo.c": {
    "getbits": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "win_size": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "mpn_powlo": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/powm.c": {
    "getbits": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "win_size": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": []
    },
    "redcify": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "mpn_powm": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        230,
        5
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/pow_1.c": {
    "mpn_pow_1": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/pre_divrem_1.c": {
    "mpn_preinv_divrem_1": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/pre_mod_1.c": {
    "mpn_preinv_mod_1": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/random.c": {
    "mpn_random": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/random2.c": {
    "mpn_random2": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "gmp_rrandomb": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/redc_1.c": {
    "mpn_redc_1": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/redc_2.c": {
    "mpn_addmul_2": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "mpn_redc_2": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/redc_n.c": {
    "mpn_redc_n": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/remove.c": {
    "mpn_bdiv_qr_wrap": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "mpn_remove": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/rootrem.c": {
    "mpn_rootrem": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    },
    "logbased_root": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "mpn_rootrem_internal": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        515,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/rshift.c": {
    "mpn_rshift": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sbpi1_bdiv_q.c": {
    "mpn_sbpi1_bdiv_q": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sbpi1_bdiv_qr.c": {
    "mpn_sbpi1_bdiv_qr": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sbpi1_divappr_q.c": {
    "mpn_sbpi1_divappr_q": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sbpi1_div_q.c": {
    "mpn_sbpi1_div_q": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sbpi1_div_qr.c": {
    "mpn_sbpi1_div_qr": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/scan0.c": {
    "mpn_scan0": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/scan1.c": {
    "mpn_scan1": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sec_aors_1.c": {
    "FNAME_itch": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "FNAME": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sec_div.c": {
    "FNAME_itch": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "FNAME": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sec_invert.c": {
    "mpn_cnd_neg_itch": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "mpn_cnd_neg": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "mpn_sec_eq_ui": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "mpn_sec_invert_itch": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "mpn_sec_invert": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sec_mul.c": {
    "mpn_sec_mul": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "mpn_sec_mul_itch": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sec_pi1_div.c": {
    "FNAME": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sec_powm.c": {
    "getbits": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "win_size": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": []
    },
    "redcify": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "mpn_sec_powm": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        372,
        1
      ],
      "strings": []
    },
    "mpn_sec_powm_itch": {
      "start_point": [
        374,
        0
      ],
      "end_point": [
        397,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sec_sqr.c": {
    "mpn_sec_sqr": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "mpn_sec_sqr_itch": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sec_tabselect.c": {
    "mpn_sec_tabselect": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/set_str.c": {
    "mpn_set_str": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "mpn_set_str_compute_powtab": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    },
    "mpn_dc_set_str": {
      "start_point": [
        219,
        0
      ],
      "end_point": [
        275,
        1
      ],
      "strings": []
    },
    "mpn_bc_set_str": {
      "start_point": [
        277,
        0
      ],
      "end_point": [
        373,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sizeinbase.c": {
    "mpn_sizeinbase": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sqr.c": {
    "mpn_sqr": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sqrlo.c": {
    "mpn_sqrlo_itch": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "mpn_dc_sqrlo": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "mpn_sqrlo": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sqrlo_basecase.c": {
    "mpn_sqrlo_basecase": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sqrmod_bnm1.c": {
    "mpn_bc_sqrmod_bnm1": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "mpn_bc_sqrmod_bnp1": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "mpn_sqrmod_bnm1": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        292,
        1
      ],
      "strings": []
    },
    "mpn_sqrmod_bnm1_next_size": {
      "start_point": [
        294,
        0
      ],
      "end_point": [
        312,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sqrtrem.c": {
    "mpn_sqrtrem1": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    },
    "mpn_sqrtrem2": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "mpn_dc_sqrtrem": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": [
        "\"tdiv_qr(,,,,%u,,%u) -> %u\\n\"",
        "\"sqr(,,%u)\\n\""
      ]
    },
    "mpn_divappr_q": {
      "start_point": [
        269,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": []
    },
    "mpn_dc_sqrt": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        416,
        1
      ],
      "strings": [
        "\"div(appr)_q(,,%u,,%u) -> %u \\n\"",
        "\"mul(,,%u,,%u)\\n\"",
        "\"sqr(,,%u)\\n\""
      ]
    },
    "mpn_sqrtrem": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        518,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sqr_basecase.c": {
    "mpn_sqr_basecase": [
      {
        "start_point": [
          87,
          0
        ],
        "end_point": [
          143,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          165,
          0
        ],
        "end_point": [
          280,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          289,
          0
        ],
        "end_point": [
          323,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/sub.c": {},
  "gmp/gmp-6.1.2/mpn/generic/submul_1.c": {
    "mpn_submul_1": [
      {
        "start_point": [
          40,
          0
        ],
        "end_point": [
          65,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          71,
          0
        ],
        "end_point": [
          101,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          107,
          0
        ],
        "end_point": [
          136,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/sub_1.c": {},
  "gmp/gmp-6.1.2/mpn/generic/sub_err1_n.c": {
    "mpn_sub_err1_n": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sub_err2_n.c": {
    "mpn_sub_err2_n": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sub_err3_n.c": {
    "mpn_sub_err3_n": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/sub_n.c": {
    "mpn_sub_n": [
      {
        "start_point": [
          36,
          0
        ],
        "end_point": [
          60,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          66,
          0
        ],
        "end_point": [
          87,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/mpn/generic/tdiv_qr.c": {
    "mpn_tdiv_qr": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        388,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom22_mul.c": {
    "mpn_toom22_mul": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom2_sqr.c": {
    "mpn_toom2_sqr": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom32_mul.c": {
    "mpn_toom32_mul": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom33_mul.c": {
    "mpn_toom33_mul": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        315,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom3_sqr.c": {
    "mpn_toom3_sqr": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom42_mul.c": {
    "mpn_toom42_mul": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom42_mulmid.c": {
    "mpn_toom42_mulmid": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom43_mul.c": {
    "mpn_toom43_mul": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom44_mul.c": {
    "mpn_toom44_mul": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom4_sqr.c": {
    "mpn_toom4_sqr": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom52_mul.c": {
    "mpn_toom52_mul": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom53_mul.c": {
    "mpn_toom53_mul": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        331,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom54_mul.c": {
    "mpn_toom54_mul": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom62_mul.c": {
    "mpn_toom62_mul": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom63_mul.c": {
    "abs_sub_n": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "abs_sub_add_n": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "mpn_toom63_mul": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom6h_mul.c": {
    "mpn_toom6h_mul": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom6_sqr.c": {
    "mpn_toom6_sqr": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom8h_mul.c": {
    "mpn_toom8h_mul": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom8_sqr.c": {
    "mpn_toom8_sqr": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_couple_handling.c": {
    "mpn_toom_couple_handling": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_eval_dgr3_pm1.c": {
    "mpn_toom_eval_dgr3_pm1": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_eval_dgr3_pm2.c": {
    "mpn_toom_eval_dgr3_pm2": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_eval_pm1.c": {
    "mpn_toom_eval_pm1": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_eval_pm2.c": {
    "mpn_toom_eval_pm2": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_eval_pm2exp.c": {
    "mpn_toom_eval_pm2exp": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_eval_pm2rexp.c": {
    "DO_mpn_addlsh_n": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "mpn_toom_eval_pm2rexp": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_interpolate_12pts.c": {
    "DO_mpn_sublsh_n": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "DO_mpn_addlsh_n": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "mpn_toom_interpolate_12pts": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        360,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_interpolate_16pts.c": {
    "DO_mpn_sublsh_n": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "DO_mpn_addlsh_n": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "mpn_toom_interpolate_16pts": {
      "start_point": [
        282,
        0
      ],
      "end_point": [
        526,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_interpolate_5pts.c": {
    "mpn_toom_interpolate_5pts": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_interpolate_6pts.c": {
    "mpn_toom_interpolate_6pts": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_interpolate_7pts.c": {
    "mpn_toom_interpolate_7pts": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/toom_interpolate_8pts.c": {
    "DO_mpn_sublsh_n": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "mpn_toom_interpolate_8pts": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/trialdiv.c": {
    "mpn_trialdiv": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/udiv_w_sdiv.c": {
    "mpn_udiv_w_sdiv": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/zero.c": {
    "mpn_zero": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/generic/zero_p.c": {},
  "gmp/gmp-6.1.2/mpn/ia64/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/m68k/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/minithres/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/mips32/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/mips64/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/pa32/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/pa32/hppa1_1/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/pa32/hppa2_0/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/pa64/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/power/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc32/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc32/750/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc32/p3/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc32/p4/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc32/p5/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc32/p6/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc32/p7/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc64/mode32/p4/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc64/mode64/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc64/mode64/p3/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc64/mode64/p4/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc64/mode64/p5/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc64/mode64/p6/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/powerpc64/mode64/p7/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/s390_32/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/s390_32/esame/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/s390_64/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/s390_64/z10/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/sparc32/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/sparc32/ultrasparct1/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/sparc32/v8/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/sparc32/v8/supersparc/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/sparc32/v9/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/sparc64/dive_1.c": {
    "mpn_divexact_1": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/sparc64/divrem_1.c": {
    "mpn_divrem_1": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/sparc64/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/sparc64/mode1o.c": {
    "mpn_modexact_1c_odd": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/sparc64/mod_1.c": {
    "mpn_mod_1_anynorm": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "mpn_mod_1": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        238,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/sparc64/mod_1_4.c": {
    "mpn_mod_1s_4p_cps": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "mpn_mod_1s_4p": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpn/sparc64/sparc64.h": {},
  "gmp/gmp-6.1.2/mpn/sparc64/ultrasparc34/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/sparc64/ultrasparct1/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/vax/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/atom/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/bd1/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/bd2/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/bobcat/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/core2/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/coreihwl/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/coreinhm/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/coreisbr/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/com.c": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/fat.c": {
    "fake_cpuid_lookup": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"GMP_CPU_TYPE\"",
        "\"Need GMP_CPU_TYPE environment variable for fake cpuid\\n\"",
        "\"GMP_CPU_TYPE=%s unknown\\n\""
      ]
    },
    "fake_cpuid_available": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "fake_cpuid": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": [
        "\"fake_cpuid(): oops, unknown id %d\\n\""
      ]
    },
    "__gmpn_cpuvec_init": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        486,
        1
      ],
      "strings": [
        "\"__gmpn_cpuvec_init:\\n\"",
        "\"  80386, or early 80486 without cpuid\\n\"",
        "\"GenuineIntel\"",
        "\"  80486 with cpuid\\n\"",
        "\"  pentium\\n\"",
        "\"  pentiummmx\\n\"",
        "\"  p6\\n\"",
        "\"  pentiumpro\\n\"",
        "\"  pentium2\\n\"",
        "\"  pentium3\\n\"",
        "\"  Banias/Dothan/Yonah\\n\"",
        "\"  Conroe\\n\"",
        "\"  atom\\n\"",
        "\"  nehalem/westmere\\n\"",
        "\"  sandybridge\\n\"",
        "\"  pentium4\\n\"",
        "\"AuthenticAMD\"",
        "\"  k5\\n\"",
        "\"  k6\\n\"",
        "\"  k62\\n\"",
        "\"  k63\\n\"",
        "\"  athlon\\n\"",
        "\"  k8\\n\"",
        "\"  k10\\n\"",
        "\"  bobcat\\n\"",
        "\"  bulldozer\\n\"",
        "\"CentaurHauls\"",
        "\"  viac3\\n\"",
        "\"  viac32\\n\"",
        "\"  nano\\n\"",
        "\"CyrixInstead\"",
        "\"  cyrix something\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpn/x86/fat/gcd_1.c": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/lshiftc.c": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/mode1o.c": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/mod_1.c": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/mod_1_1.c": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/mod_1_2.c": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/mod_1_4.c": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/mullo_basecase.c": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/redc_1.c": {},
  "gmp/gmp-6.1.2/mpn/x86/fat/redc_2.c": {},
  "gmp/gmp-6.1.2/mpn/x86/geode/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/i486/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/k10/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/k6/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/k7/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/k8/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/nano/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/p6/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/p6/mmx/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/p6/sse2/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/pentium/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/pentium/mmx/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86/pentium4/sse2/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/atom/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/bd1/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/bd2/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/bobcat/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/core2/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/coreibwl/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/coreihwl/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/coreinhm/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/coreisbr/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/fat/fat.c": {
    "fake_cpuid_lookup": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": [
        "\"GMP_CPU_TYPE\"",
        "\"Need GMP_CPU_TYPE environment variable for fake cpuid\\n\"",
        "\"GMP_CPU_TYPE=%s unknown\\n\""
      ]
    },
    "fake_cpuid": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"fake_cpuid(): oops, unknown id %d\\n\""
      ]
    },
    "gmp_workaround_skylake_cpuid_bug": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": [
        "\" G44\"",
        "\" G45\"",
        "\" G39\""
      ]
    },
    "__gmpn_cpuvec_init": {
      "start_point": [
        251,
        0
      ],
      "end_point": [
        451,
        1
      ],
      "strings": [
        "\"__gmpn_cpuvec_init:\\n\"",
        "\"GenuineIntel\"",
        "\"AuthenticAMD\"",
        "\"CentaurHauls\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpn/x86_64/fat/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/fat/mod_1.c": {},
  "gmp/gmp-6.1.2/mpn/x86_64/fat/mullo_basecase.c": {},
  "gmp/gmp-6.1.2/mpn/x86_64/fat/mul_basecase.c": {},
  "gmp/gmp-6.1.2/mpn/x86_64/fat/redc_1.c": {},
  "gmp/gmp-6.1.2/mpn/x86_64/fat/redc_2.c": {},
  "gmp/gmp-6.1.2/mpn/x86_64/fat/sqr_basecase.c": {},
  "gmp/gmp-6.1.2/mpn/x86_64/k10/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/k8/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/nano/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/pentium4/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpn/x86_64/skylake/gmp-mparam.h": {},
  "gmp/gmp-6.1.2/mpq/abs.c": {
    "mpq_abs": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/aors.c": {
    "mpq_aors": {
      "start_point": [
        38,
        17
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "mpq_add": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "mpq_sub": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/canonicalize.c": {
    "mpq_canonicalize": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/clear.c": {
    "mpq_clear": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/clears.c": {
    "mpq_clears": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/cmp.c": {
    "mpq_cmp_numden": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "mpq_cmp": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "mpq_cmp_z": {
      "start_point": [
        161,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/cmp_si.c": {
    "_mpq_cmp_si": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/cmp_ui.c": {
    "_mpq_cmp_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/div.c": {
    "mpq_div": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/equal.c": {
    "mpq_equal": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/get_d.c": {
    "mpq_get_d": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/get_den.c": {
    "mpq_get_den": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/get_num.c": {
    "mpq_get_num": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/get_str.c": {
    "mpq_get_str": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/init.c": {
    "mpq_init": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/inits.c": {
    "mpq_inits": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/inp_str.c": {
    "mpq_inp_str": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/inv.c": {
    "mpq_inv": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/md_2exp.c": {
    "mord_2exp": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "mpq_mul_2exp": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "mpq_div_2exp": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/mul.c": {
    "mpq_mul": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/neg.c": {
    "mpq_neg": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/out_str.c": {
    "mpq_out_str": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/set.c": {
    "mpq_set": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/set_d.c": {
    "mpq_set_d": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/set_den.c": {
    "mpq_set_den": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/set_f.c": {
    "mpq_set_f": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/set_num.c": {
    "mpq_set_num": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/set_si.c": {
    "mpq_set_si": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/set_str.c": {
    "mpq_set_str": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/set_ui.c": {
    "mpq_set_ui": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/set_z.c": {
    "mpq_set_z": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpq/swap.c": {
    "mpq_swap": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/2fac_ui.c": {
    "mpz_2fac_ui": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/abs.c": {
    "mpz_abs": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/add.c": {},
  "gmp/gmp-6.1.2/mpz/add_ui.c": {},
  "gmp/gmp-6.1.2/mpz/and.c": {
    "mpz_and": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/aors.h": {
    "FUNCTION": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/aorsmul.c": {
    "mpz_aorsmul": {
      "start_point": [
        50,
        17
      ],
      "end_point": [
        150,
        1
      ],
      "strings": []
    },
    "mpz_addmul": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "mpz_submul": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/aorsmul_i.c": {
    "mpz_aorsmul_1": {
      "start_point": [
        68,
        16
      ],
      "end_point": [
        197,
        1
      ],
      "strings": []
    },
    "mpz_addmul_ui": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    },
    "mpz_submul_ui": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/aors_ui.h": {
    "FUNCTION": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/array_init.c": {
    "mpz_array_init": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/bin_ui.c": {
    "mpz_bin_ui": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/bin_uiui.c": {
    "mul1": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "mul2": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "mul3": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "mul4": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "mul5": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    },
    "mul6": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "mul7": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    },
    "mul8": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": []
    },
    "mpz_bdiv_bin_uiui": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        311,
        1
      ],
      "strings": []
    },
    "mpz_smallk_bin_uiui": {
      "start_point": [
        313,
        0
      ],
      "end_point": [
        360,
        1
      ],
      "strings": []
    },
    "bc_bin_uiui": {
      "start_point": [
        371,
        0
      ],
      "end_point": [
        377,
        1
      ],
      "strings": []
    },
    "mpz_smallkdc_bin_uiui": {
      "start_point": [
        398,
        0
      ],
      "end_point": [
        444,
        1
      ],
      "strings": []
    },
    "bit_to_n": {
      "start_point": [
        515,
        0
      ],
      "end_point": [
        516,
        48
      ],
      "strings": []
    },
    "id_to_n": {
      "start_point": [
        520,
        0
      ],
      "end_point": [
        521,
        50
      ],
      "strings": []
    },
    "n_to_bit": {
      "start_point": [
        524,
        0
      ],
      "end_point": [
        525,
        47
      ],
      "strings": []
    },
    "primesieve_size": {
      "start_point": [
        527,
        0
      ],
      "end_point": [
        528,
        73
      ],
      "strings": []
    },
    "limb_apprsqrt": {
      "start_point": [
        560,
        0
      ],
      "end_point": [
        569,
        1
      ],
      "strings": []
    },
    "mpz_goetgheluck_bin_uiui": {
      "start_point": [
        571,
        0
      ],
      "end_point": [
        648,
        1
      ],
      "strings": []
    },
    "mpz_bin_uiui": {
      "start_point": [
        661,
        0
      ],
      "end_point": [
        695,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cdiv_q.c": {
    "mpz_cdiv_q": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cdiv_qr.c": {
    "mpz_cdiv_qr": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cdiv_qr_ui.c": {
    "mpz_cdiv_qr_ui": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cdiv_q_ui.c": {
    "mpz_cdiv_q_ui": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cdiv_r.c": {
    "mpz_cdiv_r": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cdiv_r_ui.c": {
    "mpz_cdiv_r_ui": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cdiv_ui.c": {
    "mpz_cdiv_ui": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cfdiv_q_2exp.c": {
    "cfdiv_q_2exp": {
      "start_point": [
        40,
        17
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "mpz_cdiv_q_2exp": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "mpz_fdiv_q_2exp": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cfdiv_r_2exp.c": {
    "cfdiv_r_2exp": {
      "start_point": [
        43,
        17
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "mpz_cdiv_r_2exp": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "mpz_fdiv_r_2exp": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/clear.c": {
    "mpz_clear": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/clears.c": {
    "mpz_clears": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/clrbit.c": {
    "mpz_clrbit": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cmp.c": {
    "mpz_cmp": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cmpabs.c": {
    "mpz_cmpabs": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cmpabs_d.c": {
    "mpz_cmpabs_d": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cmpabs_ui.c": {
    "mpz_cmpabs_ui": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cmp_d.c": {
    "mpz_cmp_d": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cmp_si.c": {
    "_mpz_cmp_si": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cmp_ui.c": {
    "_mpz_cmp_ui": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/com.c": {
    "mpz_com": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/combit.c": {
    "mpz_combit": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cong.c": {
    "mpz_congruent_p": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cong_2exp.c": {
    "mpz_congruent_2exp_p": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/cong_ui.c": {
    "mpz_congruent_ui_p": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/divegcd.c": {
    "mpz_divexact_by3": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "mpz_divexact_by5": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "mpz_divexact_limb": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "mpz_divexact_gcd": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/divexact.c": {
    "mpz_divexact": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/dive_ui.c": {
    "mpz_divexact_ui": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/divis.c": {
    "mpz_divisible_p": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/divis_2exp.c": {
    "mpz_divisible_2exp_p": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/divis_ui.c": {
    "mpz_divisible_ui_p": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/dump.c": {
    "mpz_dump": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"%s\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpz/export.c": {
    "mpz_export": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/fac_ui.c": {
    "mpz_fac_ui": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/fdiv_q.c": {
    "mpz_fdiv_q": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/fdiv_qr.c": {
    "mpz_fdiv_qr": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/fdiv_qr_ui.c": {
    "mpz_fdiv_qr_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/fdiv_q_ui.c": {
    "mpz_fdiv_q_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/fdiv_r.c": {
    "mpz_fdiv_r": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/fdiv_r_ui.c": {
    "mpz_fdiv_r_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/fdiv_ui.c": {
    "mpz_fdiv_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/fib2_ui.c": {
    "mpz_fib2_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/fib_ui.c": {
    "mpz_fib_ui": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"mpz_fib_ui last step n=%lu size=%ld bit=%lu\\n\"",
        "\"xp\"",
        "\"yp\"",
        "\"done special, size=%ld\\n\"",
        "\"fp \""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpz/fits_s.h": {
    "FUNCTION": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/fits_sint.c": {},
  "gmp/gmp-6.1.2/mpz/fits_slong.c": {},
  "gmp/gmp-6.1.2/mpz/fits_sshort.c": {},
  "gmp/gmp-6.1.2/mpz/fits_uint.c": {},
  "gmp/gmp-6.1.2/mpz/fits_ulong.c": {},
  "gmp/gmp-6.1.2/mpz/fits_ushort.c": {},
  "gmp/gmp-6.1.2/mpz/gcd.c": {
    "mpz_gcd": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/gcdext.c": {
    "mpz_gcdext": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/gcd_ui.c": {
    "mpz_gcd_ui": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/getlimbn.c": {},
  "gmp/gmp-6.1.2/mpz/get_d.c": {
    "mpz_get_d": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/get_d_2exp.c": {
    "mpz_get_d_2exp": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/get_si.c": {
    "mpz_get_si": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/get_str.c": {
    "mpz_get_str": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": [
        "\"0123456789abcdefghijklmnopqrstuvwxyz\"",
        "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"",
        "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpz/get_ui.c": {},
  "gmp/gmp-6.1.2/mpz/hamdist.c": {
    "mpz_hamdist": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/import.c": {
    "mpz_import": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/init.c": {
    "mpz_init": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/init2.c": {
    "mpz_init2": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"gmp: overflow in mpz type\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpz/inits.c": {
    "mpz_inits": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/inp_raw.c": {
    "mpz_inp_raw": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/inp_str.c": {
    "mpz_inp_str": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "mpz_inp_str_nowhite": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/invert.c": {
    "mpz_invert": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/ior.c": {
    "mpz_ior": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/iset.c": {
    "mpz_init_set": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/iset_d.c": {
    "mpz_init_set_d": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/iset_si.c": {
    "mpz_init_set_si": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/iset_str.c": {
    "mpz_init_set_str": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/iset_ui.c": {
    "mpz_init_set_ui": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/jacobi.c": {
    "mpz_jacobi": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/kronsz.c": {
    "mpz_si_kronecker": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/kronuz.c": {
    "mpz_ui_kronecker": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/kronzs.c": {
    "mpz_kronecker_si": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/kronzu.c": {
    "mpz_kronecker_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/lcm.c": {
    "mpz_lcm": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/lcm_ui.c": {
    "mpz_lcm_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/limbs_finish.c": {
    "mpz_limbs_finish": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/limbs_modify.c": {
    "mpz_limbs_modify": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/limbs_read.c": {
    "mpz_limbs_read": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/limbs_write.c": {
    "mpz_limbs_write": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/lucnum2_ui.c": {
    "mpz_lucnum2_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/lucnum_ui.c": {
    "mpz_lucnum_ui": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        208,
        1
      ],
      "strings": [
        "\"mpn_lucnum_ui n=%lu\\n\"",
        "\"  initial odd n=%lu\\n\"",
        "\"  l\"",
        "\"  initial small n=%lu\\n\"",
        "\"  l\"",
        "\"  zeros=%d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpz/mfac_uiui.c": {
    "mpz_mfac_uiui": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/millerrabin.c": {
    "mpz_millerrabin": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "millerrabin": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/mod.c": {
    "mpz_mod": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/mul.c": {
    "mpz_mul": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/mul_2exp.c": {
    "mpz_mul_2exp": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/mul_i.h": {
    "FUNCTION": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/mul_si.c": {},
  "gmp/gmp-6.1.2/mpz/mul_ui.c": {},
  "gmp/gmp-6.1.2/mpz/neg.c": {
    "mpz_neg": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/nextprime.c": {
    "mpz_nextprime": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/n_pow_ui.c": {
    "mpz_n_pow_ui": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        532,
        1
      ],
      "strings": [
        "\"mpz_n_pow_ui rp=0x%lX bp=0x%lX bsize=%ld e=%lu (0x%lX)\\n\"",
        "\"b\"",
        "\"rneg %d\\n\"",
        "\"trailing zero rtwos_limbs=%ld\\n\"",
        "\"trailing zero btwos=%d rtwos_limbs=%ld rtwos_bits=%lu\\n\"",
        "\"small e=0x%lX blimb=0x%lX rl=0x%lX\\n\"",
        "\"single power, e=0x%lX b=0x%lX rl=0x%lX\\n\"",
        "\"double power e=0x%lX blimb=0x%lX:0x%lX rl=0x%lX:%lX\\n\"",
        "\"merged rtwos_bits, rl=0x%lX:%lX\\n\"",
        "\"small power e=0x%lX blimb=0x%lX rl=0x%lX\\n\"",
        "\"merged rtwos_bits, rl=0x%lX\\n\"",
        "\"bsize==2 using b=0x%lX:%lX\"",
        "\"rshift or copy bp,bsize, new bsize=%ld\\n\"",
        "\"big bsize=%ld  \"",
        "\"b\"",
        "\"ralloc %ld, from bsize=%ld blimb=0x%lX cnt=%d\\n\"",
        "\"talloc %ld\\n\"",
        "\"mul_2 loop i=%d e=0x%lX, rsize=%ld ralloc=%ld talloc=%ld\\n\"",
        "\"r\"",
        "\"mul_2 before rl, r\"",
        "\"mul_1 loop i=%d e=0x%lX, rsize=%ld ralloc=%ld talloc=%ld\\n\"",
        "\"r\"",
        "\"mul_1 before rl, r\"",
        "\"mul loop i=%d e=0x%lX, rsize=%ld ralloc=%ld talloc=%ld\\n\"",
        "\"r\"",
        "\"end loop r\"",
        "\"lshift r\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpz/oddfac_1.c": {
    "bit_to_n": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        100,
        48
      ],
      "strings": []
    },
    "id_to_n": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        105,
        50
      ],
      "strings": []
    },
    "n_to_bit": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        109,
        47
      ],
      "strings": []
    },
    "primesieve_size": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        113,
        73
      ],
      "strings": []
    },
    "limb_apprsqrt": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "mpz_2multiswing_1": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": []
    },
    "mpz_oddfac_1": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        423,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/out_raw.c": {
    "mpz_out_raw": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": [
        "\"_CRI ivdep\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpz/out_str.c": {
    "mpz_out_str": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"0123456789abcdefghijklmnopqrstuvwxyz\"",
        "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"",
        "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpz/perfpow.c": {
    "mpz_perfect_power_p": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/perfsqr.c": {},
  "gmp/gmp-6.1.2/mpz/popcount.c": {},
  "gmp/gmp-6.1.2/mpz/powm.c": {
    "mpz_powm": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/powm_sec.c": {
    "mpz_powm_sec": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/powm_ui.c": {
    "mod": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "reduce": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "mpz_powm_ui": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        291,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/pow_ui.c": {
    "mpz_pow_ui": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/pprime_p.c": {
    "mpz_probab_prime_p": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "isprime": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/primorial_ui.c": {
    "bit_to_n": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        87,
        48
      ],
      "strings": []
    },
    "id_to_n": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        92,
        50
      ],
      "strings": []
    },
    "n_to_bit": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        96,
        47
      ],
      "strings": []
    },
    "primesieve_size": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        100,
        73
      ],
      "strings": []
    },
    "mpz_primorial_ui": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/prodlimbs.c": {
    "mpz_prodlimbs": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/random.c": {
    "mpz_random": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/random2.c": {
    "mpz_random2": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/realloc.c": {
    "_mpz_realloc": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": [
        "\"gmp: overflow in mpz type\\n\"",
        "\"gmp: overflow in mpz type\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpz/realloc2.c": {
    "mpz_realloc2": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"gmp: overflow in mpz type\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/mpz/remove.c": {
    "mpz_remove": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/roinit_n.c": {
    "mpz_roinit_n": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/root.c": {
    "mpz_root": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/rootrem.c": {
    "mpz_rootrem": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/rrandomb.c": {
    "mpz_rrandomb": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "gmp_rrandomb": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/scan0.c": {
    "mpz_scan0": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/scan1.c": {
    "mpz_scan1": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/set.c": {
    "mpz_set": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/setbit.c": {
    "mpz_setbit": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/set_d.c": {
    "mpz_set_d": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/set_f.c": {
    "mpz_set_f": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/set_q.c": {},
  "gmp/gmp-6.1.2/mpz/set_si.c": {
    "mpz_set_si": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/set_str.c": {
    "mpz_set_str": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/set_ui.c": {
    "mpz_set_ui": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/size.c": {},
  "gmp/gmp-6.1.2/mpz/sizeinbase.c": {
    "mpz_sizeinbase": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/sqrt.c": {
    "mpz_sqrt": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/sqrtrem.c": {
    "mpz_sqrtrem": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/sub.c": {},
  "gmp/gmp-6.1.2/mpz/sub_ui.c": {},
  "gmp/gmp-6.1.2/mpz/swap.c": {
    "mpz_swap": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/tdiv_q.c": {
    "mpz_tdiv_q": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/tdiv_qr.c": {
    "mpz_tdiv_qr": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/tdiv_qr_ui.c": {
    "mpz_tdiv_qr_ui": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/tdiv_q_2exp.c": {
    "mpz_tdiv_q_2exp": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/tdiv_q_ui.c": {
    "mpz_tdiv_q_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/tdiv_r.c": {
    "mpz_tdiv_r": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/tdiv_r_2exp.c": {
    "mpz_tdiv_r_2exp": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/tdiv_r_ui.c": {
    "mpz_tdiv_r_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/tdiv_ui.c": {
    "mpz_tdiv_ui": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/tstbit.c": {
    "mpz_tstbit": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/ui_pow_ui.c": {
    "mpz_ui_pow_ui": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/ui_sub.c": {
    "mpz_ui_sub": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/urandomb.c": {
    "mpz_urandomb": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/urandomm.c": {
    "mpz_urandomm": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/mpz/xor.c": {
    "mpz_xor": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/asprintf.c": {
    "gmp_asprintf": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/asprntffuns.c": {
    "__gmp_asprintf_memory": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "__gmp_asprintf_reps": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "__gmp_asprintf_final": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/doprnt.c": {
    "__gmp_doprnt": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        626,
        1
      ],
      "strings": [
        "\"gmp_doprnt \\\"%s\\\"\\n\"",
        "\"next: \\\"%s\\\"\\n\"",
        "\"considering\\n\"",
        "\"  last: \\\"%s\\\"\\n\"",
        "\"  this: \\\"%s\\\"\\n\"",
        "\"e%c%02ld\"",
        "\"p%c%ld\"",
        "\"P%c%ld\"",
        "\"integer, base=%d\\n\"",
        "\"E%c%02ld\"",
        "\"E%c%02ld\"",
        "\"remainder: \\\"%s\\\"\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/printf/doprntf.c": {
    "__gmp_doprnt_mpf": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        389,
        1
      ],
      "strings": [
        "\"__gmp_doprnt_float\\n\"",
        "\"  conv=%d prec=%d\\n\"",
        "\"  ndigits %d\\n\"",
        "\"  s   %s\\n\"",
        "\"  exp %ld\\n\"",
        "\"  len %d\\n\"",
        "\"  sign %c  signlen %d\\n\"",
        "\"0123456789abcdefghijklmnopqrstuvwxyz\"",
        "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
        "\"  rounding with %d\\n\"",
        "\"  storing now %d\\n\"",
        "\"  fixed 0.000sss\\n\"",
        "\"  fixed sss.sss or sss000\\n\"",
        "\"  scientific s.sss\\n\"",
        "\"  expfmt %s gives %s\\n\"",
        "\"  intlen %d intzeros %d fraczeros %d fraclen %d\\n\"",
        "\"  prec=%d showtrailing=%d, pad with preczeros %d\\n\"",
        "\"  point |%s|  pointlen %d\\n\"",
        "\"0x\"",
        "\"0X\"",
        "\"0\"",
        "\"  showbase %s showbaselen %d\\n\"",
        "\"\"",
        "\"  justlen %d fill 0x%X\\n\"",
        "\"  justify type %d  intlen %d pointlen %d fraclen %d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/printf/doprnti.c": {
    "__gmp_doprnt_integer": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": [
        "\"0x\"",
        "\"0X\"",
        "\"0\""
      ]
    }
  },
  "gmp/gmp-6.1.2/printf/fprintf.c": {
    "gmp_fprintf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/obprintf.c": {
    "gmp_obstack_printf": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/obprntffuns.c": {
    "gmp_obstack_memory": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "gmp_obstack_reps": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/obvprintf.c": {
    "gmp_obstack_vprintf": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/printf.c": {
    "gmp_printf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/printffuns.c": {
    "gmp_fprintf_memory": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "gmp_fprintf_reps": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/repl-vsnprintf.c": {
    "strnlen": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "__gmp_replacement_vsnprintf": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        393,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/snprintf.c": {
    "gmp_snprintf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/snprntffuns.c": {
    "gmp_snprintf_format": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "gmp_snprintf_memory": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "gmp_snprintf_reps": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": []
    },
    "gmp_snprintf_final": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/sprintf.c": {
    "gmp_sprintf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/sprintffuns.c": {
    "gmp_sprintf_format": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "gmp_sprintf_memory": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "gmp_sprintf_reps": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "gmp_sprintf_final": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/vasprintf.c": {
    "gmp_asprintf_format": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "gmp_vasprintf": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/vfprintf.c": {
    "gmp_vfprintf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/vprintf.c": {
    "gmp_vprintf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/vsnprintf.c": {
    "gmp_vsnprintf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/printf/vsprintf.c": {
    "gmp_vsprintf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/rand.c": {
    "gmp_randinit": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/randbui.c": {
    "gmp_urandomb_ui": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/randclr.c": {
    "gmp_randclear": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/randdef.c": {
    "gmp_randinit_default": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/randiset.c": {
    "gmp_randinit_set": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/randlc2s.c": {
    "gmp_randinit_lc_2exp_size": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/randlc2x.c": {
    "lc": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "randget_lc": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    },
    "randseed_lc": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    },
    "randclear_lc": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": []
    },
    "randiset_lc": {
      "start_point": [
        264,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": []
    },
    "gmp_randinit_lc_2exp": {
      "start_point": [
        292,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/randmt.c": {
    "__gmp_mt_recalc_buffer": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "__gmp_randget_mt": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": []
    },
    "__gmp_randclear_mt": {
      "start_point": [
        356,
        0
      ],
      "end_point": [
        361,
        1
      ],
      "strings": []
    },
    "__gmp_randiset_mt": {
      "start_point": [
        372,
        0
      ],
      "end_point": [
        393,
        1
      ],
      "strings": []
    },
    "__gmp_randinit_mt_noseed": {
      "start_point": [
        395,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/randmt.h": {},
  "gmp/gmp-6.1.2/rand/randmts.c": {
    "mangle_seed": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "randseed_mt": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    },
    "gmp_randinit_mt": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/randmui.c": {
    "gmp_urandomm_ui": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/rands.c": {},
  "gmp/gmp-6.1.2/rand/randsd.c": {
    "gmp_randseed": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/rand/randsdui.c": {
    "gmp_randseed_ui": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/scanf/doscan.c": {
    "gmpscan": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        440,
        1
      ],
      "strings": [
        "\"gmpscan\\n\"",
        "\"\tconvert \\\"%s\\\"\\n\"",
        "\"\tungetc %d, to give %d chars\\n\"",
        "\"\tinvalid\\n\"",
        "\"  return %d chars (cf width %d)\\n\""
      ]
    },
    "skip_white": {
      "start_point": [
        446,
        0
      ],
      "end_point": [
        464,
        1
      ],
      "strings": [
        "\"  skip white %d\\n\""
      ]
    },
    "__gmp_doscan": {
      "start_point": [
        467,
        0
      ],
      "end_point": [
        767,
        1
      ],
      "strings": [
        "\"__gmp_doscan \\\"%s\\\"\\n\"",
        "\"  s=\\\"%s\\\"\\n\"",
        "\"\tthis_fmt \\\"%s\\\"\\n\"",
        "\"  scan \\\"%s\\\"\\n\"",
        "\"\ts=\\\"%s\\\"\\n\"",
        "\"  new_fields %d   new_chars %d\\n\"",
        "\"  store %%n to %p\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/scanf/fscanf.c": {
    "gmp_fscanf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/scanf/fscanffuns.c": {
    "step": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/scanf/scanf.c": {
    "gmp_scanf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/scanf/sscanf.c": {
    "gmp_sscanf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/scanf/sscanffuns.c": {
    "scan": [
      {
        "start_point": [
          41,
          0
        ],
        "end_point": [
          52,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          54,
          0
        ],
        "end_point": [
          70,
          1
        ],
        "strings": []
      }
    ],
    "step": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "get": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "unget": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/scanf/vfscanf.c": {
    "gmp_vfscanf": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/scanf/vscanf.c": {
    "gmp_vscanf": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/scanf/vsscanf.c": {
    "gmp_vsscanf": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/amd64check.c": {
    "calling_conventions_check": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"Violated calling conventions:\\n\"",
        "\"%s   rflags dir bit  got %d want 0\\n\"",
        "\"\"",
        "\"%s   fpu tags  got 0x%X want 0xFFFF\\n\"",
        "\"\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/arm32check.c": {
    "calling_conventions_check": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"Violated calling conventions:\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/memory.c": {
    "tests_memory_find": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "tests_memory_valid": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "tests_allocate": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"tests_allocate(): attempt to allocate 0 bytes\\n\""
      ]
    },
    "tests_reallocate": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"tests_reallocate(): attempt to reallocate %p to 0 bytes\\n\"",
        "\"tests_reallocate(): attempt to reallocate bad pointer %p\\n\"",
        "\"tests_reallocate(): bad old size %lu, should be %lu\\n\"",
        "\"in realloc: redzone clobbered before block\\n\"",
        "\"in realloc: redzone clobbered after block\\n\""
      ]
    },
    "tests_free_find": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": [
        "\"tests_free(): attempt to free bad pointer %p\\n\""
      ]
    },
    "tests_free_nosize": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": [
        "\"in free: redzone clobbered before block\\n\"",
        "\"in free: redzone clobbered after block\\n\""
      ]
    },
    "tests_free": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": [
        "\"tests_free(): bad size %lu, should be %lu\\n\""
      ]
    },
    "tests_memory_start": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    },
    "tests_memory_end": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        246,
        1
      ],
      "strings": [
        "\"tests_memory_end(): not all memory freed\\n\"",
        "\"    %u blocks remaining\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/misc.c": {
    "tests_start": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": [
        "\"%u.%u.%u\"",
        "\"tests are not linked to the newly compiled library\\n\"",
        "\"  local version is: %s\\n\"",
        "\"  linked version is: %s\\n\""
      ]
    },
    "tests_end": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "tests_rand_start": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"Please let tests_start() initialize the global __gmp_rands.\\n\"",
        "\"ie. ensure that function is called before the first use of RANDS.\\n\"",
        "\"GMP_CHECK_RANDOMIZE\"",
        "\"Re-seeding with GMP_CHECK_RANDOMIZE=%lu\\n\"",
        "\"Seed GMP_CHECK_RANDOMIZE=%lu (include this in bug reports)\\n\""
      ]
    },
    "tests_rand_end": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "align_pointer": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "__gmp_allocate_func_aligned": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    },
    "__gmp_allocate_or_reallocate": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "__gmp_allocate_strdup": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "strtoupper": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "mpz_set_n": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "mpz_init_set_n": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    },
    "mpn_diff_lowest": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": []
    },
    "mpn_diff_highest": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        246,
        1
      ],
      "strings": []
    },
    "byte_diff_lowest": {
      "start_point": [
        250,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    },
    "byte_diff_highest": {
      "start_point": [
        265,
        0
      ],
      "end_point": [
        276,
        1
      ],
      "strings": []
    },
    "mpz_set_str_or_abort": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": [
        "\"ERROR: mpz_set_str failed\\n\"",
        "\"   str  = \\\"%s\\\"\\n\"",
        "\"   base = %d\\n\""
      ]
    },
    "mpq_set_str_or_abort": {
      "start_point": [
        291,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": [
        "\"ERROR: mpq_set_str failed\\n\"",
        "\"   str  = \\\"%s\\\"\\n\"",
        "\"   base = %d\\n\""
      ]
    },
    "mpf_set_str_or_abort": {
      "start_point": [
        303,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": [
        "\"ERROR mpf_set_str failed\\n\"",
        "\"   str  = \\\"%s\\\"\\n\"",
        "\"   base = %d\\n\""
      ]
    },
    "mpz_pow2abs_p": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "mpz_erandomb": {
      "start_point": [
        344,
        0
      ],
      "end_point": [
        348,
        1
      ],
      "strings": []
    },
    "mpz_erandomb_nonzero": {
      "start_point": [
        350,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": []
    },
    "mpz_errandomb": {
      "start_point": [
        358,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": []
    },
    "mpz_errandomb_nonzero": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        370,
        1
      ],
      "strings": []
    },
    "mpz_negrandom": {
      "start_point": [
        372,
        0
      ],
      "end_point": [
        379,
        1
      ],
      "strings": []
    },
    "urandom": {
      "start_point": [
        381,
        0
      ],
      "end_point": [
        393,
        1
      ],
      "strings": []
    },
    "call_rand_algs": {
      "start_point": [
        397,
        0
      ],
      "end_point": [
        438,
        1
      ],
      "strings": [
        "\"gmp_randinit_default\"",
        "\"gmp_randinit_mt\"",
        "\"gmp_randinit_lc_2exp_size 8\"",
        "\"gmp_randinit_lc_2exp_size 16\"",
        "\"gmp_randinit_lc_2exp_size 128\"",
        "\"gmp_randinit_lc_2exp a=0 c=0 m=8\"",
        "\"gmp_randinit_lc_2exp a=0 c=0xFF m=8\""
      ]
    },
    "tests_infinity_d": {
      "start_point": [
        444,
        0
      ],
      "end_point": [
        457,
        1
      ],
      "strings": []
    },
    "tests_isinf": {
      "start_point": [
        462,
        0
      ],
      "end_point": [
        472,
        1
      ],
      "strings": []
    },
    "tests_hardware_setround": {
      "start_point": [
        478,
        0
      ],
      "end_point": [
        496,
        1
      ],
      "strings": []
    },
    "tests_hardware_getround": {
      "start_point": [
        499,
        0
      ],
      "end_point": [
        512,
        1
      ],
      "strings": []
    },
    "tests_dbl_mant_bits": {
      "start_point": [
        524,
        0
      ],
      "end_point": [
        561,
        1
      ],
      "strings": [
        "\"Warning, tests_dbl_mant_bits got %d but DBL_MANT_DIG says %d\\n\"",
        "\"Oops, tests_dbl_mant_bits can't determine mantissa size\\n\""
      ]
    },
    "tests_sigfpe_handler": {
      "start_point": [
        568,
        0
      ],
      "end_point": [
        572,
        1
      ],
      "strings": []
    },
    "tests_sigfpe_done": {
      "start_point": [
        574,
        0
      ],
      "end_point": [
        578,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/refmpf.c": {
    "refmpf_add": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "refmpf_add_ulp": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"Oops, refmpf_add_ulp called with f==0\\n\"",
        "\"Oops, refmpf_add_ulp carried out of prec+1 limbs\\n\""
      ]
    },
    "refmpf_fill": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "refmpf_normalize": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    },
    "refmpf_set_overlap": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "refmpf_set_prec_limbs": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    },
    "refmpf_sub": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": []
    },
    "refmpf_validate": {
      "start_point": [
        301,
        0
      ],
      "end_point": [
        376,
        1
      ],
      "strings": [
        "\"%s: wrong exponent\\n\"",
        "\"%s: wrong sign\\n\"",
        "\"%s: wrong data starting at index %ld from top\\n\"",
        "\"  prec       %d\\n\"",
        "\"  exp got    %ld\\n\"",
        "\"  exp want   %ld\\n\"",
        "\"  size got   %d\\n\"",
        "\"  size want  %d\\n\"",
        "\"  limbs (high to low)\\n\"",
        "\"   got  \"",
        "\"%MX\"",
        "\",\"",
        "\"\\n\"",
        "\"   want \"",
        "\"%MX\"",
        "\",\"",
        "\"\\n\""
      ]
    },
    "refmpf_validate_division": {
      "start_point": [
        379,
        0
      ],
      "end_point": [
        427,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/refmpn.c": {
    "byte_overlap_p": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "refmpn_overlap_p": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "refmpn_overlap_low_to_high_p": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "refmpn_overlap_high_to_low_p": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "refmpn_overlap_fullonly_p": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "refmpn_overlap_fullonly_two_p": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "refmpn_malloc_limbs": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "refmpn_free_limbs": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "refmpn_memdup_limbs": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    },
    "refmpn_malloc_limbs_aligned": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "refmpn_fill": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "refmpn_zero": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "refmpn_zero_extend": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "refmpn_zero_p": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "refmpn_normalize": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "refmpn_msbone": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    },
    "refmpn_msbone_mask": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "refmpn_chars_per_limb": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    },
    "refmpn_big_base": {
      "start_point": [
        236,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": []
    },
    "refmpn_setbit": {
      "start_point": [
        251,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    },
    "refmpn_clrbit": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    },
    "refmpn_tstbit": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    },
    "refmpn_scan0": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        278,
        1
      ],
      "strings": []
    },
    "refmpn_scan1": {
      "start_point": [
        280,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": []
    },
    "refmpn_copy": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        293,
        1
      ],
      "strings": []
    },
    "refmpn_copyi": {
      "start_point": [
        295,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": []
    },
    "refmpn_copyd": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    },
    "refmpn_copy_extend": {
      "start_point": [
        321,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": []
    },
    "refmpn_cmp": {
      "start_point": [
        338,
        0
      ],
      "end_point": [
        353,
        1
      ],
      "strings": []
    },
    "refmpn_cmp_allowzero": {
      "start_point": [
        355,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": []
    },
    "refmpn_cmp_twosizes": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        383,
        1
      ],
      "strings": []
    },
    "refmpn_equal_anynail": {
      "start_point": [
        385,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": []
    },
    "refmpn_and_n": {
      "start_point": [
        411,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": []
    },
    "refmpn_andn_n": {
      "start_point": [
        416,
        0
      ],
      "end_point": [
        420,
        1
      ],
      "strings": []
    },
    "refmpn_nand_n": {
      "start_point": [
        421,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": []
    },
    "refmpn_ior_n": {
      "start_point": [
        426,
        0
      ],
      "end_point": [
        430,
        1
      ],
      "strings": []
    },
    "refmpn_iorn_n": {
      "start_point": [
        431,
        0
      ],
      "end_point": [
        435,
        1
      ],
      "strings": []
    },
    "refmpn_nior_n": {
      "start_point": [
        436,
        0
      ],
      "end_point": [
        440,
        1
      ],
      "strings": []
    },
    "refmpn_xor_n": {
      "start_point": [
        441,
        0
      ],
      "end_point": [
        445,
        1
      ],
      "strings": []
    },
    "refmpn_xnor_n": {
      "start_point": [
        446,
        0
      ],
      "end_point": [
        450,
        1
      ],
      "strings": []
    },
    "refmpn_sub_ddmmss": {
      "start_point": [
        454,
        0
      ],
      "end_point": [
        460,
        1
      ],
      "strings": []
    },
    "ref_addc_limb": {
      "start_point": [
        464,
        0
      ],
      "end_point": [
        481,
        1
      ],
      "strings": []
    },
    "ref_subc_limb": {
      "start_point": [
        484,
        0
      ],
      "end_point": [
        501,
        1
      ],
      "strings": []
    },
    "adc": {
      "start_point": [
        504,
        0
      ],
      "end_point": [
        515,
        1
      ],
      "strings": []
    },
    "sbb": {
      "start_point": [
        518,
        0
      ],
      "end_point": [
        529,
        1
      ],
      "strings": []
    },
    "refmpn_add_1": {
      "start_point": [
        546,
        0
      ],
      "end_point": [
        550,
        1
      ],
      "strings": []
    },
    "refmpn_sub_1": {
      "start_point": [
        551,
        0
      ],
      "end_point": [
        555,
        1
      ],
      "strings": []
    },
    "refmpn_add_nc": {
      "start_point": [
        572,
        0
      ],
      "end_point": [
        577,
        1
      ],
      "strings": []
    },
    "refmpn_sub_nc": {
      "start_point": [
        578,
        0
      ],
      "end_point": [
        583,
        1
      ],
      "strings": []
    },
    "refmpn_add_n": {
      "start_point": [
        586,
        0
      ],
      "end_point": [
        590,
        1
      ],
      "strings": []
    },
    "refmpn_sub_n": {
      "start_point": [
        591,
        0
      ],
      "end_point": [
        595,
        1
      ],
      "strings": []
    },
    "refmpn_cnd_add_n": {
      "start_point": [
        597,
        0
      ],
      "end_point": [
        607,
        1
      ],
      "strings": []
    },
    "refmpn_cnd_sub_n": {
      "start_point": [
        608,
        0
      ],
      "end_point": [
        618,
        1
      ],
      "strings": []
    },
    "refmpn_add_err1_n": {
      "start_point": [
        655,
        0
      ],
      "end_point": [
        661,
        1
      ],
      "strings": []
    },
    "refmpn_sub_err1_n": {
      "start_point": [
        662,
        0
      ],
      "end_point": [
        668,
        1
      ],
      "strings": []
    },
    "refmpn_add_err2_n": {
      "start_point": [
        712,
        0
      ],
      "end_point": [
        718,
        1
      ],
      "strings": []
    },
    "refmpn_sub_err2_n": {
      "start_point": [
        719,
        0
      ],
      "end_point": [
        725,
        1
      ],
      "strings": []
    },
    "refmpn_add_err3_n": {
      "start_point": [
        776,
        0
      ],
      "end_point": [
        782,
        1
      ],
      "strings": []
    },
    "refmpn_sub_err3_n": {
      "start_point": [
        783,
        0
      ],
      "end_point": [
        789,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh_n": {
      "start_point": [
        792,
        0
      ],
      "end_point": [
        810,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh1_n": {
      "start_point": [
        811,
        0
      ],
      "end_point": [
        815,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh2_n": {
      "start_point": [
        816,
        0
      ],
      "end_point": [
        820,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh_n_ip1": {
      "start_point": [
        821,
        0
      ],
      "end_point": [
        825,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh1_n_ip1": {
      "start_point": [
        826,
        0
      ],
      "end_point": [
        830,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh2_n_ip1": {
      "start_point": [
        831,
        0
      ],
      "end_point": [
        835,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh_n_ip2": {
      "start_point": [
        836,
        0
      ],
      "end_point": [
        840,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh1_n_ip2": {
      "start_point": [
        841,
        0
      ],
      "end_point": [
        845,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh2_n_ip2": {
      "start_point": [
        846,
        0
      ],
      "end_point": [
        850,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh_nc": {
      "start_point": [
        851,
        0
      ],
      "end_point": [
        862,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh1_nc": {
      "start_point": [
        863,
        0
      ],
      "end_point": [
        867,
        1
      ],
      "strings": []
    },
    "refmpn_addlsh2_nc": {
      "start_point": [
        868,
        0
      ],
      "end_point": [
        872,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh_n": {
      "start_point": [
        874,
        0
      ],
      "end_point": [
        892,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh1_n": {
      "start_point": [
        893,
        0
      ],
      "end_point": [
        897,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh2_n": {
      "start_point": [
        898,
        0
      ],
      "end_point": [
        902,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh_n_ip1": {
      "start_point": [
        903,
        0
      ],
      "end_point": [
        907,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh1_n_ip1": {
      "start_point": [
        908,
        0
      ],
      "end_point": [
        912,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh2_n_ip1": {
      "start_point": [
        913,
        0
      ],
      "end_point": [
        917,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh_n_ip2": {
      "start_point": [
        918,
        0
      ],
      "end_point": [
        922,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh1_n_ip2": {
      "start_point": [
        923,
        0
      ],
      "end_point": [
        927,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh2_n_ip2": {
      "start_point": [
        928,
        0
      ],
      "end_point": [
        932,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh_nc": {
      "start_point": [
        933,
        0
      ],
      "end_point": [
        944,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh1_nc": {
      "start_point": [
        945,
        0
      ],
      "end_point": [
        949,
        1
      ],
      "strings": []
    },
    "refmpn_sublsh2_nc": {
      "start_point": [
        950,
        0
      ],
      "end_point": [
        954,
        1
      ],
      "strings": []
    },
    "refmpn_rsblsh_n": {
      "start_point": [
        956,
        0
      ],
      "end_point": [
        974,
        1
      ],
      "strings": []
    },
    "refmpn_rsblsh1_n": {
      "start_point": [
        975,
        0
      ],
      "end_point": [
        979,
        1
      ],
      "strings": []
    },
    "refmpn_rsblsh2_n": {
      "start_point": [
        980,
        0
      ],
      "end_point": [
        984,
        1
      ],
      "strings": []
    },
    "refmpn_rsblsh_nc": {
      "start_point": [
        985,
        0
      ],
      "end_point": [
        999,
        1
      ],
      "strings": []
    },
    "refmpn_rsblsh1_nc": {
      "start_point": [
        1000,
        0
      ],
      "end_point": [
        1004,
        1
      ],
      "strings": []
    },
    "refmpn_rsblsh2_nc": {
      "start_point": [
        1005,
        0
      ],
      "end_point": [
        1009,
        1
      ],
      "strings": []
    },
    "refmpn_rsh1add_n": {
      "start_point": [
        1011,
        0
      ],
      "end_point": [
        1025,
        1
      ],
      "strings": []
    },
    "refmpn_rsh1sub_n": {
      "start_point": [
        1026,
        0
      ],
      "end_point": [
        1040,
        1
      ],
      "strings": []
    },
    "refmpn_neg": {
      "start_point": [
        1043,
        0
      ],
      "end_point": [
        1056,
        1
      ],
      "strings": []
    },
    "refmpn_add": {
      "start_point": [
        1069,
        0
      ],
      "end_point": [
        1075,
        1
      ],
      "strings": []
    },
    "refmpn_sub": {
      "start_point": [
        1076,
        0
      ],
      "end_point": [
        1082,
        1
      ],
      "strings": []
    },
    "refmpn_umul_ppmm": {
      "start_point": [
        1095,
        0
      ],
      "end_point": [
        1116,
        1
      ],
      "strings": []
    },
    "refmpn_umul_ppmm_r": {
      "start_point": [
        1118,
        0
      ],
      "end_point": [
        1122,
        1
      ],
      "strings": []
    },
    "refmpn_mul_1c": {
      "start_point": [
        1124,
        0
      ],
      "end_point": [
        1147,
        1
      ],
      "strings": []
    },
    "refmpn_mul_1": {
      "start_point": [
        1149,
        0
      ],
      "end_point": [
        1153,
        1
      ],
      "strings": []
    },
    "refmpn_mul_N": {
      "start_point": [
        1156,
        0
      ],
      "end_point": [
        1181,
        1
      ],
      "strings": []
    },
    "refmpn_mul_2": {
      "start_point": [
        1183,
        0
      ],
      "end_point": [
        1187,
        1
      ],
      "strings": []
    },
    "refmpn_mul_3": {
      "start_point": [
        1188,
        0
      ],
      "end_point": [
        1192,
        1
      ],
      "strings": []
    },
    "refmpn_mul_4": {
      "start_point": [
        1193,
        0
      ],
      "end_point": [
        1197,
        1
      ],
      "strings": []
    },
    "refmpn_mul_5": {
      "start_point": [
        1198,
        0
      ],
      "end_point": [
        1202,
        1
      ],
      "strings": []
    },
    "refmpn_mul_6": {
      "start_point": [
        1203,
        0
      ],
      "end_point": [
        1207,
        1
      ],
      "strings": []
    },
    "refmpn_addmul_1c": {
      "start_point": [
        1224,
        0
      ],
      "end_point": [
        1229,
        1
      ],
      "strings": []
    },
    "refmpn_submul_1c": {
      "start_point": [
        1230,
        0
      ],
      "end_point": [
        1235,
        1
      ],
      "strings": []
    },
    "refmpn_addmul_1": {
      "start_point": [
        1238,
        0
      ],
      "end_point": [
        1242,
        1
      ],
      "strings": []
    },
    "refmpn_submul_1": {
      "start_point": [
        1243,
        0
      ],
      "end_point": [
        1247,
        1
      ],
      "strings": []
    },
    "refmpn_addmul_N": {
      "start_point": [
        1250,
        0
      ],
      "end_point": [
        1274,
        1
      ],
      "strings": []
    },
    "refmpn_addmul_2": {
      "start_point": [
        1276,
        0
      ],
      "end_point": [
        1280,
        1
      ],
      "strings": []
    },
    "refmpn_addmul_3": {
      "start_point": [
        1281,
        0
      ],
      "end_point": [
        1285,
        1
      ],
      "strings": []
    },
    "refmpn_addmul_4": {
      "start_point": [
        1286,
        0
      ],
      "end_point": [
        1290,
        1
      ],
      "strings": []
    },
    "refmpn_addmul_5": {
      "start_point": [
        1291,
        0
      ],
      "end_point": [
        1295,
        1
      ],
      "strings": []
    },
    "refmpn_addmul_6": {
      "start_point": [
        1296,
        0
      ],
      "end_point": [
        1300,
        1
      ],
      "strings": []
    },
    "refmpn_addmul_7": {
      "start_point": [
        1301,
        0
      ],
      "end_point": [
        1305,
        1
      ],
      "strings": []
    },
    "refmpn_addmul_8": {
      "start_point": [
        1306,
        0
      ],
      "end_point": [
        1310,
        1
      ],
      "strings": []
    },
    "refmpn_add_n_sub_nc": {
      "start_point": [
        1312,
        0
      ],
      "end_point": [
        1335,
        1
      ],
      "strings": []
    },
    "refmpn_add_n_sub_n": {
      "start_point": [
        1337,
        0
      ],
      "end_point": [
        1342,
        1
      ],
      "strings": []
    },
    "rshift_make": {
      "start_point": [
        1347,
        0
      ],
      "end_point": [
        1355,
        1
      ],
      "strings": []
    },
    "lshift_make": {
      "start_point": [
        1359,
        0
      ],
      "end_point": [
        1367,
        1
      ],
      "strings": []
    },
    "refmpn_rshift": {
      "start_point": [
        1370,
        0
      ],
      "end_point": [
        1388,
        1
      ],
      "strings": []
    },
    "refmpn_lshift": {
      "start_point": [
        1390,
        0
      ],
      "end_point": [
        1408,
        1
      ],
      "strings": []
    },
    "refmpn_com": {
      "start_point": [
        1410,
        0
      ],
      "end_point": [
        1420,
        1
      ],
      "strings": []
    },
    "refmpn_lshiftc": {
      "start_point": [
        1422,
        0
      ],
      "end_point": [
        1432,
        1
      ],
      "strings": []
    },
    "refmpn_rshift_or_copy": {
      "start_point": [
        1435,
        0
      ],
      "end_point": [
        1447,
        1
      ],
      "strings": []
    },
    "refmpn_lshift_or_copy": {
      "start_point": [
        1448,
        0
      ],
      "end_point": [
        1460,
        1
      ],
      "strings": []
    },
    "refmpn_rshift_or_copy_any": {
      "start_point": [
        1463,
        0
      ],
      "end_point": [
        1468,
        1
      ],
      "strings": []
    },
    "refmpn_lshift_or_copy_any": {
      "start_point": [
        1469,
        0
      ],
      "end_point": [
        1474,
        1
      ],
      "strings": []
    },
    "refmpn_udiv_qrnnd": {
      "start_point": [
        1480,
        0
      ],
      "end_point": [
        1508,
        1
      ],
      "strings": []
    },
    "refmpn_udiv_qrnnd_r": {
      "start_point": [
        1510,
        0
      ],
      "end_point": [
        1514,
        1
      ],
      "strings": []
    },
    "refmpn_divmod_1c_workaround": {
      "start_point": [
        1518,
        0
      ],
      "end_point": [
        1532,
        1
      ],
      "strings": []
    },
    "refmpn_divmod_1c": {
      "start_point": [
        1534,
        0
      ],
      "end_point": [
        1573,
        1
      ],
      "strings": [
        "\"size=%ld divisor=0x%lX carry=0x%lX remainder=0x%lX\\n\"",
        "\"s\"",
        "\"r\"",
        "\"mul_1c %lX\\n\"",
        "\"p\""
      ]
    },
    "refmpn_divmod_1": {
      "start_point": [
        1575,
        0
      ],
      "end_point": [
        1579,
        1
      ],
      "strings": []
    },
    "refmpn_mod_1c": {
      "start_point": [
        1582,
        0
      ],
      "end_point": [
        1590,
        1
      ],
      "strings": []
    },
    "refmpn_mod_1": {
      "start_point": [
        1592,
        0
      ],
      "end_point": [
        1596,
        1
      ],
      "strings": []
    },
    "refmpn_preinv_mod_1": {
      "start_point": [
        1598,
        0
      ],
      "end_point": [
        1605,
        1
      ],
      "strings": []
    },
    "refmpn_mod_34lsub1": {
      "start_point": [
        1609,
        0
      ],
      "end_point": [
        1614,
        1
      ],
      "strings": []
    },
    "refmpn_divrem_1c": {
      "start_point": [
        1617,
        0
      ],
      "end_point": [
        1632,
        1
      ],
      "strings": []
    },
    "refmpn_divrem_1": {
      "start_point": [
        1634,
        0
      ],
      "end_point": [
        1639,
        1
      ],
      "strings": []
    },
    "refmpn_preinv_divrem_1": {
      "start_point": [
        1641,
        0
      ],
      "end_point": [
        1651,
        1
      ],
      "strings": []
    },
    "refmpn_divrem_2": {
      "start_point": [
        1653,
        0
      ],
      "end_point": [
        1668,
        1
      ],
      "strings": []
    },
    "refmpn_invert_limb": {
      "start_point": [
        1674,
        0
      ],
      "end_point": [
        1680,
        1
      ],
      "strings": []
    },
    "refmpn_invert": {
      "start_point": [
        1682,
        0
      ],
      "end_point": [
        1698,
        1
      ],
      "strings": []
    },
    "refmpn_binvert": {
      "start_point": [
        1700,
        0
      ],
      "end_point": [
        1723,
        1
      ],
      "strings": []
    },
    "refmpn_divexact_by3c": {
      "start_point": [
        1745,
        0
      ],
      "end_point": [
        1770,
        1
      ],
      "strings": []
    },
    "refmpn_divexact_by3": {
      "start_point": [
        1772,
        0
      ],
      "end_point": [
        1776,
        1
      ],
      "strings": []
    },
    "refmpn_mul_basecase": {
      "start_point": [
        1780,
        0
      ],
      "end_point": [
        1797,
        1
      ],
      "strings": []
    },
    "refmpn_mulmid_basecase": {
      "start_point": [
        1801,
        0
      ],
      "end_point": [
        1825,
        1
      ],
      "strings": []
    },
    "refmpn_toom42_mulmid": {
      "start_point": [
        1827,
        0
      ],
      "end_point": [
        1832,
        1
      ],
      "strings": []
    },
    "refmpn_mulmid_n": {
      "start_point": [
        1834,
        0
      ],
      "end_point": [
        1840,
        1
      ],
      "strings": []
    },
    "refmpn_mulmid": {
      "start_point": [
        1842,
        0
      ],
      "end_point": [
        1849,
        1
      ],
      "strings": []
    },
    "refmpn_mul": {
      "start_point": [
        1862,
        0
      ],
      "end_point": [
        1921,
        1
      ],
      "strings": []
    },
    "refmpn_mul_n": {
      "start_point": [
        1923,
        0
      ],
      "end_point": [
        1927,
        1
      ],
      "strings": []
    },
    "refmpn_mullo_n": {
      "start_point": [
        1929,
        0
      ],
      "end_point": [
        1936,
        1
      ],
      "strings": []
    },
    "refmpn_sqr": {
      "start_point": [
        1938,
        0
      ],
      "end_point": [
        1942,
        1
      ],
      "strings": []
    },
    "refmpn_sqrlo": {
      "start_point": [
        1944,
        0
      ],
      "end_point": [
        1948,
        1
      ],
      "strings": []
    },
    "refmpn_mul_any": {
      "start_point": [
        1951,
        0
      ],
      "end_point": [
        1979,
        1
      ],
      "strings": []
    },
    "refmpn_gcd_1": {
      "start_point": [
        1982,
        0
      ],
      "end_point": [
        2019,
        1
      ],
      "strings": []
    },
    "refmpn_count_leading_zeros": {
      "start_point": [
        2023,
        0
      ],
      "end_point": [
        2036,
        1
      ],
      "strings": []
    },
    "refmpn_count_trailing_zeros": {
      "start_point": [
        2039,
        0
      ],
      "end_point": [
        2053,
        1
      ],
      "strings": []
    },
    "refmpn_strip_twos": {
      "start_point": [
        2057,
        0
      ],
      "end_point": [
        2078,
        1
      ],
      "strings": []
    },
    "refmpn_gcd": {
      "start_point": [
        2080,
        0
      ],
      "end_point": [
        2119,
        1
      ],
      "strings": []
    },
    "ref_popc_limb": {
      "start_point": [
        2121,
        0
      ],
      "end_point": [
        2134,
        1
      ],
      "strings": []
    },
    "refmpn_popcount": {
      "start_point": [
        2136,
        0
      ],
      "end_point": [
        2148,
        1
      ],
      "strings": []
    },
    "refmpn_hamdist": {
      "start_point": [
        2150,
        0
      ],
      "end_point": [
        2168,
        1
      ],
      "strings": []
    },
    "refmpn_mod2": {
      "start_point": [
        2172,
        0
      ],
      "end_point": [
        2206,
        1
      ],
      "strings": []
    },
    "refmpn_sb_div_qr": {
      "start_point": [
        2212,
        0
      ],
      "end_point": [
        2286,
        1
      ],
      "strings": []
    },
    "refmpn_tdiv_qr": {
      "start_point": [
        2290,
        0
      ],
      "end_point": [
        2322,
        1
      ],
      "strings": []
    },
    "refmpn_redc_1": {
      "start_point": [
        2324,
        0
      ],
      "end_point": [
        2342,
        1
      ],
      "strings": []
    },
    "refmpn_get_str": {
      "start_point": [
        2344,
        0
      ],
      "end_point": [
        2394,
        1
      ],
      "strings": []
    },
    "ref_bswap_limb": {
      "start_point": [
        2397,
        0
      ],
      "end_point": [
        2410,
        1
      ],
      "strings": []
    },
    "refmpn_random_half": {
      "start_point": [
        2427,
        0
      ],
      "end_point": [
        2432,
        1
      ],
      "strings": []
    },
    "refmpn_random_limb": {
      "start_point": [
        2434,
        0
      ],
      "end_point": [
        2439,
        1
      ],
      "strings": []
    },
    "refmpn_random": {
      "start_point": [
        2441,
        0
      ],
      "end_point": [
        2453,
        1
      ],
      "strings": []
    },
    "refmpn_random2": {
      "start_point": [
        2455,
        0
      ],
      "end_point": [
        2495,
        1
      ],
      "strings": []
    },
    "refmpn_sqrtrem": {
      "start_point": [
        2499,
        0
      ],
      "end_point": [
        2581,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/refmpq.c": {
    "refmpq_add": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    },
    "refmpq_sub": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/refmpz.c": {
    "refmpz_combit": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "refmpz_hamdist": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "refmpz_kronecker": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"top\\n\"",
        "\" a\"",
        "\" b\"",
        "\"swap\\n\"",
        "\"sub\\n\"",
        "\" a\"",
        "\"twos %lu\\n\"",
        "\" a\""
      ]
    },
    "refmpz_jacobi": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    },
    "refmpz_legendre": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "refmpz_kronecker_ui": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        238,
        1
      ],
      "strings": []
    },
    "refmpz_kronecker_si": {
      "start_point": [
        240,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": []
    },
    "refmpz_ui_kronecker": {
      "start_point": [
        251,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": []
    },
    "refmpz_si_kronecker": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        271,
        1
      ],
      "strings": []
    },
    "refmpz_pow_ui": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/spinner.c": {
    "spinner_signal": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": [
        "\"spinner_signal(): Oops, cannot reinstall SIGALRM\\n\""
      ]
    },
    "spinner_init": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": [
        "\"(no spinner)\\r\""
      ]
    },
    "spinner": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": [
        "\" %lu\\r\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/t-bswap.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": [
        "\"BSWAP_LIMB wrong result\\n\"",
        "\"  src \"",
        "\"  want\"",
        "\"  got \"",
        "\"BSWAP_LIMB_FETCH wrong result\\n\"",
        "\"BSWAP_LIMB_STORE wrong result\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/t-constants.c": {
    "main": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": [
        "\"0x%lX\"",
        "\"0x%llX\"",
        "\"0x%lX\"",
        "\"0x%X\"",
        "\"0x%hX\"",
        "\"0x%lX\"",
        "\"0x%X\"",
        "\"0x%hX\"",
        "\"%ld\"",
        "\"%d\"",
        "\"%hd\"",
        "\"%lu\"",
        "\"%u\"",
        "\"%hu\"",
        "\"%d\"",
        "\"%ld\"",
        "\"GMP_NUMB_CEIL_MAX_DIV3 too big\\n\"",
        "\"GMP_NUMB_CEIL_MAX_DIV3 too small\\n\"",
        "\"GMP_NUMB_CEIL_2MAX_DIV3 too big\\n\"",
        "\"GMP_NUMB_CEIL_2MAX_DIV3 too small\\n\"",
        "\"\\n\"",
        "\"After gmp.h,\\n\"",
        "\"  ULONG_MAX  %s\\n\"",
        "\"  LONG_MAX   %s\\n\"",
        "\"  UINT_MAX   %s\\n\"",
        "\"  INT_MAX    %s\\n\"",
        "\"  USHRT_MAX  %s\\n\"",
        "\"  SHRT_MAX   %s\\n\"",
        "\"\\n\"",
        "\"_CRAY is defined, so limits.h is being used\\n\"",
        "\"ULONG_MAX      %lX\\n\"",
        "\"ULONG_HIGHBIT  %lX\\n\"",
        "\"LONG_MAX       %lX\\n\"",
        "\"LONG_MIN       %lX\\n\"",
        "\"UINT_MAX       %X\\n\"",
        "\"UINT_HIGHBIT   %X\\n\"",
        "\"INT_MAX        %X\\n\"",
        "\"INT_MIN        %X\\n\"",
        "\"USHRT_MAX      %X\\n\"",
        "\"USHRT_HIGHBIT  %X\\n\"",
        "\"SHRT_MAX       %X\\n\"",
        "\"SHRT_MIN       %X\\n\"",
        "\"\\n\"",
        "\"Bits\\n\"",
        "\"  long           %d\\n\"",
        "\"  int            %d\\n\"",
        "\"  short          %d\\n\"",
        "\"  unsigned long  %d\\n\"",
        "\"  unsigned int   %d\\n\"",
        "\"  unsigned short %d\\n\"",
        "\"  mp_size_t      %d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/t-count_zeros.c": {
    "check_clz": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": [
        "\"count_leading_zeros wrong\\n\"",
        "\"  n    \"",
        "\"  want %d\\n\"",
        "\"  got  %d\\n\""
      ]
    },
    "check_ctz": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"count_trailing_zeros wrong\\n\"",
        "\"  n    \"",
        "\"  want %d\\n\"",
        "\"  got  %d\\n\""
      ]
    },
    "check_various": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/t-hightomask.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/t-modlinv.c": {
    "one": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": [
        "\"binvert_limb wrong\\n\"",
        "\"  n       \"",
        "\"  got     \"",
        "\"  product \""
      ]
    },
    "some": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "all": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"-a\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/t-parity.c": {
    "check_one": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": [
        "\"ULONG_PARITY wrong\\n\"",
        "\"  n    %lX\\n\"",
        "\"  want %d\\n\"",
        "\"  got  %d\\n\""
      ]
    },
    "check_various": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/t-popc.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"popc_limb wrong result\\n\"",
        "\"  src \"",
        "\"  want\"",
        "\"  got \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/t-sub.c": {
    "check_data": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": [
        "\"check_data wrong at data[%d]\\n\"",
        "\"  mh\"",
        "\"  ml\"",
        "\"  sh\"",
        "\"  sl\"",
        "\"  want dh\"",
        "\"  want dl\"",
        "\"  got dh \"",
        "\"  got dl \""
      ]
    },
    "check_random": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"check_data wrong at data[%d]\\n\"",
        "\"  mh\"",
        "\"  ml\"",
        "\"  sh\"",
        "\"  sl\"",
        "\"  want dh\"",
        "\"  want dl\"",
        "\"  got dh \"",
        "\"  got dl \""
      ]
    },
    "main": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/tests.h": {
    "ostringstream": {
      "start_point": [
        385,
        0
      ],
      "end_point": [
        396,
        1
      ],
      "strings": []
    },
    "istringstream": {
      "start_point": [
        397,
        0
      ],
      "end_point": [
        401,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/trace.c": {
    "mp_trace_start": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"%s=\"",
        "\"bin:\"",
        "\"oct:\"",
        "\"0x\"",
        "\"base%d:\""
      ]
    },
    "mpq_trace": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": [
        "\"NULL\\n\"",
        "\"\\n\""
      ]
    },
    "mpz_trace": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "mpf_trace": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": [
        "\"NULL\\n\"",
        "\"\\n\""
      ]
    },
    "mpz_tracen": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    },
    "mpn_trace": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "mp_limb_trace": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "mpn_tracen": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "mpn_tracea": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    },
    "mpn_trace_file": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": [
        "\"w\"",
        "\"fopen\"",
        "\"\\n\"",
        "\"error writing %s\\n\""
      ]
    },
    "mpn_tracea_file": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": [
        "\"%s%d\""
      ]
    },
    "byte_trace": {
      "start_point": [
        263,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": [
        "\" %o\"",
        "\" %d\"",
        "\" %x\"",
        "\" %X\"",
        "\"Oops, unsupported base in byte_trace\\n\"",
        "\"\\n\""
      ]
    },
    "byte_tracen": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        293,
        1
      ],
      "strings": []
    },
    "d_trace": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": [
        "\"%s=\"",
        "\"[\"",
        "\" \"",
        "\"%02X\"",
        "\"] %.20g\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/x86check.c": {
    "calling_conventions_check": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": [
        "\"Violated calling conventions:\\n\"",
        "\"%s   eflags dir bit  got %d want 0\\n\"",
        "\"\"",
        "\"%s   fpu tags  got 0x%X want 0xFFFF\\n\"",
        "\"\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/cxx/clocale.c": {},
  "gmp/gmp-6.1.2/tests/devel/anymul_1.c": {
    "cputime": [
      {
        "start_point": [
          47,
          0
        ],
        "end_point": [
          53,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          59,
          0
        ],
        "end_point": [
          66,
          1
        ],
        "strings": []
      }
    ],
    "main": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": [
        "\"\\r%u\"",
        "\":    %5ldms (%.3f cycles/limb) [%.2f Gb/s]\\n\"",
        "\"xlimb=\"",
        "\"%*s \"",
        "\"\"",
        "\"%*s \"",
        "\"\"",
        "\"\\n        ref%*s try%*s diff\\n\"",
        "\"\"",
        "\"\"",
        "\"%6d: \"",
        "\"%0*llX \"",
        "\"%0*llX \"",
        "\"\\n\"",
        "\"retval: \"",
        "\"%0*llX \"",
        "\"%0*llX \"",
        "\"\\n\"",
        "\"clobbered at low end\\n\"",
        "\"clobbered at high end\\n\"",
        "\"TEST NUMBER %u\\n\""
      ]
    },
    "print_posneg": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": [
        "\" %*X\"",
        "\"%llX\"",
        "\"%*s-%s\"",
        "\"\"",
        "\"%llX\"",
        "\"%*s+%s\"",
        "\"\""
      ]
    },
    "mpn_print": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": [
        "\"%0*lX%0*lX\"",
        "\"%0*lX\"",
        "\" \"",
        "\"\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/devel/aors_n.c": {
    "cputime": [
      {
        "start_point": [
          64,
          0
        ],
        "end_point": [
          70,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          76,
          0
        ],
        "end_point": [
          83,
          1
        ],
        "strings": []
      }
    ],
    "main": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"\\r%u\"",
        "\":    %5ldms (%.3f cycles/limb)\\n\"",
        "\"%6d: \"",
        "\"%0*llX \"",
        "\"%0*llX \"",
        "\"\\n\"",
        "\"%6s: \"",
        "\"retval\"",
        "\"%0*llX \"",
        "\"%0*llX \"",
        "\"\\n\"",
        "\"clobbered at low end\\n\"",
        "\"clobbered at high end\\n\"",
        "\"TEST NUMBER %u\\n\""
      ]
    },
    "print_posneg": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": [
        "\" %*X\"",
        "\"%llX\"",
        "\"%*s-%s\"",
        "\"\"",
        "\"%llX\"",
        "\"%*s+%s\"",
        "\"\""
      ]
    },
    "mpn_print": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": [
        "\"%0*lX%0*lX\"",
        "\"%0*lX\"",
        "\" \"",
        "\"\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/devel/copy.c": {
    "cputime": [
      {
        "start_point": [
          40,
          0
        ],
        "end_point": [
          46,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          52,
          0
        ],
        "end_point": [
          59,
          1
        ],
        "strings": []
      }
    ],
    "main": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": [
        "\"\\r%u\"",
        "\":    %5ldms (%.3f cycles/limb)\\n\"",
        "\"%6d: \"",
        "\"%0*llX \"",
        "\"%0*llX \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"clobbered at low end\\n\"",
        "\"clobbered at high end\\n\"",
        "\"TEST NUMBER %u\\n\""
      ]
    },
    "print_posneg": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": [
        "\" %*X\"",
        "\"%llX\"",
        "\"%*s-%s\"",
        "\"\"",
        "\"%llX\"",
        "\"%*s+%s\"",
        "\"\""
      ]
    },
    "mpn_print": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": [
        "\"%0*lX%0*lX\"",
        "\"%0*lX\"",
        "\" \"",
        "\"\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/devel/divmod_1.c": {
    "cputime": [
      {
        "start_point": [
          27,
          0
        ],
        "end_point": [
          33,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          39,
          0
        ],
        "end_point": [
          46,
          1
        ],
        "strings": []
      }
    ],
    "main": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": [
        "\"\\r%u\"",
        "\"N=\"",
        "\"D=\"",
        "\"nn=%ld\\n\"",
        "\"mpn_divrem_1 int:    %5ldms (%.3f cycles/limb) [%.2f Gb/s]\\n\"",
        "\"mpn_divrem_1 frac:   %5ldms (%.3f cycles/limb) [%.2f Gb/s]\\n\"",
        "\"ERROR in test %d, nn=%ld, fn=%ld\\n\"",
        "\"rq: \"",
        "\"rr: %*lX\\n\"",
        "\" q: \"",
        "\" r: %*lX\\n\"",
        "\"clobbered at low end %*lX\\n\"",
        "\"clobbered at high end\\n\""
      ]
    },
    "mpn_print": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": [
        "\"%0*lX%0*lX\"",
        "\"%0*lX\"",
        "\" \"",
        "\"\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/devel/divrem.c": {
    "cputime": [
      {
        "start_point": [
          26,
          0
        ],
        "end_point": [
          32,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          38,
          0
        ],
        "end_point": [
          45,
          1
        ],
        "strings": []
      }
    ],
    "main": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": [
        "\"%d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/devel/logops_n.c": {
    "cputime": [
      {
        "start_point": [
          75,
          0
        ],
        "end_point": [
          81,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          87,
          0
        ],
        "end_point": [
          94,
          1
        ],
        "strings": []
      }
    ],
    "main": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": [
        "\"\\r%d\"",
        "\":    %5ldms (%.3f cycles/limb)\\n\"",
        "\"\\n\"",
        "\"clobbered at low end\\n\"",
        "\"clobbered at high end\\n\"",
        "\"TEST NUMBER %u\\n\""
      ]
    },
    "mpn_print": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"%0*lX%0*lX\"",
        "\"%0*lX\"",
        "\" \"",
        "\"\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/devel/shift.c": {
    "cputime": [
      {
        "start_point": [
          41,
          0
        ],
        "end_point": [
          47,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          53,
          0
        ],
        "end_point": [
          60,
          1
        ],
        "strings": []
      }
    ],
    "main": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": [
        "\"\\r%u\"",
        "\":    %5ldms (%.3f cycles/limb)\\n\"",
        "\"cnt=%-*d \"",
        "\"cnt=%-*d\\n\"",
        "\"%6d: \"",
        "\"%0*llX \"",
        "\"%0*llX \"",
        "\"\\n\"",
        "\"%6s: \"",
        "\"retval\"",
        "\"%0*llX \"",
        "\"%0*llX \"",
        "\"\\n\"",
        "\"clobbered at low end\\n\"",
        "\"clobbered at high end\\n\"",
        "\"TEST NUMBER %u\\n\""
      ]
    },
    "print_posneg": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\" %*X\"",
        "\"%llX\"",
        "\"%*s-%s\"",
        "\"\"",
        "\"%llX\"",
        "\"%*s+%s\"",
        "\"\""
      ]
    },
    "mpn_print": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": [
        "\"%0*lX%0*lX\"",
        "\"%0*lX\"",
        "\" \"",
        "\"\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/devel/try.c": {
    "strerror": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": [
        "\"errno out of range\""
      ]
    },
    "validate_mod_34lsub1": {
      "start_point": [
        385,
        0
      ],
      "end_point": [
        411,
        1
      ],
      "strings": [
        "\"got   0x%MX reduced from 0x%MX\\n\"",
        "\"want  0x%MX reduced from 0x%MX\\n\""
      ]
    },
    "validate_divexact_1": {
      "start_point": [
        413,
        0
      ],
      "end_point": [
        444,
        1
      ],
      "strings": [
        "\"Remainder a%%d == 0x%MX, mpn_divexact_1 undefined\\n\"",
        "\"Quotient a/d wrong\\n\"",
        "\"fun \"",
        "\"want\""
      ]
    },
    "validate_bdiv_q_1": {
      "start_point": [
        446,
        0
      ],
      "end_point": [
        474,
        1
      ],
      "strings": [
        "\"Bdiv wrong: res * divisor != src (mod B^size)\\n\"",
        "\"res \"",
        "\"src \""
      ]
    },
    "validate_modexact_1c_odd": {
      "start_point": [
        477,
        0
      ],
      "end_point": [
        533,
        1
      ],
      "strings": [
        "\"r has non-zero nail\\n\"",
        "\"Don't have r < divisor\\n\"",
        "\"Don't have r <= divisor\\n\"",
        "\"Remainder matches neither r*b^(size-1) nor r*b^size\\n\""
      ]
    },
    "validate_modexact_1_odd": {
      "start_point": [
        535,
        0
      ],
      "end_point": [
        540,
        1
      ],
      "strings": []
    },
    "validate_div_qr_1_pi1": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        574,
        1
      ],
      "strings": [
        "\"Bad remainder %Md, d = %Md\\n\"",
        "\"Incorrect result, size %ld.\\n\"",
        "\"d = %Mx, u = %Mx, %Nx\\n\"",
        "\"got: r = %Mx, q = %Nx\\n\"",
        "\"q d + r = %Mx, %Nx\""
      ]
    },
    "validate_sqrtrem": {
      "start_point": [
        577,
        0
      ],
      "end_point": [
        618,
        1
      ],
      "strings": [
        "\"Bad remainder size retval %ld\\n\"",
        "\"Remainder bigger than 2*root\\n\"",
        "\"root^2+rem != original\\n\"",
        "\"prod\""
      ]
    },
    "validate_sqrt": {
      "start_point": [
        620,
        0
      ],
      "end_point": [
        657,
        1
      ],
      "strings": [
        "\"root^2 bigger than original, or wrong return value.\\n\"",
        "\"prod...\"",
        "\"(root+1)^2 smaller than original.\\n\"",
        "\"prod\""
      ]
    },
    "param_init": {
      "start_point": [
        729,
        0
      ],
      "end_point": [
        1481,
        1
      ],
      "strings": []
    },
    "MPN_COPY_fun": {
      "start_point": [
        1487,
        0
      ],
      "end_point": [
        1489,
        28
      ],
      "strings": []
    },
    "MPN_COPY_INCR_fun": {
      "start_point": [
        1491,
        0
      ],
      "end_point": [
        1493,
        33
      ],
      "strings": []
    },
    "MPN_COPY_DECR_fun": {
      "start_point": [
        1495,
        0
      ],
      "end_point": [
        1497,
        33
      ],
      "strings": []
    },
    "__GMPN_COPY_fun": {
      "start_point": [
        1499,
        0
      ],
      "end_point": [
        1501,
        31
      ],
      "strings": []
    },
    "__GMPN_COPY_INCR_fun": {
      "start_point": [
        1504,
        0
      ],
      "end_point": [
        1506,
        36
      ],
      "strings": []
    },
    "mpn_com_fun": {
      "start_point": [
        1509,
        0
      ],
      "end_point": [
        1511,
        27
      ],
      "strings": []
    },
    "mpn_and_n_fun": {
      "start_point": [
        1513,
        0
      ],
      "end_point": [
        1515,
        33
      ],
      "strings": []
    },
    "mpn_andn_n_fun": {
      "start_point": [
        1517,
        0
      ],
      "end_point": [
        1519,
        34
      ],
      "strings": []
    },
    "mpn_nand_n_fun": {
      "start_point": [
        1521,
        0
      ],
      "end_point": [
        1523,
        34
      ],
      "strings": []
    },
    "mpn_ior_n_fun": {
      "start_point": [
        1525,
        0
      ],
      "end_point": [
        1527,
        33
      ],
      "strings": []
    },
    "mpn_iorn_n_fun": {
      "start_point": [
        1529,
        0
      ],
      "end_point": [
        1531,
        34
      ],
      "strings": []
    },
    "mpn_nior_n_fun": {
      "start_point": [
        1533,
        0
      ],
      "end_point": [
        1535,
        34
      ],
      "strings": []
    },
    "mpn_xor_n_fun": {
      "start_point": [
        1537,
        0
      ],
      "end_point": [
        1539,
        33
      ],
      "strings": []
    },
    "mpn_xnor_n_fun": {
      "start_point": [
        1541,
        0
      ],
      "end_point": [
        1543,
        34
      ],
      "strings": []
    },
    "udiv_qrnnd_fun": {
      "start_point": [
        1545,
        0
      ],
      "end_point": [
        1551,
        1
      ],
      "strings": []
    },
    "mpn_divexact_by3_fun": {
      "start_point": [
        1553,
        0
      ],
      "end_point": [
        1557,
        1
      ],
      "strings": []
    },
    "mpn_addlsh1_n_ip1_fun": {
      "start_point": [
        1560,
        0
      ],
      "end_point": [
        1564,
        1
      ],
      "strings": []
    },
    "mpn_addlsh2_n_ip1_fun": {
      "start_point": [
        1567,
        0
      ],
      "end_point": [
        1571,
        1
      ],
      "strings": []
    },
    "mpn_addlsh_n_ip1_fun": {
      "start_point": [
        1574,
        0
      ],
      "end_point": [
        1578,
        1
      ],
      "strings": []
    },
    "mpn_addlsh1_n_ip2_fun": {
      "start_point": [
        1581,
        0
      ],
      "end_point": [
        1585,
        1
      ],
      "strings": []
    },
    "mpn_addlsh2_n_ip2_fun": {
      "start_point": [
        1588,
        0
      ],
      "end_point": [
        1592,
        1
      ],
      "strings": []
    },
    "mpn_addlsh_n_ip2_fun": {
      "start_point": [
        1595,
        0
      ],
      "end_point": [
        1599,
        1
      ],
      "strings": []
    },
    "mpn_sublsh1_n_ip1_fun": {
      "start_point": [
        1602,
        0
      ],
      "end_point": [
        1606,
        1
      ],
      "strings": []
    },
    "mpn_sublsh2_n_ip1_fun": {
      "start_point": [
        1609,
        0
      ],
      "end_point": [
        1613,
        1
      ],
      "strings": []
    },
    "mpn_sublsh_n_ip1_fun": {
      "start_point": [
        1616,
        0
      ],
      "end_point": [
        1620,
        1
      ],
      "strings": []
    },
    "mpn_modexact_1_odd_fun": {
      "start_point": [
        1623,
        0
      ],
      "end_point": [
        1627,
        1
      ],
      "strings": []
    },
    "mpn_toom22_mul_fun": {
      "start_point": [
        1629,
        0
      ],
      "end_point": [
        1638,
        1
      ],
      "strings": []
    },
    "mpn_toom2_sqr_fun": {
      "start_point": [
        1639,
        0
      ],
      "end_point": [
        1648,
        1
      ],
      "strings": []
    },
    "mpn_toom33_mul_fun": {
      "start_point": [
        1649,
        0
      ],
      "end_point": [
        1658,
        1
      ],
      "strings": []
    },
    "mpn_toom3_sqr_fun": {
      "start_point": [
        1659,
        0
      ],
      "end_point": [
        1668,
        1
      ],
      "strings": []
    },
    "mpn_toom44_mul_fun": {
      "start_point": [
        1669,
        0
      ],
      "end_point": [
        1678,
        1
      ],
      "strings": []
    },
    "mpn_toom4_sqr_fun": {
      "start_point": [
        1679,
        0
      ],
      "end_point": [
        1688,
        1
      ],
      "strings": []
    },
    "mpn_toom42_mulmid_fun": {
      "start_point": [
        1690,
        0
      ],
      "end_point": [
        1701,
        1
      ],
      "strings": []
    },
    "umul_ppmm_fun": {
      "start_point": [
        1703,
        0
      ],
      "end_point": [
        1709,
        1
      ],
      "strings": []
    },
    "MPN_ZERO_fun": {
      "start_point": [
        1711,
        0
      ],
      "end_point": [
        1713,
        25
      ],
      "strings": []
    },
    "mpn_sqrt_fun": {
      "start_point": [
        1715,
        0
      ],
      "end_point": [
        1717,
        46
      ],
      "strings": []
    },
    "mprotect_maybe": {
      "start_point": [
        2034,
        0
      ],
      "end_point": [
        2058,
        1
      ],
      "strings": [
        "\"Cannot mprotect %p 0x%X 0x%X: %s\\n\"",
        "\"mprotect not available, bounds testing not performed\\n\""
      ]
    },
    "round_up_multiple": {
      "start_point": [
        2061,
        0
      ],
      "end_point": [
        2071,
        1
      ],
      "strings": []
    },
    "malloc_region": {
      "start_point": [
        2081,
        0
      ],
      "end_point": [
        2119,
        1
      ],
      "strings": [
        "\"Cannot mmap %#x anon bytes: %s\\n\""
      ]
    },
    "mprotect_region": {
      "start_point": [
        2121,
        0
      ],
      "end_point": [
        2125,
        1
      ],
      "strings": []
    },
    "t_random": {
      "start_point": [
        2258,
        0
      ],
      "end_point": [
        2298,
        1
      ],
      "strings": []
    },
    "print_each": {
      "start_point": [
        2303,
        0
      ],
      "end_point": [
        2327,
        1
      ],
      "strings": [
        "\"%s %s\\n\"",
        "\"   retval\"",
        "\"   d[%d]\"",
        "\"   d[%d]\"",
        "\"        located %p\\n\"",
        "\"   s[%d] located %p\\n\""
      ]
    },
    "print_all": {
      "start_point": [
        2330,
        0
      ],
      "end_point": [
        2392,
        1
      ],
      "strings": [
        "\"\\n\"",
        "\"size  %ld\\n\"",
        "\"size2 %ld\\n\"",
        "\"d[%d].size %ld\\n\"",
        "\"   multiplier\"",
        "\"   divisor\"",
        "\"   shift %lu\\n\"",
        "\"   carry\"",
        "\"   multiplier_N\"",
        "\"   d[%d] %s, align %ld, size %ld\\n\"",
        "\"high\"",
        "\"low\"",
        "\"   s[%d] %s, align %ld, \"",
        "\"high\"",
        "\"low\"",
        "\"no overlap\\n\"",
        "\"==d[%d]%s\\n\"",
        "\"+a\"",
        "\"-a\"",
        "\"\"",
        "\"   s[%d]=\"",
        "\"-\"",
        "\"   d[0]\""
      ]
    },
    "compare": {
      "start_point": [
        2394,
        0
      ],
      "end_point": [
        2452,
        1
      ],
      "strings": [
        "\"Different return values (%Mu, %Mu)\\n\"",
        "\"Different d[%d] data results, low diff at %ld, high diff at %ld\\n\"",
        "\"Different d[%d] data results, low diff at %ld, high diff at %ld\\n\""
      ]
    },
    "call": {
      "start_point": [
        2460,
        0
      ],
      "end_point": [
        2897,
        1
      ],
      "strings": [
        "\"Unknown routine type %d\\n\""
      ]
    },
    "pointer_setup": {
      "start_point": [
        2900,
        0
      ],
      "end_point": [
        3043,
        1
      ],
      "strings": [
        "\"Unrecognised dst_size type %d\\n\""
      ]
    },
    "validate_fail": {
      "start_point": [
        3046,
        0
      ],
      "end_point": [
        3058,
        1
      ],
      "strings": []
    },
    "try_one": {
      "start_point": [
        3061,
        0
      ],
      "end_point": [
        3266,
        1
      ],
      "strings": []
    },
    "try_many": {
      "start_point": [
        3312,
        0
      ],
      "end_point": [
        3372,
        1
      ],
      "strings": [
        "\"%s %lu\\n\"",
        "\"\\n\""
      ]
    },
    "trap": {
      "start_point": [
        3377,
        0
      ],
      "end_point": [
        3410,
        1
      ],
      "strings": [
        "\"noname\"",
        "\"SIGILL\"",
        "\"SIGBUS\"",
        "\"SIGSEGV\"",
        "\"SIGFPE\"",
        "\"\\n\\nSIGNAL TRAP: %s\\n\"",
        "\"  in reference function: %s\\n\"",
        "\"  in test function: %s\\n\"",
        "\"  in parameter setups\\n\"",
        "\"  somewhere unknown\\n\""
      ]
    },
    "try_init": {
      "start_point": [
        3413,
        0
      ],
      "end_point": [
        3467,
        1
      ],
      "strings": [
        "\"Cannot get sysconf _SC_PAGESIZE\\n\"",
        "\"pagesize is 0x%lX bytes\\n\"",
        "\"s[%d] %p to %p (0x%lX bytes)\\n\"",
        "\"ref\"",
        "\"fun\""
      ]
    },
    "strmatch_wild": {
      "start_point": [
        3469,
        0
      ],
      "end_point": [
        3491,
        1
      ],
      "strings": []
    },
    "try_name": {
      "start_point": [
        3493,
        0
      ],
      "end_point": [
        3515,
        1
      ],
      "strings": [
        "\"%s unknown\\n\""
      ]
    },
    "usage": {
      "start_point": [
        3518,
        0
      ],
      "end_point": [
        3555,
        1
      ],
      "strings": [
        "\"Usage: %s [options] function...\\n\"",
        "\"    -1        use limb data 1,2,3,etc\\n\"",
        "\"    -9        use limb data all 0xFF..FFs\\n\"",
        "\"    -a zeros  use limb data all zeros\\n\"",
        "\"    -a ffs    use limb data all 0xFF..FFs (same as -9)\\n\"",
        "\"    -a 2fd    use data 0x2FFF...FFFD\\n\"",
        "\"    -p        print each case tried (try this if seg faulting)\\n\"",
        "\"    -R        seed random numbers from time()\\n\"",
        "\"    -r reps   set repetitions (default %d)\\n\"",
        "\"    -s size   starting size to test\\n\"",
        "\"    -S size2  starting size2 to test\\n\"",
        "\"    -s s1-s2  range of sizes to test\\n\"",
        "\"    -W        don't show the spinner (use this in gdb)\\n\"",
        "\"    -z        disable mprotect() redzones\\n\"",
        "\"Default data is refmpn_random() and refmpn_random2().\\n\"",
        "\"\\n\"",
        "\"Functions that can be tested:\\n\"",
        "\"\\n\"",
        "\" %s\"",
        "\"\\n\""
      ]
    },
    "main": {
      "start_point": [
        3558,
        0
      ],
      "end_point": [
        3658,
        1
      ],
      "strings": [
        "\"19a:b:E:pRr:S:s:Wz\"",
        "\"zeros\"",
        "\"seq\"",
        "\"ffs\"",
        "\"2fd\"",
        "\"unrecognised data option: %s\\n\"",
        "\"%lu\"",
        "\"Re-seeding with %lu\\n\"",
        "\"Seeding with %lu, re-run using \\\"-E %lu\\\"\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/devel/tst-addsub.c": {
    "main": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": [
        "\"\\r%ld\"",
        "\"%ld passes OK\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/misc/t-locale.c": {
    "check_input": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": [
        "\".\"",
        "\",\"",
        "\"WU\"",
        "\"STR\"",
        "\"ZTV***\"",
        "\"1%s\"",
        "\"1%s0\"",
        "\"1%s00\"",
        "\"%s5\"",
        "\"0%s5\"",
        "\"00%s5\"",
        "\"00%s50\"",
        "\"1%s5\"",
        "\"1%s5e1\"",
        "\"-\"",
        "\"\"",
        "\"mpf_set_str error\\n\"",
        "\"  point  %s\\n\"",
        "\"  str    %s\\n\"",
        "\"mpf_set_str wrong result\\n\"",
        "\"  point  %s\\n\"",
        "\"  str    %s\\n\"",
        "\"  f\"",
        "\"  d=%g\\n\"",
        "\"%Ff\"",
        "\"gmp_sscanf wrong return value\\n\"",
        "\"  point  %s\\n\"",
        "\"  str    %s\\n\"",
        "\"  ret    %d\\n\"",
        "\"gmp_sscanf wrong result\\n\"",
        "\"  point  %s\\n\"",
        "\"  str    %s\\n\"",
        "\"  f\"",
        "\"  d=%g\\n\""
      ]
    },
    "main": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": [
        "\",\"",
        "\"%.1Ff\"",
        "\"1,5\"",
        "\"Test skipped, replacing localeconv/nl_langinfo doesn't work\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/misc/t-printf.c": {
    "check_plain": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": [
        "\"wanted data doesn't match plain vsprintf\\n\"",
        "\"  fmt      |%s|\\n\"",
        "\"  got      |%s|\\n\"",
        "\"  want     |%s|\\n\"",
        "\"  got_len  %d\\n\"",
        "\"  want_len %d\\n\""
      ]
    },
    "check_vsprintf": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": [
        "\"gmp_vsprintf wrong\\n\"",
        "\"  fmt      |%s|\\n\"",
        "\"  got      |%s|\\n\"",
        "\"  want     |%s|\\n\"",
        "\"  got_len  %d\\n\"",
        "\"  want_len %d\\n\""
      ]
    },
    "check_vfprintf": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": [
        "\"gmp_vfprintf wrong\\n\"",
        "\"  fmt       |%s|\\n\"",
        "\"  got       |%.*s|\\n\"",
        "\"  want      |%s|\\n\"",
        "\"  got_len   %d\\n\"",
        "\"  ftell_len %ld\\n\"",
        "\"  fread_len %d\\n\"",
        "\"  want_len  %d\\n\""
      ]
    },
    "check_vsnprintf": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": [
        "\"gmp_vsnprintf overwrote bufsize sentinel\\n\"",
        "\"gmp_vsnprintf return value wrong\\n\"",
        "\"gmp_vsnprintf wrong result string\\n\"",
        "\"  fmt       |%s|\\n\"",
        "\"  bufsize   %lu\\n\"",
        "\"  got       |%s|\\n\"",
        "\"  want      |%.*s|\\n\"",
        "\"  want full |%s|\\n\"",
        "\"  ret       %d\\n\"",
        "\"  want_len  %d\\n\""
      ]
    },
    "check_vasprintf": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": [
        "\"gmp_vasprintf wrong\\n\"",
        "\"  fmt      |%s|\\n\"",
        "\"  got      |%s|\\n\"",
        "\"  want     |%s|\\n\"",
        "\"  got_len  %d\\n\"",
        "\"  want_len %d\\n\""
      ]
    },
    "check_obstack_vprintf": {
      "start_point": [
        268,
        0
      ],
      "end_point": [
        298,
        1
      ],
      "strings": [
        "\"gmp_obstack_vprintf wrong\\n\"",
        "\"  fmt      |%s|\\n\"",
        "\"  got      |%s|\\n\"",
        "\"  want     |%s|\\n\"",
        "\"  got_len  %d\\n\"",
        "\"  ob_len   %d\\n\"",
        "\"  want_len %d\\n\""
      ]
    },
    "check_one": {
      "start_point": [
        301,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": []
    },
    "check_z": {
      "start_point": [
        321,
        0
      ],
      "end_point": [
        430,
        1
      ],
      "strings": [
        "\"%Zd\"",
        "\"0\"",
        "\"0\"",
        "\"%Zd\"",
        "\"1\"",
        "\"1\"",
        "\"%Zd\"",
        "\"123\"",
        "\"123\"",
        "\"%Zd\"",
        "\"-1\"",
        "\"-1\"",
        "\"%Zd\"",
        "\"-123\"",
        "\"-123\"",
        "\"%+Zd\"",
        "\"0\"",
        "\"+0\"",
        "\"%+Zd\"",
        "\"123\"",
        "\"+123\"",
        "\"%+Zd\"",
        "\"-123\"",
        "\"-123\"",
        "\"%Zx\"",
        "\"123\"",
        "\"7b\"",
        "\"%ZX\"",
        "\"123\"",
        "\"7B\"",
        "\"%Zx\"",
        "\"-123\"",
        "\"-7b\"",
        "\"%ZX\"",
        "\"-123\"",
        "\"-7B\"",
        "\"%Zo\"",
        "\"123\"",
        "\"173\"",
        "\"%Zo\"",
        "\"-123\"",
        "\"-173\"",
        "\"%#Zx\"",
        "\"0\"",
        "\"0\"",
        "\"%#ZX\"",
        "\"0\"",
        "\"0\"",
        "\"%#Zx\"",
        "\"123\"",
        "\"0x7b\"",
        "\"%#ZX\"",
        "\"123\"",
        "\"0X7B\"",
        "\"%#Zx\"",
        "\"-123\"",
        "\"-0x7b\"",
        "\"%#ZX\"",
        "\"-123\"",
        "\"-0X7B\"",
        "\"%#Zo\"",
        "\"0\"",
        "\"0\"",
        "\"%#Zo\"",
        "\"123\"",
        "\"0173\"",
        "\"%#Zo\"",
        "\"-123\"",
        "\"-0173\"",
        "\"%10Zd\"",
        "\"0\"",
        "\"         0\"",
        "\"%10Zd\"",
        "\"123\"",
        "\"       123\"",
        "\"%10Zd\"",
        "\"-123\"",
        "\"      -123\"",
        "\"%-10Zd\"",
        "\"0\"",
        "\"0         \"",
        "\"%-10Zd\"",
        "\"123\"",
        "\"123       \"",
        "\"%-10Zd\"",
        "\"-123\"",
        "\"-123      \"",
        "\"%+10Zd\"",
        "\"123\"",
        "\"      +123\"",
        "\"%+-10Zd\"",
        "\"123\"",
        "\"+123      \"",
        "\"%+10Zd\"",
        "\"-123\"",
        "\"      -123\"",
        "\"%+-10Zd\"",
        "\"-123\"",
        "\"-123      \"",
        "\"%08Zd\"",
        "\"0\"",
        "\"00000000\"",
        "\"%08Zd\"",
        "\"123\"",
        "\"00000123\"",
        "\"%08Zd\"",
        "\"-123\"",
        "\"-0000123\"",
        "\"%+08Zd\"",
        "\"0\"",
        "\"+0000000\"",
        "\"%+08Zd\"",
        "\"123\"",
        "\"+0000123\"",
        "\"%+08Zd\"",
        "\"-123\"",
        "\"-0000123\"",
        "\"%#08Zx\"",
        "\"0\"",
        "\"00000000\"",
        "\"%#08Zx\"",
        "\"123\"",
        "\"0x00007b\"",
        "\"%#08Zx\"",
        "\"-123\"",
        "\"-0x0007b\"",
        "\"%+#08Zx\"",
        "\"0\"",
        "\"+0000000\"",
        "\"%+#08Zx\"",
        "\"123\"",
        "\"+0x0007b\"",
        "\"%+#08Zx\"",
        "\"-123\"",
        "\"-0x0007b\"",
        "\"%.0Zd\"",
        "\"0\"",
        "\"\"",
        "\"%.1Zd\"",
        "\"0\"",
        "\"0\"",
        "\"%.2Zd\"",
        "\"0\"",
        "\"00\"",
        "\"%.3Zd\"",
        "\"0\"",
        "\"000\""
      ]
    },
    "check_q": {
      "start_point": [
        432,
        0
      ],
      "end_point": [
        537,
        1
      ],
      "strings": [
        "\"%Qd\"",
        "\"0\"",
        "\"0\"",
        "\"%Qd\"",
        "\"1\"",
        "\"1\"",
        "\"%Qd\"",
        "\"123\"",
        "\"123\"",
        "\"%Qd\"",
        "\"-1\"",
        "\"-1\"",
        "\"%Qd\"",
        "\"-123\"",
        "\"-123\"",
        "\"%Qd\"",
        "\"3/2\"",
        "\"3/2\"",
        "\"%Qd\"",
        "\"-3/2\"",
        "\"-3/2\"",
        "\"%+Qd\"",
        "\"0\"",
        "\"+0\"",
        "\"%+Qd\"",
        "\"123\"",
        "\"+123\"",
        "\"%+Qd\"",
        "\"-123\"",
        "\"-123\"",
        "\"%+Qd\"",
        "\"5/8\"",
        "\"+5/8\"",
        "\"%+Qd\"",
        "\"-5/8\"",
        "\"-5/8\"",
        "\"%Qx\"",
        "\"123\"",
        "\"7b\"",
        "\"%QX\"",
        "\"123\"",
        "\"7B\"",
        "\"%Qx\"",
        "\"15/16\"",
        "\"f/10\"",
        "\"%QX\"",
        "\"15/16\"",
        "\"F/10\"",
        "\"%Qx\"",
        "\"-123\"",
        "\"-7b\"",
        "\"%QX\"",
        "\"-123\"",
        "\"-7B\"",
        "\"%Qx\"",
        "\"-15/16\"",
        "\"-f/10\"",
        "\"%QX\"",
        "\"-15/16\"",
        "\"-F/10\"",
        "\"%Qo\"",
        "\"123\"",
        "\"173\"",
        "\"%Qo\"",
        "\"-123\"",
        "\"-173\"",
        "\"%Qo\"",
        "\"16/17\"",
        "\"20/21\"",
        "\"%Qo\"",
        "\"-16/17\"",
        "\"-20/21\"",
        "\"%#Qx\"",
        "\"0\"",
        "\"0\"",
        "\"%#QX\"",
        "\"0\"",
        "\"0\"",
        "\"%#Qx\"",
        "\"123\"",
        "\"0x7b\"",
        "\"%#QX\"",
        "\"123\"",
        "\"0X7B\"",
        "\"%#Qx\"",
        "\"5/8\"",
        "\"0x5/0x8\"",
        "\"%#QX\"",
        "\"5/8\"",
        "\"0X5/0X8\"",
        "\"%#Qx\"",
        "\"-123\"",
        "\"-0x7b\"",
        "\"%#QX\"",
        "\"-123\"",
        "\"-0X7B\"",
        "\"%#Qx\"",
        "\"-5/8\"",
        "\"-0x5/0x8\"",
        "\"%#QX\"",
        "\"-5/8\"",
        "\"-0X5/0X8\"",
        "\"%#Qo\"",
        "\"0\"",
        "\"0\"",
        "\"%#Qo\"",
        "\"123\"",
        "\"0173\"",
        "\"%#Qo\"",
        "\"-123\"",
        "\"-0173\"",
        "\"%#Qo\"",
        "\"5/7\"",
        "\"05/07\"",
        "\"%#Qo\"",
        "\"-5/7\"",
        "\"-05/07\"",
        "\"%#10Qo\"",
        "\"0/0\"",
        "\"       0/0\"",
        "\"%#10Qd\"",
        "\"0/0\"",
        "\"       0/0\"",
        "\"%#10Qx\"",
        "\"0/0\"",
        "\"       0/0\"",
        "\"%#10Qo\"",
        "\"123/0\"",
        "\"    0173/0\"",
        "\"%#10Qd\"",
        "\"123/0\"",
        "\"     123/0\"",
        "\"%#10Qx\"",
        "\"123/0\"",
        "\"    0x7b/0\"",
        "\"%#10QX\"",
        "\"123/0\"",
        "\"    0X7B/0\"",
        "\"%#10Qo\"",
        "\"-123/0\"",
        "\"   -0173/0\"",
        "\"%#10Qd\"",
        "\"-123/0\"",
        "\"    -123/0\"",
        "\"%#10Qx\"",
        "\"-123/0\"",
        "\"   -0x7b/0\"",
        "\"%#10QX\"",
        "\"-123/0\"",
        "\"   -0X7B/0\"",
        "\"%10Qd\"",
        "\"0\"",
        "\"         0\"",
        "\"%-10Qd\"",
        "\"0\"",
        "\"0         \"",
        "\"%10Qd\"",
        "\"123\"",
        "\"       123\"",
        "\"%-10Qd\"",
        "\"123\"",
        "\"123       \"",
        "\"%10Qd\"",
        "\"-123\"",
        "\"      -123\"",
        "\"%-10Qd\"",
        "\"-123\"",
        "\"-123      \"",
        "\"%+10Qd\"",
        "\"123\"",
        "\"      +123\"",
        "\"%+-10Qd\"",
        "\"123\"",
        "\"+123      \"",
        "\"%+10Qd\"",
        "\"-123\"",
        "\"      -123\"",
        "\"%+-10Qd\"",
        "\"-123\"",
        "\"-123      \"",
        "\"%08Qd\"",
        "\"0\"",
        "\"00000000\"",
        "\"%08Qd\"",
        "\"123\"",
        "\"00000123\"",
        "\"%08Qd\"",
        "\"-123\"",
        "\"-0000123\"",
        "\"%+08Qd\"",
        "\"0\"",
        "\"+0000000\"",
        "\"%+08Qd\"",
        "\"123\"",
        "\"+0000123\"",
        "\"%+08Qd\"",
        "\"-123\"",
        "\"-0000123\"",
        "\"%#08Qx\"",
        "\"0\"",
        "\"00000000\"",
        "\"%#08Qx\"",
        "\"123\"",
        "\"0x00007b\"",
        "\"%#08Qx\"",
        "\"-123\"",
        "\"-0x0007b\"",
        "\"%+#08Qx\"",
        "\"0\"",
        "\"+0000000\"",
        "\"%+#08Qx\"",
        "\"123\"",
        "\"+0x0007b\"",
        "\"%+#08Qx\"",
        "\"-123\"",
        "\"-0x0007b\""
      ]
    },
    "check_f": {
      "start_point": [
        539,
        0
      ],
      "end_point": [
        699,
        1
      ],
      "strings": [
        "\"%Ff\"",
        "\"0\"",
        "\"0.000000\"",
        "\"%Ff\"",
        "\"123\"",
        "\"123.000000\"",
        "\"%Ff\"",
        "\"-123\"",
        "\"-123.000000\"",
        "\"%+Ff\"",
        "\"0\"",
        "\"+0.000000\"",
        "\"%+Ff\"",
        "\"123\"",
        "\"+123.000000\"",
        "\"%+Ff\"",
        "\"-123\"",
        "\"-123.000000\"",
        "\"%.0Ff\"",
        "\"0\"",
        "\"0\"",
        "\"%.0Ff\"",
        "\"123\"",
        "\"123\"",
        "\"%.0Ff\"",
        "\"-123\"",
        "\"-123\"",
        "\"%8.0Ff\"",
        "\"0\"",
        "\"       0\"",
        "\"%8.0Ff\"",
        "\"123\"",
        "\"     123\"",
        "\"%8.0Ff\"",
        "\"-123\"",
        "\"    -123\"",
        "\"%08.0Ff\"",
        "\"0\"",
        "\"00000000\"",
        "\"%08.0Ff\"",
        "\"123\"",
        "\"00000123\"",
        "\"%08.0Ff\"",
        "\"-123\"",
        "\"-0000123\"",
        "\"%10.2Ff\"",
        "\"0\"",
        "\"      0.00\"",
        "\"%10.2Ff\"",
        "\"0.25\"",
        "\"      0.25\"",
        "\"%10.2Ff\"",
        "\"123.25\"",
        "\"    123.25\"",
        "\"%10.2Ff\"",
        "\"-123.25\"",
        "\"   -123.25\"",
        "\"%-10.2Ff\"",
        "\"0\"",
        "\"0.00      \"",
        "\"%-10.2Ff\"",
        "\"0.25\"",
        "\"0.25      \"",
        "\"%-10.2Ff\"",
        "\"123.25\"",
        "\"123.25    \"",
        "\"%-10.2Ff\"",
        "\"-123.25\"",
        "\"-123.25   \"",
        "\"%.2Ff\"",
        "\"0.00000000000001\"",
        "\"0.00\"",
        "\"%.2Ff\"",
        "\"0.002\"",
        "\"0.00\"",
        "\"%.2Ff\"",
        "\"0.008\"",
        "\"0.01\"",
        "\"%.0Ff\"",
        "\"123.00000000000001\"",
        "\"123\"",
        "\"%.0Ff\"",
        "\"123.2\"",
        "\"123\"",
        "\"%.0Ff\"",
        "\"123.8\"",
        "\"124\"",
        "\"%.0Ff\"",
        "\"999999.9\"",
        "\"1000000\"",
        "\"%.0Ff\"",
        "\"3999999.9\"",
        "\"4000000\"",
        "\"%Fe\"",
        "\"0\"",
        "\"0.000000e+00\"",
        "\"%Fe\"",
        "\"1\"",
        "\"1.000000e+00\"",
        "\"%Fe\"",
        "\"123\"",
        "\"1.230000e+02\"",
        "\"%FE\"",
        "\"0\"",
        "\"0.000000E+00\"",
        "\"%FE\"",
        "\"1\"",
        "\"1.000000E+00\"",
        "\"%FE\"",
        "\"123\"",
        "\"1.230000E+02\"",
        "\"%Fe\"",
        "\"0\"",
        "\"0.000000e+00\"",
        "\"%Fe\"",
        "\"1\"",
        "\"1.000000e+00\"",
        "\"%.0Fe\"",
        "\"10000000000\"",
        "\"1e+10\"",
        "\"%.0Fe\"",
        "\"-10000000000\"",
        "\"-1e+10\"",
        "\"%.2Fe\"",
        "\"10000000000\"",
        "\"1.00e+10\"",
        "\"%.2Fe\"",
        "\"-10000000000\"",
        "\"-1.00e+10\"",
        "\"%8.0Fe\"",
        "\"10000000000\"",
        "\"   1e+10\"",
        "\"%8.0Fe\"",
        "\"-10000000000\"",
        "\"  -1e+10\"",
        "\"%-8.0Fe\"",
        "\"10000000000\"",
        "\"1e+10   \"",
        "\"%-8.0Fe\"",
        "\"-10000000000\"",
        "\"-1e+10  \"",
        "\"%12.2Fe\"",
        "\"10000000000\"",
        "\"    1.00e+10\"",
        "\"%12.2Fe\"",
        "\"-10000000000\"",
        "\"   -1.00e+10\"",
        "\"%012.2Fe\"",
        "\"10000000000\"",
        "\"00001.00e+10\"",
        "\"%012.2Fe\"",
        "\"-10000000000\"",
        "\"-0001.00e+10\"",
        "\"%Fg\"",
        "\"0\"",
        "\"0\"",
        "\"%Fg\"",
        "\"1\"",
        "\"1\"",
        "\"%Fg\"",
        "\"-1\"",
        "\"-1\"",
        "\"%.0Fg\"",
        "\"0\"",
        "\"0\"",
        "\"%.0Fg\"",
        "\"1\"",
        "\"1\"",
        "\"%.0Fg\"",
        "\"-1\"",
        "\"-1\"",
        "\"%.1Fg\"",
        "\"100\"",
        "\"1e+02\"",
        "\"%.2Fg\"",
        "\"100\"",
        "\"1e+02\"",
        "\"%.3Fg\"",
        "\"100\"",
        "\"100\"",
        "\"%.4Fg\"",
        "\"100\"",
        "\"100\"",
        "\"%Fg\"",
        "\"0.001\"",
        "\"0.001\"",
        "\"%Fg\"",
        "\"0.0001\"",
        "\"0.0001\"",
        "\"%Fg\"",
        "\"0.00001\"",
        "\"1e-05\"",
        "\"%Fg\"",
        "\"0.000001\"",
        "\"1e-06\"",
        "\"%.4Fg\"",
        "\"1.00000000000001\"",
        "\"1\"",
        "\"%.4Fg\"",
        "\"100000000000001\"",
        "\"1e+14\"",
        "\"%.4Fg\"",
        "\"12345678\"",
        "\"1.235e+07\"",
        "\"%Fa\"",
        "\"0\"",
        "\"0x0p+0\"",
        "\"%FA\"",
        "\"0\"",
        "\"0X0P+0\"",
        "\"%Fa\"",
        "\"1\"",
        "\"0x1p+0\"",
        "\"%Fa\"",
        "\"65535\"",
        "\"0xf.fffp+12\"",
        "\"%Fa\"",
        "\"65536\"",
        "\"0x1p+16\"",
        "\"%F.10a\"",
        "\"65536\"",
        "\"0x1.0000000000p+16\"",
        "\"%F.1a\"",
        "\"65535\"",
        "\"0x1.0p+16\"",
        "\"%F.0a\"",
        "\"65535\"",
        "\"0x1p+16\"",
        "\"%.2Ff\"",
        "\"0.99609375\"",
        "\"1.00\"",
        "\"%.Ff\"",
        "\"0.99609375\"",
        "\"0.99609375\"",
        "\"%.Fe\"",
        "\"0.99609375\"",
        "\"9.9609375e-01\"",
        "\"%.Fg\"",
        "\"0.99609375\"",
        "\"0.99609375\"",
        "\"%.20Fg\"",
        "\"1000000\"",
        "\"1000000\"",
        "\"%.Fg\"",
        "\"1000000\"",
        "\"1000000\"",
        "\"%#.0Ff\"",
        "\"1\"",
        "\"1.\"",
        "\"%#.0Fe\"",
        "\"1\"",
        "\"1.e+00\"",
        "\"%#.0Fg\"",
        "\"1\"",
        "\"1.\"",
        "\"%#.1Ff\"",
        "\"1\"",
        "\"1.0\"",
        "\"%#.1Fe\"",
        "\"1\"",
        "\"1.0e+00\"",
        "\"%#.1Fg\"",
        "\"1\"",
        "\"1.\"",
        "\"%#.4Ff\"",
        "\"1234\"",
        "\"1234.0000\"",
        "\"%#.4Fe\"",
        "\"1234\"",
        "\"1.2340e+03\"",
        "\"%#.4Fg\"",
        "\"1234\"",
        "\"1234.\"",
        "\"%#.8Ff\"",
        "\"1234\"",
        "\"1234.00000000\"",
        "\"%#.8Fe\"",
        "\"1234\"",
        "\"1.23400000e+03\"",
        "\"%#.8Fg\"",
        "\"1234\"",
        "\"1234.0000\""
      ]
    },
    "check_limb": {
      "start_point": [
        702,
        0
      ],
      "end_point": [
        736,
        1
      ],
      "strings": [
        "\"0\"",
        "\"%Md\"",
        "\"1\"",
        "\"%Md\"",
        "\"%Mu\"",
        "\"%Mx\"",
        "\"%MX\""
      ]
    },
    "check_n": {
      "start_point": [
        739,
        0
      ],
      "end_point": [
        851,
        1
      ],
      "strings": [
        "\"blah\"",
        "\"%nblah\"",
        "\"hello \"",
        "\"hello %n\"",
        "\"hello  world\"",
        "\"hello %n world\"",
        "\"M\"",
        "\"hh\"",
        "\"l\"",
        "\"j\"",
        "\"t\"",
        "\"h\"",
        "\"z\"",
        "\"123456\"",
        "\"%d%Zn%d\"",
        "\"123456\"",
        "\"%d%Qn%d\"",
        "\"123456\"",
        "\"%d%Fn%d\"",
        "\"blah\"",
        "\"bl%Nnah\"",
        "\"blah\"",
        "\"bl%Nnah\""
      ]
    },
    "check_misc": {
      "start_point": [
        854,
        0
      ],
      "end_point": [
        923,
        1
      ],
      "strings": [
        "\"!\"",
        "\"%c\"",
        "\"hello world\"",
        "\"hello %s\"",
        "\"world\"",
        "\"hello:\"",
        "\"%s:\"",
        "\"hello\"",
        "\"hello0\"",
        "\"%s%Zd\"",
        "\"hello\"",
        "\"%s\"",
        "\"     12345\"",
        "\"%*Zd\"",
        "\"0000012345\"",
        "\"%0*Zd\"",
        "\"12345     \"",
        "\"%*Zd\"",
        "\"12345 and 678\"",
        "\"%Zd and %d\"",
        "\"12345,1,12345,2,12345\"",
        "\"%Zd,%d,%Zd,%d,%Zd\"",
        "\"|    0|0    |   +0|+0   |    0|00000|     |   00|0|\"",
        "\"|%5Zd|%-5Zd|%+5Zd|%+-5Zd|% 5Zd|%05Zd|%5.0Zd|%5.2Zd|%Zd|\"",
        "\"|    1|1    |   +1|+1   |    1|00001|    1|   01|1|\"",
        "\"|%5Zd|%-5Zd|%+5Zd|%+-5Zd|% 5Zd|%05Zd|%5.0Zd|%5.2Zd|%Zd|\"",
        "\"|   -1|-1   |   -1|-1   |   -1|-0001|   -1|  -01|-1|\"",
        "\"|%5Zd|%-5Zd|%+5Zd|%+-5Zd|% 5Zd|%05Zd|%5.0Zd|%5.2Zd|%Zd|\"",
        "\"|100000|100000|+100000|+100000| 100000|100000|100000|100000|100000|\"",
        "\"|%5Zd|%-5Zd|%+5Zd|%+-5Zd|% 5Zd|%05Zd|%5.0Zd|%5.2Zd|%Zd|\"",
        "\"|    0|    0|    0|    0|    0|    0|  00000000|\"",
        "\"|%5Zo|%5Zx|%5ZX|%#5Zo|%#5Zx|%#5ZX|%#10.8Zx|\"",
        "\"|    1|    1|    1|   01|  0x1|  0X1|0x00000001|\"",
        "\"|%5Zo|%5Zx|%5ZX|%#5Zo|%#5Zx|%#5ZX|%#10.8Zx|\"",
        "\"|303240|186a0|186A0|0303240|0x186a0|0X186A0|0x000186a0|\"",
        "\"|%5Zo|%5Zx|%5ZX|%#5Zo|%#5Zx|%#5ZX|%#10.8Zx|\"",
        "\"456 789 blah\"",
        "\"%zd %Zd blah\""
      ]
    },
    "main": {
      "start_point": [
        926,
        0
      ],
      "end_point": [
        947,
        1
      ],
      "strings": [
        "\"-s\"",
        "\"w+\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/misc/t-scanf.c": {
    "test_sscanf_eof_ok": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": [
        "\"\"",
        "\"%d\"",
        "\"Warning, sscanf(\\\"\\\",\\\"%%d\\\",&x) doesn't return EOF.\\n\"",
        "\"This affects gmp_sscanf, tests involving it will be suppressed.\\n\"",
        "\"You should try to get a fix for your libc.\\n\""
      ]
    },
    "libc_scanf_convert": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "fromstring_gmp_fscanf": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": [
        "\"w+\""
      ]
    },
    "fun_gmp_sscanf": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    },
    "fun_gmp_fscanf": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "fun_fscanf": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"w+\""
      ]
    },
    "fun_sscanf": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": []
    },
    "fmt_allignore": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": []
    },
    "check_z": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        602,
        1
      ],
      "strings": [
        "\"%Zd\"",
        "\"0\"",
        "\"0\"",
        "\"%Zd\"",
        "\"1\"",
        "\"1\"",
        "\"%Zd\"",
        "\"123\"",
        "\"123\"",
        "\"%Zd\"",
        "\"+0\"",
        "\"0\"",
        "\"%Zd\"",
        "\"+1\"",
        "\"1\"",
        "\"%Zd\"",
        "\"+123\"",
        "\"123\"",
        "\"%Zd\"",
        "\"-0\"",
        "\"0\"",
        "\"%Zd\"",
        "\"-1\"",
        "\"-1\"",
        "\"%Zd\"",
        "\"-123\"",
        "\"-123\"",
        "\"%Zo\"",
        "\"0\"",
        "\"0\"",
        "\"%Zo\"",
        "\"173\"",
        "\"123\"",
        "\"%Zo\"",
        "\"+0\"",
        "\"0\"",
        "\"%Zo\"",
        "\"+173\"",
        "\"123\"",
        "\"%Zo\"",
        "\"-0\"",
        "\"0\"",
        "\"%Zo\"",
        "\"-173\"",
        "\"-123\"",
        "\"%Zx\"",
        "\"0\"",
        "\"0\"",
        "\"%Zx\"",
        "\"7b\"",
        "\"123\"",
        "\"%Zx\"",
        "\"7b\"",
        "\"123\"",
        "\"%Zx\"",
        "\"+0\"",
        "\"0\"",
        "\"%Zx\"",
        "\"+7b\"",
        "\"123\"",
        "\"%Zx\"",
        "\"+7b\"",
        "\"123\"",
        "\"%Zx\"",
        "\"-0\"",
        "\"-0\"",
        "\"%Zx\"",
        "\"-7b\"",
        "\"-123\"",
        "\"%Zx\"",
        "\"-7b\"",
        "\"-123\"",
        "\"%ZX\"",
        "\"0\"",
        "\"0\"",
        "\"%ZX\"",
        "\"7b\"",
        "\"123\"",
        "\"%ZX\"",
        "\"7b\"",
        "\"123\"",
        "\"%ZX\"",
        "\"+0\"",
        "\"0\"",
        "\"%ZX\"",
        "\"+7b\"",
        "\"123\"",
        "\"%ZX\"",
        "\"+7b\"",
        "\"123\"",
        "\"%ZX\"",
        "\"-0\"",
        "\"-0\"",
        "\"%ZX\"",
        "\"-7b\"",
        "\"-123\"",
        "\"%ZX\"",
        "\"-7b\"",
        "\"-123\"",
        "\"%Zx\"",
        "\"0\"",
        "\"0\"",
        "\"%Zx\"",
        "\"7B\"",
        "\"123\"",
        "\"%Zx\"",
        "\"7B\"",
        "\"123\"",
        "\"%Zx\"",
        "\"+0\"",
        "\"0\"",
        "\"%Zx\"",
        "\"+7B\"",
        "\"123\"",
        "\"%Zx\"",
        "\"+7B\"",
        "\"123\"",
        "\"%Zx\"",
        "\"-0\"",
        "\"-0\"",
        "\"%Zx\"",
        "\"-7B\"",
        "\"-123\"",
        "\"%Zx\"",
        "\"-7B\"",
        "\"-123\"",
        "\"%ZX\"",
        "\"0\"",
        "\"0\"",
        "\"%ZX\"",
        "\"7B\"",
        "\"123\"",
        "\"%ZX\"",
        "\"7B\"",
        "\"123\"",
        "\"%ZX\"",
        "\"+0\"",
        "\"0\"",
        "\"%ZX\"",
        "\"+7B\"",
        "\"123\"",
        "\"%ZX\"",
        "\"+7B\"",
        "\"123\"",
        "\"%ZX\"",
        "\"-0\"",
        "\"-0\"",
        "\"%ZX\"",
        "\"-7B\"",
        "\"-123\"",
        "\"%ZX\"",
        "\"-7B\"",
        "\"-123\"",
        "\"%Zi\"",
        "\"0\"",
        "\"0\"",
        "\"%Zi\"",
        "\"1\"",
        "\"1\"",
        "\"%Zi\"",
        "\"123\"",
        "\"123\"",
        "\"%Zi\"",
        "\"+0\"",
        "\"0\"",
        "\"%Zi\"",
        "\"+1\"",
        "\"1\"",
        "\"%Zi\"",
        "\"+123\"",
        "\"123\"",
        "\"%Zi\"",
        "\"-0\"",
        "\"0\"",
        "\"%Zi\"",
        "\"-1\"",
        "\"-1\"",
        "\"%Zi\"",
        "\"-123\"",
        "\"-123\"",
        "\"%Zi\"",
        "\"00\"",
        "\"0\"",
        "\"%Zi\"",
        "\"0173\"",
        "\"123\"",
        "\"%Zi\"",
        "\"+00\"",
        "\"0\"",
        "\"%Zi\"",
        "\"+0173\"",
        "\"123\"",
        "\"%Zi\"",
        "\"-00\"",
        "\"0\"",
        "\"%Zi\"",
        "\"-0173\"",
        "\"-123\"",
        "\"%Zi\"",
        "\"0x0\"",
        "\"0\"",
        "\"%Zi\"",
        "\"0x7b\"",
        "\"123\"",
        "\"%Zi\"",
        "\"0x7b\"",
        "\"123\"",
        "\"%Zi\"",
        "\"+0x0\"",
        "\"0\"",
        "\"%Zi\"",
        "\"+0x7b\"",
        "\"123\"",
        "\"%Zi\"",
        "\"+0x7b\"",
        "\"123\"",
        "\"%Zi\"",
        "\"-0x0\"",
        "\"-0\"",
        "\"%Zi\"",
        "\"-0x7b\"",
        "\"-123\"",
        "\"%Zi\"",
        "\"-0x7b\"",
        "\"-123\"",
        "\"%Zi\"",
        "\"0X0\"",
        "\"0\"",
        "\"%Zi\"",
        "\"0X7b\"",
        "\"123\"",
        "\"%Zi\"",
        "\"0X7b\"",
        "\"123\"",
        "\"%Zi\"",
        "\"+0X0\"",
        "\"0\"",
        "\"%Zi\"",
        "\"+0X7b\"",
        "\"123\"",
        "\"%Zi\"",
        "\"+0X7b\"",
        "\"123\"",
        "\"%Zi\"",
        "\"-0X0\"",
        "\"-0\"",
        "\"%Zi\"",
        "\"-0X7b\"",
        "\"-123\"",
        "\"%Zi\"",
        "\"-0X7b\"",
        "\"-123\"",
        "\"%Zi\"",
        "\"0x0\"",
        "\"0\"",
        "\"%Zi\"",
        "\"0x7B\"",
        "\"123\"",
        "\"%Zi\"",
        "\"0x7B\"",
        "\"123\"",
        "\"%Zi\"",
        "\"+0x0\"",
        "\"0\"",
        "\"%Zi\"",
        "\"+0x7B\"",
        "\"123\"",
        "\"%Zi\"",
        "\"+0x7B\"",
        "\"123\"",
        "\"%Zi\"",
        "\"-0x0\"",
        "\"-0\"",
        "\"%Zi\"",
        "\"-0x7B\"",
        "\"-123\"",
        "\"%Zi\"",
        "\"-0x7B\"",
        "\"-123\"",
        "\"%Zi\"",
        "\"0X0\"",
        "\"0\"",
        "\"%Zi\"",
        "\"0X7B\"",
        "\"123\"",
        "\"%Zi\"",
        "\"0X7B\"",
        "\"123\"",
        "\"%Zi\"",
        "\"+0X0\"",
        "\"0\"",
        "\"%Zi\"",
        "\"+0X7B\"",
        "\"123\"",
        "\"%Zi\"",
        "\"+0X7B\"",
        "\"123\"",
        "\"%Zi\"",
        "\"-0X0\"",
        "\"-0\"",
        "\"%Zi\"",
        "\"-0X7B\"",
        "\"-123\"",
        "\"%Zi\"",
        "\"-0X7B\"",
        "\"-123\"",
        "\"%Zd\"",
        "\" 0\"",
        "\"0\"",
        "\"%Zd\"",
        "\"  0\"",
        "\"0\"",
        "\"%Zd\"",
        "\"   0\"",
        "\"0\"",
        "\"%Zd\"",
        "\"\\t0\"",
        "\"0\"",
        "\"%Zd\"",
        "\"\\t\\t0\"",
        "\"0\"",
        "\"hello%Zd\"",
        "\"hello0\"",
        "\"0\"",
        "\"hello%Zd\"",
        "\"hello 0\"",
        "\"0\"",
        "\"hello%Zd\"",
        "\"hello \\t0\"",
        "\"0\"",
        "\"hello%Zdworld\"",
        "\"hello 0world\"",
        "\"0\"",
        "\"hello%*Zd\"",
        "\"hello0\"",
        "\"-999\"",
        "\"hello%*Zd\"",
        "\"hello 0\"",
        "\"-999\"",
        "\"hello%*Zd\"",
        "\"hello \\t0\"",
        "\"-999\"",
        "\"hello%*Zdworld\"",
        "\"hello 0world\"",
        "\"-999\"",
        "\"%Zd\"",
        "\"\"",
        "\"-999\"",
        "\"%Zd\"",
        "\" \"",
        "\"-999\"",
        "\" %Zd\"",
        "\"\"",
        "\"-999\"",
        "\"xyz%Zd\"",
        "\"\"",
        "\"-999\"",
        "\"%*Zd\"",
        "\"\"",
        "\"-999\"",
        "\" %*Zd\"",
        "\"\"",
        "\"-999\"",
        "\"xyz%*Zd\"",
        "\"\"",
        "\"-999\"",
        "\"%Zd\"",
        "\"xyz\"",
        "\"0\"",
        "\"%Zd\"",
        "\"-\"",
        "\"-999\"",
        "\"%Zd\"",
        "\"+\"",
        "\"-999\"",
        "\"xyz%Zd\"",
        "\"xyz-\"",
        "\"-999\"",
        "\"xyz%Zd\"",
        "\"xyz+\"",
        "\"-999\"",
        "\"%Zi\"",
        "\"0x\"",
        "\"-999\"",
        "\"%Zi\"",
        "\"0X\"",
        "\"-999\"",
        "\"%Zi\"",
        "\"0x-\"",
        "\"-999\"",
        "\"%Zi\"",
        "\"0X+\"",
        "\"-999\"",
        "\"%Zi\"",
        "\"-0x\"",
        "\"-999\"",
        "\"%Zi\"",
        "\"-0X\"",
        "\"-999\"",
        "\"%Zi\"",
        "\"+0x\"",
        "\"-999\"",
        "\"%Zi\"",
        "\"+0X\"",
        "\"-999\"",
        "\"%1Zi\"",
        "\"1234\"",
        "\"1\"",
        "\"%2Zi\"",
        "\"1234\"",
        "\"12\"",
        "\"%3Zi\"",
        "\"1234\"",
        "\"123\"",
        "\"%4Zi\"",
        "\"1234\"",
        "\"1234\"",
        "\"%5Zi\"",
        "\"1234\"",
        "\"1234\"",
        "\"%6Zi\"",
        "\"1234\"",
        "\"1234\"",
        "\"%1Zi\"",
        "\"01234\"",
        "\"0\"",
        "\"%2Zi\"",
        "\"01234\"",
        "\"01\"",
        "\"%3Zi\"",
        "\"01234\"",
        "\"012\"",
        "\"%4Zi\"",
        "\"01234\"",
        "\"0123\"",
        "\"%5Zi\"",
        "\"01234\"",
        "\"01234\"",
        "\"%6Zi\"",
        "\"01234\"",
        "\"01234\"",
        "\"%7Zi\"",
        "\"01234\"",
        "\"01234\"",
        "\"%1Zi\"",
        "\"0x1234\"",
        "\"0\"",
        "\"%2Zi\"",
        "\"0x1234\"",
        "\"-999\"",
        "\"%3Zi\"",
        "\"0x1234\"",
        "\"0x1\"",
        "\"%4Zi\"",
        "\"0x1234\"",
        "\"0x12\"",
        "\"%5Zi\"",
        "\"0x1234\"",
        "\"0x123\"",
        "\"%6Zi\"",
        "\"0x1234\"",
        "\"0x1234\"",
        "\"%7Zi\"",
        "\"0x1234\"",
        "\"0x1234\"",
        "\"%8Zi\"",
        "\"0x1234\"",
        "\"0x1234\"",
        "\"%%xyz%Zd\"",
        "\"%xyz123\"",
        "\"123\"",
        "\"12%%34%Zd\"",
        "\"12%34567\"",
        "\"567\"",
        "\"%%%%%Zd\"",
        "\"%%123\"",
        "\"123\"",
        "\"x\"",
        "\"\"",
        "\"-999\"",
        "\" x\"",
        "\"\"",
        "\"-999\"",
        "\"xyz\"",
        "\"\"",
        "\"-999\"",
        "\" \"",
        "\"\"",
        "\"-999\"",
        "\" \"",
        "\" \"",
        "\"-999\"",
        "\"%*Zd%Zd\"",
        "\"\"",
        "\"-999\"",
        "\"%*Zd%Zd\"",
        "\"123\"",
        "\"-999\"",
        "\"x\"",
        "\"x\"",
        "\"-999\"",
        "\"xyz\"",
        "\"x\"",
        "\"-999\"",
        "\"xyz\"",
        "\"xy\"",
        "\"-999\"",
        "\"xyz\"",
        "\"xyz\"",
        "\"-999\"",
        "\"%Zn\"",
        "\"\"",
        "\"0\"",
        "\" %Zn\"",
        "\"\"",
        "\"0\"",
        "\" x%Zn\"",
        "\"\"",
        "\"-999\"",
        "\"xyz%Zn\"",
        "\"\"",
        "\"-999\"",
        "\" x%Zn\"",
        "\"\"",
        "\"-999\"",
        "\" %Zn x\"",
        "\" \"",
        "\"-999\"",
        "\" x\"",
        "\" \"",
        "\"-999\"",
        "\" xyz\"",
        "\" \"",
        "\"-999\"",
        "\" x%Zn\"",
        "\" \"",
        "\"-999\"",
        "\"%n\"",
        "\"gmp_sscanf\"",
        "\"gmp_fscanf\"",
        "\"standard sscanf\"",
        "\"standard fscanf\"",
        "\"%s wrong return value\\n\"",
        "\"%s wrong result\\n\"",
        "\"%s wrong upto\\n\"",
        "\"%s wrong ftell\\n\"",
        "\"  fmt   \\\"%s\\\"\\n\"",
        "\"  input \\\"%s\\\"\\n\"",
        "\"  ignore %d\\n\"",
        "\"  ret   want=%d\\n\"",
        "\"        got =%d\\n\"",
        "\"  value want\"",
        "\"        got \"",
        "\"  upto  want =%d\\n\"",
        "\"        got  =%d\\n\"",
        "\"  ftell want =%ld\\n\"",
        "\"        got  =%ld\\n\""
      ]
    },
    "check_q": {
      "start_point": [
        604,
        0
      ],
      "end_point": [
        986,
        1
      ],
      "strings": [
        "\"%Qd\"",
        "\"0\"",
        "\"0\"",
        "\"%Qd\"",
        "\"1\"",
        "\"1\"",
        "\"%Qd\"",
        "\"123\"",
        "\"123\"",
        "\"%Qd\"",
        "\"+0\"",
        "\"0\"",
        "\"%Qd\"",
        "\"+1\"",
        "\"1\"",
        "\"%Qd\"",
        "\"+123\"",
        "\"123\"",
        "\"%Qd\"",
        "\"-0\"",
        "\"0\"",
        "\"%Qd\"",
        "\"-1\"",
        "\"-1\"",
        "\"%Qd\"",
        "\"-123\"",
        "\"-123\"",
        "\"%Qo\"",
        "\"0\"",
        "\"0\"",
        "\"%Qo\"",
        "\"173\"",
        "\"123\"",
        "\"%Qo\"",
        "\"+0\"",
        "\"0\"",
        "\"%Qo\"",
        "\"+173\"",
        "\"123\"",
        "\"%Qo\"",
        "\"-0\"",
        "\"0\"",
        "\"%Qo\"",
        "\"-173\"",
        "\"-123\"",
        "\"%Qx\"",
        "\"0\"",
        "\"0\"",
        "\"%Qx\"",
        "\"7b\"",
        "\"123\"",
        "\"%Qx\"",
        "\"7b\"",
        "\"123\"",
        "\"%Qx\"",
        "\"+0\"",
        "\"0\"",
        "\"%Qx\"",
        "\"+7b\"",
        "\"123\"",
        "\"%Qx\"",
        "\"+7b\"",
        "\"123\"",
        "\"%Qx\"",
        "\"-0\"",
        "\"-0\"",
        "\"%Qx\"",
        "\"-7b\"",
        "\"-123\"",
        "\"%Qx\"",
        "\"-7b\"",
        "\"-123\"",
        "\"%QX\"",
        "\"0\"",
        "\"0\"",
        "\"%QX\"",
        "\"7b\"",
        "\"123\"",
        "\"%QX\"",
        "\"7b\"",
        "\"123\"",
        "\"%QX\"",
        "\"+0\"",
        "\"0\"",
        "\"%QX\"",
        "\"+7b\"",
        "\"123\"",
        "\"%QX\"",
        "\"+7b\"",
        "\"123\"",
        "\"%QX\"",
        "\"-0\"",
        "\"-0\"",
        "\"%QX\"",
        "\"-7b\"",
        "\"-123\"",
        "\"%QX\"",
        "\"-7b\"",
        "\"-123\"",
        "\"%Qx\"",
        "\"0\"",
        "\"0\"",
        "\"%Qx\"",
        "\"7B\"",
        "\"123\"",
        "\"%Qx\"",
        "\"7B\"",
        "\"123\"",
        "\"%Qx\"",
        "\"+0\"",
        "\"0\"",
        "\"%Qx\"",
        "\"+7B\"",
        "\"123\"",
        "\"%Qx\"",
        "\"+7B\"",
        "\"123\"",
        "\"%Qx\"",
        "\"-0\"",
        "\"-0\"",
        "\"%Qx\"",
        "\"-7B\"",
        "\"-123\"",
        "\"%Qx\"",
        "\"-7B\"",
        "\"-123\"",
        "\"%QX\"",
        "\"0\"",
        "\"0\"",
        "\"%QX\"",
        "\"7B\"",
        "\"123\"",
        "\"%QX\"",
        "\"7B\"",
        "\"123\"",
        "\"%QX\"",
        "\"+0\"",
        "\"0\"",
        "\"%QX\"",
        "\"+7B\"",
        "\"123\"",
        "\"%QX\"",
        "\"+7B\"",
        "\"123\"",
        "\"%QX\"",
        "\"-0\"",
        "\"-0\"",
        "\"%QX\"",
        "\"-7B\"",
        "\"-123\"",
        "\"%QX\"",
        "\"-7B\"",
        "\"-123\"",
        "\"%Qi\"",
        "\"0\"",
        "\"0\"",
        "\"%Qi\"",
        "\"1\"",
        "\"1\"",
        "\"%Qi\"",
        "\"123\"",
        "\"123\"",
        "\"%Qi\"",
        "\"+0\"",
        "\"0\"",
        "\"%Qi\"",
        "\"+1\"",
        "\"1\"",
        "\"%Qi\"",
        "\"+123\"",
        "\"123\"",
        "\"%Qi\"",
        "\"-0\"",
        "\"0\"",
        "\"%Qi\"",
        "\"-1\"",
        "\"-1\"",
        "\"%Qi\"",
        "\"-123\"",
        "\"-123\"",
        "\"%Qi\"",
        "\"00\"",
        "\"0\"",
        "\"%Qi\"",
        "\"0173\"",
        "\"123\"",
        "\"%Qi\"",
        "\"+00\"",
        "\"0\"",
        "\"%Qi\"",
        "\"+0173\"",
        "\"123\"",
        "\"%Qi\"",
        "\"-00\"",
        "\"0\"",
        "\"%Qi\"",
        "\"-0173\"",
        "\"-123\"",
        "\"%Qi\"",
        "\"0x0\"",
        "\"0\"",
        "\"%Qi\"",
        "\"0x7b\"",
        "\"123\"",
        "\"%Qi\"",
        "\"0x7b\"",
        "\"123\"",
        "\"%Qi\"",
        "\"+0x0\"",
        "\"0\"",
        "\"%Qi\"",
        "\"+0x7b\"",
        "\"123\"",
        "\"%Qi\"",
        "\"+0x7b\"",
        "\"123\"",
        "\"%Qi\"",
        "\"-0x0\"",
        "\"-0\"",
        "\"%Qi\"",
        "\"-0x7b\"",
        "\"-123\"",
        "\"%Qi\"",
        "\"-0x7b\"",
        "\"-123\"",
        "\"%Qi\"",
        "\"0X0\"",
        "\"0\"",
        "\"%Qi\"",
        "\"0X7b\"",
        "\"123\"",
        "\"%Qi\"",
        "\"0X7b\"",
        "\"123\"",
        "\"%Qi\"",
        "\"+0X0\"",
        "\"0\"",
        "\"%Qi\"",
        "\"+0X7b\"",
        "\"123\"",
        "\"%Qi\"",
        "\"+0X7b\"",
        "\"123\"",
        "\"%Qi\"",
        "\"-0X0\"",
        "\"-0\"",
        "\"%Qi\"",
        "\"-0X7b\"",
        "\"-123\"",
        "\"%Qi\"",
        "\"-0X7b\"",
        "\"-123\"",
        "\"%Qi\"",
        "\"0x0\"",
        "\"0\"",
        "\"%Qi\"",
        "\"0x7B\"",
        "\"123\"",
        "\"%Qi\"",
        "\"0x7B\"",
        "\"123\"",
        "\"%Qi\"",
        "\"+0x0\"",
        "\"0\"",
        "\"%Qi\"",
        "\"+0x7B\"",
        "\"123\"",
        "\"%Qi\"",
        "\"+0x7B\"",
        "\"123\"",
        "\"%Qi\"",
        "\"-0x0\"",
        "\"-0\"",
        "\"%Qi\"",
        "\"-0x7B\"",
        "\"-123\"",
        "\"%Qi\"",
        "\"-0x7B\"",
        "\"-123\"",
        "\"%Qi\"",
        "\"0X0\"",
        "\"0\"",
        "\"%Qi\"",
        "\"0X7B\"",
        "\"123\"",
        "\"%Qi\"",
        "\"0X7B\"",
        "\"123\"",
        "\"%Qi\"",
        "\"+0X0\"",
        "\"0\"",
        "\"%Qi\"",
        "\"+0X7B\"",
        "\"123\"",
        "\"%Qi\"",
        "\"+0X7B\"",
        "\"123\"",
        "\"%Qi\"",
        "\"-0X0\"",
        "\"-0\"",
        "\"%Qi\"",
        "\"-0X7B\"",
        "\"-123\"",
        "\"%Qi\"",
        "\"-0X7B\"",
        "\"-123\"",
        "\"%Qd\"",
        "\" 0\"",
        "\"0\"",
        "\"%Qd\"",
        "\"  0\"",
        "\"0\"",
        "\"%Qd\"",
        "\"   0\"",
        "\"0\"",
        "\"%Qd\"",
        "\"\\t0\"",
        "\"0\"",
        "\"%Qd\"",
        "\"\\t\\t0\"",
        "\"0\"",
        "\"%Qd\"",
        "\"3/2\"",
        "\"3/2\"",
        "\"%Qd\"",
        "\"+3/2\"",
        "\"3/2\"",
        "\"%Qd\"",
        "\"-3/2\"",
        "\"-3/2\"",
        "\"%Qx\"",
        "\"f/10\"",
        "\"15/16\"",
        "\"%Qx\"",
        "\"F/10\"",
        "\"15/16\"",
        "\"%QX\"",
        "\"f/10\"",
        "\"15/16\"",
        "\"%QX\"",
        "\"F/10\"",
        "\"15/16\"",
        "\"%Qo\"",
        "\"20/21\"",
        "\"16/17\"",
        "\"%Qo\"",
        "\"-20/21\"",
        "\"-16/17\"",
        "\"%Qi\"",
        "\"10/11\"",
        "\"10/11\"",
        "\"%Qi\"",
        "\"+10/11\"",
        "\"10/11\"",
        "\"%Qi\"",
        "\"-10/11\"",
        "\"-10/11\"",
        "\"%Qi\"",
        "\"010/11\"",
        "\"8/11\"",
        "\"%Qi\"",
        "\"+010/11\"",
        "\"8/11\"",
        "\"%Qi\"",
        "\"-010/11\"",
        "\"-8/11\"",
        "\"%Qi\"",
        "\"0x10/11\"",
        "\"16/11\"",
        "\"%Qi\"",
        "\"+0x10/11\"",
        "\"16/11\"",
        "\"%Qi\"",
        "\"-0x10/11\"",
        "\"-16/11\"",
        "\"%Qi\"",
        "\"10/011\"",
        "\"10/9\"",
        "\"%Qi\"",
        "\"+10/011\"",
        "\"10/9\"",
        "\"%Qi\"",
        "\"-10/011\"",
        "\"-10/9\"",
        "\"%Qi\"",
        "\"010/011\"",
        "\"8/9\"",
        "\"%Qi\"",
        "\"+010/011\"",
        "\"8/9\"",
        "\"%Qi\"",
        "\"-010/011\"",
        "\"-8/9\"",
        "\"%Qi\"",
        "\"0x10/011\"",
        "\"16/9\"",
        "\"%Qi\"",
        "\"+0x10/011\"",
        "\"16/9\"",
        "\"%Qi\"",
        "\"-0x10/011\"",
        "\"-16/9\"",
        "\"%Qi\"",
        "\"10/0x11\"",
        "\"10/17\"",
        "\"%Qi\"",
        "\"+10/0x11\"",
        "\"10/17\"",
        "\"%Qi\"",
        "\"-10/0x11\"",
        "\"-10/17\"",
        "\"%Qi\"",
        "\"010/0x11\"",
        "\"8/17\"",
        "\"%Qi\"",
        "\"+010/0x11\"",
        "\"8/17\"",
        "\"%Qi\"",
        "\"-010/0x11\"",
        "\"-8/17\"",
        "\"%Qi\"",
        "\"0x10/0x11\"",
        "\"16/17\"",
        "\"%Qi\"",
        "\"+0x10/0x11\"",
        "\"16/17\"",
        "\"%Qi\"",
        "\"-0x10/0x11\"",
        "\"-16/17\"",
        "\"hello%Qd\"",
        "\"hello0\"",
        "\"0\"",
        "\"hello%Qd\"",
        "\"hello 0\"",
        "\"0\"",
        "\"hello%Qd\"",
        "\"hello \\t0\"",
        "\"0\"",
        "\"hello%Qdworld\"",
        "\"hello 0world\"",
        "\"0\"",
        "\"hello%Qd\"",
        "\"hello3/2\"",
        "\"3/2\"",
        "\"hello%*Qd\"",
        "\"hello0\"",
        "\"-999/121\"",
        "\"hello%*Qd\"",
        "\"hello 0\"",
        "\"-999/121\"",
        "\"hello%*Qd\"",
        "\"hello \\t0\"",
        "\"-999/121\"",
        "\"hello%*Qdworld\"",
        "\"hello 0world\"",
        "\"-999/121\"",
        "\"hello%*Qdworld\"",
        "\"hello3/2world\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\" \"",
        "\"-999/121\"",
        "\" %Qd\"",
        "\"\"",
        "\"-999/121\"",
        "\"xyz%Qd\"",
        "\"\"",
        "\"-999/121\"",
        "\"%*Qd\"",
        "\"\"",
        "\"-999/121\"",
        "\" %*Qd\"",
        "\"\"",
        "\"-999/121\"",
        "\"xyz%*Qd\"",
        "\"\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"-\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"+\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"/-\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"/+\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"-/\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"+/\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"-/-\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"-/+\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"+/+\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"/123\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"-/123\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"+/123\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"123/\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"123/-\"",
        "\"-999/121\"",
        "\"%Qd\"",
        "\"123/+\"",
        "\"-999/121\"",
        "\"xyz%Qd\"",
        "\"xyz-\"",
        "\"-999/121\"",
        "\"xyz%Qd\"",
        "\"xyz+\"",
        "\"-999/121\"",
        "\"%1Qi\"",
        "\"12/57\"",
        "\"1\"",
        "\"%2Qi\"",
        "\"12/57\"",
        "\"12\"",
        "\"%3Qi\"",
        "\"12/57\"",
        "\"-999/121\"",
        "\"%4Qi\"",
        "\"12/57\"",
        "\"12/5\"",
        "\"%5Qi\"",
        "\"12/57\"",
        "\"12/57\"",
        "\"%6Qi\"",
        "\"12/57\"",
        "\"12/57\"",
        "\"%7Qi\"",
        "\"12/57\"",
        "\"12/57\"",
        "\"%1Qi\"",
        "\"012/057\"",
        "\"0\"",
        "\"%2Qi\"",
        "\"012/057\"",
        "\"01\"",
        "\"%3Qi\"",
        "\"012/057\"",
        "\"012\"",
        "\"%4Qi\"",
        "\"012/057\"",
        "\"-999/121\"",
        "\"%5Qi\"",
        "\"012/057\"",
        "\"012/0\"",
        "\"%6Qi\"",
        "\"012/057\"",
        "\"012/5\"",
        "\"%7Qi\"",
        "\"012/057\"",
        "\"012/057\"",
        "\"%8Qi\"",
        "\"012/057\"",
        "\"012/057\"",
        "\"%9Qi\"",
        "\"012/057\"",
        "\"012/057\"",
        "\"%1Qi\"",
        "\"0x12/0x57\"",
        "\"0\"",
        "\"%2Qi\"",
        "\"0x12/0x57\"",
        "\"-999\"",
        "\"%3Qi\"",
        "\"0x12/0x57\"",
        "\"0x1\"",
        "\"%4Qi\"",
        "\"0x12/0x57\"",
        "\"0x12\"",
        "\"%5Qi\"",
        "\"0x12/0x57\"",
        "\"-999/121\"",
        "\"%6Qi\"",
        "\"0x12/0x57\"",
        "\"0x12/0\"",
        "\"%7Qi\"",
        "\"0x12/0x57\"",
        "\"-999/121\"",
        "\"%8Qi\"",
        "\"0x12/0x57\"",
        "\"0x12/0x5\"",
        "\"%9Qi\"",
        "\"0x12/0x57\"",
        "\"0x12/0x57\"",
        "\"%10Qi\"",
        "\"0x12/0x57\"",
        "\"0x12/0x57\"",
        "\"%11Qi\"",
        "\"0x12/0x57\"",
        "\"0x12/0x57\"",
        "\"%Qd\"",
        "\"xyz\"",
        "\"0\"",
        "\"%n\"",
        "\"gmp_sscanf\"",
        "\"gmp_fscanf\"",
        "\"standard sscanf\"",
        "\"standard fscanf\"",
        "\"%s wrong return value\\n\"",
        "\"%s wrong result\\n\"",
        "\"%s wrong upto\\n\"",
        "\"%s wrong ftell\\n\"",
        "\"  fmt   \\\"%s\\\"\\n\"",
        "\"  input \\\"%s\\\"\\n\"",
        "\"  ret   want=%d\\n\"",
        "\"        got =%d\\n\"",
        "\"  value want\"",
        "\"        got \"",
        "\"  upto  want=%d\\n\"",
        "\"        got =%d\\n\"",
        "\"  ftell want =%ld\\n\"",
        "\"        got  =%ld\\n\""
      ]
    },
    "check_f": {
      "start_point": [
        988,
        0
      ],
      "end_point": [
        1284,
        1
      ],
      "strings": [
        "\"%Ff\"",
        "\"0\"",
        "\"0\"",
        "\"%Fe\"",
        "\"0\"",
        "\"0\"",
        "\"%FE\"",
        "\"0\"",
        "\"0\"",
        "\"%Fg\"",
        "\"0\"",
        "\"0\"",
        "\"%FG\"",
        "\"0\"",
        "\"0\"",
        "\"%Ff\"",
        "\"123\"",
        "\"123\"",
        "\"%Ff\"",
        "\"+123\"",
        "\"123\"",
        "\"%Ff\"",
        "\"-123\"",
        "\"-123\"",
        "\"%Ff\"",
        "\"123.\"",
        "\"123\"",
        "\"%Ff\"",
        "\"+123.\"",
        "\"123\"",
        "\"%Ff\"",
        "\"-123.\"",
        "\"-123\"",
        "\"%Ff\"",
        "\"123.0\"",
        "\"123\"",
        "\"%Ff\"",
        "\"+123.0\"",
        "\"123\"",
        "\"%Ff\"",
        "\"-123.0\"",
        "\"-123\"",
        "\"%Ff\"",
        "\"0123\"",
        "\"123\"",
        "\"%Ff\"",
        "\"-0123\"",
        "\"-123\"",
        "\"%Ff\"",
        "\"123.456e3\"",
        "\"123456\"",
        "\"%Ff\"",
        "\"-123.456e3\"",
        "\"-123456\"",
        "\"%Ff\"",
        "\"123.456e+3\"",
        "\"123456\"",
        "\"%Ff\"",
        "\"-123.456e+3\"",
        "\"-123456\"",
        "\"%Ff\"",
        "\"123000e-3\"",
        "\"123\"",
        "\"%Ff\"",
        "\"-123000e-3\"",
        "\"-123\"",
        "\"%Ff\"",
        "\"123000.e-3\"",
        "\"123\"",
        "\"%Ff\"",
        "\"-123000.e-3\"",
        "\"-123\"",
        "\"%Ff\"",
        "\"123.456E3\"",
        "\"123456\"",
        "\"%Ff\"",
        "\"-123.456E3\"",
        "\"-123456\"",
        "\"%Ff\"",
        "\"123.456E+3\"",
        "\"123456\"",
        "\"%Ff\"",
        "\"-123.456E+3\"",
        "\"-123456\"",
        "\"%Ff\"",
        "\"123000E-3\"",
        "\"123\"",
        "\"%Ff\"",
        "\"-123000E-3\"",
        "\"-123\"",
        "\"%Ff\"",
        "\"123000.E-3\"",
        "\"123\"",
        "\"%Ff\"",
        "\"-123000.E-3\"",
        "\"-123\"",
        "\"%Ff\"",
        "\".456e3\"",
        "\"456\"",
        "\"%Ff\"",
        "\"-.456e3\"",
        "\"-456\"",
        "\"%Ff\"",
        "\".456e+3\"",
        "\"456\"",
        "\"%Ff\"",
        "\"-.456e+3\"",
        "\"-456\"",
        "\"%Ff\"",
        "\" 0\"",
        "\"0\"",
        "\"%Ff\"",
        "\"  0\"",
        "\"0\"",
        "\"%Ff\"",
        "\"   0\"",
        "\"0\"",
        "\"%Ff\"",
        "\"\\t0\"",
        "\"0\"",
        "\"%Ff\"",
        "\"\\t\\t0\"",
        "\"0\"",
        "\"hello%Fg\"",
        "\"hello0\"",
        "\"0\"",
        "\"hello%Fg\"",
        "\"hello 0\"",
        "\"0\"",
        "\"hello%Fg\"",
        "\"hello \\t0\"",
        "\"0\"",
        "\"hello%Fgworld\"",
        "\"hello 0world\"",
        "\"0\"",
        "\"hello%Fg\"",
        "\"hello3.0\"",
        "\"3.0\"",
        "\"hello%*Fg\"",
        "\"hello0\"",
        "\"-999\"",
        "\"hello%*Fg\"",
        "\"hello 0\"",
        "\"-999\"",
        "\"hello%*Fg\"",
        "\"hello \\t0\"",
        "\"-999\"",
        "\"hello%*Fgworld\"",
        "\"hello 0world\"",
        "\"-999\"",
        "\"hello%*Fgworld\"",
        "\"hello3.0world\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"\"",
        "\"-999\"",
        "\"%Ff\"",
        "\" \"",
        "\"-999\"",
        "\"%Ff\"",
        "\"\\t\"",
        "\"-999\"",
        "\"%Ff\"",
        "\" \\t\"",
        "\"-999\"",
        "\" %Ff\"",
        "\"\"",
        "\"-999\"",
        "\"xyz%Ff\"",
        "\"\"",
        "\"-999\"",
        "\"%*Ff\"",
        "\"\"",
        "\"-999\"",
        "\" %*Ff\"",
        "\"\"",
        "\"-999\"",
        "\"xyz%*Ff\"",
        "\"\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"xyz\"",
        "\"0\"",
        "\"%Ff\"",
        "\"-\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"+\"",
        "\"-999\"",
        "\"xyz%Ff\"",
        "\"xyz-\"",
        "\"-999\"",
        "\"xyz%Ff\"",
        "\"xyz+\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-.\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"+.\"",
        "\"-999\"",
        "\"%Ff\"",
        "\".e\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-.e\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"+.e\"",
        "\"-999\"",
        "\"%Ff\"",
        "\".E\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-.E\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"+.E\"",
        "\"-999\"",
        "\"%Ff\"",
        "\".e123\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-.e123\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"+.e123\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"123e\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-123e\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"123e-\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-123e-\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"123e+\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-123e+\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"123e-Z\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"0x123p0\"",
        "\"291\"",
        "\"%Ff\"",
        "\"0x123P0\"",
        "\"291\"",
        "\"%Ff\"",
        "\"0X123p0\"",
        "\"291\"",
        "\"%Ff\"",
        "\"0X123P0\"",
        "\"291\"",
        "\"%Ff\"",
        "\"-0x123p0\"",
        "\"-291\"",
        "\"%Ff\"",
        "\"+0x123p0\"",
        "\"291\"",
        "\"%Ff\"",
        "\"0x123.p0\"",
        "\"291\"",
        "\"%Ff\"",
        "\"0x12.3p4\"",
        "\"291\"",
        "\"%Ff\"",
        "\"-0x12.3p4\"",
        "\"-291\"",
        "\"%Ff\"",
        "\"+0x12.3p4\"",
        "\"291\"",
        "\"%Ff\"",
        "\"0x1230p-4\"",
        "\"291\"",
        "\"%Ff\"",
        "\"-0x1230p-4\"",
        "\"-291\"",
        "\"%Ff\"",
        "\"+0x1230p-4\"",
        "\"291\"",
        "\"%Ff\"",
        "\"+0x.1230p12\"",
        "\"291\"",
        "\"%Ff\"",
        "\"+0x123000p-12\"",
        "\"291\"",
        "\"%Ff\"",
        "\"0x123 p12\"",
        "\"291\"",
        "\"%Ff\"",
        "\"0x9 9\"",
        "\"9\"",
        "\"%Ff\"",
        "\"0x01\"",
        "\"1\"",
        "\"%Ff\"",
        "\"0x23\"",
        "\"35\"",
        "\"%Ff\"",
        "\"0x45\"",
        "\"69\"",
        "\"%Ff\"",
        "\"0x67\"",
        "\"103\"",
        "\"%Ff\"",
        "\"0x89\"",
        "\"137\"",
        "\"%Ff\"",
        "\"0xAB\"",
        "\"171\"",
        "\"%Ff\"",
        "\"0xCD\"",
        "\"205\"",
        "\"%Ff\"",
        "\"0xEF\"",
        "\"239\"",
        "\"%Ff\"",
        "\"0xab\"",
        "\"171\"",
        "\"%Ff\"",
        "\"0xcd\"",
        "\"205\"",
        "\"%Ff\"",
        "\"0xef\"",
        "\"239\"",
        "\"%Ff\"",
        "\"0x100p0A\"",
        "\"256\"",
        "\"%Ff\"",
        "\"0x1p9\"",
        "\"512\"",
        "\"%Ff\"",
        "\"0x\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-0x\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"+0x\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"0x-\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"0x+\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"0x.\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-0x.\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"+0x.\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"0x.p\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-0x.p\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"+0x.p\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"0x.P\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-0x.P\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"+0x.P\"",
        "\"-999\"",
        "\"%Ff\"",
        "\".p123\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"-.p123\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"+.p123\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"0x1p\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"0x1p-\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"0x1p+\"",
        "\"-999\"",
        "\"%Ff\"",
        "\"0x123p 12\"",
        "\"291\"",
        "\"%Ff\"",
        "\"0x 123p12\"",
        "\"291\"",
        "\"%n\"",
        "\"gmp_sscanf\"",
        "\"gmp_fscanf\"",
        "\"standard sscanf\"",
        "\"standard fscanf\"",
        "\"%s wrong return value\\n\"",
        "\"%s wrong result\\n\"",
        "\"%s wrong upto\\n\"",
        "\"%s wrong ftell\\n\"",
        "\"  fmt   \\\"%s\\\"\\n\"",
        "\"  input \\\"%s\\\"\\n\"",
        "\"  ret   want=%d\\n\"",
        "\"        got =%d\\n\"",
        "\"  value want\"",
        "\"        got \"",
        "\"  upto  want=%d\\n\"",
        "\"        got =%d\\n\"",
        "\"  ftell want =%ld\\n\"",
        "\"        got  =%ld\\n\""
      ]
    },
    "check_n": {
      "start_point": [
        1287,
        0
      ],
      "end_point": [
        1410,
        1
      ],
      "strings": [
        "\"   \"",
        "\" %*n\"",
        "\"   \"",
        "\" %*n\"",
        "\"hh\"",
        "\"l\"",
        "\"j\"",
        "\"t\"",
        "\"h\"",
        "\"z\"",
        "\"xyz   \"",
        "\"xyz%Zn\"",
        "\"xyz   \"",
        "\"xyz%Zn\"",
        "\"xyz   \"",
        "\"xyz%Qn\"",
        "\"xyz   \"",
        "\"xyz%Qn\"",
        "\"xyz   \"",
        "\"xyz%Fn\"",
        "\"xyz   \"",
        "\"xyz%Fn\""
      ]
    },
    "check_misc": {
      "start_point": [
        1413,
        0
      ],
      "end_point": [
        1595,
        1
      ],
      "strings": [
        "\"1 2 3 4\"",
        "\"%d %d %d %Zd%n\"",
        "\"1 2 3 4\"",
        "\"%d %d %d %Zd%n\"",
        "\"1 2 3 4\"",
        "\"%d %*d %*d %Zd%n\"",
        "\"1 2 3 4\"",
        "\"%d %*d %*d %Zd%n\"",
        "\"   \"",
        "\"%s\"",
        "\"   \"",
        "\"%s\"",
        "\"   \"",
        "\"%s\"",
        "\"   \"",
        "\"%s\"",
        "\"123\"",
        "\"%*d%d\"",
        "\"123\"",
        "\"%*d%d\"",
        "\"123\"",
        "\"%*d%d\"",
        "\"123\"",
        "\"%*d%d\"",
        "\"123\"",
        "\"%*Zd%Zd\"",
        "\"123\"",
        "\"%*Zd%Zd\"",
        "\"abcdefgh\"",
        "\"%[a-d]ef%n\"",
        "\"abcd\"",
        "\"xyza\"",
        "\"%[^a]a%n\"",
        "\"xyz\"",
        "\"ab]ab]\"",
        "\"%[]ab]%n\"",
        "\"ab]ab]\"",
        "\"xyzb\"",
        "\"%[^]ab]b%n\"",
        "\"xyz\"",
        "\"456 789\"",
        "\"%zd %Zd\"",
        "\"456 789\"",
        "\"%td %Zd\"",
        "\"456 789\"",
        "\"%Ld %Zd\""
      ]
    },
    "main": {
      "start_point": [
        1597,
        0
      ],
      "end_point": [
        1616,
        1
      ],
      "strings": [
        "\"-s\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/reuse.c": {
    "main": [
      {
        "start_point": [
          34,
          0
        ],
        "end_point": [
          39,
          1
        ],
        "strings": [
          "\"Test suppressed for windows DLL\\n\""
        ]
      },
      {
        "start_point": [
          92,
          0
        ],
        "end_point": [
          201,
          1
        ],
        "strings": []
      }
    ],
    "dump_abort": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": [
        "\"failure in %s:\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-add.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"ERROR after %d tests\\n\"",
        "\"   u = \"",
        "\"   v = \"",
        "\"wref = \"",
        "\"   w = \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-cmp_d.c": {
    "check_one": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"mpf_cmp_d wrong (from %s)\\n\"",
        "\"  got  %d\\n\"",
        "\"  want %d\\n\"",
        "\"  x\"",
        "\"  y %g\\n\"",
        "\"  x\"",
        "\"  y %g\\n\"",
        "\"  y\"",
        "\" %02X\"",
        "\"\\n\""
      ]
    },
    "check_infinity": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\""
      ]
    },
    "main": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-cmp_si.c": {
    "check_data": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"-1\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"-1\"",
        "\"-1\"",
        "\"1\"",
        "\"-1\"",
        "\"0\"",
        "\"-1\"",
        "\"-1\"",
        "\"1.5\"",
        "\"2\"",
        "\"1.5\"",
        "\"1\"",
        "\"0.5\"",
        "\"1\"",
        "\"-1.5\"",
        "\"-2\"",
        "\"-1.5\"",
        "\"-1\"",
        "\"-0.5\"",
        "\"-1\"",
        "\"0\"",
        "\"-0x80000000\"",
        "\"80000000\"",
        "\"-0x80000000\"",
        "\"80000001\"",
        "\"-0x80000000\"",
        "\"-80000000\"",
        "\"-0x80000000\"",
        "\"-80000001\"",
        "\"-0x80000000\"",
        "\"-FF0080000001\"",
        "\"-0x80000000\"",
        "\"0\"",
        "\"-0x8000000000000000\"",
        "\"8000000000000000\"",
        "\"-0x8000000000000000\"",
        "\"8000000000000001\"",
        "\"-0x8000000000000000\"",
        "\"-8000000000000000\"",
        "\"-0x8000000000000000\"",
        "\"-8000000000000000.1\"",
        "\"-0x8000000000000000\"",
        "\"-FF008000000000000001\"",
        "\"-0x8000000000000000\"",
        "\"0\"",
        "\"-0x876543210FEDCBA9876543210000000\"",
        "\"876543210FEDCBA9876543210000000\"",
        "\"-0x876543210FEDCBA9876543210000000\"",
        "\"876543210FEDCBA9876543210000001\"",
        "\"-0x876543210FEDCBA9876543210000000\"",
        "\"-876543210FEDCBA9876543210000000\"",
        "\"-0x876543210FEDCBA9876543210000000\"",
        "\"-876543210FEDCBA9876543210000000.1\"",
        "\"-0x876543210FEDCBA9876543210000000\"",
        "\"-FF00876543210FEDCBA9876543210000000\"",
        "\"-0x876543210FEDCBA9876543210000000\"",
        "\"mpf_cmp_si wrong on data[%d]\\n\"",
        "\"  a=\"",
        "\" (%s)\\n\"",
        "\"  b=%ld (%s)\\n\"",
        "\"  got=%d\\n\"",
        "\"  want=%d\\n\"",
        "\"mpf_cmp_z wrong on data[%d]\\n\"",
        "\"  a=\"",
        "\" (%s)\\n\"",
        "\"  b=%ld (%s)\\n\"",
        "\"  got=%d\\n\"",
        "\"  want=%d\\n\""
      ]
    },
    "main": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-conv.c": {
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": [
        "\"1.23456e1000\"",
        "\"1.23456e1000\"",
        "\"1.23456e+1000\"",
        "\"1.23456e+1000\"",
        "\"-0.%s@%ld\"",
        "\"0.%s@%ld\"",
        "\"ERROR after %d tests\\n\"",
        "\"base = %d\\n\"",
        "\"   x = \"",
        "\"   y = \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-div.c": {
    "check_one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": [
        "\"mpf_div\"",
        "\"  u\"",
        "\"  v\"",
        "\"  %s\\n\""
      ]
    },
    "check_rand": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"separate\"",
        "\"dst == u\"",
        "\"dst == v\""
      ]
    },
    "check_reuse_three": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    },
    "check_various": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": [
        "\"1/2^n+1, separate\""
      ]
    },
    "main": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-dm2exp.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": [
        "\"ERROR in mpf_div or mpf_div_2exp after %d tests\\n\"",
        "\"   u = \"",
        "\"   v = \"",
        "\"  w1 = \"",
        "\"  w2 = \"",
        "\"ERROR in mpf_mul_2exp after %d tests\\n\"",
        "\"   u = \"",
        "\"   v = \"",
        "\"  w1 = \"",
        "\"  w3 = \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-eq.c": {
    "check_data": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": [
        "\"check_data() wrong result at data[%d]\\n\"",
        "\"x   \"",
        "\"y   \"",
        "\"got         %d\\n\"",
        "\"got_swapped %d\\n\"",
        "\"want        %d\\n\""
      ]
    },
    "check_random": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "insert_random_low_zero_limbs": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    },
    "dump_abort": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": [
        "\"ERROR in test %ld\\n\"",
        "\"want %d got %d from mpf_eq\\n\"",
        "\"cmp_prec = %d\\n\"",
        "\"lshift1 = %d\\n\"",
        "\"lshift2 = %d\\n\"",
        "\"hibits = %d\\n\"",
        "\"\"",
        "\"\""
      ]
    },
    "hexdump": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": [
        "\"%0*MX\"",
        "\" \""
      ]
    },
    "main": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-fits.c": {
    "main": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        327,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"-1\"",
        "\"USHRT_MAX\"",
        "\"USHRT_MAX + 0.5\"",
        "\"USHRT_MAX + 1\"",
        "\"UINT_MAX\"",
        "\"UINT_MAX + 0.5\"",
        "\"UINT_MAX + 1\"",
        "\"ULONG_MAX\"",
        "\"ULONG_MAX + 0.5\"",
        "\"ULONG_MAX + 1\"",
        "\"SHRT_MAX\"",
        "\"SHRT_MAX + 0.5\"",
        "\"SHRT_MAX + 1\"",
        "\"INT_MAX\"",
        "\"INT_MAX + 0.5\"",
        "\"INT_MAX + 1\"",
        "\"LONG_MAX\"",
        "\"LONG_MAX + 0.5\"",
        "\"LONG_MAX + 1\"",
        "\"SHRT_MIN\"",
        "\"SHRT_MIN - 0.5\"",
        "\"SHRT_MIN - 1\"",
        "\"INT_MIN\"",
        "\"INT_MIN - 0.5\"",
        "\"INT_MIN - 1\"",
        "\"LONG_MIN\"",
        "\"LONG_MIN - 0.5\"",
        "\"LONG_MIN - 1\"",
        "\"0.5\"",
        "\"0.5\"",
        "\"-0.5\"",
        "\"-0.5\"",
        "\"-1.5\"",
        "\"-1.5\"",
        "\"1.000000000000000000000000000000000001\"",
        "\"1.000000000000000000000000000000000001 base 16\"",
        "\"1@1000\"",
        "\"1@1000 base 16\"",
        "\"2^(BITS_PER_ULONG+1) - 1\"",
        "\"- (2^(BITS_PER_ULONG+1) - 1)\"",
        "\"2^(BITS_PER_ULONG+5) - 1\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-get_d.c": {
    "test_denorms": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"should be one ulp from 1: %.16f\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-get_d_2exp.c": {
    "check_onebit": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"mpf_get_d_2exp wrong on 2**%ld\\n\"",
        "\"   f    \"",
        "\"   want \"",
        "\"   got  \"",
        "\"   want exp %ld\\n\"",
        "\"   got exp  %ld\\n\""
      ]
    },
    "check_round": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"mpf_get_d_2exp bad on 2**%lu-1\\n\"",
        "\"result out of range, expect 0.5 <= got < 1.0\\n\"",
        "\"   rnd_mode = %d\\n\"",
        "\"   data[i]  = %lu\\n\"",
        "\"   f    \"",
        "\"   got  \"",
        "\"   got exp  %ld\\n\""
      ]
    },
    "main": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-get_si.c": {
    "check_data": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"-1\"",
        "\"2\"",
        "\"-2\"",
        "\"12345\"",
        "\"-12345\"",
        "\"0.5\"",
        "\"-0.5\"",
        "\"1.1\"",
        "\"-1.1\"",
        "\"1.9\"",
        "\"-1.9\"",
        "\"1.000000000000000000000000000000000000000000000000001\"",
        "\"-1.000000000000000000000000000000000000000000000000001\"",
        "\"1000000000000000000000000000000000000000000000000001\"",
        "\"-1000000000000000000000000000000000000000000000000001\"",
        "\"mpf_get_si wrong at data[%d]\\n\"",
        "\"   f     \\\"%s\\\"\\n\"",
        "\"     dec \"",
        "\"\\n\"",
        "\"     hex \"",
        "\"\\n\"",
        "\"     size %ld\\n\"",
        "\"     exp  %ld\\n\"",
        "\"   got   %ld (0x%lX)\\n\"",
        "\"   want  %ld (0x%lX)\\n\""
      ]
    },
    "check_max": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"LONG_MAX\"",
        "\"LONG_MIN\""
      ]
    },
    "check_limbdata": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        208,
        1
      ],
      "strings": [
        "\"mpf_get_si wrong at limb data[%d]\\n\"",
        "\"  f\"",
        "\"  d\"",
        "\"  size %ld\\n\"",
        "\"  exp %ld\\n\"",
        "\"  got   %lu (0x%lX)\\n\"",
        "\"  want  %lu (0x%lX)\\n\""
      ]
    },
    "main": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-get_ui.c": {
    "check_limbdata": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": [
        "\"mpf_get_ui wrong at limb data[%d]\\n\"",
        "\"  f\"",
        "\"  d\"",
        "\"  size %ld\\n\"",
        "\"  exp %ld\\n\"",
        "\"  got   %lu (0x%lX)\\n\"",
        "\"  want  %lu (0x%lX)\\n\""
      ]
    },
    "main": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-gsprec.c": {
    "check_consistency": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"mpf_get_prec / mpf_set_prec inconsistent\\n\"",
        "\"   set %lu gives %lu, but then set %lu gives %lu\\n\""
      ]
    },
    "main": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-inp_str.c": {
    "check_data": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"abc\"",
        "\"0\"",
        "\"ghi\"",
        "\"0\"",
        "\"125\"",
        "\"125\"",
        "\"125e1\"",
        "\"1250\"",
        "\"12e+2\"",
        "\"1200\"",
        "\"125e-1\"",
        "\"12.5\"",
        "\"ff\"",
        "\"255\"",
        "\"-ff\"",
        "\"-255\"",
        "\"FF\"",
        "\"255\"",
        "\"-FF\"",
        "\"-255\"",
        "\"100\"",
        "\"256\"",
        "\"100@1\"",
        "\"4096\"",
        "\"100@10\"",
        "\"4722366482869645213696\"",
        "\"100@10\"",
        "\"281474976710656\"",
        "\"100@-1\"",
        "\"16\"",
        "\"10000000000000000@-10\"",
        "\"1\"",
        "\"10000000000@-10\"",
        "\"1\"",
        "\"z\"",
        "\"35\"",
        "\"Z\"",
        "\"35\"",
        "\"z@1\"",
        "\"1260\"",
        "\"Z@1\"",
        "\"1260\"",
        "\"0\"",
        "\"0\"",
        "\"w+\"",
        "\"mpf_inp_str nread wrong\\n\"",
        "\"  inp          \\\"%s\\\"\\n\"",
        "\"  base         %d\\n\"",
        "\"  pre          %d\\n\"",
        "\"  post         %d\\n\"",
        "\"  got_nread    %d\\n\"",
        "\"  ftell_nread  %ld\\n\"",
        "\"mpf_inp_str didn't read to EOF\\n\"",
        "\"  inp   \\\"%s\\\"\\n\"",
        "\"  base  %d\\n\"",
        "\"  pre   %d\\n\"",
        "\"  post  %d\\n\"",
        "\"  c     '%c' %#x\\n\"",
        "\"mpf_inp_str nread wrong\\n\"",
        "\"  inp         \\\"%s\\\"\\n\"",
        "\"  base        %d\\n\"",
        "\"  pre         %d\\n\"",
        "\"  post        %d\\n\"",
        "\"  got_nread   %d\\n\"",
        "\"  want_nread  %d\\n\"",
        "\"mpf_inp_str wrong result\\n\"",
        "\"  inp   \\\"%s\\\"\\n\"",
        "\"  base  %d\\n\"",
        "\"  got \"",
        "\"  want\""
      ]
    },
    "main": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        191,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-int_p.c": {
    "one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": [
        "\"mpf_integer_p got %d want %d\\n\"",
        "\" f\""
      ]
    },
    "all": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": [
        "\"0.5\"",
        "\"2.5\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-muldiv.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"ERROR in mpf_mul or mpf_div after %d tests\\n\"",
        "\"   u = \"",
        "\"   v = \"",
        "\"   x = \"",
        "\"   w = \"",
        "\"ERROR in mpf_div or mpf_div_ui after %d tests\\n\"",
        "\"   u = \"",
        "\"   v = \"",
        "\"   x = \"",
        "\"   w = \"",
        "\"ERROR in mpf_div or mpf_ui_div after %d tests\\n\"",
        "\"   u = \"",
        "\"   v = \"",
        "\"   x = \"",
        "\"   w = \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-mul_ui.c": {
    "check_one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"mpf_mul_ui\"",
        "\"  %s\\n\"",
        "\"  u\"",
        "\"  v %ld  0x%lX\\n\""
      ]
    },
    "check_rand": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": [
        "\"separate\"",
        "\"overlap src==dst\""
      ]
    },
    "check_various": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"0 * ULONG_MAX\"",
        "\"Wrong result from %s\\n\"",
        "\"u   \"",
        "\"got \"",
        "\"want\"",
        "\"1 * ULONG_MAX\""
      ]
    },
    "main": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-pow_ui.c": {
    "check_data": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-set.c": {
    "check_reuse": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "check_random": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": [
        "\"mpf_init_set wrong.\\n\"",
        "\"mpf_set wrong.\\n\""
      ]
    },
    "main": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-set_q.c": {
    "check_one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": [
        "\"mpf_set_q\"",
        "\"   q\""
      ]
    },
    "check_rand": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "check_various": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-set_si.c": {
    "check_data": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"mpf_set_si wrong on data[%d]\\n\"",
        "\"mpf_init_set_si wrong on data[%d]\\n\""
      ]
    },
    "main": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-set_ui.c": {
    "check_data": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"mpf_set_ui wrong on data[%d]\\n\"",
        "\"mpf_init_set_ui wrong on data[%d]\\n\""
      ]
    },
    "main": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-sqrt.c": {
    "check_rand1": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"ERROR after %d tests\\n\"",
        "\"   x = \"",
        "\"   y = \"",
        "\"  y2 = \"",
        "\"   rerr       = \"",
        "\"   limit_rerr = \"",
        "\"in hex:\\n\"",
        "\"   x  \"",
        "\"   y  \"",
        "\"   y2 \"",
        "\"   rerr      \"",
        "\"   limit_rerr\""
      ]
    },
    "check_rand2": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"mpf_sqrt wrong number of result limbs\\n\"",
        "\"  x\"",
        "\"  r\"",
        "\"  r_prec=%lu\\n\"",
        "\"  SIZ(r)  %ld\\n\"",
        "\"  PREC(r) %ld\\n\"",
        "\"mpf_sqrt result too big\\n\"",
        "\"  x\"",
        "\"  r_prec=%lu\\n\"",
        "\"  r\"",
        "\"  s\"",
        "\"mpf_sqrt result too small\\n\"",
        "\"  x\"",
        "\"  r_prec=%lu\\n\"",
        "\"  r+ulp\"",
        "\"  s\""
      ]
    },
    "main": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-sqrt_ui.c": {
    "check_rand": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": [
        "\"mpf_sqrt_ui wrong for special case:\\n\"",
        "\"  x=%lu\\n\"",
        "\"  r\"",
        "\"mpf_sqrt_ui result not enough result limbs\\n\"",
        "\"  x=%lu\\n\"",
        "\"  want prec=%lu\\n\"",
        "\"  r\"",
        "\"  r size %ld\\n\"",
        "\"  r prec %ld\\n\"",
        "\"mpf_sqrt_ui result too big\\n\"",
        "\"  x=%lu\\n\"",
        "\"  want prec=%lu\\n\"",
        "\"  r\"",
        "\"  s\"",
        "\"mpf_sqrt_ui result too small\\n\"",
        "\"  x=%lu\\n\"",
        "\"  want prec=%lu\\n\"",
        "\"  r+ulp\"",
        "\"  s\""
      ]
    },
    "main": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-sub.c": {
    "check_rand": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"ERROR after %d tests\\n\"",
        "\"   u = \"",
        "\"   v = \"",
        "\"wref = \"",
        "\"   w = \""
      ]
    },
    "check_data": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        274,
        1
      ],
      "strings": [
        "\"mpf_sub\"",
        "\"check_data() wrong result at data[%d] (operands%s swapped)\\n\"",
        "\"\"",
        "\" not\"",
        "\"x   \"",
        "\"y   \"",
        "\"got \"",
        "\"want\"",
        "\"mpf_ui_sub\"",
        "\"check_data() wrong result at data[%d] (operands%s swapped)\\n\"",
        "\"\"",
        "\" not\"",
        "\"x   \"",
        "\"y   \"",
        "\"got \"",
        "\"want\"",
        "\"mpf_sub_ui\"",
        "\"check_data() wrong result at data[%d] (operands%s swapped)\\n\"",
        "\"\"",
        "\" not\"",
        "\"x   \"",
        "\"y   \"",
        "\"got \"",
        "\"want\""
      ]
    },
    "main": {
      "start_point": [
        277,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-trunc.c": {
    "check_print": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": [
        "\"src \"",
        "\"got \"",
        "\"want\"",
        "\"got  size=%d exp=%ld\\n\"",
        "\"     limbs=\"",
        "\"want size=%d exp=%ld\\n\"",
        "\"     limbs=\""
      ]
    },
    "check_one": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": [
        "\"mpf_trunc\"",
        "\"mpf_ceil\"",
        "\"mpf_floor\"",
        "\"mpf_trunc\"",
        "\"mpf_ceil\"",
        "\"mpf_floor\""
      ]
    },
    "check_all": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "check_various": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpf/t-ui_div.c": {
    "check_one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"mpf_ui_div\"",
        "\"  u 0x%lX  (%lu)\\n\"",
        "\"  v\"",
        "\"  %s\\n\""
      ]
    },
    "check_rand": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"separate\"",
        "\"overlap src==dst\""
      ]
    },
    "check_various": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": [
        "\"1/2^n+1, separate\""
      ]
    },
    "main": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/logic.c": {
    "check_one": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"ERROR in mpn_%s\\n\"",
        "\"a: \"",
        "\"b: \"",
        "\"r:   \"",
        "\"ref: \""
      ]
    },
    "main": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"and_n\"",
        "\"ior_n\"",
        "\"xor_n\"",
        "\"andn_n\"",
        "\"iorn_n\"",
        "\"nand_n\"",
        "\"nior_n\"",
        "\"xnor_n\"",
        "\"com\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-aors_1.c": {
    "verify": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": [
        "\"Overwrite at %s i=%d\\n\"",
        "\"Wrong at %s i=%d size=%ld\\n\"",
        "\"   src\"",
        "\"     n\"",
        "\"   got\"",
        "\"  want\"",
        "\" got c\"",
        "\"want c\""
      ]
    },
    "check_add_1": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": [
        "\"check_add_1 (separate)\"",
        "\"check_add_1 (in-place)\"",
        "\"check_sec_add_1 (separate)\"",
        "\"check_sec_add_1 (in-place)\"",
        "\"check_add_1 (separate, const 1)\"",
        "\"check_add_1 (in-place, const 1)\"",
        "\"check_sec_add_1 (separate, const 1)\"",
        "\"check_sec_add_1 (in-place, const 1)\"",
        "\"check_add_1 (function, separate)\"",
        "\"check_add_1 (function, in-place)\""
      ]
    },
    "check_sub_1": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": [
        "\"check_sub_1 (separate)\"",
        "\"check_sub_1 (in-place)\"",
        "\"check_sec_sub_1 (separate)\"",
        "\"check_sec_sub_1 (in-place)\"",
        "\"check_sub_1 (separate, const 1)\"",
        "\"check_sub_1 (in-place, const 1)\"",
        "\"check_sec_sub_1 (separate, const 1)\"",
        "\"check_sec_sub_1 (in-place, const 1)\"",
        "\"check_sub_1 (function, separate)\"",
        "\"check_sub_1 (function, in-place)\""
      ]
    },
    "fudge": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-asmtype.c": {
    "main": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"Wrong result from mpn_add_n\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-bdiv.c": {
    "dumpy": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"%0*lx\"",
        "\" \"",
        "\"... \"",
        "\"%0*lx\"",
        "\"\"",
        "\" \"",
        "\"%0*lx\"",
        "\"\"",
        "\" \"",
        "\"\""
      ]
    },
    "check_one": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"\\r*******************************************************************************\\n\"",
        "\"%s inconsistent in test %lu\\n\"",
        "\"N=   \"",
        "\"D=   \"",
        "\"Q=   \"",
        "\"R=   \"",
        "\"Rb=  %d, Cy=%d\\n\"",
        "\"T=   \"",
        "\"nn = %ld, dn = %ld, qn = %ld\"",
        "\"\\n*******************************************************************************\\n\""
      ]
    },
    "random_word": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        367,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"mpn_sbpi1_bdiv_qr\"",
        "\"mpn_sbpi1_bdiv_q\"",
        "\"mpn_dcpi1_bdiv_qr\"",
        "\"mpn_dcpi1_bdiv_q\"",
        "\"mpn_bdiv_qr\"",
        "\"mpn_mu_bdiv_qr\"",
        "\"mpn_mu_bdiv_q\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-broot.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"mpn_broot returned bad result: %u limbs\\n\"",
        "\"k   = %Mx\\n\"",
        "\"a   = %Nx\\n\"",
        "\"r   = %Nx\\n\"",
        "\"r^k = %Nx\\n\"",
        "\"mpn_broot returned bad result: %u limbs\\n\"",
        "\"k   = %Mx\\n\"",
        "\"a   = %Nx\\n\"",
        "\"r   = %Nx\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-brootinv.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"mpn_brootinv returned bad result: %u limbs\\n\"",
        "\"k     = %Mx\\n\"",
        "\"a     = %Nx\\n\"",
        "\"r     = %Nx\\n\"",
        "\"r^n   = %Nx\\n\"",
        "\"a r^n = %Nx\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-div.c": {
    "dumpy": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"%0*lx\"",
        "\" \"",
        "\"... \"",
        "\"%0*lx\"",
        "\"\"",
        "\" \"",
        "\"%0*lx\"",
        "\"\"",
        "\" \"",
        "\"\""
      ]
    },
    "check_one": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"q too large\"",
        "\"Q*D\"",
        "\"\\r*******************************************************************************\\n\"",
        "\"%s failed test %ld: %s\\n\"",
        "\"N=    \"",
        "\"D=    \"",
        "\"Q=    \"",
        "\"R=    \"",
        "\"%5s=\"",
        "\"nn = %ld, dn = %ld, qn = %ld\\n\"",
        "\"N-Q*D\"",
        "\"q too small\"",
        "\"r incorrect\""
      ]
    },
    "main": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        504,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"mpn_sbpi1_div_qr\"",
        "\"mpn_sbpi1_divappr_q\"",
        "\"mpn_sbpi1_div_q\"",
        "\"mpn_sec_div_qr (unnorm)\"",
        "\"mpn_sec_div_r (unnorm)\"",
        "\"mpn_sec_div_qr (norm)\"",
        "\"mpn_sec_div_r (norm)\"",
        "\"mpn_dcpi1_div_qr\"",
        "\"mpn_dcpi1_divappr_q\"",
        "\"mpn_dcpi1_div_q\"",
        "\"mpn_mu_div_qr\"",
        "\"mpn_mu_divappr_q\"",
        "\"mpn_mu_div_q\"",
        "\"mpn_div_q\"",
        "\"mpn_divrem_2\"",
        "\"mpn_div_qr_2\"",
        "\"mpn_div_qr_1\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-divrem_1.c": {
    "check_data": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"mpn_divrem_1 wrong at data[%d]\\n\"",
        "\"  n\"",
        "\"  nsize=%ld\\n\"",
        "\"  d\"",
        "\"  qxn=%ld\\n\"",
        "\"  want q\"",
        "\"  got  q\"",
        "\"  want r\"",
        "\"  got  r\"",
        "\"mpn_preinv divrem_1 wrong at data[%d]\\n\"",
        "\"  shift=%d\\n\"",
        "\"  dinv\""
      ]
    },
    "main": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-fat.c": {
    "check_functions": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        278,
        1
      ],
      "strings": []
    },
    "check_thresholds": {
      "start_point": [
        282,
        0
      ],
      "end_point": [
        295,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        298,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-get_d.c": {
    "check_onebit": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": [
        "\"mpn_get_d wrong on 2^n\\n\"",
        "\"   bit      %ld\\n\"",
        "\"   exp      %ld\\n\"",
        "\"   want_bit %ld\\n\"",
        "\"   sign     %ld\\n\"",
        "\"   n        \"",
        "\"   nsize    %ld\\n\"",
        "\"   want     \"",
        "\"   got      \""
      ]
    },
    "check_twobit": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"mpn_get_d wrong on 2^%d + 1\\n\"",
        "\"   sign     %ld\\n\"",
        "\"   n        \"",
        "\"   nsize    %ld\\n\"",
        "\"   want     \"",
        "\"   got      \""
      ]
    },
    "check_underflow": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        212,
        1
      ],
      "strings": [
        "\"mpn_get_d wrong, didn't get 0.0 on underflow\\n\"",
        "\"  nsize    %ld\\n\"",
        "\"  exp      %ld\\n\"",
        "\"  sign     %ld\\n\"",
        "\"  got      \"",
        "\"Warning, underflow to zero tests skipped due to SIGFPE (exp=%ld)\\n\""
      ]
    },
    "check_inf": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": [
        "\"mpn_get_d wrong, didn't get infinity\\n\"",
        "\"  nsize    %ld\\n\"",
        "\"  exp      %ld\\n\"",
        "\"  sign     %ld\\n\"",
        "\"  got      \"",
        "\"  got sign %ld\\n\"",
        "\"mpn_get_d wrong sign on infinity\\n\""
      ]
    },
    "check_ieee_denorm": {
      "start_point": [
        265,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": [
        "\"mpn_get_d wrong on denorm\\n\"",
        "\"  n=1\\n\"",
        "\"  exp   %ld\\n\"",
        "\"  sign  %ld\\n\"",
        "\"  got   \"",
        "\"  want  \"",
        "\"Warning, IEEE denorm tests skipped due to SIGFPE (exp=%ld)\\n\""
      ]
    },
    "check_ieee_overflow": {
      "start_point": [
        315,
        0
      ],
      "end_point": [
        360,
        1
      ],
      "strings": [
        "\"mpn_get_d wrong on overflow\\n\"",
        "\"  n=1\\n\"",
        "\"  exp   %ld\\n\"",
        "\"  sign  %ld\\n\"",
        "\"  got   \"",
        "\"  want  \"",
        "\"Warning, IEEE overflow tests skipped due to SIGFPE (exp=%ld)\\n\""
      ]
    },
    "check_0x81c25113": {
      "start_point": [
        367,
        0
      ],
      "end_point": [
        397,
        1
      ],
      "strings": [
        "\"mpn_get_d wrong on 2176995603 (0x81c25113)\\n\"",
        "\"  nsize  %ld\\n\"",
        "\"  exp    %ld\\n\"",
        "\"  got    \"",
        "\"  want   \""
      ]
    },
    "check_rand": {
      "start_point": [
        400,
        0
      ],
      "end_point": [
        475,
        1
      ],
      "strings": [
        "\"mpn_get_d wrong on random data\\n\"",
        "\"   sign     %ld\\n\"",
        "\"   n        \"",
        "\"   nsize    %ld\\n\"",
        "\"   exp      %ld\\n\"",
        "\"   want     \"",
        "\"   got      \""
      ]
    },
    "main": {
      "start_point": [
        478,
        0
      ],
      "end_point": [
        497,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-hgcd.c": {
    "main": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": [
        "\"ERROR in test %d\\n\"",
        "\"Bad return code from hgcd\\n\"",
        "\"op1=\"",
        "\"op2=\"",
        "\"expected: %d\\n\"",
        "\"hgcd:     %d\\n\""
      ]
    },
    "debug_mp": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    },
    "one_test": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        276,
        1
      ],
      "strings": [
        "\"one_test: i = %d asize = %d, bsize = %d\\n\"",
        "\"one_test: i = %d\\n\"",
        "\"  a = %Zx\\n\"",
        "\"  b = %Zx\\n\"",
        "\"ERROR in test %d\\n\"",
        "\"Different return value from hgcd and hgcd_ref\\n\"",
        "\"op1=\"",
        "\"op2=\"",
        "\"hgcd_ref: %ld\\n\"",
        "\"mpn_hgcd: %ld\\n\"",
        "\"ERROR in test %d\\n\"",
        "\"mpn_hgcd and hgcd_ref returned different values\\n\"",
        "\"op1=\"",
        "\"op2=\""
      ]
    },
    "hgcd_ref_init": {
      "start_point": [
        278,
        0
      ],
      "end_point": [
        288,
        1
      ],
      "strings": []
    },
    "hgcd_ref_clear": {
      "start_point": [
        290,
        0
      ],
      "end_point": [
        300,
        1
      ],
      "strings": []
    },
    "sdiv_qr": {
      "start_point": [
        303,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": []
    },
    "hgcd_ref": {
      "start_point": [
        316,
        0
      ],
      "end_point": [
        379,
        1
      ],
      "strings": []
    },
    "mpz_mpn_equal": {
      "start_point": [
        381,
        0
      ],
      "end_point": [
        389,
        1
      ],
      "strings": []
    },
    "hgcd_ref_equal": {
      "start_point": [
        391,
        0
      ],
      "end_point": [
        406,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-hgcd_appr.c": {
    "main": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": [
        "\"-v\"",
        "\"Invalid argument.\\n\""
      ]
    },
    "debug_mp": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "one_test": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": [
        "\"one_test: i = %d asize = %d, bsize = %d\\n\"",
        "\"one_test: i = %d\\n\"",
        "\"  a = %Zx\\n\"",
        "\"  b = %Zx\\n\"",
        "\"ERROR in test %d\\n\"",
        "\"scratch space overwritten!\\n\"",
        "\"before init_tp: %Mx\\n\"",
        "\"expected: %Mx\\n\"",
        "\"after init_tp: %Mx\\n\"",
        "\"expected: %Mx\\n\"",
        "\"before tp: %Mx\\n\"",
        "\"expected: %Mx\\n\"",
        "\"after tp: %Mx\\n\"",
        "\"expected: %Mx\\n\"",
        "\"ERROR in test %d\\n\"",
        "\"Invalid results for hgcd and hgcd_ref\\n\"",
        "\"op1=\"",
        "\"op2=\"",
        "\"hgcd_ref: %ld\\n\"",
        "\"mpn_hgcd_appr: %ld\\n\""
      ]
    },
    "hgcd_ref_init": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": []
    },
    "hgcd_ref_clear": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": []
    },
    "sdiv_qr": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        319,
        1
      ],
      "strings": []
    },
    "hgcd_ref": {
      "start_point": [
        321,
        0
      ],
      "end_point": [
        380,
        1
      ],
      "strings": []
    },
    "hgcd_ref_equal": {
      "start_point": [
        382,
        0
      ],
      "end_point": [
        397,
        1
      ],
      "strings": []
    },
    "hgcd_appr_valid_p": {
      "start_point": [
        399,
        0
      ],
      "end_point": [
        563,
        1
      ],
      "strings": [
        "\"mpn_hgcd_appr returned 1 when no reduction possible.\\n\"",
        "\"ref_r0 too small!!!: \"",
        "\"ref_r1 too small!!!: \"",
        "\"ref |r0 - r1| too large!!!: \"",
        "\"appr_r0 too small: \"",
        "\"appr_r1 too small: \"",
        "\"|r0 - r1| too small: \"",
        "\"n = %u: sbits = %u: ref #(r0-r1): %u, appr #(r0-r1): %u excess: %d, margin: %u\\n\"",
        "\"appr |r0 - r1| much larger than minimal (by %u bits, margin = %u bits)\\n\"",
        "\"appr_r0: \"",
        "\"ref_r0: \"",
        "\"appr_r1: \"",
        "\"ref_r1: \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-instrument.c": {
    "__cyg_profile_func_enter": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": [
        "\"%24s %p %p\\n\"",
        "\"__cyg_profile_func_enter: oops, call stack full, from %s\\n\""
      ]
    },
    "__cyg_profile_func_exit": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"__cyg_profile_func_exit: call stack empty, from %s\\n\"",
        "\"__cyg_profile_func_exit: unbalanced this_fn/call_site from %s\\n\"",
        "\"  this_fn got  %p\\n\"",
        "\"          want %p\\n\"",
        "\"  call_site got  %p\\n\"",
        "\"            want %p\\n\""
      ]
    },
    "pre": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "post": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": [
        "\"did not reach __cyg_profile_func_enter from %s\\n\"",
        "\"unbalance enter/exit calls from %s\\n\"",
        "\"  ncall     %d\\n\"",
        "\"  old_ncall %d\\n\""
      ]
    },
    "check": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        392,
        1
      ],
      "strings": [
        "\"mpn_add_n\"",
        "\"mpn_add_nc\"",
        "\"mpn_addlsh1_n\"",
        "\"mpn_and_n\"",
        "\"mpn_andn_n\"",
        "\"mpn_addmul_1\"",
        "\"mpn_addmul_1c\"",
        "\"mpn_com\"",
        "\"mpn_copyd\"",
        "\"mpn_copyi\"",
        "\"mpn_divexact_1\"",
        "\"mpn_divexact_by3c\"",
        "\"mpn_divrem_1\"",
        "\"mpn_divrem_1c\"",
        "\"mpn_gcd_1\"",
        "\"mpn_hamdist\"",
        "\"mpn_ior_n\"",
        "\"mpn_iorn_n\"",
        "\"mpn_lshift\"",
        "\"mpn_mod_1\"",
        "\"mpn_mod_1c\"",
        "\"mpn_mod_34lsub1\"",
        "\"mpn_modexact_1_odd\"",
        "\"mpn_modexact_1c_odd\"",
        "\"mpn_mul_1\"",
        "\"mpn_mul_1c\"",
        "\"mpn_mul_2\"",
        "\"mpn_mul_basecase\"",
        "\"mpn_nand_n\"",
        "\"mpn_nior_n\"",
        "\"mpn_popcount\"",
        "\"mpn_preinv_mod_1\"",
        "\"mpn_preinv_divrem_1\"",
        "\"mpn_rsh1add_n\"",
        "\"mpn_rsh1sub_n\"",
        "\"mpn_rshift\"",
        "\"mpn_sqr_basecase\"",
        "\"mpn_submul_1\"",
        "\"mpn_submul_1c\"",
        "\"mpn_sub_n\"",
        "\"mpn_sub_nc\"",
        "\"mpn_sublsh1_n\"",
        "\"mpn_udiv_qrnnd\"",
        "\"mpn_udiv_qrnnd_r\"",
        "\"mpn_umul_ppmm\"",
        "\"mpn_umul_ppmm_r\"",
        "\"mpn_xor_n\"",
        "\"mpn_xnor_n\""
      ]
    },
    "main": [
      {
        "start_point": [
          395,
          0
        ],
        "end_point": [
          404,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          409,
          0
        ],
        "end_point": [
          413,
          1
        ],
        "strings": []
      }
    ]
  },
  "gmp/gmp-6.1.2/tests/mpn/t-invert.c": {
    "invert_valid": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"ERROR in test %d, n = %d\\n\"",
        "\"before ip:\"",
        "\"keep:   \"",
        "\"after ip:\"",
        "\"keep:   \"",
        "\"before scratch:\"",
        "\"keep:   \"",
        "\"after scratch:\"",
        "\"keep:   \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-iord_u.c": {
    "check_one": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"Wrong at %s i=%d\\n\"",
        "\"  src\"",
        "\"    n\"",
        "\"  got\"",
        "\" want\""
      ]
    },
    "check_incr_data": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": [
        "\"check_incr (general)\"",
        "\"check_incr (const 1)\""
      ]
    },
    "check_decr_data": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": [
        "\"check_decr_data\"",
        "\"check_decr (const 1)\""
      ]
    },
    "main": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-matrix22.c": {
    "matrix_init": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "matrix_clear": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "matrix_copy": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "matrix_equal_p": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "matrix_random": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "ref_matrix22_mul": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "one_test": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": [
        "\"ERROR in test %d\\n\"",
        "\"A = (%Nx, %Nx\\n      %Nx, %Nx)\\n\"",
        "\"B = (%Nx, %Nx\\n      %Nx, %Nx)\\n\"",
        "\"R = (%Nx, %Nx (expected)\\n      %Nx, %Nx)\\n\"",
        "\"P = (%Nx, %Nx (incorrect)\\n      %Nx, %Nx)\\n\""
      ]
    },
    "main": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-minvert.c": {
    "mpz_to_mpn": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "mpz_eq_mpn": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "bit_size": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"test %d: Not invertible!\\n\"",
        "\"m = %Zd\\n\"",
        "\"a = %Zd\\n\"",
        "\"Test %d failed.\\n\"",
        "\"m = %Zd\\n\"",
        "\"a = %Zd\\n\"",
        "\"ref ret: %d\\n\"",
        "\"got ret: %d\\n\"",
        "\"ref: %Zd\\n\"",
        "\"got: %Nd\\n\"",
        "\"scratch[itch] changed.\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-mod_1.c": {
    "check_one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": [
        "\"mpn_mod_1_1p failed\\n\"",
        "\"mpn_mod_1s_2p failed\\n\"",
        "\"mpn_mod_1s_3p failed\\n\"",
        "\"mpn_mod_1s_4p failed\\n\"",
        "\"mpn_mod_1 failed\\n\"",
        "\"an = %d, a: \"",
        "\"b           : \"",
        "\"r (expected): \"",
        "\"r (bad)     : \""
      ]
    },
    "main": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-mp_bases.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": [
        "\"MP_BASES_CHARS_PER_LIMB_10 wrong\\n\"",
        "\"MP_BASES_BIG_BASE_10 wrong\\n\"",
        "\"MP_BASES_BIG_BASE_INVERTED_10 wrong\\n\"",
        "\"MP_BASES_NORMALIZATION_STEPS_10 wrong\\n\"",
        "\"mp_bases[%d].chars_per_limb wrong\\n\"",
        "\"  got  %d\\n\"",
        "\"  want %d\\n\"",
        "\"mp_bases[%d].big_base (log2 of base) wrong\\n\"",
        "\"mp_bases[%d].big_base wrong\\n\"",
        "\"mp_bases[%d].big_base_inverted wrong\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-mul.c": {
    "isqrt": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"ERROR, an = %d, bn = %d, rn = %d\\n\"",
        "\"a: \"",
        "\"b: \"",
        "\"r:   \"",
        "\"ref: \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-mullo.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"ERROR in test %d, n = %d\"",
        "\"before pp:\"",
        "\"keep:   \"",
        "\"after pp:\"",
        "\"keep:   \"",
        "\"before scratch:\"",
        "\"keep:   \"",
        "\"after scratch:\"",
        "\"keep:   \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-mulmid.c": {
    "main": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"ERROR in test %d, an = %d, bn = %d, rn = %d\\n\"",
        "\"a: \"",
        "\"b: \"",
        "\"r:   \"",
        "\"ref: \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-mulmod_bnm1.c": {
    "ref_mulmod_bnm1": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"ERROR in test %d, an = %d, bn = %d, n = %d\\n\"",
        "\"before pp:\"",
        "\"keep:   \"",
        "\"after pp:\"",
        "\"keep:   \"",
        "\"before scratch:\"",
        "\"keep:   \"",
        "\"after scratch:\"",
        "\"keep:   \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-perfsqr.c": {
    "check_mod_2": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"Wrong generated data\\n\"",
        "\"  d=%u\\n\"",
        "\"  r=%u\\n\"",
        "\"  idx=%u\\n\"",
        "\"  got  %d\\n\"",
        "\"  want %d\\n\""
      ]
    },
    "check_mod": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "check_pp": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-scan.c": {
    "check": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"mpn_scan1\\n\"",
        "\"  i     %lu\\n\"",
        "\"  got   %lu\\n\"",
        "\"  want  %lu\\n\"",
        "\"  x    \"",
        "\"mpn_scan0\\n\"",
        "\"  i     %lu\\n\"",
        "\"  got   %lu\\n\"",
        "\"  want  %lu\\n\"",
        "\"  x    \""
      ]
    },
    "check_twobits": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "check_twobits_exhaustive": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "check_rand": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-sizeinbase.c": {
    "main": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"ERROR in test %d, base = %d, exp = %d, res = %d\\n\"",
        "\"ERROR in -1 test %d, base = %d, exp = %d, res = %d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-sqrlo.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"ERROR in test %d, n = %d\"",
        "\"before pp:\"",
        "\"keep:   \"",
        "\"after pp:\"",
        "\"keep:   \"",
        "\"before scratch:\"",
        "\"keep:   \"",
        "\"after scratch:\"",
        "\"keep:   \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-sqrmod_bnm1.c": {
    "ref_sqrmod_bnm1": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"ERROR in test %d, an = %d, n = %d\\n\"",
        "\"before pp:\"",
        "\"keep:   \"",
        "\"after pp:\"",
        "\"keep:   \"",
        "\"before scratch:\"",
        "\"keep:   \"",
        "\"after scratch:\"",
        "\"keep:   \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/t-toom2-sqr.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom22.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom3-sqr.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom32.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom33.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom4-sqr.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom42.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom43.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom44.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom52.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom53.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom54.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom6-sqr.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom62.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom63.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom6h.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom8-sqr.c": {},
  "gmp/gmp-6.1.2/tests/mpn/t-toom8h.c": {},
  "gmp/gmp-6.1.2/tests/mpn/toom-shared.h": {
    "main": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"ERROR in test %d, an = %d, bn = %d\\n\"",
        "\"before pp:\"",
        "\"keep:   \"",
        "\"after pp:\"",
        "\"keep:   \"",
        "\"before scratch:\"",
        "\"keep:   \"",
        "\"after scratch:\"",
        "\"keep:   \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpn/toom-sqr-shared.h": {
    "main": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\"",
        "\"ERROR in test %d, an = %d\\n\"",
        "\"before pp:\"",
        "\"keep:   \"",
        "\"after pp:\"",
        "\"keep:   \"",
        "\"before scratch:\"",
        "\"keep:   \"",
        "\"after scratch:\"",
        "\"keep:   \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/io.c": {
    "debug_mp": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": [
        "\"w+\"",
        "\"mpq_out_str write error\\n\"",
        "\"mpq_inp_str stream read error\\n\"",
        "\"mpq_inp_str data conversion error\\n\"",
        "\"mpq_inp_str nread doesn't match ftell\\n\"",
        "\"  nread  %lu\\n\"",
        "\"  ftell  %ld\\n\"",
        "\"ERROR\\n\"",
        "\"op1  = \"",
        "\"op2  = \"",
        "\"base = %d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/reuse.c": {
    "main": [
      {
        "start_point": [
          34,
          0
        ],
        "end_point": [
          39,
          1
        ],
        "strings": [
          "\"Test suppressed for windows DLL\\n\""
        ]
      },
      {
        "start_point": [
          86,
          0
        ],
        "end_point": [
          235,
          1
        ],
        "strings": []
      }
    ],
    "dump_abort": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": [
        "\"failure in %s:\\n\"",
        "\"  res1  \"",
        "\"  res2  \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-aors.c": {
    "check_all": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": [
        "\"mpq_add wrong\\n\"",
        "\"  x   \"",
        "\"  y   \"",
        "\"  got \"",
        "\"  want\"",
        "\"mpq_sub wrong\\n\"",
        "\"  x   \"",
        "\"  y   \"",
        "\"  got \"",
        "\"  want\""
      ]
    },
    "check_data": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0\"",
        "\"1/2\"",
        "\"1/2\"",
        "\"1\"",
        "\"0\"",
        "\"5/6\"",
        "\"14/15\"",
        "\"53/30\"",
        "\"-1/10\""
      ]
    },
    "check_rand": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-cmp.c": {
    "ref_mpq_cmp": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-cmp_si.c": {
    "check_data": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"-1\"",
        "\"-1\"",
        "\"-1\"",
        "\"123\"",
        "\"124\"",
        "\"122\"",
        "\"-123\"",
        "\"-124\"",
        "\"-122\"",
        "\"123\"",
        "\"124\"",
        "\"122\"",
        "\"-123\"",
        "\"-124\"",
        "\"-122\"",
        "\"5/7\"",
        "\"5/7\"",
        "\"-5/7\"",
        "\"-5/7\"",
        "\"mpq_cmp_si wrong\\n\"",
        "\"  q\"",
        "\"  n=%ld\\n\"",
        "\"  d=%lu\\n\"",
        "\"  got=%d\\n\"",
        "\"  want=%d\\n\"",
        "\"mpq_cmp_si wrong\\n\""
      ]
    },
    "main": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-cmp_ui.c": {
    "ref_mpq_cmp_ui": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-cmp_z.c": {
    "ref_mpq_cmp_z": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "sizes_test": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\"i=%i, j=%i, k=%i, m=%i, s=%i\\n; ccref= %i, cc= %i\\n\""
      ]
    },
    "main": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-equal.c": {
    "check_one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": [
        "\"mpq_equal got %d want %d\\n\"",
        "\"x\"",
        "\"y\""
      ]
    },
    "check_all": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "check_various": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-get_d.c": {
    "check_monotonic": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"\\nERROR (test %d/%d): bad mpq_get_d results\\n\"",
        "\"last: %.16g\\n\"",
        "\" new: %.16g\\n\"",
        "\"ERROR (test %d/%d): bad mpq_set_d results\\n\"",
        "\"last: %.16g\\n\"",
        "\" new: %.16g\\n\""
      ]
    },
    "my_ldexp": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "check_random": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        212,
        1
      ],
      "strings": [
        "\"ERROR (check_random test %d): bad mpq_set_d results\\n\"",
        "\"%.16g\\n\"",
        "\"%Qd\\n\""
      ]
    },
    "dump": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": [
        "\"/\"",
        "\"\\n\""
      ]
    },
    "check_onebit": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": [
        "\"mpq_get_d wrong on %s2**%ld\\n\"",
        "\"-\"",
        "\"\"",
        "\"   q    \"",
        "\"   want \"",
        "\"   got  \""
      ]
    },
    "main": {
      "start_point": [
        283,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-get_str.c": {
    "check_one": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": [
        "\"mpq_get_str size bigger than should be (passing NULL)\\n\"",
        "\"  base %d\\n\"",
        "\"  got  size %lu \\\"%s\\\"\\n\"",
        "\"  want size %lu\\n\"",
        "\"mpq_get_str wrong (passing NULL)\\n\"",
        "\"  base %d\\n\"",
        "\"  got  \\\"%s\\\"\\n\"",
        "\"  want \\\"%s\\\"\\n\"",
        "\"  q\"",
        "\"mpq_get_str wrong return value (passing non-NULL)\\n\"",
        "\"  base %d\\n\"",
        "\"  got  %p\\n\"",
        "\"  want %p\\n\"",
        "\"mpq_get_str wrong (passing non-NULL)\\n\"",
        "\"  base %d\\n\"",
        "\"  got  \\\"%s\\\"\\n\"",
        "\"  want \\\"%s\\\"\\n\""
      ]
    },
    "check_all": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "check_data": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"ffffffff\"",
        "\"1\"",
        "\"ffffffff\"",
        "\"ffffffffffffffff\"",
        "\"1\"",
        "\"ffffffffffffffff\"",
        "\"1\"",
        "\"ffffffff\"",
        "\"1/ffffffff\"",
        "\"1\"",
        "\"ffffffffffffffff\"",
        "\"1/ffffffffffffffff\"",
        "\"1\"",
        "\"10000000000000003\"",
        "\"1/10000000000000003\"",
        "\"12345678901234567890\"",
        "\"9876543210987654323\"",
        "\"12345678901234567890/9876543210987654323\""
      ]
    },
    "main": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-inp_str.c": {
    "check_data": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"0/1\"",
        "\"0\"",
        "\"0/\"",
        "\"0\"",
        "\"/123\"",
        "\"0\"",
        "\"blah\"",
        "\"0\"",
        "\"123/blah\"",
        "\"0\"",
        "\"5 /8\"",
        "\"5\"",
        "\"5/ 8\"",
        "\"0\"",
        "\"ff\"",
        "\"255\"",
        "\"-ff\"",
        "\"-255\"",
        "\"FF\"",
        "\"255\"",
        "\"-FF\"",
        "\"-255\"",
        "\"z\"",
        "\"35\"",
        "\"Z\"",
        "\"35\"",
        "\"0x0\"",
        "\"0\"",
        "\"0x10\"",
        "\"16\"",
        "\"-0x0\"",
        "\"0\"",
        "\"-0x10\"",
        "\"-16\"",
        "\"-0x10/5\"",
        "\"-16/5\"",
        "\"00\"",
        "\"0\"",
        "\"010\"",
        "\"8\"",
        "\"-00\"",
        "\"0\"",
        "\"-010\"",
        "\"-8\"",
        "\"w+\"",
        "\"mpq_inp_str nread wrong\\n\"",
        "\"  inp          \\\"%s\\\"\\n\"",
        "\"  base         %d\\n\"",
        "\"  got_nread    %d\\n\"",
        "\"  ftell_nread  %ld\\n\"",
        "\"mpq_inp_str didn't read to EOF\\n\"",
        "\"  inp         \\\"%s\\\"\\n\"",
        "\"  base        %d\\n\"",
        "\"  c '%c' %#x\\n\"",
        "\"mpq_inp_str nread wrong\\n\"",
        "\"  inp         \\\"%s\\\"\\n\"",
        "\"  base        %d\\n\"",
        "\"  got_nread   %d\\n\"",
        "\"  want_nread  %d\\n\"",
        "\"mpq_inp_str wrong result\\n\"",
        "\"  inp   \\\"%s\\\"\\n\"",
        "\"  base  %d\\n\"",
        "\"  got \"",
        "\"  want\""
      ]
    },
    "main": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-inv.c": {
    "main": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"-420000000000000000000000\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-md_2exp.c": {
    "check_random": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": [
        "\"mpq_mul_2exp wrong on random\\n\"",
        "\"mpq_mul_2exp or mpq_div_2exp wrong on random\\n\""
      ]
    },
    "main": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"4\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"8\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x100000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x200000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x8000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x10000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x20000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x800000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x1000000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x2000000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000000000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x100000000000000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x200000000000000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x40000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x80000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x100000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x4000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x8000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x10000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x400000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x800000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x1000000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x40000000000000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x80000000000000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"0x100000000000000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"1\"",
        "\"2\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"2\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"4\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"0x80000000\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"0x100000000\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"0x200000000\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"0x8000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"0x10000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"0x20000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"0x800000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"0x1000000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"0x2000000000000000000000000\"",
        "\"1\"",
        "\"1\"",
        "\"0x100000000\"",
        "\"1\"",
        "\"0x80000000\"",
        "\"1\"",
        "\"0x100000000\"",
        "\"1\"",
        "\"0x40000000\"",
        "\"1\"",
        "\"0x100000000\"",
        "\"1\"",
        "\"0x20000000\"",
        "\"1\"",
        "\"0x10000000000000000\"",
        "\"1\"",
        "\"0x8000000000000000\"",
        "\"1\"",
        "\"0x10000000000000000\"",
        "\"1\"",
        "\"0x4000000000000000\"",
        "\"1\"",
        "\"0x10000000000000000\"",
        "\"1\"",
        "\"0x2000000000000000\"",
        "\"mpq_mul_2exp\"",
        "\"mpq_div_2exp\"",
        "\"%s wrong at data[%d], sign %d, overlap %d\\n\"",
        "\"   num \\\"%s\\\"\\n\"",
        "\"   den \\\"%s\\\"\\n\"",
        "\"   n   %lu\\n\"",
        "\"   got  \"",
        "\" (hex)\\n\"",
        "\"   want \"",
        "\" (hex)\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-set_f.c": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"1@1\"",
        "\"2\"",
        "\"1\"",
        "\"1@2\"",
        "\"4\"",
        "\"1\"",
        "\"1@3\"",
        "\"8\"",
        "\"1\"",
        "\"1@30\"",
        "\"40000000\"",
        "\"1\"",
        "\"1@31\"",
        "\"80000000\"",
        "\"1\"",
        "\"1@32\"",
        "\"100000000\"",
        "\"1\"",
        "\"1@33\"",
        "\"200000000\"",
        "\"1\"",
        "\"1@34\"",
        "\"400000000\"",
        "\"1\"",
        "\"1@62\"",
        "\"4000000000000000\"",
        "\"1\"",
        "\"1@63\"",
        "\"8000000000000000\"",
        "\"1\"",
        "\"1@64\"",
        "\"10000000000000000\"",
        "\"1\"",
        "\"1@65\"",
        "\"20000000000000000\"",
        "\"1\"",
        "\"1@66\"",
        "\"40000000000000000\"",
        "\"1\"",
        "\"1@126\"",
        "\"40000000000000000000000000000000\"",
        "\"1\"",
        "\"1@127\"",
        "\"80000000000000000000000000000000\"",
        "\"1\"",
        "\"1@128\"",
        "\"100000000000000000000000000000000\"",
        "\"1\"",
        "\"1@129\"",
        "\"200000000000000000000000000000000\"",
        "\"1\"",
        "\"1@130\"",
        "\"400000000000000000000000000000000\"",
        "\"1\"",
        "\"1@-1\"",
        "\"1\"",
        "\"2\"",
        "\"1@-2\"",
        "\"1\"",
        "\"4\"",
        "\"1@-3\"",
        "\"1\"",
        "\"8\"",
        "\"1@-30\"",
        "\"1\"",
        "\"40000000\"",
        "\"1@-31\"",
        "\"1\"",
        "\"80000000\"",
        "\"1@-32\"",
        "\"1\"",
        "\"100000000\"",
        "\"1@-33\"",
        "\"1\"",
        "\"200000000\"",
        "\"1@-34\"",
        "\"1\"",
        "\"400000000\"",
        "\"1@-62\"",
        "\"1\"",
        "\"4000000000000000\"",
        "\"1@-63\"",
        "\"1\"",
        "\"8000000000000000\"",
        "\"1@-64\"",
        "\"1\"",
        "\"10000000000000000\"",
        "\"1@-65\"",
        "\"1\"",
        "\"20000000000000000\"",
        "\"1@-66\"",
        "\"1\"",
        "\"40000000000000000\"",
        "\"1@-126\"",
        "\"1\"",
        "\"40000000000000000000000000000000\"",
        "\"1@-127\"",
        "\"1\"",
        "\"80000000000000000000000000000000\"",
        "\"1@-128\"",
        "\"1\"",
        "\"100000000000000000000000000000000\"",
        "\"1@-129\"",
        "\"1\"",
        "\"200000000000000000000000000000000\"",
        "\"1@-130\"",
        "\"1\"",
        "\"400000000000000000000000000000000\"",
        "\"1@-30\"",
        "\"1\"",
        "\"40000000\"",
        "\"1@-31\"",
        "\"1\"",
        "\"80000000\"",
        "\"1@-32\"",
        "\"1\"",
        "\"100000000\"",
        "\"1@-33\"",
        "\"1\"",
        "\"200000000\"",
        "\"1@-34\"",
        "\"1\"",
        "\"400000000\"",
        "\"11@-62\"",
        "\"3\"",
        "\"4000000000000000\"",
        "\"11@-63\"",
        "\"3\"",
        "\"8000000000000000\"",
        "\"11@-64\"",
        "\"3\"",
        "\"10000000000000000\"",
        "\"11@-65\"",
        "\"3\"",
        "\"20000000000000000\"",
        "\"11@-66\"",
        "\"3\"",
        "\"40000000000000000\"",
        "\"80000000.00000001\"",
        "\"8000000000000001\"",
        "\"100000000\"",
        "\"80000000.00000008\"",
        "\"1000000000000001\"",
        "\"20000000\"",
        "\"80000000.8\"",
        "\"100000001\"",
        "\"2\"",
        "\"wrong at data[%d]\\n\"",
        "\"   f_base %d, z_base %d\\n\"",
        "\"   f \\\"%s\\\" hex \"",
        "\"\\n\"",
        "\"   want num 0x\"",
        "\"\\n\"",
        "\"   want den 0x\"",
        "\"\\n\"",
        "\"   got num 0x\"",
        "\"\\n\"",
        "\"   got den 0x\"",
        "\"\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpq/t-set_str.c": {
    "check_one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"mpq_set_str unexpectedly failed\\n\"",
        "\"  base %d\\n\"",
        "\"  str  \\\"%s\\\"\\n\"",
        "\"mpq_set_str wrong\\n\"",
        "\"  base %d\\n\"",
        "\"  str  \\\"%s\\\"\\n\"",
        "\"got \"",
        "\"want\""
      ]
    },
    "check_samples": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0/1\"",
        "\"0  / 1\"",
        "\"0x0/ 1\"",
        "\"0x0/ 0x1\"",
        "\"0 / 0x1\"",
        "\"-0\"",
        "\"-0/1\"",
        "\"-0  / 1\"",
        "\"-0x0/ 1\"",
        "\"-0x0/ 0x1\"",
        "\"-0 / 0x1\"",
        "\"255/256\"",
        "\"0xFF/0x100\"",
        "\"FF/100\"",
        "\"-255/256\"",
        "\"-0xFF/0x100\"",
        "\"-FF/100\""
      ]
    },
    "main": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/bit.c": {
    "debug_mp": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "check_clr_extend": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"mpz_clrbit: \"",
        "\"mpz_combit: \"",
        "\"wrong after extension\\n\"",
        "\"got \"",
        "\"want\"",
        "\"mpz_setbit: \"",
        "\"mpz_combit: \"",
        "\"wrong after shrinking\\n\"",
        "\"got \"",
        "\"want\""
      ]
    },
    "check_com_negs": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": [
        "\"mpz_combit: wrong on neg data[%d]\\n\"",
        "\"inp \"",
        "\"bit %lu\\n\"",
        "\"got \"",
        "\"want\""
      ]
    },
    "check_tstbit": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        212,
        1
      ],
      "strings": [
        "\"wrong at bit %lu, with %d zeros\\n\"",
        "\"z neg \"",
        "\"pos   \"",
        "\"neg   \""
      ]
    },
    "check_single": {
      "start_point": [
        215,
        0
      ],
      "end_point": [
        278,
        1
      ],
      "strings": [
        "\"check_single(): expected 0\\n\"",
        "\"check_single(): expected 1\\n\"",
        "\"check_single(): expected 0\\n\"",
        "\"check_single(): expected 1\\n\"",
        "\"check_single(): expected 0\\n\""
      ]
    },
    "check_random": {
      "start_point": [
        281,
        0
      ],
      "end_point": [
        387,
        1
      ],
      "strings": [
        "\"\"",
        "\"bit1 != 1\"",
        "\"bit2 != 0\"",
        "\"bit3 != 1\"",
        "\"%s\\n\"",
        "\"bitindex = %lu\\n\"",
        "\"x = \"",
        "\" hex\\n\""
      ]
    },
    "main": {
      "start_point": [
        391,
        0
      ],
      "end_point": [
        405,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/convert.c": {
    "string_urandomb": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\""
      ]
    },
    "main": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"ERROR, op1 and op2 different in test %d\\n\"",
        "\"str  = %s\\n\"",
        "\"base = %d\\n\"",
        "\"op1  = \"",
        "\"op2  = \"",
        "\"ERROR, str and buf different in test %d\\n\"",
        "\"str  = %s\\n\"",
        "\"buf  = %s\\n\"",
        "\"base = %d\\n\"",
        "\"op1  = \""
      ]
    },
    "debug_mp": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/dive.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"Wrong results:\\n\"",
        "\"  got     \"",
        "\"  want    \"",
        "\"  dividend\"",
        "\"  divisor \""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/dive_ui.c": {
    "check_random": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": [
        "\"mpz_divexact_ui wrong\\n\"",
        "\"    a\"",
        "\"    d=%lu\\n\"",
        "\"    q\"",
        "\"  got\""
      ]
    },
    "main": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/io.c": {
    "debug_mp": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": [
        "\"w+\"",
        "\"mpz_out_str write error\\n\"",
        "\"mpz_inp_str stream read error\\n\"",
        "\"mpz_inp_str data conversion error\\n\"",
        "\"mpz_inp_str nread doesn't match ftell\\n\"",
        "\"  nread  %lu\\n\"",
        "\"  ftell  %ld\\n\"",
        "\"ERROR\\n\"",
        "\"op1  = \"",
        "\"op2  = \"",
        "\"base = %d\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/logic.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "dump_abort": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "debug_mp": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/reuse.c": {
    "main": [
      {
        "start_point": [
          41,
          0
        ],
        "end_point": [
          46,
          1
        ],
        "strings": [
          "\"Test suppressed for windows DLL\\n\""
        ]
      },
      {
        "start_point": [
          199,
          0
        ],
        "end_point": [
          701,
          1
        ],
        "strings": [
          "\"\\r%d/%d passes\"",
          "\"\\r%20s\"",
          "\"\"",
          "\"\\r\""
        ]
      }
    ],
    "mpz_xinvert": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "dump": {
      "start_point": [
        703,
        0
      ],
      "end_point": [
        719,
        1
      ],
      "strings": [
        "\"failure in %s (\"",
        "\" \"",
        "\" \"",
        "\")\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-addsub.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"mpz_add or mpz_sub incorrect\"",
        "\"mpz_add_ui or mpz_sub_ui incorrect\"",
        "\"mpz_add_ui or mpz_ui_sub incorrect\""
      ]
    },
    "dump_abort": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": [
        "\"ERROR: %s in test %d\\n\"",
        "\"op1 = \"",
        "\"op2 = \""
      ]
    },
    "debug_mp": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-aorsmul.c": {
    "check_one_inplace": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": [
        "\"mpz_addmul inplace fail\\n\"",
        "\"w\"",
        "\"y\"",
        "\"want\"",
        "\"got \"",
        "\"mpz_submul inplace fail\\n\""
      ]
    },
    "check_one_ui_inplace": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"mpz_addmul_ui fail\\n\"",
        "\"w\"",
        "\"y=0x%lX   %lu\\n\"",
        "\"want\"",
        "\"got \"",
        "\"mpz_submul_ui fail\\n\""
      ]
    },
    "check_all_inplace": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "check_one": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": [
        "\"mpz_addmul fail\\n\"",
        "\"w\"",
        "\"x\"",
        "\"y\"",
        "\"want\"",
        "\"got \"",
        "\"mpz_submul fail\\n\""
      ]
    },
    "check_one_ui": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": [
        "\"mpz_addmul_ui fail\\n\"",
        "\"w\"",
        "\"x\"",
        "\"y=0x%lX   %lu\\n\"",
        "\"want\"",
        "\"got \"",
        "\"mpz_submul_ui fail\\n\""
      ]
    },
    "check_all": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": []
    },
    "check_data_inplace_ui": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        291,
        1
      ],
      "strings": []
    },
    "check_data": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        371,
        1
      ],
      "strings": []
    },
    "check_random": {
      "start_point": [
        374,
        0
      ],
      "end_point": [
        406,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        409,
        0
      ],
      "end_point": [
        421,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-bin.c": {
    "try_mpz_bin_ui": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"mpz_bin_ui wrong\\n\"",
        "\"  n=\"",
        "\"\\n\"",
        "\"  k=%lu\\n\"",
        "\"  got=\"",
        "\"\\n\"",
        "\"  want=\"",
        "\"\\n\""
      ]
    },
    "try_mpz_bin_uiui": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"mpz_bin_uiui wrong\\n\"",
        "\"  n=%lu\\n\"",
        "\"  k=%lu\\n\"",
        "\"  got=\"",
        "\"\\n\"",
        "\"  want=\"",
        "\"\\n\""
      ]
    },
    "samples": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"2\"",
        "\"0\"",
        "\"3\"",
        "\"0\"",
        "\"10\"",
        "\"0\"",
        "\"-1\"",
        "\"1\"",
        "\"-1\"",
        "\"-1\"",
        "\"-1\"",
        "\"1\"",
        "\"-1\"",
        "\"-1\"",
        "\"-1\"",
        "\"1\"",
        "\"-2\"",
        "\"1\"",
        "\"-2\"",
        "\"-2\"",
        "\"-2\"",
        "\"3\"",
        "\"-2\"",
        "\"-4\"",
        "\"-2\"",
        "\"5\"",
        "\"-2\"",
        "\"-6\"",
        "\"-2\"",
        "\"7\"",
        "\"-3\"",
        "\"1\"",
        "\"-3\"",
        "\"-3\"",
        "\"-3\"",
        "\"6\"",
        "\"-3\"",
        "\"-10\"",
        "\"-3\"",
        "\"15\"",
        "\"-3\"",
        "\"-21\"",
        "\"-3\"",
        "\"28\"",
        "\"41\"",
        "\"269128937220\"",
        "\"62\"",
        "\"147405545359541742\"",
        "\"50\"",
        "\"18053528883775\"",
        "\"149\"",
        "\"19332950844468483467894649\""
      ]
    },
    "twos": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "randomwalk": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": []
    },
    "smallexaustive": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        238,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": [
        "\"Invalid test count: %s.\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-cdiv_ui.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": [
        "\"quotients from mpz_cdiv_qr_ui and mpz_cdiv_q_ui differ\"",
        "\"remainders from mpz_cdiv_qr_ui and mpz_cdiv_r_ui differ\"",
        "\"quotient sign wrong\"",
        "\"remainder sign wrong\"",
        "\"n mod d != n - [n/d]*d\"",
        "\"remainder greater than divisor\"",
        "\"remainder returned from mpz_cdiv_qr_ui is wrong\"",
        "\"remainder returned from mpz_cdiv_q_ui is wrong\"",
        "\"remainder returned from mpz_cdiv_r_ui is wrong\"",
        "\"remainder returned from mpz_cdiv_ui is wrong\""
      ]
    },
    "dump_abort": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"ERROR: %s\\n\"",
        "\"dividend = \"",
        "\"divisor  = %lX\\n\""
      ]
    },
    "debug_mp": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-cmp.c": {
    "check_one": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"mpz_cmp got %d want %d\\n\"",
        "\"x\"",
        "\"y\"",
        "\"mpz_cmpabs got %d want %d\\n\"",
        "\"x\"",
        "\"y\""
      ]
    },
    "check_all": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "check_various": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-cmp_d.c": {
    "check_one": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": [
        "\"mpz_cmp_d wrong (from %s)\\n\"",
        "\"  got  %d\\n\"",
        "\"  want %d\\n\"",
        "\"  x\"",
        "\"  y %g\\n\"",
        "\"  x\"",
        "\"  y %g\\n\"",
        "\"  y\"",
        "\" %02X\"",
        "\"\\n\"",
        "\"mpz_cmpabs_d wrong\\n\"",
        "\"  got  %d\\n\"",
        "\"  want %d\\n\""
      ]
    },
    "check_data": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"-1\"",
        "\"1\"",
        "\"-1\"",
        "\"0\"",
        "\"0\"",
        "\"0x1000000000000000000000000000000000000000000000000\"",
        "\"-0x1000000000000000000000000000000000000000000000000\"",
        "\"0\"",
        "\"0\"",
        "\"2\"",
        "\"2\"",
        "\"-2\"",
        "\"-2\"",
        "\"check_data\""
      ]
    },
    "check_onebits": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"check_onebits\"",
        "\"check_onebits\"",
        "\"check_onebits\"",
        "\"check_onebits\""
      ]
    },
    "check_low_z_one": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": [
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\"",
        "\"check_low_z_one\""
      ]
    },
    "check_one_2exp": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        238,
        1
      ],
      "strings": [
        "\"check_one_2exp\"",
        "\"check_one_2exp\"",
        "\"check_one_2exp\"",
        "\"check_one_2exp\""
      ]
    },
    "check_infinity": {
      "start_point": [
        240,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": [
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\"",
        "\"check_infinity\""
      ]
    },
    "main": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        292,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-cmp_si.c": {
    "check_data": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"-1\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"-1\"",
        "\"-1\"",
        "\"1\"",
        "\"-1\"",
        "\"0\"",
        "\"-1\"",
        "\"-1\"",
        "\"0\"",
        "\"-0x80000000\"",
        "\"0x80000000\"",
        "\"-0x80000000\"",
        "\"0x80000001\"",
        "\"-0x80000000\"",
        "\"-0x80000000\"",
        "\"-0x80000000\"",
        "\"-0x80000001\"",
        "\"-0x80000000\"",
        "\"0\"",
        "\"-0x8000000000000000\"",
        "\"0x8000000000000000\"",
        "\"-0x8000000000000000\"",
        "\"0x8000000000000001\"",
        "\"-0x8000000000000000\"",
        "\"-0x8000000000000000\"",
        "\"-0x8000000000000000\"",
        "\"-0x8000000000000001\"",
        "\"-0x8000000000000000\"",
        "\"mpz_cmp_si wrong on data[%d]\\n\"",
        "\"  a=\"",
        "\"\\n\"",
        "\"  b=%ld\\n\"",
        "\"  got=%d\\n\"",
        "\"  want=%d\\n\""
      ]
    },
    "main": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-cong.c": {
    "check_one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": [
        "\"mpz_congruent_p wrong\\n\"",
        "\"   expected %d got %d\\n\"",
        "\"\t a\"",
        "\"\t c\"",
        "\"\t d\"",
        "\"\t a\"",
        "\"\t c\"",
        "\"\t d\"",
        "\"mpz_congruent_ui_p wrong\\n\"",
        "\"   expected %d got %d\\n\"",
        "\"   a\"",
        "\"   c=%lu\\n\"",
        "\"   d=%lu\\n\"",
        "\"   a\"",
        "\"   c=0x%lX\\n\"",
        "\"   d=0x%lX\\n\""
      ]
    },
    "check_data": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"11\"",
        "\"11\"",
        "\"0\"",
        "\"3\"",
        "\"11\"",
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"123\"",
        "\"456\"",
        "\"1\"",
        "\"0x123456789123456789\"",
        "\"0x987654321987654321\"",
        "\"1\"",
        "\"0x3333333333333333\"",
        "\"0x33333333\"",
        "\"0x180000000\"",
        "\"0x33333333333333333333333333333333\"",
        "\"0x3333333333333333\"",
        "\"0x18000000000000000\"",
        "\"0x444444441\"",
        "\"-0x22222221F\"",
        "\"0x333333330\"",
        "\"0x44444444444444441\"",
        "\"-0x2222222222222221F\"",
        "\"0x33333333333333330\""
      ]
    },
    "check_random": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-cong_2exp.c": {
    "check_one": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": [
        "\"mpz_congruent_2exp_p wrong\\n\"",
        "\"   expected %d got %d\\n\"",
        "\"   a\"",
        "\"   c\"",
        "\" a-c\"",
        "\" 2^d\"",
        "\"   d=%lu\\n\"",
        "\"   a\"",
        "\"   c\"",
        "\" a-c\"",
        "\" 2^d\"",
        "\"   d=0x%lX\\n\""
      ]
    },
    "check_data": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"123\"",
        "\"-456\"",
        "\"0x123456789123456789\"",
        "\"0x987654321987654321\"",
        "\"0xfffffffffffffffffffffffffffffff7\"",
        "\"-0x9\"",
        "\"0xfffffffffffffffffffffffffffffff6\"",
        "\"-0xa\""
      ]
    },
    "check_random": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "check_random_bits": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-divis.c": {
    "check_one": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"mpz_divisible_ui_p wrong\\n\"",
        "\"   expected %d got %d\\n\"",
        "\"   a\"",
        "\"   d=%lu\\n\"",
        "\"   a\"",
        "\"   d=0x%lX\\n\"",
        "\"mpz_divisible_p wrong\\n\"",
        "\"   expected %d got %d\\n\"",
        "\"   a\"",
        "\"   d\"",
        "\"   a\"",
        "\"   d\""
      ]
    },
    "check_data": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"17\"",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"123\"",
        "\"1\"",
        "\"-123\"",
        "\"1\"",
        "\"0\"",
        "\"2\"",
        "\"1\"",
        "\"2\"",
        "\"2\"",
        "\"2\"",
        "\"-2\"",
        "\"2\"",
        "\"0x100000000000000000000000000000000\"",
        "\"2\"",
        "\"0x100000000000000000000000000000001\"",
        "\"2\"",
        "\"0x3333333333333333\"",
        "\"3\"",
        "\"0x3333333333333332\"",
        "\"3\"",
        "\"0x33333333333333333333333333333333\"",
        "\"3\"",
        "\"0x33333333333333333333333333333332\"",
        "\"3\"",
        "\"0x3333333300000000\"",
        "\"0x180000000\"",
        "\"0x33333333333333330000000000000000\"",
        "\"0x18000000000000000\"",
        "\"0x133333333333333330000000000000000\"",
        "\"0x18000000000000000\""
      ]
    },
    "check_random": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-divis_2exp.c": {
    "check_one": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": [
        "\"mpz_divisible_2exp_p wrong\\n\"",
        "\"   expected %d got %d\\n\"",
        "\"   a\"",
        "\"   d=%lu\\n\"",
        "\"   a\"",
        "\"   d=0x%lX\\n\""
      ]
    },
    "check_data": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"4\"",
        "\"4\"",
        "\"4\"",
        "\"4\"",
        "\"4\"",
        "\"4\"",
        "\"0x80000000\"",
        "\"0x80000000\"",
        "\"0x80000000\"",
        "\"0x100000000\"",
        "\"0x100000000\"",
        "\"0x100000000\"",
        "\"0x8000000000000000\"",
        "\"0x8000000000000000\"",
        "\"0x8000000000000000\"",
        "\"0x10000000000000000\"",
        "\"0x10000000000000000\"",
        "\"0x10000000000000000\"",
        "\"0x10000000000000000\"",
        "\"0x10000000000000000100000000\"",
        "\"0x10000000000000000100000000\"",
        "\"0x10000000000000000100000000\"",
        "\"0x1000000000000000010000000000000000\"",
        "\"0x1000000000000000010000000000000000\"",
        "\"0x1000000000000000010000000000000000\"",
        "\"0x1000000000000000010000000000000000\"",
        "\"0x1000000000000000010000000000000000\""
      ]
    },
    "main": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-div_2exp.c": {
    "check_one": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"mpz_fdiv_r_2exp result out of range\\n\"",
        "\"mpz_fdiv_[qr]_2exp doesn't multiply back\\n\"",
        "\"mpz_cdiv_r_2exp result out of range\\n\"",
        "\"mpz_cdiv_[qr]_2exp doesn't multiply back\\n\"",
        "\"mpz_tdiv_r_2exp result wrong sign\\n\"",
        "\"mpz_tdiv_r_2exp result out of range\\n\"",
        "\"mpz_tdiv_[qr]_2exp doesn't multiply back\\n\"",
        "\"a\"",
        "\"d=%lu\\n\"",
        "\"q\"",
        "\"r\"",
        "\"p\"",
        "\"a\"",
        "\"d=0x%lX\\n\"",
        "\"q\"",
        "\"r\"",
        "\"p\""
      ]
    },
    "check_all": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "check_various": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "check_random": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-export.c": {
    "check_data": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"0x12345678\"",
        "\"0x12345678\"",
        "\"0x12345678\"",
        "\"0x12345678\"",
        "\"0x12345678\"",
        "\"0x12345678\"",
        "\"0x15\"",
        "\"0x1FFFFFFFFFFF\"",
        "\"0x1FFFFFFFFFFF\"",
        "\"0x7\"",
        "\"0x7\"",
        "\"0x24\"",
        "\"0x24\"",
        "\"0x24\"",
        "\"0x24\"",
        "\"0x123456789ABC\"",
        "\"0x123456789ABC\"",
        "\"0x123456789ABC\"",
        "\"0x123456789ABC\"",
        "\"0x112233445566778899AABBCC\"",
        "\"0x112233445566778899AABBCC\"",
        "\"0x112233445566778899AABBCC\"",
        "\"0x112233445566778899AABBCC\"",
        "\"0x100120023003400450056006700780089009A00AB00BC00C\"",
        "\"0x100120023003400450056006700780089009A00AB00BC00C\"",
        "\"0x100120023003400450056006700780089009A00AB00BC00C\"",
        "\"0x100120023003400450056006700780089009A00AB00BC00C\"",
        "\"0x155555555555555555555555\"",
        "\"0x155555555555555555555555\"",
        "\"0x155555555555555555555555\"",
        "\"0x155555555555555555555555\"",
        "\"return doesn't equal given pointer\\n\"",
        "\"wrong count\\n\"",
        "\"wrong result data\\n\"",
        "\"    at data[%d]  align=%d\\n\"",
        "\"    src \\\"%s\\\"\\n\"",
        "\"    src\"",
        "\"    order=%d  size=%lu endian=%d nail=%u\\n\"",
        "\"    want count %lu\\n\"",
        "\"    got count  %lu\\n\"",
        "\"    want\"",
        "\" 0x%02X,\"",
        "\"\\n\"",
        "\"    got \"",
        "\" 0x%02X,\"",
        "\"\\n\""
      ]
    },
    "main": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-fac_ui.c": {
    "main": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"mpz_fac_ui(%lu) wrong\\n\"",
        "\"  got  \"",
        "\"\\n\"",
        "\"  want \"",
        "\"\\n\"",
        "\"mpz_2fac_ui(%lu) wrong\\n\"",
        "\"  got  \"",
        "\"\\n\"",
        "\"  want \"",
        "\"\\n\"",
        "\"mpz_fac_ui(%lu) wrong\\n\"",
        "\" al-Haytham's theorem not verified: got %lu, expected %lu.\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-fdiv.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "dump_abort": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": [
        "\"ERROR\\n\"",
        "\"dividend = \"",
        "\"divisor  = \""
      ]
    },
    "debug_mp": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-fdiv_ui.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": [
        "\"quotients from mpz_fdiv_qr_ui and mpz_fdiv_q_ui differ\"",
        "\"remainders from mpz_fdiv_qr_ui and mpz_fdiv_r_ui differ\"",
        "\"quotient sign wrong\"",
        "\"remainder sign wrong\"",
        "\"n mod d != n - [n/d]*d\"",
        "\"remainder greater than divisor\"",
        "\"remainder returned from mpz_fdiv_qr_ui is wrong\"",
        "\"remainder returned from mpz_fdiv_q_ui is wrong\"",
        "\"remainder returned from mpz_fdiv_r_ui is wrong\"",
        "\"remainder returned from mpz_fdiv_ui is wrong\""
      ]
    },
    "dump_abort": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"ERROR: %s\\n\"",
        "\"dividend = \"",
        "\"divisor  = %lX\\n\""
      ]
    },
    "debug_mp": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-fib_ui.c": {
    "check_fib_table": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": [
        "\"FIB_TABLE(%d) wrong\\n\"",
        "\"  got  %#Nx\\n\"",
        "\"  want %#Nx\\n\""
      ]
    },
    "main": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": [
        "\"MPZ_FIB_SIZE_FLOAT wrong at n=%lu\\n\"",
        "\"  MPZ_FIB_SIZE_FLOAT  %ld\\n\"",
        "\"  SIZ(want_fn)        %d\\n\"",
        "\"MPN_FIB2_SIZE wrong at n=%lu\\n\"",
        "\"  MPN_FIB2_SIZE       %ld\\n\"",
        "\"  MPZ_FIB_SIZE_FLOAT  %ld\\n\"",
        "\"MPN_FIB2_SIZE wrong at n=%lu\\n\"",
        "\"  MPN_FIB2_SIZE  %ld\\n\"",
        "\"  SIZ(want_fn)   %d\\n\"",
        "\"mpz_fib2_ui(%lu) wrong\\n\"",
        "\"want fn \"",
        "\"got  fn \"",
        "\"want fn1\"",
        "\"got  fn1\"",
        "\"mpz_fib_ui(%lu) wrong\\n\"",
        "\"want fn\"",
        "\"got  fn\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-fits.c": {
    "main": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"-1\"",
        "\"2^(5*BPML)\"",
        "\"USHRT_MAX\"",
        "\"USHRT_MAX + 1\"",
        "\"UINT_MAX\"",
        "\"UINT_MAX + 1\"",
        "\"ULONG_MAX\"",
        "\"ULONG_MAX + 1\"",
        "\"SHRT_MAX\"",
        "\"SHRT_MAX + 1\"",
        "\"INT_MAX\"",
        "\"INT_MAX + 1\"",
        "\"LONG_MAX\"",
        "\"LONG_MAX + 1\"",
        "\"SHRT_MIN\"",
        "\"SHRT_MIN + 1\"",
        "\"INT_MIN\"",
        "\"INT_MIN + 1\"",
        "\"LONG_MIN\"",
        "\"LONG_MIN + 1\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-gcd.c": {
    "check_data": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"0x3FFC000007FFFFFFFFFF00000000003F83FFFFFFFFFFFFFFF80000000000000001\"",
        "\"0x1FFE0007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC000000000000000000000001\"",
        "\"5\"",
        "\"mpz_gcd wrong on data[%d]\\n\"",
        "\" a  %s\\n\"",
        "\" b  %s\\n\"",
        "\" a\"",
        "\" b\"",
        "\" want\"",
        "\" got \""
      ]
    },
    "make_chain_operands": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "check_kolmo1": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": [
        "\"5\"",
        "\"3\"",
        "\"1\"",
        "\"1\"",
        "\"1\""
      ]
    },
    "check_kolmo2": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": []
    },
    "debug_mp": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        300,
        1
      ],
      "strings": []
    },
    "one_test": {
      "start_point": [
        302,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": [
        "\"ERROR in test %d\\n\"",
        "\"mpz_gcdext returned incorrect result\\n\"",
        "\"op1=\"",
        "\"op2=\"",
        "\"expected result:\\n\"",
        "\"mpz_gcdext returns:\\n\"",
        "\"ERROR in test %d\\n\"",
        "\"mpz_gcdext returned invalid result\\n\"",
        "\"op1=\"",
        "\"op2=\"",
        "\"mpz_gcdext returns:\\n\"",
        "\"s=\"",
        "\"ERROR in test %d\\n\"",
        "\"mpz_gcd returned incorrect result\\n\"",
        "\"op1=\"",
        "\"op2=\"",
        "\"expected result:\\n\"",
        "\"mpz_gcd returns:\\n\"",
        "\"ERROR in test %d\\n\"",
        "\"mpz_gcd_ui returned incorrect result\\n\"",
        "\"op1=\"",
        "\"op2=\"",
        "\"expected result:\\n\"",
        "\"mpz_gcd_ui returns:\\n\"",
        "\"ERROR in test %d\\n\"",
        "\"mpz_gcdext returned incorrect result\\n\"",
        "\"op1=\"",
        "\"op2=\"",
        "\"expected result:\\n\"",
        "\"mpz_gcdext returns:\\n\""
      ]
    },
    "gcdext_valid_p": {
      "start_point": [
        398,
        0
      ],
      "end_point": [
        453,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-gcd_ui.c": {
    "check_ui_range": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": [
        "\"mpz_gcd_ui (ULONG_MAX*2^%d, 0)\\n\"",
        "\"   return %#lx\\n\"",
        "\"   should be 0\\n\""
      ]
    },
    "main": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-get_d.c": {
    "check_onebit": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"mpz_get_d wrong on 2**%d\\n\"",
        "\"   z    \"",
        "\"   want  %.20g\\n\"",
        "\"   got   %.20g\\n\""
      ]
    },
    "main": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-get_d_2exp.c": {
    "check_zero": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"mpz_get_d_2exp wrong on zero\\n\"",
        "\"   z    \"",
        "\"   want \"",
        "\"   got  \"",
        "\"   want exp %ld\\n\"",
        "\"   got exp  %ld\\n\""
      ]
    },
    "check_onebit": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"mpz_get_d_2exp wrong on 2**%ld\\n\"",
        "\"   z    \"",
        "\"   want \"",
        "\"   got  \"",
        "\"   want exp %ld\\n\"",
        "\"   got exp  %ld\\n\"",
        "\"mpz_get_d_2exp wrong on -2**%ld\\n\"",
        "\"   z    \"",
        "\"   want \"",
        "\"   got  \"",
        "\"   want exp %ld\\n\"",
        "\"   got exp  %ld\\n\""
      ]
    },
    "check_round": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": [
        "\"mpz_get_d_2exp wrong on 2**%lu-1\\n\"",
        "\"result out of range, expect 0.5 <= got < 1.0\\n\"",
        "\"   rnd_mode = %d\\n\"",
        "\"   data[i]  = %lu\\n\"",
        "\"   z    \"",
        "\"   got  \"",
        "\"   got exp  %ld\\n\"",
        "\"mpz_get_d_2exp wrong on -2**%lu-1\\n\"",
        "\"result out of range, expect -1.0 < got <= -0.5\\n\"",
        "\"   rnd_mode = %d\\n\"",
        "\"   data[i]  = %lu\\n\"",
        "\"   z    \"",
        "\"   got  \"",
        "\"   got exp  %ld\\n\""
      ]
    },
    "check_rand": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": [
        "\"mpz_get_d_2exp out of range, expect 0.5 <= got < 1.0\\n\"",
        "\"   z    \"",
        "\"   got  \"",
        "\"   got exp  %ld\\n\"",
        "\"mpz_get_d_2exp wrong exponent\\n\"",
        "\"   z    \"",
        "\"   bits \"",
        "\"   got  \"",
        "\"   got exp  %ld\\n\""
      ]
    },
    "main": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-get_si.c": {
    "check_data": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"-1\"",
        "\"2\"",
        "\"-2\"",
        "\"12345\"",
        "\"-12345\"",
        "\"mpz_get_si wrong at data[%d]\\n\"",
        "\"   n     \\\"%s\\\" (\"",
        "\", hex \"",
        "\")\\n\"",
        "\"   got   %ld (0x%lX)\\n\"",
        "\"   want  %ld (0x%lX)\\n\""
      ]
    },
    "check_max": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"LONG_MAX\"",
        "\"LONG_MIN\"",
        "\"-0x100...00\""
      ]
    },
    "main": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-hamdist.c": {
    "check_twobits": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"mpz_hamdist wrong on 2 bits pos/pos\\n\"",
        "\"  i    %lu\\n\"",
        "\"  j    %lu\\n\"",
        "\"  got  %lu\\n\"",
        "\"  want %lu\\n\"",
        "\"  x   \"",
        "\"  y   \"",
        "\"mpz_hamdist wrong on 2 bits neg/neg\\n\""
      ]
    },
    "check_rand": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"mpz_hamdist wrong on random\\n\"",
        "\"  got  %lu\\n\"",
        "\"  want %lu\\n\"",
        "\"  x   \"",
        "\"  y   \""
      ]
    },
    "main": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-import.c": {
    "check_data": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"0x12345678\"",
        "\"0x12345678\"",
        "\"0x12345678\"",
        "\"0x12345678\"",
        "\"0x12345678\"",
        "\"0x12345678\"",
        "\"0\"",
        "\"0\"",
        "\"0x15\"",
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"0x2A\"",
        "\"0x06\"",
        "\"0x24\"",
        "\"0x123456789ABC\"",
        "\"0x123456789ABC\"",
        "\"0x123456789ABC\"",
        "\"0x123456789ABC\"",
        "\"0x112233445566778899AABBCC\"",
        "\"0x112233445566778899AABBCC\"",
        "\"0x112233445566778899AABBCC\"",
        "\"0x112233445566778899AABBCC\"",
        "\"0x100120023003400450056006700780089009A00AB00BC00C\"",
        "\"0x100120023003400450056006700780089009A00AB00BC00C\"",
        "\"0x100120023003400450056006700780089009A00AB00BC00C\"",
        "\"0x100120023003400450056006700780089009A00AB00BC00C\"",
        "\"0x155555555555555555555555\"",
        "\"0x155555555555555555555555\"",
        "\"0x155555555555555555555555\"",
        "\"0x155555555555555555555555\"",
        "\"wrong at data[%d]\\n\"",
        "\"    count=%lu order=%d  size=%lu endian=%d nail=%u  align=%lu\\n\"",
        "\"    got \"",
        "\"    want\""
      ]
    },
    "main": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-inp_str.c": {
    "check_data": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"abc\"",
        "\"0\"",
        "\"0xf\"",
        "\"0\"",
        "\"ghi\"",
        "\"0\"",
        "\"100\"",
        "\"0\"",
        "\"ff\"",
        "\"255\"",
        "\"-ff\"",
        "\"-255\"",
        "\"FF\"",
        "\"255\"",
        "\"-FF\"",
        "\"-255\"",
        "\"z\"",
        "\"35\"",
        "\"Z\"",
        "\"35\"",
        "\"1B\"",
        "\"70\"",
        "\"a\"",
        "\"36\"",
        "\"A\"",
        "\"10\"",
        "\"0x0\"",
        "\"0\"",
        "\"0X10\"",
        "\"16\"",
        "\"-0X0\"",
        "\"0\"",
        "\"-0x10\"",
        "\"-16\"",
        "\"0b0\"",
        "\"0\"",
        "\"0B10\"",
        "\"2\"",
        "\"-0B0\"",
        "\"0\"",
        "\"-0b10\"",
        "\"-2\"",
        "\"00\"",
        "\"0\"",
        "\"010\"",
        "\"8\"",
        "\"-00\"",
        "\"0\"",
        "\"-010\"",
        "\"-8\"",
        "\"0x\"",
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\" 030\"",
        "\"30\"",
        "\"w+\"",
        "\"mpz_inp_str nread wrong\\n\"",
        "\"  inp          \\\"%s\\\"\\n\"",
        "\"  base         %d\\n\"",
        "\"  pre          %d\\n\"",
        "\"  post         %d\\n\"",
        "\"  got_nread    %d\\n\"",
        "\"  ftell_nread  %ld\\n\"",
        "\"mpz_inp_str didn't read to EOF\\n\"",
        "\"  inp   \\\"%s\\\"\\n\"",
        "\"  base  %d\\n\"",
        "\"  pre   %d\\n\"",
        "\"  post  %d\\n\"",
        "\"  c     '%c' %#x\\n\"",
        "\"mpz_inp_str nread wrong\\n\"",
        "\"  inp         \\\"%s\\\"\\n\"",
        "\"  base        %d\\n\"",
        "\"  pre         %d\\n\"",
        "\"  post        %d\\n\"",
        "\"  got_nread   %d\\n\"",
        "\"  want_nread  %d\\n\"",
        "\"mpz_inp_str wrong result\\n\"",
        "\"  inp   \\\"%s\\\"\\n\"",
        "\"  base  %d\\n\"",
        "\"  got \"",
        "\"  want\""
      ]
    },
    "main": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-invert.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": [
        "\"ERROR in test %d\\n\"",
        "\"Inverse out of range.\\n\"",
        "\"a = %Zx\\n\"",
        "\"1/a = %Zx\\n\"",
        "\"m = %Zx\\n\"",
        "\"ERROR in test %d\\n\"",
        "\"a^(-1)*a != 1 (mod m)\\n\"",
        "\"a = %Zx\\n\"",
        "\"m = %Zx\\n\"",
        "\"ERROR in test %d\\n\"",
        "\"Inverse exists, but was not found.\\n\"",
        "\"a = %Zx\\n\"",
        "\"m = %Zx\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-io_raw.c": {
    "fopen_wplusb_or_die": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"w+b\"",
        "\"w+\"",
        "\"Cannot create file %s\\n\""
      ]
    },
    "check_in": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": [
        "\"check_in: return value wrong\\n\"",
        "\"check_in: result wrong\\n\"",
        "\"  i=%d zeros=%d neg=%d\\n\"",
        "\"  got_ret  %lu\\n\"",
        "\"  want_ret %lu\\n\"",
        "\"  got      \"",
        "\"  want     \""
      ]
    },
    "check_out": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": [
        "\"check_out: wrong return value\\n\"",
        "\"check_out: wrong number of bytes read back\\n\"",
        "\"check_out: wrong data\\n\"",
        "\"  i=%d neg=%d\\n\"",
        "\"  z\"",
        "\"  got_ret  %lu\\n\"",
        "\"  got_read %lu\\n\"",
        "\"  want_len %lu\\n\"",
        "\"  want\"",
        "\" %02X\"",
        "\"\\n\"",
        "\"  got \"",
        "\" %02X\"",
        "\"\\n\""
      ]
    },
    "check_rand": {
      "start_point": [
        221,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": [
        "\"check_rand: different inp/out return values\\n\"",
        "\"check_rand: wrong result\\n\"",
        "\"  out_ret %lu\\n\"",
        "\"  inp_ret %lu\\n\"",
        "\"  want\"",
        "\"  got \""
      ]
    },
    "main": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-jac.c": {
    "mpz_mod4": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "mpz_fits_ulimb_p": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "mpz_get_ulimb": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "try_base": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": [
        "\"mpn_jacobi_base (%lu, %lu) is %d should be %d\\n\"",
        "\"mpn_jacobi_base (%llu, %llu) is %d should be %d\\n\""
      ]
    },
    "try_zi_ui": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": [
        "\"mpz_kronecker_ui (\"",
        "\", %lu) is %d should be %d\\n\""
      ]
    },
    "try_zi_si": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"mpz_kronecker_si (\"",
        "\", %ld) is %d should be %d\\n\""
      ]
    },
    "try_ui_zi": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": [
        "\"mpz_ui_kronecker (%lu, \"",
        "\") is %d should be %d\\n\""
      ]
    },
    "try_si_zi": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": [
        "\"mpz_si_kronecker (%ld, \"",
        "\") is %d should be %d\\n\""
      ]
    },
    "try_zi_zi": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"mpz_kronecker (\"",
        "\", \"",
        "\") is %d should be %d\\n\""
      ]
    },
    "try_pari": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"try(\"",
        "\",\"",
        "\",%d)\\n\""
      ]
    },
    "try_each": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": [
        "\"asize = %d, bsize = %d\\n\""
      ]
    },
    "try_pn": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": []
    },
    "try_periodic_num": {
      "start_point": [
        251,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": []
    },
    "try_periodic_den": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    },
    "try_2den": {
      "start_point": [
        354,
        0
      ],
      "end_point": [
        387,
        1
      ],
      "strings": []
    },
    "try_2num": {
      "start_point": [
        392,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": []
    },
    "try_all": {
      "start_point": [
        434,
        0
      ],
      "end_point": [
        442,
        1
      ],
      "strings": []
    },
    "check_data": {
      "start_point": [
        445,
        0
      ],
      "end_point": [
        662,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"2\"",
        "\"0\"",
        "\"6\"",
        "\"5\"",
        "\"0\"",
        "\"24\"",
        "\"60\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"1\"",
        "\"3\"",
        "\"1\"",
        "\"4\"",
        "\"1\"",
        "\"5\"",
        "\"1\"",
        "\"0\"",
        "\"3\"",
        "\"0\"",
        "\"5\"",
        "\"0\"",
        "\"7\"",
        "\"0\"",
        "\"9\"",
        "\"0\"",
        "\"11\"",
        "\"0\"",
        "\"13\"",
        "\"0\"",
        "\"15\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"3\"",
        "\"1\"",
        "\"5\"",
        "\"1\"",
        "\"7\"",
        "\"1\"",
        "\"9\"",
        "\"1\"",
        "\"11\"",
        "\"-1\"",
        "\"1\"",
        "\"-1\"",
        "\"3\"",
        "\"-1\"",
        "\"5\"",
        "\"-1\"",
        "\"7\"",
        "\"-1\"",
        "\"9\"",
        "\"-1\"",
        "\"11\"",
        "\"-1\"",
        "\"13\"",
        "\"-1\"",
        "\"15\"",
        "\"-1\"",
        "\"17\"",
        "\"-1\"",
        "\"19\"",
        "\"2\"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"2\"",
        "\"5\"",
        "\"2\"",
        "\"7\"",
        "\"2\"",
        "\"9\"",
        "\"2\"",
        "\"11\"",
        "\"2\"",
        "\"13\"",
        "\"2\"",
        "\"15\"",
        "\"2\"",
        "\"17\"",
        "\"-2\"",
        "\"1\"",
        "\"-2\"",
        "\"3\"",
        "\"-2\"",
        "\"5\"",
        "\"-2\"",
        "\"7\"",
        "\"-2\"",
        "\"9\"",
        "\"-2\"",
        "\"11\"",
        "\"-2\"",
        "\"13\"",
        "\"-2\"",
        "\"15\"",
        "\"-2\"",
        "\"17\"",
        "\"3\"",
        "\"2\"",
        "\"5\"",
        "\"2\"",
        "\"7\"",
        "\"2\"",
        "\"9\"",
        "\"2\"",
        "\"11\"",
        "\"2\"",
        "\"2\"",
        "\"135\"",
        "\"135\"",
        "\"19\"",
        "\"2\"",
        "\"19\"",
        "\"19\"",
        "\"135\"",
        "\"173\"",
        "\"135\"",
        "\"38\"",
        "\"135\"",
        "\"135\"",
        "\"173\"",
        "\"173\"",
        "\"5\"",
        "\"3\"",
        "\"5\"",
        "\"5\"",
        "\"173\"",
        "\"173\"",
        "\"3\"",
        "\"2\"",
        "\"3\"",
        "\"3\"",
        "\"173\"",
        "\"253\"",
        "\"21\"",
        "\"1\"",
        "\"21\"",
        "\"21\"",
        "\"253\"",
        "\"21\"",
        "\"11\"",
        "\"-1\"",
        "\"11\"",
        "\"-1\"",
        "\"17\"",
        "\"2\"",
        "\"17\"",
        "\"-2\"",
        "\"17\"",
        "\"-1\"",
        "\"89\"",
        "\"2\"",
        "\"89\"",
        "\"89\"",
        "\"11\"",
        "\"1\"",
        "\"11\"",
        "\"89\"",
        "\"3\"",
        "\"2\"",
        "\"3\"",
        "\"3\"",
        "\"89\"",
        "\"11\"",
        "\"89\"",
        "\"33\"",
        "\"89\"",
        "\"1\"",
        "\"19\"",
        "\"4\"",
        "\"19\"",
        "\"5\"",
        "\"19\"",
        "\"6\"",
        "\"19\"",
        "\"7\"",
        "\"19\"",
        "\"9\"",
        "\"19\"",
        "\"11\"",
        "\"19\"",
        "\"16\"",
        "\"19\"",
        "\"17\"",
        "\"19\"",
        "\"2\"",
        "\"19\"",
        "\"3\"",
        "\"19\"",
        "\"8\"",
        "\"19\"",
        "\"10\"",
        "\"19\"",
        "\"12\"",
        "\"19\"",
        "\"13\"",
        "\"19\"",
        "\"14\"",
        "\"19\"",
        "\"15\"",
        "\"19\"",
        "\"18\"",
        "\"19\"",
        "\"0\"",
        "\"13\"",
        "\"1\"",
        "\"13\"",
        "\"2\"",
        "\"13\"",
        "\"3\"",
        "\"13\"",
        "\"4\"",
        "\"13\"",
        "\"5\"",
        "\"13\"",
        "\"6\"",
        "\"13\"",
        "\"7\"",
        "\"13\"",
        "\"8\"",
        "\"13\"",
        "\"9\"",
        "\"13\"",
        "\"10\"",
        "\"13\"",
        "\"11\"",
        "\"13\"",
        "\"12\"",
        "\"13\"",
        "\"5\"",
        "\"7\"",
        "\"15\"",
        "\"17\"",
        "\"67\"",
        "\"89\"",
        "\"0x10000000000000000000000000000000000000000000000001\"",
        "\"0x10000000000000000000000000000000000000000000000003\"",
        "\"0x43900000000\"",
        "\"0x42400000439\"",
        "\"0x4390000000000000000\"",
        "\"0x4240000000000000439\"",
        "\"198158408161039063\"",
        "\"198158360916398807\"",
        "\"37200210845139167613356125645445281805\"",
        "\"451716845976689892447895811408978421929\"",
        "\"67674091930576781943923596701346271058970643542491743605048620644676477275152701774960868941561652032482173612421015\"",
        "\"4902678867794567120224500687210807069172039735\"",
        "\"2666617146103764067061017961903284334497474492754652499788571378062969111250584288683585223600172138551198546085281683283672592\"",
        "\"2666617146103764067061017961903284334497474492754652499788571378062969111250584288683585223600172138551198546085281683290481773\"",
        "\"804609\"",
        "\"421248363205206617296534688032638102314410556521742428832362659824\"",
        "\"4190209\"",
        "\"2239744742177804210557442048984321017460028974602978995388383905961079286530650825925074203175536427000\"",
        "\"17311973299000934401\"",
        "\"1675975991242824637446753124775689449936871337036614677577044717424700351103148799107651171694863695242089956242888229458836426332300124417011114380886016\"",
        "\"3220569220116583677\"",
        "\"41859917623035396746\"",
        "\"37200210845139167613356125645445281805\"",
        "\"340116213441272389607827434472642576514\"",
        "\"74400421690278335226712251290890563610\"",
        "\"451716845976689892447895811408978421929\""
      ]
    },
    "check_squares_zi": {
      "start_point": [
        667,
        0
      ],
      "end_point": [
        709,
        1
      ],
      "strings": []
    },
    "check_a_zero": {
      "start_point": [
        714,
        0
      ],
      "end_point": [
        748,
        1
      ],
      "strings": []
    },
    "ref_jacobi": {
      "start_point": [
        752,
        0
      ],
      "end_point": [
        769,
        1
      ],
      "strings": []
    },
    "check_jacobi_factored": {
      "start_point": [
        771,
        0
      ],
      "end_point": [
        844,
        1
      ],
      "strings": []
    },
    "check_large_quotients": {
      "start_point": [
        875,
        0
      ],
      "end_point": [
        983,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        985,
        0
      ],
      "end_point": [
        1011,
        1
      ],
      "strings": [
        "\"-p\"",
        "\"\\\ntry(a,b,answer) =\\n\\\n{\\n\\\n  if (kronecker(a,b) != answer,\\n\\\n    print(\\\"wrong at \\\", a, \\\",\\\", b,\\n\\\n      \\\" expected \\\", answer,\\n\\\n      \\\" pari says \\\", kronecker(a,b)))\\n\\\n}\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-lcm.c": {
    "check_all": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"mpz_lcm wrong, inplace=%d\\n\"",
        "\"x\"",
        "\"y\"",
        "\"got\"",
        "\"want\"",
        "\"mpz_lcm_ui wrong, inplace=%d\\n\"",
        "\"yu=%lu\\n\""
      ]
    },
    "check_primes": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-limbs.c": {
    "alt_add": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "check_funcs": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"%s failed, abits %u, bbits %u\\n\"",
        "\"a = %Zx\\n\"",
        "\"b = %Zx\\n\"",
        "\"r = %Zx (bad)\\n\"",
        "\"ref = %Zx\\n\""
      ]
    },
    "check_add": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"add\""
      ]
    },
    "alt_mul": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "check_mul": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"mul\""
      ]
    },
    "check_roinit": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": [
        "\"MPZ_ROINIT_N failed\\n\"",
        "\"a = %Zx\\n\"",
        "\"b = %Zx\\n\"",
        "\"r = %Zx (bad)\\n\"",
        "\"ref = %Zx\\n\"",
        "\"mpz_roinit_n failed\\n\"",
        "\"a = %Zx\\n\"",
        "\"b = %Zx\\n\"",
        "\"r = %Zx (bad)\\n\"",
        "\"ref = %Zx\\n\""
      ]
    },
    "main": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-lucnum_ui.c": {
    "check_sequence": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": [
        "\"mpz_lucnum2_ui(%lu) wrong\\n\"",
        "\"want ln \"",
        "\"got  ln \"",
        "\"want ln1\"",
        "\"got  ln1\"",
        "\"mpz_lucnum_ui(%lu) wrong\\n\"",
        "\"want ln\"",
        "\"got  ln\""
      ]
    },
    "main": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-mfac_uiui.c": {
    "main": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": [
        "\"mpz_mfac_uiui(%lu,%d) wrong\\n\"",
        "\"  got  \"",
        "\"\\n\"",
        "\"  want \"",
        "\"\\n\"",
        "\"mpz_mfac_uiui(%lu,%d) wrong\\n\"",
        "\"  got  \"",
        "\"\\n\"",
        "\"  want \"",
        "\"\\n\"",
        "\"mpz_mfac_uiui(%lu,1) wrong\\n\"",
        "\"  got  \"",
        "\"\\n\"",
        "\"  want \"",
        "\"\\n\"",
        "\"mpz_mfac_uiui(%lu,1) wrong\\n\"",
        "\"  got  \"",
        "\"\\n\"",
        "\"  want \"",
        "\"\\n\"",
        "\"mpz_mfac_uiui(%lu,2) wrong\\n\"",
        "\"  got  \"",
        "\"\\n\"",
        "\"  want \"",
        "\"\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-mul.c": {
    "one": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"incorrect plain product\"",
        "\"incorrect square product\""
      ]
    },
    "main": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": [
        "\"GMP_CHECK_FFT\""
      ]
    },
    "refmpz_mul": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "dump_abort": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": [
        "\"ERROR: %s in test %d\\n\"",
        "\"op1          = \"",
        "\"op2          = \"",
        "\"    product  = \"",
        "\"ref_product  = \"",
        "\"ERRORS in %ld--%ld\\n\""
      ]
    },
    "debug_mp": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": [
        "\"%ZX...\"",
        "\"%025ZX [%d]\\n\"",
        "\"%ZX\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-mul_i.c": {
    "compare_si": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": [
        "\"mpz_mul_si wrong\\n\"",
        "\"  x\"",
        "\"  y=%ld (0x%lX)\\n\"",
        "\"  got \"",
        "\"  want\""
      ]
    },
    "compare_ui": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": [
        "\"mpz_mul_ui wrong\\n\"",
        "\"  x\"",
        "\"  y=%lu (0x%lX)\\n\"",
        "\"  got \"",
        "\"  want\""
      ]
    },
    "check_samples": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-nextprime.c": {
    "refmpz_nextprime": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "run": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"diff list discrepancy\\n\"",
        "\"got  %Zx\\n\"",
        "\"want %Zx\\n\""
      ]
    },
    "main": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"2\"",
        "\"0x1ef7\"",
        "\"3\"",
        "\"0x1ef7\"",
        "\"0x8a43866f5776ccd5b02186e90d28946aeb0ed914\"",
        "\"0x8a43866f5776ccd5b02186e90d28946aeb0eeec5\"",
        "\"0x10000000000000000000000000000000000000\"",
        "\"0x100000000000000000000000000000000010ab\"",
        "\"0x1c2c26be55317530311facb648ea06b359b969715db83292ab8cf898d8b1b\"",
        "\"0x1c2c26be55317530311facb648ea06b359b969715db83292ab8cf898da957\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-oddeven.c": {
    "check_data": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\"",
        "\"-4\"",
        "\"-3\"",
        "\"-2\"",
        "\"-1\"",
        "\"0x1000000000000000000000000000000000000000000000000000\"",
        "\"0x1000000000000000000000000000000000000000000000000001\"",
        "\"0x1000000000000000000000000000000000000000000000000002\"",
        "\"0x1000000000000000000000000000000000000000000000000003\"",
        "\"-0x1000000000000000000000000000000000000000000000000004\"",
        "\"-0x1000000000000000000000000000000000000000000000000003\"",
        "\"-0x1000000000000000000000000000000000000000000000000002\"",
        "\"-0x1000000000000000000000000000000000000000000000000001\"",
        "\"mpz_odd_p wrong on data[%d]\\n\"",
        "\"mpz_even_p wrong on data[%d]\\n\""
      ]
    },
    "main": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-perfpow.c": {
    "check_tests": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": [
        "\"mpz_perfect_power_p returns %d when %d was expected\\n\"",
        "\"fault operand: %s\\n\""
      ]
    },
    "check_random": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": [
        "\"n is a perfect power, perfpow_p disagrees\\n\"",
        "\"n = %Zu\\nprimes[0] = %Zu\\nexp[0] = %lu\\n\"",
        "\"n = %Zu\\n\"",
        "\"n is now a prime number, but perfpow_p still believes n is a perfect power\\n\"",
        "\"n = %Zu\\nn was destroyed, but perfpow_p still believes n is a perfect power\\n\"",
        "\"n = %Zu\\nn is a perfect power, perfpow_p disagrees\\n\""
      ]
    },
    "main": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-perfsqr.c": {
    "check_modulo": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": [
        "\"mpz_perfect_square_p got 0, want 1\\n\"",
        "\"  n\""
      ]
    },
    "check_sqrt": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": [
        "\"mpz_perfect_square_p and mpz_sqrt differ\\n\"",
        "\"   x  \"",
        "\"   x2 \"",
        "\"   x2t\"",
        "\"   mpz_perfect_square_p %d\\n\"",
        "\"   mpz_sqrt             %d\\n\""
      ]
    },
    "main": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-popcount.c": {
    "check_onebit": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": [
        "\"mpz_popcount wrong on single bit at %lu\\n\"",
        "\"   got %lu, want 1\\n\""
      ]
    },
    "check_data": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": [
        "\"-1\"",
        "\"-12345678\"",
        "\"0\"",
        "\"1\"",
        "\"3\"",
        "\"5\"",
        "\"0xFFFF\"",
        "\"0xFFFFFFFF\"",
        "\"0xFFFFFFFFFFFFFFFF\"",
        "\"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"",
        "\"mpz_popcount wrong at data[%d]\\n\"",
        "\"   n     \\\"%s\\\"\\n\"",
        "\"         \"",
        "\"\\n\"",
        "\"         0x\"",
        "\"\\n\"",
        "\"   got   %lu\\n\"",
        "\"   want  %lu\\n\""
      ]
    },
    "refmpz_popcount": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "check_random": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": [
        "\"mpz_popcount wrong on random\\n\"",
        "\"         \"",
        "\"\\n\"",
        "\"         0x\"",
        "\"\\n\"",
        "\"   got   %lu\\n\"",
        "\"   want  %lu\\n\""
      ]
    },
    "main": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-pow.c": {
    "check_one": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": [
        "\"mpz_pow_ui wrong\\n\"",
        "\"  base\"",
        "\"  exp = %lu (0x%lX)\\n\"",
        "\"  got \"",
        "\"  want\"",
        "\"mpz_pow_ui wrong\\n\"",
        "\"  base\"",
        "\"  exp = %lu (0x%lX)\\n\"",
        "\"  got \"",
        "\"  want\"",
        "\"mpz_ui_pow_ui wrong\\n\"",
        "\"  base=%lu (0x%lX)\\n\"",
        "\"  exp = %lu (0x%lX)\\n\"",
        "\"  got \"",
        "\"  want\""
      ]
    },
    "check_base": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "check_various": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": [
        "\"0\"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\"",
        "\"5\"",
        "\"6\"",
        "\"10\"",
        "\"15\"",
        "\"16\"",
        "\"0x1F\"",
        "\"0xFF\"",
        "\"0x1001\"",
        "\"0xFFFF\"",
        "\"0x10000001\"",
        "\"0x1000000000000001\"",
        "\"0xFFFFFFFF\"",
        "\"0xFFFFFFFFFFFFFFFF\"",
        "\"0xFFFFFFFF0\"",
        "\"0xFFFFFFFF00\"",
        "\"0xFFFFFFFFFFFFFFFF0\"",
        "\"0xFFFFFFFFFFFFFFFF00\"",
        "\"0x180000000\"",
        "\"0x18000000000000000\"",
        "\"0x18000000100000000\"",
        "\"0x180000000000000010000000000000000\"",
        "\"-0x80000000\"",
        "\"-0x8000000000000000\"",
        "\"0x3000000000000000300000000000000030000000000000000\""
      ]
    },
    "check_random": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-powm.c": {
    "allsizes_seen": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": [
        "\"\\nIncorrect results in test %d for operands:\\n\"",
        "\"mpz_powm result:\\n\"",
        "\"reference result:\\n\"",
        "\"\\nIncorrect results in test %d for operands:\\n\"",
        "\"mpz_powm_sec result:\\n\"",
        "\"reference result:\\n\""
      ]
    },
    "debug_mp": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-powm_ui.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"B = 0x%Zx\\n\"",
        "\"M = 0x%Zx\\n\"",
        "\"R   = 0x%Zx\\n\"",
        "\"REF = 0x%Zx\\n\"",
        "\"\\ntest %d: Incorrect results for operands:\\n\"",
        "\"B = 0x%Zx\\n\"",
        "\"E = 0x%Zx\\n\"",
        "\"M = 0x%Zx\\n\"",
        "\"R   = 0x%Zx\\n\"",
        "\"REF = 0x%Zx\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-pprime_p.c": {
    "isprime": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "check_one": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": [
        "\"mpz_probab_prime_p\\n\"",
        "\"  n    \"",
        "\"  got =%d\"",
        "\"  want=%d\""
      ]
    },
    "check_pn": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "check_small": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "check_composites": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    },
    "check_primes": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": [
        "\"2\"",
        "\"17\"",
        "\"65537\"",
        "\"0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1\"",
        "\"29024E088A67CC74020BBEA63B139B22514A08798E3404DD\"",
        "\"EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245\"",
        "\"E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED\"",
        "\"EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE65381\"",
        "\"FFFFFFFFFFFFFFFF\""
      ]
    },
    "main": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-primorial_ui.c": {
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"mpz_primorial_ui(%lu) wrong\\n\"",
        "\"  got  \"",
        "\"\\n\"",
        "\"  want \"",
        "\"\\n\""
      ]
    },
    "isprime": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-remove.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"ERROR after %d tests\\n\"",
        "\"refpower = %lu\\n\"",
        "\"   power = %lu\\n\"",
        "\"    op1 = \"",
        "\"    op2 = \"",
        "\"refdest = \"",
        "\"   dest = \""
      ]
    },
    "mpz_refremove": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    },
    "debug_mp": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": [
        "\"%ZX...\"",
        "\"%025ZX [%d]\\n\"",
        "\"%ZX\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-root.c": {
    "check_one": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"ERROR after test %d\\n\"",
        "\"nth: %lu ,res: %i\\n\"",
        "\"ERROR in mpz_perfect_power_p after test %d\\n\"",
        "\"nth: %lu\\n\"",
        "\"ERROR after test %d\\n\"",
        "\"nth: %lu\\n\""
      ]
    },
    "main": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": [
        "\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000000000000000000000000000000000000000000000000000002\""
      ]
    },
    "debug_mp": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-scan.c": {
    "refmpz_scan": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "refmpz_scan0": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "refmpz_scan1": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "check_ref": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"wrong at test=%d, size=%ld, neg=%d, start=%lu, sought=%d\\n\"",
        "\"   z 0x\"",
        "\"\\n\"",
        "\"   got=%lu, want=%lu\\n\""
      ]
    },
    "main": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-set_d.c": {
    "check_data": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": [
        "\"mpz_set_d wrong on data[%d]\\n\"",
        "\"  d  \"",
        "\"  got  size %ld\\n\"",
        "\"  want size %ld\\n\"",
        "\"  got  z\"",
        "\"  want z\"",
        "\"mpz_init_set_d wrong on data[%d]\\n\""
      ]
    },
    "check_2n_plus_1": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"mpz_set_d wrong on 2^%d+1\\n\"",
        "\"  d \"",
        "\"  got  \"",
        "\"  want \""
      ]
    },
    "main": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-set_f.c": {
    "check_one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": [
        "\"wrong result\\n\"",
        "\"  shift  %d\\n\"",
        "\"  neg    %d\\n\"",
        "\"     f\"",
        "\"   got\"",
        "\"  want\""
      ]
    },
    "check_various": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-set_si.c": {
    "check_data": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": [
        "\"mpz_set_si wrong on data[%d]\\n\"",
        "\"mpz_init_set_si wrong on data[%d]\\n\""
      ]
    },
    "main": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-set_str.c": {
    "check_one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"mpz_set_str unexpectedly failed\\n\"",
        "\"  base %d\\n\"",
        "\"  str  \\\"%s\\\"\\n\"",
        "\"mpz_set_str wrong\\n\"",
        "\"  base %d\\n\"",
        "\"  str  \\\"%s\\\"\\n\"",
        "\"got \"",
        "\"want\""
      ]
    },
    "check_samples": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": [
        "\"0 \"",
        "\" 0 0 0 \"",
        "\" -0B 0 \"",
        "\"  0X 0 \"",
        "\"0 \"",
        "\"-0   \"",
        "\" 0 000 000    \"",
        "\"123 \"",
        "\"123    \"",
        "\"0173   \"",
        "\" 0b 1 11 10 11  \"",
        "\" 0x 7b \"",
        "\"0x7B\"",
        "\"123 \"",
        "\"123    \"",
        "\" 123 \"",
        "\"  123    \"",
        "\"  0000123 \"",
        "\"  123    \"",
        "\"1%\"",
        "\"3!\"",
        "\"0123456789\"",
        "\"13579BDF\"",
        "\"0b0102\"",
        "\"0x010G\"",
        "\"0x010G\"",
        "\"0x010G\""
      ]
    },
    "main": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-sizeinbase.c": {
    "mpz_fake_bits": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "check_sample": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": [
        "\"mpz_sizeinbase\\n\"",
        "\"  base    %d\\n\"",
        "\"  totbits %lu\\n\"",
        "\"  got     %u\\n\"",
        "\"  want    %u\\n\""
      ]
    },
    "main": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-sqrtrem.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "dump_abort": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"ERROR\\n\"",
        "\"x2        = \"",
        "\"x         = \"",
        "\"remainder = \""
      ]
    },
    "debug_mp": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-tdiv.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    },
    "dump_abort": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": [
        "\"ERROR\\n\"",
        "\"dividend = \"",
        "\"divisor  = \""
      ]
    },
    "debug_mp": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/mpz/t-tdiv_ui.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": [
        "\"quotients from mpz_tdiv_qr_ui and mpz_tdiv_q_ui differ\"",
        "\"remainders from mpz_tdiv_qr_ui and mpz_tdiv_r_ui differ\"",
        "\"quotient sign wrong\"",
        "\"remainder sign wrong\"",
        "\"n mod d != n - [n/d]*d\"",
        "\"remainder greater than divisor\"",
        "\"remainder returned from mpz_tdiv_qr_ui is wrong\"",
        "\"remainder returned from mpz_tdiv_q_ui is wrong\"",
        "\"remainder returned from mpz_tdiv_r_ui is wrong\"",
        "\"remainder returned from mpz_tdiv_ui is wrong\""
      ]
    },
    "dump_abort": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"ERROR: %s\\n\"",
        "\"dividend = \"",
        "\"divisor  = %lX\\n\""
      ]
    },
    "debug_mp": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/rand/findlc.c": {
    "sh_status": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": [
        "\"sh_status: signal %d caught. dumping status.\\n\"",
        "\"  a = \"",
        "\"\\n\""
      ]
    },
    "mpz_true_random": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": [
        "\"/dev/random\"",
        "\"r\"",
        "\"%d random bits\\n\""
      ]
    },
    "main": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": [
        "\"usage: findlc [-dv] m2exp [low_merit [high_merit]]\\n\"",
        "\"a:di:hv\"",
        "\"signal (SIGSEGV)\"",
        "\"signal (SIGHUP)\"",
        "\"findlc: version: %s\\n\"",
        "\"m = 0x\"",
        "\"\"",
        "\"low_merit = \"",
        "\"; high_merit = \"",
        "\"\\n\"",
        "\"\"",
        "\"best (v_lose=%d; m_lose=%d): \"",
        "\"\"",
        "\"best (v_lose=%d; m_lose=%d): \"",
        "\"\"",
        "\"done.\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/rand/gen.c": {},
  "gmp/gmp-6.1.2/tests/rand/gmpstat.h": {},
  "gmp/gmp-6.1.2/tests/rand/spect.c": {
    "main": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": [
        "\"usage: spect [-d] a m n\\n\"",
        "\"dh\"",
        "\"%d: v = \"",
        "\" (^2 = \"",
        "\")\"",
        "\" m = \"",
        "\"\\t*** v too low ***\"",
        "\"\\t*** merit too low ***\"",
        "\"\""
      ]
    },
    "debug_foo": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/rand/stat.c": {
    "print_ks_results": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"%.4f (%.0f%%)\\t\"",
        "\"%.4f (%.0f%%)\\n\""
      ]
    },
    "print_x2_table": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": [
        "\"Chi-square table for v=%u\\n\"",
        "\"1%%\\t5%%\\t25%%\\t50%%\\t75%%\\t95%%\\t99%%\\n\"",
        "\"%.2f\\t\"",
        "\"\\n\""
      ]
    },
    "Pks": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "f_freq": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": [
        "\"stat: malloc failure\\n\"",
        "\"\\nEquidistribution/Frequency test on real numbers (0<=X<1):\\n\"",
        "\"\\tKp\\t\\tKm\\n\"",
        "\"Kp:\\t\"",
        "\"Km:\\t\""
      ]
    },
    "z_freq": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": [
        "\"\\nEquidistribution/Frequency test on integers (0<=X<=%u):\\n\"",
        "\"V = %.2f (n = %lu)\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/rand/statlib.c": {
    "ks": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": [
        "\"j=%lu \"",
        "\"P()=\"",
        "\"\\t\"",
        "\"jnq=\"",
        "\" \"",
        "\"diff=\"",
        "\" \"",
        "\"Kp=\"",
        "\"\\t\"",
        "\"jnq=\"",
        "\" \"",
        "\"diff=\"",
        "\" \"",
        "\"Km=\"",
        "\" \"",
        "\"\\n\""
      ]
    },
    "ks_table": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    },
    "x2_table": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        212,
        1
      ],
      "strings": []
    },
    "P": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    },
    "mpf_freqt": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": []
    },
    "x2": {
      "start_point": [
        244,
        0
      ],
      "end_point": [
        283,
        1
      ],
      "strings": [
        "\"%u: P()=\"",
        "\"\\tV=\"",
        "\"\\t\"",
        "\"\\n\""
      ]
    },
    "Pzf": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        292,
        1
      ],
      "strings": []
    },
    "mpz_freqt": {
      "start_point": [
        309,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": [
        "\"mpz_freqt(): out of memory\\n\"",
        "\"mpz_freqt(): warning: input insanity: %u, \"",
        "\"ignored.\\n\"",
        "\"counts:\\n\"",
        "\"%u:\\t%lu\\n\""
      ]
    },
    "foo_debug": {
      "start_point": [
        362,
        0
      ],
      "end_point": [
        372,
        1
      ],
      "strings": []
    },
    "merit": {
      "start_point": [
        377,
        0
      ],
      "end_point": [
        427,
        1
      ],
      "strings": [
        "\"spect (merit): can't calculate merit for dimensions > 6\\n\""
      ]
    },
    "merit_u": {
      "start_point": [
        429,
        0
      ],
      "end_point": [
        440,
        1
      ],
      "strings": []
    },
    "f_floor": {
      "start_point": [
        443,
        0
      ],
      "end_point": [
        455,
        1
      ],
      "strings": []
    },
    "vz_dot": {
      "start_point": [
        461,
        0
      ],
      "end_point": [
        475,
        1
      ],
      "strings": []
    },
    "spectral_test": {
      "start_point": [
        477,
        0
      ],
      "end_point": [
        836,
        1
      ],
      "strings": [
        "\"***BUG***: h*pp - hp*p = \"",
        "\"\\n\"",
        "\"hp = \"",
        "\"\\nh = \"",
        "\"\\n\"",
        "\"q = \"",
        "\"\\n\"",
        "\"(t, k, j, q1, q2, ...)\\n\"",
        "\"(%u, %u, %u\"",
        "\", \"",
        "\", #\"",
        "\", *\"",
        "\")\\n\"",
        "\"searching...\"",
        "\"X[%u] = \"",
        "\"\\tZ[%u] = \"",
        "\"\\n\"",
        "\"done.\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/rand/t-iset.c": {
    "check_one": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"gmp_randinit_set didn't duplicate randstate\\n\"",
        "\"  algorithm: %s\\n\"",
        "\"  from src:  %#Zx\\n\"",
        "\"  from dst:  %#Zx\\n\""
      ]
    },
    "main": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/rand/t-lc2exp.c": {
    "check_zero": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"check_zero m2exp=%lu: didn't get zero\\n\"",
        "\"  rand=%#Zx\\n\""
      ]
    },
    "check_nega": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"check_nega m2exp=%lu: didn't get zero\\n\""
      ]
    },
    "check_bigc": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"check_bigc: mpz_urandomb out of range\\n\"",
        "\"   m2exp=%lu\\n\"",
        "\"   rand=%#ZX\\n\"",
        "\"   sizeinbase2=%u\\n\""
      ]
    },
    "check_bigc1": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"check_bigc1: mpz_urandomb didn't give 1\\n\"",
        "\"   m2exp=%lu\\n\"",
        "\"   got rand=%#ZX\\n\""
      ]
    },
    "check_bigm": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "check_bigs": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/rand/t-mt.c": {
    "chk_default_seed": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": [
        "\"Default seed fails in iteration %d\\n\""
      ]
    },
    "main": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/rand/t-rand.c": {
    "main": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": [
        "\"\\\nusage: t-rand [function nbits]\\n\\\n  function is one of z, f\\n\\\n  nbits is number of bits\\n\\\n\"",
        "\"%s: verifying random numbers: \"",
        "\"z%d: \"",
        "\" should be \"",
        "\"\"",
        "\"z%d \"",
        "\"f%d: \"",
        "\" should be \"",
        "\"\"",
        "\"f%d \"",
        "\"\"",
        "\"char *z%d[ENTS] = {\"",
        "\"\\\"\"",
        "\"\\\"\"",
        "\", \"",
        "\"};\\n\"",
        "\"  {z%d, %d},\\n\"",
        "\"char *f%d[ENTS] = {\"",
        "\"\\\"\"",
        "\"\\\"\"",
        "\", \"",
        "\"};\\n\"",
        "\"  {f%d, %d},\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tests/rand/t-urbui.c": {
    "check_one": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"Return value out of range:\\n\"",
        "\"  algorithm: %s\\n\"",
        "\"  bits:  %lu\\n\"",
        "\"  limit: %#lx\\n\"",
        "\"  got:   %#lx\\n\""
      ]
    },
    "main": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/rand/t-urmui.c": {
    "check_one": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": [
        "\"Return value out of range:\\n\"",
        "\"  algorithm: %s\\n\"",
        "\"  n:     %#lx\\n\"",
        "\"  got:   %#lx\\n\""
      ]
    },
    "main": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/rand/t-urndmm.c": {
    "check_params": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": [
        "\"mpz_urandomm != mpz_urandomb\\n\"",
        "\"mpz_urandomm returns %Zd instead of 2\\n\"",
        "\"Out-of-range or non-positive value: %Zd\\n\"",
        "\"Out-of-range or non-positive value (from negative modulus): %Zd\\n\"",
        "\"mpz_urandomm fails with m=1 (result=%Zd)\\n\""
      ]
    },
    "main": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tests/rand/zdiv_round.c": {
    "zdiv_round": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tune/common.c": {
    "pentium_wbinvd": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"/dev/wbinvd\"",
        "\"open /dev/wbinvd\""
      ]
    },
    "double_cmp_ptr": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "speed_measure": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": [
        "\"size=%ld reps=%u r=%Md attempt=%d  %.9f\\n\"",
        "\"Fatal error: too many (%d) failed measurements (0.0)\\n\"",
        "\"Fatal error: new reps bad: %.2f\\n\"",
        "\"  (old reps %u, unittime %.4g, precision %d, t[i] %.4g)\\n\"",
        "\"speed_measure() could not get %d results within %.1f%%\\n\"",
        "\"    unsorted         sorted\\n\"",
        "\"  %.12f    %.12f    is about 0.5%%\\n\"",
        "\"  %.09f       %.09f\\n\""
      ]
    },
    "mpn_cache_fill": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        257,
        1
      ],
      "strings": []
    },
    "mpn_cache_fill_write": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        275,
        1
      ],
      "strings": []
    },
    "speed_operand_src": {
      "start_point": [
        278,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": [
        "\"speed_operand_src: no room left in s->src[]\\n\""
      ]
    },
    "speed_operand_dst": {
      "start_point": [
        292,
        0
      ],
      "end_point": [
        303,
        1
      ],
      "strings": [
        "\"speed_operand_dst: no room left in s->dst[]\\n\""
      ]
    },
    "speed_cache_fill": {
      "start_point": [
        306,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": [
        "\"dst\"",
        "\" %08lX\"",
        "\" \"",
        "\"src\"",
        "\" %08lX\"",
        "\" \"",
        "\"  (cf sp approx %08lX)\\n\""
      ]
    },
    "speed_option_set": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        390,
        1
      ],
      "strings": [
        "\"addrs\"",
        "\"verbose\"",
        "\"verbose=%d\"",
        "\"cycles-broken\"",
        "\"Unrecognised -o option: %s\\n\""
      ]
    },
    "speed_MPN_COPY": {
      "start_point": [
        436,
        0
      ],
      "end_point": [
        440,
        1
      ],
      "strings": []
    },
    "speed_MPN_COPY_INCR": {
      "start_point": [
        441,
        0
      ],
      "end_point": [
        445,
        1
      ],
      "strings": []
    },
    "speed_MPN_COPY_DECR": {
      "start_point": [
        446,
        0
      ],
      "end_point": [
        450,
        1
      ],
      "strings": []
    },
    "speed_mpn_copyi": {
      "start_point": [
        452,
        0
      ],
      "end_point": [
        456,
        1
      ],
      "strings": []
    },
    "speed_mpn_copyd": {
      "start_point": [
        459,
        0
      ],
      "end_point": [
        463,
        1
      ],
      "strings": []
    },
    "speed_memcpy": {
      "start_point": [
        465,
        0
      ],
      "end_point": [
        469,
        1
      ],
      "strings": []
    },
    "speed_mpn_com": {
      "start_point": [
        470,
        0
      ],
      "end_point": [
        474,
        1
      ],
      "strings": []
    },
    "speed_mpn_neg": {
      "start_point": [
        475,
        0
      ],
      "end_point": [
        479,
        1
      ],
      "strings": []
    },
    "speed_mpn_sec_tabselect": {
      "start_point": [
        480,
        0
      ],
      "end_point": [
        484,
        1
      ],
      "strings": []
    },
    "speed_mpn_addmul_1": {
      "start_point": [
        487,
        0
      ],
      "end_point": [
        491,
        1
      ],
      "strings": []
    },
    "speed_mpn_submul_1": {
      "start_point": [
        492,
        0
      ],
      "end_point": [
        496,
        1
      ],
      "strings": []
    },
    "speed_mpn_addmul_2": {
      "start_point": [
        499,
        0
      ],
      "end_point": [
        503,
        1
      ],
      "strings": []
    },
    "speed_mpn_addmul_3": {
      "start_point": [
        506,
        0
      ],
      "end_point": [
        510,
        1
      ],
      "strings": []
    },
    "speed_mpn_addmul_4": {
      "start_point": [
        513,
        0
      ],
      "end_point": [
        517,
        1
      ],
      "strings": []
    },
    "speed_mpn_addmul_5": {
      "start_point": [
        520,
        0
      ],
      "end_point": [
        524,
        1
      ],
      "strings": []
    },
    "speed_mpn_addmul_6": {
      "start_point": [
        527,
        0
      ],
      "end_point": [
        531,
        1
      ],
      "strings": []
    },
    "speed_mpn_addmul_7": {
      "start_point": [
        534,
        0
      ],
      "end_point": [
        538,
        1
      ],
      "strings": []
    },
    "speed_mpn_addmul_8": {
      "start_point": [
        541,
        0
      ],
      "end_point": [
        545,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_1": {
      "start_point": [
        548,
        0
      ],
      "end_point": [
        552,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_1_inplace": {
      "start_point": [
        553,
        0
      ],
      "end_point": [
        557,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_2": {
      "start_point": [
        560,
        0
      ],
      "end_point": [
        564,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_3": {
      "start_point": [
        567,
        0
      ],
      "end_point": [
        571,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_4": {
      "start_point": [
        574,
        0
      ],
      "end_point": [
        578,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_5": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        585,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_6": {
      "start_point": [
        588,
        0
      ],
      "end_point": [
        592,
        1
      ],
      "strings": []
    },
    "speed_mpn_lshift": {
      "start_point": [
        596,
        0
      ],
      "end_point": [
        600,
        1
      ],
      "strings": []
    },
    "speed_mpn_lshiftc": {
      "start_point": [
        601,
        0
      ],
      "end_point": [
        605,
        1
      ],
      "strings": []
    },
    "speed_mpn_rshift": {
      "start_point": [
        606,
        0
      ],
      "end_point": [
        610,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_1": {
      "start_point": [
        616,
        0
      ],
      "end_point": [
        620,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_1f": {
      "start_point": [
        621,
        0
      ],
      "end_point": [
        625,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_1c": {
      "start_point": [
        627,
        0
      ],
      "end_point": [
        631,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_1cf": {
      "start_point": [
        632,
        0
      ],
      "end_point": [
        636,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_1_div": {
      "start_point": [
        639,
        0
      ],
      "end_point": [
        643,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_1f_div": {
      "start_point": [
        644,
        0
      ],
      "end_point": [
        648,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_1_inv": {
      "start_point": [
        649,
        0
      ],
      "end_point": [
        653,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_1f_inv": {
      "start_point": [
        654,
        0
      ],
      "end_point": [
        658,
        1
      ],
      "strings": []
    },
    "speed_mpn_mod_1_div": {
      "start_point": [
        659,
        0
      ],
      "end_point": [
        663,
        1
      ],
      "strings": []
    },
    "speed_mpn_mod_1_inv": {
      "start_point": [
        664,
        0
      ],
      "end_point": [
        668,
        1
      ],
      "strings": []
    },
    "speed_mpn_preinv_divrem_1": {
      "start_point": [
        670,
        0
      ],
      "end_point": [
        674,
        1
      ],
      "strings": []
    },
    "speed_mpn_preinv_divrem_1f": {
      "start_point": [
        675,
        0
      ],
      "end_point": [
        679,
        1
      ],
      "strings": []
    },
    "speed_mpn_mod_34lsub1": {
      "start_point": [
        682,
        0
      ],
      "end_point": [
        686,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_2": {
      "start_point": [
        689,
        0
      ],
      "end_point": [
        693,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_2_div": {
      "start_point": [
        694,
        0
      ],
      "end_point": [
        698,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_2_inv": {
      "start_point": [
        699,
        0
      ],
      "end_point": [
        703,
        1
      ],
      "strings": []
    },
    "speed_mpn_div_qr_1n_pi1": {
      "start_point": [
        705,
        0
      ],
      "end_point": [
        709,
        1
      ],
      "strings": []
    },
    "speed_mpn_div_qr_1n_pi1_1": {
      "start_point": [
        710,
        0
      ],
      "end_point": [
        714,
        1
      ],
      "strings": []
    },
    "speed_mpn_div_qr_1n_pi1_2": {
      "start_point": [
        715,
        0
      ],
      "end_point": [
        719,
        1
      ],
      "strings": []
    },
    "speed_mpn_div_qr_1": {
      "start_point": [
        721,
        0
      ],
      "end_point": [
        725,
        1
      ],
      "strings": []
    },
    "speed_mpn_div_qr_2n": {
      "start_point": [
        727,
        0
      ],
      "end_point": [
        731,
        1
      ],
      "strings": []
    },
    "speed_mpn_div_qr_2u": {
      "start_point": [
        732,
        0
      ],
      "end_point": [
        736,
        1
      ],
      "strings": []
    },
    "speed_mpn_mod_1": {
      "start_point": [
        738,
        0
      ],
      "end_point": [
        742,
        1
      ],
      "strings": []
    },
    "speed_mpn_mod_1c": {
      "start_point": [
        744,
        0
      ],
      "end_point": [
        748,
        1
      ],
      "strings": []
    },
    "speed_mpn_preinv_mod_1": {
      "start_point": [
        750,
        0
      ],
      "end_point": [
        754,
        1
      ],
      "strings": []
    },
    "speed_mpn_mod_1_1": {
      "start_point": [
        755,
        0
      ],
      "end_point": [
        759,
        1
      ],
      "strings": []
    },
    "speed_mpn_mod_1_1_1": {
      "start_point": [
        760,
        0
      ],
      "end_point": [
        764,
        1
      ],
      "strings": []
    },
    "speed_mpn_mod_1_1_2": {
      "start_point": [
        765,
        0
      ],
      "end_point": [
        769,
        1
      ],
      "strings": []
    },
    "speed_mpn_mod_1_2": {
      "start_point": [
        770,
        0
      ],
      "end_point": [
        774,
        1
      ],
      "strings": []
    },
    "speed_mpn_mod_1_3": {
      "start_point": [
        775,
        0
      ],
      "end_point": [
        779,
        1
      ],
      "strings": []
    },
    "speed_mpn_mod_1_4": {
      "start_point": [
        780,
        0
      ],
      "end_point": [
        784,
        1
      ],
      "strings": []
    },
    "speed_mpn_divexact_1": {
      "start_point": [
        786,
        0
      ],
      "end_point": [
        790,
        1
      ],
      "strings": []
    },
    "speed_mpn_divexact_by3": {
      "start_point": [
        792,
        0
      ],
      "end_point": [
        796,
        1
      ],
      "strings": []
    },
    "speed_mpn_bdiv_dbm1c": {
      "start_point": [
        798,
        0
      ],
      "end_point": [
        802,
        1
      ],
      "strings": []
    },
    "speed_mpn_bdiv_q_1": {
      "start_point": [
        804,
        0
      ],
      "end_point": [
        808,
        1
      ],
      "strings": []
    },
    "speed_mpn_pi1_bdiv_q_1": {
      "start_point": [
        810,
        0
      ],
      "end_point": [
        814,
        1
      ],
      "strings": []
    },
    "speed_mpn_modexact_1_odd": {
      "start_point": [
        817,
        0
      ],
      "end_point": [
        821,
        1
      ],
      "strings": []
    },
    "speed_mpn_modexact_1c_odd": {
      "start_point": [
        824,
        0
      ],
      "end_point": [
        828,
        1
      ],
      "strings": []
    },
    "speed_mpz_mod": {
      "start_point": [
        830,
        0
      ],
      "end_point": [
        834,
        1
      ],
      "strings": []
    },
    "speed_mpn_sbpi1_div_qr": {
      "start_point": [
        836,
        0
      ],
      "end_point": [
        840,
        1
      ],
      "strings": []
    },
    "speed_mpn_dcpi1_div_qr": {
      "start_point": [
        841,
        0
      ],
      "end_point": [
        845,
        1
      ],
      "strings": []
    },
    "speed_mpn_sbpi1_divappr_q": {
      "start_point": [
        846,
        0
      ],
      "end_point": [
        850,
        1
      ],
      "strings": []
    },
    "speed_mpn_dcpi1_divappr_q": {
      "start_point": [
        851,
        0
      ],
      "end_point": [
        855,
        1
      ],
      "strings": []
    },
    "speed_mpn_mu_div_qr": {
      "start_point": [
        856,
        0
      ],
      "end_point": [
        860,
        1
      ],
      "strings": []
    },
    "speed_mpn_mu_divappr_q": {
      "start_point": [
        861,
        0
      ],
      "end_point": [
        865,
        1
      ],
      "strings": []
    },
    "speed_mpn_mu_div_q": {
      "start_point": [
        866,
        0
      ],
      "end_point": [
        870,
        1
      ],
      "strings": []
    },
    "speed_mpn_mupi_div_qr": {
      "start_point": [
        871,
        0
      ],
      "end_point": [
        875,
        1
      ],
      "strings": []
    },
    "speed_mpn_sbpi1_bdiv_qr": {
      "start_point": [
        877,
        0
      ],
      "end_point": [
        881,
        1
      ],
      "strings": []
    },
    "speed_mpn_dcpi1_bdiv_qr": {
      "start_point": [
        882,
        0
      ],
      "end_point": [
        886,
        1
      ],
      "strings": []
    },
    "speed_mpn_sbpi1_bdiv_q": {
      "start_point": [
        887,
        0
      ],
      "end_point": [
        891,
        1
      ],
      "strings": []
    },
    "speed_mpn_dcpi1_bdiv_q": {
      "start_point": [
        892,
        0
      ],
      "end_point": [
        896,
        1
      ],
      "strings": []
    },
    "speed_mpn_mu_bdiv_q": {
      "start_point": [
        897,
        0
      ],
      "end_point": [
        901,
        1
      ],
      "strings": []
    },
    "speed_mpn_mu_bdiv_qr": {
      "start_point": [
        902,
        0
      ],
      "end_point": [
        906,
        1
      ],
      "strings": []
    },
    "speed_mpn_broot": {
      "start_point": [
        908,
        0
      ],
      "end_point": [
        912,
        1
      ],
      "strings": []
    },
    "speed_mpn_broot_invm1": {
      "start_point": [
        913,
        0
      ],
      "end_point": [
        917,
        1
      ],
      "strings": []
    },
    "speed_mpn_brootinv": {
      "start_point": [
        918,
        0
      ],
      "end_point": [
        922,
        1
      ],
      "strings": []
    },
    "speed_mpn_binvert": {
      "start_point": [
        924,
        0
      ],
      "end_point": [
        928,
        1
      ],
      "strings": []
    },
    "speed_mpn_invert": {
      "start_point": [
        930,
        0
      ],
      "end_point": [
        934,
        1
      ],
      "strings": []
    },
    "speed_mpn_invertappr": {
      "start_point": [
        936,
        0
      ],
      "end_point": [
        940,
        1
      ],
      "strings": []
    },
    "speed_mpn_ni_invertappr": {
      "start_point": [
        942,
        0
      ],
      "end_point": [
        946,
        1
      ],
      "strings": []
    },
    "speed_mpn_sec_invert": {
      "start_point": [
        948,
        0
      ],
      "end_point": [
        952,
        1
      ],
      "strings": []
    },
    "speed_mpn_redc_1": {
      "start_point": [
        954,
        0
      ],
      "end_point": [
        958,
        1
      ],
      "strings": []
    },
    "speed_mpn_redc_2": {
      "start_point": [
        959,
        0
      ],
      "end_point": [
        963,
        1
      ],
      "strings": []
    },
    "speed_mpn_redc_n": {
      "start_point": [
        964,
        0
      ],
      "end_point": [
        968,
        1
      ],
      "strings": []
    },
    "speed_mpn_popcount": {
      "start_point": [
        971,
        0
      ],
      "end_point": [
        975,
        1
      ],
      "strings": []
    },
    "speed_mpn_hamdist": {
      "start_point": [
        976,
        0
      ],
      "end_point": [
        980,
        1
      ],
      "strings": []
    },
    "speed_mpn_add_n": {
      "start_point": [
        983,
        0
      ],
      "end_point": [
        987,
        1
      ],
      "strings": []
    },
    "speed_mpn_sub_n": {
      "start_point": [
        988,
        0
      ],
      "end_point": [
        992,
        1
      ],
      "strings": []
    },
    "speed_mpn_add_1": {
      "start_point": [
        993,
        0
      ],
      "end_point": [
        997,
        1
      ],
      "strings": []
    },
    "speed_mpn_add_1_inplace": {
      "start_point": [
        998,
        0
      ],
      "end_point": [
        1002,
        1
      ],
      "strings": []
    },
    "speed_mpn_sub_1": {
      "start_point": [
        1003,
        0
      ],
      "end_point": [
        1007,
        1
      ],
      "strings": []
    },
    "speed_mpn_sub_1_inplace": {
      "start_point": [
        1008,
        0
      ],
      "end_point": [
        1012,
        1
      ],
      "strings": []
    },
    "speed_mpn_add_err1_n": {
      "start_point": [
        1014,
        0
      ],
      "end_point": [
        1018,
        1
      ],
      "strings": []
    },
    "speed_mpn_sub_err1_n": {
      "start_point": [
        1019,
        0
      ],
      "end_point": [
        1023,
        1
      ],
      "strings": []
    },
    "speed_mpn_add_err2_n": {
      "start_point": [
        1024,
        0
      ],
      "end_point": [
        1028,
        1
      ],
      "strings": []
    },
    "speed_mpn_sub_err2_n": {
      "start_point": [
        1029,
        0
      ],
      "end_point": [
        1033,
        1
      ],
      "strings": []
    },
    "speed_mpn_add_err3_n": {
      "start_point": [
        1034,
        0
      ],
      "end_point": [
        1038,
        1
      ],
      "strings": []
    },
    "speed_mpn_sub_err3_n": {
      "start_point": [
        1039,
        0
      ],
      "end_point": [
        1043,
        1
      ],
      "strings": []
    },
    "speed_mpn_add_n_sub_n": {
      "start_point": [
        1047,
        0
      ],
      "end_point": [
        1051,
        1
      ],
      "strings": []
    },
    "speed_mpn_addlsh1_n": {
      "start_point": [
        1055,
        0
      ],
      "end_point": [
        1059,
        1
      ],
      "strings": []
    },
    "speed_mpn_sublsh1_n": {
      "start_point": [
        1062,
        0
      ],
      "end_point": [
        1066,
        1
      ],
      "strings": []
    },
    "speed_mpn_addlsh1_n_ip1": {
      "start_point": [
        1069,
        0
      ],
      "end_point": [
        1073,
        1
      ],
      "strings": []
    },
    "speed_mpn_addlsh1_n_ip2": {
      "start_point": [
        1076,
        0
      ],
      "end_point": [
        1080,
        1
      ],
      "strings": []
    },
    "speed_mpn_sublsh1_n_ip1": {
      "start_point": [
        1083,
        0
      ],
      "end_point": [
        1087,
        1
      ],
      "strings": []
    },
    "speed_mpn_rsblsh1_n": {
      "start_point": [
        1090,
        0
      ],
      "end_point": [
        1094,
        1
      ],
      "strings": []
    },
    "speed_mpn_addlsh2_n": {
      "start_point": [
        1097,
        0
      ],
      "end_point": [
        1101,
        1
      ],
      "strings": []
    },
    "speed_mpn_sublsh2_n": {
      "start_point": [
        1104,
        0
      ],
      "end_point": [
        1108,
        1
      ],
      "strings": []
    },
    "speed_mpn_addlsh2_n_ip1": {
      "start_point": [
        1111,
        0
      ],
      "end_point": [
        1115,
        1
      ],
      "strings": []
    },
    "speed_mpn_addlsh2_n_ip2": {
      "start_point": [
        1118,
        0
      ],
      "end_point": [
        1122,
        1
      ],
      "strings": []
    },
    "speed_mpn_sublsh2_n_ip1": {
      "start_point": [
        1125,
        0
      ],
      "end_point": [
        1129,
        1
      ],
      "strings": []
    },
    "speed_mpn_rsblsh2_n": {
      "start_point": [
        1132,
        0
      ],
      "end_point": [
        1136,
        1
      ],
      "strings": []
    },
    "speed_mpn_addlsh_n": {
      "start_point": [
        1139,
        0
      ],
      "end_point": [
        1143,
        1
      ],
      "strings": []
    },
    "speed_mpn_sublsh_n": {
      "start_point": [
        1146,
        0
      ],
      "end_point": [
        1150,
        1
      ],
      "strings": []
    },
    "speed_mpn_addlsh_n_ip1": {
      "start_point": [
        1153,
        0
      ],
      "end_point": [
        1157,
        1
      ],
      "strings": []
    },
    "speed_mpn_addlsh_n_ip2": {
      "start_point": [
        1160,
        0
      ],
      "end_point": [
        1164,
        1
      ],
      "strings": []
    },
    "speed_mpn_sublsh_n_ip1": {
      "start_point": [
        1167,
        0
      ],
      "end_point": [
        1171,
        1
      ],
      "strings": []
    },
    "speed_mpn_rsblsh_n": {
      "start_point": [
        1174,
        0
      ],
      "end_point": [
        1178,
        1
      ],
      "strings": []
    },
    "speed_mpn_rsh1add_n": {
      "start_point": [
        1181,
        0
      ],
      "end_point": [
        1185,
        1
      ],
      "strings": []
    },
    "speed_mpn_rsh1sub_n": {
      "start_point": [
        1188,
        0
      ],
      "end_point": [
        1192,
        1
      ],
      "strings": []
    },
    "speed_mpn_cnd_add_n": {
      "start_point": [
        1195,
        0
      ],
      "end_point": [
        1199,
        1
      ],
      "strings": []
    },
    "speed_mpn_cnd_sub_n": {
      "start_point": [
        1200,
        0
      ],
      "end_point": [
        1204,
        1
      ],
      "strings": []
    },
    "speed_mpn_and_n": {
      "start_point": [
        1208,
        0
      ],
      "end_point": [
        1212,
        1
      ],
      "strings": []
    },
    "speed_mpn_andn_n": {
      "start_point": [
        1213,
        0
      ],
      "end_point": [
        1217,
        1
      ],
      "strings": []
    },
    "speed_mpn_nand_n": {
      "start_point": [
        1218,
        0
      ],
      "end_point": [
        1222,
        1
      ],
      "strings": []
    },
    "speed_mpn_ior_n": {
      "start_point": [
        1223,
        0
      ],
      "end_point": [
        1227,
        1
      ],
      "strings": []
    },
    "speed_mpn_iorn_n": {
      "start_point": [
        1228,
        0
      ],
      "end_point": [
        1232,
        1
      ],
      "strings": []
    },
    "speed_mpn_nior_n": {
      "start_point": [
        1233,
        0
      ],
      "end_point": [
        1237,
        1
      ],
      "strings": []
    },
    "speed_mpn_xor_n": {
      "start_point": [
        1238,
        0
      ],
      "end_point": [
        1242,
        1
      ],
      "strings": []
    },
    "speed_mpn_xnor_n": {
      "start_point": [
        1243,
        0
      ],
      "end_point": [
        1247,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_n": {
      "start_point": [
        1250,
        0
      ],
      "end_point": [
        1254,
        1
      ],
      "strings": []
    },
    "speed_mpn_sqr": {
      "start_point": [
        1255,
        0
      ],
      "end_point": [
        1259,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_n_sqr": {
      "start_point": [
        1260,
        0
      ],
      "end_point": [
        1264,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_basecase": {
      "start_point": [
        1266,
        0
      ],
      "end_point": [
        1270,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul": {
      "start_point": [
        1271,
        0
      ],
      "end_point": [
        1275,
        1
      ],
      "strings": []
    },
    "speed_mpn_sqr_basecase": {
      "start_point": [
        1276,
        0
      ],
      "end_point": [
        1281,
        1
      ],
      "strings": []
    },
    "speed_mpn_sqr_diagonal": {
      "start_point": [
        1284,
        0
      ],
      "end_point": [
        1288,
        1
      ],
      "strings": []
    },
    "speed_mpn_sqr_diag_addlsh1": {
      "start_point": [
        1292,
        0
      ],
      "end_point": [
        1296,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom2_sqr": {
      "start_point": [
        1299,
        0
      ],
      "end_point": [
        1303,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom3_sqr": {
      "start_point": [
        1304,
        0
      ],
      "end_point": [
        1308,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom4_sqr": {
      "start_point": [
        1309,
        0
      ],
      "end_point": [
        1313,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom6_sqr": {
      "start_point": [
        1314,
        0
      ],
      "end_point": [
        1318,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom8_sqr": {
      "start_point": [
        1319,
        0
      ],
      "end_point": [
        1323,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom22_mul": {
      "start_point": [
        1324,
        0
      ],
      "end_point": [
        1328,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom33_mul": {
      "start_point": [
        1329,
        0
      ],
      "end_point": [
        1333,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom44_mul": {
      "start_point": [
        1334,
        0
      ],
      "end_point": [
        1338,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom6h_mul": {
      "start_point": [
        1339,
        0
      ],
      "end_point": [
        1343,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom8h_mul": {
      "start_point": [
        1344,
        0
      ],
      "end_point": [
        1348,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom32_mul": {
      "start_point": [
        1350,
        0
      ],
      "end_point": [
        1354,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom42_mul": {
      "start_point": [
        1355,
        0
      ],
      "end_point": [
        1359,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom43_mul": {
      "start_point": [
        1360,
        0
      ],
      "end_point": [
        1364,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom63_mul": {
      "start_point": [
        1365,
        0
      ],
      "end_point": [
        1369,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom32_for_toom43_mul": {
      "start_point": [
        1370,
        0
      ],
      "end_point": [
        1374,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom43_for_toom32_mul": {
      "start_point": [
        1375,
        0
      ],
      "end_point": [
        1379,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom32_for_toom53_mul": {
      "start_point": [
        1380,
        0
      ],
      "end_point": [
        1384,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom53_for_toom32_mul": {
      "start_point": [
        1385,
        0
      ],
      "end_point": [
        1389,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom42_for_toom53_mul": {
      "start_point": [
        1390,
        0
      ],
      "end_point": [
        1394,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom53_for_toom42_mul": {
      "start_point": [
        1395,
        0
      ],
      "end_point": [
        1399,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom43_for_toom54_mul": {
      "start_point": [
        1400,
        0
      ],
      "end_point": [
        1404,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom54_for_toom43_mul": {
      "start_point": [
        1405,
        0
      ],
      "end_point": [
        1409,
        1
      ],
      "strings": []
    },
    "speed_mpn_nussbaumer_mul": {
      "start_point": [
        1411,
        0
      ],
      "end_point": [
        1416,
        1
      ],
      "strings": []
    },
    "speed_mpn_nussbaumer_mul_sqr": {
      "start_point": [
        1417,
        0
      ],
      "end_point": [
        1422,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_fft_full": {
      "start_point": [
        1425,
        0
      ],
      "end_point": [
        1430,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_fft_full_sqr": {
      "start_point": [
        1431,
        0
      ],
      "end_point": [
        1436,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_fft": {
      "start_point": [
        1480,
        0
      ],
      "end_point": [
        1485,
        1
      ],
      "strings": []
    },
    "speed_mpn_mul_fft_sqr": {
      "start_point": [
        1487,
        0
      ],
      "end_point": [
        1492,
        1
      ],
      "strings": []
    },
    "speed_mpn_fft_mul": {
      "start_point": [
        1494,
        0
      ],
      "end_point": [
        1498,
        1
      ],
      "strings": []
    },
    "speed_mpn_fft_sqr": {
      "start_point": [
        1500,
        0
      ],
      "end_point": [
        1504,
        1
      ],
      "strings": []
    },
    "speed_mpn_sqrlo": {
      "start_point": [
        1506,
        0
      ],
      "end_point": [
        1510,
        1
      ],
      "strings": []
    },
    "speed_mpn_sqrlo_basecase": {
      "start_point": [
        1511,
        0
      ],
      "end_point": [
        1515,
        1
      ],
      "strings": []
    },
    "speed_mpn_mullo_n": {
      "start_point": [
        1516,
        0
      ],
      "end_point": [
        1520,
        1
      ],
      "strings": []
    },
    "speed_mpn_mullo_basecase": {
      "start_point": [
        1521,
        0
      ],
      "end_point": [
        1525,
        1
      ],
      "strings": []
    },
    "speed_mpn_mulmid_basecase": {
      "start_point": [
        1527,
        0
      ],
      "end_point": [
        1531,
        1
      ],
      "strings": []
    },
    "speed_mpn_mulmid": {
      "start_point": [
        1533,
        0
      ],
      "end_point": [
        1537,
        1
      ],
      "strings": []
    },
    "speed_mpn_mulmid_n": {
      "start_point": [
        1539,
        0
      ],
      "end_point": [
        1543,
        1
      ],
      "strings": []
    },
    "speed_mpn_toom42_mulmid": {
      "start_point": [
        1545,
        0
      ],
      "end_point": [
        1549,
        1
      ],
      "strings": []
    },
    "speed_mpn_mulmod_bnm1": {
      "start_point": [
        1551,
        0
      ],
      "end_point": [
        1555,
        1
      ],
      "strings": []
    },
    "speed_mpn_bc_mulmod_bnm1": {
      "start_point": [
        1557,
        0
      ],
      "end_point": [
        1561,
        1
      ],
      "strings": []
    },
    "speed_mpn_mulmod_bnm1_rounded": {
      "start_point": [
        1563,
        0
      ],
      "end_point": [
        1567,
        1
      ],
      "strings": []
    },
    "speed_mpn_sqrmod_bnm1": {
      "start_point": [
        1569,
        0
      ],
      "end_point": [
        1573,
        1
      ],
      "strings": []
    },
    "speed_mpn_matrix22_mul": {
      "start_point": [
        1575,
        0
      ],
      "end_point": [
        1626,
        1
      ],
      "strings": []
    },
    "speed_mpn_hgcd": {
      "start_point": [
        1628,
        0
      ],
      "end_point": [
        1632,
        1
      ],
      "strings": []
    },
    "speed_mpn_hgcd_lehmer": {
      "start_point": [
        1634,
        0
      ],
      "end_point": [
        1638,
        1
      ],
      "strings": []
    },
    "speed_mpn_hgcd_appr": {
      "start_point": [
        1640,
        0
      ],
      "end_point": [
        1644,
        1
      ],
      "strings": []
    },
    "speed_mpn_hgcd_appr_lehmer": {
      "start_point": [
        1646,
        0
      ],
      "end_point": [
        1650,
        1
      ],
      "strings": []
    },
    "speed_mpn_hgcd_reduce": {
      "start_point": [
        1652,
        0
      ],
      "end_point": [
        1656,
        1
      ],
      "strings": []
    },
    "speed_mpn_hgcd_reduce_1": {
      "start_point": [
        1657,
        0
      ],
      "end_point": [
        1661,
        1
      ],
      "strings": []
    },
    "speed_mpn_hgcd_reduce_2": {
      "start_point": [
        1662,
        0
      ],
      "end_point": [
        1666,
        1
      ],
      "strings": []
    },
    "speed_mpn_gcd": {
      "start_point": [
        1668,
        0
      ],
      "end_point": [
        1672,
        1
      ],
      "strings": []
    },
    "speed_mpn_gcdext": {
      "start_point": [
        1674,
        0
      ],
      "end_point": [
        1678,
        1
      ],
      "strings": []
    },
    "speed_mpn_gcdext_lehmer": {
      "start_point": [
        1680,
        0
      ],
      "end_point": [
        1684,
        1
      ],
      "strings": []
    },
    "speed_mpn_gcdext_single": {
      "start_point": [
        1686,
        0
      ],
      "end_point": [
        1690,
        1
      ],
      "strings": []
    },
    "speed_mpn_gcdext_double": {
      "start_point": [
        1691,
        0
      ],
      "end_point": [
        1695,
        1
      ],
      "strings": []
    },
    "speed_mpn_gcdext_one_single": {
      "start_point": [
        1696,
        0
      ],
      "end_point": [
        1700,
        1
      ],
      "strings": []
    },
    "speed_mpn_gcdext_one_double": {
      "start_point": [
        1701,
        0
      ],
      "end_point": [
        1705,
        1
      ],
      "strings": []
    },
    "speed_mpn_gcd_1": {
      "start_point": [
        1706,
        0
      ],
      "end_point": [
        1710,
        1
      ],
      "strings": []
    },
    "speed_mpn_gcd_1N": {
      "start_point": [
        1711,
        0
      ],
      "end_point": [
        1715,
        1
      ],
      "strings": []
    },
    "speed_mpz_jacobi": {
      "start_point": [
        1718,
        0
      ],
      "end_point": [
        1722,
        1
      ],
      "strings": []
    },
    "speed_mpn_jacobi_base": {
      "start_point": [
        1723,
        0
      ],
      "end_point": [
        1727,
        1
      ],
      "strings": []
    },
    "speed_mpn_jacobi_base_1": {
      "start_point": [
        1728,
        0
      ],
      "end_point": [
        1732,
        1
      ],
      "strings": []
    },
    "speed_mpn_jacobi_base_2": {
      "start_point": [
        1733,
        0
      ],
      "end_point": [
        1737,
        1
      ],
      "strings": []
    },
    "speed_mpn_jacobi_base_3": {
      "start_point": [
        1738,
        0
      ],
      "end_point": [
        1742,
        1
      ],
      "strings": []
    },
    "speed_mpn_jacobi_base_4": {
      "start_point": [
        1743,
        0
      ],
      "end_point": [
        1747,
        1
      ],
      "strings": []
    },
    "speed_mpn_sqrtrem": {
      "start_point": [
        1750,
        0
      ],
      "end_point": [
        1754,
        1
      ],
      "strings": []
    },
    "speed_mpn_sqrt": {
      "start_point": [
        1756,
        0
      ],
      "end_point": [
        1760,
        1
      ],
      "strings": []
    },
    "speed_mpn_rootrem": {
      "start_point": [
        1762,
        0
      ],
      "end_point": [
        1766,
        1
      ],
      "strings": []
    },
    "speed_mpn_root": {
      "start_point": [
        1768,
        0
      ],
      "end_point": [
        1772,
        1
      ],
      "strings": []
    },
    "speed_mpz_fac_ui": {
      "start_point": [
        1775,
        0
      ],
      "end_point": [
        1779,
        1
      ],
      "strings": []
    },
    "speed_mpz_2fac_ui": {
      "start_point": [
        1781,
        0
      ],
      "end_point": [
        1785,
        1
      ],
      "strings": []
    },
    "speed_mpn_fib2_ui": {
      "start_point": [
        1788,
        0
      ],
      "end_point": [
        1792,
        1
      ],
      "strings": []
    },
    "speed_mpz_fib_ui": {
      "start_point": [
        1793,
        0
      ],
      "end_point": [
        1797,
        1
      ],
      "strings": []
    },
    "speed_mpz_fib2_ui": {
      "start_point": [
        1798,
        0
      ],
      "end_point": [
        1802,
        1
      ],
      "strings": []
    },
    "speed_mpz_lucnum_ui": {
      "start_point": [
        1803,
        0
      ],
      "end_point": [
        1807,
        1
      ],
      "strings": []
    },
    "speed_mpz_lucnum2_ui": {
      "start_point": [
        1808,
        0
      ],
      "end_point": [
        1812,
        1
      ],
      "strings": []
    },
    "speed_mpz_powm": {
      "start_point": [
        1815,
        0
      ],
      "end_point": [
        1819,
        1
      ],
      "strings": []
    },
    "speed_mpz_powm_mod": {
      "start_point": [
        1820,
        0
      ],
      "end_point": [
        1824,
        1
      ],
      "strings": []
    },
    "speed_mpz_powm_redc": {
      "start_point": [
        1825,
        0
      ],
      "end_point": [
        1829,
        1
      ],
      "strings": []
    },
    "speed_mpz_powm_sec": {
      "start_point": [
        1830,
        0
      ],
      "end_point": [
        1834,
        1
      ],
      "strings": []
    },
    "speed_mpz_powm_ui": {
      "start_point": [
        1835,
        0
      ],
      "end_point": [
        1839,
        1
      ],
      "strings": []
    },
    "speed_binvert_limb": {
      "start_point": [
        1842,
        0
      ],
      "end_point": [
        1846,
        1
      ],
      "strings": []
    },
    "speed_noop": {
      "start_point": [
        1849,
        0
      ],
      "end_point": [
        1860,
        1
      ],
      "strings": []
    },
    "speed_noop_wxs": {
      "start_point": [
        1862,
        0
      ],
      "end_point": [
        1882,
        1
      ],
      "strings": []
    },
    "speed_noop_wxys": {
      "start_point": [
        1884,
        0
      ],
      "end_point": [
        1904,
        1
      ],
      "strings": []
    },
    "speed_malloc_free": {
      "start_point": [
        1928,
        0
      ],
      "end_point": [
        1935,
        1
      ],
      "strings": []
    },
    "speed_malloc_realloc_free": {
      "start_point": [
        1937,
        0
      ],
      "end_point": [
        1945,
        1
      ],
      "strings": []
    },
    "speed_gmp_allocate_free": {
      "start_point": [
        1947,
        0
      ],
      "end_point": [
        1954,
        1
      ],
      "strings": []
    },
    "speed_gmp_allocate_reallocate_free": {
      "start_point": [
        1956,
        0
      ],
      "end_point": [
        1965,
        1
      ],
      "strings": []
    },
    "speed_mpz_init_clear": {
      "start_point": [
        1967,
        0
      ],
      "end_point": [
        1973,
        1
      ],
      "strings": []
    },
    "speed_mpz_init_realloc_clear": {
      "start_point": [
        1975,
        0
      ],
      "end_point": [
        1982,
        1
      ],
      "strings": []
    },
    "speed_mpq_init_clear": {
      "start_point": [
        1984,
        0
      ],
      "end_point": [
        1990,
        1
      ],
      "strings": []
    },
    "speed_mpf_init_clear": {
      "start_point": [
        1992,
        0
      ],
      "end_point": [
        1998,
        1
      ],
      "strings": []
    },
    "speed_mpz_add": {
      "start_point": [
        2005,
        0
      ],
      "end_point": [
        2033,
        1
      ],
      "strings": []
    },
    "speed_mpz_bin_uiui": {
      "start_point": [
        2039,
        0
      ],
      "end_point": [
        2064,
        1
      ],
      "strings": []
    },
    "speed_mpz_bin_ui": {
      "start_point": [
        2069,
        0
      ],
      "end_point": [
        2099,
        1
      ],
      "strings": []
    },
    "speed_umul_ppmm": {
      "start_point": [
        2166,
        0
      ],
      "end_point": [
        2196,
        1
      ],
      "strings": []
    },
    "speed_mpn_umul_ppmm": {
      "start_point": [
        2200,
        0
      ],
      "end_point": [
        2230,
        1
      ],
      "strings": []
    },
    "speed_mpn_umul_ppmm_r": {
      "start_point": [
        2234,
        0
      ],
      "end_point": [
        2264,
        1
      ],
      "strings": []
    },
    "speed_udiv_qrnnd": {
      "start_point": [
        2333,
        0
      ],
      "end_point": [
        2350,
        1
      ],
      "strings": []
    },
    "speed_udiv_qrnnd_c": {
      "start_point": [
        2352,
        0
      ],
      "end_point": [
        2369,
        1
      ],
      "strings": []
    },
    "speed_mpn_udiv_qrnnd": {
      "start_point": [
        2372,
        0
      ],
      "end_point": [
        2389,
        1
      ],
      "strings": []
    },
    "speed_mpn_udiv_qrnnd_r": {
      "start_point": [
        2393,
        0
      ],
      "end_point": [
        2410,
        1
      ],
      "strings": []
    },
    "speed_invert_limb": {
      "start_point": [
        2414,
        0
      ],
      "end_point": [
        2418,
        1
      ],
      "strings": []
    },
    "speed_operator_div": {
      "start_point": [
        2423,
        0
      ],
      "end_point": [
        2462,
        1
      ],
      "strings": []
    },
    "speed_operator_mod": {
      "start_point": [
        2464,
        0
      ],
      "end_point": [
        2503,
        1
      ],
      "strings": []
    },
    "speed_routine_count_zeros_setup": {
      "start_point": [
        2513,
        0
      ],
      "end_point": [
        2563,
        1
      ],
      "strings": []
    },
    "speed_count_leading_zeros": {
      "start_point": [
        2565,
        0
      ],
      "end_point": [
        2577,
        1
      ],
      "strings": []
    },
    "speed_count_trailing_zeros": {
      "start_point": [
        2578,
        0
      ],
      "end_point": [
        2584,
        1
      ],
      "strings": []
    },
    "speed_mpn_get_str": {
      "start_point": [
        2587,
        0
      ],
      "end_point": [
        2591,
        1
      ],
      "strings": []
    },
    "speed_mpn_set_str": {
      "start_point": [
        2593,
        0
      ],
      "end_point": [
        2597,
        1
      ],
      "strings": []
    },
    "speed_mpn_bc_set_str": {
      "start_point": [
        2598,
        0
      ],
      "end_point": [
        2602,
        1
      ],
      "strings": []
    },
    "speed_MPN_ZERO": {
      "start_point": [
        2604,
        0
      ],
      "end_point": [
        2608,
        1
      ],
      "strings": []
    },
    "speed_randinit": {
      "start_point": [
        2611,
        0
      ],
      "end_point": [
        2623,
        1
      ],
      "strings": []
    },
    "speed_gmp_randseed": {
      "start_point": [
        2625,
        0
      ],
      "end_point": [
        2653,
        1
      ],
      "strings": []
    },
    "speed_gmp_randseed_ui": {
      "start_point": [
        2655,
        0
      ],
      "end_point": [
        2682,
        1
      ],
      "strings": []
    },
    "speed_mpz_urandomb": {
      "start_point": [
        2684,
        0
      ],
      "end_point": [
        2711,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tune/divrem1div.c": {},
  "gmp/gmp-6.1.2/tune/divrem1inv.c": {},
  "gmp/gmp-6.1.2/tune/divrem2div.c": {},
  "gmp/gmp-6.1.2/tune/divrem2inv.c": {},
  "gmp/gmp-6.1.2/tune/div_qr_1n_pi1_1.c": {},
  "gmp/gmp-6.1.2/tune/div_qr_1n_pi1_2.c": {},
  "gmp/gmp-6.1.2/tune/div_qr_1_tune.c": {},
  "gmp/gmp-6.1.2/tune/freq.c": {
    "freq_environment": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": [
        "\"environment variable GMP_CPU_FREQUENCY (in Hertz)\"",
        "\"GMP_CPU_FREQUENCY\"",
        "\"Using GMP_CPU_FREQUENCY %.2f for cycle time %.3g\\n\""
      ]
    },
    "freq_getsysinfo": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": [
        "\"getsysinfo() GSI_CPU_INFO\"",
        "\"Using getsysinfo() GSI_CPU_INFO %u for cycle time %.3g\\n\""
      ]
    },
    "freq_pstat_getprocessor": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": [
        "\"pstat_getprocessor() psp_iticksperclktick\"",
        "\"Using pstat_getprocessor() psp_iticksperclktick %lu and clk_tck %ld for cycle time %.3g\\n\""
      ]
    },
    "freq_sysctlbyname_i586_freq": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        254,
        1
      ],
      "strings": [
        "\"sysctlbyname() machdep.i586_freq\"",
        "\"machdep.i586_freq\"",
        "\"Using sysctlbyname() machdep.i586_freq %u for cycle time %.3g\\n\""
      ]
    },
    "freq_sysctlbyname_tsc_freq": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": [
        "\"sysctlbyname() machdep.tsc_freq\"",
        "\"machdep.tsc_freq\"",
        "\"Using sysctlbyname() machdep.tsc_freq %u for cycle time %.3g\\n\""
      ]
    },
    "freq_sysctl_hw_cpufrequency": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": [
        "\"sysctl() hw.cpufrequency\"",
        "\"Using sysctl() hw.cpufrequency %u for cycle time %.3g\\n\""
      ]
    },
    "freq_sysctl_hw_model": {
      "start_point": [
        321,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": [
        "\"sysctl() hw.model\"",
        "\"%u MHz%n\"",
        "\"Using sysctl() hw.model %u for cycle time %.3g\\n\""
      ]
    },
    "freq_proc_cpuinfo": {
      "start_point": [
        376,
        0
      ],
      "end_point": [
        430,
        1
      ],
      "strings": [
        "\"linux kernel /proc/cpuinfo file, cpu MHz or bogomips\"",
        "\"/proc/cpuinfo\"",
        "\"r\"",
        "\"cycle frequency [Hz]    : %lf\"",
        "\"Using /proc/cpuinfo \\\"cycle frequency\\\" %.2f for cycle time %.3g\\n\"",
        "\"cpu MHz : %lf\\n\"",
        "\"Using /proc/cpuinfo \\\"cpu MHz\\\" %.2f for cycle time %.3g\\n\"",
        "\"clock : %lfMHz\\n%n\"",
        "\"Using /proc/cpuinfo \\\"clock\\\" %.2f for cycle time %.3g\\n\"",
        "\"bogomips : %lf\\n\"",
        "\"BogoMIPS : %lf\\n\"",
        "\"Using /proc/cpuinfo \\\"bogomips\\\" %.2f for cycle time %.3g\\n\""
      ]
    },
    "freq_sunos_sysinfo": {
      "start_point": [
        435,
        0
      ],
      "end_point": [
        468,
        1
      ],
      "strings": [
        "\"SunOS /bin/sysinfo program output, cpu0\"",
        "\"(/bin/sysinfo) 2>/dev/null\"",
        "\"r\"",
        "\" cpu0 is a \\\"%lf MHz%n\"",
        "\"Using /bin/sysinfo \\\"cpu0 MHz\\\" %.2f for cycle time %.3g\\n\""
      ]
    },
    "freq_sco_etchw": {
      "start_point": [
        474,
        0
      ],
      "end_point": [
        508,
        1
      ],
      "strings": [
        "\"SCO /etc/hw program output\"",
        "\"(/etc/hw -r cpu) 2>/dev/null\"",
        "\"r\"",
        "\" The speed of the CPU is approximately %lfMHz%n\"",
        "\"Using /etc/hw %.2f MHz, for cycle time %.3g\\n\""
      ]
    },
    "freq_attr_get_invent": {
      "start_point": [
        518,
        0
      ],
      "end_point": [
        542,
        1
      ],
      "strings": [
        "\"attr_get(\\\"/hw/cpunum/0\\\") ic_cpu_info.cpufq\"",
        "\"/hw/cpunum/0\"",
        "\"Using attr_get(\\\"/hw/cpunum/0\\\") ic_cpu_info.cpufq %d MHz for cycle time %.3g\\n\""
      ]
    },
    "freq_bsd_dmesg": {
      "start_point": [
        559,
        0
      ],
      "end_point": [
        593,
        1
      ],
      "strings": [
        "\"BSD /var/run/dmesg.boot file\"",
        "\"/var/run/dmesg.boot\"",
        "\"r\"",
        "\"CPU:\"",
        "\"(%lf-MHz%n\"",
        "\"Using /var/run/dmesg.boot CPU: %.2f MHz for cycle time %.3g\\n\""
      ]
    },
    "freq_irix_hinv": {
      "start_point": [
        606,
        0
      ],
      "end_point": [
        644,
        1
      ],
      "strings": [
        "\"IRIX \\\"hinv -c processor\\\" output\"",
        "\"(hinv -c processor) 2>/dev/null\"",
        "\"r\"",
        "\"Processor 0: %lf MHZ%n\"",
        "\"Using hinv -c processor \\\"%.2f MHZ\\\" for cycle time %.3g\\n\"",
        "\"%d %lf MHZ%n\""
      ]
    },
    "freq_processor_info": {
      "start_point": [
        653,
        0
      ],
      "end_point": [
        690,
        1
      ],
      "strings": [
        "\"processor_info() pi_clock\"",
        "\"freq_processor_info(): There's more than one CPU and they have different clock speeds\\n\"",
        "\"Using processor_info() %d mhz for cycle time %.3g\\n\""
      ]
    },
    "freq_measure_gettimeofday_one": {
      "start_point": [
        694,
        0
      ],
      "end_point": [
        703,
        1
      ],
      "strings": [
        "\"gettimeofday\""
      ]
    },
    "freq_measure_getrusage_one": {
      "start_point": [
        707,
        0
      ],
      "end_point": [
        716,
        1
      ],
      "strings": [
        "\"getrusage\""
      ]
    },
    "freq_measure": {
      "start_point": [
        726,
        0
      ],
      "end_point": [
        751,
        1
      ],
      "strings": [
        "\"   t[%d] is %.6g\\n\""
      ]
    },
    "freq_measure_getrusage": {
      "start_point": [
        753,
        0
      ],
      "end_point": [
        779,
        1
      ],
      "strings": [
        "\"cycle counter measured with microsecond getrusage()\"",
        "\"getrusage\"",
        "\"Using getrusage() measured cycle counter %.4g (%.2f MHz)\\n\""
      ]
    },
    "freq_measure_gettimeofday": {
      "start_point": [
        781,
        0
      ],
      "end_point": [
        806,
        1
      ],
      "strings": [
        "\"cycle counter measured with microsecond gettimeofday()\"",
        "\"gettimeofday\"",
        "\"Using gettimeofday() measured cycle counter %.4g (%.2f MHz)\\n\""
      ]
    },
    "freq_all": {
      "start_point": [
        817,
        0
      ],
      "end_point": [
        844,
        1
      ],
      "strings": []
    },
    "speed_cycletime_init": {
      "start_point": [
        847,
        0
      ],
      "end_point": [
        861,
        1
      ],
      "strings": [
        "\"CPU frequency couldn't be determined\\n\""
      ]
    },
    "speed_cycletime_fail": {
      "start_point": [
        864,
        0
      ],
      "end_point": [
        872,
        1
      ],
      "strings": [
        "\"Measuring with: %s\\n\"",
        "\"%s,\\n\"",
        "\"but none of the following are available,\\n\""
      ]
    },
    "speed_cycletime_need_cycles": {
      "start_point": [
        878,
        0
      ],
      "end_point": [
        885,
        1
      ],
      "strings": [
        "\"Need to know CPU frequency to give times in cycles\""
      ]
    },
    "speed_cycletime_need_seconds": {
      "start_point": [
        886,
        0
      ],
      "end_point": [
        893,
        1
      ],
      "strings": [
        "\"Need to know CPU frequency to convert cycles to seconds\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tune/gcdextod.c": {},
  "gmp/gmp-6.1.2/tune/gcdextos.c": {},
  "gmp/gmp-6.1.2/tune/gcdext_double.c": {},
  "gmp/gmp-6.1.2/tune/gcdext_single.c": {},
  "gmp/gmp-6.1.2/tune/hgcd_appr_lehmer.c": {},
  "gmp/gmp-6.1.2/tune/hgcd_lehmer.c": {},
  "gmp/gmp-6.1.2/tune/hgcd_reduce_1.c": {},
  "gmp/gmp-6.1.2/tune/hgcd_reduce_2.c": {},
  "gmp/gmp-6.1.2/tune/jacbase1.c": {},
  "gmp/gmp-6.1.2/tune/jacbase2.c": {},
  "gmp/gmp-6.1.2/tune/jacbase3.c": {},
  "gmp/gmp-6.1.2/tune/jacbase4.c": {},
  "gmp/gmp-6.1.2/tune/modlinv.c": {
    "speed_binvert_limb_mul1": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "speed_binvert_limb_loop": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "speed_binvert_limb_cond": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "speed_binvert_limb_arith": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tune/mod_1_1-1.c": {},
  "gmp/gmp-6.1.2/tune/mod_1_1-2.c": {},
  "gmp/gmp-6.1.2/tune/mod_1_div.c": {},
  "gmp/gmp-6.1.2/tune/mod_1_inv.c": {},
  "gmp/gmp-6.1.2/tune/noop.c": {
    "noop": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "noop_1": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "noop_wxs": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "noop_wxys": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "mpn_cache_fill_dummy": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tune/powm_mod.c": {},
  "gmp/gmp-6.1.2/tune/powm_redc.c": {},
  "gmp/gmp-6.1.2/tune/pre_divrem_1.c": {},
  "gmp/gmp-6.1.2/tune/set_strb.c": {},
  "gmp/gmp-6.1.2/tune/set_strp.c": {
    "mpn_pre_set_str": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tune/set_strs.c": {},
  "gmp/gmp-6.1.2/tune/speed-ext.c": {
    "mean_calls": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "mean_open": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "mean_open2": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "speed_mean_calls": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": []
    },
    "speed_mean_open": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "speed_mean_open2": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": []
    }
  },
  "gmp/gmp-6.1.2/tune/speed.c": {
    "data_fill": {
      "start_point": [
        563,
        0
      ],
      "end_point": [
        590,
        1
      ],
      "strings": []
    },
    "run_one": {
      "start_point": [
        600,
        0
      ],
      "end_point": [
        773,
        1
      ],
      "strings": [
        "\"(#\"",
        "\" (\"",
        "\")\"",
        "\"#\"",
        "\" \"",
        "\"\"",
        "\"%-6ld \"",
        "\"  %.9e\"",
        "\"\\n\"",
        "\"%-6ld \"",
        "\" %*s\"",
        "\"n/a\"",
        "\"%s%.*f%s\"",
        "\" %*s\"",
        "\"\\n\""
      ]
    },
    "run_all": {
      "start_point": [
        775,
        0
      ],
      "end_point": [
        824,
        1
      ],
      "strings": []
    },
    "fopen_for_write": {
      "start_point": [
        827,
        0
      ],
      "end_point": [
        837,
        1
      ],
      "strings": [
        "\"w\"",
        "\"Cannot create %s\\n\""
      ]
    },
    "fclose_written": {
      "start_point": [
        839,
        0
      ],
      "end_point": [
        852,
        1
      ],
      "strings": [
        "\"Error writing %s\\n\""
      ]
    },
    "run_gnuplot": {
      "start_point": [
        855,
        0
      ],
      "end_point": [
        911,
        1
      ],
      "strings": [
        "\"%s.gnuplot\"",
        "\"%s.data\"",
        "\"# Generated with:\\n\"",
        "\"#\"",
        "\" %s\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"reset\\n\"",
        "\"set key left\\n\"",
        "\"set style data lines\\n\"",
        "\"plot \"",
        "\" \\\"%s\\\" using 1:%d\"",
        "\" title \\\"%s\\\"\"",
        "\", \\\\\"",
        "\"\\n\"",
        "\"load \\\"-\\\"\\n\""
      ]
    },
    "r_string": {
      "start_point": [
        921,
        0
      ],
      "end_point": [
        983,
        1
      ],
      "strings": [
        "\"aas\"",
        "\"Warning, r parameter %s truncated to %d bits\\n\"",
        "\"bits\"",
        "\"%ld bit parameter invalid (max %d bits)\\n\"",
        "\"ones\"",
        "\"%ld bit parameter invalid (max %d bits)\\n\"",
        "\"invalid r parameter: %s\\n\""
      ]
    },
    "routine_find": {
      "start_point": [
        986,
        0
      ],
      "end_point": [
        1049,
        1
      ],
      "strings": [
        "\"Choice %s bad: doesn't take a \\\".<r>\\\" parameter\\n\"",
        "\"Choice %s bad: needs a \\\".<r>\\\" parameter\\n\"",
        "\"Choice %s unrecognised\\n\""
      ]
    },
    "usage": {
      "start_point": [
        1052,
        0
      ],
      "end_point": [
        1116,
        1
      ],
      "strings": [
        "\"Usage: speed [-options] -s size <routine>...\\n\"",
        "\"Measure the speed of some routines.\\n\"",
        "\"Times are in seconds, accuracy is shown.\\n\"",
        "\"\\n\"",
        "\"   -p num     set precision as number of time units each routine must run\\n\"",
        "\"   -s size[-end][,size[-end]]...   sizes to measure\\n\"",
        "\"              single sizes or ranges, sep with comma or use multiple -s\\n\"",
        "\"   -t step    step through sizes by given amount\\n\"",
        "\"   -f factor  step through sizes by given factor (eg. 1.05)\\n\"",
        "\"   -r         show times as ratios of the first routine\\n\"",
        "\"   -d         show times as difference from the first routine\\n\"",
        "\"   -D         show times as difference from previous size shown\\n\"",
        "\"   -c         show times in CPU cycles\\n\"",
        "\"   -C         show times in cycles per limb\\n\"",
        "\"   -u         print resource usage (memory) at end\\n\"",
        "\"   -P name    output plot files \\\"name.gnuplot\\\" and \\\"name.data\\\"\\n\"",
        "\"   -a <type>  use given data: random(default), random2, zeros, aas, ffs, 2fd\\n\"",
        "\"   -x, -y, -w, -W <align>  specify data alignments, sources and dests\\n\"",
        "\"   -o addrs   print addresses of data blocks\\n\"",
        "\"\\n\"",
        "\"If both -t and -f are used, it means step by the factor or the step, whichever\\n\"",
        "\"is greater.\\n\"",
        "\"If both -C and -D are used, it means cycles per however many limbs between a\\n\"",
        "\"size and the previous size.\\n\"",
        "\"\\n\"",
        "\"After running with -P, plots can be viewed with Gnuplot or Quickplot.\\n\"",
        "\"\\\"gnuplot name.gnuplot\\\" (use \\\"set logscale xy; replot\\\" at the prompt for\\n\"",
        "\"a log/log plot).\\n\"",
        "\"\\\"quickplot -s name.data\\\" (has interactive zooming, and note -s is important\\n\"",
        "\"when viewing more than one routine, it means same axis scales for all data).\\n\"",
        "\"\\n\"",
        "\"The available routines are as follows.\\n\"",
        "\"\\n\"",
        "\"\\t%s.r\\n\"",
        "\"\\t%s (optional .r)\\n\"",
        "\"\\t%s\\n\"",
        "\"\\n\"",
        "\"Routines with a \\\".r\\\" need an extra parameter, for example mpn_lshift.6\\n\"",
        "\"r should be in decimal, or use 0xN for hexadecimal.\\n\"",
        "\"\\n\"",
        "\"Special forms for r are \\\"<N>bits\\\" for a random N bit number, \\\"<N>ones\\\" for\\n\"",
        "\"N one bits, or \\\"aas\\\" for 0xAA..AA.\\n\"",
        "\"\\n\"",
        "\"Times for sizes out of the range accepted by a routine are shown as 0.\\n\"",
        "\"The fastest routine at each size is marked with a # (free form output only).\\n\"",
        "\"\\n\"",
        "\"%s\"",
        "\"\\n\"",
        "\"Gnuplot home page http://www.gnuplot.info/\\n\"",
        "\"Quickplot home page http://quickplot.sourceforge.net/\\n\""
      ]
    },
    "check_align_option": {
      "start_point": [
        1118,
        0
      ],
      "end_point": [
        1129,
        1
      ],
      "strings": [
        "\"Alignment request out of range: %s %ld\\n\"",
        "\"  should be 0 to %d (limbs), inclusive\\n\""
      ]
    },
    "main": {
      "start_point": [
        1131,
        0
      ],
      "end_point": [
        1384,
        1
      ],
      "strings": [
        "\"a:CcDdEFf:o:p:P:rRs:t:ux:y:w:W:z\"",
        "\"random\"",
        "\"random2\"",
        "\"zeros\"",
        "\"aas\"",
        "\"ffs\"",
        "\"2fd\"",
        "\"unrecognised data option: %s\\n\"",
        "\"cannot use more than one of -c, -C\\n\"",
        "\"cannot use more than one of -d, -D, -r\\n\"",
        "\"-f factor must be > 1.0\\n\"",
        "\",\"",
        "\",\"",
        "\"%ld-%ld\"",
        "\"invalid size parameter: %s\\n\"",
        "\"-t step must be >= 1\\n\"",
        "\"-x\"",
        "\"-y\"",
        "\"-w\"",
        "\"-W\"",
        "\"-s <size> must be specified\\n\"",
        "\"WARNING, -d or -r does nothing when only one routine requested\\n\"",
        "\"overhead %.9f secs\"",
        "\"overhead %.2f cycles\"",
        "\", precision %d units of %.2e secs\"",
        "\", CPU freq unknown\\n\"",
        "\", CPU freq %.2f MHz\\n\"",
        "\"       \"",
        "\" %*s\"",
        "\"\\n\"",
        "\"getrusage\"",
        "\"getrusage(): utime %ld.%06ld data %ld stack %ld maxresident %ld\\n\"",
        "\"getrusage() not available\\n\"",
        "\"/proc/%d/status\"",
        "\"cat /proc/%d/status\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tune/speed.h": {},
  "gmp/gmp-6.1.2/tune/time.c": {
    "unittime_string": {
      "start_point": [
        420,
        0
      ],
      "end_point": [
        450,
        1
      ],
      "strings": [
        "\"ns\"",
        "\"us\"",
        "\"ms\"",
        "\"s\"",
        "\"%.*f%s\""
      ]
    },
    "cycles_works_handler": {
      "start_point": [
        455,
        0
      ],
      "end_point": [
        459,
        1
      ],
      "strings": []
    },
    "cycles_works_p": {
      "start_point": [
        461,
        0
      ],
      "end_point": [
        518,
        1
      ],
      "strings": [
        "\"cycles_works_p(): SIGILL not supported, assuming speed_cyclecounter() works\\n\"",
        "\"cycles_works_p(): SIGILL during speed_cyclecounter(), so doesn't work\\n\"",
        "\"cycles_works_p(): speed_cyclecounter() works\\n\"",
        "\"cycles_works_p(): SIGILL not defined, assuming speed_cyclecounter() works\\n\""
      ]
    },
    "clk_tck": {
      "start_point": [
        523,
        0
      ],
      "end_point": [
        552,
        1
      ],
      "strings": [
        "\"sysconf(_SC_CLK_TCK) is %ld per second\\n\"",
        "\"sysconf(_SC_CLK_TCK) not working, using CLK_TCK instead\\n\"",
        "\"CLK_TCK is %ld per second\\n\"",
        "\"CLK_TCK not defined, cannot continue\\n\""
      ]
    },
    "gettimeofday_microseconds_p": {
      "start_point": [
        637,
        0
      ],
      "end_point": [
        645,
        1
      ],
      "strings": [
        "\"gettimeofday\""
      ]
    },
    "getrusage_microseconds_p": {
      "start_point": [
        647,
        0
      ],
      "end_point": [
        655,
        1
      ],
      "strings": [
        "\"getrusage\""
      ]
    },
    "getrusage_backwards_p": {
      "start_point": [
        669,
        0
      ],
      "end_point": [
        713,
        1
      ],
      "strings": [
        "\"getrusage went backwards (attempt %d: %ld.%06ld -> %ld.%06ld)\\n\""
      ]
    },
    "cgt_works_p": {
      "start_point": [
        737,
        0
      ],
      "end_point": [
        818,
        1
      ],
      "strings": [
        "\"clock_gettime don't know what ID to use\\n\"",
        "\"clock_gettime id=%d error: %s\\n\"",
        "\"clock_getres id=%d error: %s\\n\"",
        "\"clock_gettime is %s accurate\\n\"",
        "\"clock_gettime id=%d error: %s\\n\"",
        "\"clock_gettime id=%d error: %s\\n\"",
        "\"delay loop of %d rounds took %s (according to clock_gettime)\\n\"",
        "\"clock_gettime id=%d not believable\\n\""
      ]
    },
    "freq_measure_mftb_one": {
      "start_point": [
        821,
        0
      ],
      "end_point": [
        830,
        1
      ],
      "strings": [
        "\"mftb\""
      ]
    },
    "mftb_works_handler": {
      "start_point": [
        835,
        0
      ],
      "end_point": [
        839,
        1
      ],
      "strings": []
    },
    "mftb_works_p": {
      "start_point": [
        841,
        0
      ],
      "end_point": [
        896,
        1
      ],
      "strings": [
        "\"mftb_works_p(): SIGILL not supported, assuming mftb works\\n\"",
        "\"mftb_works_p(): SIGILL during mftb, so doesn't work\\n\"",
        "\"mftb_works_p(): mftb works\\n\"",
        "\"mftb_works_p(): SIGILL not defined, assuming mftb works\\n\"",
        "\"mftb_works_p(): no gettimeofday available to measure mftb\\n\"",
        "\"mftb\"",
        "\"mftb_works_p(): cannot measure mftb period\\n\""
      ]
    },
    "sgi_works_p": {
      "start_point": [
        901,
        0
      ],
      "end_point": [
        986,
        1
      ],
      "strings": [
        "\"syssgi SGI_QUERY_CYCLECNTR error: %s\\n\"",
        "\"syssgi SGI_CYCLECNTR_SIZE error: %s\\n\"",
        "\"    will assume size==4\\n\"",
        "\"syssgi SGI_CYCLECNTR_SIZE gives %d, expected 32 or 64\\n\"",
        "\"/dev/mmem\"",
        "\"open /dev/mmem: %s\\n\"",
        "\"mmap /dev/mmem: %s\\n\""
      ]
    },
    "speed_time_init": {
      "start_point": [
        995,
        0
      ],
      "end_point": [
        1212,
        1
      ],
      "strings": [
        "\"CPU cycle counter\"",
        "\"CPU cycle counter, supplemented by microsecond getrusage()\"",
        "\"CPU cycle counter, supplemented by microsecond gettimeofday()\"",
        "\"CPU cycle counter, supplemented by %s clock tick getrusage()\"",
        "\"CPU cycle counter, supplemented by %s clock tick times()\"",
        "\"CPU cycle counter, supplemented by %s clock tick gettimeofday()\"",
        "\"WARNING: cycle counter is 32 bits and there's no other functions.\\n\"",
        "\"    Wraparounds may produce bad results on long measurements.\\n\"",
        "\"WARNING: requested precision can't always be achieved due to limited range\\n\"",
        "\"    cycle counter and limited precision supplemental method\\n\"",
        "\"    (%s)\\n\"",
        "\"STCK timestamp\"",
        "\"Need to know CPU frequency for effective stck unit\"",
        "\"mftb counter (%s)\"",
        "\"syssgi() mmap counter (%s), supplemented by millisecond getrusage()\"",
        "\"read_real_time() power nanoseconds\"",
        "\"%s read_real_time() powerpc ticks\"",
        "\"ERROR: Unrecognised timebasestruct_t flag=%d\\n\"",
        "\"microsecond accurate clock_gettime()\"",
        "\"microsecond accurate getrusage()\"",
        "\"microsecond accurate gettimeofday()\"",
        "\"%s clock tick times()\"",
        "\"%s clock tick getrusage()\\n\"",
        "\"%s clock tick gettimeofday()\"",
        "\"No time measuring method available\\n\"",
        "\"None of: speed_cyclecounter(), STCK(), getrusage(), gettimeofday(), times()\\n\"",
        "\"speed_time_init: %s\\n\"",
        "\"    speed_precision     %d\\n\"",
        "\"    speed_unittime      %.2g\\n\"",
        "\"    supplement_unittime %.2g\\n\"",
        "\"    use_tick_boundary   %d\\n\"",
        "\"    cycles_limit        %.2g seconds\\n\""
      ]
    },
    "grus_tick_boundary": {
      "start_point": [
        1219,
        0
      ],
      "end_point": [
        1227,
        1
      ],
      "strings": []
    },
    "gtod_tick_boundary": {
      "start_point": [
        1229,
        0
      ],
      "end_point": [
        1237,
        1
      ],
      "strings": []
    },
    "times_tick_boundary": {
      "start_point": [
        1239,
        0
      ],
      "end_point": [
        1247,
        1
      ],
      "strings": []
    },
    "speed_starttime": {
      "start_point": [
        1252,
        0
      ],
      "end_point": [
        1299,
        1
      ],
      "strings": []
    },
    "speed_cyclecounter_diff": {
      "start_point": [
        1311,
        0
      ],
      "end_point": [
        1328,
        1
      ],
      "strings": []
    },
    "speed_mftb_diff": {
      "start_point": [
        1331,
        0
      ],
      "end_point": [
        1341,
        1
      ],
      "strings": []
    },
    "timeval_diff_secs": {
      "start_point": [
        1366,
        0
      ],
      "end_point": [
        1370,
        1
      ],
      "strings": []
    },
    "rusage_diff_secs": {
      "start_point": [
        1372,
        0
      ],
      "end_point": [
        1376,
        1
      ],
      "strings": []
    },
    "timespec_diff_secs": {
      "start_point": [
        1378,
        0
      ],
      "end_point": [
        1382,
        1
      ],
      "strings": []
    },
    "timebasestruct_diff_secs": {
      "start_point": [
        1385,
        0
      ],
      "end_point": [
        1390,
        1
      ],
      "strings": []
    },
    "speed_endtime": {
      "start_point": [
        1393,
        0
      ],
      "end_point": [
        1596,
        1
      ],
      "strings": [
        "\"speed_endtime():\\n\"",
        "\"   cycles  0x%X,0x%X -> 0x%X,0x%X\\n\"",
        "\"   stck  0x%lX -> 0x%lX\\n\"",
        "\"   mftb  0x%X,%08X -> 0x%X,%08X\\n\"",
        "\"   sgi  0x%X -> 0x%X\\n\"",
        "\"   read_real_time  (%d)%u,%u -> (%d)%u,%u\\n\"",
        "\"   clock_gettime  %ld.%09ld -> %ld.%09ld\\n\"",
        "\"   gettimeofday  %ld.%06ld -> %ld.%06ld\\n\"",
        "\"   getrusage  %ld.%06ld -> %ld.%06ld\\n\"",
        "\"   times  %ld -> %ld\\n\"",
        "\"read_real_time()\"",
        "\"clock_gettime()\"",
        "\"getrusage()\"",
        "\"getrusage()\"",
        "\"times()\"",
        "\"times()\"",
        "\"gettimeofday()\"",
        "\"mftb\"",
        "\"stck\"",
        "\"SGI hardware counter\"",
        "\"cycle counter\"",
        "\"getrusage()\"",
        "\"gettimeofday()\"",
        "\"times()\"",
        "\"getrusage()\"",
        "\"gettimeofday()\"",
        "\"speed_endtime(): oops, no time method available\\n\"",
        "\"speed_endtime(): warning, treating negative time as zero: %.9f\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tune/tune-gcd-p.c": {
    "search": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"%d: %f, %d: %f, %d:, %f %d: %f\\n\""
      ]
    },
    "compare_double": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "median": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "bench_gcd": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        152,
        5
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": [
        "\"%6d %6d %5.3g\"",
        "\" %5.3g%%\"",
        "\" (ignored)\"",
        "\"\\n\""
      ]
    }
  },
  "gmp/gmp-6.1.2/tune/tuneup.c": {
    "randlimb_norm": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": []
    },
    "randlimb_half": {
      "start_point": [
        310,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": []
    },
    "add_dat": {
      "start_point": [
        323,
        0
      ],
      "end_point": [
        341,
        1
      ],
      "strings": []
    },
    "analyze_dat": {
      "start_point": [
        345,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": [
        "\"\\n\"",
        "\"x is the sum of the badness from setting thresh at given size\\n\"",
        "\"  (minimum x is sought)\\n\"",
        "\"size=%ld  first x=%.4f\\n\"",
        "\"size=%ld  x=%.4f\\n\""
      ]
    },
    "speed_mpn_mod_1_tune": {
      "start_point": [
        405,
        0
      ],
      "end_point": [
        409,
        1
      ],
      "strings": []
    },
    "speed_mpn_divrem_1_tune": {
      "start_point": [
        410,
        0
      ],
      "end_point": [
        414,
        1
      ],
      "strings": []
    },
    "speed_mpz_fac_ui_tune": {
      "start_point": [
        415,
        0
      ],
      "end_point": [
        419,
        1
      ],
      "strings": []
    },
    "speed_mpn_div_qr_1_tune": {
      "start_point": [
        420,
        0
      ],
      "end_point": [
        424,
        1
      ],
      "strings": []
    },
    "tuneup_measure": {
      "start_point": [
        426,
        0
      ],
      "end_point": [
        464,
        1
      ],
      "strings": []
    },
    "print_define_start": {
      "start_point": [
        469,
        0
      ],
      "end_point": [
        475,
        1
      ],
      "strings": [
        "\"#define %-*s  \"",
        "\"...\\n\""
      ]
    },
    "print_define_end_remark": {
      "start_point": [
        477,
        0
      ],
      "end_point": [
        492,
        1
      ],
      "strings": [
        "\"#define %-*s  \"",
        "\"MP_SIZE_T_MAX\"",
        "\"%5ld\"",
        "\"  /* %s */\"",
        "\"\\n\""
      ]
    },
    "print_define_end": {
      "start_point": [
        494,
        0
      ],
      "end_point": [
        505,
        1
      ],
      "strings": [
        "\"never\"",
        "\"always\""
      ]
    },
    "print_define": {
      "start_point": [
        507,
        0
      ],
      "end_point": [
        512,
        1
      ],
      "strings": []
    },
    "print_define_remark": {
      "start_point": [
        514,
        0
      ],
      "end_point": [
        519,
        1
      ],
      "strings": []
    },
    "one": {
      "start_point": [
        522,
        0
      ],
      "end_point": [
        704,
        1
      ],
      "strings": [
        "\"Oops, can't run both functions at size %ld\\n\"",
        "\"function2 never enough faster: t1=%.9f t2=%.9f\\n\"",
        "\"function2 enough faster at size=%ld: t1=%.9f t2=%.9f\\n\"",
        "\"             algorithm-A  algorithm-B   ratio  possible\\n\"",
        "\"              (seconds)    (seconds)    diff    thresh\\n\"",
        "\"size=%ld  %.9f  %.9f  % .4f %c  %ld\\n\"",
        "\"stopped due to since_positive (%d)\\n\"",
        "\"stopped due to ti >= tiplus1 * factor (%.1f)\\n\"",
        "\"stopped due to since_thresh_change (%d)\\n\"",
        "\"stopped due to ndat - thresh_idx > amount (%d)\\n\"",
        "\"%s\\n\"",
        "\"sizes %ld to %ld total %d measurements\\n\"",
        "\"    max size reached before end of crossover\\n\"",
        "\"sizes %ld to %ld total %d measurements\\n\""
      ]
    },
    "fft_step_size": {
      "start_point": [
        737,
        0
      ],
      "end_point": [
        752,
        1
      ],
      "strings": [
        "\"Can't handle k=%d\\n\""
      ]
    },
    "fft_next_size": {
      "start_point": [
        754,
        0
      ],
      "end_point": [
        766,
        1
      ],
      "strings": []
    },
    "mpn_mul_fft_lcm": {
      "start_point": [
        772,
        0
      ],
      "end_point": [
        783,
        1
      ],
      "strings": []
    },
    "fftfill": {
      "start_point": [
        785,
        0
      ],
      "end_point": [
        813,
        1
      ],
      "strings": []
    },
    "compare_double": {
      "start_point": [
        815,
        0
      ],
      "end_point": [
        827,
        1
      ],
      "strings": []
    },
    "median": {
      "start_point": [
        829,
        0
      ],
      "end_point": [
        834,
        1
      ],
      "strings": []
    },
    "cached_measure": {
      "start_point": [
        845,
        0
      ],
      "end_point": [
        866,
        1
      ],
      "strings": []
    },
    "fftmes": {
      "start_point": [
        876,
        0
      ],
      "end_point": [
        1065,
        1
      ],
      "strings": [
        "\"#define %s%*s\"",
        "\"\"",
        "\"\\\\\\n  { \"",
        "\"{%7u,%2u}\"",
        "\"FFT table exhausted, increase FFT_TABLE3_SIZE in gmp-impl.h\\n\"",
        "\", \"",
        "\"\\\\\\n    \"",
        "\"{%7u,%2u}\"",
        "\"{%lu,%u}\\n\"",
        "\"FFT table exhausted, increase FFT_TABLE3_SIZE in gmp-impl.h\\n\"",
        "\", \"",
        "\"\\\\\\n    \"",
        "\"{%7u,%2u}\"",
        "\" }\\n\""
      ]
    },
    "fft": {
      "start_point": [
        1067,
        0
      ],
      "end_point": [
        1195,
        1
      ],
      "strings": [
        "\"k = %d\"",
        "\"at %ld   size=%ld  k=%d  %.9f   size=%ld modf %.9f\\n\"",
        "\"#define %s_SIZE %d\\n\"",
        "\"at %ld   size=%ld  %.9f   size=%ld mul %.9f\\n\""
      ]
    },
    "tune_mul_n": {
      "start_point": [
        1201,
        0
      ],
      "end_point": [
        1296,
        1
      ],
      "strings": [
        "\"MUL_TOOM22_THRESHOLD\"",
        "\"MUL_TOOM33_THRESHOLD\"",
        "\"MUL_TOOM44_THRESHOLD\"",
        "\"MUL_TOOM6H_THRESHOLD\"",
        "\"MUL_TOOM8H_THRESHOLD\"",
        "\"MUL_TOOM33_THRESHOLD\"",
        "\"MUL_TOOM44_THRESHOLD\"",
        "\"MUL_TOOM6H_THRESHOLD\"",
        "\"MUL_TOOM8H_THRESHOLD\""
      ]
    },
    "tune_mul": {
      "start_point": [
        1298,
        0
      ],
      "end_point": [
        1346,
        1
      ],
      "strings": [
        "\"MUL_TOOM32_TO_TOOM43_THRESHOLD\"",
        "\"MUL_TOOM32_TO_TOOM43_THRESHOLD\"",
        "\"MUL_TOOM32_TO_TOOM53_THRESHOLD\"",
        "\"MUL_TOOM32_TO_TOOM53_THRESHOLD\"",
        "\"MUL_TOOM42_TO_TOOM53_THRESHOLD\"",
        "\"MUL_TOOM42_TO_TOOM53_THRESHOLD\"",
        "\"MUL_TOOM42_TO_TOOM63_THRESHOLD\"",
        "\"MUL_TOOM42_TO_TOOM63_THRESHOLD\"",
        "\"MUL_TOOM43_TO_TOOM54_THRESHOLD\"",
        "\"MUL_TOOM43_TO_TOOM54_THRESHOLD\""
      ]
    },
    "tune_mullo": {
      "start_point": [
        1349,
        0
      ],
      "end_point": [
        1393,
        1
      ],
      "strings": [
        "\"MULLO_BASECASE_THRESHOLD\"",
        "\"MULLO_DC_THRESHOLD\"",
        "\"MULLO_BASECASE_THRESHOLD\"",
        "\"MULLO_DC_THRESHOLD\"",
        "\"never mpn_mullo_basecase\"",
        "\"MULLO_BASECASE_THRESHOLD\"",
        "\"MULLO_DC_THRESHOLD\"",
        "\"MULLO_MUL_N_THRESHOLD\"",
        "\"MULLO_MUL_N_THRESHOLD\"",
        "\"without FFT use mullo forever\""
      ]
    },
    "tune_sqrlo": {
      "start_point": [
        1395,
        0
      ],
      "end_point": [
        1439,
        1
      ],
      "strings": [
        "\"SQRLO_BASECASE_THRESHOLD\"",
        "\"SQRLO_DC_THRESHOLD\"",
        "\"SQRLO_BASECASE_THRESHOLD\"",
        "\"SQRLO_DC_THRESHOLD\"",
        "\"never mpn_sqrlo_basecase\"",
        "\"SQRLO_BASECASE_THRESHOLD\"",
        "\"SQRLO_DC_THRESHOLD\"",
        "\"SQRLO_SQR_THRESHOLD\"",
        "\"SQRLO_SQR_THRESHOLD\"",
        "\"without FFT use sqrlo forever\""
      ]
    },
    "tune_mulmid": {
      "start_point": [
        1441,
        0
      ],
      "end_point": [
        1451,
        1
      ],
      "strings": [
        "\"MULMID_TOOM42_THRESHOLD\""
      ]
    },
    "tune_mulmod_bnm1": {
      "start_point": [
        1453,
        0
      ],
      "end_point": [
        1463,
        1
      ],
      "strings": [
        "\"MULMOD_BNM1_THRESHOLD\""
      ]
    },
    "tune_sqrmod_bnm1": {
      "start_point": [
        1465,
        0
      ],
      "end_point": [
        1475,
        1
      ],
      "strings": [
        "\"SQRMOD_BNM1_THRESHOLD\""
      ]
    },
    "tune_sqr": {
      "start_point": [
        1482,
        0
      ],
      "end_point": [
        1620,
        1
      ],
      "strings": [
        "\"SQR_BASECASE_THRESHOLD\"",
        "\"always (native)\"",
        "\"SQR_BASECASE_THRESHOLD\"",
        "\"SQR_TOOM2_THRESHOLD\"",
        "\"SQR_BASECASE_THRESHOLD\"",
        "\"toom2\"",
        "\"SQR_TOOM2_THRESHOLD\"",
        "\"never sqr_basecase\"",
        "\"SQR_BASECASE_THRESHOLD\"",
        "\"SQR_TOOM2_THRESHOLD\"",
        "\"SQR_TOOM3_THRESHOLD\"",
        "\"SQR_TOOM4_THRESHOLD\"",
        "\"SQR_TOOM6_THRESHOLD\"",
        "\"SQR_TOOM8_THRESHOLD\"",
        "\"SQR_TOOM3_THRESHOLD\"",
        "\"SQR_TOOM4_THRESHOLD\"",
        "\"SQR_TOOM6_THRESHOLD\"",
        "\"SQR_TOOM8_THRESHOLD\""
      ]
    },
    "tune_dc_div": {
      "start_point": [
        1623,
        0
      ],
      "end_point": [
        1643,
        1
      ],
      "strings": [
        "\"DC_DIV_QR_THRESHOLD\"",
        "\"DC_DIVAPPR_Q_THRESHOLD\""
      ]
    },
    "speed_mpn_sbordcpi1_div_qr": {
      "start_point": [
        1645,
        0
      ],
      "end_point": [
        1652,
        1
      ],
      "strings": []
    },
    "tune_mu_div": {
      "start_point": [
        1654,
        0
      ],
      "end_point": [
        1689,
        1
      ],
      "strings": [
        "\"MU_DIV_QR_THRESHOLD\"",
        "\"MU_DIVAPPR_Q_THRESHOLD\"",
        "\"MUPI_DIV_QR_THRESHOLD\""
      ]
    },
    "tune_dc_bdiv": {
      "start_point": [
        1691,
        0
      ],
      "end_point": [
        1711,
        1
      ],
      "strings": [
        "\"DC_BDIV_QR_THRESHOLD\"",
        "\"DC_BDIV_Q_THRESHOLD\""
      ]
    },
    "tune_mu_bdiv": {
      "start_point": [
        1713,
        0
      ],
      "end_point": [
        1737,
        1
      ],
      "strings": [
        "\"MU_BDIV_QR_THRESHOLD\"",
        "\"MU_BDIV_Q_THRESHOLD\""
      ]
    },
    "tune_invertappr": {
      "start_point": [
        1739,
        0
      ],
      "end_point": [
        1753,
        1
      ],
      "strings": [
        "\"INV_MULMOD_BNM1_THRESHOLD\"",
        "\"INV_NEWTON_THRESHOLD\""
      ]
    },
    "tune_invert": {
      "start_point": [
        1755,
        0
      ],
      "end_point": [
        1764,
        1
      ],
      "strings": [
        "\"INV_APPR_THRESHOLD\""
      ]
    },
    "tune_binvert": {
      "start_point": [
        1766,
        0
      ],
      "end_point": [
        1775,
        1
      ],
      "strings": [
        "\"BINV_NEWTON_THRESHOLD\""
      ]
    },
    "tune_redc": {
      "start_point": [
        1777,
        0
      ],
      "end_point": [
        1835,
        1
      ],
      "strings": [
        "\"REDC_1_TO_REDC_2_THRESHOLD\"",
        "\"REDC_2_TO_REDC_N_THRESHOLD\"",
        "\"REDC_1_TO_REDC_2_THRESHOLD\"",
        "\"REDC_1_TO_REDC_2_THRESHOLD\"",
        "\"REDC_2_TO_REDC_N_THRESHOLD\"",
        "\"REDC_1_TO_REDC_N_THRESHOLD\""
      ]
    },
    "tune_matrix22_mul": {
      "start_point": [
        1837,
        0
      ],
      "end_point": [
        1845,
        1
      ],
      "strings": [
        "\"MATRIX22_STRASSEN_THRESHOLD\""
      ]
    },
    "tune_hgcd": {
      "start_point": [
        1847,
        0
      ],
      "end_point": [
        1856,
        1
      ],
      "strings": [
        "\"HGCD_THRESHOLD\""
      ]
    },
    "tune_hgcd_appr": {
      "start_point": [
        1858,
        0
      ],
      "end_point": [
        1868,
        1
      ],
      "strings": [
        "\"HGCD_APPR_THRESHOLD\""
      ]
    },
    "tune_hgcd_reduce": {
      "start_point": [
        1870,
        0
      ],
      "end_point": [
        1880,
        1
      ],
      "strings": [
        "\"HGCD_REDUCE_THRESHOLD\""
      ]
    },
    "tune_gcd_dc": {
      "start_point": [
        1882,
        0
      ],
      "end_point": [
        1892,
        1
      ],
      "strings": [
        "\"GCD_DC_THRESHOLD\""
      ]
    },
    "tune_gcdext_dc": {
      "start_point": [
        1894,
        0
      ],
      "end_point": [
        1904,
        1
      ],
      "strings": [
        "\"GCDEXT_DC_THRESHOLD\""
      ]
    },
    "win_size": {
      "start_point": [
        1915,
        0
      ],
      "end_point": [
        1919,
        1
      ],
      "strings": []
    },
    "tune_powm_sec": {
      "start_point": [
        1921,
        0
      ],
      "end_point": [
        2037,
        1
      ],
      "strings": [
        "\"#define POWM_SEC_TABLE  \"",
        "\",\"",
        "\"%ld\"",
        "\"\\n\""
      ]
    },
    "tune_divrem_1": {
      "start_point": [
        2060,
        0
      ],
      "end_point": [
        2109,
        1
      ],
      "strings": [
        "\"DIVREM_1_NORM_THRESHOLD\"",
        "\"no preinv with nails\"",
        "\"DIVREM_1_UNNORM_THRESHOLD\"",
        "\"no preinv with nails\"",
        "\"DIVREM_1_NORM_THRESHOLD\"",
        "\"preinv always\"",
        "\"DIVREM_1_UNNORM_THRESHOLD\"",
        "\"DIVREM_1_NORM_THRESHOLD\"",
        "\"DIVREM_1_UNNORM_THRESHOLD\""
      ]
    },
    "tune_div_qr_1": {
      "start_point": [
        2111,
        0
      ],
      "end_point": [
        2158,
        1
      ],
      "strings": [
        "\"Oops, can't measure all mpn_div_qr_1n_pi1 methods at %ld\\n\"",
        "\"DIV_QR_1N_PI1_METHOD\"",
        "\"DIV_QR_1_NORM_THRESHOLD\"",
        "\"DIV_QR_1_UNNORM_THRESHOLD\""
      ]
    },
    "tune_mod_1": {
      "start_point": [
        2161,
        0
      ],
      "end_point": [
        2302,
        1
      ],
      "strings": [
        "\"MOD_1_NORM_THRESHOLD\"",
        "\"no preinv with nails\"",
        "\"MOD_1_UNNORM_THRESHOLD\"",
        "\"no preinv with nails\"",
        "\"Oops, can't measure all mpn_mod_1_1 methods at %ld\\n\"",
        "\"MOD_1_1P_METHOD\"",
        "\"MOD_1_NORM_THRESHOLD\"",
        "\"MOD_1_UNNORM_THRESHOLD\"",
        "\"MOD_1_NORM_THRESHOLD\"",
        "\"MOD_1_UNNORM_THRESHOLD\"",
        "\"MOD_1N_TO_MOD_1_1_THRESHOLD\"",
        "\"MOD_1_1_TO_MOD_1_2_THRESHOLD\"",
        "\"MOD_1_2_TO_MOD_1_4_THRESHOLD\"",
        "\"MOD_1_1_TO_MOD_1_4_THRESHOLD fake\"",
        "\"MOD_1U_TO_MOD_1_1_THRESHOLD\"",
        "\"MOD_1U_TO_MOD_1_1_THRESHOLD\"",
        "\"MOD_1_1_TO_MOD_1_2_THRESHOLD\"",
        "\"never mpn_mod_1_1p\"",
        "\"MOD_1_2_TO_MOD_1_4_THRESHOLD\"",
        "\"never mpn_mod_1s_2p\"",
        "\"PREINV_MOD_1_TO_MOD_1_THRESHOLD\""
      ]
    },
    "tune_preinv_divrem_1": {
      "start_point": [
        2310,
        0
      ],
      "end_point": [
        2374,
        1
      ],
      "strings": [
        "\"USE_PREINV_DIVREM_1\"",
        "\"no preinv with nails\"",
        "\"USE_PREINV_DIVREM_1\"",
        "\"native\"",
        "\"USE_PREINV_DIVREM_1\"",
        "\"preinv always\"",
        "\"mpn_divrem_1\"",
        "\"mpn_divrem_1_div\"",
        "\"Oops, can't measure mpn_preinv_divrem_1 and %s at %ld\\n\"",
        "\"size=%ld, mpn_preinv_divrem_1 %.9f, %s %.9f\\n\"",
        "\"USE_PREINV_DIVREM_1\""
      ]
    },
    "tune_divrem_2": {
      "start_point": [
        2378,
        0
      ],
      "end_point": [
        2418,
        1
      ],
      "strings": [
        "\"DIVREM_2_THRESHOLD\"",
        "\"no preinv with nails\"",
        "\"DIVREM_2_THRESHOLD\"",
        "\"preinv always\"",
        "\"DIVREM_2_THRESHOLD\""
      ]
    },
    "tune_div_qr_2": {
      "start_point": [
        2420,
        0
      ],
      "end_point": [
        2429,
        1
      ],
      "strings": [
        "\"DIV_QR_2_PI2_THRESHOLD\""
      ]
    },
    "tune_divexact_1": {
      "start_point": [
        2439,
        0
      ],
      "end_point": [
        2506,
        1
      ],
      "strings": [
        "\"DIVEXACT_1_THRESHOLD\"",
        "\"always (native)\"",
        "\"DIVEXACT_1_THRESHOLD\"",
        "\"low=%d thresh %ld\\n\"",
        "\"average of:\"",
        "\" %ld\"",
        "\"\\n\""
      ]
    },
    "tune_modexact_1_odd": {
      "start_point": [
        2517,
        0
      ],
      "end_point": [
        2566,
        1
      ],
      "strings": [
        "\"BMOD_1_TO_MOD_1_THRESHOLD\"",
        "\"always bmod_1\"",
        "\"BMOD_1_TO_MOD_1_THRESHOLD\"",
        "\"lt thresh %ld\\n\"",
        "\"ge thresh %ld\\n\""
      ]
    },
    "tune_jacobi_base": {
      "start_point": [
        2569,
        0
      ],
      "end_point": [
        2611,
        1
      ],
      "strings": [
        "\"size=%ld, mpn_jacobi_base_1 %.9f\\n\"",
        "\"size=%ld, mpn_jacobi_base_2 %.9f\\n\"",
        "\"size=%ld, mpn_jacobi_base_3 %.9f\\n\"",
        "\"size=%ld, mpn_jacobi_base_4 %.9f\\n\"",
        "\"Oops, can't measure all mpn_jacobi_base methods at %ld\\n\"",
        "\"JACOBI_BASE_METHOD\""
      ]
    },
    "tune_get_str": {
      "start_point": [
        2614,
        0
      ],
      "end_point": [
        2637,
        1
      ],
      "strings": [
        "\"GET_STR_DC_THRESHOLD\"",
        "\"GET_STR_PRECOMPUTE_THRESHOLD\""
      ]
    },
    "speed_mpn_pre_set_str": {
      "start_point": [
        2640,
        0
      ],
      "end_point": [
        2695,
        1
      ],
      "strings": []
    },
    "tune_set_str": {
      "start_point": [
        2697,
        0
      ],
      "end_point": [
        2720,
        1
      ],
      "strings": [
        "\"SET_STR_DC_THRESHOLD\"",
        "\"SET_STR_PRECOMPUTE_THRESHOLD\""
      ]
    },
    "tune_fft_mul": {
      "start_point": [
        2723,
        0
      ],
      "end_point": [
        2743,
        1
      ],
      "strings": [
        "\"MUL_FFT_TABLE3\"",
        "\"MUL_FFT_THRESHOLD\"",
        "\"MUL_FFT_MODF_THRESHOLD\""
      ]
    },
    "tune_fft_sqr": {
      "start_point": [
        2746,
        0
      ],
      "end_point": [
        2766,
        1
      ],
      "strings": [
        "\"SQR_FFT_TABLE3\"",
        "\"SQR_FFT_THRESHOLD\"",
        "\"SQR_FFT_MODF_THRESHOLD\""
      ]
    },
    "tune_fac_ui": {
      "start_point": [
        2768,
        0
      ],
      "end_point": [
        2785,
        1
      ],
      "strings": [
        "\"FAC_DSC_THRESHOLD\"",
        "\"FAC_ODD_THRESHOLD\""
      ]
    },
    "all": {
      "start_point": [
        2787,
        0
      ],
      "end_point": [
        2931,
        1
      ],
      "strings": [
        "\"Parameters for %s\\n\"",
        "\"Using: %s\\n\"",
        "\"speed_precision %d\"",
        "\", speed_unittime 1 cycle\"",
        "\", speed_unittime %.2e secs\"",
        "\", CPU freq unknown\\n\"",
        "\", CPU freq %.2f MHz\\n\"",
        "\"DEFAULT_MAX_SIZE %d, fft_max_size %ld\\n\"",
        "\"\\n\"",
        "\"/* Generated by tuneup.c, %d-%02d-%02d, \"",
        "\"gcc %d.%d */\\n\"",
        "\"Sun C %d.%d */\\n\"",
        "\"MIPSpro C %d.%d.%d */\\n\"",
        "\"DEC C %d */\\n\"",
        "\"system compiler */\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"/* Tuneup completed successfully, took %ld seconds */\\n\""
      ]
    },
    "main": {
      "start_point": [
        2934,
        0
      ],
      "end_point": [
        2969,
        1
      ],
      "strings": [
        "\"f:o:p:t\""
      ]
    }
  }
}