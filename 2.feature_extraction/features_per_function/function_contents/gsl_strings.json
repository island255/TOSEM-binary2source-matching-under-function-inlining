{
  "gsl/gsl-2.5/build.h": {},
  "gsl/gsl-2.5/gsl-histogram.c": {
    "print_help": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": [
        "\"Usage: gsl-histogram [-u] xmin xmax [n]\\n\"",
        "\"Computes a histogram of the data on stdin using n bins from xmin to xmax.\\n\"",
        "\"If n is unspecified then bins of integer width are used.\\n\"",
        "\"If -u is given, histogram is normalized so that sum of all bins is unity.\\n\""
      ]
    },
    "main": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"u\"",
        "\"%lg\"",
        "\"# mean = %g\\n\"",
        "\"# sigma = %g\\n\"",
        "\"%g\"",
        "\"%g\""
      ]
    }
  },
  "gsl/gsl-2.5/gsl-randist.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": [
        "\"Usage: gsl-randist seed n DIST param1 param2 ...\\n\"",
        "\"Generates n samples from the distribution DIST with parameters param1,\\n\"",
        "\"param2, etc. Valid distributions are,\\n\\n\"",
        "\"  beta\\n\"",
        "\"  binomial\\n\"",
        "\"  bivariate-gaussian\\n\"",
        "\"  cauchy\\n\"",
        "\"  chisq\\n\"",
        "\"  dir-2d\\n\"",
        "\"  dir-3d\\n\"",
        "\"  dir-nd\\n\"",
        "\"  erlang\\n\"",
        "\"  exponential\\n\"",
        "\"  exppow\\n\"",
        "\"  fdist\\n\"",
        "\"  flat\\n\"",
        "\"  gamma\\n\"",
        "\"  gaussian-tail\\n\"",
        "\"  gaussian\\n\"",
        "\"  geometric\\n\"",
        "\"  gumbel1\\n\"",
        "\"  gumbel2\\n\"",
        "\"  hypergeometric\\n\"",
        "\"  laplace\\n\"",
        "\"  landau\\n\"",
        "\"  levy\\n\"",
        "\"  levy-skew\\n\"",
        "\"  logarithmic\\n\"",
        "\"  logistic\\n\"",
        "\"  lognormal\\n\"",
        "\"  negative-binomial\\n\"",
        "\"  pareto\\n\"",
        "\"  pascal\\n\"",
        "\"  poisson\\n\"",
        "\"  rayleigh-tail\\n\"",
        "\"  rayleigh\\n\"",
        "\"  tdist\\n\"",
        "\"  ugaussian-tail\\n\"",
        "\"  ugaussian\\n\"",
        "\"  weibull\\n\"",
        "\"overriding GSL_RNG_SEED with command line value, seed = %ld\\n\"",
        "\"bernoulli\"",
        "\"p = probability of success\"",
        "\"beta\"",
        "\"a,b = shape parameters\"",
        "\"binomial\"",
        "\"p = probability, N = number of trials\"",
        "\"cauchy\"",
        "\"a = scale parameter\"",
        "\"chisq\"",
        "\"nu = degrees of freedom\"",
        "\"erlang\"",
        "\"a = scale parameter, b = order\"",
        "\"exponential\"",
        "\"mu = mean value\"",
        "\"exppow\"",
        "\"a = scale parameter, b = power (1=exponential, 2=gaussian)\"",
        "\"fdist\"",
        "\"nu1, nu2 = degrees of freedom parameters\"",
        "\"flat\"",
        "\"a = lower limit, b = upper limit\"",
        "\"gamma\"",
        "\"a = order, b = scale\"",
        "\"gaussian\"",
        "\"sigma = standard deviation\"",
        "\"gaussian-tail\"",
        "\"a = lower limit, sigma = standard deviation\"",
        "\"ugaussian\"",
        "\"unit gaussian, no parameters required\"",
        "\"ugaussian-tail\"",
        "\"a = lower limit\"",
        "\"bivariate-gaussian\"",
        "\"sigmax = x std.dev., sigmay = y std.dev., rho = correlation\"",
        "\"dir-2d\"",
        "\"dir-3d\"",
        "\"dir-nd\"",
        "\"n1 = number of dimensions of hypersphere\"",
        "\"%g\"",
        "\"geometric\"",
        "\"p = bernoulli trial probability of success\"",
        "\"gumbel1\"",
        "\"a = order, b = scale parameter\"",
        "\"gumbel2\"",
        "\"a = order, b = scale parameter\"",
        "\"hypergeometric\"",
        "\"n1 = tagged population, n2 = untagged population, t = number of trials\"",
        "\"laplace\"",
        "\"a = scale parameter\"",
        "\"landau\"",
        "\"no arguments required\"",
        "\"levy\"",
        "\"c = scale, a = power (1=cauchy, 2=gaussian)\"",
        "\"levy-skew\"",
        "\"c = scale, a = power (1=cauchy, 2=gaussian), b = skew\"",
        "\"logarithmic\"",
        "\"p = probability\"",
        "\"logistic\"",
        "\"a = scale parameter\"",
        "\"lognormal\"",
        "\"zeta = location parameter, sigma = scale parameter\"",
        "\"negative-binomial\"",
        "\"p = probability, a = order\"",
        "\"pareto\"",
        "\"a = power, b = scale parameter\"",
        "\"pascal\"",
        "\"p = probability, n = order (integer)\"",
        "\"poisson\"",
        "\"mu = scale parameter\"",
        "\"rayleigh\"",
        "\"sigma = scale parameter\"",
        "\"rayleigh-tail\"",
        "\"a = lower limit, sigma = scale parameter\"",
        "\"tdist\"",
        "\"nu = degrees of freedom\"",
        "\"weibull\"",
        "\"a = scale parameter, b = exponent\"",
        "\"Error: unrecognized distribution: %s\\n\""
      ]
    },
    "error": {
      "start_point": [
        388,
        0
      ],
      "end_point": [
        393,
        1
      ],
      "strings": [
        "\"Error: arguments should be %s\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/gsl_inline.h": {},
  "gsl/gsl-2.5/gsl_machine.h": {},
  "gsl/gsl-2.5/gsl_math.h": {},
  "gsl/gsl-2.5/gsl_minmax.h": {
    "GSL_MAX_INT": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "GSL_MIN_INT": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "GSL_MAX_DBL": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "GSL_MIN_DBL": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "GSL_MAX_LDBL": {
      "start_point": [
        79,
        16
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "GSL_MIN_LDBL": {
      "start_point": [
        85,
        16
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/gsl_mode.h": {
    "GSL_MODE_PREC": {
      "start_point": [
        72,
        20
      ],
      "end_point": [
        74,
        35
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/gsl_nan.h": {},
  "gsl/gsl-2.5/gsl_pow_int.h": {
    "gsl_pow_2": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        45,
        61
      ],
      "strings": []
    },
    "gsl_pow_3": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        46,
        61
      ],
      "strings": []
    },
    "gsl_pow_4": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        47,
        83
      ],
      "strings": []
    },
    "gsl_pow_5": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        48,
        83
      ],
      "strings": []
    },
    "gsl_pow_6": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        49,
        83
      ],
      "strings": []
    },
    "gsl_pow_7": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        50,
        83
      ],
      "strings": []
    },
    "gsl_pow_8": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        51,
        99
      ],
      "strings": []
    },
    "gsl_pow_9": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        52,
        83
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/gsl_precision.h": {},
  "gsl/gsl-2.5/gsl_types.h": {},
  "gsl/gsl-2.5/gsl_version.h": {},
  "gsl/gsl-2.5/templates_off.h": {},
  "gsl/gsl-2.5/templates_on.h": {},
  "gsl/gsl-2.5/version.c": {},
  "gsl/gsl-2.5/blas/blas.c": {
    "gsl_blas_sdsdot": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_dsdot": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_sdot": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_ddot": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_cdotu": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_cdotc": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_zdotu": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_zdotc": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_snrm2": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    },
    "gsl_blas_dnrm2": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    },
    "gsl_blas_scnrm2": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    },
    "gsl_blas_dznrm2": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "gsl_blas_sasum": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "gsl_blas_dasum": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    },
    "gsl_blas_scasum": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": []
    },
    "gsl_blas_dzasum": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    },
    "gsl_blas_isamax": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": []
    },
    "gsl_blas_idamax": {
      "start_point": [
        238,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    },
    "gsl_blas_icamax": {
      "start_point": [
        244,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": []
    },
    "gsl_blas_izamax": {
      "start_point": [
        250,
        0
      ],
      "end_point": [
        254,
        1
      ],
      "strings": []
    },
    "gsl_blas_sswap": {
      "start_point": [
        259,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_dswap": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_cswap": {
      "start_point": [
        289,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_zswap": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_scopy": {
      "start_point": [
        322,
        0
      ],
      "end_point": [
        335,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_dcopy": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        350,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_ccopy": {
      "start_point": [
        352,
        0
      ],
      "end_point": [
        366,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_zcopy": {
      "start_point": [
        368,
        0
      ],
      "end_point": [
        381,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_saxpy": {
      "start_point": [
        386,
        0
      ],
      "end_point": [
        399,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_daxpy": {
      "start_point": [
        401,
        0
      ],
      "end_point": [
        414,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_caxpy": {
      "start_point": [
        416,
        0
      ],
      "end_point": [
        431,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_zaxpy": {
      "start_point": [
        433,
        0
      ],
      "end_point": [
        447,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_srotg": {
      "start_point": [
        451,
        0
      ],
      "end_point": [
        456,
        1
      ],
      "strings": []
    },
    "gsl_blas_drotg": {
      "start_point": [
        458,
        0
      ],
      "end_point": [
        463,
        1
      ],
      "strings": []
    },
    "gsl_blas_srot": {
      "start_point": [
        467,
        0
      ],
      "end_point": [
        480,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_drot": {
      "start_point": [
        482,
        0
      ],
      "end_point": [
        495,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_srotmg": {
      "start_point": [
        500,
        0
      ],
      "end_point": [
        505,
        1
      ],
      "strings": []
    },
    "gsl_blas_drotmg": {
      "start_point": [
        507,
        0
      ],
      "end_point": [
        512,
        1
      ],
      "strings": []
    },
    "gsl_blas_srotm": {
      "start_point": [
        517,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_drotm": {
      "start_point": [
        532,
        0
      ],
      "end_point": [
        545,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_sscal": {
      "start_point": [
        550,
        0
      ],
      "end_point": [
        554,
        1
      ],
      "strings": []
    },
    "gsl_blas_dscal": {
      "start_point": [
        556,
        0
      ],
      "end_point": [
        560,
        1
      ],
      "strings": []
    },
    "gsl_blas_cscal": {
      "start_point": [
        562,
        0
      ],
      "end_point": [
        567,
        1
      ],
      "strings": []
    },
    "gsl_blas_zscal": {
      "start_point": [
        569,
        0
      ],
      "end_point": [
        574,
        1
      ],
      "strings": []
    },
    "gsl_blas_csscal": {
      "start_point": [
        576,
        0
      ],
      "end_point": [
        580,
        1
      ],
      "strings": []
    },
    "gsl_blas_zdscal": {
      "start_point": [
        582,
        0
      ],
      "end_point": [
        586,
        1
      ],
      "strings": []
    },
    "gsl_blas_sgemv": {
      "start_point": [
        595,
        0
      ],
      "end_point": [
        615,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_dgemv": {
      "start_point": [
        618,
        0
      ],
      "end_point": [
        637,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_cgemv": {
      "start_point": [
        640,
        0
      ],
      "end_point": [
        663,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_zgemv": {
      "start_point": [
        666,
        0
      ],
      "end_point": [
        688,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_chemv": {
      "start_point": [
        694,
        0
      ],
      "end_point": [
        716,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_zhemv": {
      "start_point": [
        718,
        0
      ],
      "end_point": [
        739,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ssymv": {
      "start_point": [
        744,
        0
      ],
      "end_point": [
        763,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_dsymv": {
      "start_point": [
        765,
        0
      ],
      "end_point": [
        784,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_strmv": {
      "start_point": [
        789,
        0
      ],
      "end_point": [
        809,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_dtrmv": {
      "start_point": [
        812,
        0
      ],
      "end_point": [
        831,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ctrmv": {
      "start_point": [
        834,
        0
      ],
      "end_point": [
        854,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ztrmv": {
      "start_point": [
        857,
        0
      ],
      "end_point": [
        877,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_strsv": {
      "start_point": [
        882,
        0
      ],
      "end_point": [
        902,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_dtrsv": {
      "start_point": [
        905,
        0
      ],
      "end_point": [
        924,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ctrsv": {
      "start_point": [
        927,
        0
      ],
      "end_point": [
        947,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ztrsv": {
      "start_point": [
        950,
        0
      ],
      "end_point": [
        970,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_sger": {
      "start_point": [
        975,
        0
      ],
      "end_point": [
        993,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_dger": {
      "start_point": [
        996,
        0
      ],
      "end_point": [
        1014,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_cgeru": {
      "start_point": [
        1019,
        0
      ],
      "end_point": [
        1039,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_zgeru": {
      "start_point": [
        1041,
        0
      ],
      "end_point": [
        1059,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_cgerc": {
      "start_point": [
        1064,
        0
      ],
      "end_point": [
        1084,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_zgerc": {
      "start_point": [
        1087,
        0
      ],
      "end_point": [
        1105,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_cher": {
      "start_point": [
        1109,
        0
      ],
      "end_point": [
        1129,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_zher": {
      "start_point": [
        1132,
        0
      ],
      "end_point": [
        1151,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_cher2": {
      "start_point": [
        1156,
        0
      ],
      "end_point": [
        1178,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_zher2": {
      "start_point": [
        1181,
        0
      ],
      "end_point": [
        1202,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ssyr": {
      "start_point": [
        1207,
        0
      ],
      "end_point": [
        1226,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_dsyr": {
      "start_point": [
        1229,
        0
      ],
      "end_point": [
        1248,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ssyr2": {
      "start_point": [
        1253,
        0
      ],
      "end_point": [
        1272,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_dsyr2": {
      "start_point": [
        1275,
        0
      ],
      "end_point": [
        1294,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_sgemm": {
      "start_point": [
        1306,
        0
      ],
      "end_point": [
        1329,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_dgemm": {
      "start_point": [
        1332,
        0
      ],
      "end_point": [
        1355,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_cgemm": {
      "start_point": [
        1358,
        0
      ],
      "end_point": [
        1384,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_zgemm": {
      "start_point": [
        1387,
        0
      ],
      "end_point": [
        1412,
        1
      ],
      "strings": [
        "\"invalid length\""
      ]
    },
    "gsl_blas_ssymm": {
      "start_point": [
        1417,
        0
      ],
      "end_point": [
        1447,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_dsymm": {
      "start_point": [
        1450,
        0
      ],
      "end_point": [
        1479,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_csymm": {
      "start_point": [
        1482,
        0
      ],
      "end_point": [
        1514,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_zsymm": {
      "start_point": [
        1516,
        0
      ],
      "end_point": [
        1547,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_chemm": {
      "start_point": [
        1552,
        0
      ],
      "end_point": [
        1585,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_zhemm": {
      "start_point": [
        1588,
        0
      ],
      "end_point": [
        1619,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ssyrk": {
      "start_point": [
        1623,
        0
      ],
      "end_point": [
        1644,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_dsyrk": {
      "start_point": [
        1647,
        0
      ],
      "end_point": [
        1669,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_csyrk": {
      "start_point": [
        1672,
        0
      ],
      "end_point": [
        1696,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_zsyrk": {
      "start_point": [
        1699,
        0
      ],
      "end_point": [
        1722,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_cherk": {
      "start_point": [
        1726,
        0
      ],
      "end_point": [
        1748,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_zherk": {
      "start_point": [
        1751,
        0
      ],
      "end_point": [
        1773,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ssyr2k": {
      "start_point": [
        1777,
        0
      ],
      "end_point": [
        1802,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_dsyr2k": {
      "start_point": [
        1805,
        0
      ],
      "end_point": [
        1830,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_csyr2k": {
      "start_point": [
        1833,
        0
      ],
      "end_point": [
        1860,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_zsyr2k": {
      "start_point": [
        1864,
        0
      ],
      "end_point": [
        1890,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_cher2k": {
      "start_point": [
        1894,
        0
      ],
      "end_point": [
        1922,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_zher2k": {
      "start_point": [
        1925,
        0
      ],
      "end_point": [
        1952,
        1
      ],
      "strings": [
        "\"matrix C must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_strmm": {
      "start_point": [
        1956,
        0
      ],
      "end_point": [
        1981,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_dtrmm": {
      "start_point": [
        1984,
        0
      ],
      "end_point": [
        2009,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ctrmm": {
      "start_point": [
        2012,
        0
      ],
      "end_point": [
        2040,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ztrmm": {
      "start_point": [
        2043,
        0
      ],
      "end_point": [
        2070,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_strsm": {
      "start_point": [
        2075,
        0
      ],
      "end_point": [
        2100,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_dtrsm": {
      "start_point": [
        2103,
        0
      ],
      "end_point": [
        2128,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ctrsm": {
      "start_point": [
        2131,
        0
      ],
      "end_point": [
        2159,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    },
    "gsl_blas_ztrsm": {
      "start_point": [
        2162,
        0
      ],
      "end_point": [
        2189,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"invalid length\""
      ]
    }
  },
  "gsl/gsl-2.5/blas/gsl_blas.h": {},
  "gsl/gsl-2.5/blas/gsl_blas_types.h": {},
  "gsl/gsl-2.5/block/block.c": {},
  "gsl/gsl-2.5/block/block_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          23,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          25,
          0
        ],
        "end_point": [
          29,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/block/file.c": {},
  "gsl/gsl-2.5/block/fprintf_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          21,
          0
        ],
        "end_point": [
          64,
          1
        ],
        "strings": [
          "\"putc failed\"",
          "\"fprintf failed\"",
          "\"putc failed\""
        ]
      },
      {
        "start_point": [
          66,
          0
        ],
        "end_point": [
          95,
          1
        ],
        "strings": [
          "\"fscanf failed\""
        ]
      },
      {
        "start_point": [
          98,
          0
        ],
        "end_point": [
          141,
          1
        ],
        "strings": [
          "\"putc failed\"",
          "\"fprintf failed\"",
          "\"putc failed\""
        ]
      },
      {
        "start_point": [
          143,
          0
        ],
        "end_point": [
          170,
          1
        ],
        "strings": [
          "\"fscanf failed\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/block/fwrite_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          34,
          1
        ],
        "strings": [
          "\"fread failed\""
        ]
      },
      {
        "start_point": [
          36,
          0
        ],
        "end_point": [
          51,
          1
        ],
        "strings": [
          "\"fwrite failed\""
        ]
      },
      {
        "start_point": [
          53,
          0
        ],
        "end_point": [
          82,
          1
        ],
        "strings": [
          "\"fread failed\"",
          "\"fread failed\""
        ]
      },
      {
        "start_point": [
          84,
          0
        ],
        "end_point": [
          115,
          1
        ],
        "strings": [
          "\"fwrite failed\"",
          "\"fwrite failed\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/block/gsl_block.h": {},
  "gsl/gsl-2.5/block/gsl_block_char.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_complex_double.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_complex_float.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_complex_long_double.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_double.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_float.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_int.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_long.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_long_double.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_short.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_uchar.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_uint.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_ulong.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_block_ushort.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/block/gsl_check_range.h": {},
  "gsl/gsl-2.5/block/init.c": {},
  "gsl/gsl-2.5/block/init_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          45,
          1
        ],
        "strings": [
          "\"failed to allocate space for block struct\"",
          "\"failed to allocate space for block data\""
        ]
      },
      {
        "start_point": [
          47,
          0
        ],
        "end_point": [
          66,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          68,
          0
        ],
        "end_point": [
          74,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/block/test.c": {
    "main": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "my_error_handler": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/block/test_complex_io.c": {
    "FUNCTION": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"test.txt\"",
        "\"w\"",
        "\"test.txt\"",
        "\"r\"",
        "\"_fprintf and fscanf\""
      ]
    }
  },
  "gsl/gsl-2.5/block/test_complex_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          23,
          0
        ],
        "end_point": [
          65,
          1
        ],
        "strings": [
          "\"_alloc returns valid pointer\"",
          "\"_alloc returns valid size\"",
          "\"_data returns valid pointer\"",
          "\"_size returns valid size\"",
          "\"_calloc returns valid pointer\"",
          "\"_calloc returns valid size\"",
          "\"_data returns valid pointer from calloc\"",
          "\"_size returns valid size from calloc\"",
          "\"_calloc initializes array to zero\""
        ]
      },
      {
        "start_point": [
          67,
          0
        ],
        "end_point": [
          110,
          1
        ],
        "strings": [
          "\"test.dat\"",
          "\"wb\"",
          "\"test.dat\"",
          "\"rb\"",
          "\"_write and read\""
        ]
      },
      {
        "start_point": [
          112,
          0
        ],
        "end_point": [
          121,
          1
        ],
        "strings": [
          "\"_alloc permits zero length\"",
          "\"_alloc reflects zero length\""
        ]
      },
      {
        "start_point": [
          123,
          0
        ],
        "end_point": [
          132,
          1
        ],
        "strings": [
          "\"_calloc permits zero length\"",
          "\"_calloc reflects zero length\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/block/test_io.c": {
    "FUNCTION": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"test.txt\"",
        "\"w\"",
        "\"test.txt\"",
        "\"r\"",
        "\"_fprintf and fscanf\""
      ]
    }
  },
  "gsl/gsl-2.5/block/test_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          23,
          0
        ],
        "end_point": [
          66,
          1
        ],
        "strings": [
          "\"_alloc returns valid pointer\"",
          "\"_alloc returns valid size\"",
          "\"_data returns valid pointer\"",
          "\"_size returns valid size\"",
          "\"_calloc returns valid pointer\"",
          "\"_calloc returns valid size\"",
          "\"_data returns valid pointer from calloc\"",
          "\"_size returns valid size from calloc\"",
          "\"_calloc initializes array to zero\""
        ]
      },
      {
        "start_point": [
          69,
          0
        ],
        "end_point": [
          112,
          1
        ],
        "strings": [
          "\"test.dat\"",
          "\"wb\"",
          "\"test.dat\"",
          "\"rb\"",
          "\"_write and read\""
        ]
      },
      {
        "start_point": [
          114,
          0
        ],
        "end_point": [
          123,
          1
        ],
        "strings": [
          "\"_alloc permits zero length\"",
          "\"_alloc reflects zero length\""
        ]
      },
      {
        "start_point": [
          125,
          0
        ],
        "end_point": [
          134,
          1
        ],
        "strings": [
          "\"_calloc permits zero length\"",
          "\"_calloc reflects zero length\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/bspline/bspline.c": {
    "gsl_bspline_alloc": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"k must be at least 1\"",
        "\"nbreak must be at least 2\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for knots vector\"",
        "\"failed to allocate space for deltal vector\"",
        "\"failed to allocate space for deltar vector\"",
        "\"failed to allocate space for temporary spline vector\"",
        "\"failed to allocate space for derivative work matrix\"",
        "\"failed to allocate space for temporary derivative matrix\""
      ]
    },
    "gsl_bspline_free": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    },
    "gsl_bspline_ncoeffs": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    },
    "gsl_bspline_order": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    },
    "gsl_bspline_nbreak": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    },
    "gsl_bspline_breakpoint": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    },
    "gsl_bspline_knots": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": [
        "\"breakpts vector has wrong size\""
      ]
    },
    "gsl_bspline_knots_uniform": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        296,
        1
      ],
      "strings": []
    },
    "gsl_bspline_eval": {
      "start_point": [
        316,
        0
      ],
      "end_point": [
        347,
        1
      ],
      "strings": [
        "\"vector B not of length n\""
      ]
    },
    "gsl_bspline_eval_nonzero": {
      "start_point": [
        377,
        0
      ],
      "end_point": [
        405,
        1
      ],
      "strings": [
        "\"Bk vector length does not match order k\""
      ]
    },
    "gsl_bspline_deriv_eval": {
      "start_point": [
        429,
        0
      ],
      "end_point": [
        472,
        1
      ],
      "strings": [
        "\"dB matrix first dimension not of length n\"",
        "\"dB matrix second dimension must be at least length nderiv+1\""
      ]
    },
    "gsl_bspline_deriv_eval_nonzero": {
      "start_point": [
        514,
        0
      ],
      "end_point": [
        559,
        1
      ],
      "strings": [
        "\"dB matrix first dimension not of length k\"",
        "\"dB matrix second dimension must be at least length nderiv+1\""
      ]
    },
    "bspline_find_interval": {
      "start_point": [
        586,
        0
      ],
      "end_point": [
        622,
        1
      ],
      "strings": [
        "\"knots vector is not increasing\""
      ]
    },
    "bspline_process_interval_for_eval": {
      "start_point": [
        631,
        0
      ],
      "end_point": [
        658,
        1
      ],
      "strings": [
        "\"x outside of knot interval\"",
        "\"x outside of knot interval\"",
        "\"knot(i) = knot(i+1) will result in division by zero\""
      ]
    },
    "bspline_pppack_bsplvb": {
      "start_point": [
        742,
        0
      ],
      "end_point": [
        785,
        1
      ],
      "strings": []
    },
    "bspline_pppack_bsplvd": {
      "start_point": [
        832,
        0
      ],
      "end_point": [
        940,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/bspline/bspline.h": {},
  "gsl/gsl-2.5/bspline/greville.c": {
    "gsl_bspline_greville_abscissa": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"Greville abscissa index out of range\""
      ]
    },
    "gsl_bspline_knots_greville": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"w->k must be at least 2\"",
        "\"abscissae->size must be at least 2\"",
        "\"w->nbreak must equal abscissae->size - w->k + 2\"",
        "\"failed to allocate working storage\""
      ]
    }
  },
  "gsl/gsl-2.5/bspline/gsl_bspline.h": {
    "typedef": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/bspline/test.c": {
    "test_bspline": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": [
        "\"basis-spline coefficient %u is in range [0,1] for x=%g\"",
        "\"basis-spline order %u is normalized for x=%g\"",
        "\"b-spline order %d basis #%d evaluation and 0th derivative consistent for x=%g\""
      ]
    },
    "main": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        517,
        1
      ],
      "strings": [
        "\"b-spline k=%d basis #%d derivative %d at x = %f\"",
        "\"b-spline k=%d basis #%d derivative %d at x = %f\"",
        "\"b-spline k=%d basis #%d derivative %d at x = %f\"",
        "\"b-spline k=%d basis #%d derivative %d at x = %f\"",
        "\"b-spline k=%d basis #%d derivative %d at x = %f\"",
        "\"b-spline k=%d number of abscissae\"",
        "\"b-spline k=%d Greville abscissa #%d at x = %f\"",
        "\"b-spline k=%d number of abscissae\"",
        "\"b-spline k=%d Greville abscissa #%d at x = %f\"",
        "\"b-spline k=%d number of abscissae\"",
        "\"b-spline k=%d Greville abscissa #%d at x = %f\"",
        "\"b-spline k=%d number of abscissae\"",
        "\"b-spline k=%d Greville abscissa #%d at x = %f\"",
        "\"b-spline k=%d knots_greville breakpoint #%d\"",
        "\"b-spline k=%d nbreak=%d knots_greville abserr\"",
        "\"b-spline k=%d knots_greville breakpoint #%d\"",
        "\"b-spline k=%d nbreak=%d knots_greville abserr\"",
        "\"b-spline k=%d knots_greville breakpoint #%d\"",
        "\"b-spline k=%d nbreak=%d knots_greville abserr\"",
        "\"b-spline k=%d knots_greville breakpoint #%d\"",
        "\"b-spline k=%d nbreak=%d knots_greville abserr\"",
        "\"b-spline k=%d knots_greville breakpoint #%d\"",
        "\"b-spline k=%d nbreak=%d knots_greville abserr large\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/caxpy.c": {
    "cblas_caxpy": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_axpy_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cblas.h": {},
  "gsl/gsl-2.5/cblas/ccopy.c": {
    "cblas_ccopy": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_copy_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cdotc_sub.c": {
    "cblas_cdotc_sub": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_dot_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cdotu_sub.c": {
    "cblas_cdotu_sub": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_dot_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cgbmv.c": {
    "cblas_cgbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_gbmv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cgemm.c": {
    "cblas_cgemm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_gemm_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cgemv.c": {
    "cblas_cgemv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_gemv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cgerc.c": {
    "cblas_cgerc": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_gerc.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cgeru.c": {
    "cblas_cgeru": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_geru.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/chbmv.c": {
    "cblas_chbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_hbmv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/chemm.c": {
    "cblas_chemm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_hemm.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/chemv.c": {
    "cblas_chemv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_hemv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cher.c": {
    "cblas_cher": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_her.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cher2.c": {
    "cblas_cher2": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_her2.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cher2k.c": {
    "cblas_cher2k": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_her2k.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cherk.c": {
    "cblas_cherk": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_herk.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/chpmv.c": {
    "cblas_chpmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_hpmv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/chpr.c": {
    "cblas_chpr": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_hpr.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/chpr2.c": {
    "cblas_chpr2": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_hpr2.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cscal.c": {
    "cblas_cscal": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_scal_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/csscal.c": {
    "cblas_csscal": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_scal_c_s.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/cswap.c": {
    "cblas_cswap": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_swap_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/csymm.c": {
    "cblas_csymm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_symm_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/csyr2k.c": {
    "cblas_csyr2k": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_syr2k_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/csyrk.c": {
    "cblas_csyrk": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_syrk_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ctbmv.c": {
    "cblas_ctbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_tbmv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ctbsv.c": {
    "cblas_ctbsv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        16,
        1
      ],
      "strings": [
        "\"source_tbsv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ctpmv.c": {
    "cblas_ctpmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_tpmv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ctpsv.c": {
    "cblas_ctpsv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_tpsv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ctrmm.c": {
    "cblas_ctrmm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_trmm_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ctrmv.c": {
    "cblas_ctrmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_trmv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ctrsm.c": {
    "cblas_ctrsm": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        17,
        1
      ],
      "strings": [
        "\"source_trsm_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ctrsv.c": {
    "cblas_ctrsv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        16,
        1
      ],
      "strings": [
        "\"source_trsv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dasum.c": {
    "cblas_dasum": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_asum_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/daxpy.c": {
    "cblas_daxpy": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_axpy_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dcopy.c": {
    "cblas_dcopy": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_copy_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ddot.c": {
    "cblas_ddot": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_dot_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dgbmv.c": {
    "cblas_dgbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_gbmv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dgemm.c": {
    "cblas_dgemm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_gemm_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dgemv.c": {
    "cblas_dgemv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_gemv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dger.c": {
    "cblas_dger": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_ger.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dnrm2.c": {
    "cblas_dnrm2": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_nrm2_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/drot.c": {
    "cblas_drot": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_rot.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/drotg.c": {
    "cblas_drotg": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_rotg.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/drotm.c": {
    "cblas_drotm": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_rotm.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/drotmg.c": {
    "cblas_drotmg": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_rotmg.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dsbmv.c": {
    "cblas_dsbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_sbmv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dscal.c": {
    "cblas_dscal": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_scal_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dsdot.c": {
    "cblas_dsdot": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_dot_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dspmv.c": {
    "cblas_dspmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_spmv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dspr.c": {
    "cblas_dspr": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_spr.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dspr2.c": {
    "cblas_dspr2": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_spr2.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dswap.c": {
    "cblas_dswap": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_swap_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dsymm.c": {
    "cblas_dsymm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_symm_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dsymv.c": {
    "cblas_dsymv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_symv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dsyr.c": {
    "cblas_dsyr": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_syr.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dsyr2.c": {
    "cblas_dsyr2": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_syr2.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dsyr2k.c": {
    "cblas_dsyr2k": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_syr2k_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dsyrk.c": {
    "cblas_dsyrk": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_syrk_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dtbmv.c": {
    "cblas_dtbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_tbmv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dtbsv.c": {
    "cblas_dtbsv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_tbsv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dtpmv.c": {
    "cblas_dtpmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_tpmv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dtpsv.c": {
    "cblas_dtpsv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_tpsv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dtrmm.c": {
    "cblas_dtrmm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_trmm_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dtrmv.c": {
    "cblas_dtrmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_trmv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dtrsm.c": {
    "cblas_dtrsm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_trsm_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dtrsv.c": {
    "cblas_dtrsv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_trsv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dzasum.c": {
    "cblas_dzasum": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_asum_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/dznrm2.c": {
    "cblas_dznrm2": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_nrm2_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/error_cblas.h": {},
  "gsl/gsl-2.5/cblas/error_cblas_l2.h": {},
  "gsl/gsl-2.5/cblas/error_cblas_l3.h": {},
  "gsl/gsl-2.5/cblas/gsl_cblas.h": {},
  "gsl/gsl-2.5/cblas/hypot.c": {
    "xhypot": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cblas/icamax.c": {
    "cblas_icamax": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_iamax_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/idamax.c": {
    "cblas_idamax": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_iamax_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/isamax.c": {
    "cblas_isamax": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_iamax_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/izamax.c": {
    "cblas_izamax": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_iamax_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sasum.c": {
    "cblas_sasum": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_asum_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/saxpy.c": {
    "cblas_saxpy": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_axpy_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/scasum.c": {
    "cblas_scasum": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_asum_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/scnrm2.c": {
    "cblas_scnrm2": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_nrm2_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/scopy.c": {
    "cblas_scopy": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_copy_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sdot.c": {
    "cblas_sdot": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_dot_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sdsdot.c": {
    "cblas_sdsdot": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_dot_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sgbmv.c": {
    "cblas_sgbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_gbmv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sgemm.c": {
    "cblas_sgemm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_gemm_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sgemv.c": {
    "cblas_sgemv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_gemv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sger.c": {
    "cblas_sger": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_ger.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/snrm2.c": {
    "cblas_snrm2": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_nrm2_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/source_asum_c.h": {},
  "gsl/gsl-2.5/cblas/source_asum_r.h": {},
  "gsl/gsl-2.5/cblas/source_axpy_c.h": {},
  "gsl/gsl-2.5/cblas/source_axpy_r.h": {},
  "gsl/gsl-2.5/cblas/source_copy_c.h": {},
  "gsl/gsl-2.5/cblas/source_copy_r.h": {},
  "gsl/gsl-2.5/cblas/source_dot_c.h": {},
  "gsl/gsl-2.5/cblas/source_dot_r.h": {},
  "gsl/gsl-2.5/cblas/source_gbmv_c.h": {},
  "gsl/gsl-2.5/cblas/source_gbmv_r.h": {},
  "gsl/gsl-2.5/cblas/source_gemm_c.h": {},
  "gsl/gsl-2.5/cblas/source_gemm_r.h": {},
  "gsl/gsl-2.5/cblas/source_gemv_c.h": {},
  "gsl/gsl-2.5/cblas/source_gemv_r.h": {},
  "gsl/gsl-2.5/cblas/source_ger.h": {},
  "gsl/gsl-2.5/cblas/source_gerc.h": {},
  "gsl/gsl-2.5/cblas/source_geru.h": {},
  "gsl/gsl-2.5/cblas/source_hbmv.h": {},
  "gsl/gsl-2.5/cblas/source_hemm.h": {},
  "gsl/gsl-2.5/cblas/source_hemv.h": {},
  "gsl/gsl-2.5/cblas/source_her.h": {},
  "gsl/gsl-2.5/cblas/source_her2.h": {},
  "gsl/gsl-2.5/cblas/source_her2k.h": {},
  "gsl/gsl-2.5/cblas/source_herk.h": {},
  "gsl/gsl-2.5/cblas/source_hpmv.h": {},
  "gsl/gsl-2.5/cblas/source_hpr.h": {},
  "gsl/gsl-2.5/cblas/source_hpr2.h": {},
  "gsl/gsl-2.5/cblas/source_iamax_c.h": {},
  "gsl/gsl-2.5/cblas/source_iamax_r.h": {},
  "gsl/gsl-2.5/cblas/source_nrm2_c.h": {},
  "gsl/gsl-2.5/cblas/source_nrm2_r.h": {},
  "gsl/gsl-2.5/cblas/source_rot.h": {},
  "gsl/gsl-2.5/cblas/source_rotg.h": {},
  "gsl/gsl-2.5/cblas/source_rotm.h": {},
  "gsl/gsl-2.5/cblas/source_rotmg.h": {},
  "gsl/gsl-2.5/cblas/source_sbmv.h": {},
  "gsl/gsl-2.5/cblas/source_scal_c.h": {},
  "gsl/gsl-2.5/cblas/source_scal_c_s.h": {},
  "gsl/gsl-2.5/cblas/source_scal_r.h": {},
  "gsl/gsl-2.5/cblas/source_spmv.h": {},
  "gsl/gsl-2.5/cblas/source_spr.h": {},
  "gsl/gsl-2.5/cblas/source_spr2.h": {},
  "gsl/gsl-2.5/cblas/source_swap_c.h": {},
  "gsl/gsl-2.5/cblas/source_swap_r.h": {},
  "gsl/gsl-2.5/cblas/source_symm_c.h": {},
  "gsl/gsl-2.5/cblas/source_symm_r.h": {},
  "gsl/gsl-2.5/cblas/source_symv.h": {},
  "gsl/gsl-2.5/cblas/source_syr.h": {},
  "gsl/gsl-2.5/cblas/source_syr2.h": {},
  "gsl/gsl-2.5/cblas/source_syr2k_c.h": {},
  "gsl/gsl-2.5/cblas/source_syr2k_r.h": {},
  "gsl/gsl-2.5/cblas/source_syrk_c.h": {},
  "gsl/gsl-2.5/cblas/source_syrk_r.h": {},
  "gsl/gsl-2.5/cblas/source_tbmv_c.h": {},
  "gsl/gsl-2.5/cblas/source_tbmv_r.h": {},
  "gsl/gsl-2.5/cblas/source_tbsv_c.h": {},
  "gsl/gsl-2.5/cblas/source_tbsv_r.h": {},
  "gsl/gsl-2.5/cblas/source_tpmv_c.h": {},
  "gsl/gsl-2.5/cblas/source_tpmv_r.h": {},
  "gsl/gsl-2.5/cblas/source_tpsv_c.h": {},
  "gsl/gsl-2.5/cblas/source_tpsv_r.h": {},
  "gsl/gsl-2.5/cblas/source_trmm_c.h": {},
  "gsl/gsl-2.5/cblas/source_trmm_r.h": {},
  "gsl/gsl-2.5/cblas/source_trmv_c.h": {},
  "gsl/gsl-2.5/cblas/source_trmv_r.h": {},
  "gsl/gsl-2.5/cblas/source_trsm_c.h": {},
  "gsl/gsl-2.5/cblas/source_trsm_r.h": {},
  "gsl/gsl-2.5/cblas/source_trsv_c.h": {},
  "gsl/gsl-2.5/cblas/source_trsv_r.h": {},
  "gsl/gsl-2.5/cblas/srot.c": {
    "cblas_srot": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_rot.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/srotg.c": {
    "cblas_srotg": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_rotg.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/srotm.c": {
    "cblas_srotm": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_rotm.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/srotmg.c": {
    "cblas_srotmg": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_rotmg.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ssbmv.c": {
    "cblas_ssbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_sbmv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sscal.c": {
    "cblas_sscal": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_scal_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sspmv.c": {
    "cblas_sspmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_spmv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sspr.c": {
    "cblas_sspr": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_spr.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sspr2.c": {
    "cblas_sspr2": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_spr2.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/sswap.c": {
    "cblas_sswap": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_swap_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ssymm.c": {
    "cblas_ssymm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_symm_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ssymv.c": {
    "cblas_ssymv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_symv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ssyr.c": {
    "cblas_ssyr": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_syr.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ssyr2.c": {
    "cblas_ssyr2": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_syr2.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ssyr2k.c": {
    "cblas_ssyr2k": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_syr2k_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ssyrk.c": {
    "cblas_ssyrk": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_syrk_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/stbmv.c": {
    "cblas_stbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_tbmv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/stbsv.c": {
    "cblas_stbsv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_tbsv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/stpmv.c": {
    "cblas_stpmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_tpmv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/stpsv.c": {
    "cblas_stpsv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_tpsv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/strmm.c": {
    "cblas_strmm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_trmm_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/strmv.c": {
    "cblas_strmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_trmv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/strsm.c": {
    "cblas_strsm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_trsm_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/strsv.c": {
    "cblas_strsv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_trsv_r.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": [
        "\"tests.c\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/tests.c": {},
  "gsl/gsl-2.5/cblas/tests.h": {},
  "gsl/gsl-2.5/cblas/test_amax.c": {
    "test_amax": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"samax(case 52)\"",
        "\"damax(case 53)\"",
        "\"camax(case 54)\"",
        "\"zamax(case 55)\"",
        "\"samax(case 56)\"",
        "\"damax(case 57)\"",
        "\"camax(case 58)\"",
        "\"zamax(case 59)\"",
        "\"samax(case 60)\"",
        "\"damax(case 61)\"",
        "\"camax(case 62)\"",
        "\"zamax(case 63)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_asum.c": {
    "test_asum": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": [
        "\"sasum(case 40)\"",
        "\"dasum(case 41)\"",
        "\"scasum(case 42)\"",
        "\"dzasum(case 43)\"",
        "\"sasum(case 44)\"",
        "\"dasum(case 45)\"",
        "\"scasum(case 46)\"",
        "\"dzasum(case 47)\"",
        "\"sasum(case 48)\"",
        "\"dasum(case 49)\"",
        "\"scasum(case 50)\"",
        "\"dzasum(case 51)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_axpy.c": {
    "test_axpy": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": [
        "\"saxpy(case 64)\"",
        "\"daxpy(case 65)\"",
        "\"caxpy(case 66) real\"",
        "\"caxpy(case 66) imag\"",
        "\"zaxpy(case 67) real\"",
        "\"zaxpy(case 67) imag\"",
        "\"saxpy(case 68)\"",
        "\"daxpy(case 69)\"",
        "\"caxpy(case 70) real\"",
        "\"caxpy(case 70) imag\"",
        "\"zaxpy(case 71) real\"",
        "\"zaxpy(case 71) imag\"",
        "\"saxpy(case 72)\"",
        "\"daxpy(case 73)\"",
        "\"caxpy(case 74) real\"",
        "\"caxpy(case 74) imag\"",
        "\"zaxpy(case 75) real\"",
        "\"zaxpy(case 75) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_copy.c": {
    "test_copy": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": [
        "\"scopy(case 76)\"",
        "\"dcopy(case 77)\"",
        "\"ccopy(case 78) real\"",
        "\"ccopy(case 78) imag\"",
        "\"zcopy(case 79) real\"",
        "\"zcopy(case 79) imag\"",
        "\"scopy(case 80)\"",
        "\"dcopy(case 81)\"",
        "\"ccopy(case 82) real\"",
        "\"ccopy(case 82) imag\"",
        "\"zcopy(case 83) real\"",
        "\"zcopy(case 83) imag\"",
        "\"scopy(case 84)\"",
        "\"dcopy(case 85)\"",
        "\"ccopy(case 86) real\"",
        "\"ccopy(case 86) imag\"",
        "\"zcopy(case 87) real\"",
        "\"zcopy(case 87) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_dot.c": {
    "test_dot": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": [
        "\"sdsdot(case 1)\"",
        "\"sdsdot(case 2)\"",
        "\"sdsdot(case 3)\"",
        "\"sdsdot(case 4)\"",
        "\"sdsdot(case 5)\"",
        "\"sdsdot(case 6)\"",
        "\"sdsdot(case 7)\"",
        "\"sdsdot(case 8)\"",
        "\"sdsdot(case 9)\"",
        "\"sdot(case 10)\"",
        "\"ddot(case 11)\"",
        "\"cdotu(case 12) real\"",
        "\"cdotu(case 12) imag\"",
        "\"cdotc(case 13) real\"",
        "\"cdotc(case 13) imag\"",
        "\"zdotu(case 14) real\"",
        "\"zdotu(case 14) imag\"",
        "\"zdotc(case 15) real\"",
        "\"zdotc(case 15) imag\"",
        "\"sdot(case 16)\"",
        "\"ddot(case 17)\"",
        "\"cdotu(case 18) real\"",
        "\"cdotu(case 18) imag\"",
        "\"cdotc(case 19) real\"",
        "\"cdotc(case 19) imag\"",
        "\"zdotu(case 20) real\"",
        "\"zdotu(case 20) imag\"",
        "\"zdotc(case 21) real\"",
        "\"zdotc(case 21) imag\"",
        "\"sdot(case 22)\"",
        "\"ddot(case 23)\"",
        "\"cdotu(case 24) real\"",
        "\"cdotu(case 24) imag\"",
        "\"cdotc(case 25) real\"",
        "\"cdotc(case 25) imag\"",
        "\"zdotu(case 26) real\"",
        "\"zdotu(case 26) imag\"",
        "\"zdotc(case 27) real\"",
        "\"zdotc(case 27) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_gbmv.c": {
    "test_gbmv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        542,
        1
      ],
      "strings": [
        "\"sgbmv(case 794)\"",
        "\"sgbmv(case 795)\"",
        "\"sgbmv(case 796)\"",
        "\"sgbmv(case 797)\"",
        "\"dgbmv(case 798)\"",
        "\"dgbmv(case 799)\"",
        "\"dgbmv(case 800)\"",
        "\"dgbmv(case 801)\"",
        "\"cgbmv(case 802) real\"",
        "\"cgbmv(case 802) imag\"",
        "\"cgbmv(case 803) real\"",
        "\"cgbmv(case 803) imag\"",
        "\"cgbmv(case 804) real\"",
        "\"cgbmv(case 804) imag\"",
        "\"cgbmv(case 805) real\"",
        "\"cgbmv(case 805) imag\"",
        "\"cgbmv(case 806) real\"",
        "\"cgbmv(case 806) imag\"",
        "\"cgbmv(case 807) real\"",
        "\"cgbmv(case 807) imag\"",
        "\"zgbmv(case 808) real\"",
        "\"zgbmv(case 808) imag\"",
        "\"zgbmv(case 809) real\"",
        "\"zgbmv(case 809) imag\"",
        "\"zgbmv(case 810) real\"",
        "\"zgbmv(case 810) imag\"",
        "\"zgbmv(case 811) real\"",
        "\"zgbmv(case 811) imag\"",
        "\"zgbmv(case 812) real\"",
        "\"zgbmv(case 812) imag\"",
        "\"zgbmv(case 813) real\"",
        "\"zgbmv(case 813) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_gemm.c": {
    "test_gemm": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        1398,
        1
      ],
      "strings": [
        "\"sgemm(case 1466)\"",
        "\"sgemm(case 1467)\"",
        "\"sgemm(case 1468)\"",
        "\"sgemm(case 1469)\"",
        "\"sgemm(case 1470)\"",
        "\"sgemm(case 1471)\"",
        "\"sgemm(case 1472)\"",
        "\"sgemm(case 1473)\"",
        "\"dgemm(case 1474)\"",
        "\"dgemm(case 1475)\"",
        "\"dgemm(case 1476)\"",
        "\"dgemm(case 1477)\"",
        "\"dgemm(case 1478)\"",
        "\"dgemm(case 1479)\"",
        "\"dgemm(case 1480)\"",
        "\"dgemm(case 1481)\"",
        "\"cgemm(case 1482) real\"",
        "\"cgemm(case 1482) imag\"",
        "\"cgemm(case 1483) real\"",
        "\"cgemm(case 1483) imag\"",
        "\"cgemm(case 1484) real\"",
        "\"cgemm(case 1484) imag\"",
        "\"cgemm(case 1485) real\"",
        "\"cgemm(case 1485) imag\"",
        "\"cgemm(case 1486) real\"",
        "\"cgemm(case 1486) imag\"",
        "\"cgemm(case 1487) real\"",
        "\"cgemm(case 1487) imag\"",
        "\"cgemm(case 1488) real\"",
        "\"cgemm(case 1488) imag\"",
        "\"cgemm(case 1489) real\"",
        "\"cgemm(case 1489) imag\"",
        "\"cgemm(case 1490) real\"",
        "\"cgemm(case 1490) imag\"",
        "\"cgemm(case 1491) real\"",
        "\"cgemm(case 1491) imag\"",
        "\"cgemm(case 1492) real\"",
        "\"cgemm(case 1492) imag\"",
        "\"cgemm(case 1493) real\"",
        "\"cgemm(case 1493) imag\"",
        "\"cgemm(case 1494) real\"",
        "\"cgemm(case 1494) imag\"",
        "\"cgemm(case 1495) real\"",
        "\"cgemm(case 1495) imag\"",
        "\"cgemm(case 1496) real\"",
        "\"cgemm(case 1496) imag\"",
        "\"cgemm(case 1497) real\"",
        "\"cgemm(case 1497) imag\"",
        "\"cgemm(case 1498) real\"",
        "\"cgemm(case 1498) imag\"",
        "\"cgemm(case 1499) real\"",
        "\"cgemm(case 1499) imag\"",
        "\"zgemm(case 1500) real\"",
        "\"zgemm(case 1500) imag\"",
        "\"zgemm(case 1501) real\"",
        "\"zgemm(case 1501) imag\"",
        "\"zgemm(case 1502) real\"",
        "\"zgemm(case 1502) imag\"",
        "\"zgemm(case 1503) real\"",
        "\"zgemm(case 1503) imag\"",
        "\"zgemm(case 1504) real\"",
        "\"zgemm(case 1504) imag\"",
        "\"zgemm(case 1505) real\"",
        "\"zgemm(case 1505) imag\"",
        "\"zgemm(case 1506) real\"",
        "\"zgemm(case 1506) imag\"",
        "\"zgemm(case 1507) real\"",
        "\"zgemm(case 1507) imag\"",
        "\"zgemm(case 1508) real\"",
        "\"zgemm(case 1508) imag\"",
        "\"zgemm(case 1509) real\"",
        "\"zgemm(case 1509) imag\"",
        "\"zgemm(case 1510) real\"",
        "\"zgemm(case 1510) imag\"",
        "\"zgemm(case 1511) real\"",
        "\"zgemm(case 1511) imag\"",
        "\"zgemm(case 1512) real\"",
        "\"zgemm(case 1512) imag\"",
        "\"zgemm(case 1513) real\"",
        "\"zgemm(case 1513) imag\"",
        "\"zgemm(case 1514) real\"",
        "\"zgemm(case 1514) imag\"",
        "\"zgemm(case 1515) real\"",
        "\"zgemm(case 1515) imag\"",
        "\"zgemm(case 1516) real\"",
        "\"zgemm(case 1516) imag\"",
        "\"zgemm(case 1517) real\"",
        "\"zgemm(case 1517) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_gemv.c": {
    "test_gemv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        502,
        1
      ],
      "strings": [
        "\"sgemv(case 774)\"",
        "\"sgemv(case 775)\"",
        "\"sgemv(case 776)\"",
        "\"sgemv(case 777)\"",
        "\"dgemv(case 778)\"",
        "\"dgemv(case 779)\"",
        "\"dgemv(case 780)\"",
        "\"dgemv(case 781)\"",
        "\"cgemv(case 782) real\"",
        "\"cgemv(case 782) imag\"",
        "\"cgemv(case 783) real\"",
        "\"cgemv(case 783) imag\"",
        "\"cgemv(case 784) real\"",
        "\"cgemv(case 784) imag\"",
        "\"cgemv(case 785) real\"",
        "\"cgemv(case 785) imag\"",
        "\"cgemv(case 786) real\"",
        "\"cgemv(case 786) imag\"",
        "\"cgemv(case 787) real\"",
        "\"cgemv(case 787) imag\"",
        "\"zgemv(case 788) real\"",
        "\"zgemv(case 788) imag\"",
        "\"zgemv(case 789) real\"",
        "\"zgemv(case 789) imag\"",
        "\"zgemv(case 790) real\"",
        "\"zgemv(case 790) imag\"",
        "\"zgemv(case 791) real\"",
        "\"zgemv(case 791) imag\"",
        "\"zgemv(case 792) real\"",
        "\"zgemv(case 792) imag\"",
        "\"zgemv(case 793) real\"",
        "\"zgemv(case 793) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_ger.c": {
    "test_ger": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": [
        "\"sger(case 1390)\"",
        "\"sger(case 1391)\"",
        "\"dger(case 1392)\"",
        "\"dger(case 1393)\"",
        "\"cgeru(case 1394) real\"",
        "\"cgeru(case 1394) imag\"",
        "\"cgerc(case 1395) real\"",
        "\"cgerc(case 1395) imag\"",
        "\"cgeru(case 1396) real\"",
        "\"cgeru(case 1396) imag\"",
        "\"cgerc(case 1397) real\"",
        "\"cgerc(case 1397) imag\"",
        "\"zgeru(case 1398) real\"",
        "\"zgeru(case 1398) imag\"",
        "\"zgerc(case 1399) real\"",
        "\"zgerc(case 1399) imag\"",
        "\"zgeru(case 1400) real\"",
        "\"zgeru(case 1400) imag\"",
        "\"zgerc(case 1401) real\"",
        "\"zgerc(case 1401) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_hbmv.c": {
    "test_hbmv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        410,
        1
      ],
      "strings": [
        "\"chbmv(case 1086) real\"",
        "\"chbmv(case 1086) imag\"",
        "\"chbmv(case 1087) real\"",
        "\"chbmv(case 1087) imag\"",
        "\"chbmv(case 1088) real\"",
        "\"chbmv(case 1088) imag\"",
        "\"chbmv(case 1089) real\"",
        "\"chbmv(case 1089) imag\"",
        "\"chbmv(case 1090) real\"",
        "\"chbmv(case 1090) imag\"",
        "\"chbmv(case 1091) real\"",
        "\"chbmv(case 1091) imag\"",
        "\"chbmv(case 1092) real\"",
        "\"chbmv(case 1092) imag\"",
        "\"chbmv(case 1093) real\"",
        "\"chbmv(case 1093) imag\"",
        "\"zhbmv(case 1094) real\"",
        "\"zhbmv(case 1094) imag\"",
        "\"zhbmv(case 1095) real\"",
        "\"zhbmv(case 1095) imag\"",
        "\"zhbmv(case 1096) real\"",
        "\"zhbmv(case 1096) imag\"",
        "\"zhbmv(case 1097) real\"",
        "\"zhbmv(case 1097) imag\"",
        "\"zhbmv(case 1098) real\"",
        "\"zhbmv(case 1098) imag\"",
        "\"zhbmv(case 1099) real\"",
        "\"zhbmv(case 1099) imag\"",
        "\"zhbmv(case 1100) real\"",
        "\"zhbmv(case 1100) imag\"",
        "\"zhbmv(case 1101) real\"",
        "\"zhbmv(case 1101) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_hemm.c": {
    "test_hemm": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        426,
        1
      ],
      "strings": [
        "\"chemm(case 1550) real\"",
        "\"chemm(case 1550) imag\"",
        "\"chemm(case 1551) real\"",
        "\"chemm(case 1551) imag\"",
        "\"chemm(case 1552) real\"",
        "\"chemm(case 1552) imag\"",
        "\"chemm(case 1553) real\"",
        "\"chemm(case 1553) imag\"",
        "\"chemm(case 1554) real\"",
        "\"chemm(case 1554) imag\"",
        "\"chemm(case 1555) real\"",
        "\"chemm(case 1555) imag\"",
        "\"chemm(case 1556) real\"",
        "\"chemm(case 1556) imag\"",
        "\"chemm(case 1557) real\"",
        "\"chemm(case 1557) imag\"",
        "\"zhemm(case 1558) real\"",
        "\"zhemm(case 1558) imag\"",
        "\"zhemm(case 1559) real\"",
        "\"zhemm(case 1559) imag\"",
        "\"zhemm(case 1560) real\"",
        "\"zhemm(case 1560) imag\"",
        "\"zhemm(case 1561) real\"",
        "\"zhemm(case 1561) imag\"",
        "\"zhemm(case 1562) real\"",
        "\"zhemm(case 1562) imag\"",
        "\"zhemm(case 1563) real\"",
        "\"zhemm(case 1563) imag\"",
        "\"zhemm(case 1564) real\"",
        "\"zhemm(case 1564) imag\"",
        "\"zhemm(case 1565) real\"",
        "\"zhemm(case 1565) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_hemv.c": {
    "test_hemv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": [
        "\"chemv(case 1070) real\"",
        "\"chemv(case 1070) imag\"",
        "\"chemv(case 1071) real\"",
        "\"chemv(case 1071) imag\"",
        "\"chemv(case 1072) real\"",
        "\"chemv(case 1072) imag\"",
        "\"chemv(case 1073) real\"",
        "\"chemv(case 1073) imag\"",
        "\"chemv(case 1074) real\"",
        "\"chemv(case 1074) imag\"",
        "\"chemv(case 1075) real\"",
        "\"chemv(case 1075) imag\"",
        "\"chemv(case 1076) real\"",
        "\"chemv(case 1076) imag\"",
        "\"chemv(case 1077) real\"",
        "\"chemv(case 1077) imag\"",
        "\"zhemv(case 1078) real\"",
        "\"zhemv(case 1078) imag\"",
        "\"zhemv(case 1079) real\"",
        "\"zhemv(case 1079) imag\"",
        "\"zhemv(case 1080) real\"",
        "\"zhemv(case 1080) imag\"",
        "\"zhemv(case 1081) real\"",
        "\"zhemv(case 1081) imag\"",
        "\"zhemv(case 1082) real\"",
        "\"zhemv(case 1082) imag\"",
        "\"zhemv(case 1083) real\"",
        "\"zhemv(case 1083) imag\"",
        "\"zhemv(case 1084) real\"",
        "\"zhemv(case 1084) imag\"",
        "\"zhemv(case 1085) real\"",
        "\"zhemv(case 1085) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_her.c": {
    "test_her": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": [
        "\"cher(case 1410) real\"",
        "\"cher(case 1410) imag\"",
        "\"cher(case 1411) real\"",
        "\"cher(case 1411) imag\"",
        "\"cher(case 1412) real\"",
        "\"cher(case 1412) imag\"",
        "\"cher(case 1413) real\"",
        "\"cher(case 1413) imag\"",
        "\"zher(case 1414) real\"",
        "\"zher(case 1414) imag\"",
        "\"zher(case 1415) real\"",
        "\"zher(case 1415) imag\"",
        "\"zher(case 1416) real\"",
        "\"zher(case 1416) imag\"",
        "\"zher(case 1417) real\"",
        "\"zher(case 1417) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_her2.c": {
    "test_her2": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"cher2(case 1450) real\"",
        "\"cher2(case 1450) imag\"",
        "\"cher2(case 1451) real\"",
        "\"cher2(case 1451) imag\"",
        "\"cher2(case 1452) real\"",
        "\"cher2(case 1452) imag\"",
        "\"cher2(case 1453) real\"",
        "\"cher2(case 1453) imag\"",
        "\"zher2(case 1454) real\"",
        "\"zher2(case 1454) imag\"",
        "\"zher2(case 1455) real\"",
        "\"zher2(case 1455) imag\"",
        "\"zher2(case 1456) real\"",
        "\"zher2(case 1456) imag\"",
        "\"zher2(case 1457) real\"",
        "\"zher2(case 1457) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_her2k.c": {
    "test_her2k": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        426,
        1
      ],
      "strings": [
        "\"cher2k(case 1646) real\"",
        "\"cher2k(case 1646) imag\"",
        "\"cher2k(case 1647) real\"",
        "\"cher2k(case 1647) imag\"",
        "\"cher2k(case 1648) real\"",
        "\"cher2k(case 1648) imag\"",
        "\"cher2k(case 1649) real\"",
        "\"cher2k(case 1649) imag\"",
        "\"cher2k(case 1650) real\"",
        "\"cher2k(case 1650) imag\"",
        "\"cher2k(case 1651) real\"",
        "\"cher2k(case 1651) imag\"",
        "\"cher2k(case 1652) real\"",
        "\"cher2k(case 1652) imag\"",
        "\"cher2k(case 1653) real\"",
        "\"cher2k(case 1653) imag\"",
        "\"zher2k(case 1654) real\"",
        "\"zher2k(case 1654) imag\"",
        "\"zher2k(case 1655) real\"",
        "\"zher2k(case 1655) imag\"",
        "\"zher2k(case 1656) real\"",
        "\"zher2k(case 1656) imag\"",
        "\"zher2k(case 1657) real\"",
        "\"zher2k(case 1657) imag\"",
        "\"zher2k(case 1658) real\"",
        "\"zher2k(case 1658) imag\"",
        "\"zher2k(case 1659) real\"",
        "\"zher2k(case 1659) imag\"",
        "\"zher2k(case 1660) real\"",
        "\"zher2k(case 1660) imag\"",
        "\"zher2k(case 1661) real\"",
        "\"zher2k(case 1661) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_herk.c": {
    "test_herk": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": [
        "\"cherk(case 1598) real\"",
        "\"cherk(case 1598) imag\"",
        "\"cherk(case 1599) real\"",
        "\"cherk(case 1599) imag\"",
        "\"cherk(case 1600) real\"",
        "\"cherk(case 1600) imag\"",
        "\"cherk(case 1601) real\"",
        "\"cherk(case 1601) imag\"",
        "\"cherk(case 1602) real\"",
        "\"cherk(case 1602) imag\"",
        "\"cherk(case 1603) real\"",
        "\"cherk(case 1603) imag\"",
        "\"cherk(case 1604) real\"",
        "\"cherk(case 1604) imag\"",
        "\"cherk(case 1605) real\"",
        "\"cherk(case 1605) imag\"",
        "\"zherk(case 1606) real\"",
        "\"zherk(case 1606) imag\"",
        "\"zherk(case 1607) real\"",
        "\"zherk(case 1607) imag\"",
        "\"zherk(case 1608) real\"",
        "\"zherk(case 1608) imag\"",
        "\"zherk(case 1609) real\"",
        "\"zherk(case 1609) imag\"",
        "\"zherk(case 1610) real\"",
        "\"zherk(case 1610) imag\"",
        "\"zherk(case 1611) real\"",
        "\"zherk(case 1611) imag\"",
        "\"zherk(case 1612) real\"",
        "\"zherk(case 1612) imag\"",
        "\"zherk(case 1613) real\"",
        "\"zherk(case 1613) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_hpmv.c": {
    "test_hpmv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        378,
        1
      ],
      "strings": [
        "\"chpmv(case 1118) real\"",
        "\"chpmv(case 1118) imag\"",
        "\"chpmv(case 1119) real\"",
        "\"chpmv(case 1119) imag\"",
        "\"chpmv(case 1120) real\"",
        "\"chpmv(case 1120) imag\"",
        "\"chpmv(case 1121) real\"",
        "\"chpmv(case 1121) imag\"",
        "\"chpmv(case 1122) real\"",
        "\"chpmv(case 1122) imag\"",
        "\"chpmv(case 1123) real\"",
        "\"chpmv(case 1123) imag\"",
        "\"chpmv(case 1124) real\"",
        "\"chpmv(case 1124) imag\"",
        "\"chpmv(case 1125) real\"",
        "\"chpmv(case 1125) imag\"",
        "\"zhpmv(case 1126) real\"",
        "\"zhpmv(case 1126) imag\"",
        "\"zhpmv(case 1127) real\"",
        "\"zhpmv(case 1127) imag\"",
        "\"zhpmv(case 1128) real\"",
        "\"zhpmv(case 1128) imag\"",
        "\"zhpmv(case 1129) real\"",
        "\"zhpmv(case 1129) imag\"",
        "\"zhpmv(case 1130) real\"",
        "\"zhpmv(case 1130) imag\"",
        "\"zhpmv(case 1131) real\"",
        "\"zhpmv(case 1131) imag\"",
        "\"zhpmv(case 1132) real\"",
        "\"zhpmv(case 1132) imag\"",
        "\"zhpmv(case 1133) real\"",
        "\"zhpmv(case 1133) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_hpr.c": {
    "test_hpr": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": [
        "\"chpr(case 1418) real\"",
        "\"chpr(case 1418) imag\"",
        "\"chpr(case 1419) real\"",
        "\"chpr(case 1419) imag\"",
        "\"chpr(case 1420) real\"",
        "\"chpr(case 1420) imag\"",
        "\"chpr(case 1421) real\"",
        "\"chpr(case 1421) imag\"",
        "\"zhpr(case 1422) real\"",
        "\"zhpr(case 1422) imag\"",
        "\"zhpr(case 1423) real\"",
        "\"zhpr(case 1423) imag\"",
        "\"zhpr(case 1424) real\"",
        "\"zhpr(case 1424) imag\"",
        "\"zhpr(case 1425) real\"",
        "\"zhpr(case 1425) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_hpr2.c": {
    "test_hpr2": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"chpr2(case 1458) real\"",
        "\"chpr2(case 1458) imag\"",
        "\"chpr2(case 1459) real\"",
        "\"chpr2(case 1459) imag\"",
        "\"chpr2(case 1460) real\"",
        "\"chpr2(case 1460) imag\"",
        "\"chpr2(case 1461) real\"",
        "\"chpr2(case 1461) imag\"",
        "\"zhpr2(case 1462) real\"",
        "\"zhpr2(case 1462) imag\"",
        "\"zhpr2(case 1463) real\"",
        "\"zhpr2(case 1463) imag\"",
        "\"zhpr2(case 1464) real\"",
        "\"zhpr2(case 1464) imag\"",
        "\"zhpr2(case 1465) real\"",
        "\"zhpr2(case 1465) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_nrm2.c": {
    "test_nrm2": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": [
        "\"snrm2(case 28)\"",
        "\"dnrm2(case 29)\"",
        "\"scnrm2(case 30)\"",
        "\"dznrm2(case 31)\"",
        "\"snrm2(case 32)\"",
        "\"dnrm2(case 33)\"",
        "\"scnrm2(case 34)\"",
        "\"dznrm2(case 35)\"",
        "\"snrm2(case 36)\"",
        "\"dnrm2(case 37)\"",
        "\"scnrm2(case 38)\"",
        "\"dznrm2(case 39)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_rot.c": {
    "test_rot": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        634,
        1
      ],
      "strings": [
        "\"srot(case 558)\"",
        "\"srot(case 559)\"",
        "\"srot(case 560)\"",
        "\"srot(case 561)\"",
        "\"srot(case 562)\"",
        "\"srot(case 563)\"",
        "\"srot(case 564)\"",
        "\"srot(case 565)\"",
        "\"drot(case 566)\"",
        "\"drot(case 567)\"",
        "\"drot(case 568)\"",
        "\"drot(case 569)\"",
        "\"drot(case 570)\"",
        "\"drot(case 571)\"",
        "\"drot(case 572)\"",
        "\"drot(case 573)\"",
        "\"srot(case 574)\"",
        "\"srot(case 575)\"",
        "\"srot(case 576)\"",
        "\"srot(case 577)\"",
        "\"srot(case 578)\"",
        "\"srot(case 579)\"",
        "\"srot(case 580)\"",
        "\"srot(case 581)\"",
        "\"drot(case 582)\"",
        "\"drot(case 583)\"",
        "\"drot(case 584)\"",
        "\"drot(case 585)\"",
        "\"drot(case 586)\"",
        "\"drot(case 587)\"",
        "\"drot(case 588)\"",
        "\"drot(case 589)\"",
        "\"srot(case 590)\"",
        "\"srot(case 591)\"",
        "\"srot(case 592)\"",
        "\"srot(case 593)\"",
        "\"srot(case 594)\"",
        "\"srot(case 595)\"",
        "\"srot(case 596)\"",
        "\"srot(case 597)\"",
        "\"drot(case 598)\"",
        "\"drot(case 599)\"",
        "\"drot(case 600)\"",
        "\"drot(case 601)\"",
        "\"drot(case 602)\"",
        "\"drot(case 603)\"",
        "\"drot(case 604)\"",
        "\"drot(case 605)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_rotg.c": {
    "test_rotg": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        1676,
        1
      ],
      "strings": [
        "\"srotg(case 166)\"",
        "\"srotg(case 167)\"",
        "\"srotg(case 168)\"",
        "\"srotg(case 169)\"",
        "\"srotg(case 170)\"",
        "\"srotg(case 171)\"",
        "\"srotg(case 172)\"",
        "\"srotg(case 173)\"",
        "\"srotg(case 174)\"",
        "\"srotg(case 175)\"",
        "\"srotg(case 176)\"",
        "\"srotg(case 177)\"",
        "\"srotg(case 178)\"",
        "\"srotg(case 179)\"",
        "\"srotg(case 180)\"",
        "\"srotg(case 181)\"",
        "\"srotg(case 182)\"",
        "\"srotg(case 183)\"",
        "\"srotg(case 184)\"",
        "\"srotg(case 185)\"",
        "\"srotg(case 186)\"",
        "\"srotg(case 187)\"",
        "\"srotg(case 188)\"",
        "\"srotg(case 189)\"",
        "\"srotg(case 190)\"",
        "\"srotg(case 191)\"",
        "\"srotg(case 192)\"",
        "\"srotg(case 193)\"",
        "\"srotg(case 194)\"",
        "\"srotg(case 195)\"",
        "\"srotg(case 196)\"",
        "\"srotg(case 197)\"",
        "\"srotg(case 198)\"",
        "\"srotg(case 199)\"",
        "\"srotg(case 200)\"",
        "\"srotg(case 201)\"",
        "\"srotg(case 202)\"",
        "\"srotg(case 203)\"",
        "\"srotg(case 204)\"",
        "\"srotg(case 205)\"",
        "\"srotg(case 206)\"",
        "\"srotg(case 207)\"",
        "\"srotg(case 208)\"",
        "\"srotg(case 209)\"",
        "\"srotg(case 210)\"",
        "\"srotg(case 211)\"",
        "\"srotg(case 212)\"",
        "\"srotg(case 213)\"",
        "\"srotg(case 214)\"",
        "\"srotg(case 215)\"",
        "\"srotg(case 216)\"",
        "\"srotg(case 217)\"",
        "\"srotg(case 218)\"",
        "\"srotg(case 219)\"",
        "\"srotg(case 220)\"",
        "\"srotg(case 221)\"",
        "\"srotg(case 222)\"",
        "\"srotg(case 223)\"",
        "\"srotg(case 224)\"",
        "\"srotg(case 225)\"",
        "\"srotg(case 226)\"",
        "\"srotg(case 227)\"",
        "\"srotg(case 228)\"",
        "\"srotg(case 229)\"",
        "\"srotg(case 230)\"",
        "\"srotg(case 231)\"",
        "\"srotg(case 232)\"",
        "\"srotg(case 233)\"",
        "\"srotg(case 234)\"",
        "\"srotg(case 235)\"",
        "\"srotg(case 236)\"",
        "\"srotg(case 237)\"",
        "\"srotg(case 238)\"",
        "\"srotg(case 239)\"",
        "\"srotg(case 240)\"",
        "\"srotg(case 241)\"",
        "\"srotg(case 242)\"",
        "\"srotg(case 243)\"",
        "\"srotg(case 244)\"",
        "\"srotg(case 245)\"",
        "\"srotg(case 246)\"",
        "\"srotg(case 247)\"",
        "\"srotg(case 248)\"",
        "\"srotg(case 249)\"",
        "\"srotg(case 250)\"",
        "\"srotg(case 251)\"",
        "\"srotg(case 252)\"",
        "\"srotg(case 253)\"",
        "\"srotg(case 254)\"",
        "\"srotg(case 255)\"",
        "\"srotg(case 256)\"",
        "\"srotg(case 257)\"",
        "\"srotg(case 258)\"",
        "\"srotg(case 259)\"",
        "\"srotg(case 260)\"",
        "\"srotg(case 261)\"",
        "\"srotg(case 262)\"",
        "\"srotg(case 263)\"",
        "\"srotg(case 264)\"",
        "\"srotg(case 265)\"",
        "\"srotg(case 266)\"",
        "\"srotg(case 267)\"",
        "\"srotg(case 268)\"",
        "\"srotg(case 269)\"",
        "\"srotg(case 270)\"",
        "\"srotg(case 271)\"",
        "\"srotg(case 272)\"",
        "\"srotg(case 273)\"",
        "\"srotg(case 274)\"",
        "\"srotg(case 275)\"",
        "\"srotg(case 276)\"",
        "\"srotg(case 277)\"",
        "\"srotg(case 278)\"",
        "\"srotg(case 279)\"",
        "\"srotg(case 280)\"",
        "\"srotg(case 281)\"",
        "\"srotg(case 282)\"",
        "\"srotg(case 283)\"",
        "\"srotg(case 284)\"",
        "\"srotg(case 285)\"",
        "\"srotg(case 286)\"",
        "\"srotg(case 287)\"",
        "\"srotg(case 288)\"",
        "\"srotg(case 289)\"",
        "\"srotg(case 290)\"",
        "\"srotg(case 291)\"",
        "\"srotg(case 292)\"",
        "\"srotg(case 293)\"",
        "\"srotg(case 294)\"",
        "\"srotg(case 295)\"",
        "\"srotg(case 296)\"",
        "\"srotg(case 297)\"",
        "\"srotg(case 298)\"",
        "\"srotg(case 299)\"",
        "\"srotg(case 300)\"",
        "\"srotg(case 301)\"",
        "\"srotg(case 302)\"",
        "\"srotg(case 303)\"",
        "\"srotg(case 304)\"",
        "\"srotg(case 305)\"",
        "\"srotg(case 306)\"",
        "\"srotg(case 307)\"",
        "\"srotg(case 308)\"",
        "\"srotg(case 309)\"",
        "\"srotg(case 310)\"",
        "\"srotg(case 311)\"",
        "\"srotg(case 312)\"",
        "\"srotg(case 313)\"",
        "\"srotg(case 314)\"",
        "\"srotg(case 315)\"",
        "\"srotg(case 316)\"",
        "\"srotg(case 317)\"",
        "\"srotg(case 318)\"",
        "\"srotg(case 319)\"",
        "\"srotg(case 320)\"",
        "\"srotg(case 321)\"",
        "\"srotg(case 322)\"",
        "\"srotg(case 323)\"",
        "\"srotg(case 324)\"",
        "\"srotg(case 325)\"",
        "\"srotg(case 326)\"",
        "\"srotg(case 327)\"",
        "\"srotg(case 328)\"",
        "\"srotg(case 329)\"",
        "\"srotg(case 330)\"",
        "\"srotg(case 331)\"",
        "\"srotg(case 332)\"",
        "\"srotg(case 333)\"",
        "\"srotg(case 334)\"",
        "\"srotg(case 335)\"",
        "\"srotg(case 336)\"",
        "\"srotg(case 337)\"",
        "\"srotg(case 338)\"",
        "\"srotg(case 339)\"",
        "\"srotg(case 340)\"",
        "\"srotg(case 341)\"",
        "\"srotg(case 342)\"",
        "\"srotg(case 343)\"",
        "\"srotg(case 344)\"",
        "\"srotg(case 345)\"",
        "\"srotg(case 346)\"",
        "\"srotg(case 347)\"",
        "\"srotg(case 348)\"",
        "\"srotg(case 349)\"",
        "\"srotg(case 350)\"",
        "\"srotg(case 351)\"",
        "\"srotg(case 352)\"",
        "\"srotg(case 353)\"",
        "\"srotg(case 354)\"",
        "\"srotg(case 355)\"",
        "\"srotg(case 356)\"",
        "\"srotg(case 357)\"",
        "\"srotg(case 358)\"",
        "\"srotg(case 359)\"",
        "\"srotg(case 360)\"",
        "\"srotg(case 361)\"",
        "\"drotg(case 362)\"",
        "\"drotg(case 363)\"",
        "\"drotg(case 364)\"",
        "\"drotg(case 365)\"",
        "\"drotg(case 366)\"",
        "\"drotg(case 367)\"",
        "\"drotg(case 368)\"",
        "\"drotg(case 369)\"",
        "\"drotg(case 370)\"",
        "\"drotg(case 371)\"",
        "\"drotg(case 372)\"",
        "\"drotg(case 373)\"",
        "\"drotg(case 374)\"",
        "\"drotg(case 375)\"",
        "\"drotg(case 376)\"",
        "\"drotg(case 377)\"",
        "\"drotg(case 378)\"",
        "\"drotg(case 379)\"",
        "\"drotg(case 380)\"",
        "\"drotg(case 381)\"",
        "\"drotg(case 382)\"",
        "\"drotg(case 383)\"",
        "\"drotg(case 384)\"",
        "\"drotg(case 385)\"",
        "\"drotg(case 386)\"",
        "\"drotg(case 387)\"",
        "\"drotg(case 388)\"",
        "\"drotg(case 389)\"",
        "\"drotg(case 390)\"",
        "\"drotg(case 391)\"",
        "\"drotg(case 392)\"",
        "\"drotg(case 393)\"",
        "\"drotg(case 394)\"",
        "\"drotg(case 395)\"",
        "\"drotg(case 396)\"",
        "\"drotg(case 397)\"",
        "\"drotg(case 398)\"",
        "\"drotg(case 399)\"",
        "\"drotg(case 400)\"",
        "\"drotg(case 401)\"",
        "\"drotg(case 402)\"",
        "\"drotg(case 403)\"",
        "\"drotg(case 404)\"",
        "\"drotg(case 405)\"",
        "\"drotg(case 406)\"",
        "\"drotg(case 407)\"",
        "\"drotg(case 408)\"",
        "\"drotg(case 409)\"",
        "\"drotg(case 410)\"",
        "\"drotg(case 411)\"",
        "\"drotg(case 412)\"",
        "\"drotg(case 413)\"",
        "\"drotg(case 414)\"",
        "\"drotg(case 415)\"",
        "\"drotg(case 416)\"",
        "\"drotg(case 417)\"",
        "\"drotg(case 418)\"",
        "\"drotg(case 419)\"",
        "\"drotg(case 420)\"",
        "\"drotg(case 421)\"",
        "\"drotg(case 422)\"",
        "\"drotg(case 423)\"",
        "\"drotg(case 424)\"",
        "\"drotg(case 425)\"",
        "\"drotg(case 426)\"",
        "\"drotg(case 427)\"",
        "\"drotg(case 428)\"",
        "\"drotg(case 429)\"",
        "\"drotg(case 430)\"",
        "\"drotg(case 431)\"",
        "\"drotg(case 432)\"",
        "\"drotg(case 433)\"",
        "\"drotg(case 434)\"",
        "\"drotg(case 435)\"",
        "\"drotg(case 436)\"",
        "\"drotg(case 437)\"",
        "\"drotg(case 438)\"",
        "\"drotg(case 439)\"",
        "\"drotg(case 440)\"",
        "\"drotg(case 441)\"",
        "\"drotg(case 442)\"",
        "\"drotg(case 443)\"",
        "\"drotg(case 444)\"",
        "\"drotg(case 445)\"",
        "\"drotg(case 446)\"",
        "\"drotg(case 447)\"",
        "\"drotg(case 448)\"",
        "\"drotg(case 449)\"",
        "\"drotg(case 450)\"",
        "\"drotg(case 451)\"",
        "\"drotg(case 452)\"",
        "\"drotg(case 453)\"",
        "\"drotg(case 454)\"",
        "\"drotg(case 455)\"",
        "\"drotg(case 456)\"",
        "\"drotg(case 457)\"",
        "\"drotg(case 458)\"",
        "\"drotg(case 459)\"",
        "\"drotg(case 460)\"",
        "\"drotg(case 461)\"",
        "\"drotg(case 462)\"",
        "\"drotg(case 463)\"",
        "\"drotg(case 464)\"",
        "\"drotg(case 465)\"",
        "\"drotg(case 466)\"",
        "\"drotg(case 467)\"",
        "\"drotg(case 468)\"",
        "\"drotg(case 469)\"",
        "\"drotg(case 470)\"",
        "\"drotg(case 471)\"",
        "\"drotg(case 472)\"",
        "\"drotg(case 473)\"",
        "\"drotg(case 474)\"",
        "\"drotg(case 475)\"",
        "\"drotg(case 476)\"",
        "\"drotg(case 477)\"",
        "\"drotg(case 478)\"",
        "\"drotg(case 479)\"",
        "\"drotg(case 480)\"",
        "\"drotg(case 481)\"",
        "\"drotg(case 482)\"",
        "\"drotg(case 483)\"",
        "\"drotg(case 484)\"",
        "\"drotg(case 485)\"",
        "\"drotg(case 486)\"",
        "\"drotg(case 487)\"",
        "\"drotg(case 488)\"",
        "\"drotg(case 489)\"",
        "\"drotg(case 490)\"",
        "\"drotg(case 491)\"",
        "\"drotg(case 492)\"",
        "\"drotg(case 493)\"",
        "\"drotg(case 494)\"",
        "\"drotg(case 495)\"",
        "\"drotg(case 496)\"",
        "\"drotg(case 497)\"",
        "\"drotg(case 498)\"",
        "\"drotg(case 499)\"",
        "\"drotg(case 500)\"",
        "\"drotg(case 501)\"",
        "\"drotg(case 502)\"",
        "\"drotg(case 503)\"",
        "\"drotg(case 504)\"",
        "\"drotg(case 505)\"",
        "\"drotg(case 506)\"",
        "\"drotg(case 507)\"",
        "\"drotg(case 508)\"",
        "\"drotg(case 509)\"",
        "\"drotg(case 510)\"",
        "\"drotg(case 511)\"",
        "\"drotg(case 512)\"",
        "\"drotg(case 513)\"",
        "\"drotg(case 514)\"",
        "\"drotg(case 515)\"",
        "\"drotg(case 516)\"",
        "\"drotg(case 517)\"",
        "\"drotg(case 518)\"",
        "\"drotg(case 519)\"",
        "\"drotg(case 520)\"",
        "\"drotg(case 521)\"",
        "\"drotg(case 522)\"",
        "\"drotg(case 523)\"",
        "\"drotg(case 524)\"",
        "\"drotg(case 525)\"",
        "\"drotg(case 526)\"",
        "\"drotg(case 527)\"",
        "\"drotg(case 528)\"",
        "\"drotg(case 529)\"",
        "\"drotg(case 530)\"",
        "\"drotg(case 531)\"",
        "\"drotg(case 532)\"",
        "\"drotg(case 533)\"",
        "\"drotg(case 534)\"",
        "\"drotg(case 535)\"",
        "\"drotg(case 536)\"",
        "\"drotg(case 537)\"",
        "\"drotg(case 538)\"",
        "\"drotg(case 539)\"",
        "\"drotg(case 540)\"",
        "\"drotg(case 541)\"",
        "\"drotg(case 542)\"",
        "\"drotg(case 543)\"",
        "\"drotg(case 544)\"",
        "\"drotg(case 545)\"",
        "\"drotg(case 546)\"",
        "\"drotg(case 547)\"",
        "\"drotg(case 548)\"",
        "\"drotg(case 549)\"",
        "\"drotg(case 550)\"",
        "\"drotg(case 551)\"",
        "\"drotg(case 552)\"",
        "\"drotg(case 553)\"",
        "\"drotg(case 554)\"",
        "\"drotg(case 555)\"",
        "\"drotg(case 556)\"",
        "\"drotg(case 557)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_rotm.c": {
    "test_rotm": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        1510,
        1
      ],
      "strings": [
        "\"srotm(case 654)\"",
        "\"srotm(case 655)\"",
        "\"srotm(case 656)\"",
        "\"srotm(case 657)\"",
        "\"srotm(case 658)\"",
        "\"srotm(case 659)\"",
        "\"srotm(case 660)\"",
        "\"srotm(case 661)\"",
        "\"srotm(case 662)\"",
        "\"srotm(case 663)\"",
        "\"srotm(case 664)\"",
        "\"srotm(case 665)\"",
        "\"srotm(case 666)\"",
        "\"srotm(case 667)\"",
        "\"srotm(case 668)\"",
        "\"srotm(case 669)\"",
        "\"srotm(case 670)\"",
        "\"srotm(case 671)\"",
        "\"srotm(case 672)\"",
        "\"srotm(case 673)\"",
        "\"drotm(case 674)\"",
        "\"drotm(case 675)\"",
        "\"drotm(case 676)\"",
        "\"drotm(case 677)\"",
        "\"drotm(case 678)\"",
        "\"drotm(case 679)\"",
        "\"drotm(case 680)\"",
        "\"drotm(case 681)\"",
        "\"drotm(case 682)\"",
        "\"drotm(case 683)\"",
        "\"drotm(case 684)\"",
        "\"drotm(case 685)\"",
        "\"drotm(case 686)\"",
        "\"drotm(case 687)\"",
        "\"drotm(case 688)\"",
        "\"drotm(case 689)\"",
        "\"drotm(case 690)\"",
        "\"drotm(case 691)\"",
        "\"drotm(case 692)\"",
        "\"drotm(case 693)\"",
        "\"srotm(case 694)\"",
        "\"srotm(case 695)\"",
        "\"srotm(case 696)\"",
        "\"srotm(case 697)\"",
        "\"srotm(case 698)\"",
        "\"srotm(case 699)\"",
        "\"srotm(case 700)\"",
        "\"srotm(case 701)\"",
        "\"srotm(case 702)\"",
        "\"srotm(case 703)\"",
        "\"srotm(case 704)\"",
        "\"srotm(case 705)\"",
        "\"srotm(case 706)\"",
        "\"srotm(case 707)\"",
        "\"srotm(case 708)\"",
        "\"srotm(case 709)\"",
        "\"srotm(case 710)\"",
        "\"srotm(case 711)\"",
        "\"srotm(case 712)\"",
        "\"srotm(case 713)\"",
        "\"drotm(case 714)\"",
        "\"drotm(case 715)\"",
        "\"drotm(case 716)\"",
        "\"drotm(case 717)\"",
        "\"drotm(case 718)\"",
        "\"drotm(case 719)\"",
        "\"drotm(case 720)\"",
        "\"drotm(case 721)\"",
        "\"drotm(case 722)\"",
        "\"drotm(case 723)\"",
        "\"drotm(case 724)\"",
        "\"drotm(case 725)\"",
        "\"drotm(case 726)\"",
        "\"drotm(case 727)\"",
        "\"drotm(case 728)\"",
        "\"drotm(case 729)\"",
        "\"drotm(case 730)\"",
        "\"drotm(case 731)\"",
        "\"drotm(case 732)\"",
        "\"drotm(case 733)\"",
        "\"srotm(case 734)\"",
        "\"srotm(case 735)\"",
        "\"srotm(case 736)\"",
        "\"srotm(case 737)\"",
        "\"srotm(case 738)\"",
        "\"srotm(case 739)\"",
        "\"srotm(case 740)\"",
        "\"srotm(case 741)\"",
        "\"srotm(case 742)\"",
        "\"srotm(case 743)\"",
        "\"srotm(case 744)\"",
        "\"srotm(case 745)\"",
        "\"srotm(case 746)\"",
        "\"srotm(case 747)\"",
        "\"srotm(case 748)\"",
        "\"srotm(case 749)\"",
        "\"srotm(case 750)\"",
        "\"srotm(case 751)\"",
        "\"srotm(case 752)\"",
        "\"srotm(case 753)\"",
        "\"drotm(case 754)\"",
        "\"drotm(case 755)\"",
        "\"drotm(case 756)\"",
        "\"drotm(case 757)\"",
        "\"drotm(case 758)\"",
        "\"drotm(case 759)\"",
        "\"drotm(case 760)\"",
        "\"drotm(case 761)\"",
        "\"drotm(case 762)\"",
        "\"drotm(case 763)\"",
        "\"drotm(case 764)\"",
        "\"drotm(case 765)\"",
        "\"drotm(case 766)\"",
        "\"drotm(case 767)\"",
        "\"drotm(case 768)\"",
        "\"drotm(case 769)\"",
        "\"drotm(case 770)\"",
        "\"drotm(case 771)\"",
        "\"drotm(case 772)\"",
        "\"drotm(case 773)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_rotmg.c": {
    "test_rotmg": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": [
        "\"srotmg(case 606)\"",
        "\"srotmg(case 607)\"",
        "\"srotmg(case 608)\"",
        "\"srotmg(case 609)\"",
        "\"srotmg(case 610)\"",
        "\"srotmg(case 611)\"",
        "\"srotmg(case 612)\"",
        "\"srotmg(case 613)\"",
        "\"drotmg(case 614)\"",
        "\"drotmg(case 615)\"",
        "\"drotmg(case 616)\"",
        "\"drotmg(case 617)\"",
        "\"drotmg(case 618)\"",
        "\"drotmg(case 619)\"",
        "\"drotmg(case 620)\"",
        "\"drotmg(case 621)\"",
        "\"srotmg(case 622)\"",
        "\"srotmg(case 623)\"",
        "\"srotmg(case 624)\"",
        "\"srotmg(case 625)\"",
        "\"srotmg(case 626)\"",
        "\"srotmg(case 627)\"",
        "\"srotmg(case 628)\"",
        "\"srotmg(case 629)\"",
        "\"drotmg(case 630)\"",
        "\"drotmg(case 631)\"",
        "\"drotmg(case 632)\"",
        "\"drotmg(case 633)\"",
        "\"drotmg(case 634)\"",
        "\"drotmg(case 635)\"",
        "\"drotmg(case 636)\"",
        "\"drotmg(case 637)\"",
        "\"srotmg(case 638)\"",
        "\"srotmg(case 639)\"",
        "\"srotmg(case 640)\"",
        "\"srotmg(case 641)\"",
        "\"srotmg(case 642)\"",
        "\"srotmg(case 643)\"",
        "\"srotmg(case 644)\"",
        "\"srotmg(case 645)\"",
        "\"drotmg(case 646)\"",
        "\"drotmg(case 647)\"",
        "\"drotmg(case 648)\"",
        "\"drotmg(case 649)\"",
        "\"drotmg(case 650)\"",
        "\"drotmg(case 651)\"",
        "\"drotmg(case 652)\"",
        "\"drotmg(case 653)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_sbmv.c": {
    "test_sbmv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": [
        "\"ssbmv(case 1102)\"",
        "\"ssbmv(case 1103)\"",
        "\"ssbmv(case 1104)\"",
        "\"ssbmv(case 1105)\"",
        "\"ssbmv(case 1106)\"",
        "\"ssbmv(case 1107)\"",
        "\"ssbmv(case 1108)\"",
        "\"ssbmv(case 1109)\"",
        "\"dsbmv(case 1110)\"",
        "\"dsbmv(case 1111)\"",
        "\"dsbmv(case 1112)\"",
        "\"dsbmv(case 1113)\"",
        "\"dsbmv(case 1114)\"",
        "\"dsbmv(case 1115)\"",
        "\"dsbmv(case 1116)\"",
        "\"dsbmv(case 1117)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_scal.c": {
    "test_scal": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        910,
        1
      ],
      "strings": [
        "\"sscal(case 112)\"",
        "\"sscal(case 113)\"",
        "\"sscal(case 114)\"",
        "\"dscal(case 115)\"",
        "\"dscal(case 116)\"",
        "\"dscal(case 117)\"",
        "\"cscal(case 118) real\"",
        "\"cscal(case 118) imag\"",
        "\"cscal(case 119) real\"",
        "\"cscal(case 119) imag\"",
        "\"cscal(case 120) real\"",
        "\"cscal(case 120) imag\"",
        "\"cscal(case 121) real\"",
        "\"cscal(case 121) imag\"",
        "\"cscal(case 122) real\"",
        "\"cscal(case 122) imag\"",
        "\"cscal(case 123) real\"",
        "\"cscal(case 123) imag\"",
        "\"zscal(case 124) real\"",
        "\"zscal(case 124) imag\"",
        "\"zscal(case 125) real\"",
        "\"zscal(case 125) imag\"",
        "\"zscal(case 126) real\"",
        "\"zscal(case 126) imag\"",
        "\"zscal(case 127) real\"",
        "\"zscal(case 127) imag\"",
        "\"zscal(case 128) real\"",
        "\"zscal(case 128) imag\"",
        "\"zscal(case 129) real\"",
        "\"zscal(case 129) imag\"",
        "\"sscal(case 130)\"",
        "\"sscal(case 131)\"",
        "\"sscal(case 132)\"",
        "\"dscal(case 133)\"",
        "\"dscal(case 134)\"",
        "\"dscal(case 135)\"",
        "\"cscal(case 136) real\"",
        "\"cscal(case 136) imag\"",
        "\"cscal(case 137) real\"",
        "\"cscal(case 137) imag\"",
        "\"cscal(case 138) real\"",
        "\"cscal(case 138) imag\"",
        "\"cscal(case 139) real\"",
        "\"cscal(case 139) imag\"",
        "\"cscal(case 140) real\"",
        "\"cscal(case 140) imag\"",
        "\"cscal(case 141) real\"",
        "\"cscal(case 141) imag\"",
        "\"zscal(case 142) real\"",
        "\"zscal(case 142) imag\"",
        "\"zscal(case 143) real\"",
        "\"zscal(case 143) imag\"",
        "\"zscal(case 144) real\"",
        "\"zscal(case 144) imag\"",
        "\"zscal(case 145) real\"",
        "\"zscal(case 145) imag\"",
        "\"zscal(case 146) real\"",
        "\"zscal(case 146) imag\"",
        "\"zscal(case 147) real\"",
        "\"zscal(case 147) imag\"",
        "\"sscal(case 148)\"",
        "\"sscal(case 149)\"",
        "\"sscal(case 150)\"",
        "\"dscal(case 151)\"",
        "\"dscal(case 152)\"",
        "\"dscal(case 153)\"",
        "\"cscal(case 154) real\"",
        "\"cscal(case 154) imag\"",
        "\"cscal(case 155) real\"",
        "\"cscal(case 155) imag\"",
        "\"cscal(case 156) real\"",
        "\"cscal(case 156) imag\"",
        "\"cscal(case 157) real\"",
        "\"cscal(case 157) imag\"",
        "\"cscal(case 158) real\"",
        "\"cscal(case 158) imag\"",
        "\"cscal(case 159) real\"",
        "\"cscal(case 159) imag\"",
        "\"zscal(case 160) real\"",
        "\"zscal(case 160) imag\"",
        "\"zscal(case 161) real\"",
        "\"zscal(case 161) imag\"",
        "\"zscal(case 162) real\"",
        "\"zscal(case 162) imag\"",
        "\"zscal(case 163) real\"",
        "\"zscal(case 163) imag\"",
        "\"zscal(case 164) real\"",
        "\"zscal(case 164) imag\"",
        "\"zscal(case 165) real\"",
        "\"zscal(case 165) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_spmv.c": {
    "test_spmv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": [
        "\"sspmv(case 1134)\"",
        "\"sspmv(case 1135)\"",
        "\"sspmv(case 1136)\"",
        "\"sspmv(case 1137)\"",
        "\"sspmv(case 1138)\"",
        "\"sspmv(case 1139)\"",
        "\"sspmv(case 1140)\"",
        "\"sspmv(case 1141)\"",
        "\"dspmv(case 1142)\"",
        "\"dspmv(case 1143)\"",
        "\"dspmv(case 1144)\"",
        "\"dspmv(case 1145)\"",
        "\"dspmv(case 1146)\"",
        "\"dspmv(case 1147)\"",
        "\"dspmv(case 1148)\"",
        "\"dspmv(case 1149)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_spr.c": {
    "test_spr": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": [
        "\"sspr(case 1426)\"",
        "\"sspr(case 1427)\"",
        "\"sspr(case 1428)\"",
        "\"sspr(case 1429)\"",
        "\"dspr(case 1430)\"",
        "\"dspr(case 1431)\"",
        "\"dspr(case 1432)\"",
        "\"dspr(case 1433)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_spr2.c": {
    "test_spr2": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": [
        "\"sspr2(case 1442)\"",
        "\"sspr2(case 1443)\"",
        "\"sspr2(case 1444)\"",
        "\"sspr2(case 1445)\"",
        "\"dspr2(case 1446)\"",
        "\"dspr2(case 1447)\"",
        "\"dspr2(case 1448)\"",
        "\"dspr2(case 1449)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_swap.c": {
    "test_swap": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": [
        "\"sswap(case 88)\"",
        "\"sswap(case 89)\"",
        "\"dswap(case 90)\"",
        "\"dswap(case 91)\"",
        "\"cswap(case 92) real\"",
        "\"cswap(case 92) imag\"",
        "\"cswap(case 93) real\"",
        "\"cswap(case 93) imag\"",
        "\"zswap(case 94) real\"",
        "\"zswap(case 94) imag\"",
        "\"zswap(case 95) real\"",
        "\"zswap(case 95) imag\"",
        "\"sswap(case 96)\"",
        "\"sswap(case 97)\"",
        "\"dswap(case 98)\"",
        "\"dswap(case 99)\"",
        "\"cswap(case 100) real\"",
        "\"cswap(case 100) imag\"",
        "\"cswap(case 101) real\"",
        "\"cswap(case 101) imag\"",
        "\"zswap(case 102) real\"",
        "\"zswap(case 102) imag\"",
        "\"zswap(case 103) real\"",
        "\"zswap(case 103) imag\"",
        "\"sswap(case 104)\"",
        "\"sswap(case 105)\"",
        "\"dswap(case 106)\"",
        "\"dswap(case 107)\"",
        "\"cswap(case 108) real\"",
        "\"cswap(case 108) imag\"",
        "\"cswap(case 109) real\"",
        "\"cswap(case 109) imag\"",
        "\"zswap(case 110) real\"",
        "\"zswap(case 110) imag\"",
        "\"zswap(case 111) real\"",
        "\"zswap(case 111) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_symm.c": {
    "test_symm": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        826,
        1
      ],
      "strings": [
        "\"ssymm(case 1518)\"",
        "\"ssymm(case 1519)\"",
        "\"ssymm(case 1520)\"",
        "\"ssymm(case 1521)\"",
        "\"ssymm(case 1522)\"",
        "\"ssymm(case 1523)\"",
        "\"ssymm(case 1524)\"",
        "\"ssymm(case 1525)\"",
        "\"dsymm(case 1526)\"",
        "\"dsymm(case 1527)\"",
        "\"dsymm(case 1528)\"",
        "\"dsymm(case 1529)\"",
        "\"dsymm(case 1530)\"",
        "\"dsymm(case 1531)\"",
        "\"dsymm(case 1532)\"",
        "\"dsymm(case 1533)\"",
        "\"csymm(case 1534) real\"",
        "\"csymm(case 1534) imag\"",
        "\"csymm(case 1535) real\"",
        "\"csymm(case 1535) imag\"",
        "\"csymm(case 1536) real\"",
        "\"csymm(case 1536) imag\"",
        "\"csymm(case 1537) real\"",
        "\"csymm(case 1537) imag\"",
        "\"csymm(case 1538) real\"",
        "\"csymm(case 1538) imag\"",
        "\"csymm(case 1539) real\"",
        "\"csymm(case 1539) imag\"",
        "\"csymm(case 1540) real\"",
        "\"csymm(case 1540) imag\"",
        "\"csymm(case 1541) real\"",
        "\"csymm(case 1541) imag\"",
        "\"zsymm(case 1542) real\"",
        "\"zsymm(case 1542) imag\"",
        "\"zsymm(case 1543) real\"",
        "\"zsymm(case 1543) imag\"",
        "\"zsymm(case 1544) real\"",
        "\"zsymm(case 1544) imag\"",
        "\"zsymm(case 1545) real\"",
        "\"zsymm(case 1545) imag\"",
        "\"zsymm(case 1546) real\"",
        "\"zsymm(case 1546) imag\"",
        "\"zsymm(case 1547) real\"",
        "\"zsymm(case 1547) imag\"",
        "\"zsymm(case 1548) real\"",
        "\"zsymm(case 1548) imag\"",
        "\"zsymm(case 1549) real\"",
        "\"zsymm(case 1549) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_symv.c": {
    "test_symv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        378,
        1
      ],
      "strings": [
        "\"ssymv(case 1054)\"",
        "\"ssymv(case 1055)\"",
        "\"ssymv(case 1056)\"",
        "\"ssymv(case 1057)\"",
        "\"ssymv(case 1058)\"",
        "\"ssymv(case 1059)\"",
        "\"ssymv(case 1060)\"",
        "\"ssymv(case 1061)\"",
        "\"dsymv(case 1062)\"",
        "\"dsymv(case 1063)\"",
        "\"dsymv(case 1064)\"",
        "\"dsymv(case 1065)\"",
        "\"dsymv(case 1066)\"",
        "\"dsymv(case 1067)\"",
        "\"dsymv(case 1068)\"",
        "\"dsymv(case 1069)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_syr.c": {
    "test_syr": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": [
        "\"ssyr(case 1402)\"",
        "\"ssyr(case 1403)\"",
        "\"ssyr(case 1404)\"",
        "\"ssyr(case 1405)\"",
        "\"dsyr(case 1406)\"",
        "\"dsyr(case 1407)\"",
        "\"dsyr(case 1408)\"",
        "\"dsyr(case 1409)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_syr2.c": {
    "test_syr2": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"ssyr2(case 1434)\"",
        "\"ssyr2(case 1435)\"",
        "\"ssyr2(case 1436)\"",
        "\"ssyr2(case 1437)\"",
        "\"dsyr2(case 1438)\"",
        "\"dsyr2(case 1439)\"",
        "\"dsyr2(case 1440)\"",
        "\"dsyr2(case 1441)\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_syr2k.c": {
    "test_syr2k": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        826,
        1
      ],
      "strings": [
        "\"ssyr2k(case 1614)\"",
        "\"ssyr2k(case 1615)\"",
        "\"ssyr2k(case 1616)\"",
        "\"ssyr2k(case 1617)\"",
        "\"ssyr2k(case 1618)\"",
        "\"ssyr2k(case 1619)\"",
        "\"ssyr2k(case 1620)\"",
        "\"ssyr2k(case 1621)\"",
        "\"dsyr2k(case 1622)\"",
        "\"dsyr2k(case 1623)\"",
        "\"dsyr2k(case 1624)\"",
        "\"dsyr2k(case 1625)\"",
        "\"dsyr2k(case 1626)\"",
        "\"dsyr2k(case 1627)\"",
        "\"dsyr2k(case 1628)\"",
        "\"dsyr2k(case 1629)\"",
        "\"csyr2k(case 1630) real\"",
        "\"csyr2k(case 1630) imag\"",
        "\"csyr2k(case 1631) real\"",
        "\"csyr2k(case 1631) imag\"",
        "\"csyr2k(case 1632) real\"",
        "\"csyr2k(case 1632) imag\"",
        "\"csyr2k(case 1633) real\"",
        "\"csyr2k(case 1633) imag\"",
        "\"csyr2k(case 1634) real\"",
        "\"csyr2k(case 1634) imag\"",
        "\"csyr2k(case 1635) real\"",
        "\"csyr2k(case 1635) imag\"",
        "\"csyr2k(case 1636) real\"",
        "\"csyr2k(case 1636) imag\"",
        "\"csyr2k(case 1637) real\"",
        "\"csyr2k(case 1637) imag\"",
        "\"zsyr2k(case 1638) real\"",
        "\"zsyr2k(case 1638) imag\"",
        "\"zsyr2k(case 1639) real\"",
        "\"zsyr2k(case 1639) imag\"",
        "\"zsyr2k(case 1640) real\"",
        "\"zsyr2k(case 1640) imag\"",
        "\"zsyr2k(case 1641) real\"",
        "\"zsyr2k(case 1641) imag\"",
        "\"zsyr2k(case 1642) real\"",
        "\"zsyr2k(case 1642) imag\"",
        "\"zsyr2k(case 1643) real\"",
        "\"zsyr2k(case 1643) imag\"",
        "\"zsyr2k(case 1644) real\"",
        "\"zsyr2k(case 1644) imag\"",
        "\"zsyr2k(case 1645) real\"",
        "\"zsyr2k(case 1645) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_syrk.c": {
    "test_syrk": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        762,
        1
      ],
      "strings": [
        "\"ssyrk(case 1566)\"",
        "\"ssyrk(case 1567)\"",
        "\"ssyrk(case 1568)\"",
        "\"ssyrk(case 1569)\"",
        "\"ssyrk(case 1570)\"",
        "\"ssyrk(case 1571)\"",
        "\"ssyrk(case 1572)\"",
        "\"ssyrk(case 1573)\"",
        "\"dsyrk(case 1574)\"",
        "\"dsyrk(case 1575)\"",
        "\"dsyrk(case 1576)\"",
        "\"dsyrk(case 1577)\"",
        "\"dsyrk(case 1578)\"",
        "\"dsyrk(case 1579)\"",
        "\"dsyrk(case 1580)\"",
        "\"dsyrk(case 1581)\"",
        "\"csyrk(case 1582) real\"",
        "\"csyrk(case 1582) imag\"",
        "\"csyrk(case 1583) real\"",
        "\"csyrk(case 1583) imag\"",
        "\"csyrk(case 1584) real\"",
        "\"csyrk(case 1584) imag\"",
        "\"csyrk(case 1585) real\"",
        "\"csyrk(case 1585) imag\"",
        "\"csyrk(case 1586) real\"",
        "\"csyrk(case 1586) imag\"",
        "\"csyrk(case 1587) real\"",
        "\"csyrk(case 1587) imag\"",
        "\"csyrk(case 1588) real\"",
        "\"csyrk(case 1588) imag\"",
        "\"csyrk(case 1589) real\"",
        "\"csyrk(case 1589) imag\"",
        "\"zsyrk(case 1590) real\"",
        "\"zsyrk(case 1590) imag\"",
        "\"zsyrk(case 1591) real\"",
        "\"zsyrk(case 1591) imag\"",
        "\"zsyrk(case 1592) real\"",
        "\"zsyrk(case 1592) imag\"",
        "\"zsyrk(case 1593) real\"",
        "\"zsyrk(case 1593) imag\"",
        "\"zsyrk(case 1594) real\"",
        "\"zsyrk(case 1594) imag\"",
        "\"zsyrk(case 1595) real\"",
        "\"zsyrk(case 1595) imag\"",
        "\"zsyrk(case 1596) real\"",
        "\"zsyrk(case 1596) imag\"",
        "\"zsyrk(case 1597) real\"",
        "\"zsyrk(case 1597) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_tbmv.c": {
    "test_tbmv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        1818,
        1
      ],
      "strings": [
        "\"stbmv(case 894)\"",
        "\"stbmv(case 895)\"",
        "\"stbmv(case 896)\"",
        "\"stbmv(case 897)\"",
        "\"stbmv(case 898)\"",
        "\"stbmv(case 899)\"",
        "\"stbmv(case 900)\"",
        "\"stbmv(case 901)\"",
        "\"stbmv(case 902)\"",
        "\"stbmv(case 903)\"",
        "\"stbmv(case 904)\"",
        "\"stbmv(case 905)\"",
        "\"stbmv(case 906)\"",
        "\"stbmv(case 907)\"",
        "\"stbmv(case 908)\"",
        "\"stbmv(case 909)\"",
        "\"dtbmv(case 910)\"",
        "\"dtbmv(case 911)\"",
        "\"dtbmv(case 912)\"",
        "\"dtbmv(case 913)\"",
        "\"dtbmv(case 914)\"",
        "\"dtbmv(case 915)\"",
        "\"dtbmv(case 916)\"",
        "\"dtbmv(case 917)\"",
        "\"dtbmv(case 918)\"",
        "\"dtbmv(case 919)\"",
        "\"dtbmv(case 920)\"",
        "\"dtbmv(case 921)\"",
        "\"dtbmv(case 922)\"",
        "\"dtbmv(case 923)\"",
        "\"dtbmv(case 924)\"",
        "\"dtbmv(case 925)\"",
        "\"ctbmv(case 926) real\"",
        "\"ctbmv(case 926) imag\"",
        "\"ctbmv(case 927) real\"",
        "\"ctbmv(case 927) imag\"",
        "\"ctbmv(case 928) real\"",
        "\"ctbmv(case 928) imag\"",
        "\"ctbmv(case 929) real\"",
        "\"ctbmv(case 929) imag\"",
        "\"ctbmv(case 930) real\"",
        "\"ctbmv(case 930) imag\"",
        "\"ctbmv(case 931) real\"",
        "\"ctbmv(case 931) imag\"",
        "\"ctbmv(case 932) real\"",
        "\"ctbmv(case 932) imag\"",
        "\"ctbmv(case 933) real\"",
        "\"ctbmv(case 933) imag\"",
        "\"ctbmv(case 934) real\"",
        "\"ctbmv(case 934) imag\"",
        "\"ctbmv(case 935) real\"",
        "\"ctbmv(case 935) imag\"",
        "\"ctbmv(case 936) real\"",
        "\"ctbmv(case 936) imag\"",
        "\"ctbmv(case 937) real\"",
        "\"ctbmv(case 937) imag\"",
        "\"ctbmv(case 938) real\"",
        "\"ctbmv(case 938) imag\"",
        "\"ctbmv(case 939) real\"",
        "\"ctbmv(case 939) imag\"",
        "\"ctbmv(case 940) real\"",
        "\"ctbmv(case 940) imag\"",
        "\"ctbmv(case 941) real\"",
        "\"ctbmv(case 941) imag\"",
        "\"ctbmv(case 942) real\"",
        "\"ctbmv(case 942) imag\"",
        "\"ctbmv(case 943) real\"",
        "\"ctbmv(case 943) imag\"",
        "\"ctbmv(case 944) real\"",
        "\"ctbmv(case 944) imag\"",
        "\"ctbmv(case 945) real\"",
        "\"ctbmv(case 945) imag\"",
        "\"ctbmv(case 946) real\"",
        "\"ctbmv(case 946) imag\"",
        "\"ctbmv(case 947) real\"",
        "\"ctbmv(case 947) imag\"",
        "\"ctbmv(case 948) real\"",
        "\"ctbmv(case 948) imag\"",
        "\"ctbmv(case 949) real\"",
        "\"ctbmv(case 949) imag\"",
        "\"ztbmv(case 950) real\"",
        "\"ztbmv(case 950) imag\"",
        "\"ztbmv(case 951) real\"",
        "\"ztbmv(case 951) imag\"",
        "\"ztbmv(case 952) real\"",
        "\"ztbmv(case 952) imag\"",
        "\"ztbmv(case 953) real\"",
        "\"ztbmv(case 953) imag\"",
        "\"ztbmv(case 954) real\"",
        "\"ztbmv(case 954) imag\"",
        "\"ztbmv(case 955) real\"",
        "\"ztbmv(case 955) imag\"",
        "\"ztbmv(case 956) real\"",
        "\"ztbmv(case 956) imag\"",
        "\"ztbmv(case 957) real\"",
        "\"ztbmv(case 957) imag\"",
        "\"ztbmv(case 958) real\"",
        "\"ztbmv(case 958) imag\"",
        "\"ztbmv(case 959) real\"",
        "\"ztbmv(case 959) imag\"",
        "\"ztbmv(case 960) real\"",
        "\"ztbmv(case 960) imag\"",
        "\"ztbmv(case 961) real\"",
        "\"ztbmv(case 961) imag\"",
        "\"ztbmv(case 962) real\"",
        "\"ztbmv(case 962) imag\"",
        "\"ztbmv(case 963) real\"",
        "\"ztbmv(case 963) imag\"",
        "\"ztbmv(case 964) real\"",
        "\"ztbmv(case 964) imag\"",
        "\"ztbmv(case 965) real\"",
        "\"ztbmv(case 965) imag\"",
        "\"ztbmv(case 966) real\"",
        "\"ztbmv(case 966) imag\"",
        "\"ztbmv(case 967) real\"",
        "\"ztbmv(case 967) imag\"",
        "\"ztbmv(case 968) real\"",
        "\"ztbmv(case 968) imag\"",
        "\"ztbmv(case 969) real\"",
        "\"ztbmv(case 969) imag\"",
        "\"ztbmv(case 970) real\"",
        "\"ztbmv(case 970) imag\"",
        "\"ztbmv(case 971) real\"",
        "\"ztbmv(case 971) imag\"",
        "\"ztbmv(case 972) real\"",
        "\"ztbmv(case 972) imag\"",
        "\"ztbmv(case 973) real\"",
        "\"ztbmv(case 973) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_tbsv.c": {
    "test_tbsv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        1818,
        1
      ],
      "strings": [
        "\"stbsv(case 1230)\"",
        "\"stbsv(case 1231)\"",
        "\"stbsv(case 1232)\"",
        "\"stbsv(case 1233)\"",
        "\"stbsv(case 1234)\"",
        "\"stbsv(case 1235)\"",
        "\"stbsv(case 1236)\"",
        "\"stbsv(case 1237)\"",
        "\"stbsv(case 1238)\"",
        "\"stbsv(case 1239)\"",
        "\"stbsv(case 1240)\"",
        "\"stbsv(case 1241)\"",
        "\"stbsv(case 1242)\"",
        "\"stbsv(case 1243)\"",
        "\"stbsv(case 1244)\"",
        "\"stbsv(case 1245)\"",
        "\"dtbsv(case 1246)\"",
        "\"dtbsv(case 1247)\"",
        "\"dtbsv(case 1248)\"",
        "\"dtbsv(case 1249)\"",
        "\"dtbsv(case 1250)\"",
        "\"dtbsv(case 1251)\"",
        "\"dtbsv(case 1252)\"",
        "\"dtbsv(case 1253)\"",
        "\"dtbsv(case 1254)\"",
        "\"dtbsv(case 1255)\"",
        "\"dtbsv(case 1256)\"",
        "\"dtbsv(case 1257)\"",
        "\"dtbsv(case 1258)\"",
        "\"dtbsv(case 1259)\"",
        "\"dtbsv(case 1260)\"",
        "\"dtbsv(case 1261)\"",
        "\"ctbsv(case 1262) real\"",
        "\"ctbsv(case 1262) imag\"",
        "\"ctbsv(case 1263) real\"",
        "\"ctbsv(case 1263) imag\"",
        "\"ctbsv(case 1264) real\"",
        "\"ctbsv(case 1264) imag\"",
        "\"ctbsv(case 1265) real\"",
        "\"ctbsv(case 1265) imag\"",
        "\"ctbsv(case 1266) real\"",
        "\"ctbsv(case 1266) imag\"",
        "\"ctbsv(case 1267) real\"",
        "\"ctbsv(case 1267) imag\"",
        "\"ctbsv(case 1268) real\"",
        "\"ctbsv(case 1268) imag\"",
        "\"ctbsv(case 1269) real\"",
        "\"ctbsv(case 1269) imag\"",
        "\"ctbsv(case 1270) real\"",
        "\"ctbsv(case 1270) imag\"",
        "\"ctbsv(case 1271) real\"",
        "\"ctbsv(case 1271) imag\"",
        "\"ctbsv(case 1272) real\"",
        "\"ctbsv(case 1272) imag\"",
        "\"ctbsv(case 1273) real\"",
        "\"ctbsv(case 1273) imag\"",
        "\"ctbsv(case 1274) real\"",
        "\"ctbsv(case 1274) imag\"",
        "\"ctbsv(case 1275) real\"",
        "\"ctbsv(case 1275) imag\"",
        "\"ctbsv(case 1276) real\"",
        "\"ctbsv(case 1276) imag\"",
        "\"ctbsv(case 1277) real\"",
        "\"ctbsv(case 1277) imag\"",
        "\"ctbsv(case 1278) real\"",
        "\"ctbsv(case 1278) imag\"",
        "\"ctbsv(case 1279) real\"",
        "\"ctbsv(case 1279) imag\"",
        "\"ctbsv(case 1280) real\"",
        "\"ctbsv(case 1280) imag\"",
        "\"ctbsv(case 1281) real\"",
        "\"ctbsv(case 1281) imag\"",
        "\"ctbsv(case 1282) real\"",
        "\"ctbsv(case 1282) imag\"",
        "\"ctbsv(case 1283) real\"",
        "\"ctbsv(case 1283) imag\"",
        "\"ctbsv(case 1284) real\"",
        "\"ctbsv(case 1284) imag\"",
        "\"ctbsv(case 1285) real\"",
        "\"ctbsv(case 1285) imag\"",
        "\"ztbsv(case 1286) real\"",
        "\"ztbsv(case 1286) imag\"",
        "\"ztbsv(case 1287) real\"",
        "\"ztbsv(case 1287) imag\"",
        "\"ztbsv(case 1288) real\"",
        "\"ztbsv(case 1288) imag\"",
        "\"ztbsv(case 1289) real\"",
        "\"ztbsv(case 1289) imag\"",
        "\"ztbsv(case 1290) real\"",
        "\"ztbsv(case 1290) imag\"",
        "\"ztbsv(case 1291) real\"",
        "\"ztbsv(case 1291) imag\"",
        "\"ztbsv(case 1292) real\"",
        "\"ztbsv(case 1292) imag\"",
        "\"ztbsv(case 1293) real\"",
        "\"ztbsv(case 1293) imag\"",
        "\"ztbsv(case 1294) real\"",
        "\"ztbsv(case 1294) imag\"",
        "\"ztbsv(case 1295) real\"",
        "\"ztbsv(case 1295) imag\"",
        "\"ztbsv(case 1296) real\"",
        "\"ztbsv(case 1296) imag\"",
        "\"ztbsv(case 1297) real\"",
        "\"ztbsv(case 1297) imag\"",
        "\"ztbsv(case 1298) real\"",
        "\"ztbsv(case 1298) imag\"",
        "\"ztbsv(case 1299) real\"",
        "\"ztbsv(case 1299) imag\"",
        "\"ztbsv(case 1300) real\"",
        "\"ztbsv(case 1300) imag\"",
        "\"ztbsv(case 1301) real\"",
        "\"ztbsv(case 1301) imag\"",
        "\"ztbsv(case 1302) real\"",
        "\"ztbsv(case 1302) imag\"",
        "\"ztbsv(case 1303) real\"",
        "\"ztbsv(case 1303) imag\"",
        "\"ztbsv(case 1304) real\"",
        "\"ztbsv(case 1304) imag\"",
        "\"ztbsv(case 1305) real\"",
        "\"ztbsv(case 1305) imag\"",
        "\"ztbsv(case 1306) real\"",
        "\"ztbsv(case 1306) imag\"",
        "\"ztbsv(case 1307) real\"",
        "\"ztbsv(case 1307) imag\"",
        "\"ztbsv(case 1308) real\"",
        "\"ztbsv(case 1308) imag\"",
        "\"ztbsv(case 1309) real\"",
        "\"ztbsv(case 1309) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_tpmv.c": {
    "test_tpmv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        1658,
        1
      ],
      "strings": [
        "\"stpmv(case 974)\"",
        "\"stpmv(case 975)\"",
        "\"stpmv(case 976)\"",
        "\"stpmv(case 977)\"",
        "\"stpmv(case 978)\"",
        "\"stpmv(case 979)\"",
        "\"stpmv(case 980)\"",
        "\"stpmv(case 981)\"",
        "\"stpmv(case 982)\"",
        "\"stpmv(case 983)\"",
        "\"stpmv(case 984)\"",
        "\"stpmv(case 985)\"",
        "\"stpmv(case 986)\"",
        "\"stpmv(case 987)\"",
        "\"stpmv(case 988)\"",
        "\"stpmv(case 989)\"",
        "\"dtpmv(case 990)\"",
        "\"dtpmv(case 991)\"",
        "\"dtpmv(case 992)\"",
        "\"dtpmv(case 993)\"",
        "\"dtpmv(case 994)\"",
        "\"dtpmv(case 995)\"",
        "\"dtpmv(case 996)\"",
        "\"dtpmv(case 997)\"",
        "\"dtpmv(case 998)\"",
        "\"dtpmv(case 999)\"",
        "\"dtpmv(case 1000)\"",
        "\"dtpmv(case 1001)\"",
        "\"dtpmv(case 1002)\"",
        "\"dtpmv(case 1003)\"",
        "\"dtpmv(case 1004)\"",
        "\"dtpmv(case 1005)\"",
        "\"ctpmv(case 1006) real\"",
        "\"ctpmv(case 1006) imag\"",
        "\"ctpmv(case 1007) real\"",
        "\"ctpmv(case 1007) imag\"",
        "\"ctpmv(case 1008) real\"",
        "\"ctpmv(case 1008) imag\"",
        "\"ctpmv(case 1009) real\"",
        "\"ctpmv(case 1009) imag\"",
        "\"ctpmv(case 1010) real\"",
        "\"ctpmv(case 1010) imag\"",
        "\"ctpmv(case 1011) real\"",
        "\"ctpmv(case 1011) imag\"",
        "\"ctpmv(case 1012) real\"",
        "\"ctpmv(case 1012) imag\"",
        "\"ctpmv(case 1013) real\"",
        "\"ctpmv(case 1013) imag\"",
        "\"ctpmv(case 1014) real\"",
        "\"ctpmv(case 1014) imag\"",
        "\"ctpmv(case 1015) real\"",
        "\"ctpmv(case 1015) imag\"",
        "\"ctpmv(case 1016) real\"",
        "\"ctpmv(case 1016) imag\"",
        "\"ctpmv(case 1017) real\"",
        "\"ctpmv(case 1017) imag\"",
        "\"ctpmv(case 1018) real\"",
        "\"ctpmv(case 1018) imag\"",
        "\"ctpmv(case 1019) real\"",
        "\"ctpmv(case 1019) imag\"",
        "\"ctpmv(case 1020) real\"",
        "\"ctpmv(case 1020) imag\"",
        "\"ctpmv(case 1021) real\"",
        "\"ctpmv(case 1021) imag\"",
        "\"ctpmv(case 1022) real\"",
        "\"ctpmv(case 1022) imag\"",
        "\"ctpmv(case 1023) real\"",
        "\"ctpmv(case 1023) imag\"",
        "\"ctpmv(case 1024) real\"",
        "\"ctpmv(case 1024) imag\"",
        "\"ctpmv(case 1025) real\"",
        "\"ctpmv(case 1025) imag\"",
        "\"ctpmv(case 1026) real\"",
        "\"ctpmv(case 1026) imag\"",
        "\"ctpmv(case 1027) real\"",
        "\"ctpmv(case 1027) imag\"",
        "\"ctpmv(case 1028) real\"",
        "\"ctpmv(case 1028) imag\"",
        "\"ctpmv(case 1029) real\"",
        "\"ctpmv(case 1029) imag\"",
        "\"ztpmv(case 1030) real\"",
        "\"ztpmv(case 1030) imag\"",
        "\"ztpmv(case 1031) real\"",
        "\"ztpmv(case 1031) imag\"",
        "\"ztpmv(case 1032) real\"",
        "\"ztpmv(case 1032) imag\"",
        "\"ztpmv(case 1033) real\"",
        "\"ztpmv(case 1033) imag\"",
        "\"ztpmv(case 1034) real\"",
        "\"ztpmv(case 1034) imag\"",
        "\"ztpmv(case 1035) real\"",
        "\"ztpmv(case 1035) imag\"",
        "\"ztpmv(case 1036) real\"",
        "\"ztpmv(case 1036) imag\"",
        "\"ztpmv(case 1037) real\"",
        "\"ztpmv(case 1037) imag\"",
        "\"ztpmv(case 1038) real\"",
        "\"ztpmv(case 1038) imag\"",
        "\"ztpmv(case 1039) real\"",
        "\"ztpmv(case 1039) imag\"",
        "\"ztpmv(case 1040) real\"",
        "\"ztpmv(case 1040) imag\"",
        "\"ztpmv(case 1041) real\"",
        "\"ztpmv(case 1041) imag\"",
        "\"ztpmv(case 1042) real\"",
        "\"ztpmv(case 1042) imag\"",
        "\"ztpmv(case 1043) real\"",
        "\"ztpmv(case 1043) imag\"",
        "\"ztpmv(case 1044) real\"",
        "\"ztpmv(case 1044) imag\"",
        "\"ztpmv(case 1045) real\"",
        "\"ztpmv(case 1045) imag\"",
        "\"ztpmv(case 1046) real\"",
        "\"ztpmv(case 1046) imag\"",
        "\"ztpmv(case 1047) real\"",
        "\"ztpmv(case 1047) imag\"",
        "\"ztpmv(case 1048) real\"",
        "\"ztpmv(case 1048) imag\"",
        "\"ztpmv(case 1049) real\"",
        "\"ztpmv(case 1049) imag\"",
        "\"ztpmv(case 1050) real\"",
        "\"ztpmv(case 1050) imag\"",
        "\"ztpmv(case 1051) real\"",
        "\"ztpmv(case 1051) imag\"",
        "\"ztpmv(case 1052) real\"",
        "\"ztpmv(case 1052) imag\"",
        "\"ztpmv(case 1053) real\"",
        "\"ztpmv(case 1053) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_tpsv.c": {
    "test_tpsv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        1658,
        1
      ],
      "strings": [
        "\"stpsv(case 1310)\"",
        "\"stpsv(case 1311)\"",
        "\"stpsv(case 1312)\"",
        "\"stpsv(case 1313)\"",
        "\"stpsv(case 1314)\"",
        "\"stpsv(case 1315)\"",
        "\"stpsv(case 1316)\"",
        "\"stpsv(case 1317)\"",
        "\"stpsv(case 1318)\"",
        "\"stpsv(case 1319)\"",
        "\"stpsv(case 1320)\"",
        "\"stpsv(case 1321)\"",
        "\"stpsv(case 1322)\"",
        "\"stpsv(case 1323)\"",
        "\"stpsv(case 1324)\"",
        "\"stpsv(case 1325)\"",
        "\"dtpsv(case 1326)\"",
        "\"dtpsv(case 1327)\"",
        "\"dtpsv(case 1328)\"",
        "\"dtpsv(case 1329)\"",
        "\"dtpsv(case 1330)\"",
        "\"dtpsv(case 1331)\"",
        "\"dtpsv(case 1332)\"",
        "\"dtpsv(case 1333)\"",
        "\"dtpsv(case 1334)\"",
        "\"dtpsv(case 1335)\"",
        "\"dtpsv(case 1336)\"",
        "\"dtpsv(case 1337)\"",
        "\"dtpsv(case 1338)\"",
        "\"dtpsv(case 1339)\"",
        "\"dtpsv(case 1340)\"",
        "\"dtpsv(case 1341)\"",
        "\"ctpsv(case 1342) real\"",
        "\"ctpsv(case 1342) imag\"",
        "\"ctpsv(case 1343) real\"",
        "\"ctpsv(case 1343) imag\"",
        "\"ctpsv(case 1344) real\"",
        "\"ctpsv(case 1344) imag\"",
        "\"ctpsv(case 1345) real\"",
        "\"ctpsv(case 1345) imag\"",
        "\"ctpsv(case 1346) real\"",
        "\"ctpsv(case 1346) imag\"",
        "\"ctpsv(case 1347) real\"",
        "\"ctpsv(case 1347) imag\"",
        "\"ctpsv(case 1348) real\"",
        "\"ctpsv(case 1348) imag\"",
        "\"ctpsv(case 1349) real\"",
        "\"ctpsv(case 1349) imag\"",
        "\"ctpsv(case 1350) real\"",
        "\"ctpsv(case 1350) imag\"",
        "\"ctpsv(case 1351) real\"",
        "\"ctpsv(case 1351) imag\"",
        "\"ctpsv(case 1352) real\"",
        "\"ctpsv(case 1352) imag\"",
        "\"ctpsv(case 1353) real\"",
        "\"ctpsv(case 1353) imag\"",
        "\"ctpsv(case 1354) real\"",
        "\"ctpsv(case 1354) imag\"",
        "\"ctpsv(case 1355) real\"",
        "\"ctpsv(case 1355) imag\"",
        "\"ctpsv(case 1356) real\"",
        "\"ctpsv(case 1356) imag\"",
        "\"ctpsv(case 1357) real\"",
        "\"ctpsv(case 1357) imag\"",
        "\"ctpsv(case 1358) real\"",
        "\"ctpsv(case 1358) imag\"",
        "\"ctpsv(case 1359) real\"",
        "\"ctpsv(case 1359) imag\"",
        "\"ctpsv(case 1360) real\"",
        "\"ctpsv(case 1360) imag\"",
        "\"ctpsv(case 1361) real\"",
        "\"ctpsv(case 1361) imag\"",
        "\"ctpsv(case 1362) real\"",
        "\"ctpsv(case 1362) imag\"",
        "\"ctpsv(case 1363) real\"",
        "\"ctpsv(case 1363) imag\"",
        "\"ctpsv(case 1364) real\"",
        "\"ctpsv(case 1364) imag\"",
        "\"ctpsv(case 1365) real\"",
        "\"ctpsv(case 1365) imag\"",
        "\"ztpsv(case 1366) real\"",
        "\"ztpsv(case 1366) imag\"",
        "\"ztpsv(case 1367) real\"",
        "\"ztpsv(case 1367) imag\"",
        "\"ztpsv(case 1368) real\"",
        "\"ztpsv(case 1368) imag\"",
        "\"ztpsv(case 1369) real\"",
        "\"ztpsv(case 1369) imag\"",
        "\"ztpsv(case 1370) real\"",
        "\"ztpsv(case 1370) imag\"",
        "\"ztpsv(case 1371) real\"",
        "\"ztpsv(case 1371) imag\"",
        "\"ztpsv(case 1372) real\"",
        "\"ztpsv(case 1372) imag\"",
        "\"ztpsv(case 1373) real\"",
        "\"ztpsv(case 1373) imag\"",
        "\"ztpsv(case 1374) real\"",
        "\"ztpsv(case 1374) imag\"",
        "\"ztpsv(case 1375) real\"",
        "\"ztpsv(case 1375) imag\"",
        "\"ztpsv(case 1376) real\"",
        "\"ztpsv(case 1376) imag\"",
        "\"ztpsv(case 1377) real\"",
        "\"ztpsv(case 1377) imag\"",
        "\"ztpsv(case 1378) real\"",
        "\"ztpsv(case 1378) imag\"",
        "\"ztpsv(case 1379) real\"",
        "\"ztpsv(case 1379) imag\"",
        "\"ztpsv(case 1380) real\"",
        "\"ztpsv(case 1380) imag\"",
        "\"ztpsv(case 1381) real\"",
        "\"ztpsv(case 1381) imag\"",
        "\"ztpsv(case 1382) real\"",
        "\"ztpsv(case 1382) imag\"",
        "\"ztpsv(case 1383) real\"",
        "\"ztpsv(case 1383) imag\"",
        "\"ztpsv(case 1384) real\"",
        "\"ztpsv(case 1384) imag\"",
        "\"ztpsv(case 1385) real\"",
        "\"ztpsv(case 1385) imag\"",
        "\"ztpsv(case 1386) real\"",
        "\"ztpsv(case 1386) imag\"",
        "\"ztpsv(case 1387) real\"",
        "\"ztpsv(case 1387) imag\"",
        "\"ztpsv(case 1388) real\"",
        "\"ztpsv(case 1388) imag\"",
        "\"ztpsv(case 1389) real\"",
        "\"ztpsv(case 1389) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_trmm.c": {
    "test_trmm": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        3946,
        1
      ],
      "strings": [
        "\"strmm(case 1662)\"",
        "\"strmm(case 1663)\"",
        "\"strmm(case 1664)\"",
        "\"strmm(case 1665)\"",
        "\"strmm(case 1666)\"",
        "\"strmm(case 1667)\"",
        "\"strmm(case 1668)\"",
        "\"strmm(case 1669)\"",
        "\"strmm(case 1670)\"",
        "\"strmm(case 1671)\"",
        "\"strmm(case 1672)\"",
        "\"strmm(case 1673)\"",
        "\"strmm(case 1674)\"",
        "\"strmm(case 1675)\"",
        "\"strmm(case 1676)\"",
        "\"strmm(case 1677)\"",
        "\"strmm(case 1678)\"",
        "\"strmm(case 1679)\"",
        "\"strmm(case 1680)\"",
        "\"strmm(case 1681)\"",
        "\"strmm(case 1682)\"",
        "\"strmm(case 1683)\"",
        "\"strmm(case 1684)\"",
        "\"strmm(case 1685)\"",
        "\"strmm(case 1686)\"",
        "\"strmm(case 1687)\"",
        "\"strmm(case 1688)\"",
        "\"strmm(case 1689)\"",
        "\"strmm(case 1690)\"",
        "\"strmm(case 1691)\"",
        "\"strmm(case 1692)\"",
        "\"strmm(case 1693)\"",
        "\"dtrmm(case 1694)\"",
        "\"dtrmm(case 1695)\"",
        "\"dtrmm(case 1696)\"",
        "\"dtrmm(case 1697)\"",
        "\"dtrmm(case 1698)\"",
        "\"dtrmm(case 1699)\"",
        "\"dtrmm(case 1700)\"",
        "\"dtrmm(case 1701)\"",
        "\"dtrmm(case 1702)\"",
        "\"dtrmm(case 1703)\"",
        "\"dtrmm(case 1704)\"",
        "\"dtrmm(case 1705)\"",
        "\"dtrmm(case 1706)\"",
        "\"dtrmm(case 1707)\"",
        "\"dtrmm(case 1708)\"",
        "\"dtrmm(case 1709)\"",
        "\"dtrmm(case 1710)\"",
        "\"dtrmm(case 1711)\"",
        "\"dtrmm(case 1712)\"",
        "\"dtrmm(case 1713)\"",
        "\"dtrmm(case 1714)\"",
        "\"dtrmm(case 1715)\"",
        "\"dtrmm(case 1716)\"",
        "\"dtrmm(case 1717)\"",
        "\"dtrmm(case 1718)\"",
        "\"dtrmm(case 1719)\"",
        "\"dtrmm(case 1720)\"",
        "\"dtrmm(case 1721)\"",
        "\"dtrmm(case 1722)\"",
        "\"dtrmm(case 1723)\"",
        "\"dtrmm(case 1724)\"",
        "\"dtrmm(case 1725)\"",
        "\"ctrmm(case 1726) real\"",
        "\"ctrmm(case 1726) imag\"",
        "\"ctrmm(case 1727) real\"",
        "\"ctrmm(case 1727) imag\"",
        "\"ctrmm(case 1728) real\"",
        "\"ctrmm(case 1728) imag\"",
        "\"ctrmm(case 1729) real\"",
        "\"ctrmm(case 1729) imag\"",
        "\"ctrmm(case 1730) real\"",
        "\"ctrmm(case 1730) imag\"",
        "\"ctrmm(case 1731) real\"",
        "\"ctrmm(case 1731) imag\"",
        "\"ctrmm(case 1732) real\"",
        "\"ctrmm(case 1732) imag\"",
        "\"ctrmm(case 1733) real\"",
        "\"ctrmm(case 1733) imag\"",
        "\"ctrmm(case 1734) real\"",
        "\"ctrmm(case 1734) imag\"",
        "\"ctrmm(case 1735) real\"",
        "\"ctrmm(case 1735) imag\"",
        "\"ctrmm(case 1736) real\"",
        "\"ctrmm(case 1736) imag\"",
        "\"ctrmm(case 1737) real\"",
        "\"ctrmm(case 1737) imag\"",
        "\"ctrmm(case 1738) real\"",
        "\"ctrmm(case 1738) imag\"",
        "\"ctrmm(case 1739) real\"",
        "\"ctrmm(case 1739) imag\"",
        "\"ctrmm(case 1740) real\"",
        "\"ctrmm(case 1740) imag\"",
        "\"ctrmm(case 1741) real\"",
        "\"ctrmm(case 1741) imag\"",
        "\"ctrmm(case 1742) real\"",
        "\"ctrmm(case 1742) imag\"",
        "\"ctrmm(case 1743) real\"",
        "\"ctrmm(case 1743) imag\"",
        "\"ctrmm(case 1744) real\"",
        "\"ctrmm(case 1744) imag\"",
        "\"ctrmm(case 1745) real\"",
        "\"ctrmm(case 1745) imag\"",
        "\"ctrmm(case 1746) real\"",
        "\"ctrmm(case 1746) imag\"",
        "\"ctrmm(case 1747) real\"",
        "\"ctrmm(case 1747) imag\"",
        "\"ctrmm(case 1748) real\"",
        "\"ctrmm(case 1748) imag\"",
        "\"ctrmm(case 1749) real\"",
        "\"ctrmm(case 1749) imag\"",
        "\"ctrmm(case 1750) real\"",
        "\"ctrmm(case 1750) imag\"",
        "\"ctrmm(case 1751) real\"",
        "\"ctrmm(case 1751) imag\"",
        "\"ctrmm(case 1752) real\"",
        "\"ctrmm(case 1752) imag\"",
        "\"ctrmm(case 1753) real\"",
        "\"ctrmm(case 1753) imag\"",
        "\"ctrmm(case 1754) real\"",
        "\"ctrmm(case 1754) imag\"",
        "\"ctrmm(case 1755) real\"",
        "\"ctrmm(case 1755) imag\"",
        "\"ctrmm(case 1756) real\"",
        "\"ctrmm(case 1756) imag\"",
        "\"ctrmm(case 1757) real\"",
        "\"ctrmm(case 1757) imag\"",
        "\"ctrmm(case 1758) real\"",
        "\"ctrmm(case 1758) imag\"",
        "\"ctrmm(case 1759) real\"",
        "\"ctrmm(case 1759) imag\"",
        "\"ctrmm(case 1760) real\"",
        "\"ctrmm(case 1760) imag\"",
        "\"ctrmm(case 1761) real\"",
        "\"ctrmm(case 1761) imag\"",
        "\"ctrmm(case 1762) real\"",
        "\"ctrmm(case 1762) imag\"",
        "\"ctrmm(case 1763) real\"",
        "\"ctrmm(case 1763) imag\"",
        "\"ctrmm(case 1764) real\"",
        "\"ctrmm(case 1764) imag\"",
        "\"ctrmm(case 1765) real\"",
        "\"ctrmm(case 1765) imag\"",
        "\"ctrmm(case 1766) real\"",
        "\"ctrmm(case 1766) imag\"",
        "\"ctrmm(case 1767) real\"",
        "\"ctrmm(case 1767) imag\"",
        "\"ctrmm(case 1768) real\"",
        "\"ctrmm(case 1768) imag\"",
        "\"ctrmm(case 1769) real\"",
        "\"ctrmm(case 1769) imag\"",
        "\"ctrmm(case 1770) real\"",
        "\"ctrmm(case 1770) imag\"",
        "\"ctrmm(case 1771) real\"",
        "\"ctrmm(case 1771) imag\"",
        "\"ctrmm(case 1772) real\"",
        "\"ctrmm(case 1772) imag\"",
        "\"ctrmm(case 1773) real\"",
        "\"ctrmm(case 1773) imag\"",
        "\"ztrmm(case 1774) real\"",
        "\"ztrmm(case 1774) imag\"",
        "\"ztrmm(case 1775) real\"",
        "\"ztrmm(case 1775) imag\"",
        "\"ztrmm(case 1776) real\"",
        "\"ztrmm(case 1776) imag\"",
        "\"ztrmm(case 1777) real\"",
        "\"ztrmm(case 1777) imag\"",
        "\"ztrmm(case 1778) real\"",
        "\"ztrmm(case 1778) imag\"",
        "\"ztrmm(case 1779) real\"",
        "\"ztrmm(case 1779) imag\"",
        "\"ztrmm(case 1780) real\"",
        "\"ztrmm(case 1780) imag\"",
        "\"ztrmm(case 1781) real\"",
        "\"ztrmm(case 1781) imag\"",
        "\"ztrmm(case 1782) real\"",
        "\"ztrmm(case 1782) imag\"",
        "\"ztrmm(case 1783) real\"",
        "\"ztrmm(case 1783) imag\"",
        "\"ztrmm(case 1784) real\"",
        "\"ztrmm(case 1784) imag\"",
        "\"ztrmm(case 1785) real\"",
        "\"ztrmm(case 1785) imag\"",
        "\"ztrmm(case 1786) real\"",
        "\"ztrmm(case 1786) imag\"",
        "\"ztrmm(case 1787) real\"",
        "\"ztrmm(case 1787) imag\"",
        "\"ztrmm(case 1788) real\"",
        "\"ztrmm(case 1788) imag\"",
        "\"ztrmm(case 1789) real\"",
        "\"ztrmm(case 1789) imag\"",
        "\"ztrmm(case 1790) real\"",
        "\"ztrmm(case 1790) imag\"",
        "\"ztrmm(case 1791) real\"",
        "\"ztrmm(case 1791) imag\"",
        "\"ztrmm(case 1792) real\"",
        "\"ztrmm(case 1792) imag\"",
        "\"ztrmm(case 1793) real\"",
        "\"ztrmm(case 1793) imag\"",
        "\"ztrmm(case 1794) real\"",
        "\"ztrmm(case 1794) imag\"",
        "\"ztrmm(case 1795) real\"",
        "\"ztrmm(case 1795) imag\"",
        "\"ztrmm(case 1796) real\"",
        "\"ztrmm(case 1796) imag\"",
        "\"ztrmm(case 1797) real\"",
        "\"ztrmm(case 1797) imag\"",
        "\"ztrmm(case 1798) real\"",
        "\"ztrmm(case 1798) imag\"",
        "\"ztrmm(case 1799) real\"",
        "\"ztrmm(case 1799) imag\"",
        "\"ztrmm(case 1800) real\"",
        "\"ztrmm(case 1800) imag\"",
        "\"ztrmm(case 1801) real\"",
        "\"ztrmm(case 1801) imag\"",
        "\"ztrmm(case 1802) real\"",
        "\"ztrmm(case 1802) imag\"",
        "\"ztrmm(case 1803) real\"",
        "\"ztrmm(case 1803) imag\"",
        "\"ztrmm(case 1804) real\"",
        "\"ztrmm(case 1804) imag\"",
        "\"ztrmm(case 1805) real\"",
        "\"ztrmm(case 1805) imag\"",
        "\"ztrmm(case 1806) real\"",
        "\"ztrmm(case 1806) imag\"",
        "\"ztrmm(case 1807) real\"",
        "\"ztrmm(case 1807) imag\"",
        "\"ztrmm(case 1808) real\"",
        "\"ztrmm(case 1808) imag\"",
        "\"ztrmm(case 1809) real\"",
        "\"ztrmm(case 1809) imag\"",
        "\"ztrmm(case 1810) real\"",
        "\"ztrmm(case 1810) imag\"",
        "\"ztrmm(case 1811) real\"",
        "\"ztrmm(case 1811) imag\"",
        "\"ztrmm(case 1812) real\"",
        "\"ztrmm(case 1812) imag\"",
        "\"ztrmm(case 1813) real\"",
        "\"ztrmm(case 1813) imag\"",
        "\"ztrmm(case 1814) real\"",
        "\"ztrmm(case 1814) imag\"",
        "\"ztrmm(case 1815) real\"",
        "\"ztrmm(case 1815) imag\"",
        "\"ztrmm(case 1816) real\"",
        "\"ztrmm(case 1816) imag\"",
        "\"ztrmm(case 1817) real\"",
        "\"ztrmm(case 1817) imag\"",
        "\"ztrmm(case 1818) real\"",
        "\"ztrmm(case 1818) imag\"",
        "\"ztrmm(case 1819) real\"",
        "\"ztrmm(case 1819) imag\"",
        "\"ztrmm(case 1820) real\"",
        "\"ztrmm(case 1820) imag\"",
        "\"ztrmm(case 1821) real\"",
        "\"ztrmm(case 1821) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_trmv.c": {
    "test_trmv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        1738,
        1
      ],
      "strings": [
        "\"strmv(case 814)\"",
        "\"strmv(case 815)\"",
        "\"strmv(case 816)\"",
        "\"strmv(case 817)\"",
        "\"strmv(case 818)\"",
        "\"strmv(case 819)\"",
        "\"strmv(case 820)\"",
        "\"strmv(case 821)\"",
        "\"strmv(case 822)\"",
        "\"strmv(case 823)\"",
        "\"strmv(case 824)\"",
        "\"strmv(case 825)\"",
        "\"strmv(case 826)\"",
        "\"strmv(case 827)\"",
        "\"strmv(case 828)\"",
        "\"strmv(case 829)\"",
        "\"dtrmv(case 830)\"",
        "\"dtrmv(case 831)\"",
        "\"dtrmv(case 832)\"",
        "\"dtrmv(case 833)\"",
        "\"dtrmv(case 834)\"",
        "\"dtrmv(case 835)\"",
        "\"dtrmv(case 836)\"",
        "\"dtrmv(case 837)\"",
        "\"dtrmv(case 838)\"",
        "\"dtrmv(case 839)\"",
        "\"dtrmv(case 840)\"",
        "\"dtrmv(case 841)\"",
        "\"dtrmv(case 842)\"",
        "\"dtrmv(case 843)\"",
        "\"dtrmv(case 844)\"",
        "\"dtrmv(case 845)\"",
        "\"ctrmv(case 846) real\"",
        "\"ctrmv(case 846) imag\"",
        "\"ctrmv(case 847) real\"",
        "\"ctrmv(case 847) imag\"",
        "\"ctrmv(case 848) real\"",
        "\"ctrmv(case 848) imag\"",
        "\"ctrmv(case 849) real\"",
        "\"ctrmv(case 849) imag\"",
        "\"ctrmv(case 850) real\"",
        "\"ctrmv(case 850) imag\"",
        "\"ctrmv(case 851) real\"",
        "\"ctrmv(case 851) imag\"",
        "\"ctrmv(case 852) real\"",
        "\"ctrmv(case 852) imag\"",
        "\"ctrmv(case 853) real\"",
        "\"ctrmv(case 853) imag\"",
        "\"ctrmv(case 854) real\"",
        "\"ctrmv(case 854) imag\"",
        "\"ctrmv(case 855) real\"",
        "\"ctrmv(case 855) imag\"",
        "\"ctrmv(case 856) real\"",
        "\"ctrmv(case 856) imag\"",
        "\"ctrmv(case 857) real\"",
        "\"ctrmv(case 857) imag\"",
        "\"ctrmv(case 858) real\"",
        "\"ctrmv(case 858) imag\"",
        "\"ctrmv(case 859) real\"",
        "\"ctrmv(case 859) imag\"",
        "\"ctrmv(case 860) real\"",
        "\"ctrmv(case 860) imag\"",
        "\"ctrmv(case 861) real\"",
        "\"ctrmv(case 861) imag\"",
        "\"ctrmv(case 862) real\"",
        "\"ctrmv(case 862) imag\"",
        "\"ctrmv(case 863) real\"",
        "\"ctrmv(case 863) imag\"",
        "\"ctrmv(case 864) real\"",
        "\"ctrmv(case 864) imag\"",
        "\"ctrmv(case 865) real\"",
        "\"ctrmv(case 865) imag\"",
        "\"ctrmv(case 866) real\"",
        "\"ctrmv(case 866) imag\"",
        "\"ctrmv(case 867) real\"",
        "\"ctrmv(case 867) imag\"",
        "\"ctrmv(case 868) real\"",
        "\"ctrmv(case 868) imag\"",
        "\"ctrmv(case 869) real\"",
        "\"ctrmv(case 869) imag\"",
        "\"ztrmv(case 870) real\"",
        "\"ztrmv(case 870) imag\"",
        "\"ztrmv(case 871) real\"",
        "\"ztrmv(case 871) imag\"",
        "\"ztrmv(case 872) real\"",
        "\"ztrmv(case 872) imag\"",
        "\"ztrmv(case 873) real\"",
        "\"ztrmv(case 873) imag\"",
        "\"ztrmv(case 874) real\"",
        "\"ztrmv(case 874) imag\"",
        "\"ztrmv(case 875) real\"",
        "\"ztrmv(case 875) imag\"",
        "\"ztrmv(case 876) real\"",
        "\"ztrmv(case 876) imag\"",
        "\"ztrmv(case 877) real\"",
        "\"ztrmv(case 877) imag\"",
        "\"ztrmv(case 878) real\"",
        "\"ztrmv(case 878) imag\"",
        "\"ztrmv(case 879) real\"",
        "\"ztrmv(case 879) imag\"",
        "\"ztrmv(case 880) real\"",
        "\"ztrmv(case 880) imag\"",
        "\"ztrmv(case 881) real\"",
        "\"ztrmv(case 881) imag\"",
        "\"ztrmv(case 882) real\"",
        "\"ztrmv(case 882) imag\"",
        "\"ztrmv(case 883) real\"",
        "\"ztrmv(case 883) imag\"",
        "\"ztrmv(case 884) real\"",
        "\"ztrmv(case 884) imag\"",
        "\"ztrmv(case 885) real\"",
        "\"ztrmv(case 885) imag\"",
        "\"ztrmv(case 886) real\"",
        "\"ztrmv(case 886) imag\"",
        "\"ztrmv(case 887) real\"",
        "\"ztrmv(case 887) imag\"",
        "\"ztrmv(case 888) real\"",
        "\"ztrmv(case 888) imag\"",
        "\"ztrmv(case 889) real\"",
        "\"ztrmv(case 889) imag\"",
        "\"ztrmv(case 890) real\"",
        "\"ztrmv(case 890) imag\"",
        "\"ztrmv(case 891) real\"",
        "\"ztrmv(case 891) imag\"",
        "\"ztrmv(case 892) real\"",
        "\"ztrmv(case 892) imag\"",
        "\"ztrmv(case 893) real\"",
        "\"ztrmv(case 893) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_trsm.c": {
    "test_trsm": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        3946,
        1
      ],
      "strings": [
        "\"strsm(case 1822)\"",
        "\"strsm(case 1823)\"",
        "\"strsm(case 1824)\"",
        "\"strsm(case 1825)\"",
        "\"strsm(case 1826)\"",
        "\"strsm(case 1827)\"",
        "\"strsm(case 1828)\"",
        "\"strsm(case 1829)\"",
        "\"strsm(case 1830)\"",
        "\"strsm(case 1831)\"",
        "\"strsm(case 1832)\"",
        "\"strsm(case 1833)\"",
        "\"strsm(case 1834)\"",
        "\"strsm(case 1835)\"",
        "\"strsm(case 1836)\"",
        "\"strsm(case 1837)\"",
        "\"strsm(case 1838)\"",
        "\"strsm(case 1839)\"",
        "\"strsm(case 1840)\"",
        "\"strsm(case 1841)\"",
        "\"strsm(case 1842)\"",
        "\"strsm(case 1843)\"",
        "\"strsm(case 1844)\"",
        "\"strsm(case 1845)\"",
        "\"strsm(case 1846)\"",
        "\"strsm(case 1847)\"",
        "\"strsm(case 1848)\"",
        "\"strsm(case 1849)\"",
        "\"strsm(case 1850)\"",
        "\"strsm(case 1851)\"",
        "\"strsm(case 1852)\"",
        "\"strsm(case 1853)\"",
        "\"dtrsm(case 1854)\"",
        "\"dtrsm(case 1855)\"",
        "\"dtrsm(case 1856)\"",
        "\"dtrsm(case 1857)\"",
        "\"dtrsm(case 1858)\"",
        "\"dtrsm(case 1859)\"",
        "\"dtrsm(case 1860)\"",
        "\"dtrsm(case 1861)\"",
        "\"dtrsm(case 1862)\"",
        "\"dtrsm(case 1863)\"",
        "\"dtrsm(case 1864)\"",
        "\"dtrsm(case 1865)\"",
        "\"dtrsm(case 1866)\"",
        "\"dtrsm(case 1867)\"",
        "\"dtrsm(case 1868)\"",
        "\"dtrsm(case 1869)\"",
        "\"dtrsm(case 1870)\"",
        "\"dtrsm(case 1871)\"",
        "\"dtrsm(case 1872)\"",
        "\"dtrsm(case 1873)\"",
        "\"dtrsm(case 1874)\"",
        "\"dtrsm(case 1875)\"",
        "\"dtrsm(case 1876)\"",
        "\"dtrsm(case 1877)\"",
        "\"dtrsm(case 1878)\"",
        "\"dtrsm(case 1879)\"",
        "\"dtrsm(case 1880)\"",
        "\"dtrsm(case 1881)\"",
        "\"dtrsm(case 1882)\"",
        "\"dtrsm(case 1883)\"",
        "\"dtrsm(case 1884)\"",
        "\"dtrsm(case 1885)\"",
        "\"ctrsm(case 1886) real\"",
        "\"ctrsm(case 1886) imag\"",
        "\"ctrsm(case 1887) real\"",
        "\"ctrsm(case 1887) imag\"",
        "\"ctrsm(case 1888) real\"",
        "\"ctrsm(case 1888) imag\"",
        "\"ctrsm(case 1889) real\"",
        "\"ctrsm(case 1889) imag\"",
        "\"ctrsm(case 1890) real\"",
        "\"ctrsm(case 1890) imag\"",
        "\"ctrsm(case 1891) real\"",
        "\"ctrsm(case 1891) imag\"",
        "\"ctrsm(case 1892) real\"",
        "\"ctrsm(case 1892) imag\"",
        "\"ctrsm(case 1893) real\"",
        "\"ctrsm(case 1893) imag\"",
        "\"ctrsm(case 1894) real\"",
        "\"ctrsm(case 1894) imag\"",
        "\"ctrsm(case 1895) real\"",
        "\"ctrsm(case 1895) imag\"",
        "\"ctrsm(case 1896) real\"",
        "\"ctrsm(case 1896) imag\"",
        "\"ctrsm(case 1897) real\"",
        "\"ctrsm(case 1897) imag\"",
        "\"ctrsm(case 1898) real\"",
        "\"ctrsm(case 1898) imag\"",
        "\"ctrsm(case 1899) real\"",
        "\"ctrsm(case 1899) imag\"",
        "\"ctrsm(case 1900) real\"",
        "\"ctrsm(case 1900) imag\"",
        "\"ctrsm(case 1901) real\"",
        "\"ctrsm(case 1901) imag\"",
        "\"ctrsm(case 1902) real\"",
        "\"ctrsm(case 1902) imag\"",
        "\"ctrsm(case 1903) real\"",
        "\"ctrsm(case 1903) imag\"",
        "\"ctrsm(case 1904) real\"",
        "\"ctrsm(case 1904) imag\"",
        "\"ctrsm(case 1905) real\"",
        "\"ctrsm(case 1905) imag\"",
        "\"ctrsm(case 1906) real\"",
        "\"ctrsm(case 1906) imag\"",
        "\"ctrsm(case 1907) real\"",
        "\"ctrsm(case 1907) imag\"",
        "\"ctrsm(case 1908) real\"",
        "\"ctrsm(case 1908) imag\"",
        "\"ctrsm(case 1909) real\"",
        "\"ctrsm(case 1909) imag\"",
        "\"ctrsm(case 1910) real\"",
        "\"ctrsm(case 1910) imag\"",
        "\"ctrsm(case 1911) real\"",
        "\"ctrsm(case 1911) imag\"",
        "\"ctrsm(case 1912) real\"",
        "\"ctrsm(case 1912) imag\"",
        "\"ctrsm(case 1913) real\"",
        "\"ctrsm(case 1913) imag\"",
        "\"ctrsm(case 1914) real\"",
        "\"ctrsm(case 1914) imag\"",
        "\"ctrsm(case 1915) real\"",
        "\"ctrsm(case 1915) imag\"",
        "\"ctrsm(case 1916) real\"",
        "\"ctrsm(case 1916) imag\"",
        "\"ctrsm(case 1917) real\"",
        "\"ctrsm(case 1917) imag\"",
        "\"ctrsm(case 1918) real\"",
        "\"ctrsm(case 1918) imag\"",
        "\"ctrsm(case 1919) real\"",
        "\"ctrsm(case 1919) imag\"",
        "\"ctrsm(case 1920) real\"",
        "\"ctrsm(case 1920) imag\"",
        "\"ctrsm(case 1921) real\"",
        "\"ctrsm(case 1921) imag\"",
        "\"ctrsm(case 1922) real\"",
        "\"ctrsm(case 1922) imag\"",
        "\"ctrsm(case 1923) real\"",
        "\"ctrsm(case 1923) imag\"",
        "\"ctrsm(case 1924) real\"",
        "\"ctrsm(case 1924) imag\"",
        "\"ctrsm(case 1925) real\"",
        "\"ctrsm(case 1925) imag\"",
        "\"ctrsm(case 1926) real\"",
        "\"ctrsm(case 1926) imag\"",
        "\"ctrsm(case 1927) real\"",
        "\"ctrsm(case 1927) imag\"",
        "\"ctrsm(case 1928) real\"",
        "\"ctrsm(case 1928) imag\"",
        "\"ctrsm(case 1929) real\"",
        "\"ctrsm(case 1929) imag\"",
        "\"ctrsm(case 1930) real\"",
        "\"ctrsm(case 1930) imag\"",
        "\"ctrsm(case 1931) real\"",
        "\"ctrsm(case 1931) imag\"",
        "\"ctrsm(case 1932) real\"",
        "\"ctrsm(case 1932) imag\"",
        "\"ctrsm(case 1933) real\"",
        "\"ctrsm(case 1933) imag\"",
        "\"ztrsm(case 1934) real\"",
        "\"ztrsm(case 1934) imag\"",
        "\"ztrsm(case 1935) real\"",
        "\"ztrsm(case 1935) imag\"",
        "\"ztrsm(case 1936) real\"",
        "\"ztrsm(case 1936) imag\"",
        "\"ztrsm(case 1937) real\"",
        "\"ztrsm(case 1937) imag\"",
        "\"ztrsm(case 1938) real\"",
        "\"ztrsm(case 1938) imag\"",
        "\"ztrsm(case 1939) real\"",
        "\"ztrsm(case 1939) imag\"",
        "\"ztrsm(case 1940) real\"",
        "\"ztrsm(case 1940) imag\"",
        "\"ztrsm(case 1941) real\"",
        "\"ztrsm(case 1941) imag\"",
        "\"ztrsm(case 1942) real\"",
        "\"ztrsm(case 1942) imag\"",
        "\"ztrsm(case 1943) real\"",
        "\"ztrsm(case 1943) imag\"",
        "\"ztrsm(case 1944) real\"",
        "\"ztrsm(case 1944) imag\"",
        "\"ztrsm(case 1945) real\"",
        "\"ztrsm(case 1945) imag\"",
        "\"ztrsm(case 1946) real\"",
        "\"ztrsm(case 1946) imag\"",
        "\"ztrsm(case 1947) real\"",
        "\"ztrsm(case 1947) imag\"",
        "\"ztrsm(case 1948) real\"",
        "\"ztrsm(case 1948) imag\"",
        "\"ztrsm(case 1949) real\"",
        "\"ztrsm(case 1949) imag\"",
        "\"ztrsm(case 1950) real\"",
        "\"ztrsm(case 1950) imag\"",
        "\"ztrsm(case 1951) real\"",
        "\"ztrsm(case 1951) imag\"",
        "\"ztrsm(case 1952) real\"",
        "\"ztrsm(case 1952) imag\"",
        "\"ztrsm(case 1953) real\"",
        "\"ztrsm(case 1953) imag\"",
        "\"ztrsm(case 1954) real\"",
        "\"ztrsm(case 1954) imag\"",
        "\"ztrsm(case 1955) real\"",
        "\"ztrsm(case 1955) imag\"",
        "\"ztrsm(case 1956) real\"",
        "\"ztrsm(case 1956) imag\"",
        "\"ztrsm(case 1957) real\"",
        "\"ztrsm(case 1957) imag\"",
        "\"ztrsm(case 1958) real\"",
        "\"ztrsm(case 1958) imag\"",
        "\"ztrsm(case 1959) real\"",
        "\"ztrsm(case 1959) imag\"",
        "\"ztrsm(case 1960) real\"",
        "\"ztrsm(case 1960) imag\"",
        "\"ztrsm(case 1961) real\"",
        "\"ztrsm(case 1961) imag\"",
        "\"ztrsm(case 1962) real\"",
        "\"ztrsm(case 1962) imag\"",
        "\"ztrsm(case 1963) real\"",
        "\"ztrsm(case 1963) imag\"",
        "\"ztrsm(case 1964) real\"",
        "\"ztrsm(case 1964) imag\"",
        "\"ztrsm(case 1965) real\"",
        "\"ztrsm(case 1965) imag\"",
        "\"ztrsm(case 1966) real\"",
        "\"ztrsm(case 1966) imag\"",
        "\"ztrsm(case 1967) real\"",
        "\"ztrsm(case 1967) imag\"",
        "\"ztrsm(case 1968) real\"",
        "\"ztrsm(case 1968) imag\"",
        "\"ztrsm(case 1969) real\"",
        "\"ztrsm(case 1969) imag\"",
        "\"ztrsm(case 1970) real\"",
        "\"ztrsm(case 1970) imag\"",
        "\"ztrsm(case 1971) real\"",
        "\"ztrsm(case 1971) imag\"",
        "\"ztrsm(case 1972) real\"",
        "\"ztrsm(case 1972) imag\"",
        "\"ztrsm(case 1973) real\"",
        "\"ztrsm(case 1973) imag\"",
        "\"ztrsm(case 1974) real\"",
        "\"ztrsm(case 1974) imag\"",
        "\"ztrsm(case 1975) real\"",
        "\"ztrsm(case 1975) imag\"",
        "\"ztrsm(case 1976) real\"",
        "\"ztrsm(case 1976) imag\"",
        "\"ztrsm(case 1977) real\"",
        "\"ztrsm(case 1977) imag\"",
        "\"ztrsm(case 1978) real\"",
        "\"ztrsm(case 1978) imag\"",
        "\"ztrsm(case 1979) real\"",
        "\"ztrsm(case 1979) imag\"",
        "\"ztrsm(case 1980) real\"",
        "\"ztrsm(case 1980) imag\"",
        "\"ztrsm(case 1981) real\"",
        "\"ztrsm(case 1981) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/test_trsv.c": {
    "test_trsv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        1738,
        1
      ],
      "strings": [
        "\"strsv(case 1150)\"",
        "\"strsv(case 1151)\"",
        "\"strsv(case 1152)\"",
        "\"strsv(case 1153)\"",
        "\"strsv(case 1154)\"",
        "\"strsv(case 1155)\"",
        "\"strsv(case 1156)\"",
        "\"strsv(case 1157)\"",
        "\"strsv(case 1158)\"",
        "\"strsv(case 1159)\"",
        "\"strsv(case 1160)\"",
        "\"strsv(case 1161)\"",
        "\"strsv(case 1162)\"",
        "\"strsv(case 1163)\"",
        "\"strsv(case 1164)\"",
        "\"strsv(case 1165)\"",
        "\"dtrsv(case 1166)\"",
        "\"dtrsv(case 1167)\"",
        "\"dtrsv(case 1168)\"",
        "\"dtrsv(case 1169)\"",
        "\"dtrsv(case 1170)\"",
        "\"dtrsv(case 1171)\"",
        "\"dtrsv(case 1172)\"",
        "\"dtrsv(case 1173)\"",
        "\"dtrsv(case 1174)\"",
        "\"dtrsv(case 1175)\"",
        "\"dtrsv(case 1176)\"",
        "\"dtrsv(case 1177)\"",
        "\"dtrsv(case 1178)\"",
        "\"dtrsv(case 1179)\"",
        "\"dtrsv(case 1180)\"",
        "\"dtrsv(case 1181)\"",
        "\"ctrsv(case 1182) real\"",
        "\"ctrsv(case 1182) imag\"",
        "\"ctrsv(case 1183) real\"",
        "\"ctrsv(case 1183) imag\"",
        "\"ctrsv(case 1184) real\"",
        "\"ctrsv(case 1184) imag\"",
        "\"ctrsv(case 1185) real\"",
        "\"ctrsv(case 1185) imag\"",
        "\"ctrsv(case 1186) real\"",
        "\"ctrsv(case 1186) imag\"",
        "\"ctrsv(case 1187) real\"",
        "\"ctrsv(case 1187) imag\"",
        "\"ctrsv(case 1188) real\"",
        "\"ctrsv(case 1188) imag\"",
        "\"ctrsv(case 1189) real\"",
        "\"ctrsv(case 1189) imag\"",
        "\"ctrsv(case 1190) real\"",
        "\"ctrsv(case 1190) imag\"",
        "\"ctrsv(case 1191) real\"",
        "\"ctrsv(case 1191) imag\"",
        "\"ctrsv(case 1192) real\"",
        "\"ctrsv(case 1192) imag\"",
        "\"ctrsv(case 1193) real\"",
        "\"ctrsv(case 1193) imag\"",
        "\"ctrsv(case 1194) real\"",
        "\"ctrsv(case 1194) imag\"",
        "\"ctrsv(case 1195) real\"",
        "\"ctrsv(case 1195) imag\"",
        "\"ctrsv(case 1196) real\"",
        "\"ctrsv(case 1196) imag\"",
        "\"ctrsv(case 1197) real\"",
        "\"ctrsv(case 1197) imag\"",
        "\"ctrsv(case 1198) real\"",
        "\"ctrsv(case 1198) imag\"",
        "\"ctrsv(case 1199) real\"",
        "\"ctrsv(case 1199) imag\"",
        "\"ctrsv(case 1200) real\"",
        "\"ctrsv(case 1200) imag\"",
        "\"ctrsv(case 1201) real\"",
        "\"ctrsv(case 1201) imag\"",
        "\"ctrsv(case 1202) real\"",
        "\"ctrsv(case 1202) imag\"",
        "\"ctrsv(case 1203) real\"",
        "\"ctrsv(case 1203) imag\"",
        "\"ctrsv(case 1204) real\"",
        "\"ctrsv(case 1204) imag\"",
        "\"ctrsv(case 1205) real\"",
        "\"ctrsv(case 1205) imag\"",
        "\"ztrsv(case 1206) real\"",
        "\"ztrsv(case 1206) imag\"",
        "\"ztrsv(case 1207) real\"",
        "\"ztrsv(case 1207) imag\"",
        "\"ztrsv(case 1208) real\"",
        "\"ztrsv(case 1208) imag\"",
        "\"ztrsv(case 1209) real\"",
        "\"ztrsv(case 1209) imag\"",
        "\"ztrsv(case 1210) real\"",
        "\"ztrsv(case 1210) imag\"",
        "\"ztrsv(case 1211) real\"",
        "\"ztrsv(case 1211) imag\"",
        "\"ztrsv(case 1212) real\"",
        "\"ztrsv(case 1212) imag\"",
        "\"ztrsv(case 1213) real\"",
        "\"ztrsv(case 1213) imag\"",
        "\"ztrsv(case 1214) real\"",
        "\"ztrsv(case 1214) imag\"",
        "\"ztrsv(case 1215) real\"",
        "\"ztrsv(case 1215) imag\"",
        "\"ztrsv(case 1216) real\"",
        "\"ztrsv(case 1216) imag\"",
        "\"ztrsv(case 1217) real\"",
        "\"ztrsv(case 1217) imag\"",
        "\"ztrsv(case 1218) real\"",
        "\"ztrsv(case 1218) imag\"",
        "\"ztrsv(case 1219) real\"",
        "\"ztrsv(case 1219) imag\"",
        "\"ztrsv(case 1220) real\"",
        "\"ztrsv(case 1220) imag\"",
        "\"ztrsv(case 1221) real\"",
        "\"ztrsv(case 1221) imag\"",
        "\"ztrsv(case 1222) real\"",
        "\"ztrsv(case 1222) imag\"",
        "\"ztrsv(case 1223) real\"",
        "\"ztrsv(case 1223) imag\"",
        "\"ztrsv(case 1224) real\"",
        "\"ztrsv(case 1224) imag\"",
        "\"ztrsv(case 1225) real\"",
        "\"ztrsv(case 1225) imag\"",
        "\"ztrsv(case 1226) real\"",
        "\"ztrsv(case 1226) imag\"",
        "\"ztrsv(case 1227) real\"",
        "\"ztrsv(case 1227) imag\"",
        "\"ztrsv(case 1228) real\"",
        "\"ztrsv(case 1228) imag\"",
        "\"ztrsv(case 1229) real\"",
        "\"ztrsv(case 1229) imag\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/xerbla.c": {
    "cblas_xerbla": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": [
        "\"Parameter %d to routine %s was incorrect\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zaxpy.c": {
    "cblas_zaxpy": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_axpy_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zcopy.c": {
    "cblas_zcopy": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": [
        "\"source_copy_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zdotc_sub.c": {
    "cblas_zdotc_sub": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_dot_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zdotu_sub.c": {
    "cblas_zdotu_sub": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_dot_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zdscal.c": {
    "cblas_zdscal": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_scal_c_s.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zgbmv.c": {
    "cblas_zgbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_gbmv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zgemm.c": {
    "cblas_zgemm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_gemm_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zgemv.c": {
    "cblas_zgemv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_gemv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zgerc.c": {
    "cblas_zgerc": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_gerc.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zgeru.c": {
    "cblas_zgeru": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_geru.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zhbmv.c": {
    "cblas_zhbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_hbmv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zhemm.c": {
    "cblas_zhemm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_hemm.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zhemv.c": {
    "cblas_zhemv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_hemv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zher.c": {
    "cblas_zher": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_her.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zher2.c": {
    "cblas_zher2": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_her2.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zher2k.c": {
    "cblas_zher2k": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_her2k.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zherk.c": {
    "cblas_zherk": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_herk.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zhpmv.c": {
    "cblas_zhpmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_hpmv.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zhpr.c": {
    "cblas_zhpr": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_hpr.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zhpr2.c": {
    "cblas_zhpr2": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_hpr2.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zscal.c": {
    "cblas_zscal": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_scal_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zswap.c": {
    "cblas_zswap": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"source_swap_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zsymm.c": {
    "cblas_zsymm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_symm_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zsyr2k.c": {
    "cblas_zsyr2k": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_syr2k_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/zsyrk.c": {
    "cblas_zsyrk": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_syrk_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ztbmv.c": {
    "cblas_ztbmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_tbmv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ztbsv.c": {
    "cblas_ztbsv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        16,
        1
      ],
      "strings": [
        "\"source_tbsv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ztpmv.c": {
    "cblas_ztpmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"source_tpmv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ztpsv.c": {
    "cblas_ztpsv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_tpsv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ztrmm.c": {
    "cblas_ztrmm": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"source_trmm_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ztrmv.c": {
    "cblas_ztrmv": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"source_trmv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ztrsm.c": {
    "cblas_ztrsm": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        17,
        1
      ],
      "strings": [
        "\"source_trsm_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cblas/ztrsv.c": {
    "cblas_ztrsv": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        16,
        1
      ],
      "strings": [
        "\"source_trsv_c.h\""
      ]
    }
  },
  "gsl/gsl-2.5/cdf/beta.c": {
    "gsl_cdf_beta_P": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "gsl_cdf_beta_Q": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/betainv.c": {
    "bisect": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "gsl_cdf_beta_Pinv": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": [
        "\"P must be in range 0 < P < 1\"",
        "\"a < 0\"",
        "\"b < 0\"",
        "\"inverse failed to converge\""
      ]
    },
    "gsl_cdf_beta_Qinv": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": [
        "\"Q must be inside range 0 < Q < 1\"",
        "\"a < 0\"",
        "\"b < 0\""
      ]
    }
  },
  "gsl/gsl-2.5/cdf/beta_inc.c": {
    "beta_cont_frac": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "beta_inc_AXPY": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "beta_series": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        191,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/binomial.c": {
    "gsl_cdf_binomial_P": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": [
        "\"p < 0 or p > 1\""
      ]
    },
    "gsl_cdf_binomial_Q": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"p < 0 or p > 1\""
      ]
    }
  },
  "gsl/gsl-2.5/cdf/cauchy.c": {
    "gsl_cdf_cauchy_P": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "gsl_cdf_cauchy_Q": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/cauchyinv.c": {
    "gsl_cdf_cauchy_Pinv": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_cdf_cauchy_Qinv": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/chisq.c": {
    "gsl_cdf_chisq_P": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": []
    },
    "gsl_cdf_chisq_Q": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/chisqinv.c": {
    "gsl_cdf_chisq_Pinv": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": []
    },
    "gsl_cdf_chisq_Qinv": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/error.h": {},
  "gsl/gsl-2.5/cdf/exponential.c": {
    "gsl_cdf_exponential_P": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "gsl_cdf_exponential_Q": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/exponentialinv.c": {
    "gsl_cdf_exponential_Pinv": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "gsl_cdf_exponential_Qinv": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/exppow.c": {
    "gsl_cdf_exppow_P": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "gsl_cdf_exppow_Q": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/fdist.c": {
    "gsl_cdf_fdist_P": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "gsl_cdf_fdist_Q": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/fdistinv.c": {
    "gsl_cdf_fdist_Pinv": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": [
        "\"P < 0.0\"",
        "\"P > 1.0\"",
        "\"nu1 < 1\"",
        "\"nu2 < 1\""
      ]
    },
    "gsl_cdf_fdist_Qinv": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"Q < 0.0\"",
        "\"Q > 1.0\"",
        "\"nu1 < 1\"",
        "\"nu2 < 1\""
      ]
    }
  },
  "gsl/gsl-2.5/cdf/flat.c": {
    "gsl_cdf_flat_P": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "gsl_cdf_flat_Q": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/flatinv.c": {
    "gsl_cdf_flat_Pinv": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "gsl_cdf_flat_Qinv": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/gamma.c": {
    "gsl_cdf_gamma_P": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "gsl_cdf_gamma_Q": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/gammainv.c": {
    "gsl_cdf_gamma_Pinv": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": [
        "\"inverse failed to converge\""
      ]
    },
    "gsl_cdf_gamma_Qinv": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/gauss.c": {
    "get_del": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "gauss_small": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    },
    "gauss_medium": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "gauss_large": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    },
    "gsl_cdf_ugaussian_P": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": []
    },
    "gsl_cdf_ugaussian_Q": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        338,
        1
      ],
      "strings": []
    },
    "gsl_cdf_gaussian_P": {
      "start_point": [
        340,
        0
      ],
      "end_point": [
        344,
        1
      ],
      "strings": []
    },
    "gsl_cdf_gaussian_Q": {
      "start_point": [
        346,
        0
      ],
      "end_point": [
        350,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/gaussinv.c": {
    "small": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "intermediate": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "tail": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "gsl_cdf_ugaussian_Pinv": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "gsl_cdf_ugaussian_Qinv": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "gsl_cdf_gaussian_Pinv": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "gsl_cdf_gaussian_Qinv": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/geometric.c": {
    "gsl_cdf_geometric_P": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"p < 0 or p > 1\""
      ]
    },
    "gsl_cdf_geometric_Q": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": [
        "\"p < 0 or p > 1\""
      ]
    }
  },
  "gsl/gsl-2.5/cdf/gsl_cdf.h": {},
  "gsl/gsl-2.5/cdf/gumbel1.c": {
    "gsl_cdf_gumbel1_P": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "gsl_cdf_gumbel1_Q": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/gumbel1inv.c": {
    "gsl_cdf_gumbel1_Pinv": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "gsl_cdf_gumbel1_Qinv": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/gumbel2.c": {
    "gsl_cdf_gumbel2_P": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "gsl_cdf_gumbel2_Q": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/gumbel2inv.c": {
    "gsl_cdf_gumbel2_Pinv": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "gsl_cdf_gumbel2_Qinv": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/hypergeometric.c": {
    "lower_tail": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "upper_tail": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "gsl_cdf_hypergeometric_P": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": [
        "\"t larger than population size\""
      ]
    },
    "gsl_cdf_hypergeometric_Q": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": [
        "\"t larger than population size\""
      ]
    }
  },
  "gsl/gsl-2.5/cdf/laplace.c": {
    "gsl_cdf_laplace_P": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "gsl_cdf_laplace_Q": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/laplaceinv.c": {
    "gsl_cdf_laplace_Pinv": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_cdf_laplace_Qinv": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/logistic.c": {
    "gsl_cdf_logistic_P": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "gsl_cdf_logistic_Q": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/logisticinv.c": {
    "gsl_cdf_logistic_Pinv": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "gsl_cdf_logistic_Qinv": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/lognormal.c": {
    "gsl_cdf_lognormal_P": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "gsl_cdf_lognormal_Q": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/lognormalinv.c": {
    "gsl_cdf_lognormal_Pinv": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "gsl_cdf_lognormal_Qinv": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/nbinomial.c": {
    "gsl_cdf_negative_binomial_P": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"p < 0 or p > 1\"",
        "\"n < 0\""
      ]
    },
    "gsl_cdf_negative_binomial_Q": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": [
        "\"p < 0 or p > 1\"",
        "\"n < 0\""
      ]
    }
  },
  "gsl/gsl-2.5/cdf/pareto.c": {
    "gsl_cdf_pareto_P": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "gsl_cdf_pareto_Q": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/paretoinv.c": {
    "gsl_cdf_pareto_Pinv": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "gsl_cdf_pareto_Qinv": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/pascal.c": {
    "gsl_cdf_pascal_P": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "gsl_cdf_pascal_Q": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/poisson.c": {
    "gsl_cdf_poisson_P": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": [
        "\"mu <= 0\""
      ]
    },
    "gsl_cdf_poisson_Q": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"mu <= 0\""
      ]
    }
  },
  "gsl/gsl-2.5/cdf/rat_eval.h": {
    "rat_eval": {
      "start_point": [
        0,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/rayleigh.c": {
    "gsl_cdf_rayleigh_P": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "gsl_cdf_rayleigh_Q": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/rayleighinv.c": {
    "gsl_cdf_rayleigh_Pinv": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "gsl_cdf_rayleigh_Qinv": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/tdist.c": {
    "poly_eval": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "cornish_fisher": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "normal_approx": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    },
    "gsl_cdf_tdist_P": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": []
    },
    "gsl_cdf_tdist_Q": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/tdistinv.c": {
    "inv_cornish_fisher": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "gsl_cdf_tdist_Pinv": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": [
        "\"inverse failed to converge\""
      ]
    },
    "gsl_cdf_tdist_Qinv": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        238,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/test.c": {
    "test_binomial_range": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "test_binomial_pdf": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "test_binomial_cdf_P": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "test_binomial_cdf_Q": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "test_poisson_range": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "test_poisson_pdf": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "test_poisson_cdf_P": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "test_poisson_cdf_Q": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "test_geometric_range": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    },
    "test_geometric_pdf": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    },
    "test_geometric_cdf_P": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "test_geometric_cdf_Q": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "test_negative_binomial_range": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "test_negative_binomial_pdf": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    },
    "test_negative_binomial_cdf_P": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "test_negative_binomial_cdf_Q": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "test_pascal_range": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "test_pascal_pdf": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "test_pascal_cdf_P": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "test_pascal_cdf_Q": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "test_hypergeometric_range": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    },
    "test_hypergeometric_pdf": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    },
    "test_hypergeometric_cdf_P": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "test_hypergeometric_cdf_Q": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "test_hypergeometric2_range": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    },
    "test_hypergeometric2a_range": {
      "start_point": [
        219,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    },
    "test_hypergeometric2b_range": {
      "start_point": [
        226,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": []
    },
    "test_hypergeometric2_pdf": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "test_hypergeometric2_cdf_P": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    },
    "test_hypergeometric2_cdf_Q": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": []
    },
    "test_logarithmic_range": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        257,
        1
      ],
      "strings": []
    },
    "test_logarithmic_pdf": {
      "start_point": [
        259,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": []
    },
    "test_logarithmic_cdf_P": {
      "start_point": [
        265,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": []
    },
    "test_logarithmic_cdf_Q": {
      "start_point": [
        271,
        0
      ],
      "end_point": [
        275,
        1
      ],
      "strings": []
    },
    "test_discrete_cdf_P": {
      "start_point": [
        278,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": []
    },
    "test_discrete_cdf_Q": {
      "start_point": [
        303,
        0
      ],
      "end_point": [
        326,
        1
      ],
      "strings": []
    },
    "test_discrete_cdf_PQ": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": [
        "\"Pi in range [0,1] (%.18e)\"",
        "\"Qi in range [0,1] (%.18e)\""
      ]
    },
    "main": {
      "start_point": [
        365,
        0
      ],
      "end_point": [
        435,
        1
      ],
      "strings": [
        "\"test gsl_cdf_hypergeometric_P+Q (k=%d)\"",
        "\"test gsl_cdf_hypergeometric_P+Q (k=%d)\""
      ]
    },
    "test_ugaussian": {
      "start_point": [
        437,
        0
      ],
      "end_point": [
        482,
        1
      ],
      "strings": []
    },
    "test_ugaussianinv": {
      "start_point": [
        486,
        0
      ],
      "end_point": [
        534,
        1
      ],
      "strings": []
    },
    "test_exponential": {
      "start_point": [
        540,
        0
      ],
      "end_point": [
        549,
        1
      ],
      "strings": []
    },
    "test_exponentialinv": {
      "start_point": [
        551,
        0
      ],
      "end_point": [
        557,
        1
      ],
      "strings": []
    },
    "test_exppow": {
      "start_point": [
        561,
        0
      ],
      "end_point": [
        578,
        1
      ],
      "strings": []
    },
    "test_tdist": {
      "start_point": [
        586,
        0
      ],
      "end_point": [
        760,
        1
      ],
      "strings": []
    },
    "test_fdist": {
      "start_point": [
        766,
        0
      ],
      "end_point": [
        896,
        1
      ],
      "strings": []
    },
    "test_finv": {
      "start_point": [
        898,
        0
      ],
      "end_point": [
        1011,
        1
      ],
      "strings": []
    },
    "test_gamma": {
      "start_point": [
        1017,
        0
      ],
      "end_point": [
        1108,
        1
      ],
      "strings": []
    },
    "test_chisq": {
      "start_point": [
        1110,
        0
      ],
      "end_point": [
        1140,
        1
      ],
      "strings": []
    },
    "test_beta": {
      "start_point": [
        1145,
        0
      ],
      "end_point": [
        1169,
        1
      ],
      "strings": []
    },
    "test_betainv": {
      "start_point": [
        1171,
        0
      ],
      "end_point": [
        1197,
        1
      ],
      "strings": []
    },
    "test_gammainv": {
      "start_point": [
        1199,
        0
      ],
      "end_point": [
        1228,
        1
      ],
      "strings": []
    },
    "test_chisqinv": {
      "start_point": [
        1230,
        0
      ],
      "end_point": [
        1266,
        1
      ],
      "strings": []
    },
    "test_tdistinv": {
      "start_point": [
        1268,
        0
      ],
      "end_point": [
        1392,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/test_auto.c": {
    "test_auto_beta": {
      "start_point": [
        2,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "test_auto_fdist": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "test_auto_cauchy": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    },
    "test_auto_gaussian": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": []
    },
    "test_auto_laplace": {
      "start_point": [
        360,
        0
      ],
      "end_point": [
        474,
        1
      ],
      "strings": []
    },
    "test_auto_rayleigh": {
      "start_point": [
        478,
        0
      ],
      "end_point": [
        540,
        1
      ],
      "strings": []
    },
    "test_auto_flat": {
      "start_point": [
        544,
        0
      ],
      "end_point": [
        596,
        1
      ],
      "strings": []
    },
    "test_auto_lognormal": {
      "start_point": [
        600,
        0
      ],
      "end_point": [
        678,
        1
      ],
      "strings": []
    },
    "test_auto_gamma": {
      "start_point": [
        682,
        0
      ],
      "end_point": [
        748,
        1
      ],
      "strings": []
    },
    "test_auto_chisq": {
      "start_point": [
        752,
        0
      ],
      "end_point": [
        821,
        1
      ],
      "strings": []
    },
    "test_auto_tdist": {
      "start_point": [
        825,
        0
      ],
      "end_point": [
        957,
        1
      ],
      "strings": []
    },
    "test_auto_gumbel1": {
      "start_point": [
        961,
        0
      ],
      "end_point": [
        1073,
        1
      ],
      "strings": []
    },
    "test_auto_gumbel2": {
      "start_point": [
        1077,
        0
      ],
      "end_point": [
        1141,
        1
      ],
      "strings": []
    },
    "test_auto_weibull": {
      "start_point": [
        1145,
        0
      ],
      "end_point": [
        1207,
        1
      ],
      "strings": []
    },
    "test_auto_pareto": {
      "start_point": [
        1211,
        0
      ],
      "end_point": [
        1272,
        1
      ],
      "strings": []
    },
    "test_auto_logistic": {
      "start_point": [
        1276,
        0
      ],
      "end_point": [
        1390,
        1
      ],
      "strings": []
    },
    "test_auto_gammalarge": {
      "start_point": [
        1394,
        0
      ],
      "end_point": [
        1462,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/weibull.c": {
    "gsl_cdf_weibull_P": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    },
    "gsl_cdf_weibull_Q": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cdf/weibullinv.c": {
    "gsl_cdf_weibull_Pinv": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "gsl_cdf_weibull_Qinv": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cheb/deriv.c": {
    "gsl_cheb_calc_deriv": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"order of chebyshev series must be equal\""
      ]
    }
  },
  "gsl/gsl-2.5/cheb/eval.c": {
    "gsl_cheb_eval": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "gsl_cheb_eval_n": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "gsl_cheb_eval_err": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "gsl_cheb_eval_n_err": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": []
    },
    "gsl_cheb_eval_mode_e": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "gsl_cheb_eval_mode": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": [
        "\"gsl_cheb_eval_mode\""
      ]
    }
  },
  "gsl/gsl-2.5/cheb/gsl_chebyshev.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cheb/init.c": {
    "gsl_cheb_alloc": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"failed to allocate gsl_cheb_series struct\"",
        "\"failed to allocate cheb coefficients\"",
        "\"failed to allocate cheb function space\""
      ]
    },
    "gsl_cheb_free": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "gsl_cheb_init": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": [
        "\"null function interval [a,b]\""
      ]
    },
    "gsl_cheb_order": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "gsl_cheb_size": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "gsl_cheb_coeffs": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/cheb/integ.c": {
    "gsl_cheb_calc_integ": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": [
        "\"order of chebyshev series must be equal\""
      ]
    }
  },
  "gsl/gsl-2.5/cheb/test.c": {
    "f_T0": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "f_T1": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "f_T2": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "f_sin": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "f_DP": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "f_P": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "f_IP1": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "f_IP2": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "test_dim": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"gsl_cheb_eval, F(%.3g)\"",
        "\"gsl_cheb_eval, deriv F(%.3g)\"",
        "\"gsl_cheb_eval, integ F(%.3g)\""
      ]
    },
    "main": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        296,
        1
      ],
      "strings": [
        "\"gsl_cheb_order\"",
        "\"gsl_cheb_size\"",
        "\"gsl_cheb_coeffs\"",
        "\"c[%d] for T_0(x)\"",
        "\"c[%d] for T_1(x)\"",
        "\"c[%d] for T_2(x)\"",
        "\"c[0] for F_sin(x)\"",
        "\"c[1] for F_sin(x)\"",
        "\"c[2] for F_sin(x)\"",
        "\"c[3] for F_sin(x)\"",
        "\"c[4] for F_sin(x)\"",
        "\"c[5] for F_sin(x)\"",
        "\"gsl_cheb_eval, sin(%.3g)\"",
        "\"gsl_cheb_eval_err, sin(%.3g)\"",
        "\"gsl_cheb_eval_err, error sin(%.3g)\"",
        "\"gsl_cheb_eval_n, sin(%.3g)\"",
        "\"gsl_cheb_eval_n_err, deriv sin(%.3g)\"",
        "\"gsl_cheb_eval_n_err, error sin(%.3g)\"",
        "\"gsl_cheb_eval, deriv sin(%.3g)\"",
        "\"gsl_cheb_eval_err, deriv sin(%.3g)\"",
        "\"gsl_cheb_eval_err, deriv error sin(%.3g)\"",
        "\"gsl_cheb_eval_n, deriv sin(%.3g)\"",
        "\"gsl_cheb_eval_n_err, deriv sin(%.3g)\"",
        "\"gsl_cheb_eval_n_err, deriv error sin(%.3g)\"",
        "\"gsl_cheb_eval, integ sin(%.3g)\"",
        "\"gsl_cheb_eval_err, integ sin(%.3g)\"",
        "\"gsl_cheb_eval_err, integ error sin(%.3g)\"",
        "\"gsl_cheb_eval_n, integ sin(%.3g)\"",
        "\"gsl_cheb_eval_n_err, integ sin(%.3g)\"",
        "\"gsl_cheb_eval_n_err, integ error sin(%.3g)\""
      ]
    }
  },
  "gsl/gsl-2.5/combination/combination.c": {
    "gsl_combination_n": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        28,
        1
      ],
      "strings": []
    },
    "gsl_combination_k": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "gsl_combination_data": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "gsl_combination_valid": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"combination has k greater than n\"",
        "\"combination index outside range\"",
        "\"duplicate combination index\"",
        "\"combination indices not in increasing order\""
      ]
    },
    "gsl_combination_next": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "gsl_combination_prev": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "gsl_combination_memcpy": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": [
        "\"combination lengths are not equal\""
      ]
    }
  },
  "gsl/gsl-2.5/combination/file.c": {
    "gsl_combination_fread": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": [
        "\"fread failed\""
      ]
    },
    "gsl_combination_fwrite": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"fwrite failed\""
      ]
    },
    "gsl_combination_fprintf": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": [
        "\"fprintf failed\""
      ]
    },
    "gsl_combination_fscanf": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"fscanf failed\""
      ]
    }
  },
  "gsl/gsl-2.5/combination/gsl_combination.h": {
    "struct": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "gsl_combination_get": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/combination/init.c": {
    "gsl_combination_alloc": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": [
        "\"combination parameter n must be positive integer\"",
        "\"combination length k must be an integer less than or equal to n\"",
        "\"failed to allocate space for combination struct\"",
        "\"failed to allocate space for combination data\""
      ]
    },
    "gsl_combination_calloc": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "gsl_combination_init_first": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "gsl_combination_init_last": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "gsl_combination_free": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/combination/inline.c": {},
  "gsl/gsl-2.5/combination/test.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        254,
        1
      ],
      "strings": [
        "\"gsl_combination_valid (%u)\"",
        "\"gsl_combination_next, 6 choose 3 combination, 20 steps\"",
        "\"gsl_combination_next on the last combination\"",
        "\"gsl_combination_valid on the last combination\"",
        "\"gsl_combination_memcpy, 6 choose 3 combination\"",
        "\"gsl_combination_valid (%u)\"",
        "\"gsl_combination_prev, 6 choose 3 combination, 20 steps\"",
        "\"gsl_combination_prev on the first combination\"",
        "\"gsl_combination_valid on the first combination\"",
        "\"gsl_combination_memcpy, 6 choose 3 combination\"",
        "\"gsl_combination 7 choose 0\"",
        "\"gsl_combination 7 choose 7\"",
        "\"gsl_combination_valid on an invalid combination (1,1,2)\"",
        "\"gsl_combination_valid on an invalid combination (2,1,0)\"",
        "\"gsl_combination_valid on an invalid combination (1,2,0)\"",
        "\"gsl_combination_memcpy, (6,4) vs (6,3)\"",
        "\"gsl_combination_memcpy, (7,3) vs (6,3)\"",
        "\"gsl_combination_memcpy, (7,2) vs (6,3)\""
      ]
    },
    "my_error_handler": {
      "start_point": [
        256,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/complex/gsl_complex.h": {},
  "gsl/gsl-2.5/complex/gsl_complex_math.h": {
    "gsl_complex_rect": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/complex/inline.c": {},
  "gsl/gsl-2.5/complex/math.c": {
    "gsl_complex_polar": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "gsl_complex_arg": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "gsl_complex_abs": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "gsl_complex_abs2": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "gsl_complex_logabs": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "gsl_complex_add": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "gsl_complex_add_real": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "gsl_complex_add_imag": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "gsl_complex_sub": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "gsl_complex_sub_real": {
      "start_point": [
        161,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "gsl_complex_sub_imag": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": []
    },
    "gsl_complex_mul": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": []
    },
    "gsl_complex_mul_real": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    },
    "gsl_complex_mul_imag": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "gsl_complex_div": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "gsl_complex_div_real": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "gsl_complex_div_imag": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "gsl_complex_conjugate": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": []
    },
    "gsl_complex_negative": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": []
    },
    "gsl_complex_inverse": {
      "start_point": [
        255,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": []
    },
    "gsl_complex_sqrt": {
      "start_point": [
        269,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": []
    },
    "gsl_complex_sqrt_real": {
      "start_point": [
        311,
        0
      ],
      "end_point": [
        326,
        1
      ],
      "strings": []
    },
    "gsl_complex_exp": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        337,
        1
      ],
      "strings": []
    },
    "gsl_complex_pow": {
      "start_point": [
        339,
        0
      ],
      "end_point": [
        377,
        1
      ],
      "strings": []
    },
    "gsl_complex_pow_real": {
      "start_point": [
        379,
        0
      ],
      "end_point": [
        405,
        1
      ],
      "strings": []
    },
    "gsl_complex_log": {
      "start_point": [
        407,
        0
      ],
      "end_point": [
        416,
        1
      ],
      "strings": []
    },
    "gsl_complex_log10": {
      "start_point": [
        418,
        0
      ],
      "end_point": [
        422,
        1
      ],
      "strings": []
    },
    "gsl_complex_log_b": {
      "start_point": [
        424,
        0
      ],
      "end_point": [
        428,
        1
      ],
      "strings": []
    },
    "gsl_complex_sin": {
      "start_point": [
        434,
        0
      ],
      "end_point": [
        453,
        1
      ],
      "strings": []
    },
    "gsl_complex_cos": {
      "start_point": [
        455,
        0
      ],
      "end_point": [
        474,
        1
      ],
      "strings": []
    },
    "gsl_complex_tan": {
      "start_point": [
        476,
        0
      ],
      "end_point": [
        498,
        1
      ],
      "strings": []
    },
    "gsl_complex_sec": {
      "start_point": [
        500,
        0
      ],
      "end_point": [
        505,
        1
      ],
      "strings": []
    },
    "gsl_complex_csc": {
      "start_point": [
        507,
        0
      ],
      "end_point": [
        512,
        1
      ],
      "strings": []
    },
    "gsl_complex_cot": {
      "start_point": [
        515,
        0
      ],
      "end_point": [
        520,
        1
      ],
      "strings": []
    },
    "gsl_complex_arcsin": {
      "start_point": [
        526,
        0
      ],
      "end_point": [
        591,
        1
      ],
      "strings": []
    },
    "gsl_complex_arcsin_real": {
      "start_point": [
        593,
        0
      ],
      "end_point": [
        615,
        1
      ],
      "strings": []
    },
    "gsl_complex_arccos": {
      "start_point": [
        617,
        0
      ],
      "end_point": [
        682,
        1
      ],
      "strings": []
    },
    "gsl_complex_arccos_real": {
      "start_point": [
        684,
        0
      ],
      "end_point": [
        706,
        1
      ],
      "strings": []
    },
    "gsl_complex_arctan": {
      "start_point": [
        708,
        0
      ],
      "end_point": [
        766,
        1
      ],
      "strings": []
    },
    "gsl_complex_arcsec": {
      "start_point": [
        768,
        0
      ],
      "end_point": [
        773,
        1
      ],
      "strings": []
    },
    "gsl_complex_arcsec_real": {
      "start_point": [
        775,
        0
      ],
      "end_point": [
        797,
        1
      ],
      "strings": []
    },
    "gsl_complex_arccsc": {
      "start_point": [
        799,
        0
      ],
      "end_point": [
        804,
        1
      ],
      "strings": []
    },
    "gsl_complex_arccsc_real": {
      "start_point": [
        806,
        0
      ],
      "end_point": [
        828,
        1
      ],
      "strings": []
    },
    "gsl_complex_arccot": {
      "start_point": [
        830,
        0
      ],
      "end_point": [
        846,
        1
      ],
      "strings": []
    },
    "gsl_complex_sinh": {
      "start_point": [
        852,
        0
      ],
      "end_point": [
        860,
        1
      ],
      "strings": []
    },
    "gsl_complex_cosh": {
      "start_point": [
        862,
        0
      ],
      "end_point": [
        870,
        1
      ],
      "strings": []
    },
    "gsl_complex_tanh": {
      "start_point": [
        872,
        0
      ],
      "end_point": [
        894,
        1
      ],
      "strings": []
    },
    "gsl_complex_sech": {
      "start_point": [
        896,
        0
      ],
      "end_point": [
        901,
        1
      ],
      "strings": []
    },
    "gsl_complex_csch": {
      "start_point": [
        903,
        0
      ],
      "end_point": [
        908,
        1
      ],
      "strings": []
    },
    "gsl_complex_coth": {
      "start_point": [
        910,
        0
      ],
      "end_point": [
        915,
        1
      ],
      "strings": []
    },
    "gsl_complex_arcsinh": {
      "start_point": [
        921,
        0
      ],
      "end_point": [
        928,
        1
      ],
      "strings": []
    },
    "gsl_complex_arccosh": {
      "start_point": [
        930,
        0
      ],
      "end_point": [
        936,
        1
      ],
      "strings": []
    },
    "gsl_complex_arccosh_real": {
      "start_point": [
        938,
        0
      ],
      "end_point": [
        960,
        1
      ],
      "strings": []
    },
    "gsl_complex_arctanh": {
      "start_point": [
        962,
        0
      ],
      "end_point": [
        976,
        1
      ],
      "strings": []
    },
    "gsl_complex_arctanh_real": {
      "start_point": [
        978,
        0
      ],
      "end_point": [
        993,
        1
      ],
      "strings": []
    },
    "gsl_complex_arcsech": {
      "start_point": [
        995,
        0
      ],
      "end_point": [
        1000,
        1
      ],
      "strings": []
    },
    "gsl_complex_arccsch": {
      "start_point": [
        1002,
        0
      ],
      "end_point": [
        1007,
        1
      ],
      "strings": []
    },
    "gsl_complex_arccoth": {
      "start_point": [
        1009,
        0
      ],
      "end_point": [
        1014,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/complex/results.h": {},
  "gsl/gsl-2.5/complex/results1.h": {},
  "gsl/gsl-2.5/complex/results2.h": {},
  "gsl/gsl-2.5/complex/results_real.h": {},
  "gsl/gsl-2.5/complex/results_zreal.h": {},
  "gsl/gsl-2.5/complex/test.c": {
    "main": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": [
        "\"gsl_complex_polar real part at (r=%g,t=%g)\"",
        "\"gsl_complex_polar imag part at (r=%g,t=%g)\"",
        "\"%s at (%g,%g)\"",
        "\"x = \"",
        "\"\\n\"",
        "\"y = \"",
        "\"\\n\"",
        "\"fx = \"",
        "\"\\n\"",
        "\"ex = \"",
        "\"\\n\"",
        "\"fy = \"",
        "\"\\n\"",
        "\"ey = \"",
        "\"\\n\"",
        "\"%s real part at (%g,%g)\"",
        "\"%s imag part at (%g,%g)\"",
        "\"x1 = \"",
        "\"\\n\"",
        "\"y1 = \"",
        "\"\\n\"",
        "\"x2 = \"",
        "\"\\n\"",
        "\"y2 = \"",
        "\"\\n\"",
        "\"fx = \"",
        "\"\\n\"",
        "\"ex = \"",
        "\"\\n\"",
        "\"fy = \"",
        "\"\\n\"",
        "\"ey = \"",
        "\"\\n\"",
        "\"%s real part at (%g,%g;%g,%g)\"",
        "\"%s imag part at (%g,%g;%g,%g)\"",
        "\"x = \"",
        "\"\\n\"",
        "\"fx = \"",
        "\"\\n\"",
        "\"ex = \"",
        "\"\\n\"",
        "\"fy = \"",
        "\"\\n\"",
        "\"ey = \"",
        "\"\\n\"",
        "\"%s real part at (%g,0)\"",
        "\"%s imag part at (%g,0)\"",
        "\"x = \"",
        "\"\\n\"",
        "\"y = \"",
        "\"\\n\"",
        "\"a = \"",
        "\"\\n\"",
        "\"fx = \"",
        "\"\\n\"",
        "\"ex = \"",
        "\"\\n\"",
        "\"fy = \"",
        "\"\\n\"",
        "\"ey = \"",
        "\"\\n\"",
        "\"%s real part at (%g,0)\"",
        "\"%s imag part at (%g,0)\""
      ]
    }
  },
  "gsl/gsl-2.5/const/gsl_const.h": {},
  "gsl/gsl-2.5/const/gsl_const_cgs.h": {},
  "gsl/gsl-2.5/const/gsl_const_cgsm.h": {},
  "gsl/gsl-2.5/const/gsl_const_mks.h": {},
  "gsl/gsl-2.5/const/gsl_const_mksa.h": {},
  "gsl/gsl-2.5/const/gsl_const_num.h": {},
  "gsl/gsl-2.5/const/test.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"speed of light (mks)\"",
        "\"light year (cgs)\"",
        "\"speed of light (mksa)\"",
        "\"light year (cgsm)\"",
        "\"kilo (mega/kilo, 1/(micro*kilo))\"",
        "\"debye (esu)\"",
        "\"stefan boltzmann constant\""
      ]
    }
  },
  "gsl/gsl-2.5/deriv/deriv.c": {
    "central_deriv": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "gsl_deriv_central": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "forward_deriv": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "gsl_deriv_forward": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "gsl_deriv_backward": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/deriv/gsl_deriv.h": {},
  "gsl/gsl-2.5/deriv/test.c": {
    "f1": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "df1": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "f2": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "df2": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "f3": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "df3": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "f4": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "df4": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "f5": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "df5": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "f6": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "df6": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    },
    "test": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": [
        "\"%s error estimate\"",
        "\"%s abserr\"",
        "\"%s abserr\""
      ]
    },
    "main": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": [
        "\"exp(x), x=1, central deriv\"",
        "\"exp(x), x=1, forward deriv\"",
        "\"exp(x), x=1, backward deriv\"",
        "\"x^(3/2), x=0.1, central deriv\"",
        "\"x^(3/2), x=0.1, forward deriv\"",
        "\"x^(3/2), x=0.1, backward deriv\"",
        "\"sin(1/x), x=0.45, central deriv\"",
        "\"sin(1/x), x=0.45, forward deriv\"",
        "\"sin(1/x), x=0.45, backward deriv\"",
        "\"exp(-x^2), x=0.5, central deriv\"",
        "\"exp(-x^2), x=0.5, forward deriv\"",
        "\"exp(-x^2), x=0.5, backward deriv\"",
        "\"x^2, x=0, central deriv\"",
        "\"x^2, x=0, forward deriv\"",
        "\"x^2, x=0, backward deriv\"",
        "\"1/x, x=10, central deriv\"",
        "\"1/x, x=10, forward deriv\"",
        "\"1/x, x=10, backward deriv\""
      ]
    }
  },
  "gsl/gsl-2.5/dht/dht.c": {
    "gsl_dht_alloc": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": [
        "\"size == 0\"",
        "\"out of memory\"",
        "\"could not allocate memory for j\"",
        "\"could not allocate memory for Jjj\"",
        "\"could not allocate memory for J2\""
      ]
    },
    "dht_bessel_zeros": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"could not compute bessel zeroes\""
      ]
    },
    "gsl_dht_new": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "gsl_dht_init": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"xmax is not positive\"",
        "\"nu is negative\"",
        "\"error computing bessel function\""
      ]
    },
    "gsl_dht_x_sample": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "gsl_dht_k_sample": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "gsl_dht_free": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "gsl_dht_apply": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/dht/gsl_dht.h": {
    "struct": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/dht/test.c": {
    "test_dht_exact": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "test_dht_simple": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "test_dht_exp1": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "test_dht_poly1": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"Small Exact DHT\"",
        "\"Simple  DHT\"",
        "\"Exp  J1 DHT\"",
        "\"Poly J1 DHT\""
      ]
    }
  },
  "gsl/gsl-2.5/diff/diff.c": {
    "gsl_diff_backward": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "gsl_diff_forward": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "gsl_diff_central": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/diff/gsl_diff.h": {},
  "gsl/gsl-2.5/diff/test.c": {
    "f1": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "df1": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "f2": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "df2": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "f3": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "df3": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "f4": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "df4": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "f5": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "df5": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    },
    "f6": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    },
    "df6": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "test": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": [
        "\"%s, valid error estimate\""
      ]
    },
    "main": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"exp(x), x=1, central diff\"",
        "\"exp(x), x=1, forward diff\"",
        "\"exp(x), x=1, backward diff\"",
        "\"x^(3/2), x=0.1, central diff\"",
        "\"x^(3/2), x=0.1, forward diff\"",
        "\"x^(3/2), x=0.1, backward diff\"",
        "\"sin(1/x), x=0.45, central diff\"",
        "\"sin(1/x), x=0.45, forward diff\"",
        "\"sin(1/x), x=0.45, backward diff\"",
        "\"exp(-x^2), x=0.5, central diff\"",
        "\"exp(-x^2), x=0.5, forward diff\"",
        "\"exp(-x^2), x=0.5, backward diff\"",
        "\"x^2, x=0, central diff\"",
        "\"x^2, x=0, forward diff\"",
        "\"x^2, x=0, backward diff\"",
        "\"1/x, x=10, central diff\"",
        "\"1/x, x=10, forward diff\"",
        "\"1/x, x=10, backward diff\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/blas.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": [
        "\"[ %g, %g\\n\"",
        "\"  %g, %g ]\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/block.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": [
        "\"length of block = %zu\\n\"",
        "\"block data address = %p\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/bspline.c": {
    "main": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": [
        "\"%f %f\\n\"",
        "\"chisq/dof = %e, Rsq = %f\\n\"",
        "\"\\n\\n\"",
        "\"%f %f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/cblas.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": [
        "\"[ %g, %g\\n\"",
        "\"  %g, %g ]\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/cdf.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": [
        "\"prob(x < %f) = %f\\n\"",
        "\"prob(x > %f) = %f\\n\"",
        "\"Pinv(%f) = %f\\n\"",
        "\"Qinv(%f) = %f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/cheb.c": {
    "f": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        13,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        15,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": [
        "\"%g %g %g %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/combination.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"All subsets of {0,1,2,3} by size:\\n\"",
        "\"{\"",
        "\" %u\"",
        "\" }\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/const.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"light travel time from Earth to Mars:\\n\"",
        "\"minimum = %.1f minutes\\n\"",
        "\"maximum = %.1f minutes\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/demo_fn.c": {
    "quadratic": {
      "start_point": [
        0,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": []
    },
    "quadratic_deriv": {
      "start_point": [
        13,
        0
      ],
      "end_point": [
        23,
        1
      ],
      "strings": []
    },
    "quadratic_fdf": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/doc/examples/demo_fn.h": {},
  "gsl/gsl-2.5/doc/examples/diff.c": {
    "f": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        8,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        10,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": [
        "\"f(x) = x^(3/2)\\n\"",
        "\"x = 2.0\\n\"",
        "\"f'(x) = %.10f +/- %.10f\\n\"",
        "\"exact = %.10f\\n\\n\"",
        "\"x = 0.0\\n\"",
        "\"f'(x) = %.10f +/- %.10f\\n\"",
        "\"exact = %.10f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/dwt.c": {
    "main": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"r\"",
        "\"%lg\"",
        "\"%g %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/eigen.c": {
    "main": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"eigenvalue = %g\\n\"",
        "\"eigenvector = \\n\"",
        "\"%g\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/eigen_nonsymm.c": {
    "main": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"eigenvalue = %g + %gi\\n\"",
        "\"eigenvector = \\n\"",
        "\"%g + %gi\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/fft.c": {
    "main": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": [
        "\"%d %e %e\\n\"",
        "\"\\n\\n\"",
        "\"%d %e %e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/fftmr.c": {
    "main": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"%d: %e %e\\n\"",
        "\"\\n\"",
        "\"# factor %d: %zu\\n\"",
        "\"%d: %e %e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/fftreal.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": [
        "\"%d: %e\\n\"",
        "\"\\n\"",
        "\"%d: %e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/filt_edge.c": {
    "main": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": [
        "\"%f %f %f %f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/fitreg.c": {
    "main": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": [
        "\"matrix condition number = %e\\n\\n\"",
        "\"=== Unregularized fit ===\\n\"",
        "\"best fit: y = %g u + %g v\\n\"",
        "\"residual norm = %g\\n\"",
        "\"solution norm = %g\\n\"",
        "\"chisq/dof = %g\\n\"",
        "\"\\n=== Regularized fit (L-curve) ===\\n\"",
        "\"optimal lambda: %g\\n\"",
        "\"best fit: y = %g u + %g v\\n\"",
        "\"residual norm = %g\\n\"",
        "\"solution norm = %g\\n\"",
        "\"chisq/dof = %g\\n\"",
        "\"\\n=== Regularized fit (GCV) ===\\n\"",
        "\"optimal lambda: %g\\n\"",
        "\"best fit: y = %g u + %g v\\n\"",
        "\"residual norm = %g\\n\"",
        "\"solution norm = %g\\n\"",
        "\"chisq/dof = %g\\n\"",
        "\"%e %e %e %e\\n\"",
        "\"\\n\\n%f %f\\n\"",
        "\"\\n\\n%e %e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/fitreg2.c": {
    "hilbert_matrix": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"matrix condition number = %e\\n\"",
        "\"\\n=== Unregularized fit ===\\n\"",
        "\"residual norm = %g\\n\"",
        "\"solution norm = %g\\n\"",
        "\"chisq/dof = %g\\n\"",
        "\"\\n=== Regularized fit (L-curve) ===\\n\"",
        "\"optimal lambda: %g\\n\"",
        "\"residual norm = %g\\n\"",
        "\"solution norm = %g\\n\"",
        "\"chisq/dof = %g\\n\"",
        "\"\\n=== Regularized fit (GCV) ===\\n\"",
        "\"optimal lambda: %g\\n\"",
        "\"residual norm = %g\\n\"",
        "\"solution norm = %g\\n\"",
        "\"chisq/dof = %g\\n\"",
        "\"%e %e %e %e\\n\"",
        "\"\\n\\n%f %f\\n\"",
        "\"\\n\\n%e %e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/fitting.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": [
        "\"# best fit: Y = %g + %g X\\n\"",
        "\"# covariance matrix:\\n\"",
        "\"# [ %g, %g\\n#   %g, %g]\\n\"",
        "\"# chisq = %g\\n\"",
        "\"data: %g %g %g\\n\"",
        "\"\\n\"",
        "\"fit: %g %g\\n\"",
        "\"hi : %g %g\\n\"",
        "\"lo : %g %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/fitting2.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"usage: fit n < data\\n\"",
        "\"%lg %lg %lg\"",
        "\"error reading file\\n\"",
        "\"%g %g +/- %g\\n\"",
        "\"# best fit: Y = %g + %g X + %g X^2\\n\"",
        "\"# covariance matrix:\\n\"",
        "\"[ %+.5e, %+.5e, %+.5e  \\n\"",
        "\"  %+.5e, %+.5e, %+.5e  \\n\"",
        "\"  %+.5e, %+.5e, %+.5e ]\\n\"",
        "\"# chisq = %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/fitting3.c": {
    "main": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        28,
        1
      ],
      "strings": [
        "\"%g %g %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/gaussfilt.c": {
    "main": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"%e %e %e\\n\"",
        "\"\\n\\n\"",
        "\"%.12e %.12e %.12e %.12e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/gaussfilt2.c": {
    "main": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": [
        "\"%.12e %.12e %.12e %.12e %.12e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/histogram.c": {
    "main": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": [
        "\"Usage: gsl-histogram xmin xmax n\\n\"",
        "\"Computes a histogram of the data \"",
        "\"on stdin using n bins from xmin \"",
        "\"to xmax\\n\"",
        "\"%lg\"",
        "\"%g\"",
        "\"%g\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/histogram2d.c": {
    "main": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"%g %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/ieee.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        21,
        1
      ],
      "strings": [
        "\" f=\"",
        "\"\\n\"",
        "\"fd=\"",
        "\"\\n\"",
        "\" d=\"",
        "\"\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/ieeeround.c": {
    "main": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": [
        "\"i=%2d sum=%.18f error=%g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/impulse.c": {
    "main": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"%zu %f %f %f %f %d\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/integration.c": {
    "f": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        8,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        10,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": [
        "\"result          = % .18f\\n\"",
        "\"exact result    = % .18f\\n\"",
        "\"estimated error = % .18f\\n\"",
        "\"actual error    = % .18f\\n\"",
        "\"intervals       = %zu\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/integration2.c": {
    "f": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        13,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"m               = %d\\n\"",
        "\"intervals       = %zu\\n\"",
        "\"result          = % .18f\\n\"",
        "\"exact result    = % .18f\\n\"",
        "\"actual error    = % .18f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/interp.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": [
        "\"#m=0,S=17\\n\"",
        "\"%g %g\\n\"",
        "\"#m=1,S=0\\n\"",
        "\"%g %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/interp2d.c": {
    "main": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"%f %f %f\\n\"",
        "\"\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/interpp.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": [
        "\"#m=0,S=5\\n\"",
        "\"%g %g\\n\"",
        "\"#m=1,S=0\\n\"",
        "\"%g %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/interp_compare.c": {
    "main": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"%g %g\\n\"",
        "\"\\n\\n\"",
        "\"%g %g %g %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/intro.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": [
        "\"J0(%g) = %.18e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/largefit.c": {
    "func": {
      "start_point": [
        10,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": []
    },
    "build_row": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "solve_system": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": [
        "\"%f %f\\n\"",
        "\"\\n\\n\"",
        "\"=== Method %s ===\\n\"",
        "\"condition number = %e\\n\"",
        "\"residual norm    = %e\\n\"",
        "\"solution norm    = %e\\n\"",
        "\"%.12e %.12e %.12e\\n\"",
        "\"\\n\\n\""
      ]
    },
    "main": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": [
        "\"%f %e %e %e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/linalglu.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": [
        "\"x = \\n\"",
        "\"%g\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/matrix.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        21,
        1
      ],
      "strings": [
        "\"m(%d,%d) = %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/matrixw.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": [
        "\"test.dat\"",
        "\"wb\"",
        "\"test.dat\"",
        "\"rb\"",
        "\"differences = %d (should be zero)\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/min.c": {
    "fn1": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        9,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        11,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": [
        "\"using %s method\\n\"",
        "\"%5s [%9s, %9s] %9s %10s %9s\\n\"",
        "\"iter\"",
        "\"lower\"",
        "\"upper\"",
        "\"min\"",
        "\"err\"",
        "\"err(est)\"",
        "\"%5d [%.7f, %.7f] %.7f %+.7f %.7f\\n\"",
        "\"Converged:\\n\"",
        "\"%5d [%.7f, %.7f] \"",
        "\"%.7f %+.7f %.7f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/monte.c": {
    "g": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "display_results": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": [
        "\"%s ==================\\n\"",
        "\"result = % .6f\\n\"",
        "\"sigma  = % .6f\\n\"",
        "\"exact  = % .6f\\n\"",
        "\"error  = % .6f = %.2g sigma\\n\""
      ]
    },
    "main": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"plain\"",
        "\"miser\"",
        "\"vegas warm-up\"",
        "\"converging...\\n\"",
        "\"result = % .6f sigma = % .6f \"",
        "\"chisq/dof = %.1f\\n\"",
        "\"vegas final\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/movstat1.c": {
    "main": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": [
        "\"%zu %f %f %f %f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/movstat2.c": {
    "main": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": [
        "\"%zu %f %f %f %f %f %f %f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/movstat3.c": {
    "func": {
      "start_point": [
        11,
        0
      ],
      "end_point": [
        19,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": [
        "\"%f %f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/multimin.c": {
    "main": {
      "start_point": [
        0,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"Minimum found at:\\n\"",
        "\"%5d %.5f %.5f %10.5f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/multiminfn.c": {
    "my_f": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": []
    },
    "my_df": {
      "start_point": [
        17,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    },
    "my_fdf": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/doc/examples/multiset.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"All multisets of {0,1,2,3} by size:\\n\"",
        "\"{\"",
        "\" %u\"",
        "\" }\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/nlfit.c": {
    "expb_f": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "expb_df": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "callback": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": [
        "\"iter %2zu: A = %.4f, lambda = %.4f, b = %.4f, cond(J) = %8.4f, |f(x)| = %.4f\\n\""
      ]
    },
    "main": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"data: %g %g %g\\n\"",
        "\"summary from method '%s/%s'\\n\"",
        "\"number of iterations: %zu\\n\"",
        "\"function evaluations: %zu\\n\"",
        "\"Jacobian evaluations: %zu\\n\"",
        "\"reason for stopping: %s\\n\"",
        "\"small step size\"",
        "\"small gradient\"",
        "\"initial |f(x)| = %f\\n\"",
        "\"final   |f(x)| = %f\\n\"",
        "\"chisq/dof = %g\\n\"",
        "\"A      = %.5f +/- %.5f\\n\"",
        "\"lambda = %.5f +/- %.5f\\n\"",
        "\"b      = %.5f +/- %.5f\\n\"",
        "\"status = %s\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/nlfit2.c": {
    "func_f": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        17,
        1
      ],
      "strings": []
    },
    "func_df": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "func_fvv": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "callback": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"%f %f\\n\""
      ]
    },
    "solve_system": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"NITER         = %zu\\n\"",
        "\"NFEV          = %zu\\n\"",
        "\"NJEV          = %zu\\n\"",
        "\"NAEV          = %zu\\n\"",
        "\"initial cost  = %.12e\\n\"",
        "\"final cost    = %.12e\\n\"",
        "\"final x       = (%.12e, %.12e)\\n\"",
        "\"final cond(J) = %.12e\\n\"",
        "\"\\n\\n\""
      ]
    },
    "main": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": [
        "\"%f %f %f\\n\"",
        "\"\\n\"",
        "\"\\n\\n\"",
        "\"=== Solving system without acceleration ===\\n\"",
        "\"=== Solving system with acceleration ===\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/nlfit2b.c": {
    "gaussian": {
      "start_point": [
        17,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": []
    },
    "func_f": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "func_df": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "func_fvv": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "callback": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"iter %2zu: a = %.4f, b = %.4f, c = %.4f, |a|/|v| = %.4f cond(J) = %8.4f, |f(x)| = %.4f\\n\""
      ]
    },
    "solve_system": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": [
        "\"NITER         = %zu\\n\"",
        "\"NFEV          = %zu\\n\"",
        "\"NJEV          = %zu\\n\"",
        "\"NAEV          = %zu\\n\"",
        "\"initial cost  = %.12e\\n\"",
        "\"final cost    = %.12e\\n\"",
        "\"final x       = (%.12e, %.12e, %12e)\\n\"",
        "\"final cond(J) = %.12e\\n\""
      ]
    },
    "main": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": [
        "\"%f %f %f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/nlfit3.c": {
    "func_f": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    },
    "func_df": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "func_fvv": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "callback": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": [
        "\"%f %f\\n\""
      ]
    },
    "solve_system": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"# %s/%s\\n\"",
        "\"%-25s %-6zu %-5zu %-5zu %-13.4e %-12.4e %-13.4e (%.2e, %.2e)\\n\"",
        "\"\\n\\n\""
      ]
    },
    "main": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        208,
        1
      ],
      "strings": [
        "\"%f %f %f\\n\"",
        "\"\\n\"",
        "\"\\n\\n\"",
        "\"%-25s %-6s %-5s %-5s %-13s %-12s %-13s %-15s\\n\"",
        "\"Method\"",
        "\"NITER\"",
        "\"NFEV\"",
        "\"NJEV\"",
        "\"Initial Cost\"",
        "\"Final cost\"",
        "\"Final cond(J)\"",
        "\"Final x\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/nlfit4.c": {
    "penalty_f": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "penalty_df": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "penalty_fvv": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "solve_system": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": [
        "\"%-25s %-5zu %-4zu %-5zu %-6zu %-4zu %-10.4e %-10.4e %-7.2f %-11.4e %.2f\\n\""
      ]
    },
    "main": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": [
        "\"%-25s %-4s %-4s %-5s %-6s %-4s %-10s %-10s %-7s %-11s %-10s\\n\"",
        "\"Method\"",
        "\"NITER\"",
        "\"NFEV\"",
        "\"NJUEV\"",
        "\"NJTJEV\"",
        "\"NAEV\"",
        "\"Init Cost\"",
        "\"Final cost\"",
        "\"cond(J)\"",
        "\"Final |x|^2\"",
        "\"Time (s)\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/nmsimplex.c": {
    "main": {
      "start_point": [
        0,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"converged to minimum at\\n\"",
        "\"%5d %10.3e %10.3e f() = %7.3f size = %.3f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/ntupler.c": {
    "main": {
      "start_point": [
        14,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": [
        "\"test.dat\"",
        "\"%f\"",
        "\"%f\""
      ]
    },
    "sel_func": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "val_func": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/doc/examples/ntuplew.c": {
    "main": {
      "start_point": [
        11,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": [
        "\"test.dat\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/ode-initval-low-level.c": {
    "main": {
      "start_point": [
        0,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": [
        "\"%.5e %.5e %.5e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/ode-initval.c": {
    "func": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": []
    },
    "jac": {
      "start_point": [
        16,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"error, return value=%d\\n\"",
        "\"%.5e %.5e %.5e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/odefixed.c": {
    "main": {
      "start_point": [
        0,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": [
        "\"error: driver returned %d\\n\"",
        "\"%.5e %.5e %.5e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/permseq.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        20,
        1
      ],
      "strings": [
        "\" %u\"",
        "\"\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/permshuffle.c": {
    "main": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": [
        "\"initial permutation:\"",
        "\" %u\"",
        "\"\\n\"",
        "\" random permutation:\"",
        "\" %u\"",
        "\"\\n\"",
        "\"inverse permutation:\"",
        "\" %u\"",
        "\"\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/poisson.c": {
    "main": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"iter %zu residual = %.12e\\n\"",
        "\"Converged\\n\"",
        "\"%f %.12e %.12e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/polyroots.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"z%d = %+.18f %+.18f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/qrng.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        18,
        1
      ],
      "strings": [
        "\"%.5f %.5f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/randpoisson.c": {
    "main": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": [
        "\" %u\"",
        "\"\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/randwalk.c": {
    "main": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        28,
        1
      ],
      "strings": [
        "\"%g %g\\n\"",
        "\"%g %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/rng.c": {
    "main": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        21,
        1
      ],
      "strings": [
        "\"generator type: %s\\n\"",
        "\"seed = %lu\\n\"",
        "\"first value = %lu\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/rngunif.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%.5f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/robfit.c": {
    "dofit": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        17,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": [
        "\"usage: robfit n\\n\"",
        "\"%g %g %g %g\\n\"",
        "\"# best fit: Y = %g + %g X\\n\"",
        "\"# covariance matrix:\\n\"",
        "\"# [ %+.5e, %+.5e\\n\"",
        "\"#   %+.5e, %+.5e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/rootnewt.c": {
    "main": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": [
        "\"using %s method\\n\"",
        "\"%-5s %10s %10s %10s\\n\"",
        "\"iter\"",
        "\"root\"",
        "\"err\"",
        "\"err(est)\"",
        "\"Converged:\\n\"",
        "\"%5d %10.7f %+10.7f %10.7f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/roots.c": {
    "main": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"using %s method\\n\"",
        "\"%5s [%9s, %9s] %9s %10s %9s\\n\"",
        "\"iter\"",
        "\"lower\"",
        "\"upper\"",
        "\"root\"",
        "\"err\"",
        "\"err(est)\"",
        "\"Converged:\\n\"",
        "\"%5d [%.7f, %.7f] %.7f %+.7f %.7f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/rquantile.c": {
    "main": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"The dataset is %g, %g, %g, %g, %g, ...\\n\"",
        "\"0.25 quartile: exact = %.5f, estimated = %.5f, error = %.6e\\n\"",
        "\"0.50 quartile: exact = %.5f, estimated = %.5f, error = %.6e\\n\"",
        "\"0.75 quartile: exact = %.5f, estimated = %.5f, error = %.6e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/rstat.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"The dataset is %g, %g, %g, %g, %g\\n\"",
        "\"The sample mean is %g\\n\"",
        "\"The estimated variance is %g\\n\"",
        "\"The largest value is %g\\n\"",
        "\"The smallest value is %g\\n\"",
        "\"The median is %g\\n\"",
        "\"The standard deviation is %g\\n\"",
        "\"The root mean square is %g\\n\"",
        "\"The standard devation of the mean is %g\\n\"",
        "\"The skew is %g\\n\"",
        "\"The kurtosis %g\\n\"",
        "\"There are %zu items in the accumulator\\n\"",
        "\"There are %zu items in the accumulator\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/siman.c": {
    "E1": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "M1": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "S1": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "P1": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"%12g\""
      ]
    },
    "main": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/doc/examples/siman_tsp.c": {
    "city_distance": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "Etsp": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "Mtsp": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "Stsp": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "Ptsp": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": [
        "\"  [\"",
        "\" %d \"",
        "\"]  \""
      ]
    },
    "main": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": [
        "\"# initial order of cities:\\n\"",
        "\"# \\\"%s\\\"\\n\"",
        "\"# distance matrix is:\\n\"",
        "\"# initial coordinates of cities (longitude and latitude)\\n\"",
        "\"###initial_city_coord: %g %g \\\"%s\\\"\\n\"",
        "\"# final order of cities:\\n\"",
        "\"# \\\"%s\\\"\\n\"",
        "\"# final coordinates of cities (longitude and latitude)\\n\"",
        "\"###final_city_coord: %g %g %s\\n\"",
        "\"# \"",
        "\"date\""
      ]
    },
    "prepare_distance_matrix": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "print_distance_matrix": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": [
        "\"# \"",
        "\"%15.8f   \"",
        "\"\\n\""
      ]
    },
    "exhaustive_search": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": [
        "\"\\n# \"",
        "\"date\"",
        "\"\\n# \"",
        "\"date\"",
        "\"# exhaustive best route: \"",
        "\"\\n# its energy is: %g\\n\"",
        "\"# exhaustive second_best route: \"",
        "\"\\n# its energy is: %g\\n\"",
        "\"# exhaustive third_best route: \"",
        "\"\\n# its energy is: %g\\n\""
      ]
    },
    "do_all_perms": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        328,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/doc/examples/sortsmall.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": [
        "\"%zu smallest values from %zu\\n\"",
        "\"%zu: %.18f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/specfun.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"J0(5.0) = %.18f\\n\"",
        "\"exact   = %.18f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/specfun_e.c": {
    "main": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        20,
        1
      ],
      "strings": [
        "\"status  = %s\\n\"",
        "\"J0(5.0) = %.18f\\n\"",
        "\"      +/- % .18f\\n\"",
        "\"exact   = %.18f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/spmatrix.c": {
    "main": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": [
        "\"printing all matrix elements:\\n\"",
        "\"A(%zu,%zu) = %g\\n\"",
        "\"matrix in triplet format (i,j,Aij):\\n\"",
        "\"%.1f\"",
        "\"matrix in compressed column format:\\n\"",
        "\"i = [ \"",
        "\"%zu, \"",
        "\"]\\n\"",
        "\"p = [ \"",
        "\"%zu, \"",
        "\"]\\n\"",
        "\"d = [ \"",
        "\"%g, \"",
        "\"]\\n\"",
        "\"matrix in compressed row format:\\n\"",
        "\"i = [ \"",
        "\"%zu, \"",
        "\"]\\n\"",
        "\"p = [ \"",
        "\"%zu, \"",
        "\"]\\n\"",
        "\"d = [ \"",
        "\"%g, \"",
        "\"]\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/stat.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": [
        "\"The dataset is %g, %g, %g, %g, %g\\n\"",
        "\"The sample mean is %g\\n\"",
        "\"The estimated variance is %g\\n\"",
        "\"The largest value is %g\\n\"",
        "\"The smallest value is %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/statsort.c": {
    "main": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": [
        "\"Original dataset:  %g, %g, %g, %g, %g\\n\"",
        "\"Sorted dataset: %g, %g, %g, %g, %g\\n\"",
        "\"The median is %g\\n\"",
        "\"The upper quartile is %g\\n\"",
        "\"The lower quartile is %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/sum.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"term-by-term sum = % .16f using %d terms\\n\"",
        "\"term-by-term sum = % .16f using %zu terms\\n\"",
        "\"exact value      = % .16f\\n\"",
        "\"accelerated sum  = % .16f using %zu terms\\n\"",
        "\"estimated error  = % .16f\\n\"",
        "\"actual error     = % .16f\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/vector.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        21,
        1
      ],
      "strings": [
        "\"v_%d = %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/vectorr.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": [
        "\"test.dat\"",
        "\"r\"",
        "\"%g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/vectorview.c": {
    "main": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": [
        "\"matrix column %zu, norm = %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/doc/examples/vectorw.c": {
    "main": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": [
        "\"test.dat\"",
        "\"w\"",
        "\"%.5g\""
      ]
    }
  },
  "gsl/gsl-2.5/eigen/francis.c": {
    "gsl_eigen_francis_alloc": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"failed to allocate space for workspace\""
      ]
    },
    "gsl_eigen_francis_free": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "gsl_eigen_francis_T": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "gsl_eigen_francis": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"maximum iterations reached without finding all eigenvalues\""
      ]
    },
    "gsl_eigen_francis_Z": {
      "start_point": [
        258,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": []
    },
    "francis_schur_decomp": {
      "start_point": [
        289,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": []
    },
    "francis_qrstep": {
      "start_point": [
        446,
        0
      ],
      "end_point": [
        675,
        1
      ],
      "strings": []
    },
    "francis_search_subdiag_small_elements": {
      "start_point": [
        692,
        0
      ],
      "end_point": [
        715,
        1
      ],
      "strings": []
    },
    "francis_schur_standardize": {
      "start_point": [
        728,
        0
      ],
      "end_point": [
        855,
        1
      ],
      "strings": []
    },
    "francis_get_submatrix": {
      "start_point": [
        863,
        0
      ],
      "end_point": [
        877,
        1
      ],
      "strings": []
    },
    "francis_standard_form": {
      "start_point": [
        900,
        0
      ],
      "end_point": [
        1047,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/eigen/gen.c": {
    "gsl_eigen_gen_alloc": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for additional workspace\""
      ]
    },
    "gsl_eigen_gen_free": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    },
    "gsl_eigen_gen_params": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "gsl_eigen_gen": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"B matrix dimensions must match A\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"matrix size does not match workspace\""
      ]
    },
    "gsl_eigen_gen_QZ": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        324,
        1
      ],
      "strings": [
        "\"Q matrix has wrong dimensions\"",
        "\"Z matrix has wrong dimensions\""
      ]
    },
    "gen_schur_decomp": {
      "start_point": [
        347,
        0
      ],
      "end_point": [
        568,
        1
      ],
      "strings": []
    },
    "gen_qzstep": {
      "start_point": [
        595,
        0
      ],
      "end_point": [
        803,
        1
      ],
      "strings": []
    },
    "gen_qzstep_d": {
      "start_point": [
        816,
        0
      ],
      "end_point": [
        1214,
        1
      ],
      "strings": []
    },
    "gen_tri_split_top": {
      "start_point": [
        1226,
        0
      ],
      "end_point": [
        1278,
        1
      ],
      "strings": []
    },
    "gen_tri_chase_zero": {
      "start_point": [
        1292,
        0
      ],
      "end_point": [
        1388,
        1
      ],
      "strings": []
    },
    "gen_tri_zero_H": {
      "start_point": [
        1397,
        0
      ],
      "end_point": [
        1449,
        1
      ],
      "strings": []
    },
    "gen_search_small_elements": {
      "start_point": [
        1486,
        0
      ],
      "end_point": [
        1533,
        1
      ],
      "strings": []
    },
    "gen_schur_standardize1": {
      "start_point": [
        1551,
        0
      ],
      "end_point": [
        1594,
        1
      ],
      "strings": []
    },
    "gen_schur_standardize2": {
      "start_point": [
        1622,
        0
      ],
      "end_point": [
        1814,
        1
      ],
      "strings": []
    },
    "gen_compute_eigenvals": {
      "start_point": [
        1825,
        0
      ],
      "end_point": [
        1972,
        1
      ],
      "strings": []
    },
    "gen_store_eigval1": {
      "start_point": [
        1982,
        0
      ],
      "end_point": [
        1998,
        1
      ],
      "strings": []
    },
    "gen_store_eigval2": {
      "start_point": [
        2008,
        0
      ],
      "end_point": [
        2025,
        1
      ],
      "strings": []
    },
    "gen_get_submatrix": {
      "start_point": [
        2033,
        0
      ],
      "end_point": [
        2050,
        1
      ],
      "strings": []
    },
    "normF": {
      "start_point": [
        2053,
        0
      ],
      "end_point": [
        2086,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/eigen/genherm.c": {
    "gsl_eigen_genherm_alloc": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for herm workspace\""
      ]
    },
    "gsl_eigen_genherm_free": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "gsl_eigen_genherm": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"B matrix dimensions must match A\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"matrix size does not match workspace\""
      ]
    },
    "gsl_eigen_genherm_standardize": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/eigen/genhermv.c": {
    "gsl_eigen_genhermv_alloc": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for hermv workspace\""
      ]
    },
    "gsl_eigen_genhermv_free": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "gsl_eigen_genhermv": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"B matrix dimensions must match A\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"eigenvector matrix must be square\"",
        "\"eigenvector matrix has wrong size\"",
        "\"matrix size does not match workspace\""
      ]
    },
    "genhermv_normalize_eigenvectors": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/eigen/gensymm.c": {
    "gsl_eigen_gensymm_alloc": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for symm workspace\""
      ]
    },
    "gsl_eigen_gensymm_free": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "gsl_eigen_gensymm": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"B matrix dimensions must match A\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"matrix size does not match workspace\""
      ]
    },
    "gsl_eigen_gensymm_standardize": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        212,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/eigen/gensymmv.c": {
    "gsl_eigen_gensymmv_alloc": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for symmv workspace\""
      ]
    },
    "gsl_eigen_gensymmv_free": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "gsl_eigen_gensymmv": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"B matrix dimensions must match A\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"eigenvector matrix must be square\"",
        "\"eigenvector matrix has wrong size\"",
        "\"matrix size does not match workspace\""
      ]
    },
    "gensymmv_normalize_eigenvectors": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/eigen/genv.c": {
    "gsl_eigen_genv_alloc": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for gen workspace\"",
        "\"failed to allocate space for additional workspace\""
      ]
    },
    "gsl_eigen_genv_free": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    },
    "gsl_eigen_genv": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"B matrix dimensions must match A\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"matrix size does not match workspace\"",
        "\"eigenvector matrix has wrong size\""
      ]
    },
    "gsl_eigen_genv_QZ": {
      "start_point": [
        258,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": [
        "\"Q matrix has wrong dimensions\"",
        "\"Z matrix has wrong dimensions\""
      ]
    },
    "genv_get_right_eigenvectors": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        879,
        1
      ],
      "strings": [
        "\"gsl_schur_gen_eigvals failed on complex block\""
      ]
    },
    "genv_normalize_eigenvectors": {
      "start_point": [
        889,
        0
      ],
      "end_point": [
        924,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/eigen/gsl_eigen.h": {
    "typedef": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/eigen/herm.c": {
    "gsl_eigen_herm_alloc": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for diagonal\"",
        "\"failed to allocate space for subdiagonal\"",
        "\"failed to allocate space for tau\""
      ]
    },
    "gsl_eigen_herm_free": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "gsl_eigen_herm": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"eigenvalue vector must match matrix size\""
      ]
    }
  },
  "gsl/gsl-2.5/eigen/hermv.c": {
    "gsl_eigen_hermv_alloc": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for diagonal\"",
        "\"failed to allocate space for subdiagonal\"",
        "\"failed to allocate space for tau\"",
        "\"failed to allocate space for cosines\"",
        "\"failed to allocate space for sines\""
      ]
    },
    "gsl_eigen_hermv_free": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "gsl_eigen_hermv": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"eigenvector matrix must match matrix size\""
      ]
    }
  },
  "gsl/gsl-2.5/eigen/jacobi.c": {
    "symschur2": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "apply_jacobi_L": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "apply_jacobi_R": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "norm": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    },
    "gsl_eigen_jacobi": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": [
        "\"eigenproblem requires square matrix\"",
        "\"eigenvector matrix must match input matrix\"",
        "\"eigenvalue vector must match input matrix\""
      ]
    },
    "gsl_eigen_invert_jacobi": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": [
        "\"jacobi method requires square matrix\"",
        "\"inverse matrix must match input matrix\""
      ]
    }
  },
  "gsl/gsl-2.5/eigen/nonsymm.c": {
    "gsl_eigen_nonsymm_alloc": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for balancing vector\"",
        "\"failed to allocate space for hessenberg coefficients\"",
        "\"failed to allocate space for francis workspace\""
      ]
    },
    "gsl_eigen_nonsymm_free": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "gsl_eigen_nonsymm_params": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    },
    "gsl_eigen_nonsymm": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"eigenvalue vector must match matrix size\""
      ]
    },
    "gsl_eigen_nonsymm_Z": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        292,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"Z matrix has wrong dimensions\""
      ]
    }
  },
  "gsl/gsl-2.5/eigen/nonsymmv.c": {
    "gsl_eigen_nonsymmv_alloc": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for nonsymm workspace\"",
        "\"failed to allocate space for nonsymmv additional workspace\""
      ]
    },
    "gsl_eigen_nonsymmv_free": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "gsl_eigen_nonsymmv_params": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "gsl_eigen_nonsymmv": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"eigenvector matrix must be square\"",
        "\"eigenvector matrix has wrong size\""
      ]
    },
    "gsl_eigen_nonsymmv_Z": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        291,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues/eigenvectors\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"eigenvector matrix must be square\"",
        "\"eigenvector matrix has wrong size\"",
        "\"Z matrix has wrong dimensions\""
      ]
    },
    "nonsymmv_get_right_eigenvectors": {
      "start_point": [
        329,
        0
      ],
      "end_point": [
        940,
        1
      ],
      "strings": []
    },
    "nonsymmv_normalize_eigenvectors": {
      "start_point": [
        950,
        0
      ],
      "end_point": [
        985,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/eigen/qrstep.c": {
    "chop_small_elements": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "create_givens": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "trailing_eigenvalue": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "qrstep": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/eigen/schur.c": {
    "gsl_schur_gen_eigvals": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": []
    },
    "gsl_schur_solve_equation": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        498,
        1
      ],
      "strings": []
    },
    "gsl_schur_solve_equation_z": {
      "start_point": [
        533,
        0
      ],
      "end_point": [
        797,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/eigen/sort.c": {
    "complex_less": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "gsl_eigen_symmv_sort": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"eigenvector matrix must be square\"",
        "\"eigenvalues must match eigenvector matrix\"",
        "\"unrecognized sort type\""
      ]
    },
    "gsl_eigen_hermv_sort": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": [
        "\"eigenvector matrix must be square\"",
        "\"eigenvalues must match eigenvector matrix\"",
        "\"unrecognized sort type\""
      ]
    },
    "gsl_eigen_nonsymmv_sort": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": [
        "\"eigenvector matrix must be square\"",
        "\"eigenvalues must match eigenvector matrix\"",
        "\"invalid sort type\""
      ]
    },
    "gsl_eigen_gensymmv_sort": {
      "start_point": [
        250,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "gsl_eigen_genhermv_sort": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    },
    "gsl_eigen_genv_sort": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        358,
        1
      ],
      "strings": [
        "\"eigenvector matrix must be square\"",
        "\"eigenvalues must match eigenvector matrix\"",
        "\"invalid sort type\""
      ]
    }
  },
  "gsl/gsl-2.5/eigen/symm.c": {
    "gsl_eigen_symm_alloc": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for diagonal\"",
        "\"failed to allocate space for subdiagonal\""
      ]
    },
    "gsl_eigen_symm_free": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "gsl_eigen_symm": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"matrix does not match workspace\""
      ]
    }
  },
  "gsl/gsl-2.5/eigen/symmv.c": {
    "gsl_eigen_symmv_alloc": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for diagonal\"",
        "\"failed to allocate space for subdiagonal\"",
        "\"failed to allocate space for cosines\"",
        "\"failed to allocate space for sines\""
      ]
    },
    "gsl_eigen_symmv_free": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "gsl_eigen_symmv": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": [
        "\"matrix must be square to compute eigenvalues\"",
        "\"eigenvalue vector must match matrix size\"",
        "\"eigenvector matrix must match matrix size\""
      ]
    }
  },
  "gsl/gsl-2.5/eigen/test.c": {
    "chop_subnormals": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "create_random_symm_matrix": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "create_random_herm_matrix": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "create_random_posdef_matrix": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "create_random_complex_posdef_matrix": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "create_random_nonsymm_matrix": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    },
    "test_eigen_schur": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": [
        "\"%s(N=%u,cnt=%u), %s, schur(%d,%d)\""
      ]
    },
    "test_eigen_orthog": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": [
        "\"%s(N=%u,cnt=%u), %s, orthog(%d,%d)\""
      ]
    },
    "test_eigenvalues_real": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": [
        "\"%s, direct eigenvalue(%d), %s\""
      ]
    },
    "test_eigenvalues_complex": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": [
        "\"%s, direct eigenvalue(%d) real, %s\"",
        "\"%s, direct eigenvalue(%d) imag, %s\""
      ]
    },
    "test_eigen_symm_results": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        351,
        1
      ],
      "strings": [
        "\"%s, eigenvalue(%d,%d), %s\"",
        "\"%s, normalized(%d), %s\"",
        "\"%s, orthogonal(%d,%d), %s\""
      ]
    },
    "test_eigen_symm_matrix": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        403,
        1
      ],
      "strings": [
        "\"unsorted\"",
        "\"unsorted\"",
        "\"val/asc\"",
        "\"val/desc\"",
        "\"abs/asc\"",
        "\"abs/desc\""
      ]
    },
    "test_eigen_symm": {
      "start_point": [
        405,
        0
      ],
      "end_point": [
        481,
        1
      ],
      "strings": [
        "\"symm random\"",
        "\"symm(4)\"",
        "\"symm(4) diag\"",
        "\"symm(27)\""
      ]
    },
    "test_eigen_herm_results": {
      "start_point": [
        487,
        0
      ],
      "end_point": [
        549,
        1
      ],
      "strings": [
        "\"%s, eigenvalue(%d,%d), real, %s\"",
        "\"%s, eigenvalue(%d,%d), imag, %s\"",
        "\"%s, normalized(%d), %s\"",
        "\"%s, orthogonal(%d,%d), %s\""
      ]
    },
    "test_eigen_herm_matrix": {
      "start_point": [
        551,
        0
      ],
      "end_point": [
        601,
        1
      ],
      "strings": [
        "\"unsorted\"",
        "\"unsorted\"",
        "\"val/asc\"",
        "\"val/desc\"",
        "\"abs/asc\"",
        "\"abs/desc\""
      ]
    },
    "test_eigen_herm": {
      "start_point": [
        603,
        0
      ],
      "end_point": [
        642,
        1
      ],
      "strings": [
        "\"herm random\"",
        "\"herm(4)\"",
        "\"herm(4) diag\""
      ]
    },
    "test_eigen_nonsymm_results": {
      "start_point": [
        648,
        0
      ],
      "end_point": [
        710,
        1
      ],
      "strings": [
        "\"nonsymm(N=%u,cnt=%u), %s, normalized(%d), %s\"",
        "\"nonsymm(N=%u,cnt=%u), %s, eigenvalue(%d,%d), real, %s\"",
        "\"nonsymm(N=%u,cnt=%u), %s, eigenvalue(%d,%d), imag, %s\""
      ]
    },
    "test_eigen_nonsymm_matrix": {
      "start_point": [
        712,
        0
      ],
      "end_point": [
        753,
        1
      ],
      "strings": [
        "\"unsorted\"",
        "\"abs/asc\"",
        "\"abs/desc\"",
        "\"nonsymm\"",
        "\"nonsymm\""
      ]
    },
    "test_eigen_nonsymm": {
      "start_point": [
        755,
        0
      ],
      "end_point": [
        804,
        1
      ],
      "strings": [
        "\"random, unbalanced\"",
        "\"random, balanced\"",
        "\"integer\"",
        "\"integer\""
      ]
    },
    "test_eigen_gensymm_results": {
      "start_point": [
        810,
        0
      ],
      "end_point": [
        863,
        1
      ],
      "strings": [
        "\"gensymm(N=%u,cnt=%u), %s, normalized(%d), %s\"",
        "\"gensymm(N=%u,cnt=%u), %s, eigenvalue(%d,%d), real, %s\""
      ]
    },
    "test_eigen_gensymm": {
      "start_point": [
        865,
        0
      ],
      "end_point": [
        935,
        1
      ],
      "strings": [
        "\"random\"",
        "\"unsorted\"",
        "\"gensymm, random\"",
        "\"unsorted\"",
        "\"random\"",
        "\"val/asc\"",
        "\"random\"",
        "\"val/desc\"",
        "\"random\"",
        "\"abs/asc\"",
        "\"random\"",
        "\"abs/desc\""
      ]
    },
    "test_eigen_genherm_results": {
      "start_point": [
        941,
        0
      ],
      "end_point": [
        993,
        1
      ],
      "strings": [
        "\"genherm(N=%u,cnt=%u), %s, normalized(%d), %s\"",
        "\"genherm(N=%u,cnt=%u), %s, eigenvalue(%d,%d), real, %s\"",
        "\"genherm(N=%u,cnt=%u), %s, eigenvalue(%d,%d), imag, %s\""
      ]
    },
    "test_eigen_genherm": {
      "start_point": [
        995,
        0
      ],
      "end_point": [
        1067,
        1
      ],
      "strings": [
        "\"random\"",
        "\"unsorted\"",
        "\"genherm, random\"",
        "\"unsorted\"",
        "\"random\"",
        "\"val/asc\"",
        "\"random\"",
        "\"val/desc\"",
        "\"random\"",
        "\"abs/asc\"",
        "\"random\"",
        "\"abs/desc\""
      ]
    },
    "test_eigen_gen_alloc": {
      "start_point": [
        1092,
        0
      ],
      "end_point": [
        1116,
        1
      ],
      "strings": []
    },
    "test_eigen_gen_free": {
      "start_point": [
        1118,
        0
      ],
      "end_point": [
        1137,
        1
      ],
      "strings": []
    },
    "test_eigen_gen_results": {
      "start_point": [
        1139,
        0
      ],
      "end_point": [
        1211,
        1
      ],
      "strings": [
        "\"gen(N=%u,cnt=%u), %s, eigenvalue(%d,%d), real, %s\"",
        "\"gen(N=%u,cnt=%u), %s, eigenvalue(%d,%d), real, %s\""
      ]
    },
    "test_eigen_gen_pencil": {
      "start_point": [
        1213,
        0
      ],
      "end_point": [
        1277,
        1
      ],
      "strings": [
        "\"genv/A\"",
        "\"genv/B\"",
        "\"unsorted\"",
        "\"gen/A\"",
        "\"gen/B\"",
        "\"gen\"",
        "\"abs/asc\"",
        "\"abs/desc\""
      ]
    },
    "test_eigen_gen": {
      "start_point": [
        1279,
        0
      ],
      "end_point": [
        1325,
        1
      ],
      "strings": [
        "\"random\"",
        "\"random\"",
        "\"integer\"",
        "\"integer\""
      ]
    },
    "main": {
      "start_point": [
        1327,
        0
      ],
      "end_point": [
        1341,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/err/error.c": {
    "gsl_error": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": [
        "\"ERROR\"",
        "\"Default GSL error handler invoked.\\n\""
      ]
    },
    "gsl_set_error_handler": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "gsl_set_error_handler_off": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "no_error_handler": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/err/gsl_errno.h": {},
  "gsl/gsl-2.5/err/gsl_message.h": {},
  "gsl/gsl-2.5/err/message.c": {
    "gsl_message": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": [
        "\"MESSAGE\""
      ]
    }
  },
  "gsl/gsl-2.5/err/stream.c": {
    "gsl_stream_printf": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": [
        "\"gsl: %s:%d: %s: %s\\n\""
      ]
    },
    "gsl_set_stream_handler": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "gsl_set_stream": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/err/strerror.c": {
    "gsl_strerror": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"success\"",
        "\"failure\"",
        "\"the iteration has not converged yet\"",
        "\"input domain error\"",
        "\"output range error\"",
        "\"invalid pointer\"",
        "\"invalid argument supplied by user\"",
        "\"generic failure\"",
        "\"factorization failed\"",
        "\"sanity check failed - shouldn't happen\"",
        "\"malloc failed\"",
        "\"problem with user-supplied function\"",
        "\"iterative process is out of control\"",
        "\"exceeded max number of iterations\"",
        "\"tried to divide by zero\"",
        "\"specified tolerance is invalid or theoretically unattainable\"",
        "\"failed to reach the specified tolerance\"",
        "\"underflow\"",
        "\"overflow\"",
        "\"loss of accuracy\"",
        "\"roundoff error\"",
        "\"matrix/vector sizes are not conformant\"",
        "\"matrix not square\"",
        "\"singularity or extremely bad function behavior detected\"",
        "\"integral or series is divergent\"",
        "\"the required feature is not supported by this hardware platform\"",
        "\"the requested feature is not (yet) implemented\"",
        "\"cache limit exceeded\"",
        "\"table limit exceeded\"",
        "\"iteration is not making progress towards solution\"",
        "\"jacobian evaluations are not improving the solution\"",
        "\"cannot reach the specified tolerance in F\"",
        "\"cannot reach the specified tolerance in X\"",
        "\"cannot reach the specified tolerance in gradient\"",
        "\"end of file\"",
        "\"unknown error code\""
      ]
    }
  },
  "gsl/gsl-2.5/err/test.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": [
        "\"%s = %d\\n\"",
        "\"%s is distinct from other error values\"",
        "\"%s has a distinct error message\""
      ]
    }
  },
  "gsl/gsl-2.5/fft/bitreverse.c": {
    "FUNCTION": [
      {
        "start_point": [
          25,
          0
        ],
        "end_point": [
          62,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          65,
          0
        ],
        "end_point": [
          99,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/fft/bitreverse.h": {},
  "gsl/gsl-2.5/fft/compare.h": {},
  "gsl/gsl-2.5/fft/compare_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          21,
          0
        ],
        "end_point": [
          72,
          1
        ],
        "strings": [
          "\"\\n%s vs %s : max_ticks = %f\\n\"",
          "\"***\"",
          "\"\"",
          "\"%15s: %d  %.16f %.16f %s\\n\"",
          "\"%15s: %d  %.16f %.16f %e %s\\n\""
        ]
      },
      {
        "start_point": [
          75,
          0
        ],
        "end_point": [
          124,
          1
        ],
        "strings": [
          "\"\\n%s vs %s : max_ticks = %f\\n\"",
          "\"***\"",
          "\"\"",
          "\"%15s: %d  %.16f %s\\n\"",
          "\"%15s: %d  %.16f %e %s\\n\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/fft/complex_internal.h": {},
  "gsl/gsl-2.5/fft/c_init.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          112,
          1
        ],
        "strings": [
          "\"length n must be positive integer\"",
          "\"failed to allocate struct\"",
          "\"failed to allocate trigonometric lookup table\"",
          "\"factorization failed\"",
          "\"overflowed trigonometric lookup table\""
        ]
      },
      {
        "start_point": [
          115,
          0
        ],
        "end_point": [
          145,
          1
        ],
        "strings": [
          "\"length n must be positive integer\"",
          "\"failed to allocate struct\"",
          "\"failed to allocate scratch space\""
        ]
      },
      {
        "start_point": [
          148,
          0
        ],
        "end_point": [
          158,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          160,
          0
        ],
        "end_point": [
          169,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          172,
          0
        ],
        "end_point": [
          194,
          1
        ],
        "strings": [
          "\"length of src and dest do not match\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/fft/c_main.c": {
    "FUNCTION": [
      {
        "start_point": [
          21,
          0
        ],
        "end_point": [
          32,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          34,
          0
        ],
        "end_point": [
          45,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          47,
          0
        ],
        "end_point": [
          75,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          77,
          0
        ],
        "end_point": [
          222,
          1
        ],
        "strings": [
          "\"length n must be positive integer\"",
          "\"wavetable does not match length of data\"",
          "\"workspace does not match length of data\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/fft/c_pass.h": {},
  "gsl/gsl-2.5/fft/c_pass_2.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/c_pass_3.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/c_pass_4.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/c_pass_5.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/c_pass_6.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/c_pass_7.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        311,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/c_pass_n.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/c_radix2.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          26,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          28,
          0
        ],
        "end_point": [
          35,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          37,
          0
        ],
        "end_point": [
          62,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          66,
          0
        ],
        "end_point": [
          172,
          1
        ],
        "strings": [
          "\"n is not a power of 2\""
        ]
      },
      {
        "start_point": [
          175,
          0
        ],
        "end_point": [
          183,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          185,
          0
        ],
        "end_point": [
          193,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          195,
          0
        ],
        "end_point": [
          221,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          223,
          0
        ],
        "end_point": [
          307,
          1
        ],
        "strings": [
          "\"n is not a power of 2\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/fft/dft.c": {},
  "gsl/gsl-2.5/fft/dft_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          27,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          29,
          0
        ],
        "end_point": [
          37,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          40,
          0
        ],
        "end_point": [
          60,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          62,
          0
        ],
        "end_point": [
          103,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/fft/factorize.c": {
    "fft_complex_factorize": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    },
    "fft_halfcomplex_factorize": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "fft_real_factorize": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "fft_factorize": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"length n must be positive integer\"",
        "\"factorization failed\""
      ]
    },
    "fft_binary_logn": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/factorize.h": {},
  "gsl/gsl-2.5/fft/fft.c": {},
  "gsl/gsl-2.5/fft/gsl_dft_complex.h": {},
  "gsl/gsl-2.5/fft/gsl_dft_complex_float.h": {},
  "gsl/gsl-2.5/fft/gsl_fft.h": {},
  "gsl/gsl-2.5/fft/gsl_fft_complex.h": {},
  "gsl/gsl-2.5/fft/gsl_fft_complex_float.h": {},
  "gsl/gsl-2.5/fft/gsl_fft_halfcomplex.h": {},
  "gsl/gsl-2.5/fft/gsl_fft_halfcomplex_float.h": {},
  "gsl/gsl-2.5/fft/gsl_fft_real.h": {},
  "gsl/gsl-2.5/fft/gsl_fft_real_float.h": {},
  "gsl/gsl-2.5/fft/hc_init.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          113,
          1
        ],
        "strings": [
          "\"length n must be positive integer\"",
          "\"failed to allocate struct\"",
          "\"failed to allocate trigonometric lookup table\"",
          "\"factorization failed\"",
          "\"overflowed trigonometric lookup table\""
        ]
      },
      {
        "start_point": [
          116,
          0
        ],
        "end_point": [
          126,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/fft/hc_main.c": {
    "FUNCTION": [
      {
        "start_point": [
          29,
          0
        ],
        "end_point": [
          37,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          39,
          0
        ],
        "end_point": [
          63,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          65,
          0
        ],
        "end_point": [
          185,
          1
        ],
        "strings": [
          "\"length n must be positive integer\"",
          "\"wavetable does not match length of data\"",
          "\"workspace does not match length of data\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/fft/hc_pass.h": {},
  "gsl/gsl-2.5/fft/hc_pass_2.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/hc_pass_3.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/hc_pass_4.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/hc_pass_5.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/hc_pass_n.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/hc_radix2.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          26,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          28,
          0
        ],
        "end_point": [
          51,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          53,
          0
        ],
        "end_point": [
          172,
          1
        ],
        "strings": [
          "\"n is not a power of 2\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/fft/hc_unpack.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          52,
          1
        ],
        "strings": [
          "\"length n must be positive integer\""
        ]
      },
      {
        "start_point": [
          55,
          0
        ],
        "end_point": [
          88,
          1
        ],
        "strings": [
          "\"length n must be positive integer\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/fft/real_init.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          122,
          1
        ],
        "strings": [
          "\"length n must be positive integer\"",
          "\"failed to allocate struct\"",
          "\"failed to allocate trigonometric lookup table\"",
          "\"factorization failed\"",
          "\"overflowed trigonometric lookup table\""
        ]
      },
      {
        "start_point": [
          124,
          0
        ],
        "end_point": [
          156,
          1
        ],
        "strings": [
          "\"length n must be positive integer\"",
          "\"failed to allocate struct\"",
          "\"failed to allocate scratch space\""
        ]
      },
      {
        "start_point": [
          160,
          0
        ],
        "end_point": [
          170,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          172,
          0
        ],
        "end_point": [
          182,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/fft/real_main.c": {
    "FUNCTION": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": [
        "\"length n must be positive integer\"",
        "\"wavetable does not match length of data\"",
        "\"workspace does not match length of data\""
      ]
    }
  },
  "gsl/gsl-2.5/fft/real_pass.h": {},
  "gsl/gsl-2.5/fft/real_pass_2.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/real_pass_3.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/real_pass_4.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/real_pass_5.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/real_pass_n.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fft/real_radix2.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"n is not a power of 2\""
      ]
    }
  },
  "gsl/gsl-2.5/fft/real_unpack.c": {
    "FUNCTION": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": [
        "\"length n must be positive integer\""
      ]
    }
  },
  "gsl/gsl-2.5/fft/signals.c": {},
  "gsl/gsl-2.5/fft/signals.h": {},
  "gsl/gsl-2.5/fft/signals_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          21,
          0
        ],
        "end_point": [
          61,
          1
        ],
        "strings": [
          "\"length n must be positive integer\""
        ]
      },
      {
        "start_point": [
          64,
          0
        ],
        "end_point": [
          100,
          1
        ],
        "strings": [
          "\"length n must be positive integer\""
        ]
      },
      {
        "start_point": [
          103,
          0
        ],
        "end_point": [
          156,
          1
        ],
        "strings": [
          "\"length n must be positive integer\""
        ]
      },
      {
        "start_point": [
          159,
          0
        ],
        "end_point": [
          232,
          1
        ],
        "strings": [
          "\"length n must be positive integer\""
        ]
      },
      {
        "start_point": [
          235,
          0
        ],
        "end_point": [
          259,
          1
        ],
        "strings": [
          "\"length n must be positive integer\""
        ]
      },
      {
        "start_point": [
          262,
          0
        ],
        "end_point": [
          286,
          1
        ],
        "strings": [
          "\"length n must be positive integer\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/fft/test.c": {
    "main": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "my_error_handler": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/fft/test_complex_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          29,
          0
        ],
        "end_point": [
          48,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          51,
          0
        ],
        "end_point": [
          229,
          1
        ],
        "strings": [
          "\"_alloc, n = %d, stride = %d\"",
          "\"_alloc, n = %d\"",
          "\"dft\"",
          "\"fft of noise\"",
          "\"_forward with signal_noise, n = %d, stride = %d\"",
          "\"_forward avoids unstrided data, n = %d, stride = %d\"",
          "\"orig\"",
          "\"fft inverse\"",
          "\"_inverse with signal_noise, n = %d, stride = %d\"",
          "\"_inverse other data untouched, n = %d, stride = %d\"",
          "\"orig\"",
          "\"fft backward\"",
          "\"_backward with signal_noise, n = %d, stride = %d\"",
          "\"_backward avoids unstrided data, n = %d, stride = %d\"",
          "\"analytic\"",
          "\"fft of pulse\"",
          "\"_forward with signal_pulse, n = %d, stride = %d\"",
          "\"analytic\"",
          "\"fft of constant\"",
          "\"_forward with signal_constant, n = %d, stride = %d\"",
          "\"analytic\"",
          "\"fft of exp\"",
          "\"_forward with signal_exp, n = %d, stride = %d\""
        ]
      },
      {
        "start_point": [
          232,
          0
        ],
        "end_point": [
          283,
          1
        ],
        "strings": [
          "\"naive bit reverse\"",
          "\"fft_complex_bitreverse_order\"",
          "\"fft_complex_bitreverse_order, n = %d\""
        ]
      },
      {
        "start_point": [
          285,
          0
        ],
        "end_point": [
          446,
          1
        ],
        "strings": [
          "\"dft\"",
          "\"fft of noise\"",
          "\"_radix2_forward with signal_noise, n = %d, stride = %d\"",
          "\"_radix2_forward avoids unstrided data, n = %d, stride = %d\"",
          "\"orig\"",
          "\"fft inverse\"",
          "\"_radix2_inverse with signal_noise, n = %d, stride = %d\"",
          "\"_radix2_inverse other data untouched, n = %d, stride = %d\"",
          "\"orig\"",
          "\"fft backward\"",
          "\"_radix2_backward with signal_noise, n = %d, stride = %d\"",
          "\"_radix2_backward avoids unstrided data, n = %d, stride = %d\"",
          "\"analytic\"",
          "\"fft of pulse\"",
          "\"_radix2_forward with signal_pulse, n = %d, stride = %d\"",
          "\"analytic\"",
          "\"fft of constant\"",
          "\"_radix2_forward with signal_constant, n = %d, stride = %d\"",
          "\"analytic\"",
          "\"fft of exp\"",
          "\"_radix2_forward with signal_exp, n = %d, stride = %d\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/fft/test_real_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          27,
          0
        ],
        "end_point": [
          112,
          1
        ],
        "strings": [
          "\"_alloc, n = %d, stride = %d\"",
          "\"_alloc, n = %d\"",
          "\"dft\"",
          "\"fft of noise\"",
          "\" with signal_real_noise, n = %d, stride = %d\"",
          "\"_alloc, n = %d, stride = %d\"",
          "\"orig\"",
          "\"fft inverse\"",
          "\" with data from signal_noise, n = %d, stride = %d\""
        ]
      },
      {
        "start_point": [
          115,
          0
        ],
        "end_point": [
          165,
          1
        ],
        "strings": [
          "\"naive bit reverse\"",
          "\"fft_complex_bitreverse_order\"",
          "\"_bitreverse_order, n = %d\""
        ]
      },
      {
        "start_point": [
          168,
          0
        ],
        "end_point": [
          234,
          1
        ],
        "strings": [
          "\"dft\"",
          "\"fft of noise\"",
          "\"_radix2 with signal_real_noise, n = %d, stride = %d\"",
          "\"orig\"",
          "\"fft inverse\"",
          "\"_radix2 with data from signal_noise, n = %d, stride = %d\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/fft/test_trap_source.c": {
    "FUNCTION": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"trap for n = 0 in \"",
        "\"_alloc\"",
        "\"trap for n = 0 in \"",
        "\"_alloc\"",
        "\"trap for n = 0 in \"",
        "\"_alloc\"",
        "\"trap for n = 0 in \"",
        "\"_alloc\"",
        "\"trap for n = 0 in \"",
        "\"_alloc\"",
        "\"trap for n = 0 in \"",
        "\"_forward\"",
        "\"trap for n = 0 in \"",
        "\"_transform\"",
        "\"trap for n = 0 in \"",
        "\"_transform\"",
        "\"trap for n = 0 in \"",
        "\"_radix2_forward\"",
        "\"trap for n = 0 in \"",
        "\"_backward\"",
        "\"trap for n = 0 in \"",
        "\"_radix2_backward\"",
        "\"trap for n = 0 in \"",
        "\"_inverse\"",
        "\"trap for n = 0 in \"",
        "\"_radix2_inverse\"",
        "\"trap for n != 2^k in \"",
        "\"_radix2_forward\"",
        "\"trap for n != 2^k in \"",
        "\"_radix2_backward\"",
        "\"trap for n != 2^k in \"",
        "\"_radix2_inverse\"",
        "\"trap for n != nw in \"",
        "\"_forward\"",
        "\"trap for n != nw in \"",
        "\"_backward\"",
        "\"trap for n != nw in \"",
        "\"_inverse\"",
        "\"trap for n != nw in \"",
        "\"_transform\"",
        "\"trap for n != nw in \"",
        "\"_transform\""
      ]
    }
  },
  "gsl/gsl-2.5/fft/urand.c": {
    "urand": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/filter/gaussian.c": {
    "gsl_filter_gaussian_alloc": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for kernel\"",
        "\"failed to allocate space for movstat workspace\""
      ]
    },
    "gsl_filter_gaussian_free": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "gsl_filter_gaussian": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": [
        "\"input and output vectors must have same length\"",
        "\"alpha must be positive\""
      ]
    },
    "gsl_filter_gaussian_kernel": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": [
        "\"alpha must be positive\"",
        "\"derivative order is too large\""
      ]
    },
    "gaussian_size": {
      "start_point": [
        270,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": []
    },
    "gaussian_init": {
      "start_point": [
        282,
        0
      ],
      "end_point": [
        295,
        1
      ],
      "strings": []
    },
    "gaussian_insert": {
      "start_point": [
        297,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": []
    },
    "gaussian_delete": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    },
    "gaussian_get": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/filter/gsl_filter.h": {},
  "gsl/gsl-2.5/filter/impulse.c": {
    "gsl_filter_impulse_alloc": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"failed to allocate space for workspace\""
      ]
    },
    "gsl_filter_impulse_free": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "gsl_filter_impulse": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"input and output vectors must have same length\"",
        "\"xmedian vector must match input size\"",
        "\"xsigma vector must match input size\"",
        "\"ioutlier vector must match input size\"",
        "\"t must be non-negative\"",
        "\"unknown scale type\""
      ]
    },
    "filter_impulse": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": [
        "\"input and output vectors must have same length\"",
        "\"xmedian vector must match input size\"",
        "\"xsigma vector must match input size\"",
        "\"ioutlier vector must match input size\"",
        "\"t must be non-negative\""
      ]
    }
  },
  "gsl/gsl-2.5/filter/median.c": {
    "gsl_filter_median_alloc": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for movstat workspace\""
      ]
    },
    "gsl_filter_median_free": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "gsl_filter_median": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/filter/ringbuf.c": {
    "ringbuf_size": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "ringbuf_init": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "ringbuf_empty": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "ringbuf_is_empty": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "ringbuf_is_full": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "ringbuf_insert": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    },
    "ringbuf_pop_back": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": [
        "\"buffer is empty\""
      ]
    },
    "ringbuf_peek": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": [
        "\"buffer is empty\""
      ]
    },
    "ringbuf_peek_front": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": [
        "\"buffer is empty\""
      ]
    },
    "ringbuf_peek_back": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\"buffer is empty\""
      ]
    },
    "ringbuf_copy": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/filter/rmedian.c": {
    "gsl_filter_rmedian_alloc": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for window\"",
        "\"failed to allocate space for min/max state\"",
        "\"failed to allocate space for movstat workspace\""
      ]
    },
    "gsl_filter_rmedian_free": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "gsl_filter_rmedian": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"input and output vectors must have same length\""
      ]
    },
    "rmedian_size": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "rmedian_init": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "rmedian_insert": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    },
    "rmedian_delete": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        191,
        1
      ],
      "strings": []
    },
    "rmedian_get": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/filter/test.c": {
    "compare_vectors": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": [
        "\"%s i=%zu\""
      ]
    },
    "random_vector": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/filter/test_gaussian.c": {
    "slow_gaussian": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "fdiff": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "test_gaussian_kernel": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": [
        "\"gaussian kernel order=%zu alpha=%g K=%zu\""
      ]
    },
    "test_gaussian_proc": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": [
        "\"n=%zu K=%zu endtype=%u alpha=%g order=%zu gaussian random\"",
        "\"n=%zu K=%zu endtype=%u alpha=%g order=%zu gaussian random in-place\""
      ]
    },
    "test_gaussian_deriv": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": [
        "\"%zu %.12e %.12e %.12e %.12e\\n\""
      ]
    },
    "test_gaussian": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/filter/test_impulse.c": {
    "vector_sum": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "test_impulse_proc": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": [
        "\"impulse nsigma=0 smf comparison, etype=%u stype=%u\"",
        "\"impulse [n=%zu,K=%zu,nsigma=%g,outlier_percentage=%g] noutlier=%zu exact=%zu\"",
        "\"%.12e %.12e %d %.12e %.12e\\n\"",
        "\"test_impulse: outlier mismatch [i=%zu,K=%zu,nsigma=%g,outlier_percentage=%g] ioutlier=%d ioutlier_exact=%d\"",
        "\"impulse [K=%zu,nsigma=%g,outlier_percentage=%g] noutlier=%zu sum(ioutlier)=%zu\"",
        "\"impulse in-place nsigma=%g,n=%zu,K=%zu,etype=%u stype=%u\""
      ]
    },
    "test_impulse": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/filter/test_median.c": {
    "slow_movmedian": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "test_median_proc": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"n=%zu K=%zu endtype=%u median random\"",
        "\"n=%zu K=%zu endtype=%u median random in-place\""
      ]
    },
    "test_median": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/filter/test_rmedian.c": {
    "slow_rmedian": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "test_rmedian_root": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"n=%zu k=%zu RMF square wave root sequence\""
      ]
    },
    "test_rmedian_random": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"n=%zu K=%d RMF symmetric random slow test\"",
        "\"n=%zu K=%d RMF symmetric random in-place\""
      ]
    },
    "test_rmedian": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fit/gsl_fit.h": {},
  "gsl/gsl-2.5/fit/linear.c": {
    "gsl_fit_linear": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "gsl_fit_wlinear": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        191,
        1
      ],
      "strings": []
    },
    "gsl_fit_linear_est": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "gsl_fit_mul": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": []
    },
    "gsl_fit_wmul": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        335,
        1
      ],
      "strings": []
    },
    "gsl_fit_mul_est": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/fit/test.c": {
    "main": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": [
        "\"norris gsl_fit_linear c0\"",
        "\"norris gsl_fit_linear c1\"",
        "\"norris gsl_fit_linear cov00\"",
        "\"norris gsl_fit_linear cov01\"",
        "\"norris gsl_fit_linear cov11\"",
        "\"norris gsl_fit_linear sumsq\"",
        "\"norris gsl_fit_wlinear c0\"",
        "\"norris gsl_fit_wlinear c1\"",
        "\"norris gsl_fit_wlinear cov00\"",
        "\"norris gsl_fit_wlinear cov01\"",
        "\"norris gsl_fit_wlinear cov11\"",
        "\"norris gsl_fit_wlinear sumsq\"",
        "\"noint1 gsl_fit_mul c1\"",
        "\"noint1 gsl_fit_mul cov11\"",
        "\"noint1 gsl_fit_mul sumsq\"",
        "\"noint1 gsl_fit_wmul c1\"",
        "\"noint1 gsl_fit_wmul cov11\"",
        "\"noint1 gsl_fit_wmul sumsq\"",
        "\"noint2 gsl_fit_mul c1\"",
        "\"noint2 gsl_fit_mul cov11\"",
        "\"noint2 gsl_fit_mul sumsq\"",
        "\"noint2 gsl_fit_wmul c1\"",
        "\"noint2 gsl_fit_wmul cov11\"",
        "\"noint2 gsl_fit_wmul sumsq\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/add.c": {
    "gsl_histogram_increment": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "gsl_histogram_accumulate": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"index lies outside valid range of 0 .. n - 1\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/add2d.c": {
    "gsl_histogram2d_increment": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_accumulate": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": [
        "\"index lies outside valid range of 0 .. nx - 1\"",
        "\"index lies outside valid range of 0 .. ny - 1\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/calloc_range.c": {
    "gsl_histogram_calloc_range": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"histogram length n must be positive integer\"",
        "\"histogram bin extremes  must be \"",
        "\"in increasing order\"",
        "\"failed to allocate space for histogram struct\"",
        "\"failed to allocate space for histogram ranges\"",
        "\"failed to allocate space for histogram bins\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/calloc_range2d.c": {
    "gsl_histogram2d_calloc_range": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": [
        "\"histogram length nx must be positive integer\"",
        "\"histogram length ny must be positive integer\"",
        "\"histogram xrange not in increasing order\"",
        "\"histogram yrange not in increasing order\"",
        "\"failed to allocate space for histogram struct\"",
        "\"failed to allocate space for histogram xrange\"",
        "\"failed to allocate space for histogram yrange\"",
        "\"failed to allocate space for histogram bins\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/copy.c": {
    "gsl_histogram_memcpy": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"histograms have different sizes, cannot copy\""
      ]
    },
    "gsl_histogram_clone": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": [
        "\"failed to allocate space for histogram struct\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/copy2d.c": {
    "gsl_histogram2d_memcpy": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": [
        "\"histograms have different sizes, cannot copy\""
      ]
    },
    "gsl_histogram2d_clone": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"failed to allocate space for histogram struct\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/file.c": {
    "gsl_histogram_fread": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "gsl_histogram_fwrite": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "gsl_histogram_fprintf": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": [
        "\"fprintf failed\"",
        "\"putc failed\"",
        "\"fprintf failed\"",
        "\"putc failed\"",
        "\"fprintf failed\"",
        "\"putc failed\""
      ]
    },
    "gsl_histogram_fscanf": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": [
        "\"%lg %lg %lg\"",
        "\"fscanf failed\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/file2d.c": {
    "gsl_histogram2d_fread": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_fwrite": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_fprintf": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"fprintf failed\"",
        "\"putc failed\"",
        "\"fprintf failed\"",
        "\"putc failed\"",
        "\"fprintf failed\"",
        "\"putc failed\"",
        "\"fprintf failed\"",
        "\"putc failed\"",
        "\"fprintf failed\"",
        "\"putc failed\"",
        "\"putc failed\""
      ]
    },
    "gsl_histogram2d_fscanf": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"%lg %lg %lg %lg %lg\"",
        "\"fscanf failed\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/find.c": {
    "find": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": [
        "\"x not found in range\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/find2d.c": {
    "find2d": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/get.c": {
    "gsl_histogram_get": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": [
        "\"index lies outside valid range of 0 .. n - 1\""
      ]
    },
    "gsl_histogram_get_range": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"index lies outside valid range of 0 .. n - 1\""
      ]
    },
    "gsl_histogram_find": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": [
        "\"x not found in range of h\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/get2d.c": {
    "gsl_histogram2d_get": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": [
        "\"index i lies outside valid range of 0 .. nx - 1\"",
        "\"index j lies outside valid range of 0 .. ny - 1\""
      ]
    },
    "gsl_histogram2d_get_xrange": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"index i lies outside valid range of 0 .. nx - 1\""
      ]
    },
    "gsl_histogram2d_get_yrange": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"index j lies outside valid range of 0 .. ny - 1\""
      ]
    },
    "gsl_histogram2d_find": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"x not found in range of h\"",
        "\"y not found in range of h\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/gsl_histogram.h": {
    "typedef": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/gsl_histogram2d.h": {
    "typedef": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/init.c": {
    "gsl_histogram_alloc": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"histogram length n must be positive integer\"",
        "\"failed to allocate space for histogram struct\"",
        "\"failed to allocate space for histogram ranges\"",
        "\"failed to allocate space for histogram bins\""
      ]
    },
    "make_uniform": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "gsl_histogram_calloc_uniform": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"xmin must be less than xmax\""
      ]
    },
    "gsl_histogram_calloc": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "gsl_histogram_free": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "gsl_histogram_set_ranges_uniform": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": [
        "\"xmin must be less than xmax\""
      ]
    },
    "gsl_histogram_set_ranges": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": [
        "\"size of range must match size of histogram\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/init2d.c": {
    "gsl_histogram2d_alloc": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": [
        "\"histogram2d length nx must be positive integer\"",
        "\"histogram2d length ny must be positive integer\"",
        "\"failed to allocate space for histogram2d struct\"",
        "\"failed to allocate space for histogram2d x ranges\"",
        "\"failed to allocate space for histogram2d y ranges\"",
        "\"failed to allocate space for histogram bins\""
      ]
    },
    "make_uniform": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_calloc_uniform": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"xmin must be less than xmax\"",
        "\"ymin must be less than ymax\""
      ]
    },
    "gsl_histogram2d_calloc": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": [
        "\"histogram2d length nx must be positive integer\"",
        "\"histogram2d length ny must be positive integer\"",
        "\"failed to allocate space for histogram2d struct\"",
        "\"failed to allocate space for histogram2d x ranges\"",
        "\"failed to allocate space for histogram2d y ranges\"",
        "\"failed to allocate space for histogram bins\""
      ]
    },
    "gsl_histogram2d_free": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_set_ranges_uniform": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": [
        "\"xmin must be less than xmax\"",
        "\"ymin must be less than ymax\""
      ]
    },
    "gsl_histogram2d_set_ranges": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        300,
        1
      ],
      "strings": [
        "\"size of xrange must match size of histogram\"",
        "\"size of yrange must match size of histogram\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/maxval.c": {
    "gsl_histogram_max_val": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "gsl_histogram_max_bin": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "gsl_histogram_min_val": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "gsl_histogram_min_bin": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/maxval2d.c": {
    "gsl_histogram2d_max_val": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_max_bin": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_min_val": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_min_bin": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/oper.c": {
    "gsl_histogram_equal_bins_p": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "gsl_histogram_add": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": [
        "\"histograms have different binning\""
      ]
    },
    "gsl_histogram_sub": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": [
        "\"histograms have different binning\""
      ]
    },
    "gsl_histogram_mul": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": [
        "\"histograms have different binning\""
      ]
    },
    "gsl_histogram_div": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": [
        "\"histograms have different binning\""
      ]
    },
    "gsl_histogram_scale": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": []
    },
    "gsl_histogram_shift": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/oper2d.c": {
    "gsl_histogram2d_equal_bins_p": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_add": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"histograms have different binning\""
      ]
    },
    "gsl_histogram2d_sub": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": [
        "\"histograms have different binning\""
      ]
    },
    "gsl_histogram2d_mul": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"histograms have different binning\""
      ]
    },
    "gsl_histogram2d_div": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": [
        "\"histograms have different binning\""
      ]
    },
    "gsl_histogram2d_scale": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_shift": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/params.c": {
    "gsl_histogram_max": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    },
    "gsl_histogram_min": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "gsl_histogram_bins": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/params2d.c": {
    "gsl_histogram2d_xmax": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        28,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_xmin": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_ymax": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_ymin": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_nx": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_ny": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/pdf.c": {
    "gsl_histogram_pdf_sample": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"cannot find r in cumulative pdf\""
      ]
    },
    "gsl_histogram_pdf_alloc": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": [
        "\"histogram pdf length n must be positive integer\"",
        "\"failed to allocate space for histogram pdf struct\"",
        "\"failed to allocate space for histogram pdf ranges\"",
        "\"failed to allocate space for histogram pdf sums\""
      ]
    },
    "gsl_histogram_pdf_init": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": [
        "\"histogram length must match pdf length\"",
        "\"histogram bins must be non-negative to compute\"",
        "\"a probability distribution\""
      ]
    },
    "gsl_histogram_pdf_free": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/pdf2d.c": {
    "gsl_histogram2d_pdf_sample": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"cannot find r1 in cumulative pdf\""
      ]
    },
    "gsl_histogram2d_pdf_alloc": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": [
        "\"histogram2d pdf length n must be positive integer\"",
        "\"failed to allocate space for histogram2d pdf struct\"",
        "\"failed to allocate space for histogram2d pdf xranges\"",
        "\"failed to allocate space for histogram2d pdf yranges\"",
        "\"failed to allocate space for histogram2d pdf sums\""
      ]
    },
    "gsl_histogram2d_pdf_init": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": [
        "\"histogram2d size must match pdf size\"",
        "\"histogram bins must be non-negative to compute\"",
        "\"a probability distribution\""
      ]
    },
    "gsl_histogram2d_pdf_free": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/reset.c": {
    "gsl_histogram_reset": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/reset2d.c": {
    "gsl_histogram2d_reset": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/stat.c": {
    "gsl_histogram_mean": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "gsl_histogram_sigma": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "gsl_histogram_sum": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/stat2d.c": {
    "gsl_histogram2d_sum": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_xmean": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_ymean": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_xsigma": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_ysigma": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": []
    },
    "gsl_histogram2d_cov": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        264,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/test.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/histogram/test1d.c": {
    "test1d": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        482,
        1
      ],
      "strings": [
        "\"gsl_histogram_alloc returns valid range pointer\"",
        "\"gsl_histogram_alloc returns valid bin pointer\"",
        "\"gsl_histogram_alloc returns valid size\"",
        "\"gsl_histogram_calloc_range returns valid range pointer\"",
        "\"gsl_histogram_calloc_range returns valid bin pointer\"",
        "\"gsl_histogram_calloc_range returns valid size\"",
        "\"gsl_histogram_calloc_range creates range\"",
        "\"gsl_histogram_set_range sets range\"",
        "\"gsl_histogram_accumulate writes into array\"",
        "\"gsl_histogram_get reads from array\"",
        "\"gsl_histogram_memcpy copies bin ranges\"",
        "\"gsl_histogram_memcpy copies bin values\"",
        "\"gsl_histogram_clone copies bin ranges\"",
        "\"gsl_histogram_clone copies bin values\"",
        "\"gsl_histogram_reset zeros array\"",
        "\"gsl_histogram_increment increases bin value\"",
        "\"gsl_histogram_getbinrange returns bin range\"",
        "\"gsl_histogram_max returns maximum\"",
        "\"gsl_histogram_min returns minimum\"",
        "\"gsl_histogram_bins returns number of bins\"",
        "\"gsl_histogram_max_val finds maximum value\"",
        "\"gsl_histogram_min_val finds minimum value\"",
        "\"gsl_histogram_max_bin finds maximum value bin\"",
        "\"gsl_histogram_min_bin find minimum value bin\"",
        "\"gsl_histogram_sum sums all bin values\"",
        "\"gsl_histogram_add histogram addition\"",
        "\"gsl_histogram_sub histogram subtraction\"",
        "\"gsl_histogram_mul histogram multiplication\"",
        "\"gsl_histogram_div histogram division\"",
        "\"gsl_histogram_scale histogram scaling\"",
        "\"gsl_histogram_shift histogram shift\"",
        "\"gsl_histogram_calloc_uniform returns valid range pointer\"",
        "\"gsl_histogram_calloc_uniform returns valid bin pointer\"",
        "\"gsl_histogram_calloc_uniform returns valid size\"",
        "\"gsl_histogram_find returns index\"",
        "\"test.txt\"",
        "\"w\"",
        "\"%.19e\"",
        "\"%.19e\"",
        "\"test.txt\"",
        "\"r\"",
        "\"gsl_histogram_fprintf and fscanf\"",
        "\"test.dat\"",
        "\"wb\"",
        "\"test.dat\"",
        "\"rb\"",
        "\"gsl_histogram_fwrite and fread\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/test1d_resample.c": {
    "test1d_resample": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": [
        "\"%d: %g vs %g\\n\"",
        "\"%g vs %g err=%g sigma=%g\\n\"",
        "\"gsl_histogram_pdf_sample within statistical errors\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/test1d_trap.c": {
    "test1d_trap": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": [
        "\"gsl_histogram_calloc traps zero-length histogram\"",
        "\"gsl_histogram_calloc returns NULL for zero-length histogram\"",
        "\"gsl_histogram_calloc_uniform traps zero-length histogram\"",
        "\"gsl_histogram_calloc_uniform returns NULL for zero-length histogram\"",
        "\"gsl_histogram_calloc_uniform traps equal endpoints\"",
        "\"gsl_histogram_calloc_uniform returns NULL for equal endpoints\"",
        "\"gsl_histogram_calloc_uniform traps invalid range\"",
        "\"gsl_histogram_calloc_uniform returns NULL for invalid range\"",
        "\"gsl_histogram_accumulate traps x at xmax\"",
        "\"gsl_histogram_accumulate traps x above xmax\"",
        "\"gsl_histogram_accumulate traps x below xmin\"",
        "\"gsl_histogram_increment traps x at xmax\"",
        "\"gsl_histogram_increment traps x above xmax\"",
        "\"gsl_histogram_increment traps x below xmin\"",
        "\"gsl_histogram_get traps index at n\"",
        "\"gsl_histogram_get traps index above n\"",
        "\"gsl_histogram_get_range traps index at n\"",
        "\"gsl_histogram_get_range traps index above n\"",
        "\"gsl_histogram_find traps x below xmin\"",
        "\"gsl_histogram_find traps x at xmax\"",
        "\"gsl_histogram_find traps x above xmax\""
      ]
    },
    "my_error_handler": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/test2d.c": {
    "test2d": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        752,
        1
      ],
      "strings": [
        "\"gsl_histogram2d_calloc returns valid xrange pointer\"",
        "\"gsl_histogram2d_calloc returns valid yrange pointer\"",
        "\"gsl_histogram2d_calloc returns valid bin pointer\"",
        "\"gsl_histogram2d_calloc returns valid nx\"",
        "\"gsl_histogram2d_calloc returns valid ny\"",
        "\"gsl_histogram2d_calloc_range returns valid xrange pointer\"",
        "\"gsl_histogram2d_calloc_range returns valid yrange pointer\"",
        "\"gsl_histogram2d_calloc_range returns valid bin pointer\"",
        "\"gsl_histogram2d_calloc_range returns valid nx\"",
        "\"gsl_histogram2d_calloc_range returns valid ny\"",
        "\"gsl_histogram2d_calloc_range creates xrange\"",
        "\"gsl_histogram2d_calloc_range creates yrange\"",
        "\"gsl_histogram2d_set_ranges sets xrange\"",
        "\"gsl_histogram2d_set_ranges sets yrange\"",
        "\"gsl_histogram2d_accumulate writes into array\"",
        "\"gsl_histogram2d_get reads from array\"",
        "\"gsl_histogram2d_memcpy copies bin xranges\"",
        "\"gsl_histogram2d_memcpy copies bin yranges\"",
        "\"gsl_histogram2d_memcpy copies bin values\"",
        "\"gsl_histogram2d_clone copies bin xranges\"",
        "\"gsl_histogram2d_clone copies bin yranges\"",
        "\"gsl_histogram2d_clone copies bin values\"",
        "\"gsl_histogram2d_reset zeros array\"",
        "\"gsl_histogram2d_increment increases bin value\"",
        "\"gsl_histogram2d_get_xlowerlimit and xupperlimit\"",
        "\"gsl_histogram2d_get_ylowerlimit and yupperlimit\"",
        "\"gsl_histogram2d_xmax\"",
        "\"gsl_histogram2d_xmin\"",
        "\"gsl_histogram2d_nx\"",
        "\"gsl_histogram2d_ymax\"",
        "\"gsl_histogram2d_ymin\"",
        "\"gsl_histogram2d_ny\"",
        "\"gsl_histogram2d_max_val finds maximum value\"",
        "\"gsl_histogram2d_min_val finds minimum value\"",
        "\"gsl_histogram2d_max_bin finds maximum value bin\"",
        "\"gsl_histogram2d_min_bin find minimum value bin\"",
        "\"gsl_histogram2d_sum sums all bin values\"",
        "\"gsl_histogram2d_xmean\"",
        "\"gsl_histogram2d_ymean\"",
        "\"gsl_histogram2d_xmean histogram mean(x)\"",
        "\"gsl_histogram2d_ymean histogram mean(y)\"",
        "\"gsl_histogram2d_xsigma histogram stdev(x)\"",
        "\"gsl_histogram2d_ysigma histogram stdev(y)\"",
        "\"gsl_histogram2d_cov histogram covariance\"",
        "\"gsl_histogram2d_add histogram addition\"",
        "\"gsl_histogram2d_sub histogram subtraction\"",
        "\"gsl_histogram2d_mul histogram multiplication\"",
        "\"gsl_histogram2d_div histogram division\"",
        "\"gsl_histogram2d_scale histogram scaling\"",
        "\"gsl_histogram2d_shift histogram shift\"",
        "\"gsl_histogram2d_calloc_uniform returns valid range pointer\"",
        "\"gsl_histogram2d_calloc_uniform returns valid range pointer\"",
        "\"gsl_histogram2d_calloc_uniform returns valid bin pointer\"",
        "\"gsl_histogram2d_calloc_uniform returns valid nx\"",
        "\"gsl_histogram2d_calloc_uniform returns valid ny\"",
        "\"gsl_histogram2d_find returns index\"",
        "\"test.txt\"",
        "\"w\"",
        "\"%.19e\"",
        "\"%.19e\"",
        "\"test.txt\"",
        "\"r\"",
        "\"xrange[%d] : %g orig vs %g\\n\"",
        "\"yrange[%d] : %g orig vs %g\\n\"",
        "\"bin[%d] : %g orig vs %g\\n\"",
        "\"gsl_histogram2d_fprintf and fscanf\"",
        "\"test.dat\"",
        "\"wb\"",
        "\"test.dat\"",
        "\"rb\"",
        "\"xrange[%d] : %g orig vs %g\\n\"",
        "\"yrange[%d] : %g orig vs %g\\n\"",
        "\"bin[%d] : %g orig vs %g\\n\"",
        "\"gsl_histogram2d_fwrite and fread\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/test2d_resample.c": {
    "test2d_resample": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": [
        "\"(%d,%d): %g vs %g\\n\"",
        "\"%g vs %g err=%g sigma=%g\\n\"",
        "\"gsl_histogram2d_pdf_sample within statistical errors\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/test2d_trap.c": {
    "test2d_trap": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": [
        "\"gsl_histogram_calloc traps zero-width histogram\"",
        "\"gsl_histogram2d_calloc returns NULL for zero-width histogram\"",
        "\"gsl_histogram_calloc traps zero-length histogram\"",
        "\"gsl_histogram2d_calloc returns NULL for zero-length histogram\"",
        "\"gsl_histogram2d_calloc_uniform traps zero-width histogram\"",
        "\"gsl_histogram2d_calloc_uniform returns NULL for zero-width histogram\"",
        "\"gsl_histogram2d_calloc_uniform traps zero-length histogram\"",
        "\"gsl_histogram2d_calloc_uniform returns NULL for zero-length histogram\"",
        "\"gsl_histogram2d_calloc_uniform traps equal endpoints\"",
        "\"gsl_histogram2d_calloc_uniform returns NULL for equal endpoints\"",
        "\"gsl_histogram2d_calloc_uniform traps equal endpoints\"",
        "\"gsl_histogram2d_calloc_uniform returns NULL for equal endpoints\"",
        "\"gsl_histogram2d_calloc_uniform traps invalid range\"",
        "\"gsl_histogram2d_calloc_uniform returns NULL for invalid range\"",
        "\"gsl_histogram2d_calloc_uniform traps invalid range\"",
        "\"gsl_histogram2d_calloc_uniform returns NULL for invalid range\"",
        "\"gsl_histogram2d_accumulate traps x at xmax\"",
        "\"gsl_histogram2d_accumulate traps x above xmax\"",
        "\"gsl_histogram2d_accumulate traps x below xmin\"",
        "\"gsl_histogram2d_accumulate traps y at ymax\"",
        "\"gsl_histogram2d_accumulate traps y above ymax\"",
        "\"gsl_histogram2d_accumulate traps y below ymin\"",
        "\"gsl_histogram2d_increment traps x at xmax\"",
        "\"gsl_histogram2d_increment traps x above xmax\"",
        "\"gsl_histogram2d_increment traps x below xmin\"",
        "\"gsl_histogram2d_increment traps y at ymax\"",
        "\"gsl_histogram2d_increment traps y above ymax\"",
        "\"gsl_histogram2d_increment traps y below ymin\"",
        "\"gsl_histogram2d_get traps x index at nx\"",
        "\"gsl_histogram2d_get traps x index above nx\"",
        "\"gsl_histogram2d_get traps y index at ny\"",
        "\"gsl_histogram2d_get traps y index above ny\"",
        "\"gsl_histogram2d_get_xrange traps index at nx\"",
        "\"gsl_histogram2d_get_xrange traps index above nx\"",
        "\"gsl_histogram2d_get_yrange traps index at ny\"",
        "\"gsl_histogram2d_get_yrange traps index above ny\"",
        "\"gsl_histogram2d_find traps x below xmin\"",
        "\"gsl_histogram2d_find traps x at xmax\"",
        "\"gsl_histogram2d_find traps x above xmax\"",
        "\"gsl_histogram2d_find traps y below ymin\"",
        "\"gsl_histogram2d_find traps y at ymax\"",
        "\"gsl_histogram2d_find traps y above ymax\""
      ]
    },
    "my_error_handler": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/histogram/urand.c": {
    "urand": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ieee-utils/endian.c": {
    "little_endian_p": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ieee-utils/env.c": {
    "gsl_ieee_env_setup": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": [
        "\"GSL_IEEE_MODE\"",
        "\"GSL_IEEE_MODE=\\\"\"",
        "\"single-precision\"",
        "\"double-precision\"",
        "\"extended-precision\"",
        "\"round-to-nearest\"",
        "\"round-down\"",
        "\"round-up\"",
        "\"round-to-zero\"",
        "\"mask-all\"",
        "\"trap-common\"",
        "\"mask-invalid\"",
        "\"mask-denormalized\"",
        "\"mask-division-by-zero\"",
        "\"mask-overflow\"",
        "\"mask-underflow\"",
        "\"trap-inexact\"",
        "\"\\\"\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-aix.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": [
        "\"AIX only supports default precision rounding\"",
        "\"AIX only supports default precision rounding\"",
        "\"AIX only supports default precision rounding\"",
        "\"AIX does not support the denormalized operand exception. \"",
        "\"Use 'mask-denormalized' to work around this.\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-darwin.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"powerpc only supports default precision rounding\"",
        "\"powerpc only supports default precision rounding\"",
        "\"powerpc only supports default precision rounding\"",
        "\"powerpc does not support the denormalized operand exception. \"",
        "\"Use 'mask-denormalized' to work around this.\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-darwin86.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-freebsd.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-gnuc99.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": [
        "\"single precision rounding is not supported by <fenv.h>\"",
        "\"double precision rounding is not supported by <fenv.h>\"",
        "\"extended precision rounding is not supported by <fenv.h>\"",
        "\"round-to-nearest is not supported by <fenv.h>\"",
        "\"round-down is not supported by <fenv.h>\"",
        "\"round-up is not supported by <fenv.h>\"",
        "\"round-toward-zero is not supported by <fenv.h>\"",
        "\"default round-to-nearest mode is not supported by <fenv.h>\"",
        "\"invalid operation exception not supported by <fenv.h>\"",
        "\"denormalized operand exception not supported by <fenv.h>. \"",
        "\"Use 'mask-denormalized' to work around this.\"",
        "\"division by zero exception not supported by <fenv.h>\"",
        "\"overflow exception not supported by <fenv.h>\"",
        "\"underflow exception not supported by <fenv.h>\"",
        "\"inexact exception not supported by <fenv.h>\"",
        "\"unknown exception trap method\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-gnum68k.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"the denormalized operand exception has not been implemented for m68k yet. Use 'mask-denormalized' to work around this.\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-gnuppc.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": [
        "\"powerpc only supports default precision rounding\"",
        "\"powerpc only supports default precision rounding\"",
        "\"powerpc only supports default precision rounding\"",
        "\"powerpc does not support the denormalized operand exception. \"",
        "\"Use 'mask-denormalized' to work around this.\"",
        "\"powerpc does not support traps for inexact operations\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-gnusparc.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\"sparc does not support the denormalized operand exception. \"",
        "\"Use 'mask-denormalized' to work around this.\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-gnux86.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-hpux.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"HPUX PA-RISC only supports default precision rounding\"",
        "\"HPUX PA-RISC only supports default precision rounding\"",
        "\"HPUX PA-RISC only supports default precision rounding\"",
        "\"HP-UX does not support the denormalized operand exception. \"",
        "\"Use 'mask-denormalized' to work around this.\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-hpux11.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": [
        "\"HPUX PA-RISC only supports default precision rounding\"",
        "\"HPUX PA-RISC only supports default precision rounding\"",
        "\"HPUX PA-RISC only supports default precision rounding\"",
        "\"HP-UX does not support the denormalized operand exception. \"",
        "\"Use 'mask-denormalized' to work around this.\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-irix.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"IRIX only supports default precision rounding\"",
        "\"IRIX only supports default precision rounding\"",
        "\"IRIX only supports default precision rounding\"",
        "\"IRIX does not support the denormalized operand exception. \"",
        "\"Use 'mask-denormalized' to work around this.\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-netbsd.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"NetBSD only supports default precision rounding\"",
        "\"NetBSD only supports default precision rounding\"",
        "\"NetBSD only supports default precision rounding\"",
        "\"NetBSD does not support the denormalized operand exception on this platform. \"",
        "\"Use 'mask-denormalized' to work around this.\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-openbsd.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"OpenBSD only supports default precision rounding\"",
        "\"OpenBSD only supports default precision rounding\"",
        "\"OpenBSD only supports default precision rounding\"",
        "\"OpenBSD does not support the denormalized operand exception on this platform. \"",
        "\"Use 'mask-denormalized' to work around this.\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-os2emx.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-solaris.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"solaris only supports default precision rounding\"",
        "\"solaris only supports default precision rounding\"",
        "\"solaris only supports default precision rounding\"",
        "\"solaris does not support the denormalized operand exception. \"",
        "\"Use 'mask-denormalized' to work around this.\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-sunos4.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": [
        "\"set\"",
        "\"precision\"",
        "\"single\"",
        "\"set\"",
        "\"precision\"",
        "\"double\"",
        "\"set\"",
        "\"precision\"",
        "\"extended\"",
        "\"set\"",
        "\"precision\"",
        "\"extended\"",
        "\"set\"",
        "\"direction\"",
        "\"nearest\"",
        "\"set\"",
        "\"direction\"",
        "\"negative\"",
        "\"set\"",
        "\"direction\"",
        "\"positive\"",
        "\"set\"",
        "\"direction\"",
        "\"tozero\"",
        "\"set\"",
        "\"direction\"",
        "\"nearest\"",
        "\"set\"",
        "\"invalid\"",
        "\"set\"",
        "\"invalid\"",
        "\"set\"",
        "\"denormalized\"",
        "\"sunos4 does not support the denormalized operand exception. \"",
        "\"Use 'mask-denormalized' to work around this.\"",
        "\"set\"",
        "\"division\"",
        "\"set\"",
        "\"division\"",
        "\"set\"",
        "\"overflow\"",
        "\"set\"",
        "\"overflow\"",
        "\"set\"",
        "\"underflow\"",
        "\"set\"",
        "\"underflow\"",
        "\"set\"",
        "\"inexact\"",
        "\"set\"",
        "\"inexact\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-tru64.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": [
        "\"Tru64 Unix on the alpha only supports default precision rounding\"",
        "\"Tru64 Unix on the alpha only supports default precision rounding\"",
        "\"Tru64 Unix on the alpha only supports default precision rounding\"",
        "\"Sorry, this version of Digital Unix does not support denormalized operands\"",
        "\"Sorry, GSL does not implement trap-inexact for Tru64 Unix on the alpha - see fp-tru64.c for details\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp-unknown.c": {
    "gsl_ieee_set_mode": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": [
        "\"the IEEE interface for this platform is unsupported or could not be \"",
        "\"determined at configure time\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/fp.c": {},
  "gsl/gsl-2.5/ieee-utils/gsl_ieee_utils.h": {},
  "gsl/gsl-2.5/ieee-utils/make_rep.c": {
    "gsl_ieee_float_to_rep": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "gsl_ieee_double_to_rep": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "sprint_nybble": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": []
    },
    "sprint_byte": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    },
    "determine_ieee_type": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ieee-utils/print.c": {
    "gsl_ieee_fprintf_float": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"NaN\"",
        "\"%cInf\"",
        "\"%c1.%s*2^%d\"",
        "\"%c0.%s*2^%d\"",
        "\"%c0\"",
        "\"[non-standard IEEE float]\""
      ]
    },
    "gsl_ieee_printf_float": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "gsl_ieee_fprintf_double": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": [
        "\"NaN\"",
        "\"%cInf\"",
        "\"%c1.%s*2^%d\"",
        "\"%c0.%s*2^%d\"",
        "\"%c0\"",
        "\"[non-standard IEEE double]\""
      ]
    },
    "gsl_ieee_printf_double": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ieee-utils/read.c": {
    "gsl_ieee_read_mode_string": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"no memory to parse mode string\"",
        "\"unrecognized GSL_IEEE_MODE string.\\nValid settings are:\\n\\n\"",
        "\"  single-precision double-precision extended-precision\\n\"",
        "\"  round-to-nearest round-down round-up round-to-zero\\n\"",
        "\"  mask-invalid mask-denormalized mask-division-by-zero\\n\"",
        "\"  mask-overflow mask-underflow mask-all\\n\"",
        "\"  trap-common trap-inexact\\n\"",
        "\"\\n\"",
        "\"separated by commas. \"",
        "\"(e.g. GSL_IEEE_MODE=\\\"round-down,mask-underflow\\\")\"",
        "\"attempted to set IEEE precision twice\"",
        "\"attempted to set IEEE rounding mode twice\""
      ]
    },
    "lookup_string": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": [
        "\"single-precision\"",
        "\"double-precision\"",
        "\"extended-precision\"",
        "\"round-to-nearest\"",
        "\"round-down\"",
        "\"round-up\"",
        "\"round-to-zero\"",
        "\"mask-all\"",
        "\"mask-invalid\"",
        "\"mask-denormalized\"",
        "\"mask-division-by-zero\"",
        "\"mask-overflow\"",
        "\"mask-underflow\"",
        "\"trap-inexact\"",
        "\"trap-common\""
      ]
    }
  },
  "gsl/gsl-2.5/ieee-utils/standardize.c": {
    "make_float_bigendian": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    },
    "make_double_bigendian": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ieee-utils/test.c": {
    "main": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        481,
        1
      ],
      "strings": [
        "\"00000000000000000000000\"",
        "\"float x = 0, sign is +\"",
        "\"float x = 0, exponent is -127\"",
        "\"float x = 0, mantissa\"",
        "\"float x = 0, type is ZERO\"",
        "\"00000000000000000000000\"",
        "\"float x = -1*0, sign is -\"",
        "\"float x = -1*0, exponent is -127\"",
        "\"float x = -1*0, mantissa\"",
        "\"float x = -1*0, type is ZERO\"",
        "\"00001100110011001100110\"",
        "\"float x = 2.1, sign is +\"",
        "\"float x = 2.1, exponent is 1\"",
        "\"float x = 2.1, mantissa\"",
        "\"float x = 2.1, type is NORMAL\"",
        "\"01010100100100100101001\"",
        "\"float x = -1.3304..., sign is -\"",
        "\"float x = -1.3304..., exponent is 0\"",
        "\"float x = -1.3304..., mantissa\"",
        "\"float x = -1.3304..., type is NORMAL\"",
        "\"10101001010110101001001\"",
        "\"float x = 3.37e31, sign is +\"",
        "\"float x = 3.37e31, exponent is 104\"",
        "\"float x = 3.37e31, mantissa\"",
        "\"float x = 3.37e31, type is NORMAL\"",
        "\"10110101011100110111011\"",
        "\"float x = 3.37e-31, sign is +\"",
        "\"float x = 3.37e-31, exponent is -102\"",
        "\"float x = 3.37e-31, mantissa\"",
        "\"float x = 3.37e-31, type is NORMAL\"",
        "\"00000000000000000000000\"",
        "\"float x = FLT_MIN, sign is +\"",
        "\"float x = FLT_MIN, exponent is -126\"",
        "\"float x = FLT_MIN, mantissa\"",
        "\"float x = FLT_MIN, type is NORMAL\"",
        "\"11111111111111111111111\"",
        "\"float x = FLT_MAX, sign is +\"",
        "\"float x = FLT_MAX, exponent is 127\"",
        "\"float x = FLT_MAX, mantissa\"",
        "\"float x = FLT_MAX, type is NORMAL\"",
        "\"10000000000000000000000\"",
        "\"float x = FLT_MIN/2^%d, sign is +\"",
        "\"float x = FLT_MIN/2^%d, exponent is -127\"",
        "\"float x = FLT_MIN/2^%d, mantissa\"",
        "\"float x = FLT_MIN/2^%d, type is DENORMAL\"",
        "\"00000000000000000000000\"",
        "\"float x = 2*FLT_MAX, sign is +\"",
        "\"float x = 2*FLT_MAX, exponent is 128\"",
        "\"float x = 2*FLT_MAX, mantissa\"",
        "\"float x = -2*FLT_MAX, type is INF\"",
        "\"00000000000000000000000\"",
        "\"float x = -2*FLT_MAX, sign is -\"",
        "\"float x = -2*FLT_MAX, exponent is 128\"",
        "\"float x = -2*FLT_MAX, mantissa\"",
        "\"float x = -2*FLT_MAX, type is INF\"",
        "\"float x = NaN, exponent is 128\"",
        "\"float x = NaN, type is NAN\"",
        "\"0000000000000000000000000000000000000000000000000000\"",
        "\"double x = 0, sign is +\"",
        "\"double x = 0, exponent is -1023\"",
        "\"double x = 0, mantissa\"",
        "\"double x = 0, type is ZERO\"",
        "\"0000000000000000000000000000000000000000000000000000\"",
        "\"double x = -1*0, sign is -\"",
        "\"double x = -1*0, exponent is -1023\"",
        "\"double x = -1*0, mantissa\"",
        "\"double x = -1*0, type is ZERO\"",
        "\"0000110011001100110011001100110011001100110011001101\"",
        "\"double x = 2.1, sign is +\"",
        "\"double x = 2.1, exponent is 1\"",
        "\"double x = 2.1, mantissa\"",
        "\"double x = 2.1, type is NORMAL\"",
        "\"0101010010010010010100101010010010001000100011101110\"",
        "\"double x = -1.3304..., sign is -\"",
        "\"double x = -1.3304..., exponent is 0\"",
        "\"double x = -1.3304..., mantissa\"",
        "\"double x = -1.3304..., type is NORMAL\"",
        "\"0100100111001001100101111001100000100110011101000100\"",
        "\"double x = 3.37e297, sign is +\"",
        "\"double x = 3.37e297, exponent is 998\"",
        "\"double x = 3.37e297, mantissa\"",
        "\"double x = 3.37e297, type is NORMAL\"",
        "\"0001101000011011101011100001110010100001001100110111\"",
        "\"double x = 3.37e-297, sign is +\"",
        "\"double x = 3.37e-297, exponent is -985\"",
        "\"double x = 3.37e-297, mantissa\"",
        "\"double x = 3.37e-297, type is NORMAL\"",
        "\"0000000000000000000000000000000000000000000000000000\"",
        "\"double x = DBL_MIN, sign is +\"",
        "\"double x = DBL_MIN, exponent is -1022\"",
        "\"double x = DBL_MIN, mantissa\"",
        "\"double x = DBL_MIN, type is NORMAL\"",
        "\"1111111111111111111111111111111111111111111111111111\"",
        "\"double x = DBL_MAX, sign is +\"",
        "\"double x = DBL_MAX, exponent is 1023\"",
        "\"double x = DBL_MAX, mantissa\"",
        "\"double x = DBL_MAX, type is NORMAL\"",
        "\"1000000000000000000000000000000000000000000000000000\"",
        "\"double x = DBL_MIN/2^%d, sign is +\"",
        "\"double x = DBL_MIN/2^%d, exponent\"",
        "\"double x = DBL_MIN/2^%d, mantissa\"",
        "\"double x = DBL_MIN/2^%d, type is DENORMAL\"",
        "\"0000000000000000000000000000000000000000000000000000\"",
        "\"double x = 2*DBL_MAX, sign is +\"",
        "\"double x = 2*DBL_MAX, exponent is 1024\"",
        "\"double x = 2*DBL_MAX, mantissa\"",
        "\"double x = 2*DBL_MAX, type is INF\"",
        "\"0000000000000000000000000000000000000000000000000000\"",
        "\"double x = -2*DBL_MAX, sign is -\"",
        "\"double x = -2*DBL_MAX, exponent is 1024\"",
        "\"double x = -2*DBL_MAX, mantissa\"",
        "\"double x = -2*DBL_MAX, type is INF\"",
        "\"double x = NaN, exponent is 1024\"",
        "\"double x = NaN, type is NAN\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/append.c": {
    "append_interval": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/chebyshev.c": {
    "chebyshev_check": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"|b - a| too small\"",
        "\"lower integration limit must be smaller than upper limit\""
      ]
    },
    "chebyshev_init": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/chebyshev2.c": {
    "chebyshev2_check": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"|b - a| too small\"",
        "\"lower integration limit must be smaller than upper limit\""
      ]
    },
    "chebyshev2_init": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/cquad.c": {
    "gsl_integration_cquad_workspace_alloc": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": [
        "\"workspace size n must be at least 3\"",
        "\"failed to allocate space for workspace struct\"",
        "\"failed to allocate space for the intervals\"",
        "\"failed to allocate space for the heap\""
      ]
    },
    "gsl_integration_cquad_workspace_free": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "Vinvfx": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": []
    },
    "downdate": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    },
    "gsl_integration_cquad": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        682,
        1
      ],
      "strings": [
        "\"function pointer shouldn't be NULL\"",
        "\"result pointer shouldn't be NULL\"",
        "\"workspace pointer shouldn't be NULL\"",
        "\"tolerances may not be negative\"",
        "\"unreasonable accuracy requirement\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/cquad_const.c": {},
  "gsl/gsl-2.5/integration/err.c": {
    "rescale_error": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/exponential.c": {
    "exponential_check": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"|b - a| too small\"",
        "\"lower integration limit must be smaller than upper limit\"",
        "\"alpha must be > -1\""
      ]
    },
    "exponential_init": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/fixed.c": {
    "gsl_integration_fixed_alloc": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"workspace size n must be at least 1\"",
        "\"unable to allocate workspace\"",
        "\"unable to allocate weights\"",
        "\"unable to allocate x\"",
        "\"unable to allocate diag\"",
        "\"unable to allocate subdiag\"",
        "\"error in integration parameters\""
      ]
    },
    "gsl_integration_fixed_free": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "gsl_integration_fixed_n": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "gsl_integration_fixed_nodes": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "gsl_integration_fixed_weights": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    },
    "gsl_integration_fixed": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "fixed_compute": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": [
        "\"zeroth moment must be positive\""
      ]
    },
    "imtqlx": {
      "start_point": [
        283,
        0
      ],
      "end_point": [
        409,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/gegenbauer.c": {
    "gegenbauer_check": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"|b - a| too small\"",
        "\"lower integration limit must be smaller than upper limit\"",
        "\"alpha must be > -1\""
      ]
    },
    "gegenbauer_init": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/glfixed.c": {
    "gsl_integration_glfixed_table_alloc": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": [
        "\"Requested n is too large\"",
        "\"failed to allocate space for abscissae\"",
        "\"failed to allocate space for weights\"",
        "\"failed to allocate space for table struct\""
      ]
    },
    "gsl_integration_glfixed_table_free": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        257,
        1
      ],
      "strings": []
    },
    "gsl_integration_glfixed": {
      "start_point": [
        278,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": []
    },
    "gsl_integration_glfixed_point": {
      "start_point": [
        325,
        0
      ],
      "end_point": [
        365,
        1
      ],
      "strings": [
        "\"i must be less than t->n\""
      ]
    },
    "gauss_legendre_tbl": {
      "start_point": [
        378,
        0
      ],
      "end_point": [
        482,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/gsl_integration.h": {
    "typedef": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        51,
        3
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/hermite.c": {
    "hermite_check": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"b must be positive\"",
        "\"alpha must be > -1\""
      ]
    },
    "hermite_init": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/initialise.c": {
    "initialise": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/jacobi.c": {
    "jacobi_check": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"|b - a| too small\"",
        "\"lower integration limit must be smaller than upper limit\"",
        "\"alpha and beta must be > -1\""
      ]
    },
    "jacobi_init": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/laguerre.c": {
    "laguerre_check": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"b must be positive\"",
        "\"alpha must be > -1\""
      ]
    },
    "laguerre_init": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/legendre.c": {
    "legendre_check": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": [
        "\"|b - a| too small\""
      ]
    },
    "legendre_init": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/positivity.c": {
    "test_positivity": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        12,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/ptsort.c": {
    "sort_results": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qag.c": {
    "gsl_integration_qag": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": [
        "\"value of key does specify a known integration rule\""
      ]
    },
    "qag": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": [
        "\"iteration limit exceeds available workspace\"",
        "\"tolerance cannot be achieved with given epsabs and epsrel\"",
        "\"cannot reach tolerance because of roundoff error \"",
        "\"on first attempt\"",
        "\"a maximum of one iteration was insufficient\"",
        "\"roundoff error prevents tolerance from being achieved\"",
        "\"bad integrand behavior found in the integration interval\"",
        "\"maximum number of subdivisions reached\"",
        "\"could not integrate function\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/qagp.c": {
    "gsl_integration_qagp": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "qagp": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        509,
        1
      ],
      "strings": [
        "\"iteration limit exceeds available workspace\"",
        "\"npts exceeds size of workspace\"",
        "\"tolerance cannot be achieved with given epsabs and epsrel\"",
        "\"points are not in an ascending sequence\"",
        "\"cannot reach tolerance because of roundoff error\"",
        "\"on first attempt\"",
        "\"a maximum of one iteration was insufficient\"",
        "\"number of iterations was insufficient\"",
        "\"cannot reach tolerance because of roundoff error\"",
        "\"bad integrand behavior found in the integration interval\"",
        "\"roundoff error detected in the extrapolation table\"",
        "\"integral is divergent, or slowly convergent\"",
        "\"could not integrate function\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/qags.c": {
    "gsl_integration_qags": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "gsl_integration_qagi": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "i_transform": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "gsl_integration_qagil": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "il_transform": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    },
    "gsl_integration_qagiu": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "iu_transform": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    },
    "qags": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        569,
        1
      ],
      "strings": [
        "\"iteration limit exceeds available workspace\"",
        "\"tolerance cannot be achieved with given epsabs and epsrel\"",
        "\"cannot reach tolerance because of roundoff error\"",
        "\"on first attempt\"",
        "\"a maximum of one iteration was insufficient\"",
        "\"number of iterations was insufficient\"",
        "\"cannot reach tolerance because of roundoff error\"",
        "\"bad integrand behavior found in the integration interval\"",
        "\"roundoff error detected in the extrapolation table\"",
        "\"integral is divergent, or slowly convergent\"",
        "\"could not integrate function\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/qawc.c": {
    "gsl_integration_qawc": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": [
        "\"iteration limit exceeds available workspace\"",
        "\"tolerance cannot be achieved with given epsabs and epsrel\"",
        "\"cannot integrate with singularity on endpoint\"",
        "\"a maximum of one iteration was insufficient\"",
        "\"roundoff error prevents tolerance from being achieved\"",
        "\"bad integrand behavior found in the integration interval\"",
        "\"maximum number of subdivisions reached\"",
        "\"could not integrate function\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/qawf.c": {
    "gsl_integration_qawf": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": [
        "\"iteration limit exceeds available workspace\"",
        "\"absolute tolerance epsabs must be positive\"",
        "\"number of iterations was insufficient\"",
        "\"cannot reach tolerance because of roundoff error\"",
        "\"bad integrand behavior found in the integration interval\"",
        "\"roundoff error detected in the extrapolation table\"",
        "\"integral is divergent, or slowly convergent\"",
        "\"could not integrate function\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/qawo.c": {
    "gsl_integration_qawo": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        459,
        1
      ],
      "strings": [
        "\"iteration limit exceeds available workspace\"",
        "\"tolerance cannot be achieved with given epsabs and epsrel\"",
        "\"cannot reach tolerance because of roundoff error \"",
        "\"on first attempt\"",
        "\"a maximum of one iteration was insufficient\"",
        "\"number of iterations was insufficient\"",
        "\"cannot reach tolerance because of roundoff error\"",
        "\"bad integrand behavior found in the integration interval\"",
        "\"roundoff error detected in extrapolation table\"",
        "\"integral is divergent, or slowly convergent\"",
        "\"exceeded limit of trigonometric table\"",
        "\"could not integrate function\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/qaws.c": {
    "gsl_integration_qaws": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": [
        "\"iteration limit exceeds available workspace\"",
        "\"limits must form an ascending sequence, a < b\"",
        "\"tolerance cannot be achieved with given epsabs and epsrel\"",
        "\"a maximum of one iteration was insufficient\"",
        "\"roundoff error prevents tolerance from being achieved\"",
        "\"bad integrand behavior found in the integration interval\"",
        "\"maximum number of subdivisions reached\"",
        "\"could not integrate function\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/qc25c.c": {
    "qc25c": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "fn_cauchy": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "compute_moments": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qc25f.c": {
    "qc25f": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": [
        "\"table overflow in internal function\""
      ]
    },
    "fn_sin": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "fn_cos": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qc25s.c": {
    "qc25s": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "fn_qaws": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "fn_qaws_L": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    },
    "fn_qaws_R": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    },
    "compute_result": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qcheb.c": {
    "gsl_integration_qcheb": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qelg.c": {
    "initialise_table": [
      {
        "start_point": [
          33,
          0
        ],
        "end_point": [
          38,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          40,
          0
        ],
        "end_point": [
          46,
          1
        ],
        "strings": []
      }
    ],
    "append_table": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "qelg": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qk.c": {
    "gsl_integration_qk": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qk15.c": {
    "gsl_integration_qk15": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qk21.c": {
    "gsl_integration_qk21": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qk31.c": {
    "gsl_integration_qk31": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qk41.c": {
    "gsl_integration_qk41": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qk51.c": {
    "gsl_integration_qk51": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qk61.c": {
    "gsl_integration_qk61": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qmomo.c": {
    "gsl_integration_qaws_table_alloc": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": [
        "\"alpha must be greater than -1.0\"",
        "\"beta must be greater than -1.0\"",
        "\"mu must be 0 or 1\"",
        "\"nu must be 0 or 1\"",
        "\"failed to allocate space for qaws_table struct\""
      ]
    },
    "gsl_integration_qaws_table_set": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"alpha must be greater than -1.0\"",
        "\"beta must be greater than -1.0\"",
        "\"mu must be 0 or 1\"",
        "\"nu must be 0 or 1\""
      ]
    },
    "gsl_integration_qaws_table_free": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "initialise": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qmomof.c": {
    "gsl_integration_qawo_table_alloc": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"table length n must be positive integer\"",
        "\"failed to allocate space for qawo_table struct\"",
        "\"failed to allocate space for chebmo block\""
      ]
    },
    "gsl_integration_qawo_table_set": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "gsl_integration_qawo_table_set_length": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    },
    "gsl_integration_qawo_table_free": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "compute_moments": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        296,
        1
      ],
      "strings": []
    },
    "dgtsl": {
      "start_point": [
        298,
        0
      ],
      "end_point": [
        389,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qng.c": {
    "gsl_integration_qng": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": [
        "\"tolerance cannot be achieved with given epsabs and epsrel\"",
        "\"failed to reach tolerance with highest-order rule\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/qng.h": {},
  "gsl/gsl-2.5/integration/qpsrt.c": {
    "qpsrt": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/qpsrt2.c": {
    "increase_nrmax": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "large_interval": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/rational.c": {
    "rational_check": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"|b - a| too small\"",
        "\"alpha must be > -1\"",
        "\"beta < alpha + beta + 2n < 0 is required\"",
        "\"a + b <= 0 is not allowed\""
      ]
    },
    "rational_init": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/reset.c": {
    "reset_nrmax": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        8,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/romberg.c": {
    "gsl_integration_romberg_alloc": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": [
        "\"workspace size n must be at least 1\"",
        "\"unable to allocate workspace\"",
        "\"unable to allocate previous row\"",
        "\"unable to allocate current row\""
      ]
    },
    "gsl_integration_romberg_free": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "gsl_integration_romberg": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"epsabs must be non-negative\"",
        "\"epsrel must be non-negative\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/set_initial.c": {
    "set_initial_result": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        11,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/test.c": {
    "make_function": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "counter": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "make_counter": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "test_fixed_quadrature": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"%s a=%g b=%g alpha=%g beta=%g\"",
        "\"%s\""
      ]
    },
    "main": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        2633,
        1
      ],
      "strings": [
        "\"qk15(f1) smooth result\"",
        "\"qk15(f1) smooth abserr\"",
        "\"qk15(f1) smooth resabs\"",
        "\"qk15(f1) smooth resasc\"",
        "\"qk15(f1) reverse result\"",
        "\"qk15(f1) reverse abserr\"",
        "\"qk15(f1) reverse resabs\"",
        "\"qk15(f1) reverse resasc\"",
        "\"qk21(f1) smooth result\"",
        "\"qk21(f1) smooth abserr\"",
        "\"qk21(f1) smooth resabs\"",
        "\"qk21(f1) smooth resasc\"",
        "\"qk21(f1) reverse result\"",
        "\"qk21(f1) reverse abserr\"",
        "\"qk21(f1) reverse resabs\"",
        "\"qk21(f1) reverse resasc\"",
        "\"qk31(f1) smooth result\"",
        "\"qk31(f1) smooth abserr\"",
        "\"qk31(f1) smooth resabs\"",
        "\"qk31(f1) smooth resasc\"",
        "\"qk31(f1) reverse result\"",
        "\"qk31(f1) reverse abserr\"",
        "\"qk31(f1) reverse resabs\"",
        "\"qk31(f1) reverse resasc\"",
        "\"qk41(f1) smooth result\"",
        "\"qk41(f1) smooth abserr\"",
        "\"qk41(f1) smooth resabs\"",
        "\"qk41(f1) smooth resasc\"",
        "\"qk41(f1) reverse result\"",
        "\"qk41(f1) reverse abserr\"",
        "\"qk41(f1) reverse resabs\"",
        "\"qk41(f1) reverse resasc\"",
        "\"qk51(f1) smooth result\"",
        "\"qk51(f1) smooth abserr\"",
        "\"qk51(f1) smooth resabs\"",
        "\"qk51(f1) smooth resasc\"",
        "\"qk51(f1) reverse result\"",
        "\"qk51(f1) reverse abserr\"",
        "\"qk51(f1) reverse resabs\"",
        "\"qk51(f1) reverse resasc\"",
        "\"qk61(f1) smooth result\"",
        "\"qk61(f1) smooth abserr\"",
        "\"qk61(f1) smooth resabs\"",
        "\"qk61(f1) smooth resasc\"",
        "\"qk61(f1) reverse result\"",
        "\"qk61(f1) reverse abserr\"",
        "\"qk61(f1) reverse resabs\"",
        "\"qk61(f1) reverse resasc\"",
        "\"qk15(f1) singular result\"",
        "\"qk15(f1) singular abserr\"",
        "\"qk15(f1) singular resabs\"",
        "\"qk15(f1) singular resasc\"",
        "\"qk15(f1) reverse result\"",
        "\"qk15(f1) reverse abserr\"",
        "\"qk15(f1) reverse resabs\"",
        "\"qk15(f1) reverse resasc\"",
        "\"qk21(f1) singular result\"",
        "\"qk21(f1) singular abserr\"",
        "\"qk21(f1) singular resabs\"",
        "\"qk21(f1) singular resasc\"",
        "\"qk21(f1) reverse result\"",
        "\"qk21(f1) reverse abserr\"",
        "\"qk21(f1) reverse resabs\"",
        "\"qk21(f1) reverse resasc\"",
        "\"qk31(f1) singular result\"",
        "\"qk31(f1) singular abserr\"",
        "\"qk31(f1) singular resabs\"",
        "\"qk31(f1) singular resasc\"",
        "\"qk31(f1) reverse result\"",
        "\"qk31(f1) reverse abserr\"",
        "\"qk31(f1) reverse resabs\"",
        "\"qk31(f1) reverse resasc\"",
        "\"qk41(f1) singular result\"",
        "\"qk41(f1) singular abserr\"",
        "\"qk41(f1) singular resabs\"",
        "\"qk41(f1) singular resasc\"",
        "\"qk41(f1) reverse result\"",
        "\"qk41(f1) reverse abserr\"",
        "\"qk41(f1) reverse resabs\"",
        "\"qk41(f1) reverse resasc\"",
        "\"qk51(f1) singular result\"",
        "\"qk51(f1) singular abserr\"",
        "\"qk51(f1) singular resabs\"",
        "\"qk51(f1) singular resasc\"",
        "\"qk51(f1) reverse result\"",
        "\"qk51(f1) reverse abserr\"",
        "\"qk51(f1) reverse resabs\"",
        "\"qk51(f1) reverse resasc\"",
        "\"qk61(f1) singular result\"",
        "\"qk61(f1) singular abserr\"",
        "\"qk61(f1) singular resabs\"",
        "\"qk61(f1) singular resasc\"",
        "\"qk61(f1) reverse result\"",
        "\"qk61(f1) reverse abserr\"",
        "\"qk61(f1) reverse resabs\"",
        "\"qk61(f1) reverse resasc\"",
        "\"qk15(f3) oscill result\"",
        "\"qk15(f3) oscill abserr\"",
        "\"qk15(f3) oscill resabs\"",
        "\"qk15(f3) oscill resasc\"",
        "\"qk15(f3) reverse result\"",
        "\"qk15(f3) reverse abserr\"",
        "\"qk15(f3) reverse resabs\"",
        "\"qk15(f3) reverse resasc\"",
        "\"qk21(f3) oscill result\"",
        "\"qk21(f3) oscill abserr\"",
        "\"qk21(f3) oscill resabs\"",
        "\"qk21(f3) oscill resasc\"",
        "\"qk21(f3) reverse result\"",
        "\"qk21(f3) reverse abserr\"",
        "\"qk21(f3) reverse resabs\"",
        "\"qk21(f3) reverse resasc\"",
        "\"qk31(f3) oscill result\"",
        "\"qk31(f3) oscill abserr\"",
        "\"qk31(f3) oscill resabs\"",
        "\"qk31(f3) oscill resasc\"",
        "\"qk31(f3) reverse result\"",
        "\"qk31(f3) reverse abserr\"",
        "\"qk31(f3) reverse resabs\"",
        "\"qk31(f3) reverse resasc\"",
        "\"qk41(f3) oscill result\"",
        "\"qk41(f3) oscill abserr\"",
        "\"qk41(f3) oscill resabs\"",
        "\"qk41(f3) oscill resasc\"",
        "\"qk41(f3) reverse result\"",
        "\"qk41(f3) reverse abserr\"",
        "\"qk41(f3) reverse resabs\"",
        "\"qk41(f3) reverse resasc\"",
        "\"qk51(f3) oscill result\"",
        "\"qk51(f3) oscill abserr\"",
        "\"qk51(f3) oscill resabs\"",
        "\"qk51(f3) oscill resasc\"",
        "\"qk51(f3) reverse result\"",
        "\"qk51(f3) reverse abserr\"",
        "\"qk51(f3) reverse resabs\"",
        "\"qk51(f3) reverse resasc\"",
        "\"qk61(f3) oscill result\"",
        "\"qk61(f3) oscill abserr\"",
        "\"qk61(f3) oscill resabs\"",
        "\"qk61(f3) oscill resasc\"",
        "\"qk61(f3) reverse result\"",
        "\"qk61(f3) reverse abserr\"",
        "\"qk61(f3) reverse resabs\"",
        "\"qk61(f3) reverse resasc\"",
        "\"qng(f1) smooth result\"",
        "\"qng(f1) smooth abserr\"",
        "\"qng(f1) smooth neval\"",
        "\"qng(f1) smooth status\"",
        "\"qng(f1) reverse result\"",
        "\"qng(f1) reverse abserr\"",
        "\"qng(f1) reverse neval\"",
        "\"qng(f1) reverse status\"",
        "\"qng(f1) smooth 43pt result\"",
        "\"qng(f1) smooth 43pt abserr\"",
        "\"qng(f1) smooth 43pt neval\"",
        "\"qng(f1) smooth 43pt status\"",
        "\"qng(f1) reverse 43pt result\"",
        "\"qng(f1) reverse 43pt abserr\"",
        "\"qng(f1) reverse 43pt neval\"",
        "\"qng(f1) reverse 43pt status\"",
        "\"qnq(f3) oscill result\"",
        "\"qng(f3) oscill abserr\"",
        "\"qng(f3) oscill neval\"",
        "\"qng(f3) oscill status\"",
        "\"qnq(f3) reverse result\"",
        "\"qng(f3) reverse abserr\"",
        "\"qng(f3) reverse neval\"",
        "\"qng(f3) reverse status\"",
        "\"qng(f1) 87pt smooth result\"",
        "\"qng(f1) 87pt smooth abserr\"",
        "\"qng(f1) 87pt smooth neval\"",
        "\"qng(f1) 87pt smooth status\"",
        "\"qng(f1) 87pt reverse result\"",
        "\"qng(f1) 87pt reverse abserr\"",
        "\"qng(f1) 87pt reverse neval\"",
        "\"qng(f1) 87pt reverse status\"",
        "\"qng(f1) sing beyond 87pt result\"",
        "\"qng(f1) sing beyond 87pt abserr\"",
        "\"qng(f1) sing beyond 87pt neval\"",
        "\"qng(f1) sing beyond 87pt status\"",
        "\"qng(f1) reverse beyond 87pt result\"",
        "\"qng(f1) rev beyond 87pt abserr\"",
        "\"qng(f1) rev beyond 87pt neval\"",
        "\"qng(f1) rev beyond 87pt status\"",
        "\"qag(f1) smooth result\"",
        "\"qag(f1) smooth abserr\"",
        "\"qag(f1) smooth neval\"",
        "\"qag(f1) smooth last\"",
        "\"qag(f1) smooth status\"",
        "\"qag(f1) smooth alist\"",
        "\"qag(f1) smooth blist\"",
        "\"qag(f1) smooth rlist\"",
        "\"qag(f1) smooth elist\"",
        "\"qag(f1) smooth order\"",
        "\"qag(f1) reverse result\"",
        "\"qag(f1) reverse abserr\"",
        "\"qag(f1) reverse neval\"",
        "\"qag(f1) reverse last\"",
        "\"qag(f1) reverse status\"",
        "\"qag(f1,21pt) smooth result\"",
        "\"qag(f1,21pt) smooth abserr\"",
        "\"qag(f1,21pt) smooth neval\"",
        "\"qag(f1,21pt) smooth last\"",
        "\"qag(f1,21pt) smooth status\"",
        "\"qag(f1,21pt) smooth alist\"",
        "\"qag(f1,21pt) smooth blist\"",
        "\"qag(f1,21pt) smooth rlist\"",
        "\"qag(f1,21pt) smooth elist\"",
        "\"qag(f1,21pt) smooth order\"",
        "\"qag(f1,21pt) reverse result\"",
        "\"qag(f1,21pt) reverse abserr\"",
        "\"qag(f1,21pt) reverse neval\"",
        "\"qag(f1,21pt) reverse last\"",
        "\"qag(f1,21pt) reverse status\"",
        "\"qag(f3,31pt) oscill result\"",
        "\"qag(f3,31pt) oscill abserr\"",
        "\"qag(f3,31pt) oscill neval\"",
        "\"qag(f3,31pt) oscill last\"",
        "\"qag(f3,31pt) oscill status\"",
        "\"qag(f3,31pt) reverse result\"",
        "\"qag(f3,31pt) reverse abserr\"",
        "\"qag(f3,31pt) reverse neval\"",
        "\"qag(f3,31pt) reverse last\"",
        "\"qag(f3,31pt) reverse status\"",
        "\"qag(f16,51pt) sing neval\"",
        "\"qag(f16,51pt) sing last\"",
        "\"qag(f16,51pt) sing status\"",
        "\"qag(f16,51pt) rev neval\"",
        "\"qag(f16,51pt) rev last\"",
        "\"qag(f16,51pt) rev status\"",
        "\"qag(f16,61pt) limit result\"",
        "\"qag(f16,61pt) limit abserr\"",
        "\"qag(f16,61pt) limit neval\"",
        "\"qag(f16,61pt) limit last\"",
        "\"qag(f16,61pt) limit status\"",
        "\"qag(f16,61pt) limit alist\"",
        "\"qag(f16,61pt) limit blist\"",
        "\"qag(f16,61pt) limit rlist\"",
        "\"qag(f16,61pt) limit elist\"",
        "\"qag(f16,61pt) limit order\"",
        "\"qag(f16,61pt) reverse result\"",
        "\"qag(f16,61pt) reverse abserr\"",
        "\"qag(f16,61pt) reverse neval\"",
        "\"qag(f16,61pt) reverse last\"",
        "\"qag(f16,61pt) reverse status\"",
        "\"qags(f1) smooth result\"",
        "\"qags(f1) smooth abserr\"",
        "\"qags(f1) smooth neval\"",
        "\"qags(f1) smooth last\"",
        "\"qags(f1) smooth status\"",
        "\"qags(f1) smooth alist\"",
        "\"qags(f1) smooth blist\"",
        "\"qags(f1) smooth rlist\"",
        "\"qags(f1) smooth elist\"",
        "\"qags(f1) smooth order\"",
        "\"qags(f1) reverse result\"",
        "\"qags(f1) reverse abserr\"",
        "\"qags(f1) reverse neval\"",
        "\"qags(f1) reverse last\"",
        "\"qags(f1) reverse status\"",
        "\"qags(f11) smooth result\"",
        "\"qags(f11) smooth abserr\"",
        "\"qags(f11) smooth neval\"",
        "\"qags(f11) smooth last\"",
        "\"qags(f11) smooth status\"",
        "\"qags(f11) smooth alist\"",
        "\"qags(f11) smooth blist\"",
        "\"qags(f11) smooth rlist\"",
        "\"qags(f11) smooth elist\"",
        "\"qags(f11) smooth order\"",
        "\"qags(f11) reverse result\"",
        "\"qags(f11) reverse abserr\"",
        "\"qags(f11) reverse neval\"",
        "\"qags(f11) reverse last\"",
        "\"qags(f11) reverse status\"",
        "\"qagiu(f455) smooth result\"",
        "\"qagiu(f455) smooth abserr\"",
        "\"qagiu(f455) smooth neval\"",
        "\"qagiu(f455) smooth last\"",
        "\"qagiu(f455) smooth status\"",
        "\"qagiu(f455) smooth alist\"",
        "\"qagiu(f455) smooth blist\"",
        "\"qagiu(f455) smooth rlist\"",
        "\"qagiu(f455) smooth elist\"",
        "\"qagiu(f455) smooth order\"",
        "\"qagiu(f15) smooth result\"",
        "\"qagiu(f15) smooth abserr\"",
        "\"qagiu(f15) smooth neval\"",
        "\"qagiu(f15) smooth last\"",
        "\"qagiu(f15) smooth status\"",
        "\"qagiu(f15) smooth alist\"",
        "\"qagiu(f15) smooth blist\"",
        "\"qagiu(f15) smooth rlist\"",
        "\"qagiu(f15) smooth elist\"",
        "\"qagiu(f15) smooth order\"",
        "\"qagiu(f16) smooth result\"",
        "\"qagiu(f16) smooth abserr\"",
        "\"qagiu(f16) smooth neval\"",
        "\"qagiu(f16) smooth last\"",
        "\"qagiu(f16) smooth status\"",
        "\"qagiu(f16) smooth alist\"",
        "\"qagiu(f16) smooth blist\"",
        "\"qagiu(f16) smooth rlist\"",
        "\"qagiu(f16) smooth elist\"",
        "\"qagiu(f16) smooth order\"",
        "\"qagiu(myfn1) smooth result\"",
        "\"qagiu(myfn1) smooth abserr\"",
        "\"qagiu(myfn1) smooth neval\"",
        "\"qagiu(myfn1) smooth last\"",
        "\"qagiu(myfn1) smooth status\"",
        "\"qagiu(myfn1) smooth alist\"",
        "\"qagiu(myfn1) smooth blist\"",
        "\"qagiu(myfn1) smooth rlist\"",
        "\"qagiu(myfn1) smooth elist\"",
        "\"qagiu(myfn1) smooth order\"",
        "\"qagiu(myfn2) smooth result\"",
        "\"qagiu(myfn2) smooth abserr\"",
        "\"qagiu(myfn2) smooth neval\"",
        "\"qagiu(myfn2) smooth last\"",
        "\"qagiu(myfn2) smooth status\"",
        "\"qagiu(myfn2) smooth alist\"",
        "\"qagiu(myfn2) smooth blist\"",
        "\"qagiu(myfn2) smooth rlist\"",
        "\"qagiu(myfn2) smooth elist\"",
        "\"qagiu(myfn2) smooth order\"",
        "\"qagp(f454) singular result\"",
        "\"qagp(f454) singular abserr\"",
        "\"qagp(f454) singular neval\"",
        "\"qagp(f454) singular last\"",
        "\"qagp(f454) singular status\"",
        "\"qagp(f454) singular alist\"",
        "\"qagp(f454) singular blist\"",
        "\"qagp(f454) singular rlist\"",
        "\"qagp(f454) singular elist\"",
        "\"qagp(f454) singular order\"",
        "\"qawc(f459) result\"",
        "\"qawc(f459) abserr\"",
        "\"qawc(f459) neval\"",
        "\"qawc(f459) last\"",
        "\"qawc(f459) status\"",
        "\"qawc(f459) alist\"",
        "\"qawc(f459) blist\"",
        "\"qawc(f459) rlist\"",
        "\"qawc(f459) elist\"",
        "\"qawc(f459) order\"",
        "\"qawc(f459) rev result\"",
        "\"qawc(f459) rev abserr\"",
        "\"qawc(f459) rev neval\"",
        "\"qawc(f459) rev last\"",
        "\"qawc(f459) rev status\"",
        "\"qaws(f458) ln(x-a) result\"",
        "\"qaws(f458) ln(x-a) abserr\"",
        "\"qaws(f458) ln(x-a) neval\"",
        "\"qaws(f458) ln(x-a) last\"",
        "\"qaws(f458) ln(x-a) status\"",
        "\"qaws(f458) ln(x-a) alist\"",
        "\"qaws(f458) ln(x-a) blist\"",
        "\"qaws(f458) ln(x-a) rlist\"",
        "\"qaws(f458) ln(x-a) elist\"",
        "\"qaws(f458) ln(x-a) order\"",
        "\"qaws(f458) AB result\"",
        "\"qaws(f458) AB abserr\"",
        "\"qaws(f458) AB ln(x-a) result\"",
        "\"qaws(f458) AB ln(x-a) abserr\"",
        "\"qaws(f458) AB ln(b-x) result\"",
        "\"qaws(f458) AB ln(b-x) abserr\"",
        "\"qaws(f458) AB ln(x-a)ln(b-x) result\"",
        "\"qaws(f458) AB ln(x-a)ln(b-x) abserr\"",
        "\"qawo(f456) result\"",
        "\"qawo(f456) abserr\"",
        "\"qawo(f456) neval\"",
        "\"qawo(f456) last\"",
        "\"qawo(f456) status\"",
        "\"qawo(f456) alist\"",
        "\"qawo(f456) blist\"",
        "\"qawo(f456) rlist\"",
        "\"qawo(f456) elist\"",
        "\"qawo(f456) order\"",
        "\"qawo(f456) rev result\"",
        "\"qawo(f456) rev abserr\"",
        "\"qawo(f456) rev neval\"",
        "\"qawo(f456) rev last\"",
        "\"qawo(f456) rev status\"",
        "\"qawf(f457) result\"",
        "\"qawf(f457) abserr\"",
        "\"qawf(f457) neval\"",
        "\"qawf(f457) last\"",
        "\"qawf(f457) status\"",
        "\"qawf(f457) rlist\"",
        "\"qawf(f457) elist\"",
        "\"romberg(f_sin) status\"",
        "\"romberg(f_sin) result\"",
        "\"romberg(f_sin) reverse status\"",
        "\"romberg(f_sin) reverse result\"",
        "\"romberg(cqf11) status\"",
        "\"romberg(cqf11) result\"",
        "\"romberg(cqf11) reverse status\"",
        "\"romberg(cqf11) reverse result\"",
        "\"f_monomial sanity check 1\"",
        "\"f_monomial sanity check 2\"",
        "\"integ_f_monomial sanity check\"",
        "\"glfixed %d-point: Integrating (%g*x^%d) over [%g,%g]\"",
        "\"glfixed %d-point: Integrating (%g*x^%d) over [%g,%g]\"",
        "\"f_sin sanity check 1\"",
        "\"f_sin sanity check 2\"",
        "\"integ_f_sin sanity check\"",
        "\"glfixed %d-point: behavior for n == 1\"",
        "\"glfixed %d-point: observed drop in absolute error versus %d-points\"",
        "\"glfixed %d-point: very low absolute error for high precision coefficients\"",
        "\"glfixed %d-point: acceptable absolute error for on-the-fly coefficients\"",
        "\"glfixed %d-point lookup: x(%d)\"",
        "\"glfixed %d-point lookup: w(%d)\"",
        "\"glfixed %d-point lookup: x(%d)\"",
        "\"glfixed %d-point lookup: w(%d)\"",
        "\"glfixed %d-point lookup: x(%d)\"",
        "\"glfixed %d-point lookup: w(%d)\"",
        "\"glfixed %d-point lookup: x(%d)\"",
        "\"glfixed %d-point lookup: w(%d)\"",
        "\"glfixed %d-point lookup: x(%d)\"",
        "\"glfixed %d-point lookup: w(%d)\"",
        "\"glfixed %d-point xi,wi eval\"",
        "\"glfixed %d-point xi,wi eval\"",
        "\"cquad f%d\"",
        "\"cquad f%d error (%g actual vs %g estimated)\"",
        "\"cquad return code\"",
        "\"legendre monomial\"",
        "\"chebyshev monomial\"",
        "\"laguerre monomial\"",
        "\"hermite monomial\"",
        "\"chebyshev2 monomial\"",
        "\"legendre monomial\"",
        "\"laguerre monomial\"",
        "\"hermite monomial\"",
        "\"chebyshev monomial\"",
        "\"chebyshev2 monomial\"",
        "\"legendre myfn1\"",
        "\"chebyshev myfn1\"",
        "\"gegenbauer myfn1\"",
        "\"gegenbauer myfn1\"",
        "\"jacobi myfn1\"",
        "\"jacobi myfn1\"",
        "\"laguerre myfn1\"",
        "\"hermite myfn1\"",
        "\"exponential myfn1\"",
        "\"rational myfn1\"",
        "\"chebyshev2 myfn1\"",
        "\"gegenbauer monomial\"",
        "\"jacobi monomial\"",
        "\"exponential monomial\"",
        "\"rational monomial\""
      ]
    },
    "my_error_handler": {
      "start_point": [
        2635,
        0
      ],
      "end_point": [
        2639,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/integration/tests.c": {
    "f1": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "f2": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "f3": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "f7": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "f8": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "f9": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "f10": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "f11": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "f12": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "f13": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "f14": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "f15": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "f16": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    },
    "f17": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "f454": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    },
    "f455": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "f456": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "f457": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": []
    },
    "f458": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "f459": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "myfn1": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    },
    "myfn2": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": []
    },
    "f_monomial": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    },
    "integ_f_monomial": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "f_sin": {
      "start_point": [
        240,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    },
    "integ_f_sin": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": []
    },
    "cqf1": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    },
    "cqf2": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "cqf3": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": []
    },
    "cqf4": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": []
    },
    "cqf5": {
      "start_point": [
        270,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "cqf6": {
      "start_point": [
        275,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": []
    },
    "cqf7": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": []
    },
    "cqf8": {
      "start_point": [
        283,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": []
    },
    "cqf9": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": []
    },
    "cqf10": {
      "start_point": [
        292,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": []
    },
    "cqf11": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        298,
        1
      ],
      "strings": []
    },
    "cqf12": {
      "start_point": [
        300,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": []
    },
    "cqf13": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": []
    },
    "cqf14": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": []
    },
    "cqf15": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": []
    },
    "cqf16": {
      "start_point": [
        316,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": []
    },
    "cqf17": {
      "start_point": [
        320,
        0
      ],
      "end_point": [
        324,
        1
      ],
      "strings": []
    },
    "cqf18": {
      "start_point": [
        326,
        0
      ],
      "end_point": [
        328,
        1
      ],
      "strings": []
    },
    "cqf19": {
      "start_point": [
        330,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": []
    },
    "cqf20": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": []
    },
    "cqf21": {
      "start_point": [
        338,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    },
    "cqf22": {
      "start_point": [
        344,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": []
    },
    "cqf23": {
      "start_point": [
        348,
        0
      ],
      "end_point": [
        351,
        1
      ],
      "strings": []
    },
    "cqf24": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        355,
        1
      ],
      "strings": []
    },
    "cqf25": {
      "start_point": [
        357,
        0
      ],
      "end_point": [
        361,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/tests.h": {},
  "gsl/gsl-2.5/integration/util.c": {
    "update": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "retrieve": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "sum_results": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "subinterval_too_small": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/integration/workspace.c": {
    "gsl_integration_workspace_alloc": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": [
        "\"workspace length n must be positive integer\"",
        "\"failed to allocate space for workspace struct\"",
        "\"failed to allocate space for alist ranges\"",
        "\"failed to allocate space for blist ranges\"",
        "\"failed to allocate space for rlist ranges\"",
        "\"failed to allocate space for elist ranges\"",
        "\"failed to allocate space for order ranges\"",
        "\"failed to allocate space for order ranges\""
      ]
    },
    "gsl_integration_workspace_free": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/accel.c": {
    "gsl_interp_accel_alloc": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": [
        "\"could not allocate space for gsl_interp_accel\""
      ]
    },
    "gsl_interp_accel_reset": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "gsl_interp_accel_free": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/akima.c": {
    "akima_alloc": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": [
        "\"failed to allocate space for state\"",
        "\"failed to allocate space for b\"",
        "\"failed to allocate space for c\"",
        "\"failed to allocate space for d\"",
        "\"failed to allocate space for _m\""
      ]
    },
    "akima_calc": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "akima_init": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "akima_init_periodic": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "akima_free": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    },
    "akima_eval": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    },
    "akima_eval_deriv": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": []
    },
    "akima_eval_deriv2": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        298,
        1
      ],
      "strings": []
    },
    "akima_eval_integ": {
      "start_point": [
        301,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/bicubic.c": {
    "bicubic_alloc": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"failed to allocate space for state\"",
        "\"failed to allocate space for zx\"",
        "\"failed to allocate space for zy\"",
        "\"failed to allocate space for zxy\""
      ]
    },
    "bicubic_free": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "bicubic_init": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "bicubic_eval": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": []
    },
    "bicubic_deriv_x": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        390,
        1
      ],
      "strings": []
    },
    "bicubic_deriv_y": {
      "start_point": [
        392,
        0
      ],
      "end_point": [
        493,
        1
      ],
      "strings": []
    },
    "bicubic_deriv_xx": {
      "start_point": [
        495,
        0
      ],
      "end_point": [
        590,
        1
      ],
      "strings": []
    },
    "bicubic_deriv_xy": {
      "start_point": [
        592,
        0
      ],
      "end_point": [
        689,
        1
      ],
      "strings": []
    },
    "bicubic_deriv_yy": {
      "start_point": [
        691,
        0
      ],
      "end_point": [
        786,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/bilinear.c": {
    "bilinear_init": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    },
    "bilinear_eval": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "bilinear_deriv_x": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "bilinear_deriv_y": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "bilinear_deriv2": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": []
    },
    "bilinear_derivxy": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/cspline.c": {
    "cspline_alloc": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": [
        "\"failed to allocate space for state\"",
        "\"failed to allocate space for c\"",
        "\"failed to allocate space for g\"",
        "\"failed to allocate space for diag\"",
        "\"failed to allocate space for offdiag\""
      ]
    },
    "cspline_init": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "cspline_init_periodic": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": []
    },
    "cspline_free": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    },
    "coeff_calc": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        246,
        1
      ],
      "strings": []
    },
    "cspline_eval": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        292,
        1
      ],
      "strings": []
    },
    "cspline_eval_deriv": {
      "start_point": [
        295,
        0
      ],
      "end_point": [
        338,
        1
      ],
      "strings": []
    },
    "cspline_eval_deriv2": {
      "start_point": [
        341,
        0
      ],
      "end_point": [
        384,
        1
      ],
      "strings": []
    },
    "cspline_eval_integ": {
      "start_point": [
        387,
        0
      ],
      "end_point": [
        442,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/gsl_interp.h": {
    "typedef": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "gsl_interp_bsearch": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "gsl_interp_accel_find": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/gsl_interp2d.h": {
    "typedef": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/gsl_spline.h": {
    "typedef": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/gsl_spline2d.h": {
    "typedef": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/inline.c": {},
  "gsl/gsl-2.5/interpolation/integ_eval.h": {
    "integ_eval": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/interp.c": {
    "gsl_interp_alloc": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": [
        "\"insufficient number of points for interpolation type\"",
        "\"failed to allocate space for interp struct\"",
        "\"failed to allocate space for interp state\""
      ]
    },
    "gsl_interp_init": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"data must match size of interpolation object\"",
        "\"x values must be strictly increasing\""
      ]
    },
    "gsl_interp_name": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "gsl_interp_min_size": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "gsl_interp_type_min_size": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "gsl_interp_free": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "gsl_interp_eval_e": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "gsl_interp_eval": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": [
        "\"interpolation error\""
      ]
    },
    "gsl_interp_eval_deriv_e": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "gsl_interp_eval_deriv": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": [
        "\"interpolation error\""
      ]
    },
    "gsl_interp_eval_deriv2_e": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": []
    },
    "gsl_interp_eval_deriv2": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"interpolation error\""
      ]
    },
    "gsl_interp_eval_integ_e": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": []
    },
    "gsl_interp_eval_integ": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": [
        "\"interpolation error\""
      ]
    }
  },
  "gsl/gsl-2.5/interpolation/interp2d.c": {
    "gsl_interp2d_alloc": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"insufficient number of points for interpolation type\"",
        "\"failed to allocate space for gsl_interp2d struct\"",
        "\"failed to allocate space for gsl_interp2d state\""
      ]
    },
    "gsl_interp2d_free": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_init": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": [
        "\"data must match size of interpolation object\"",
        "\"x values must be strictly increasing\"",
        "\"y values must be strictly increasing\""
      ]
    },
    "interp2d_eval": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"interpolation x value out of range\"",
        "\"interpolation y value out of range\""
      ]
    },
    "interp2d_eval_extrap": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_extrap": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_e": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_e_extrap": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_deriv_x": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_deriv_x_e": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_deriv_y": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_deriv_y_e": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_deriv_xx": {
      "start_point": [
        271,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_deriv_xx_e": {
      "start_point": [
        283,
        0
      ],
      "end_point": [
        291,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_deriv_yy": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        303,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_deriv_yy_e": {
      "start_point": [
        305,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_deriv_xy": {
      "start_point": [
        315,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_eval_deriv_xy_e": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        335,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_type_min_size": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        341,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_min_size": {
      "start_point": [
        343,
        0
      ],
      "end_point": [
        347,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_name": {
      "start_point": [
        349,
        0
      ],
      "end_point": [
        353,
        1
      ],
      "strings": []
    },
    "gsl_interp2d_idx": {
      "start_point": [
        355,
        0
      ],
      "end_point": [
        371,
        1
      ],
      "strings": [
        "\"x index out of range\"",
        "\"y index out of range\""
      ]
    },
    "gsl_interp2d_set": {
      "start_point": [
        373,
        0
      ],
      "end_point": [
        390,
        1
      ],
      "strings": [
        "\"x index out of range\"",
        "\"y index out of range\""
      ]
    },
    "gsl_interp2d_get": {
      "start_point": [
        392,
        0
      ],
      "end_point": [
        408,
        1
      ],
      "strings": [
        "\"x index out of range\"",
        "\"y index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/interpolation/linear.c": {
    "linear_init": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "linear_eval": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "linear_eval_deriv": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "linear_eval_deriv2": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    },
    "linear_eval_integ": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/poly.c": {
    "polynomial_alloc": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": [
        "\"failed to allocate space for polynomial state\"",
        "\"failed to allocate space for d\"",
        "\"failed to allocate space for d\"",
        "\"failed to allocate space for d\""
      ]
    },
    "polynomial_init": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "polynomial_eval": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "polynomial_deriv": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "polynomial_deriv2": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    },
    "polynomial_integ": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    },
    "polynomial_free": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/spline.c": {
    "gsl_spline_alloc": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": [
        "\"failed to allocate space for spline struct\"",
        "\"failed to allocate space for interp\"",
        "\"failed to allocate space for x\"",
        "\"failed to allocate space for y\""
      ]
    },
    "gsl_spline_init": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"data must match size of spline object\""
      ]
    },
    "gsl_spline_name": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "gsl_spline_min_size": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "gsl_spline_free": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "gsl_spline_eval_e": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "gsl_spline_eval": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    },
    "gsl_spline_eval_deriv_e": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "gsl_spline_eval_deriv": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "gsl_spline_eval_deriv2_e": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "gsl_spline_eval_deriv2": {
      "start_point": [
        161,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "gsl_spline_eval_integ_e": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "gsl_spline_eval_integ": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/spline2d.c": {
    "gsl_spline2d_alloc": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"insufficient number of points for interpolation type\"",
        "\"failed to allocate space for gsl_spline2d struct\"",
        "\"failed to allocate space for gsl_spline2d state\"",
        "\"failed to allocate space for data arrays\""
      ]
    },
    "gsl_spline2d_init": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_free": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval_e": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval_deriv_x": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval_deriv_x_e": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval_deriv_y": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval_deriv_y_e": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval_deriv_xx": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval_deriv_xx_e": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval_deriv_yy": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval_deriv_yy_e": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval_deriv_xy": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_eval_deriv_xy_e": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_min_size": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_name": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_set": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    },
    "gsl_spline2d_get": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/steffen.c": {
    "steffen_alloc": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"failed to allocate space for state\"",
        "\"failed to allocate space for a\"",
        "\"failed to allocate space for b\"",
        "\"failed to allocate space for c\"",
        "\"failed to allocate space for d\"",
        "\"failed to allocate space for y_prime\""
      ]
    },
    "steffen_init": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "steffen_free": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "steffen_eval": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "steffen_eval_deriv": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        271,
        1
      ],
      "strings": []
    },
    "steffen_eval_deriv2": {
      "start_point": [
        273,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": []
    },
    "steffen_eval_integ": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        361,
        1
      ],
      "strings": []
    },
    "steffen_copysign": {
      "start_point": [
        363,
        0
      ],
      "end_point": [
        370,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/test.c": {
    "test_bsearch": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": [
        "\"simple bsearch\"",
        "\"upper endpoint bsearch\"",
        "\"lower endpoint bsearch\"",
        "\"degenerate bsearch\"",
        "\"out of bounds bsearch +\"",
        "\"out of bounds bsearch -\"",
        "\"(%u,%u) accelerated lookup vs bsearch (x = %g)\""
      ]
    },
    "make_xy_table": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "test_interp": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"gsl_interp_type_min_size on %s\"",
        "\"gsl_interp_eval_e %s\"",
        "\"gsl_interp_eval_deriv_e %s\"",
        "\"gsl_interp_eval_integ_e %s\"",
        "\"%s %d\"",
        "\"%s deriv %d\"",
        "\"%s integ %d\""
      ]
    },
    "test_linear": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": [
        "\"linear interpolation\""
      ]
    },
    "test_polynomial": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": [
        "\"polynomial interpolation\""
      ]
    },
    "test_cspline": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": [
        "\"cspline interpolation\""
      ]
    },
    "test_cspline2": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        348,
        1
      ],
      "strings": [
        "\"cspline 1/(1+x^2) interpolation\""
      ]
    },
    "test_cspline3": {
      "start_point": [
        350,
        0
      ],
      "end_point": [
        474,
        1
      ],
      "strings": [
        "\"cspline arbitrary data interpolation\""
      ]
    },
    "test_csplinep": {
      "start_point": [
        476,
        0
      ],
      "end_point": [
        656,
        1
      ],
      "strings": [
        "\"cspline periodic sine interpolation\""
      ]
    },
    "test_csplinep2": {
      "start_point": [
        658,
        0
      ],
      "end_point": [
        941,
        1
      ],
      "strings": [
        "\"cspline periodic 3pt interpolation\""
      ]
    },
    "test_akima": {
      "start_point": [
        943,
        0
      ],
      "end_point": [
        963,
        1
      ],
      "strings": [
        "\"akima interpolation\""
      ]
    },
    "test_steffen1": {
      "start_point": [
        965,
        0
      ],
      "end_point": [
        986,
        1
      ],
      "strings": [
        "\"steffen interpolation test 1\""
      ]
    },
    "test_steffen2": {
      "start_point": [
        988,
        0
      ],
      "end_point": [
        1205,
        1
      ],
      "strings": [
        "\"steffen interpolation test 2\""
      ]
    },
    "main": {
      "start_point": [
        1207,
        0
      ],
      "end_point": [
        1232,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/interpolation/test2d.c": {
    "test_single_low_level": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": [
        "\"low level %s %d\"",
        "\"low level _e %s %d\""
      ]
    },
    "test_single_high_level": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": [
        "\"high level %s %d\"",
        "\"high level _e %s %d\""
      ]
    },
    "test_interp2d": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": [
        "\"gsl_interp2d_type_min_size on %s\""
      ]
    },
    "test_bilinear_symmetric": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": [
        "\"bilinear interpolation with symmetric values\""
      ]
    },
    "test_bilinear_asymmetric_z": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": [
        "\"bilinear interpolation with asymmetric z values\""
      ]
    },
    "test_bicubic": {
      "start_point": [
        238,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": [
        "\"bicubic interpolation on linear function\""
      ]
    },
    "test_bicubic_nonlinear": {
      "start_point": [
        263,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": [
        "\"bicubic interpolation on nonlinear symmetric function\""
      ]
    },
    "test_bicubic_nonlinear_nonsq": {
      "start_point": [
        297,
        0
      ],
      "end_point": [
        328,
        1
      ],
      "strings": [
        "\"bicubic interpolation on nonlinear symmetric function\""
      ]
    },
    "test_interp2d_main": {
      "start_point": [
        331,
        0
      ],
      "end_point": [
        343,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/apply_givens.c": {
    "apply_givens_qr": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "apply_givens_lq": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/balance.c": {
    "gsl_linalg_balance_columns": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": [
        "\"length of D must match second dimension of A\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/balancemat.c": {
    "gsl_linalg_balance_matrix": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": [
        "\"vector must match matrix size\""
      ]
    },
    "gsl_linalg_balance_accum": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": [
        "\"vector must match matrix size\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/bidiag.c": {
    "gsl_linalg_bidiag_decomp": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": [
        "\"bidiagonal decomposition requires M>=N\"",
        "\"size of tau_U must be N\"",
        "\"size of tau_V must be (N - 1)\""
      ]
    },
    "gsl_linalg_bidiag_unpack": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": [
        "\"matrix A must have M >= N\"",
        "\"size of tau must be MIN(M,N)\"",
        "\"size of tau must be MIN(M,N) - 1\"",
        "\"size of U must be M x N\"",
        "\"size of V must be N x N\"",
        "\"size of diagonal must match size of A\"",
        "\"size of subdiagonal must be (diagonal size - 1)\""
      ]
    },
    "gsl_linalg_bidiag_unpack2": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        320,
        1
      ],
      "strings": [
        "\"matrix A must have M >= N\"",
        "\"size of tau must be MIN(M,N)\"",
        "\"size of tau must be MIN(M,N) - 1\"",
        "\"size of V must be N x N\""
      ]
    },
    "gsl_linalg_bidiag_unpack_B": {
      "start_point": [
        323,
        0
      ],
      "end_point": [
        363,
        1
      ],
      "strings": [
        "\"size of diagonal must match size of A\"",
        "\"size of subdiagonal must be (matrix size - 1)\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/cholesky.c": {
    "gsl_linalg_cholesky_decomp": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "gsl_linalg_cholesky_decomp1": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"cholesky decomposition requires square matrix\"",
        "\"matrix is not positive definite\""
      ]
    },
    "gsl_linalg_cholesky_solve": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_cholesky_svx": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_cholesky_solve_mat": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\"",
        "\"matrix size must match B size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_cholesky_svx_mat": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_cholesky_invert": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        308,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\""
      ]
    },
    "gsl_linalg_cholesky_decomp_unit": {
      "start_point": [
        310,
        0
      ],
      "end_point": [
        348,
        1
      ],
      "strings": []
    },
    "gsl_linalg_cholesky_scale": {
      "start_point": [
        367,
        0
      ],
      "end_point": [
        398,
        1
      ],
      "strings": [
        "\"A is not a square matrix\"",
        "\"S must have length N\""
      ]
    },
    "gsl_linalg_cholesky_scale_apply": {
      "start_point": [
        412,
        0
      ],
      "end_point": [
        445,
        1
      ],
      "strings": [
        "\"A is not a square matrix\"",
        "\"S must have length N\""
      ]
    },
    "gsl_linalg_cholesky_decomp2": {
      "start_point": [
        447,
        0
      ],
      "end_point": [
        482,
        1
      ],
      "strings": [
        "\"cholesky decomposition requires square matrix\"",
        "\"S must have length N\""
      ]
    },
    "gsl_linalg_cholesky_svx2": {
      "start_point": [
        484,
        0
      ],
      "end_point": [
        517,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\"",
        "\"matrix size must match S\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_cholesky_solve2": {
      "start_point": [
        519,
        0
      ],
      "end_point": [
        552,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\"",
        "\"matrix size must match S size\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_cholesky_rcond": {
      "start_point": [
        554,
        0
      ],
      "end_point": [
        592,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\"",
        "\"work vector must have length 3*N\""
      ]
    },
    "cholesky_norm1": {
      "start_point": [
        596,
        0
      ],
      "end_point": [
        632,
        1
      ],
      "strings": []
    },
    "cholesky_Ainv": {
      "start_point": [
        635,
        0
      ],
      "end_point": [
        654,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/choleskyc.c": {
    "gsl_linalg_complex_cholesky_decomp": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": [
        "\"cholesky decomposition requires square matrix\"",
        "\"matrix is not positive definite\""
      ]
    },
    "gsl_linalg_complex_cholesky_solve": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_complex_cholesky_svx": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_complex_cholesky_invert": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\""
      ]
    },
    "cholesky_complex_conj_vector": {
      "start_point": [
        311,
        0
      ],
      "end_point": [
        321,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/cholesky_common.c": {
    "cholesky_swap_rowcol": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/cod.c": {
    "gsl_linalg_COD_decomp_e": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": [
        "\"size of tau_Q must be MIN(M,N)\"",
        "\"size of tau_Z must be MIN(M,N)\"",
        "\"permutation size must be N\"",
        "\"work size must be N\""
      ]
    },
    "gsl_linalg_COD_decomp": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "gsl_linalg_COD_lssolve": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": [
        "\"QRZT matrix must have M>=N\"",
        "\"matrix size must match b size\"",
        "\"rank must be <= MIN(M,N)\"",
        "\"matrix size must match solution size\"",
        "\"matrix size must match residual size\""
      ]
    },
    "gsl_linalg_COD_lssolve2": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        292,
        1
      ],
      "strings": [
        "\"QRZT matrix must have M>=N\"",
        "\"matrix size must match b size\"",
        "\"rank must be <= MIN(M,N)\"",
        "\"matrix size must match solution size\"",
        "\"matrix size must match residual size\"",
        "\"S must be rank-by-rank\"",
        "\"work must be length rank\""
      ]
    },
    "gsl_linalg_COD_unpack": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        374,
        1
      ],
      "strings": [
        "\"size of tau_Q must be MIN(M,N)\"",
        "\"size of tau_Z must be MIN(M,N)\"",
        "\"rank must be <= MIN(M,N)\"",
        "\"Q must by M-by-M\"",
        "\"R must by M-by-N\"",
        "\"Z must by N-by-N\""
      ]
    },
    "gsl_linalg_COD_matZ": {
      "start_point": [
        388,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": [
        "\"tau_Z must be GSL_MIN(M,N)\"",
        "\"QRZT must have N columns\"",
        "\"workspace must be length M\""
      ]
    },
    "cod_RZ": {
      "start_point": [
        451,
        0
      ],
      "end_point": [
        496,
        1
      ],
      "strings": [
        "\"tau has wrong size\"",
        "\"N must be >= M\""
      ]
    },
    "cod_householder_transform": {
      "start_point": [
        498,
        0
      ],
      "end_point": [
        529,
        1
      ],
      "strings": []
    },
    "cod_householder_hv": {
      "start_point": [
        546,
        0
      ],
      "end_point": [
        575,
        1
      ],
      "strings": []
    },
    "cod_householder_mh": {
      "start_point": [
        590,
        0
      ],
      "end_point": [
        620,
        1
      ],
      "strings": []
    },
    "cod_householder_Zvec": {
      "start_point": [
        633,
        0
      ],
      "end_point": [
        665,
        1
      ],
      "strings": [
        "\"tau_Z must be GSL_MIN(M,N)\"",
        "\"v must be length N\""
      ]
    },
    "cod_trireg_solve": {
      "start_point": [
        695,
        0
      ],
      "end_point": [
        793,
        1
      ],
      "strings": [
        "\"lambda must be positive\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/condest.c": {
    "gsl_linalg_tri_upper_rcond": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "gsl_linalg_tri_lower_rcond": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "gsl_linalg_invnorm1": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": [
        "\"work vector must have length 3*N\""
      ]
    },
    "condest_tri_rcond": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"work vector must have length 3*N\""
      ]
    },
    "condest_tri_norm1": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        264,
        1
      ],
      "strings": []
    },
    "condest_same_sign": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": []
    },
    "condest_invtriu": {
      "start_point": [
        285,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": []
    },
    "condest_invtril": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        298,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/exponential.c": {
    "sup_norm": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "obtain_suggestion": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "matrix_exp_series": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    },
    "gsl_linalg_exponential_ss": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": [
        "\"cannot exponentiate a non-square matrix\"",
        "\"exponential of matrix must have same dimension as matrix\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/gsl_linalg.h": {
    "gsl_linalg_givens": {
      "start_point": [
        737,
        0
      ],
      "end_point": [
        760,
        1
      ],
      "strings": []
    },
    "gsl_linalg_givens_gv": {
      "start_point": [
        762,
        0
      ],
      "end_point": [
        773,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/hermtd.c": {
    "gsl_linalg_hermtd_decomp": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": [
        "\"hermitian tridiagonal decomposition requires square matrix\"",
        "\"size of tau must be (matrix size - 1)\""
      ]
    },
    "gsl_linalg_hermtd_unpack": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"matrix A must be sqaure\"",
        "\"size of tau must be (matrix size - 1)\"",
        "\"size of U must match size of A\"",
        "\"size of diagonal must match size of A\"",
        "\"size of subdiagonal must be (matrix size - 1)\""
      ]
    },
    "gsl_linalg_hermtd_unpack_T": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": [
        "\"matrix A must be sqaure\"",
        "\"size of diagonal must match size of A\"",
        "\"size of subdiagonal must be (matrix size - 1)\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/hessenberg.c": {
    "gsl_linalg_hessenberg_decomp": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"Hessenberg reduction requires square matrix\"",
        "\"tau vector must match matrix size\""
      ]
    },
    "gsl_linalg_hessenberg_unpack": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "gsl_linalg_hessenberg_unpack_accum": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": [
        "\"Hessenberg reduction requires square matrix\"",
        "\"tau vector must match matrix size\"",
        "\"V matrix has wrong dimension\""
      ]
    },
    "gsl_linalg_hessenberg_set_zero": {
      "start_point": [
        277,
        0
      ],
      "end_point": [
        295,
        1
      ],
      "strings": []
    },
    "gsl_linalg_hessenberg_submatrix": {
      "start_point": [
        349,
        0
      ],
      "end_point": [
        432,
        1
      ],
      "strings": [
        "\"Hessenberg reduction requires square matrix\"",
        "\"tau vector must match matrix size\""
      ]
    },
    "gsl_linalg_hessenberg": {
      "start_point": [
        437,
        0
      ],
      "end_point": [
        441,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/hesstri.c": {
    "gsl_linalg_hesstri_decomp": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": [
        "\"Hessenberg-triangular reduction requires square matrices\"",
        "\"length of workspace must match matrix dimension\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/hh.c": {
    "gsl_linalg_HH_solve": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"System is underdetermined\"",
        "\"matrix and vector sizes must be equal\""
      ]
    },
    "gsl_linalg_HH_svx": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": [
        "\"System is underdetermined\"",
        "\"matrix and vector sizes must be equal\"",
        "\"could not allocate memory for workspace\"",
        "\"matrix is rank deficient\"",
        "\"apparent singularity detected\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/householder.c": {
    "gsl_linalg_householder_transform": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "gsl_linalg_householder_hm": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "gsl_linalg_householder_mh": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": []
    },
    "gsl_linalg_householder_hv": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        264,
        1
      ],
      "strings": []
    },
    "gsl_linalg_householder_hm1": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/householdercomplex.c": {
    "gsl_linalg_complex_householder_transform": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "gsl_linalg_complex_householder_hm": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "gsl_linalg_complex_householder_mh": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": []
    },
    "gsl_linalg_complex_householder_hv": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/inline.c": {},
  "gsl/gsl-2.5/linalg/invtri.c": {
    "gsl_linalg_tri_upper_invert": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "gsl_linalg_tri_lower_invert": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "gsl_linalg_tri_upper_unit_invert": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "gsl_linalg_tri_lower_unit_invert": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "triangular_inverse": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": [
        "\"matrix must be square\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/lq.c": {
    "gsl_linalg_LQ_decomp": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": [
        "\"size of tau must be MIN(M,N)\""
      ]
    },
    "gsl_linalg_LQ_solve_T": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": [
        "\"LQ matrix must be square\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_LQ_svx_T": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": [
        "\"LQ matrix must be square\"",
        "\"matrix size must match x/rhs size\""
      ]
    },
    "gsl_linalg_LQ_lssolve_T": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": [
        "\"LQ matrix must have M>=N\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\"",
        "\"matrix size must match residual size\""
      ]
    },
    "gsl_linalg_LQ_Lsolve_T": {
      "start_point": [
        248,
        0
      ],
      "end_point": [
        275,
        1
      ],
      "strings": [
        "\"LQ matrix must be square\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match x size\""
      ]
    },
    "gsl_linalg_LQ_Lsvx_T": {
      "start_point": [
        278,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": [
        "\"LQ matrix must be square\"",
        "\"matrix size must match rhs size\""
      ]
    },
    "gsl_linalg_L_solve_T": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        326,
        1
      ],
      "strings": [
        "\"R matrix must be square\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_LQ_vecQT": {
      "start_point": [
        331,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": [
        "\"size of tau must be MIN(M,N)\"",
        "\"vector size must be M\""
      ]
    },
    "gsl_linalg_LQ_vecQ": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": [
        "\"size of tau must be MIN(M,N)\"",
        "\"vector size must be M\""
      ]
    },
    "gsl_linalg_LQ_unpack": {
      "start_point": [
        400,
        0
      ],
      "end_point": [
        450,
        1
      ],
      "strings": [
        "\"Q matrix must be M x M\"",
        "\"R matrix must be N x M\"",
        "\"size of tau must be MIN(M,N)\""
      ]
    },
    "gsl_linalg_LQ_update": {
      "start_point": [
        465,
        0
      ],
      "end_point": [
        535,
        1
      ],
      "strings": [
        "\"Q matrix must be N x N if L is M x N\"",
        "\"w must be length N if L is M x N\"",
        "\"v must be length M if L is M x N\""
      ]
    },
    "gsl_linalg_LQ_LQsolve": {
      "start_point": [
        537,
        0
      ],
      "end_point": [
        563,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/lu.c": {
    "gsl_linalg_LU_decomp": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": [
        "\"LU decomposition requires square matrix\"",
        "\"permutation length must match matrix size\""
      ]
    },
    "gsl_linalg_LU_solve": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": [
        "\"LU matrix must be square\"",
        "\"permutation length must match matrix size\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\"",
        "\"matrix is singular\""
      ]
    },
    "gsl_linalg_LU_svx": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": [
        "\"LU matrix must be square\"",
        "\"permutation length must match matrix size\"",
        "\"matrix size must match solution/rhs size\"",
        "\"matrix is singular\""
      ]
    },
    "gsl_linalg_LU_refine": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        254,
        1
      ],
      "strings": [
        "\"matrix a must be square\"",
        "\"LU matrix must be square\"",
        "\"LU matrix must be decomposition of a\"",
        "\"permutation length must match matrix size\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\"",
        "\"matrix size must match workspace size\"",
        "\"matrix is singular\""
      ]
    },
    "gsl_linalg_LU_invert": {
      "start_point": [
        256,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": [
        "\"matrix is singular\""
      ]
    },
    "gsl_linalg_LU_det": {
      "start_point": [
        282,
        0
      ],
      "end_point": [
        295,
        1
      ],
      "strings": []
    },
    "gsl_linalg_LU_lndet": {
      "start_point": [
        298,
        0
      ],
      "end_point": [
        311,
        1
      ],
      "strings": []
    },
    "gsl_linalg_LU_sgndet": {
      "start_point": [
        313,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": []
    },
    "singular": {
      "start_point": [
        338,
        0
      ],
      "end_point": [
        350,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/luc.c": {
    "gsl_linalg_complex_LU_decomp": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"LU decomposition requires square matrix\"",
        "\"permutation length must match matrix size\""
      ]
    },
    "gsl_linalg_complex_LU_solve": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": [
        "\"LU matrix must be square\"",
        "\"permutation length must match matrix size\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\"",
        "\"matrix is singular\""
      ]
    },
    "gsl_linalg_complex_LU_svx": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"LU matrix must be square\"",
        "\"permutation length must match matrix size\"",
        "\"matrix size must match solution/rhs size\"",
        "\"matrix is singular\""
      ]
    },
    "gsl_linalg_complex_LU_refine": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": [
        "\"matrix a must be square\"",
        "\"LU matrix must be square\"",
        "\"LU matrix must be decomposition of a\"",
        "\"permutation length must match matrix size\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\"",
        "\"matrix size must match workspace size\"",
        "\"matrix is singular\""
      ]
    },
    "gsl_linalg_complex_LU_invert": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        293,
        1
      ],
      "strings": []
    },
    "gsl_linalg_complex_LU_det": {
      "start_point": [
        295,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": []
    },
    "gsl_linalg_complex_LU_lndet": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        326,
        1
      ],
      "strings": []
    },
    "gsl_linalg_complex_LU_sgndet": {
      "start_point": [
        329,
        0
      ],
      "end_point": [
        355,
        1
      ],
      "strings": []
    },
    "singular": {
      "start_point": [
        357,
        0
      ],
      "end_point": [
        369,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/mcholesky.c": {
    "gsl_linalg_mcholesky_decomp": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": [
        "\"LDLT decomposition requires square matrix\"",
        "\"permutation length must match matrix size\""
      ]
    },
    "gsl_linalg_mcholesky_solve": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": []
    },
    "gsl_linalg_mcholesky_svx": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    },
    "gsl_linalg_mcholesky_rcond": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    },
    "gsl_linalg_mcholesky_invert": {
      "start_point": [
        226,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": []
    },
    "mcholesky_maxabs": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/multiply.c": {
    "gsl_linalg_matmult": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"matrix sizes are not conformant\""
      ]
    },
    "gsl_linalg_matmult_mod": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": [
        "\"matrix sizes are not conformant\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/pcholesky.c": {
    "pcholesky_decomp": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": [
        "\"LDLT decomposition requires square matrix\"",
        "\"permutation length must match matrix size\""
      ]
    },
    "gsl_linalg_pcholesky_decomp": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "gsl_linalg_pcholesky_solve": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": [
        "\"LDLT matrix must be square\"",
        "\"matrix size must match permutation size\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_pcholesky_svx": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": [
        "\"LDLT matrix must be square\"",
        "\"matrix size must match permutation size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_pcholesky_decomp2": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": [
        "\"cholesky decomposition requires square matrix\"",
        "\"matrix size must match permutation size\"",
        "\"S must have length N\""
      ]
    },
    "gsl_linalg_pcholesky_solve2": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        311,
        1
      ],
      "strings": [
        "\"LDLT matrix must be square\"",
        "\"matrix size must match permutation size\"",
        "\"matrix size must match S\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_pcholesky_svx2": {
      "start_point": [
        313,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": [
        "\"LDLT matrix must be square\"",
        "\"matrix size must match permutation size\"",
        "\"matrix size must match S\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_pcholesky_invert": {
      "start_point": [
        366,
        0
      ],
      "end_point": [
        468,
        1
      ],
      "strings": [
        "\"LDLT matrix must be square\"",
        "\"matrix size must match permutation size\"",
        "\"Ainv matrix must be square\"",
        "\"Ainv matrix has wrong dimensions\""
      ]
    },
    "gsl_linalg_pcholesky_rcond": {
      "start_point": [
        470,
        0
      ],
      "end_point": [
        512,
        1
      ],
      "strings": [
        "\"cholesky matrix must be square\"",
        "\"work vector must have length 3*N\""
      ]
    },
    "cholesky_LDLT_norm1": {
      "start_point": [
        525,
        0
      ],
      "end_point": [
        579,
        1
      ],
      "strings": []
    },
    "cholesky_LDLT_Ainv": {
      "start_point": [
        582,
        0
      ],
      "end_point": [
        593,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/ptlq.c": {
    "gsl_linalg_PTLQ_decomp": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": [
        "\"size of tau must be MIN(M,N)\"",
        "\"permutation size must be N\"",
        "\"norm size must be N\""
      ]
    },
    "gsl_linalg_PTLQ_decomp2": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": [
        "\"q must be M x M\"",
        "\"r must be N x M\"",
        "\"size of tau must be MIN(M,N)\"",
        "\"permutation size must be N\"",
        "\"norm size must be N\""
      ]
    },
    "gsl_linalg_PTLQ_solve_T": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": [
        "\"QR matrix must be square\"",
        "\"matrix size must match permutation size\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_PTLQ_svx_T": {
      "start_point": [
        275,
        0
      ],
      "end_point": [
        307,
        1
      ],
      "strings": [
        "\"LQ matrix must be square\"",
        "\"matrix size must match permutation size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_PTLQ_LQsolve_T": {
      "start_point": [
        310,
        0
      ],
      "end_point": [
        341,
        1
      ],
      "strings": []
    },
    "gsl_linalg_PTLQ_Lsolve_T": {
      "start_point": [
        343,
        0
      ],
      "end_point": [
        379,
        1
      ],
      "strings": [
        "\"LQ matrix must be square\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match x size\"",
        "\"permutation size must match x size\""
      ]
    },
    "gsl_linalg_PTLQ_Lsvx_T": {
      "start_point": [
        382,
        0
      ],
      "end_point": [
        409,
        1
      ],
      "strings": [
        "\"LQ matrix must be square\"",
        "\"matrix size must match x size\"",
        "\"permutation size must match x size\""
      ]
    },
    "gsl_linalg_PTLQ_update": {
      "start_point": [
        426,
        0
      ],
      "end_point": [
        491,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/qr.c": {
    "gsl_linalg_QR_decomp": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"size of tau must be MIN(M,N)\""
      ]
    },
    "gsl_linalg_QR_solve": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": [
        "\"QR matrix must be square\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_QR_svx": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": [
        "\"QR matrix must be square\"",
        "\"matrix size must match x/rhs size\""
      ]
    },
    "gsl_linalg_QR_lssolve": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": [
        "\"QR matrix must have M>=N\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\"",
        "\"matrix size must match residual size\""
      ]
    },
    "gsl_linalg_QR_Rsolve": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": [
        "\"QR matrix must be square\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match x size\""
      ]
    },
    "gsl_linalg_QR_Rsvx": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": [
        "\"QR matrix must be square\"",
        "\"matrix size must match rhs size\""
      ]
    },
    "gsl_linalg_R_solve": {
      "start_point": [
        275,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": [
        "\"R matrix must be square\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_R_svx": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        323,
        1
      ],
      "strings": [
        "\"R matrix must be square\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_QR_QTvec": {
      "start_point": [
        330,
        0
      ],
      "end_point": [
        360,
        1
      ],
      "strings": [
        "\"size of tau must be MIN(M,N)\"",
        "\"vector size must be M\""
      ]
    },
    "gsl_linalg_QR_Qvec": {
      "start_point": [
        363,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": [
        "\"size of tau must be MIN(M,N)\"",
        "\"vector size must be M\""
      ]
    },
    "gsl_linalg_QR_QTmat": {
      "start_point": [
        398,
        0
      ],
      "end_point": [
        428,
        1
      ],
      "strings": [
        "\"size of tau must be MIN(M,N)\"",
        "\"matrix must have M rows\""
      ]
    },
    "gsl_linalg_QR_matQ": {
      "start_point": [
        431,
        0
      ],
      "end_point": [
        461,
        1
      ],
      "strings": [
        "\"size of tau must be MIN(M,N)\"",
        "\"matrix must have M columns\""
      ]
    },
    "gsl_linalg_QR_unpack": {
      "start_point": [
        465,
        0
      ],
      "end_point": [
        514,
        1
      ],
      "strings": [
        "\"Q matrix must be M x M\"",
        "\"R matrix must be M x N\"",
        "\"size of tau must be MIN(M,N)\""
      ]
    },
    "gsl_linalg_QR_update": {
      "start_point": [
        529,
        0
      ],
      "end_point": [
        599,
        1
      ],
      "strings": [
        "\"Q matrix must be M x M if R is M x N\"",
        "\"w must be length M if R is M x N\"",
        "\"v must be length N if R is M x N\""
      ]
    },
    "gsl_linalg_QR_QRsolve": {
      "start_point": [
        601,
        0
      ],
      "end_point": [
        627,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/qrpt.c": {
    "gsl_linalg_QRPT_decomp": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"size of tau must be MIN(M,N)\"",
        "\"permutation size must be N\"",
        "\"norm size must be N\""
      ]
    },
    "gsl_linalg_QRPT_decomp2": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": [
        "\"q must be M x M\"",
        "\"r must be M x N\"",
        "\"size of tau must be MIN(M,N)\"",
        "\"permutation size must be N\"",
        "\"norm size must be N\""
      ]
    },
    "gsl_linalg_QRPT_solve": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": [
        "\"QR matrix must be square\"",
        "\"matrix size must match permutation size\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_QRPT_svx": {
      "start_point": [
        268,
        0
      ],
      "end_point": [
        300,
        1
      ],
      "strings": [
        "\"QR matrix must be square\"",
        "\"matrix size must match permutation size\"",
        "\"matrix size must match solution size\""
      ]
    },
    "gsl_linalg_QRPT_lssolve": {
      "start_point": [
        310,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    },
    "gsl_linalg_QRPT_lssolve2": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": [
        "\"QR matrix must have M>=N\"",
        "\"matrix size must match b size\"",
        "\"rank must have 0 < rank <= N\"",
        "\"matrix size must match solution size\"",
        "\"matrix size must match residual size\""
      ]
    },
    "gsl_linalg_QRPT_QRsolve": {
      "start_point": [
        384,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": []
    },
    "gsl_linalg_QRPT_Rsolve": {
      "start_point": [
        417,
        0
      ],
      "end_point": [
        453,
        1
      ],
      "strings": [
        "\"QR matrix must be square\"",
        "\"matrix size must match b size\"",
        "\"matrix size must match x size\"",
        "\"permutation size must match x size\""
      ]
    },
    "gsl_linalg_QRPT_Rsvx": {
      "start_point": [
        456,
        0
      ],
      "end_point": [
        483,
        1
      ],
      "strings": [
        "\"QR matrix must be square\"",
        "\"matrix size must match x size\"",
        "\"permutation size must match x size\""
      ]
    },
    "gsl_linalg_QRPT_update": {
      "start_point": [
        498,
        0
      ],
      "end_point": [
        570,
        1
      ],
      "strings": [
        "\"Q matrix must be M x M if R is M x N\"",
        "\"w must be length M if R is M x N\"",
        "\"v must be length N if R is M x N\""
      ]
    },
    "gsl_linalg_QRPT_rank": {
      "start_point": [
        584,
        0
      ],
      "end_point": [
        617,
        1
      ],
      "strings": []
    },
    "gsl_linalg_QRPT_rcond": {
      "start_point": [
        619,
        0
      ],
      "end_point": [
        642,
        1
      ],
      "strings": [
        "\"M must be >= N\"",
        "\"work vector must have length 3*N\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/svd.c": {
    "gsl_linalg_SV_decomp": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        267,
        1
      ],
      "strings": [
        "\"svd of MxN matrix, M<N, is not implemented\"",
        "\"square matrix V must match second dimension of matrix A\"",
        "\"matrix V must be square\"",
        "\"length of vector S must match second dimension of matrix A\"",
        "\"length of workspace must match second dimension of matrix A\"",
        "\"SVD decomposition failed to converge\""
      ]
    },
    "gsl_linalg_SV_decomp_mod": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        408,
        1
      ],
      "strings": [
        "\"svd of MxN matrix, M<N, is not implemented\"",
        "\"square matrix V must match second dimension of matrix A\"",
        "\"matrix V must be square\"",
        "\"square matrix X must match second dimension of matrix A\"",
        "\"matrix X must be square\"",
        "\"length of vector S must match second dimension of matrix A\"",
        "\"length of workspace must match second dimension of matrix A\""
      ]
    },
    "gsl_linalg_SV_solve": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        472,
        1
      ],
      "strings": [
        "\"first dimension of matrix U must size of vector b\"",
        "\"length of vector S must match second dimension of matrix U\"",
        "\"matrix V must be square\"",
        "\"length of vector S must match size of matrix V\"",
        "\"size of matrix V must match size of vector x\""
      ]
    },
    "gsl_linalg_SV_leverage": {
      "start_point": [
        486,
        0
      ],
      "end_point": [
        511,
        1
      ],
      "strings": [
        "\"first dimension of matrix U must match size of vector h\""
      ]
    },
    "gsl_linalg_SV_decomp_jacobi": {
      "start_point": [
        534,
        0
      ],
      "end_point": [
        716,
        1
      ],
      "strings": [
        "\"svd of MxN matrix, M<N, is not implemented\"",
        "\"square matrix Q must match second dimension of matrix A\"",
        "\"matrix Q must be square\"",
        "\"length of vector S must match second dimension of matrix A\"",
        "\"Jacobi iterations did not reach desired tolerance\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/svdstep.c": {
    "chop_small_elements": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "trailing_eigenvalue": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "create_schur": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "svd2": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        295,
        1
      ],
      "strings": []
    },
    "chase_out_intermediate_zero": {
      "start_point": [
        298,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": []
    },
    "chase_out_trailing_zero": {
      "start_point": [
        356,
        0
      ],
      "end_point": [
        412,
        1
      ],
      "strings": []
    },
    "qrstep": {
      "start_point": [
        414,
        0
      ],
      "end_point": [
        602,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/symmtd.c": {
    "gsl_linalg_symmtd_decomp": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": [
        "\"symmetric tridiagonal decomposition requires square matrix\"",
        "\"size of tau must be (matrix size - 1)\""
      ]
    },
    "gsl_linalg_symmtd_unpack": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"size of tau must be (matrix size - 1)\"",
        "\"size of Q must match size of A\"",
        "\"size of diagonal must match size of A\"",
        "\"size of subdiagonal must be (matrix size - 1)\""
      ]
    },
    "gsl_linalg_symmtd_unpack_T": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": [
        "\"matrix A must be square\"",
        "\"size of diagonal must match size of A\"",
        "\"size of subdiagonal must be (matrix size - 1)\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/test.c": {
    "check": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "vector_alloc": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "vector_free": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": []
    },
    "create_hilbert_matrix": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    },
    "create_general_matrix": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "create_singular_matrix": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    },
    "create_vandermonde_matrix": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": []
    },
    "create_moler_matrix": {
      "start_point": [
        215,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "create_complex_matrix": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "create_row_matrix": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    },
    "create_2x2_matrix": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": []
    },
    "create_diagonal_matrix": {
      "start_point": [
        265,
        0
      ],
      "end_point": [
        275,
        1
      ],
      "strings": []
    },
    "rand_double": {
      "start_point": [
        277,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": []
    },
    "create_sparse_matrix": {
      "start_point": [
        283,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": []
    },
    "create_tri_matrix": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        341,
        1
      ],
      "strings": []
    },
    "test_LU_solve_dim": {
      "start_point": [
        410,
        0
      ],
      "end_point": [
        452,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\"",
        "\"%3lu[%lu]: %22.18g   %22.18g (improved)\\n\""
      ]
    },
    "test_LU_solve": {
      "start_point": [
        455,
        0
      ],
      "end_point": [
        493,
        1
      ],
      "strings": [
        "\"  LU_solve hilbert(2)\"",
        "\"  LU_solve hilbert(3)\"",
        "\"  LU_solve hilbert(4)\"",
        "\"  LU_solve hilbert(12)\"",
        "\"  LU_solve vander(2)\"",
        "\"  LU_solve vander(3)\"",
        "\"  LU_solve vander(4)\"",
        "\"  LU_solve vander(12)\""
      ]
    },
    "test_LUc_solve_dim": {
      "start_point": [
        496,
        0
      ],
      "end_point": [
        548,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\"",
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\"",
        "\"%3lu[%lu]: %22.18g   %22.18g (improved)\\n\"",
        "\"%3lu[%lu]: %22.18g   %22.18g (improved)\\n\""
      ]
    },
    "test_LUc_solve": {
      "start_point": [
        551,
        0
      ],
      "end_point": [
        561,
        1
      ],
      "strings": [
        "\"  complex_LU_solve complex(7)\""
      ]
    },
    "test_QR_solve_dim": {
      "start_point": [
        564,
        0
      ],
      "end_point": [
        593,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_QR_solve": {
      "start_point": [
        595,
        0
      ],
      "end_point": [
        633,
        1
      ],
      "strings": [
        "\"  QR_solve hilbert(2)\"",
        "\"  QR_solve hilbert(3)\"",
        "\"  QR_solve hilbert(4)\"",
        "\"  QR_solve hilbert(12)\"",
        "\"  QR_solve vander(2)\"",
        "\"  QR_solve vander(3)\"",
        "\"  QR_solve vander(4)\"",
        "\"  QR_solve vander(12)\""
      ]
    },
    "test_QR_QRsolve_dim": {
      "start_point": [
        636,
        0
      ],
      "end_point": [
        669,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_QR_QRsolve": {
      "start_point": [
        671,
        0
      ],
      "end_point": [
        709,
        1
      ],
      "strings": [
        "\"  QR_QRsolve hilbert(2)\"",
        "\"  QR_QRsolve hilbert(3)\"",
        "\"  QR_QRsolve hilbert(4)\"",
        "\"  QR_QRsolve hilbert(12)\"",
        "\"  QR_QRsolve vander(2)\"",
        "\"  QR_QRsolve vander(3)\"",
        "\"  QR_QRsolve vander(4)\"",
        "\"  QR_QRsolve vander(12)\""
      ]
    },
    "test_QR_lssolve_dim": {
      "start_point": [
        712,
        0
      ],
      "end_point": [
        762,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\"",
        "\"(%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_QR_lssolve": {
      "start_point": [
        764,
        0
      ],
      "end_point": [
        806,
        1
      ],
      "strings": [
        "\"  QR_lssolve m(5,3)\"",
        "\"  QR_lssolve hilbert(2)\"",
        "\"  QR_lssolve hilbert(3)\"",
        "\"  QR_lssolve hilbert(4)\"",
        "\"  QR_lssolve hilbert(12)\"",
        "\"  QR_lssolve vander(2)\"",
        "\"  QR_lssolve vander(3)\"",
        "\"  QR_lssolve vander(4)\"",
        "\"  QR_lssolve vander(12)\""
      ]
    },
    "test_QR_decomp_dim": {
      "start_point": [
        809,
        0
      ],
      "end_point": [
        848,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_QR_decomp": {
      "start_point": [
        850,
        0
      ],
      "end_point": [
        896,
        1
      ],
      "strings": [
        "\"  QR_decomp m(3,5)\"",
        "\"  QR_decomp m(5,3)\"",
        "\"  QR_decomp hilbert(2)\"",
        "\"  QR_decomp hilbert(3)\"",
        "\"  QR_decomp hilbert(4)\"",
        "\"  QR_decomp hilbert(12)\"",
        "\"  QR_decomp vander(2)\"",
        "\"  QR_decomp vander(3)\"",
        "\"  QR_decomp vander(4)\"",
        "\"  QR_decomp vander(12)\""
      ]
    },
    "test_QRPT_lssolve_dim": {
      "start_point": [
        898,
        0
      ],
      "end_point": [
        963,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\"",
        "\"(%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_QRPT_lssolve": {
      "start_point": [
        965,
        0
      ],
      "end_point": [
        1008,
        1
      ],
      "strings": [
        "\"  QRPT_lssolve m(5,3)\"",
        "\"  QRPT_lssolve hilbert(2)\"",
        "\"  QRPT_lssolve hilbert(3)\"",
        "\"  QRPT_lssolve hilbert(4)\"",
        "\"  QRPT_lssolve hilbert(12)\"",
        "\"  QRPT_lssolve vander(2)\"",
        "\"  QRPT_lssolve vander(3)\"",
        "\"  QRPT_lssolve vander(4)\"",
        "\"  QRPT_lssolve vander(12)\""
      ]
    },
    "test_QRPT_lssolve2_dim": {
      "start_point": [
        1010,
        0
      ],
      "end_point": [
        1082,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\"",
        "\"(%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_QRPT_lssolve2": {
      "start_point": [
        1084,
        0
      ],
      "end_point": [
        1127,
        1
      ],
      "strings": [
        "\"  QRPT_lssolve2 m(5,3)\"",
        "\"  QRPT_lssolve2 hilbert(2)\"",
        "\"  QRPT_lssolve2 hilbert(3)\"",
        "\"  QRPT_lssolve2 hilbert(4)\"",
        "\"  QRPT_lssolve2 hilbert(12)\"",
        "\"  QRPT_lssolve2 vander(2)\"",
        "\"  QRPT_lssolve2 vander(3)\"",
        "\"  QRPT_lssolve2 vander(4)\"",
        "\"  QRPT_lssolve2 vander(12)\""
      ]
    },
    "test_QRPT_solve_dim": {
      "start_point": [
        1129,
        0
      ],
      "end_point": [
        1163,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_QRPT_solve": {
      "start_point": [
        1165,
        0
      ],
      "end_point": [
        1203,
        1
      ],
      "strings": [
        "\"  QRPT_solve hilbert(2)\"",
        "\"  QRPT_solve hilbert(3)\"",
        "\"  QRPT_solve hilbert(4)\"",
        "\"  QRPT_solve hilbert(12)\"",
        "\"  QRPT_solve vander(2)\"",
        "\"  QRPT_solve vander(3)\"",
        "\"  QRPT_solve vander(4)\"",
        "\"  QRPT_solve vander(12)\""
      ]
    },
    "test_QRPT_QRsolve_dim": {
      "start_point": [
        1205,
        0
      ],
      "end_point": [
        1243,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_QRPT_QRsolve": {
      "start_point": [
        1245,
        0
      ],
      "end_point": [
        1283,
        1
      ],
      "strings": [
        "\"  QRPT_QRsolve hilbert(2)\"",
        "\"  QRPT_QRsolve hilbert(3)\"",
        "\"  QRPT_QRsolve hilbert(4)\"",
        "\"  QRPT_QRsolve hilbert(12)\"",
        "\"  QRPT_QRsolve vander(2)\"",
        "\"  QRPT_QRsolve vander(3)\"",
        "\"  QRPT_QRsolve vander(4)\"",
        "\"  QRPT_QRsolve vander(12)\""
      ]
    },
    "test_QRPT_decomp_dim": {
      "start_point": [
        1285,
        0
      ],
      "end_point": [
        1353,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\"",
        "\"QRPT_rcond (%3lu,%3lu): %22.18g   %22.18g\\n\""
      ]
    },
    "test_QRPT_decomp": {
      "start_point": [
        1355,
        0
      ],
      "end_point": [
        1410,
        1
      ],
      "strings": [
        "\"  QRPT_decomp m(3,5)\"",
        "\"  QRPT_decomp m(5,3)\"",
        "\"  QRPT_decomp s(3,5)\"",
        "\"  QRPT_decomp s(5,3)\"",
        "\"  QRPT_decomp hilbert(2)\"",
        "\"  QRPT_decomp hilbert(3)\"",
        "\"  QRPT_decomp hilbert(4)\"",
        "\"  QRPT_decomp hilbert(12)\"",
        "\"  QRPT_decomp vander(2)\"",
        "\"  QRPT_decomp vander(3)\"",
        "\"  QRPT_decomp vander(4)\"",
        "\"  QRPT_decomp vander(12)\""
      ]
    },
    "test_QR_update_dim": {
      "start_point": [
        1413,
        0
      ],
      "end_point": [
        1508,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_QR_update": {
      "start_point": [
        1510,
        0
      ],
      "end_point": [
        1556,
        1
      ],
      "strings": [
        "\"  QR_update m(3,5)\"",
        "\"  QR_update m(5,3)\"",
        "\"  QR_update hilbert(2)\"",
        "\"  QR_update hilbert(3)\"",
        "\"  QR_update hilbert(4)\"",
        "\"  QR_update hilbert(12)\"",
        "\"  QR_update vander(2)\"",
        "\"  QR_update vander(3)\"",
        "\"  QR_update vander(4)\"",
        "\"  QR_update vander(12)\""
      ]
    },
    "test_QRPT_update_dim": {
      "start_point": [
        1559,
        0
      ],
      "end_point": [
        1665,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_QRPT_update": {
      "start_point": [
        1667,
        0
      ],
      "end_point": [
        1713,
        1
      ],
      "strings": [
        "\"  QRPT_update m(3,5)\"",
        "\"  QRPT_update m(5,3)\"",
        "\"  QRPT_update hilbert(2)\"",
        "\"  QRPT_update hilbert(3)\"",
        "\"  QRPT_update hilbert(4)\"",
        "\"  QRPT_update hilbert(12)\"",
        "\"  QRPT_update vander(2)\"",
        "\"  QRPT_update vander(3)\"",
        "\"  QRPT_update vander(4)\"",
        "\"  QRPT_update vander(12)\""
      ]
    },
    "test_LQ_solve_dim": {
      "start_point": [
        1715,
        0
      ],
      "end_point": [
        1744,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_LQ_solve": {
      "start_point": [
        1746,
        0
      ],
      "end_point": [
        1784,
        1
      ],
      "strings": [
        "\"  LQ_solve hilbert(2)\"",
        "\"  LQ_solve hilbert(3)\"",
        "\"  LQ_solve hilbert(4)\"",
        "\"  LQ_solve hilbert(12)\"",
        "\"  LQ_solve vander(2)\"",
        "\"  LQ_solve vander(3)\"",
        "\"  LQ_solve vander(4)\"",
        "\"  LQ_solve vander(12)\""
      ]
    },
    "test_LQ_LQsolve_dim": {
      "start_point": [
        1789,
        0
      ],
      "end_point": [
        1823,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_LQ_LQsolve": {
      "start_point": [
        1825,
        0
      ],
      "end_point": [
        1863,
        1
      ],
      "strings": [
        "\"  LQ_LQsolve hilbert(2)\"",
        "\"  LQ_LQsolve hilbert(3)\"",
        "\"  LQ_LQsolve hilbert(4)\"",
        "\"  LQ_LQsolve hilbert(12)\"",
        "\"  LQ_LQsolve vander(2)\"",
        "\"  LQ_LQsolve vander(3)\"",
        "\"  LQ_LQsolve vander(4)\"",
        "\"  LQ_LQsolve vander(12)\""
      ]
    },
    "test_LQ_lssolve_dim": {
      "start_point": [
        1866,
        0
      ],
      "end_point": [
        1917,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\"",
        "\"(%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_LQ_lssolve": {
      "start_point": [
        1919,
        0
      ],
      "end_point": [
        1961,
        1
      ],
      "strings": [
        "\"  LQ_lssolve m(5,3)\"",
        "\"  LQ_lssolve hilbert(2)\"",
        "\"  LQ_lssolve hilbert(3)\"",
        "\"  LQ_lssolve hilbert(4)\"",
        "\"  LQ_lssolve hilbert(12)\"",
        "\"  LQ_lssolve vander(2)\"",
        "\"  LQ_lssolve vander(3)\"",
        "\"  LQ_lssolve vander(4)\"",
        "\"  LQ_lssolve vander(12)\""
      ]
    },
    "test_LQ_decomp_dim": {
      "start_point": [
        1970,
        0
      ],
      "end_point": [
        2009,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_LQ_decomp": {
      "start_point": [
        2011,
        0
      ],
      "end_point": [
        2057,
        1
      ],
      "strings": [
        "\"  LQ_decomp m(3,5)\"",
        "\"  LQ_decomp m(5,3)\"",
        "\"  LQ_decomp hilbert(2)\"",
        "\"  LQ_decomp hilbert(3)\"",
        "\"  LQ_decomp hilbert(4)\"",
        "\"  LQ_decomp hilbert(12)\"",
        "\"  LQ_decomp vander(2)\"",
        "\"  LQ_decomp vander(3)\"",
        "\"  LQ_decomp vander(4)\"",
        "\"  LQ_decomp vander(12)\""
      ]
    },
    "test_PTLQ_solve_dim": {
      "start_point": [
        2062,
        0
      ],
      "end_point": [
        2096,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_PTLQ_solve": {
      "start_point": [
        2098,
        0
      ],
      "end_point": [
        2136,
        1
      ],
      "strings": [
        "\"  PTLQ_solve hilbert(2)\"",
        "\"  PTLQ_solve hilbert(3)\"",
        "\"  PTLQ_solve hilbert(4)\"",
        "\"  PTLQ_solve hilbert(12)\"",
        "\"  PTLQ_solve vander(2)\"",
        "\"  PTLQ_solve vander(3)\"",
        "\"  PTLQ_solve vander(4)\"",
        "\"  PTLQ_solve vander(12)\""
      ]
    },
    "test_PTLQ_LQsolve_dim": {
      "start_point": [
        2139,
        0
      ],
      "end_point": [
        2175,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_PTLQ_LQsolve": {
      "start_point": [
        2177,
        0
      ],
      "end_point": [
        2215,
        1
      ],
      "strings": [
        "\"  PTLQ_LQsolve hilbert(2)\"",
        "\"  PTLQ_LQsolve hilbert(3)\"",
        "\"  PTLQ_LQsolve hilbert(4)\"",
        "\"  PTLQ_LQsolve hilbert(12)\"",
        "\"  PTLQ_LQsolve vander(2)\"",
        "\"  PTLQ_LQsolve vander(3)\"",
        "\"  PTLQ_LQsolve vander(4)\"",
        "\"  PTLQ_LQsolve vander(12)\""
      ]
    },
    "test_PTLQ_decomp_dim": {
      "start_point": [
        2218,
        0
      ],
      "end_point": [
        2270,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_PTLQ_decomp": {
      "start_point": [
        2272,
        0
      ],
      "end_point": [
        2326,
        1
      ],
      "strings": [
        "\"  PTLQ_decomp m(3,5)\"",
        "\"  PTLQ_decomp m(5,3)\"",
        "\"  PTLQ_decomp s(3,5)\"",
        "\"  PTLQ_decomp s(5,3)\"",
        "\"  PTLQ_decomp hilbert(2)\"",
        "\"  PTLQ_decomp hilbert(3)\"",
        "\"  PTLQ_decomp hilbert(4)\"",
        "\"  PTLQ_decomp hilbert(12)\"",
        "\"  PTLQ_decomp vander(2)\"",
        "\"  PTLQ_decomp vander(3)\"",
        "\"  PTLQ_decomp vander(4)\"",
        "\"  PTLQ_decomp vander(12)\""
      ]
    },
    "test_LQ_update_dim": {
      "start_point": [
        2329,
        0
      ],
      "end_point": [
        2401,
        1
      ],
      "strings": [
        "\"LQ:(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_LQ_update": {
      "start_point": [
        2403,
        0
      ],
      "end_point": [
        2449,
        1
      ],
      "strings": [
        "\"  LQ_update m(3,5)\"",
        "\"  LQ_update m(5,3)\"",
        "\"  LQ_update hilbert(2)\"",
        "\"  LQ_update hilbert(3)\"",
        "\"  LQ_update hilbert(4)\"",
        "\"  LQ_update hilbert(12)\"",
        "\"  LQ_update vander(2)\"",
        "\"  LQ_update vander(3)\"",
        "\"  LQ_update vander(4)\"",
        "\"  LQ_update vander(12)\""
      ]
    },
    "test_SV_solve_dim": {
      "start_point": [
        2451,
        0
      ],
      "end_point": [
        2480,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_SV_solve": {
      "start_point": [
        2482,
        0
      ],
      "end_point": [
        2520,
        1
      ],
      "strings": [
        "\"  SV_solve hilbert(2)\"",
        "\"  SV_solve hilbert(3)\"",
        "\"  SV_solve hilbert(4)\"",
        "\"  SV_solve hilbert(12)\"",
        "\"  SV_solve vander(2)\"",
        "\"  SV_solve vander(3)\"",
        "\"  SV_solve vander(4)\"",
        "\"  SV_solve vander(12)\""
      ]
    },
    "test_SV_decomp_dim": {
      "start_point": [
        2522,
        0
      ],
      "end_point": [
        2619,
        1
      ],
      "strings": [
        "\"returned error code %d = %s\\n\"",
        "\"bad singular value %lu = %22.18g\\n\"",
        "\"singular value %lu = %22.18g < 0\\n\"",
        "\"singular value %lu = %22.18g vs previous %22.18g\\n\"",
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_SV_decomp": {
      "start_point": [
        2621,
        0
      ],
      "end_point": [
        2797,
        1
      ],
      "strings": [
        "\"  SV_decomp m(1,1)\"",
        "\"  SV_decomp m(5,1)\"",
        "\"  SV_decomp m(3,5)\"",
        "\"  SV_decomp m(5,3)\"",
        "\"  SV_decomp moler(10)\"",
        "\"  SV_decomp hilbert(2)\"",
        "\"  SV_decomp hilbert(3)\"",
        "\"  SV_decomp hilbert(4)\"",
        "\"  SV_decomp hilbert(12)\"",
        "\"  SV_decomp vander(2)\"",
        "\"  SV_decomp vander(3)\"",
        "\"  SV_decomp vander(4)\"",
        "\"  SV_decomp vander(12)\"",
        "\"  SV_decomp row3\"",
        "\"  SV_decomp row5\"",
        "\"  SV_decomp row12\"",
        "\"  SV_decomp inf5\"",
        "\"  SV_decomp nan5\"",
        "\"  SV_decomp dblmin3\"",
        "\"  SV_decomp dblmin5\"",
        "\"  SV_decomp dblsubnorm5\"",
        "\"  SV_decomp bigsparse\"",
        "\"  SV_decomp (2x2) A=[%g, %g; %g, %g]\"",
        "\"  SV_decomp (3x3) A=[ %g, %g, %g; %g, %g, %g; %g, %g, %g]\"",
        "\"  SV_decomp (4x4) A=[ %g, %g, %g, %g; %g, %g, %g, %g; %g, %g, %g, %g; %g, %g, %g, %g]\""
      ]
    },
    "test_SV_decomp_mod_dim": {
      "start_point": [
        2800,
        0
      ],
      "end_point": [
        2882,
        1
      ],
      "strings": [
        "\"singular value %lu = %22.18g < 0\\n\"",
        "\"singular value %lu = %22.18g vs previous %22.18g\\n\"",
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_SV_decomp_mod": {
      "start_point": [
        2884,
        0
      ],
      "end_point": [
        3044,
        1
      ],
      "strings": [
        "\"  SV_decomp_mod m(1,1)\"",
        "\"  SV_decomp_mod m(5,1)\"",
        "\"  SV_decomp_mod m(3,5)\"",
        "\"  SV_decomp_mod m(5,3)\"",
        "\"  SV_decomp_mod moler(10)\"",
        "\"  SV_decomp_mod hilbert(2)\"",
        "\"  SV_decomp_mod hilbert(3)\"",
        "\"  SV_decomp_mod hilbert(4)\"",
        "\"  SV_decomp_mod hilbert(12)\"",
        "\"  SV_decomp_mod vander(2)\"",
        "\"  SV_decomp_mod vander(3)\"",
        "\"  SV_decomp_mod vander(4)\"",
        "\"  SV_decomp_mod vander(12)\"",
        "\"  SV_decomp_mod row3\"",
        "\"  SV_decomp_mod row5\"",
        "\"  SV_decomp_mod row12\"",
        "\"  SV_decomp_mod inf5\"",
        "\"  SV_decomp_mod nan5\"",
        "\"  SV_decomp_mod (2x2) A=[%g, %g; %g, %g]\"",
        "\"  SV_decomp_mod (3x3) A=[ %g, %g, %g; %g, %g, %g; %g, %g, %g]\"",
        "\"  SV_decomp_mod (4x4) A=[ %g, %g, %g, %g; %g, %g, %g, %g; %g, %g, %g, %g; %g, %g, %g, %g]\""
      ]
    },
    "test_SV_decomp_jacobi_dim": {
      "start_point": [
        3047,
        0
      ],
      "end_point": [
        3127,
        1
      ],
      "strings": [
        "\"call returned status = %d\\n\"",
        "\"singular value %lu = %22.18g < 0\\n\"",
        "\"singular value %lu = %22.18g vs previous %22.18g\\n\"",
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_SV_decomp_jacobi": {
      "start_point": [
        3129,
        0
      ],
      "end_point": [
        3323,
        1
      ],
      "strings": [
        "\"  SV_decomp_jacobi m(1,1)\"",
        "\"  SV_decomp_jacobi m(5,1)\"",
        "\"  SV_decomp_jacobi m(3,5)\"",
        "\"  SV_decomp_jacobi m(5,3)\"",
        "\"  SV_decomp_jacobi moler(10)\"",
        "\"  SV_decomp_jacobi hilbert(2)\"",
        "\"  SV_decomp_jacobi hilbert(3)\"",
        "\"  SV_decomp_jacobi hilbert(4)\"",
        "\"  SV_decomp_jacobi hilbert(12)\"",
        "\"  SV_decomp_jacobi vander(2)\"",
        "\"  SV_decomp_jacobi vander(3)\"",
        "\"  SV_decomp_jacobi vander(4)\"",
        "\"  SV_decomp_jacobi vander(12)\"",
        "\"  SV_decomp_jacobi row3\"",
        "\"  SV_decomp_jacobi row5\"",
        "\"  SV_decomp_jacobi row12\"",
        "\"  SV_decomp_jacobi inf5\"",
        "\"  SV_decomp_jacobi nan5\"",
        "\"  SV_decomp_jacobi (2x2) A=[%g, %g; %g, %g]\"",
        "\"  SV_decomp_jacobi (3x3) A=[ %g, %g, %g; %g, %g, %g; %g, %g, %g]\"",
        "\"  SV_decomp_jacobi (4x4) A=[ %g, %g, %g, %g; %g, %g, %g, %g; %g, %g, %g, %g; %g, %g, %g, %g] %lu\"",
        "\"  SV_decomp_jacobi (5x5) case=%lu\""
      ]
    },
    "test_cholesky_solve_dim": {
      "start_point": [
        3326,
        0
      ],
      "end_point": [
        3351,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_cholesky_solve2_dim": {
      "start_point": [
        3353,
        0
      ],
      "end_point": [
        3380,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_cholesky_solve": {
      "start_point": [
        3382,
        0
      ],
      "end_point": [
        3423,
        1
      ],
      "strings": [
        "\"  cholesky_solve hilbert(2)\"",
        "\"  cholesky_solve hilbert(3)\"",
        "\"  cholesky_solve hilbert(4)\"",
        "\"  cholesky_solve hilbert(12)\"",
        "\"  cholesky_solve2 hilbert(2)\"",
        "\"  cholesky_solve2 hilbert(3)\"",
        "\"  cholesky_solve2 hilbert(4)\"",
        "\"  cholesky_solve2 hilbert(12)\""
      ]
    },
    "test_cholesky_decomp_unit_dim": {
      "start_point": [
        3425,
        0
      ],
      "end_point": [
        3505,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_cholesky_decomp_unit": {
      "start_point": [
        3507,
        0
      ],
      "end_point": [
        3529,
        1
      ],
      "strings": [
        "\"  cholesky_decomp_unit hilbert(2)\"",
        "\"  cholesky_decomp_unit hilbert(3)\"",
        "\"  cholesky_decomp_unit hilbert(4)\"",
        "\"  cholesky_decomp_unit hilbert(12)\""
      ]
    },
    "test_choleskyc_solve_dim": {
      "start_point": [
        3531,
        0
      ],
      "end_point": [
        3565,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\"",
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_choleskyc_solve": {
      "start_point": [
        3567,
        0
      ],
      "end_point": [
        3594,
        1
      ],
      "strings": [
        "\"  complex_cholesky_solve complex(7)\""
      ]
    },
    "test_choleskyc_decomp_dim": {
      "start_point": [
        3596,
        0
      ],
      "end_point": [
        3654,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\"",
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_choleskyc_decomp": {
      "start_point": [
        3656,
        0
      ],
      "end_point": [
        3671,
        1
      ],
      "strings": [
        "\"  complex_cholesky_decomp complex(3)\""
      ]
    },
    "test_choleskyc_invert_dim": {
      "start_point": [
        3675,
        0
      ],
      "end_point": [
        3731,
        1
      ],
      "strings": [
        "\"REAL(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\"",
        "\"IMAG(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_choleskyc_invert": {
      "start_point": [
        3733,
        0
      ],
      "end_point": [
        3779,
        1
      ],
      "strings": [
        "\"  choleskyc_invert 2x2 Hermitian\"",
        "\"  choleskyc_invert 3x3 Hermitian\"",
        "\"  choleskyc_invert 4x4 Hermitian\""
      ]
    },
    "test_HH_solve_dim": {
      "start_point": [
        3781,
        0
      ],
      "end_point": [
        3807,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_HH_solve": {
      "start_point": [
        3809,
        0
      ],
      "end_point": [
        3847,
        1
      ],
      "strings": [
        "\"  HH_solve hilbert(2)\"",
        "\"  HH_solve hilbert(3)\"",
        "\"  HH_solve hilbert(4)\"",
        "\"  HH_solve hilbert(12)\"",
        "\"  HH_solve vander(2)\"",
        "\"  HH_solve vander(3)\"",
        "\"  HH_solve vander(4)\"",
        "\"  HH_solve vander(12)\""
      ]
    },
    "test_TDS_solve_dim": {
      "start_point": [
        3850,
        0
      ],
      "end_point": [
        3887,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_TDS_solve": {
      "start_point": [
        3890,
        0
      ],
      "end_point": [
        3917,
        1
      ],
      "strings": [
        "\"  solve_TDS dim=2 A\"",
        "\"  solve_TDS dim=2 B\"",
        "\"  solve_TDS dim=5\""
      ]
    },
    "test_TDS_cyc_solve_one": {
      "start_point": [
        3919,
        0
      ],
      "end_point": [
        3956,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_TDS_cyc_solve": {
      "start_point": [
        3958,
        0
      ],
      "end_point": [
        4016,
        1
      ],
      "strings": [
        "\"  solve_TDS_cyc dim=%lu A\"",
        "\"  solve_TDS_cyc dim=%lu A\"",
        "\"  solve_TDS_cyc dim=%lu A\"",
        "\"  solve_TDS_cyc dim=%lu B\""
      ]
    },
    "test_TDN_solve_dim": {
      "start_point": [
        4018,
        0
      ],
      "end_point": [
        4058,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_TDN_solve": {
      "start_point": [
        4061,
        0
      ],
      "end_point": [
        4092,
        1
      ],
      "strings": [
        "\"  solve_TDN dim=2 A\"",
        "\"  solve_TDN dim=2 B\"",
        "\"  solve_TDN dim=5\""
      ]
    },
    "test_TDN_cyc_solve_dim": {
      "start_point": [
        4094,
        0
      ],
      "end_point": [
        4134,
        1
      ],
      "strings": [
        "\"%3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_TDN_cyc_solve": {
      "start_point": [
        4137,
        0
      ],
      "end_point": [
        4161,
        1
      ],
      "strings": [
        "\"  solve_TDN_cyc dim=2 A\"",
        "\"  solve_TDN_cyc dim=5\""
      ]
    },
    "test_bidiag_decomp_dim": {
      "start_point": [
        4163,
        0
      ],
      "end_point": [
        4233,
        1
      ],
      "strings": [
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_bidiag_decomp": {
      "start_point": [
        4235,
        0
      ],
      "end_point": [
        4265,
        1
      ],
      "strings": [
        "\"  bidiag_decomp m(5,3)\"",
        "\"  bidiag_decomp m(9,7)\"",
        "\"  bidiag_decomp hilbert(2)\"",
        "\"  bidiag_decomp hilbert(3)\"",
        "\"  bidiag_decomp hilbert(4)\"",
        "\"  bidiag_decomp hilbert(12)\""
      ]
    },
    "test_tri_invert2": {
      "start_point": [
        4267,
        0
      ],
      "end_point": [
        4319,
        1
      ],
      "strings": [
        "\"tri_invert N=%zu %s %s\"",
        "\"Upper\"",
        "\"Lower\"",
        "\"NonUnit\"",
        "\"Unit\""
      ]
    },
    "test_tri_invert": {
      "start_point": [
        4321,
        0
      ],
      "end_point": [
        4333,
        1
      ],
      "strings": []
    },
    "my_error_handler": {
      "start_point": [
        4335,
        0
      ],
      "end_point": [
        4339,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    },
    "main": {
      "start_point": [
        4341,
        0
      ],
      "end_point": [
        4506,
        1
      ],
      "strings": [
        "\"Matrix Multiply\"",
        "\"Matrix Multiply with Modification\"",
        "\"Triangular Inverse\"",
        "\"Bidiagonal Decomposition\"",
        "\"LU Decomposition and Solve\"",
        "\"Complex LU Decomposition and Solve\"",
        "\"QR Decomposition\"",
        "\"QR Solve\"",
        "\"LQ Solve\"",
        "\"PTLQ Solve\"",
        "\"LQ Decomposition\"",
        "\"LQ LQ Solve\"",
        "\"LQ LS Solve\"",
        "\"LQ Rank-1 Update\"",
        "\"PTLQ Decomposition\"",
        "\"PTLQ Solve\"",
        "\"QR QR Solve\"",
        "\"QR LS Solve\"",
        "\"QR Rank-1 Update\"",
        "\"QRPT Decomposition\"",
        "\"QRPT LS Solve\"",
        "\"QRPT LS Solve 2\"",
        "\"QRPT Solve\"",
        "\"QRPT QR Solve\"",
        "\"QRPT Rank-1 Update\"",
        "\"COD Decomposition\"",
        "\"COD LS Solve\"",
        "\"COD LS Solve 2\"",
        "\"Singular Value Decomposition\"",
        "\"Singular Value Decomposition (Jacobi)\"",
        "\"Singular Value Decomposition (Mod)\"",
        "\"SVD Solve\"",
        "\"Cholesky Decomposition [unit triangular]\"",
        "\"Cholesky Solve\"",
        "\"Cholesky Decomposition\"",
        "\"Cholesky Inverse\"",
        "\"Pivoted Cholesky Decomposition\"",
        "\"Pivoted Cholesky Solve\"",
        "\"Pivoted Cholesky Inverse\"",
        "\"Modified Cholesky Decomposition\"",
        "\"Modified Cholesky Solve\"",
        "\"Modified Cholesky Inverse\"",
        "\"Complex Cholesky Decomposition\"",
        "\"Complex Cholesky Solve\"",
        "\"Complex Cholesky Inverse\"",
        "\"Householder solve\"",
        "\"Tridiagonal symmetric solve\"",
        "\"Tridiagonal symmetric cyclic solve\"",
        "\"Tridiagonal nonsymmetric solve\"",
        "\"Tridiagonal nonsymmetric cyclic solve\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/test_cholesky.c": {
    "test_cholesky_decomp_eps": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": [
        "\"%s: (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\"",
        "\"%s rcond: (%3lu,%3lu): %22.18g   %22.18g\\n\""
      ]
    },
    "test_cholesky_decomp": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": [
        "\"cholesky_decomp unscaled random\"",
        "\"cholesky_decomp scaled random\"",
        "\"cholesky_decomp unscaled hilbert\"",
        "\"cholesky_decomp scaled hilbert\""
      ]
    },
    "test_cholesky_invert_eps": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": [
        "\"%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_cholesky_invert": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": [
        "\"cholesky_invert unscaled random\"",
        "\"cholesky_invert unscaled hilbert\""
      ]
    },
    "test_mcholesky_decomp_eps": {
      "start_point": [
        234,
        0
      ],
      "end_point": [
        387,
        1
      ],
      "strings": [
        "\"%s upper triangle: (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\"",
        "\"%s: (%zu,%zu): ||E|| = %.12e\"",
        "\"%s: (%zu,%zu): D is not decreasing\"",
        "\"%s: (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\"",
        "\"%s rcond: (%3lu,%3lu): %22.18g   %22.18g\\n\""
      ]
    },
    "test_mcholesky_decomp": {
      "start_point": [
        389,
        0
      ],
      "end_point": [
        422,
        1
      ],
      "strings": [
        "\"mcholesky_decomp unscaled random posdef\"",
        "\"mcholesky_decomp unscaled random symm\"",
        "\"mcholesky_decomp unscaled hilbert\""
      ]
    },
    "test_mcholesky_solve_eps": {
      "start_point": [
        424,
        0
      ],
      "end_point": [
        457,
        1
      ],
      "strings": [
        "\"%s: %3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_mcholesky_solve": {
      "start_point": [
        459,
        0
      ],
      "end_point": [
        491,
        1
      ],
      "strings": [
        "\"mcholesky_solve random\"",
        "\"mcholesky_solve hilbert\""
      ]
    },
    "test_mcholesky_invert_eps": {
      "start_point": [
        493,
        0
      ],
      "end_point": [
        534,
        1
      ],
      "strings": [
        "\"%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_mcholesky_invert": {
      "start_point": [
        536,
        0
      ],
      "end_point": [
        560,
        1
      ],
      "strings": [
        "\"mcholesky_invert unscaled random\"",
        "\"mcholesky_invert unscaled hilbert\""
      ]
    },
    "test_pcholesky_decomp_eps": {
      "start_point": [
        562,
        0
      ],
      "end_point": [
        697,
        1
      ],
      "strings": [
        "\"%s upper triangle: (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\"",
        "\"%s: (%zu,%zu): D is not decreasing\"",
        "\"%s: (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\"",
        "\"%s rcond: (%3lu,%3lu): %22.18g   %22.18g\\n\""
      ]
    },
    "test_pcholesky_decomp": {
      "start_point": [
        699,
        0
      ],
      "end_point": [
        731,
        1
      ],
      "strings": [
        "\"pcholesky_decomp unscaled random\"",
        "\"pcholesky_decomp scaled random\"",
        "\"pcholesky_decomp unscaled hilbert\"",
        "\"pcholesky_decomp scaled hilbert\""
      ]
    },
    "test_pcholesky_solve_eps": {
      "start_point": [
        733,
        0
      ],
      "end_point": [
        774,
        1
      ],
      "strings": [
        "\"%s: %3lu[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_pcholesky_solve": {
      "start_point": [
        776,
        0
      ],
      "end_point": [
        810,
        1
      ],
      "strings": [
        "\"pcholesky_solve unscaled random\"",
        "\"pcholesky_solve scaled random\"",
        "\"pcholesky_solve unscaled hilbert\"",
        "\"pcholesky_solve scaled hilbert\""
      ]
    },
    "test_pcholesky_invert_eps": {
      "start_point": [
        812,
        0
      ],
      "end_point": [
        851,
        1
      ],
      "strings": [
        "\"%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_pcholesky_invert": {
      "start_point": [
        853,
        0
      ],
      "end_point": [
        877,
        1
      ],
      "strings": [
        "\"pcholesky_invert unscaled random\"",
        "\"pcholesky_invert unscaled hilbert\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/test_cod.c": {
    "create_rank_matrix": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "test_COD_decomp_eps": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": [
        "\"%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_COD_decomp": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"COD_decomp hilbert\"",
        "\"COD_decomp rank 26\"",
        "\"COD_decomp rank 176\"",
        "\"COD_decomp m(3,5)\"",
        "\"COD_decomp m(5,3)\"",
        "\"COD_decomp s(3,5)\"",
        "\"COD_decomp s(5,3)\"",
        "\"COD_decomp vander(2)\"",
        "\"COD_decomp vander(3)\"",
        "\"COD_decomp vander(4)\"",
        "\"COD_decomp vander(12)\""
      ]
    },
    "test_COD_lssolve_eps": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": [
        "\"%s (%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\"",
        "\"%s res (%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\"",
        "\"%s res (%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_COD_lssolve": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": [
        "\"COD_lssolve m(5,3)\"",
        "\"COD_lssolve hilbert(2)\"",
        "\"COD_lssolve hilbert(3)\"",
        "\"COD_lssolve hilbert(4)\"",
        "\"COD_lssolve vander(2)\"",
        "\"COD_lssolve vander(3)\"",
        "\"COD_lssolve vander(4)\"",
        "\"COD_lssolve lin2\""
      ]
    },
    "test_COD_lssolve2_eps": {
      "start_point": [
        289,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": [
        "\"%s (%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\"",
        "\"%s res (%3lu,%3lu)[%lu]: %22.18g   %22.18g\\n\""
      ]
    },
    "test_COD_lssolve2": {
      "start_point": [
        397,
        0
      ],
      "end_point": [
        427,
        1
      ],
      "strings": [
        "\"COD_lssolve2 rank 26\"",
        "\"COD_lssolve2 rank 278\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/test_common.c": {
    "create_random_vector": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "create_symm_matrix": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "create_posdef_matrix": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "create_hilbert_matrix2": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/linalg/tridiag.c": {
    "solve_tridiag": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": [
        "\"failed to allocate working space\"",
        "\"matrix must be positive definite\""
      ]
    },
    "solve_tridiag_nonsym": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"failed to allocate working space\"",
        "\"matrix must be positive definite\""
      ]
    },
    "solve_cyc_tridiag": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": [
        "\"failed to allocate working space\"",
        "\"matrix must be positive definite\""
      ]
    },
    "solve_cyc_tridiag_nonsym": {
      "start_point": [
        330,
        0
      ],
      "end_point": [
        446,
        1
      ],
      "strings": [
        "\"failed to allocate working space\"",
        "\"matrix must be positive definite\""
      ]
    },
    "gsl_linalg_solve_symm_tridiag": {
      "start_point": [
        448,
        0
      ],
      "end_point": [
        476,
        1
      ],
      "strings": [
        "\"size of diag must match rhs\"",
        "\"size of offdiag must match rhs-1\"",
        "\"size of solution must match rhs\""
      ]
    },
    "gsl_linalg_solve_tridiag": {
      "start_point": [
        478,
        0
      ],
      "end_point": [
        511,
        1
      ],
      "strings": [
        "\"size of diag must match rhs\"",
        "\"size of abovediag must match rhs-1\"",
        "\"size of belowdiag must match rhs-1\"",
        "\"size of solution must match rhs\""
      ]
    },
    "gsl_linalg_solve_symm_cyc_tridiag": {
      "start_point": [
        514,
        0
      ],
      "end_point": [
        545,
        1
      ],
      "strings": [
        "\"size of diag must match rhs\"",
        "\"size of offdiag must match rhs\"",
        "\"size of solution must match rhs\"",
        "\"size of cyclic system must be 3 or more\""
      ]
    },
    "gsl_linalg_solve_cyc_tridiag": {
      "start_point": [
        547,
        0
      ],
      "end_point": [
        584,
        1
      ],
      "strings": [
        "\"size of diag must match rhs\"",
        "\"size of abovediag must match rhs\"",
        "\"size of belowdiag must match rhs\"",
        "\"size of solution must match rhs\"",
        "\"size of cyclic system must be 3 or more\""
      ]
    }
  },
  "gsl/gsl-2.5/linalg/tridiag.h": {},
  "gsl/gsl-2.5/matrix/copy.c": {},
  "gsl/gsl-2.5/matrix/copy_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          49,
          1
        ],
        "strings": [
          "\"matrix sizes are different\""
        ]
      },
      {
        "start_point": [
          52,
          0
        ],
        "end_point": [
          83,
          1
        ],
        "strings": [
          "\"matrix sizes are different\""
        ]
      },
      {
        "start_point": [
          86,
          0
        ],
        "end_point": [
          156,
          1
        ],
        "strings": [
          "\"matrix sizes are different\"",
          "\"invalid uplo parameters\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/matrix/file.c": {},
  "gsl/gsl-2.5/matrix/file_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          50,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          52,
          0
        ],
        "end_point": [
          84,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          87,
          0
        ],
        "end_point": [
          121,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          123,
          0
        ],
        "end_point": [
          154,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/matrix/getset.c": {},
  "gsl/gsl-2.5/matrix/getset_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          4,
          0
        ],
        "end_point": [
          43,
          1
        ],
        "strings": [
          "\"row index is out of range\"",
          "\"matrix row size and vector length are not equal\""
        ]
      },
      {
        "start_point": [
          45,
          0
        ],
        "end_point": [
          85,
          1
        ],
        "strings": [
          "\"column index is out of range\"",
          "\"matrix column size and vector length are not equal\""
        ]
      },
      {
        "start_point": [
          87,
          0
        ],
        "end_point": [
          126,
          1
        ],
        "strings": [
          "\"row index is out of range\"",
          "\"matrix row size and vector length are not equal\""
        ]
      },
      {
        "start_point": [
          128,
          0
        ],
        "end_point": [
          167,
          1
        ],
        "strings": [
          "\"column index is out of range\"",
          "\"matrix column size and vector length are not equal\""
        ]
      },
      {
        "start_point": [
          170,
          0
        ],
        "end_point": [
          197,
          1
        ],
        "strings": [
          "\"row index is out of range\"",
          "\"failed to allocate space for vector struct\""
        ]
      },
      {
        "start_point": [
          199,
          0
        ],
        "end_point": [
          226,
          1
        ],
        "strings": [
          "\"column index is out of range\"",
          "\"failed to allocate space for vector struct\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/matrix/gsl_matrix.h": {},
  "gsl/gsl-2.5/matrix/gsl_matrix_char.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_char_get": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_char_set": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_char_ptr": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_char_const_ptr": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_complex_double.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_complex_get": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        283,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_complex_set": {
      "start_point": [
        285,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_complex_ptr": {
      "start_point": [
        306,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_complex_const_ptr": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_complex_float.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_complex_float_get": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        283,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_complex_float_set": {
      "start_point": [
        285,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_complex_float_ptr": {
      "start_point": [
        306,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_complex_float_const_ptr": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_complex_long_double.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_complex_long_double_get": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        283,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_complex_long_double_set": {
      "start_point": [
        285,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_complex_long_double_ptr": {
      "start_point": [
        306,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_complex_long_double_const_ptr": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_double.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_get": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_set": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_ptr": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_const_ptr": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_float.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_float_get": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_float_set": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_float_ptr": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_float_const_ptr": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_int.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_int_get": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_int_set": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_int_ptr": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_int_const_ptr": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_long.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_long_get": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_long_set": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_long_ptr": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_long_const_ptr": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_long_double.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_long_double_get": {
      "start_point": [
        268,
        5
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_long_double_set": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_long_double_ptr": {
      "start_point": [
        308,
        5
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_long_double_const_ptr": {
      "start_point": [
        328,
        11
      ],
      "end_point": [
        345,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_short.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_short_get": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_short_set": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_short_ptr": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_short_const_ptr": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_uchar.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_uchar_get": {
      "start_point": [
        268,
        9
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_uchar_set": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_uchar_ptr": {
      "start_point": [
        308,
        9
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_uchar_const_ptr": {
      "start_point": [
        328,
        15
      ],
      "end_point": [
        345,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_uint.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_uint_get": {
      "start_point": [
        268,
        9
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_uint_set": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_uint_ptr": {
      "start_point": [
        308,
        9
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_uint_const_ptr": {
      "start_point": [
        328,
        15
      ],
      "end_point": [
        345,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_ulong.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_ulong_get": {
      "start_point": [
        268,
        9
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_ulong_set": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_ulong_ptr": {
      "start_point": [
        308,
        9
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_ulong_const_ptr": {
      "start_point": [
        328,
        15
      ],
      "end_point": [
        345,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/gsl_matrix_ushort.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_matrix_ushort_get": {
      "start_point": [
        268,
        9
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_ushort_set": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_ushort_ptr": {
      "start_point": [
        308,
        9
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    },
    "gsl_matrix_ushort_const_ptr": {
      "start_point": [
        328,
        15
      ],
      "end_point": [
        345,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/init.c": {},
  "gsl/gsl-2.5/matrix/init_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          51,
          1
        ],
        "strings": [
          "\"failed to allocate space for matrix struct\"",
          "\"failed to allocate space for block\""
        ]
      },
      {
        "start_point": [
          53,
          0
        ],
        "end_point": [
          72,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          74,
          0
        ],
        "end_point": [
          110,
          1
        ],
        "strings": [
          "\"matrix dimension d2 must be greater than n2\"",
          "\"matrix size exceeds available block size\"",
          "\"failed to allocate space for matrix struct\""
        ]
      },
      {
        "start_point": [
          113,
          0
        ],
        "end_point": [
          149,
          1
        ],
        "strings": [
          "\"submatrix dimension 1 exceeds size of original\"",
          "\"submatrix dimension 2 exceeds size of original\"",
          "\"failed to allocate space for matrix struct\""
        ]
      },
      {
        "start_point": [
          151,
          0
        ],
        "end_point": [
          162,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          163,
          0
        ],
        "end_point": [
          182,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          184,
          0
        ],
        "end_point": [
          202,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          204,
          0
        ],
        "end_point": [
          220,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/matrix/matrix.c": {},
  "gsl/gsl-2.5/matrix/minmax.c": {},
  "gsl/gsl-2.5/matrix/minmax_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          46,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          48,
          0
        ],
        "end_point": [
          75,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          78,
          0
        ],
        "end_point": [
          120,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          122,
          0
        ],
        "end_point": [
          159,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          161,
          0
        ],
        "end_point": [
          198,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          200,
          0
        ],
        "end_point": [
          253,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/matrix/oper.c": {},
  "gsl/gsl-2.5/matrix/oper_complex_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          51,
          1
        ],
        "strings": [
          "\"matrices must have same dimensions\""
        ]
      },
      {
        "start_point": [
          53,
          0
        ],
        "end_point": [
          85,
          1
        ],
        "strings": [
          "\"matrices must have same dimensions\""
        ]
      },
      {
        "start_point": [
          87,
          0
        ],
        "end_point": [
          125,
          1
        ],
        "strings": [
          "\"matrices must have same dimensions\""
        ]
      },
      {
        "start_point": [
          127,
          0
        ],
        "end_point": [
          170,
          1
        ],
        "strings": [
          "\"matrices must have same dimensions\""
        ]
      },
      {
        "start_point": [
          172,
          0
        ],
        "end_point": [
          198,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          200,
          0
        ],
        "end_point": [
          218,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          221,
          0
        ],
        "end_point": [
          235,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/matrix/oper_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          46,
          1
        ],
        "strings": [
          "\"matrices must have same dimensions\""
        ]
      },
      {
        "start_point": [
          48,
          0
        ],
        "end_point": [
          75,
          1
        ],
        "strings": [
          "\"matrices must have same dimensions\""
        ]
      },
      {
        "start_point": [
          77,
          0
        ],
        "end_point": [
          104,
          1
        ],
        "strings": [
          "\"matrices must have same dimensions\""
        ]
      },
      {
        "start_point": [
          106,
          0
        ],
        "end_point": [
          133,
          1
        ],
        "strings": [
          "\"matrices must have same dimensions\""
        ]
      },
      {
        "start_point": [
          135,
          0
        ],
        "end_point": [
          153,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          155,
          0
        ],
        "end_point": [
          173,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          176,
          0
        ],
        "end_point": [
          190,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/matrix/prop.c": {},
  "gsl/gsl-2.5/matrix/prop_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          52,
          1
        ],
        "strings": [
          "\"matrices must have same dimensions\""
        ]
      },
      {
        "start_point": [
          55,
          0
        ],
        "end_point": [
          79,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          82,
          0
        ],
        "end_point": [
          106,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          109,
          0
        ],
        "end_point": [
          133,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          136,
          0
        ],
        "end_point": [
          160,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/matrix/rowcol.c": {},
  "gsl/gsl-2.5/matrix/rowcol_source.c": {},
  "gsl/gsl-2.5/matrix/submatrix.c": {},
  "gsl/gsl-2.5/matrix/submatrix_source.c": {},
  "gsl/gsl-2.5/matrix/swap.c": {},
  "gsl/gsl-2.5/matrix/swap_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          52,
          1
        ],
        "strings": [
          "\"first row index is out of range\"",
          "\"second row index is out of range\""
        ]
      },
      {
        "start_point": [
          54,
          0
        ],
        "end_point": [
          93,
          1
        ],
        "strings": [
          "\"first column index is out of range\"",
          "\"second column index is out of range\""
        ]
      },
      {
        "start_point": [
          96,
          0
        ],
        "end_point": [
          141,
          1
        ],
        "strings": [
          "\"matrix must be square to swap row and column\"",
          "\"row index is out of range\"",
          "\"column index is out of range\""
        ]
      },
      {
        "start_point": [
          144,
          0
        ],
        "end_point": [
          174,
          1
        ],
        "strings": [
          "\"matrix must be square to take transpose\""
        ]
      },
      {
        "start_point": [
          176,
          0
        ],
        "end_point": [
          209,
          1
        ],
        "strings": [
          "\"dimensions of dest matrix must be transpose of src matrix\""
        ]
      },
      {
        "start_point": [
          211,
          0
        ],
        "end_point": [
          283,
          1
        ],
        "strings": [
          "\"matrix sizes are different\"",
          "\"invalid uplo_src parameter\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/matrix/test.c": {
    "main": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": []
    },
    "my_error_handler": {
      "start_point": [
        250,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/matrix/test_complex_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          28,
          0
        ],
        "end_point": [
          240,
          1
        ],
        "strings": [
          "\"_alloc returns valid pointer\"",
          "\"_alloc returns valid size1\"",
          "\"_alloc returns valid size2\"",
          "\"_alloc returns valid tda\"",
          "\"_set writes into array\"",
          "\"_get reads from array\"",
          "\"_isnull\"",
          "\" on calloc matrix\"",
          "\"_ispos\"",
          "\" on calloc matrix\"",
          "\"_isneg\"",
          "\" on calloc matrix\"",
          "\"_isnull\"",
          "\" on null matrix\"",
          "\"_ispos\"",
          "\" on null matrix\"",
          "\"_isneg\"",
          "\" on null matrix\"",
          "\"_isnull\"",
          "\" on non-negative matrix\"",
          "\"_ispos\"",
          "\" on non-negative matrix\"",
          "\"_isneg\"",
          "\" on non-negative matrix\"",
          "\"_isnull\"",
          "\" on mixed matrix\"",
          "\"_ispos\"",
          "\" on mixed matrix\"",
          "\"_isneg\"",
          "\" on mixed matrix\"",
          "\"_isnull\"",
          "\" on non-positive matrix\"",
          "\"_ispos\"",
          "\" on non-positive matrix\"",
          "\"_isneg\"",
          "\" on non-positive matrix\"",
          "\"_isnull\"",
          "\" on positive matrix\"",
          "\"_ispos\"",
          "\" on positive matrix\"",
          "\"_isneg\"",
          "\" on positive matrix\"",
          "\"_isnull\"",
          "\" on negative matrix\"",
          "\"_ispos\"",
          "\" on negative matrix\"",
          "\"_isneg\"",
          "\" on negative matrix\""
        ]
      },
      {
        "start_point": [
          243,
          0
        ],
        "end_point": [
          306,
          1
        ],
        "strings": [
          "\"test_static.dat\"",
          "\"test.dat\"",
          "\"w\"",
          "\"r\"",
          "\"_fprintf and fscanf\""
        ]
      },
      {
        "start_point": [
          309,
          0
        ],
        "end_point": [
          372,
          1
        ],
        "strings": [
          "\"test_static.dat\"",
          "\"test.dat\"",
          "\"wb\"",
          "\"rb\"",
          "\"_write and read\""
        ]
      },
      {
        "start_point": [
          374,
          0
        ],
        "end_point": [
          439,
          1
        ],
        "strings": [
          "\"test_static.dat\"",
          "\"test.dat\"",
          "\"wb\"",
          "\"rb\"",
          "\"_write and read (noncontiguous)\""
        ]
      },
      {
        "start_point": [
          441,
          0
        ],
        "end_point": [
          531,
          1
        ],
        "strings": [
          "\"_set traps 1st index below lower bound\"",
          "\"_set traps 2nd index below lower bound\"",
          "\"_set traps 1st index above upper bound\"",
          "\"_set traps 2nd index above upper bound\"",
          "\"_set traps 1st index at upper bound\"",
          "\"_set traps 2nd index at upper bound\"",
          "\"_get traps 1st index below lower bound\"",
          "\"_get, zero real for 1st index below l.b.\"",
          "\"_get, zero imag for 1st index below l.b.\"",
          "\"_get traps 2nd index below lower bound\"",
          "\"_get, zero real for 2nd index below l.b.\"",
          "\"_get, zero imag for 2nd index below l.b.\"",
          "\"_get traps 1st index above upper bound\"",
          "\"_get, zero real for 1st index above u.b.\"",
          "\"_get, zero imag for 1st index above u.b.\"",
          "\"_get traps 2nd index above upper bound\"",
          "\"_get, zero real for 2nd index above u.b.\"",
          "\"_get, zero imag for 2nd index above u.b.\"",
          "\"_get traps 1st index at upper bound\"",
          "\"_get, zero real for 1st index at u.b.\"",
          "\"_get, zero imag for 1st index at u.b.\"",
          "\"_get traps 2nd index at upper bound\"",
          "\"_get, zero real for 2nd index at u.b.\"",
          "\"_get, zero imag for 2nd index at u.b.\""
        ]
      },
      {
        "start_point": [
          534,
          0
        ],
        "end_point": [
          795,
          1
        ],
        "strings": [
          "\"_equal matrix unequal\"",
          "\"_equal matrix equal\"",
          "\"_add matrix addition\"",
          "\"_sub matrix subtraction\"",
          "\"%d\\t%d\\n\"",
          "\"\\n\"",
          "\"\\n\"",
          "\"\\n\"",
          "\"_mul_elements multiplication\"",
          "\"\\t\"",
          "\"\\n\"",
          "\"_div_elements division\"",
          "\"_scale\"",
          "\"_add_constant\"",
          "\"_add_diagonal\"",
          "\"_swap\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/matrix/test_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          28,
          0
        ],
        "end_point": [
          413,
          1
        ],
        "strings": [
          "\"_alloc returns valid pointer\"",
          "\"_alloc returns valid size1\"",
          "\"_alloc returns valid size2\"",
          "\"_alloc returns valid tda\"",
          "\"_set writes into array\"",
          "\"_get reads from array\"",
          "\"_isnull\"",
          "\" on calloc matrix\"",
          "\"_ispos\"",
          "\" on calloc matrix\"",
          "\"_isneg\"",
          "\" on calloc matrix\"",
          "\"_isnonneg\"",
          "\" on calloc matrix\"",
          "\"_get_row extracts row\"",
          "\"_max returns correct maximum value\"",
          "\"_min returns correct minimum value\"",
          "\"_minmax returns correct maximum value\"",
          "\"_minmax returns correct minimum value\"",
          "\"_max_index returns correct maximum i\"",
          "\"_max_index returns correct maximum j\"",
          "\"_min_index returns correct minimum i\"",
          "\"_min_index returns correct minimum j\"",
          "\"_minmax_index returns correct maximum i\"",
          "\"_minmax_index returns correct maximum j\"",
          "\"_minmax_index returns correct minimum i\"",
          "\"_minmax_index returns correct minimum j\"",
          "\"_max returns correct maximum value for NaN\"",
          "\"_min returns correct minimum value for NaN\"",
          "\"_minmax returns correct maximum value for NaN\"",
          "\"_minmax returns correct minimum value for NaN\"",
          "\"_max_index returns correct maximum i for NaN\"",
          "\"_max_index returns correct maximum j for NaN\"",
          "\"_min_index returns correct minimum i for NaN\"",
          "\"_min_index returns correct minimum j for NaN\"",
          "\"_minmax_index returns correct maximum i for NaN\"",
          "\"_minmax_index returns correct maximum j for NaN\"",
          "\"_minmax_index returns correct minimum i for NaN\"",
          "\"_minmax_index returns correct minimum j for NaN\"",
          "\"_isnull\"",
          "\" on null matrix\"",
          "\"_ispos\"",
          "\" on null matrix\"",
          "\"_isneg\"",
          "\" on null matrix\"",
          "\"_isnonneg\"",
          "\" on null matrix\"",
          "\"_isnull\"",
          "\" on non-negative matrix\"",
          "\"_ispos\"",
          "\" on non-negative matrix\"",
          "\"_isneg\"",
          "\" on non-negative matrix\"",
          "\"_isnonneg\"",
          "\" on non-negative matrix\"",
          "\"_isnull\"",
          "\" on mixed matrix\"",
          "\"_ispos\"",
          "\" on mixed matrix\"",
          "\"_isneg\"",
          "\" on mixed matrix\"",
          "\"_isnonneg\"",
          "\" on mixed matrix\"",
          "\"_isnull\"",
          "\" on non-positive matrix\"",
          "\"_ispos\"",
          "\" on non-positive matrix\"",
          "\"_isneg\"",
          "\" on non-positive matrix\"",
          "\"_isnonneg\"",
          "\" on non-positive matrix\"",
          "\"_isnull\"",
          "\" on positive matrix\"",
          "\"_ispos\"",
          "\" on positive matrix\"",
          "\"_isneg\"",
          "\" on positive matrix\"",
          "\"_isnonneg\"",
          "\" on positive matrix\"",
          "\"_isnull\"",
          "\" on negative matrix\"",
          "\"_ispos\"",
          "\" on negative matrix\"",
          "\"_isneg\"",
          "\" on negative matrix\"",
          "\"_isnonneg\"",
          "\" on negative matrix\""
        ]
      },
      {
        "start_point": [
          416,
          0
        ],
        "end_point": [
          613,
          1
        ],
        "strings": [
          "\"_equal matrix unequal\"",
          "\"_equal matrix equal\"",
          "\"_add matrix addition\"",
          "\"_sub matrix subtraction\"",
          "\"_mul_elements multiplication\"",
          "\"_div_elements division\"",
          "\"_scale\"",
          "\"_add_constant\"",
          "\"_add_diagonal\"",
          "\"_swap\""
        ]
      },
      {
        "start_point": [
          616,
          0
        ],
        "end_point": [
          676,
          1
        ],
        "strings": [
          "\"test_static.dat\"",
          "\"test.dat\"",
          "\"w\"",
          "\"r\"",
          "\"_fprintf and fscanf\""
        ]
      },
      {
        "start_point": [
          679,
          0
        ],
        "end_point": [
          738,
          1
        ],
        "strings": [
          "\"test_static.dat\"",
          "\"test.dat\"",
          "\"wb\"",
          "\"rb\"",
          "\"_write and read\""
        ]
      },
      {
        "start_point": [
          740,
          0
        ],
        "end_point": [
          801,
          1
        ],
        "strings": [
          "\"test_static.dat\"",
          "\"test.dat\"",
          "\"wb\"",
          "\"rb\"",
          "\"_write and read (noncontiguous)\""
        ]
      },
      {
        "start_point": [
          803,
          0
        ],
        "end_point": [
          874,
          1
        ],
        "strings": [
          "\"_set traps 1st index above upper bound\"",
          "\"_set traps 2nd index above upper bound\"",
          "\"_set traps 1st index at upper bound\"",
          "\"_set traps 2nd index at upper bound\"",
          "\"_get traps 1st index below lower bound\"",
          "\"_get returns zero for 1st index below lower bound\"",
          "\"_get traps 2nd index below lower bound\"",
          "\"_get returns zero for 2nd index below lower bound\"",
          "\"_get traps 1st index above upper bound\"",
          "\"_get returns zero for 1st index above upper bound\"",
          "\"_get traps 2nd index above upper bound\"",
          "\"_get returns zero for 2nd index above upper bound\"",
          "\"_get traps 1st index at upper bound\"",
          "\"_get returns zero for 1st index at upper bound\"",
          "\"_get traps 2nd index at upper bound\"",
          "\"_get returns zero for 2nd index at upper bound\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/matrix/test_static.c": {},
  "gsl/gsl-2.5/matrix/view.c": {},
  "gsl/gsl-2.5/matrix/view.h": {},
  "gsl/gsl-2.5/matrix/view_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          143,
          0
        ],
        "end_point": [
          170,
          1
        ],
        "strings": [
          "\"submatrix dimension 1 exceeds size of original\"",
          "\"submatrix dimension 2 exceeds size of original\""
        ]
      },
      {
        "start_point": [
          172,
          0
        ],
        "end_point": [
          194,
          1
        ],
        "strings": [
          "\"row index is out of range\"",
          "\"vector already has memory allocated to it\""
        ]
      },
      {
        "start_point": [
          196,
          0
        ],
        "end_point": [
          218,
          1
        ],
        "strings": [
          "\"column index is out of range\"",
          "\"vector already has memory allocated to it\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/min/bracketing.c": {
    "gsl_min_find_bracket": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/min/brent.c": {
    "brent_init": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "brent_iterate": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/min/convergence.c": {
    "gsl_min_test_interval": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"relative tolerance is negative\"",
        "\"absolute tolerance is negative\"",
        "\"lower bound larger than upper_bound\""
      ]
    }
  },
  "gsl/gsl-2.5/min/fsolver.c": {
    "compute_f_values": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "gsl_min_fminimizer_set": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "gsl_min_fminimizer_alloc": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"failed to allocate space for minimizer struct\"",
        "\"failed to allocate space for minimizer state\""
      ]
    },
    "gsl_min_fminimizer_set_with_values": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"invalid interval (lower > upper)\"",
        "\"x_minimum must lie inside interval (lower < x < upper)\"",
        "\"endpoints do not enclose a minimum\""
      ]
    },
    "gsl_min_fminimizer_iterate": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "gsl_min_fminimizer_free": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": []
    },
    "gsl_min_fminimizer_name": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "gsl_min_fminimizer_minimum": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "gsl_min_fminimizer_x_minimum": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "gsl_min_fminimizer_x_lower": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": []
    },
    "gsl_min_fminimizer_x_upper": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "gsl_min_fminimizer_f_minimum": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "gsl_min_fminimizer_f_lower": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "gsl_min_fminimizer_f_upper": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/min/golden.c": {
    "goldensection_init": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "goldensection_iterate": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/min/gsl_min.h": {
    "typedef": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        44,
        3
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/min/min.h": {},
  "gsl/gsl-2.5/min/quad_golden.c": {
    "quad_golden_init": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "quad_golden_iterate": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": [
        "\"quadratic step: %g\\n\"",
        "\"safeguard step: %g\\n\"",
        "\"golden step: %g\\n\"",
        "\"[%d] Final State: %g  %g  %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/min/test.c": {
    "main": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"cos(x) [0 (3) 6]\"",
        "\"x^4 - 1 [-3 (-1) 17]\"",
        "\"sqrt(|x|) [-2 (-1) 1.5]\"",
        "\"func3(x) [-2 (3) 4]\"",
        "\"func4(x) [0 (0.782) 1]\"",
        "\"invalid range check [4, 0]\"",
        "\"invalid range check [1, 1]\"",
        "\"invalid range check [-1, 1]\"",
        "\"cos(x) [1,2]\"",
        "\"sqrt(|x|) [-1,0]\"",
        "\"sqrt(|x|) [-1,-0.6]\"",
        "\"sqrt(|x|) [-1,1]\""
      ]
    },
    "test_f": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": [
        "\"%.12f %.18f %.12f %.18f %.12f %.18f status=%d\\n\"",
        "\"interval is invalid (%g,%g)\"",
        "\"m lies outside interval %g (%g,%g)\"",
        "\"%s, %s (%g obs vs %g expected) \"",
        "\"incorrect precision (%g obs vs %g expected)\""
      ]
    },
    "test_f_e": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"%s, %s\"",
        "\"%s, %s\""
      ]
    },
    "my_error_handler": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    },
    "test_bracket": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        212,
        1
      ],
      "strings": [
        "\"%s, interval: [%g,%g], values: (%g,%g), minimum at: %g, value: %g\""
      ]
    }
  },
  "gsl/gsl-2.5/min/test.h": {},
  "gsl/gsl-2.5/min/test_funcs.c": {
    "create_function": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "f_cos": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "func1": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "func2": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "func3": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "func4": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/monte/gsl_monte.h": {
    "struct": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/monte/gsl_monte_miser.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/monte/gsl_monte_plain.h": {
    "typedef": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/monte/gsl_monte_vegas.h": {},
  "gsl/gsl-2.5/monte/miser.c": {
    "gsl_monte_miser_integrate": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": [
        "\"number of dimensions must match allocated size\"",
        "\"xu must be greater than xl\"",
        "\"Range of integration is too large, please rescale\"",
        "\"alpha must be non-negative\"",
        "\"insufficient calls for subvolume\"",
        "\"insufficient calls to sample all halfspaces\"",
        "\"no points in left-half space!\"",
        "\"no points in right-half space!\"",
        "\"out of memory for left workspace\"",
        "\"out of memory for right workspace\""
      ]
    },
    "gsl_monte_miser_alloc": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        533,
        1
      ],
      "strings": [
        "\"failed to allocate space for miser state struct\"",
        "\"failed to allocate space for x\"",
        "\"failed to allocate space for xmid\"",
        "\"failed to allocate space for sigma_l\"",
        "\"failed to allocate space for sigma_r\"",
        "\"failed to allocate space for fmax_l\"",
        "\"failed to allocate space for fmax_r\"",
        "\"failed to allocate space for fmin_l\"",
        "\"failed to allocate space for fmin_r\"",
        "\"failed to allocate space for fsum_l\"",
        "\"failed to allocate space for fsum_r\"",
        "\"failed to allocate space for fsum2_l\"",
        "\"failed to allocate space for fsum2_r\"",
        "\"failed to allocate space for fsum2_r\"",
        "\"failed to allocate space for fsum2_r\""
      ]
    },
    "gsl_monte_miser_init": {
      "start_point": [
        535,
        0
      ],
      "end_point": [
        547,
        1
      ],
      "strings": []
    },
    "gsl_monte_miser_free": {
      "start_point": [
        549,
        0
      ],
      "end_point": [
        568,
        1
      ],
      "strings": []
    },
    "gsl_monte_miser_params_get": {
      "start_point": [
        570,
        0
      ],
      "end_point": [
        578,
        1
      ],
      "strings": []
    },
    "gsl_monte_miser_params_set": {
      "start_point": [
        580,
        0
      ],
      "end_point": [
        588,
        1
      ],
      "strings": []
    },
    "estimate_corrmc": {
      "start_point": [
        590,
        0
      ],
      "end_point": [
        707,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/monte/plain.c": {
    "gsl_monte_plain_integrate": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": [
        "\"number of dimensions must match allocated size\"",
        "\"xu must be greater than xl\"",
        "\"Range of integration is too large, please rescale\""
      ]
    },
    "gsl_monte_plain_alloc": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": [
        "\"failed to allocate space for state struct\"",
        "\"failed to allocate space for working vector\""
      ]
    },
    "gsl_monte_plain_init": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    },
    "gsl_monte_plain_free": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/monte/test.c": {
    "make_function": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "add": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": [
        "\"constant, 1d\"",
        "\"constant, 2d\"",
        "\"constant, 3d\"",
        "\"constant, 4d\"",
        "\"constant, 5d\"",
        "\"constant, 6d\"",
        "\"constant, 7d\"",
        "\"constant, 8d\"",
        "\"constant, 9d\"",
        "\"constant, 10d\"",
        "\"step, 1d\"",
        "\"step, 2d\"",
        "\"step, 3d\"",
        "\"step, 4d\"",
        "\"step, 5d\"",
        "\"step, 6d\"",
        "\"step, 7d\"",
        "\"step, 8d\"",
        "\"step, 9d\"",
        "\"step, 10d\"",
        "\"product, 1d\"",
        "\"product, 2d\"",
        "\"product, 3d\"",
        "\"product, 4d\"",
        "\"product, 5d\"",
        "\"product, 6d\"",
        "\"product, 7d\"",
        "\"product, 8d\"",
        "\"product, 9d\"",
        "\"product, 10d\"",
        "\"gaussian, 1d\"",
        "\"gaussian, 2d\"",
        "\"gaussian, 3d\"",
        "\"gaussian, 4d\"",
        "\"gaussian, 5d\"",
        "\"gaussian, 6d\"",
        "\"gaussian, 7d\"",
        "\"gaussian, 8d\"",
        "\"gaussian, 9d\"",
        "\"gaussian, 10d\"",
        "\"double gaussian, 1d\"",
        "\"double gaussian, 2d\"",
        "\"double gaussian, 3d\"",
        "\"double gaussian, 4d\"",
        "\"double gaussian, 5d\"",
        "\"double gaussian, 6d\"",
        "\"double gaussian, 7d\"",
        "\"double gaussian, 8d\"",
        "\"double gaussian, 9d\"",
        "\"double gaussian, 10d\"",
        "\"tsuda function, 1d\"",
        "\"tsuda function, 2d\"",
        "\"tsuda function, 3d\"",
        "\"tsuda function, 4d\"",
        "\"tsuda function, 5d\"",
        "\"tsuda function, 6d\"",
        "\"tsuda function, 7d\"",
        "\"tsuda function, 8d\"",
        "\"tsuda function, 9d\"",
        "\"tsuda function, 10d\"",
        "\"testing allocation/input checks\\n\"",
        "\"error if limits too large\"",
        "\"error if num_dim = 0\"",
        "\"error if calls = 0\"",
        "\"error if xu < xl\"",
        "\"test_main.c\"",
        "\"test_main.c\"",
        "\"test_main.c\"",
        "\"test_main.c\"",
        "\"test_main.c\"",
        "\"test_main.c\"",
        "\"test_main.c\""
      ]
    },
    "fconst": {
      "start_point": [
        388,
        0
      ],
      "end_point": [
        392,
        1
      ],
      "strings": []
    },
    "fstep": {
      "start_point": [
        396,
        0
      ],
      "end_point": [
        400,
        1
      ],
      "strings": []
    },
    "f0": {
      "start_point": [
        403,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": []
    },
    "f1": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        433,
        1
      ],
      "strings": []
    },
    "f2": {
      "start_point": [
        436,
        0
      ],
      "end_point": [
        453,
        1
      ],
      "strings": []
    },
    "f3": {
      "start_point": [
        456,
        0
      ],
      "end_point": [
        471,
        1
      ],
      "strings": []
    },
    "my_error_handler": {
      "start_point": [
        474,
        0
      ],
      "end_point": [
        479,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/monte/test_main.c": {},
  "gsl/gsl-2.5/monte/vegas.c": {
    "gsl_monte_vegas_integrate": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        376,
        1
      ],
      "strings": [
        "\"number of dimensions must match allocated size\"",
        "\"xu must be greater than xl\"",
        "\"Range of integration is too large, please rescale\""
      ]
    },
    "gsl_monte_vegas_alloc": {
      "start_point": [
        380,
        0
      ],
      "end_point": [
        490,
        1
      ],
      "strings": [
        "\"failed to allocate space for vegas state struct\"",
        "\"failed to allocate space for delx\"",
        "\"failed to allocate space for d\"",
        "\"failed to allocate space for xi\"",
        "\"failed to allocate space for xin\"",
        "\"failed to allocate space for xin\"",
        "\"failed to allocate space for box\"",
        "\"failed to allocate space for bin\"",
        "\"failed to allocate space for x\""
      ]
    },
    "gsl_monte_vegas_init": {
      "start_point": [
        493,
        0
      ],
      "end_point": [
        506,
        1
      ],
      "strings": []
    },
    "gsl_monte_vegas_free": {
      "start_point": [
        508,
        0
      ],
      "end_point": [
        521,
        1
      ],
      "strings": []
    },
    "gsl_monte_vegas_chisq": {
      "start_point": [
        523,
        0
      ],
      "end_point": [
        527,
        1
      ],
      "strings": []
    },
    "gsl_monte_vegas_runval": {
      "start_point": [
        529,
        0
      ],
      "end_point": [
        534,
        1
      ],
      "strings": []
    },
    "gsl_monte_vegas_params_get": {
      "start_point": [
        536,
        0
      ],
      "end_point": [
        545,
        1
      ],
      "strings": []
    },
    "gsl_monte_vegas_params_set": {
      "start_point": [
        547,
        0
      ],
      "end_point": [
        556,
        1
      ],
      "strings": []
    },
    "init_box_coord": {
      "start_point": [
        558,
        0
      ],
      "end_point": [
        569,
        1
      ],
      "strings": []
    },
    "change_box_coord": {
      "start_point": [
        574,
        0
      ],
      "end_point": [
        594,
        1
      ],
      "strings": []
    },
    "init_grid": {
      "start_point": [
        596,
        0
      ],
      "end_point": [
        616,
        1
      ],
      "strings": []
    },
    "reset_grid_values": {
      "start_point": [
        619,
        0
      ],
      "end_point": [
        634,
        1
      ],
      "strings": []
    },
    "accumulate_distribution": {
      "start_point": [
        636,
        0
      ],
      "end_point": [
        647,
        1
      ],
      "strings": []
    },
    "random_point": {
      "start_point": [
        649,
        0
      ],
      "end_point": [
        698,
        1
      ],
      "strings": []
    },
    "resize_grid": {
      "start_point": [
        701,
        0
      ],
      "end_point": [
        740,
        1
      ],
      "strings": []
    },
    "refine_grid": {
      "start_point": [
        742,
        0
      ],
      "end_point": [
        823,
        1
      ],
      "strings": [
        "\"weight[%d] = %g\\n\""
      ]
    },
    "print_lim": {
      "start_point": [
        826,
        0
      ],
      "end_point": [
        837,
        1
      ],
      "strings": [
        "\"The limits of integration are:\\n\"",
        "\"\\nxl[%lu]=%f    xu[%lu]=%f\"",
        "\"\\n\""
      ]
    },
    "print_head": {
      "start_point": [
        839,
        0
      ],
      "end_point": [
        859,
        1
      ],
      "strings": [
        "\"\\nnum_dim=%lu, calls=%lu, it_num=%d, max_it_num=%d \"",
        "\"verb=%d, alph=%.2f,\\nmode=%d, bins=%d, boxes=%d\\n\"",
        "\"\\n       single.......iteration                   \"",
        "\"accumulated......results   \\n\"",
        "\"iteration     integral    sigma             integral   \"",
        "\"      sigma     chi-sq/it\\n\\n\""
      ]
    },
    "print_res": {
      "start_point": [
        861,
        0
      ],
      "end_point": [
        872,
        1
      ],
      "strings": [
        "\"%4d        %6.4e %10.2e          %6.4e      %8.2e  %10.2e\\n\""
      ]
    },
    "print_dist": {
      "start_point": [
        874,
        0
      ],
      "end_point": [
        898,
        1
      ],
      "strings": [
        "\"\\n axis %lu \\n\"",
        "\"      x   g\\n\"",
        "\"weight [%11.2e , %11.2e] = \"",
        "\" %11.2e\\n\"",
        "\"\\n\"",
        "\"\\n\""
      ]
    },
    "print_grid": {
      "start_point": [
        900,
        0
      ],
      "end_point": [
        923,
        1
      ],
      "strings": [
        "\"\\n axis %lu \\n\"",
        "\"      x   \\n\"",
        "\"%11.2e\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/movstat/alloc.c": {
    "gsl_movstat_alloc": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_movstat_alloc2": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "gsl_movstat_alloc_with_size": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for accumulator state\"",
        "\"failed to allocate space for work\""
      ]
    },
    "gsl_movstat_free": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/apply.c": {
    "gsl_movstat_apply_accum": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\"input and output vectors must have same length\"",
        "\"input and output vectors must have same length\""
      ]
    },
    "gsl_movstat_apply": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/deque.c": {
    "deque_size": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "deque_init": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "deque_empty": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "deque_is_empty": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "deque_is_full": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "deque_push_front": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": [
        "\"deque is full\""
      ]
    },
    "deque_push_back": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"deque is full\""
      ]
    },
    "deque_pop_front": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": [
        "\"cannot pop element from empty queue\""
      ]
    },
    "deque_pop_back": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": [
        "\"cannot pop element from empty queue\""
      ]
    },
    "deque_peek_front": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": [
        "\"queue is empty\""
      ]
    },
    "deque_peek_back": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": [
        "\"queue is empty\""
      ]
    }
  },
  "gsl/gsl-2.5/movstat/fill.c": {
    "gsl_movstat_fill": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"window center index must be between 0 and n - 1\""
      ]
    }
  },
  "gsl/gsl-2.5/movstat/funcacc.c": {
    "funcacc_size": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "funcacc_init": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "funcacc_insert": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "funcacc_delete": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "funcacc_get": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/gsl_movstat.h": {},
  "gsl/gsl-2.5/movstat/madacc.c": {
    "madacc_size": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "madacc_init": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "madacc_insert": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "madacc_delete": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "madacc_medmad": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": [
        "\"no samples yet added to workspace\""
      ]
    }
  },
  "gsl/gsl-2.5/movstat/medacc.c": {
    "medacc_size": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "medacc_init": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "medacc_insert": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "medacc_delete": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "medacc_get": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "mmless": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": []
    },
    "mmexchange": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    },
    "mmCmpExch": {
      "start_point": [
        201,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    },
    "minSortDown": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": []
    },
    "maxSortDown": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    },
    "minSortUp": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": []
    },
    "maxSortUp": {
      "start_point": [
        248,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/mmacc.c": {
    "mmacc_size": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "mmacc_init": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "mmacc_insert": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "mmacc_delete": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "mmacc_min": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": [
        "\"no samples yet added to workspace\""
      ]
    },
    "mmacc_max": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": [
        "\"no samples yet added to workspace\""
      ]
    },
    "mmacc_minmax": {
      "start_point": [
        226,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": [
        "\"no samples yet added to workspace\""
      ]
    }
  },
  "gsl/gsl-2.5/movstat/movmad.c": {
    "gsl_movstat_mad": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"x and xmedian vectors must have same length\"",
        "\"x and xmad vectors must have same length\""
      ]
    },
    "gsl_movstat_mad0": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"x and xmedian vectors must have same length\"",
        "\"x and xmad vectors must have same length\""
      ]
    }
  },
  "gsl/gsl-2.5/movstat/movmean.c": {
    "gsl_movstat_mean": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/movmedian.c": {
    "gsl_movstat_median": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/movminmax.c": {
    "gsl_movstat_minmax": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "gsl_movstat_min": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "gsl_movstat_max": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/movQn.c": {
    "gsl_movstat_Qn": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/movqqr.c": {
    "gsl_movstat_qqr": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"x and xqqr vectors must have same length\"",
        "\"q must be between 0 and 0.5\""
      ]
    }
  },
  "gsl/gsl-2.5/movstat/movSn.c": {
    "gsl_movstat_Sn": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/movsum.c": {
    "gsl_movstat_sum": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/movvariance.c": {
    "gsl_movstat_variance": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "gsl_movstat_sd": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/mvacc.c": {
    "mvacc_size": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "mvacc_init": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "mvacc_insert": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "mvacc_delete": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "mvacc_mean": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "mvacc_variance": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "mvacc_sd": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/qnacc.c": {
    "qnacc_size": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "qnacc_init": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "qnacc_insert": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "qnacc_delete": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "qnacc_get": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/qqracc.c": {
    "qqracc_size": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "qqracc_init": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "qqracc_insert": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "qqracc_delete": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "qqracc_get": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/ringbuf.c": {
    "ringbuf_size": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "ringbuf_init": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "ringbuf_empty": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "ringbuf_is_empty": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "ringbuf_is_full": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "ringbuf_insert": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    },
    "ringbuf_pop_back": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"buffer is empty\""
      ]
    },
    "ringbuf_peek": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"buffer is empty\""
      ]
    },
    "ringbuf_peek_front": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": [
        "\"buffer is empty\""
      ]
    },
    "ringbuf_peek_back": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        191,
        1
      ],
      "strings": [
        "\"buffer is empty\""
      ]
    },
    "ringbuf_copy": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "ringbuf_n": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/snacc.c": {
    "snacc_size": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "snacc_init": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "snacc_insert": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "snacc_delete": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "snacc_get": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/sumacc.c": {
    "sumacc_size": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "sumacc_init": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "sumacc_insert": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "sumacc_delete": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "sumacc_get": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/test.c": {
    "compare_vectors": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"%s i=%zu\""
      ]
    },
    "random_vector": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "test_noisy_sine": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/test_mad.c": {
    "slow_movmad": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "func_mad": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "test_mad_proc": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": [
        "\"n=%zu H=%zu J=%zu endtype=%u MAD0 random\"",
        "\"n=%zu H=%zu J=%zu endtype=%u MAD0 random median test\"",
        "\"n=%zu H=%zu J=%zu endtype=%u MAD0 random in-place\"",
        "\"n=%zu H=%zu J=%zu endtype=%u MAD0 user\"",
        "\"n=%zu H=%zu J=%zu endtype=%u MAD random\""
      ]
    },
    "test_mad": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/test_mean.c": {
    "slow_movmean": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "func_mean": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "test_mean_proc": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": [
        "\"n=%zu H=%zu J=%zu endtype=%u mean random\"",
        "\"n=%zu H=%zu J=%zu endtype=%u mean random in-place\"",
        "\"n=%zu H=%zu J=%zu endtype=%u mean user\""
      ]
    },
    "test_mean": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/test_median.c": {
    "slow_movmedian": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "test_median_root": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": [
        "\"n=%zu K=%zu endtype=%u SMF root sequence\""
      ]
    },
    "func_median": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "test_median_proc": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"n=%zu H=%zu J=%zu endtype=%u median random\"",
        "\"n=%zu H=%zu J=%zu endtype=%u median random in-place\"",
        "\"n=%zu H=%zu J=%zu endtype=%u median user\""
      ]
    },
    "test_median": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/test_minmax.c": {
    "slow_minmax": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "func_min": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "func_max": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "test_minmax_x": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": [
        "\"test_minmax: %s min endtype=%d n=%zu H=%d J=%d\"",
        "\"test_minmax: %s max endtype=%d n=%zu H=%d J=%d\"",
        "\"test_minmax: %s minmax(minimum) endtype=%d n=%zu H=%d J=%d\"",
        "\"test_minmax: %s minmax(maximum) endtype=%d n=%zu H=%d J=%d\"",
        "\"test_minmax: %s in-place min endtype=%d n=%zu H=%d J=%d\"",
        "\"test_minmax: %s in-place max endtype=%d n=%zu H=%d J=%d\"",
        "\"n=%zu H=%d J=%d endtype=%u min user\"",
        "\"n=%zu H=%d J=%d endtype=%u max user\""
      ]
    },
    "test_minmax_alt": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": [
        "\"alternating\""
      ]
    },
    "test_minmax_sine": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": [
        "\"noisy_sine\""
      ]
    },
    "test_minmax_random": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"random\""
      ]
    },
    "test_minmax": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/test_Qn.c": {
    "slow_movQn": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "func_Qn": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "test_Qn_proc": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": [
        "\"n=%zu H=%zu J=%zu endtype=%u Qn random\"",
        "\"n=%zu H=%zu J=%zu endtype=%u Qn random in-place\"",
        "\"n=%zu H=%zu J=%zu endtype=%u Qn user\""
      ]
    },
    "test_Qn": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/test_qqr.c": {
    "slow_movqqr": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "func_qqr": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "test_qqr_proc": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"n=%zu H=%zu J=%zu endtype=%u QQR random\"",
        "\"n=%zu H=%zu J=%zu endtype=%u QQR random in-place\"",
        "\"n=%zu H=%zu J=%zu endtype=%u QQR user\""
      ]
    },
    "test_qqr": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/test_Sn.c": {
    "slow_movSn": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "func_Sn": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "test_Sn_proc": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": [
        "\"n=%zu H=%zu J=%zu endtype=%u Sn random\"",
        "\"n=%zu H=%zu J=%zu endtype=%u Sn random in-place\"",
        "\"n=%zu H=%zu J=%zu endtype=%u Sn user\""
      ]
    },
    "test_Sn": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/test_sum.c": {
    "slow_movsum": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "func_sum": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "test_sum_proc": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"n=%zu H=%zu J=%zu endtype=%u sum random\"",
        "\"n=%zu H=%zu J=%zu endtype=%u sum random in-place\"",
        "\"n=%zu H=%zu J=%zu endtype=%u sum user\""
      ]
    },
    "test_sum": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/movstat/test_variance.c": {
    "slow_movvar": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "slow_movsd": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "func_var": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "func_sd": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "test_variance_proc": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": [
        "\"n=%zu H=%zu J=%zu endtype=%u variance random\"",
        "\"n=%zu H=%zu J=%zu endtype=%u variance random in-place\"",
        "\"n=%zu H=%zu J=%zu endtype=%u variance user\"",
        "\"n=%zu H=%zu J=%zu endtype=%u stddev random\"",
        "\"n=%zu H=%zu J=%zu endtype=%u stddev random in-place\"",
        "\"n=%zu H=%zu J=%zu endtype=%u stddev user\""
      ]
    },
    "test_variance": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/convergence.c": {
    "gsl_multifit_fdfsolver_test": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "gsl_multifit_test_delta": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": [
        "\"relative tolerance is negative\""
      ]
    },
    "gsl_multifit_test_gradient": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": [
        "\"absolute tolerance is negative\""
      ]
    },
    "scaled_infnorm": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/covar.c": {
    "gsl_multifit_covar": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": [
        "\"Jacobian be rectangular M x N with M >= N\"",
        "\"covariance matrix must be square and match second dimension of jacobian\""
      ]
    },
    "gsl_multifit_covar_QRPT": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/fdfridge.c": {
    "gsl_multifit_fdfridge_alloc": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"failed to allocate workspace\"",
        "\"failed to allocate space for fdfsolver\"",
        "\"failed to allocate space for weight vector\"",
        "\"failed to allocate space for f vector\""
      ]
    },
    "gsl_multifit_fdfridge_free": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfridge_name": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfridge_position": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfridge_residual": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfridge_niter": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfridge_set": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfridge_wset": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": [
        "\"function size does not match solver\"",
        "\"vector length does not match solver\"",
        "\"weight vector length does not match solver\""
      ]
    },
    "gsl_multifit_fdfridge_set2": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfridge_wset2": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": [
        "\"function size does not match solver\"",
        "\"vector length does not match solver\"",
        "\"lambda vector size does not match solver\"",
        "\"weight vector length does not match solver\""
      ]
    },
    "gsl_multifit_fdfridge_set3": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfridge_wset3": {
      "start_point": [
        271,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": [
        "\"function size does not match solver\"",
        "\"vector length does not match solver\"",
        "\"L matrix size2 does not match solver\"",
        "\"weight vector length does not match solver\""
      ]
    },
    "gsl_multifit_fdfridge_iterate": {
      "start_point": [
        338,
        0
      ],
      "end_point": [
        348,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfridge_driver": {
      "start_point": [
        350,
        0
      ],
      "end_point": [
        361,
        1
      ],
      "strings": []
    },
    "fdfridge_f": {
      "start_point": [
        379,
        0
      ],
      "end_point": [
        413,
        1
      ],
      "strings": []
    },
    "fdfridge_df": {
      "start_point": [
        415,
        0
      ],
      "end_point": [
        459,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/fdfsolver.c": {
    "gsl_multifit_fdfsolver_alloc": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"insufficient data points, n < p\"",
        "\"failed to allocate space for multifit solver struct\"",
        "\"failed to allocate space for x\"",
        "\"failed to allocate space for f\"",
        "\"failed to allocate space for dx\"",
        "\"failed to allocate space for g\"",
        "\"failed to allocate space for sqrt_wts\"",
        "\"failed to allocate space for multifit solver state\"",
        "\"failed to set solver\""
      ]
    },
    "gsl_multifit_fdfsolver_set": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfsolver_wset": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": [
        "\"function size does not match solver\"",
        "\"vector length does not match solver\"",
        "\"weight vector length does not match solver\""
      ]
    },
    "gsl_multifit_fdfsolver_iterate": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfsolver_driver": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfsolver_jac": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": [
        "\"Jacobian dimensions do not match solver\""
      ]
    },
    "gsl_multifit_fdfsolver_free": {
      "start_point": [
        258,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfsolver_name": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        291,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfsolver_position": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfsolver_residual": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        303,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfsolver_niter": {
      "start_point": [
        305,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": []
    },
    "gsl_multifit_eval_wf": {
      "start_point": [
        326,
        0
      ],
      "end_point": [
        338,
        1
      ],
      "strings": []
    },
    "gsl_multifit_eval_wdf": {
      "start_point": [
        355,
        0
      ],
      "end_point": [
        379,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/fdjac.c": {
    "fdjac": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfsolver_dif_df": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fdfsolver_dif_fdf": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/fsolver.c": {
    "gsl_multifit_fsolver_alloc": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"insufficient data points, n < p\"",
        "\"failed to allocate space for multifit solver struct\"",
        "\"failed to allocate space for x\"",
        "\"failed to allocate space for f\"",
        "\"failed to allocate space for dx\"",
        "\"failed to allocate space for multifit solver state\"",
        "\"failed to set solver\""
      ]
    },
    "gsl_multifit_fsolver_set": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": [
        "\"function size does not match solver\"",
        "\"vector length does not match solver\""
      ]
    },
    "gsl_multifit_fsolver_iterate": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fsolver_driver": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fsolver_free": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fsolver_name": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "gsl_multifit_fsolver_position": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/gcv.c": {
    "gsl_multifit_linear_gcv_init": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"y vector does not match workspace\"",
        "\"UTy vector does not match workspace\""
      ]
    },
    "gsl_multifit_linear_gcv_curve": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"UTy vector does not match workspace\"",
        "\"size of reg_param and G vectors do not match\""
      ]
    },
    "gsl_multifit_linear_gcv_min": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": [
        "\"UTy vector does not match workspace\"",
        "\"size of reg_param and G vectors do not match\""
      ]
    },
    "gsl_multifit_linear_gcv_calc": {
      "start_point": [
        273,
        0
      ],
      "end_point": [
        303,
        1
      ],
      "strings": [
        "\"UTy vector does not match workspace\""
      ]
    },
    "gsl_multifit_linear_gcv": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": [
        "\"y vector does not match workspace\"",
        "\"size of reg_param and G vectors do not match\""
      ]
    },
    "gcv_func": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        396,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/gradient.c": {
    "gsl_multifit_gradient": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/gsl_multifit.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/gsl_multifit_nlin.h": {},
  "gsl/gsl-2.5/multifit/linear_common.c": {
    "multifit_linear_solve": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"observation matrix does not match workspace\"",
        "\"number of observations in y does not match matrix\"",
        "\"number of parameters c does not match matrix\"",
        "\"tolerance must be positive\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit/lmder.c": {
    "lmder_alloc": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"failed to allocate space for J\"",
        "\"failed to allocate space for r\"",
        "\"failed to allocate space for tau\"",
        "\"failed to allocate space for diag\"",
        "\"failed to allocate space for qtf\"",
        "\"failed to allocate space for newton\"",
        "\"failed to allocate space for gradient\"",
        "\"failed to allocate space for x_trial\"",
        "\"failed to allocate space for f_trial\"",
        "\"failed to allocate space for df\"",
        "\"failed to allocate space for sdiag\"",
        "\"failed to allocate space for rptdx\"",
        "\"failed to allocate space for w\"",
        "\"failed to allocate space for work1\"",
        "\"failed to allocate space for perm\""
      ]
    },
    "lmder_set": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "lmsder_set": {
      "start_point": [
        336,
        0
      ],
      "end_point": [
        343,
        1
      ],
      "strings": []
    },
    "lmder_iterate": {
      "start_point": [
        345,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": []
    },
    "lmsder_iterate": {
      "start_point": [
        354,
        0
      ],
      "end_point": [
        361,
        1
      ],
      "strings": []
    },
    "lmder_gradient": {
      "start_point": [
        363,
        0
      ],
      "end_point": [
        369,
        1
      ],
      "strings": []
    },
    "lmder_jac": {
      "start_point": [
        371,
        0
      ],
      "end_point": [
        378,
        1
      ],
      "strings": []
    },
    "lmder_free": {
      "start_point": [
        380,
        0
      ],
      "end_point": [
        429,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/lmiterate.c": {
    "iterate": {
      "start_point": [
        0,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": [
        "\"set delta = pnorm = %g\\n\"",
        "\"lmiterate: fnorm = %g fnorm1 = %g  actred = %g\\n\"",
        "\"r = \"",
        "\"%g\"",
        "\"perm = \"",
        "\"%d\"",
        "\"dx = \"",
        "\"%g\"",
        "\"rptdx = \"",
        "\"%g\"",
        "\"lmiterate: prered = %g dirder = %g ratio = %g\\n\"",
        "\"ratio > p25\\n\"",
        "\"updated step bounds: delta = %g, par = %g\\n\"",
        "\"ratio < p25\\n\"",
        "\"updated step bounds: delta = %g, par = %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit/lmmisc.c": {
    "lmniel_calc_dx": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "lmniel_trial_step": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "lmniel_calc_dF": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "lmniel_calc_dL": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/lmniel.c": {
    "lmniel_alloc": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": [
        "\"failed to allocate space for A\"",
        "\"failed to allocate space for J\"",
        "\"failed to allocate space for diag\"",
        "\"failed to allocate space for rhs\"",
        "\"failed to allocate space for work\"",
        "\"failed to allocate space for A_copy\"",
        "\"failed to allocate space for x_trial\"",
        "\"failed to allocate space for f_trial\""
      ]
    },
    "lmniel_free": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "lmniel_set": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        212,
        1
      ],
      "strings": []
    },
    "lmniel_iterate": {
      "start_point": [
        241,
        0
      ],
      "end_point": [
        349,
        1
      ],
      "strings": []
    },
    "lmniel_gradient": {
      "start_point": [
        351,
        0
      ],
      "end_point": [
        358,
        1
      ],
      "strings": []
    },
    "lmniel_jac": {
      "start_point": [
        360,
        0
      ],
      "end_point": [
        367,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/lmpar.c": {
    "count_nsing": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "compute_newton_direction": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\"nsing = %d\\n\"",
        "\"r = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"qtf = \"",
        "\"%g\"",
        "\"\\n\""
      ]
    },
    "compute_newton_correction": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "compute_newton_bound": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    },
    "compute_gradient_direction": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    },
    "compute_gradient": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    },
    "lmpar": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        518,
        1
      ],
      "strings": [
        "\"ENTERING lmpar\\n\"",
        "\"newton = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"diag = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"dxnorm = %g, delta = %g, fp = %g\\n\"",
        "\"took newton (fp = %g, delta = %g)\\n\"",
        "\"r = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"newton = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"dxnorm = %g\\n\"",
        "\"perm = \"",
        "\"%d\"",
        "\"diag = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"w = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"par       = %g\\n\"",
        "\"par_lower = %g\\n\"",
        "\"gradient = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"gnorm = %g\\n\"",
        "\"par_upper = %g\\n\"",
        "\"set par to par_upper\\n\"",
        "\"set par to par_lower\\n\"",
        "\"set par to gnorm/dxnorm = %g\\n\"",
        "\"lmpar iteration = %d\\n\"",
        "\"par = 0, set par to  = %g\\n\"",
        "\"calling qrsolv with par = %g\\n\"",
        "\"After qrsolv dxnorm = %g, delta = %g, fp = %g\\n\"",
        "\"sdiag = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"x = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"r = \"",
        "\"%g\"",
        "\"\\nXXX\\n\"",
        "\"newton_correction = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"fp = %g\\n\"",
        "\"par_lower = %g\\n\"",
        "\"par_upper = %g\\n\"",
        "\"par_c = %g\\n\"",
        "\"fp > 0: set par_lower = par = %g\\n\"",
        "\"fp < 0: set par_upper = par = %g\\n\"",
        "\"improved estimate par = MAX(%g, %g) \\n\"",
        "\"improved estimate par = %g \\n\"",
        "\"LEAVING lmpar, par = %g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit/lmset.c": {
    "set": {
      "start_point": [
        0,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"r = \"",
        "\"%g\"",
        "\"perm = \"",
        "\"%d\"",
        "\"tau = \"",
        "\"%g\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit/lmutil.c": {
    "enorm": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        10,
        1
      ],
      "strings": []
    },
    "scaled_enorm": {
      "start_point": [
        12,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": []
    },
    "compute_delta": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "compute_actual_reduction": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "compute_diag": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "update_diag": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "compute_rptdx": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "compute_trial_step": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/multilinear.c": {
    "gsl_multifit_linear": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "gsl_multifit_linear_tsvd": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": [
        "\"number of observations in y does not match matrix\"",
        "\"number of parameters c does not match matrix\"",
        "\"tolerance must be positive\""
      ]
    },
    "gsl_multifit_linear_svd": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "gsl_multifit_linear_bsvd": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": []
    },
    "gsl_multifit_linear_rank": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    },
    "gsl_multifit_linear_est": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": [
        "\"number of parameters c does not match number of observations x\"",
        "\"covariance matrix is not square\"",
        "\"number of parameters c does not match size of covariance matrix cov\""
      ]
    },
    "gsl_multifit_linear_rcond": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        246,
        1
      ],
      "strings": []
    },
    "gsl_multifit_linear_residuals": {
      "start_point": [
        258,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": [
        "\"number of observations in y does not match rows of matrix X\"",
        "\"number of parameters c does not match columns of matrix X\"",
        "\"number of observations in y does not match number of residuals\""
      ]
    },
    "multifit_linear_svd": {
      "start_point": [
        305,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": [
        "\"observation matrix larger than workspace\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit/multireg.c": {
    "gsl_multifit_linear_solve": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "gsl_multifit_linear_applyW": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"y vector does not match X\"",
        "\"weight vector does not match X\"",
        "\"WX matrix dimensions do not match X\"",
        "\"Wy vector must be length n\""
      ]
    },
    "gsl_multifit_linear_wstdform1": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"observation matrix larger than workspace\"",
        "\"L vector does not match X\"",
        "\"y vector does not match X\"",
        "\"weight vector does not match X\"",
        "\"Xs matrix dimensions do not match X\"",
        "\"ys vector must be length n\"",
        "\"L matrix is singular\""
      ]
    },
    "gsl_multifit_linear_stdform1": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "gsl_multifit_linear_L_decomp": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": [
        "\"tau vector must be min(m,p)\""
      ]
    },
    "gsl_multifit_linear_wstdform2": {
      "start_point": [
        344,
        0
      ],
      "end_point": [
        491,
        1
      ],
      "strings": [
        "\"observation matrix larger than workspace\"",
        "\"LQR and X matrices have different numbers of columns\"",
        "\"y vector does not match X\"",
        "\"weights vector must be length n\"",
        "\"Xs matrix must be n-by-p\"",
        "\"ys vector must have length n\"",
        "\"Xs matrix must be (n-p+m)-by-m\"",
        "\"ys vector must be of length (n-p+m)\"",
        "\"M matrix must be n-by-p\""
      ]
    },
    "gsl_multifit_linear_stdform2": {
      "start_point": [
        493,
        0
      ],
      "end_point": [
        508,
        1
      ],
      "strings": []
    },
    "gsl_multifit_linear_genform1": {
      "start_point": [
        516,
        0
      ],
      "end_point": [
        542,
        1
      ],
      "strings": [
        "\"L vector does not match workspace\"",
        "\"cs vector does not match L\"",
        "\"c vector does not match L\""
      ]
    },
    "gsl_multifit_linear_wgenform2": {
      "start_point": [
        560,
        0
      ],
      "end_point": [
        678,
        1
      ],
      "strings": [
        "\"X matrix does not match workspace\"",
        "\"LQR matrix does not match X\"",
        "\"c vector does not match X\"",
        "\"w vector does not match X\"",
        "\"y vector does not match X\"",
        "\"cs vector must be length p\"",
        "\"cs vector must be length m\"",
        "\"M matrix must be size n-by-p\""
      ]
    },
    "gsl_multifit_linear_genform2": {
      "start_point": [
        680,
        0
      ],
      "end_point": [
        695,
        1
      ],
      "strings": []
    },
    "gsl_multifit_linear_lreg": {
      "start_point": [
        710,
        0
      ],
      "end_point": [
        742,
        1
      ],
      "strings": [
        "\"smax must be positive\""
      ]
    },
    "gsl_multifit_linear_lcurve": {
      "start_point": [
        763,
        0
      ],
      "end_point": [
        856,
        1
      ],
      "strings": [
        "\"y vector does not match workspace\"",
        "\"at least 3 points are needed for L-curve analysis\"",
        "\"size of rho and eta vectors do not match\"",
        "\"size of reg_param and eta vectors do not match\""
      ]
    },
    "gsl_multifit_linear_lcorner": {
      "start_point": [
        875,
        0
      ],
      "end_point": [
        954,
        1
      ],
      "strings": [
        "\"at least 3 points are needed for L-curve analysis\"",
        "\"size of rho and eta vectors do not match\"",
        "\"failed to find minimum radius\""
      ]
    },
    "gsl_multifit_linear_lcorner2": {
      "start_point": [
        978,
        0
      ],
      "end_point": [
        1063,
        1
      ],
      "strings": [
        "\"at least 3 points are needed for L-curve analysis\"",
        "\"size of reg_param and eta vectors do not match\"",
        "\"failed to find minimum radius\""
      ]
    },
    "gsl_multifit_linear_Lk": {
      "start_point": [
        1073,
        0
      ],
      "end_point": [
        1131,
        1
      ],
      "strings": [
        "\"p must be larger than derivative order\"",
        "\"derivative order k too large\"",
        "\"L matrix must be (p-k)-by-p\""
      ]
    },
    "gsl_multifit_linear_Lsobolev": {
      "start_point": [
        1152,
        0
      ],
      "end_point": [
        1219,
        1
      ],
      "strings": [
        "\"p is larger than workspace\"",
        "\"p must be larger than derivative order\"",
        "\"alpha must be size kmax + 1\"",
        "\"L matrix is wrong size\"",
        "\"L matrix is not square\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit/multirobust.c": {
    "gsl_multifit_robust_alloc": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": [
        "\"observations n must be >= p\"",
        "\"failed to allocate space for multifit_robust struct\"",
        "\"failed to allocate space for multifit_linear struct\"",
        "\"failed to allocate space for residuals\"",
        "\"failed to allocate space for weights\"",
        "\"failed to allocate space for c_prev\"",
        "\"failed to allocate space for residual factors\"",
        "\"failed to allocate space for psi\"",
        "\"failed to allocate space for dpsi\"",
        "\"failed to allocate space for QSI\"",
        "\"failed to allocate space for D\"",
        "\"failed to allocate space for workn\""
      ]
    },
    "gsl_multifit_robust_free": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    },
    "gsl_multifit_robust_tune": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": []
    },
    "gsl_multifit_robust_maxiter": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"maxiter must be greater than 0\""
      ]
    },
    "gsl_multifit_robust_name": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    },
    "gsl_multifit_robust_statistics": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": []
    },
    "gsl_multifit_robust_weights": {
      "start_point": [
        268,
        0
      ],
      "end_point": [
        292,
        1
      ],
      "strings": [
        "\"residual vector does not match weight vector size\""
      ]
    },
    "gsl_multifit_robust": {
      "start_point": [
        306,
        0
      ],
      "end_point": [
        475,
        1
      ],
      "strings": [
        "\"number of observations in y does not match rows of matrix X\"",
        "\"number of parameters c does not match columns of matrix X\"",
        "\"covariance matrix is not square\"",
        "\"number of parameters does not match size of covariance matrix\"",
        "\"size of workspace does not match size of observation matrix\"",
        "\"maximum iterations exceeded\""
      ]
    },
    "gsl_multifit_robust_est": {
      "start_point": [
        478,
        0
      ],
      "end_point": [
        485,
        1
      ],
      "strings": []
    },
    "gsl_multifit_robust_residuals": {
      "start_point": [
        504,
        0
      ],
      "end_point": [
        547,
        1
      ],
      "strings": [
        "\"number of observations in y does not match rows of matrix X\"",
        "\"number of parameters c does not match columns of matrix X\"",
        "\"number of observations in y does not match number of residuals\""
      ]
    },
    "robust_test_convergence": {
      "start_point": [
        570,
        0
      ],
      "end_point": [
        588,
        1
      ],
      "strings": []
    },
    "robust_madsigma": {
      "start_point": [
        604,
        0
      ],
      "end_point": [
        631,
        1
      ],
      "strings": []
    },
    "robust_robsigma": {
      "start_point": [
        646,
        0
      ],
      "end_point": [
        690,
        1
      ],
      "strings": []
    },
    "robust_sigma": {
      "start_point": [
        707,
        0
      ],
      "end_point": [
        721,
        1
      ],
      "strings": []
    },
    "robust_covariance": {
      "start_point": [
        734,
        0
      ],
      "end_point": [
        766,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/multiwlinear.c": {
    "gsl_multifit_wlinear": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "gsl_multifit_wlinear_tsvd": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": [
        "\"number of observations in y does not match matrix\"",
        "\"number of weights in w does not match matrix\"",
        "\"number of parameters c does not match matrix\"",
        "\"tolerance must be positive\""
      ]
    },
    "gsl_multifit_wlinear_svd": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "gsl_multifit_wlinear_usvd": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/qrsolv.c": {
    "qrsolv": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/robust_wfun.c": {
    "bisquare": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "bisquare_dpsi": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "cauchy": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "cauchy_dpsi": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "fair": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "fair_dpsi": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "huber": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "huber_dpsi": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    },
    "ols": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": []
    },
    "ols_dpsi": {
      "start_point": [
        215,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "welsch": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": []
    },
    "welsch_dpsi": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_bard.c": {
    "bard_checksol": {
      "start_point": [
        14,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "bard_f": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "bard_df": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_beale.c": {
    "beale_checksol": {
      "start_point": [
        10,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "beale_f": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "beale_df": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_biggs.c": {
    "biggs_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        28,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s norm\""
      ]
    },
    "biggs_f": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "biggs_df": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_box.c": {
    "box_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "box_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "box_df": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_boxbod.c": {
    "boxbod_checksol": {
      "start_point": [
        17,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "boxbod_f": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "boxbod_df": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_brown1.c": {
    "brown1_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "brown1_f": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "brown1_df": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_brown2.c": {
    "brown2_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"%s/%s alpha lhs\"",
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\"",
        "\"%s/%s last element\""
      ]
    },
    "brown2_f": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "brown2_df": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_brown3.c": {
    "brown3_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "brown3_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    },
    "brown3_df": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_eckerle.c": {
    "eckerle_checksol": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "eckerle_f": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "eckerle_df": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_enso.c": {
    "enso_checksol": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "enso_f": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    },
    "enso_df": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        276,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_estimator.c": {
    "test_estimator": {
      "start_point": [
        0,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": [
        "\"gsl_multifit_linear_est y\"",
        "\"gsl_multifit_linear_est yerr\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit/test_exp1.c": {
    "exp1_checksol": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "exp1_f": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "exp1_df": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_filip.c": {
    "test_filip_results": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": [
        "\"%s c[%zu]\"",
        "\"%s cov[%zu,%zu]\"",
        "\"%s chisq\"",
        "\"%s chisq residuals\""
      ]
    },
    "test_filip": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": [
        "\"filip gsl_multifit_linear\"",
        "\"filip gsl_multifit_robust\"",
        "\"filip gsl_multifit_wlinear\"",
        "\"filip gsl_multifit_wlinear cov(%d,%d)\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit/test_gaussian.c": {
    "gaussian_checksol": {
      "start_point": [
        14,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "gaussian_f": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "gaussian_df": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_hahn1.c": {
    "hahn1_checksol": {
      "start_point": [
        501,
        0
      ],
      "end_point": [
        521,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "hahn1_f": {
      "start_point": [
        523,
        0
      ],
      "end_point": [
        543,
        1
      ],
      "strings": []
    },
    "hahn1_df": {
      "start_point": [
        545,
        0
      ],
      "end_point": [
        571,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_helical.c": {
    "helical_checksol": {
      "start_point": [
        10,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "helical_f": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "helical_df": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_jennrich.c": {
    "jennrich_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "jennrich_f": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "jennrich_df": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_kirby2.c": {
    "kirby2_checksol": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        347,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "kirby2_f": {
      "start_point": [
        349,
        0
      ],
      "end_point": [
        369,
        1
      ],
      "strings": []
    },
    "kirby2_df": {
      "start_point": [
        371,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_kowalik.c": {
    "kowalik_checksol": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "kowalik_f": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "kowalik_df": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_lin1.c": {
    "lin1_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "lin1_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "lin1_df": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_lin2.c": {
    "lin2_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s coeff sum\""
      ]
    },
    "lin2_f": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "lin2_df": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_lin3.c": {
    "lin3_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s coeff sum\""
      ]
    },
    "lin3_f": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "lin3_df": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_linear.c": {
    "test_random_vector": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    },
    "test_random_matrix": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "test_random_vector_noise": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "test_linear": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_longley.c": {
    "test_longley_results": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"%s c[%zu]\"",
        "\"%s cov[%zu,%zu]\"",
        "\"%s chisq\"",
        "\"%s chisq residuals\""
      ]
    },
    "test_longley": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": [
        "\"longley gsl_multifit_linear\"",
        "\"longley gsl_multifit_robust\"",
        "\"longley gsl_multifit_wlinear\"",
        "\"longley gsl_multifit_wlinear cov(%d,%d)\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit/test_meyer.c": {
    "meyer_checksol": {
      "start_point": [
        14,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "meyer_f": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "meyer_df": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_meyerscal.c": {
    "meyerscal_checksol": {
      "start_point": [
        14,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "meyerscal_f": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "meyerscal_df": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_nelson.c": {
    "nelson_f": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "nelson_df": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_nonlinear.c": {
    "test_nonlinear": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        308,
        1
      ],
      "strings": []
    },
    "test_fdf": {
      "start_point": [
        329,
        0
      ],
      "end_point": [
        398,
        1
      ],
      "strings": [
        "\"%s/scale=%g%s\"",
        "\"\"",
        "\"/fdiff\"",
        "\"%s/%s did not converge, status=%s\"",
        "\"%s/scale=%g%s/weights\"",
        "\"\"",
        "\"/fdiff\"",
        "\"%s/%s did not converge, status=%s\""
      ]
    },
    "test_fdfridge": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        527,
        1
      ],
      "strings": [
        "\"ridge/%s\"",
        "\"%s/%s did not converge, status=%s\"",
        "\"%s/lambda/%s did not converge, status=%s\"",
        "\"%s/L/%s did not converge, status=%s\"",
        "\"%s/%s ridge lambda=%g i=%zu\"",
        "\"%s/%s ridge lambda=%g i=%zu\""
      ]
    },
    "test_fdf_checksol": {
      "start_point": [
        529,
        0
      ],
      "end_point": [
        568,
        1
      ],
      "strings": [
        "\"%s/%s, sigma(%d)\""
      ]
    },
    "test_scale_x0": {
      "start_point": [
        570,
        0
      ],
      "end_point": [
        579,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_osborne.c": {
    "osborne_checksol": {
      "start_point": [
        16,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=0\""
      ]
    },
    "osborne_f": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "osborne_df": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_penalty1.c": {
    "penalty1_checksol": {
      "start_point": [
        10,
        0
      ],
      "end_point": [
        19,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\""
      ]
    },
    "penalty1_f": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "penalty1_df": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_penalty2.c": {
    "penalty2_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        17,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\""
      ]
    },
    "penalty2_f": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "penalty2_df": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_pontius.c": {
    "test_pontius_results": {
      "start_point": [
        17,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": [
        "\"%s c[%zu]\"",
        "\"%s cov[%zu,%zu]\"",
        "\"%s chisq\"",
        "\"%s chisq residuals\""
      ]
    },
    "test_pontius": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": [
        "\"pontius gsl_multifit_linear\"",
        "\"pontius gsl_multifit_robust\"",
        "\"pontius gsl_multifit_wlinear\"",
        "\"pontius gsl_multifit_wlinear cov(%d,%d)\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit/test_powell1.c": {
    "powell1_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "powell1_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "powell1_df": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_powell2.c": {
    "powell2_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "powell2_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "powell2_df": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_powell3.c": {
    "powell3_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "powell3_f": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    },
    "powell3_df": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_rat42.c": {
    "rat42_checksol": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rat42_f": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "rat42_df": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_rat43.c": {
    "rat43_checksol": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rat43_f": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "rat43_df": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_reg.c": {
    "test_random_matrix_orth": {
      "start_point": [
        1,
        0
      ],
      "end_point": [
        16,
        1
      ],
      "strings": []
    },
    "test_random_matrix_ill": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "test_reg1": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"test_reg1: %s, lambda = 0, n=%zu p=%zu chisq\"",
        "\"test_reg1: %s, lambda = 0, n=%zu p=%zu c0/c1\""
      ]
    },
    "test_reg2": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"test_reg2: %s, snorm lambda=%g n=%zu p=%zu\"",
        "\"test_reg2: %s, rnorm lambda=%g n=%zu p=%zu\"",
        "\"test_reg2: %s, c0/c1 lambda=%g n=%zu p=%zu\""
      ]
    },
    "test_reg3": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        267,
        1
      ],
      "strings": [
        "\"test_reg3: %s, snorm lambda=%g n=%zu p=%zu\"",
        "\"test_reg3: %s, rnorm lambda=%g n=%zu p=%zu\"",
        "\"test_reg3: %s, c0/c1 j=%zu lambda=%g n=%zu p=%zu\""
      ]
    },
    "test_reg4": {
      "start_point": [
        271,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": [
        "\"test_reg4: %s snorm lambda=%g\"",
        "\"test_reg4: %s rnorm lambda=%g\"",
        "\"test_reg4: %s lambda=%g n=%zu p=%zu j=%zu\""
      ]
    },
    "test_reg_system": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        469,
        1
      ],
      "strings": [
        "\"unweighted\"",
        "\"weighted\"",
        "\"unweighted\"",
        "\"unweighted\"",
        "\"Lsqr unweighted\"",
        "\"Ltall unweighted\"",
        "\"L1 unweighted\"",
        "\"L2 unweighted\"",
        "\"L3 unweighted\"",
        "\"L5 unweighted\"",
        "\"weighted\"",
        "\"weighted\"",
        "\"Lsqr weighted\"",
        "\"L1 weighted\"",
        "\"L2 weighted\"",
        "\"L3 weighted\"",
        "\"L5 weighted\"",
        "\"unweighted big\"",
        "\"unweighted big\"",
        "\"Lsqr unweighted big\"",
        "\"L1 unweighted big\"",
        "\"L2 unweighted big\"",
        "\"L3 unweighted big\"",
        "\"L5 unweighted big\"",
        "\"weighted big\"",
        "\"weighted big\"",
        "\"Lsqr weighted big\"",
        "\"L1 weighted big\"",
        "\"L2 weighted big\"",
        "\"L3 weighted big\"",
        "\"L5 weighted big\""
      ]
    },
    "test_reg_sobolev": {
      "start_point": [
        471,
        0
      ],
      "end_point": [
        532,
        1
      ],
      "strings": [
        "\"sobolov k=%zu LTL(%zu,%zu)\""
      ]
    },
    "test_reg": {
      "start_point": [
        535,
        0
      ],
      "end_point": [
        547,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_rosenbrock.c": {
    "rosenbrock_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rosenbrock_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "rosenbrock_df": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_rosenbrocke.c": {
    "rosenbrocke_checksol": {
      "start_point": [
        10,
        0
      ],
      "end_point": [
        28,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rosenbrocke_f": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "rosenbrocke_df": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_roth.c": {
    "roth_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "roth_f": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "roth_df": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_shaw.c": {
    "shaw_gcv_G": {
      "start_point": [
        13,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "shaw_system": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    },
    "test_shaw_system_l": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": [
        "\"shaw rho n=%zu p=%zu lambda=%e\"",
        "\"shaw eta n=%zu p=%zu lambda=%e\"",
        "\"shaw: n=%zu p=%zu L-curve corner lambda\"",
        "\"shaw: n=%zu p=%zu rnorm\"",
        "\"shaw: n=%zu p=%zu snorm\""
      ]
    },
    "test_shaw_system_gcv": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": [
        "\"shaw[%zu,%zu] gcv G i=%zu lambda=%e\"",
        "\"shaw gcv: n=%zu p=%zu lambda\"",
        "\"shaw gcv: n=%zu p=%zu rnorm\"",
        "\"shaw gcv: n=%zu p=%zu snorm\""
      ]
    },
    "test_shaw": {
      "start_point": [
        316,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_thurber.c": {
    "thurber_checksol": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "thurber_f": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "thurber_df": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_vardim.c": {
    "vardim_checksol": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "vardim_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "vardim_df": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_watson.c": {
    "watson_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "watson_f": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "watson_df": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_wnlin.c": {
    "wnlin_checksol": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "wnlin_f": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "wnlin_df": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/test_wood.c": {
    "wood_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "wood_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "wood_df": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit/work.c": {
    "gsl_multifit_linear_alloc": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": [
        "\"failed to allocate space for multifit_linear struct\"",
        "\"failed to allocate space for A\"",
        "\"failed to allocate space for Q\"",
        "\"failed to allocate space for QSI\"",
        "\"failed to allocate space for S\"",
        "\"failed to allocate space for t\"",
        "\"failed to allocate space for xt\"",
        "\"failed to allocate space for D\""
      ]
    },
    "gsl_multifit_linear_free": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/cholesky.c": {
    "cholesky_alloc": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": [
        "\"failed to allocate cholesky state\"",
        "\"failed to allocate space for JTJ\"",
        "\"failed to allocate space for JTJ workspace\"",
        "\"failed to allocate space for rhs\"",
        "\"failed to allocate space for perm\"",
        "\"failed to allocate space for work3p\""
      ]
    },
    "cholesky_free": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "cholesky_init": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "cholesky_presolve": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "cholesky_solve": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "cholesky_rcond": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": []
    },
    "cholesky_solve_rhs": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": []
    },
    "cholesky_regularize": {
      "start_point": [
        268,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/common.c": {
    "scaled_enorm": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "scaled_addition": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "quadratic_preduction": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/convergence.c": {
    "gsl_multifit_nlinear_test": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "test_delta": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": [
        "\"relative tolerance is negative\""
      ]
    },
    "scaled_infnorm": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/covar.c": {
    "gsl_multifit_nlinear_covar": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": [
        "\"Jacobian be rectangular M x N with M >= N\"",
        "\"covariance matrix must be square and match second dimension of jacobian\""
      ]
    },
    "covar_QRPT": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/dogleg.c": {
    "dogleg_alloc": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"failed to allocate dogleg state\"",
        "\"failed to allocate space for dx_gn\"",
        "\"failed to allocate space for dx_sd\"",
        "\"failed to allocate space for workp\"",
        "\"failed to allocate space for workn\""
      ]
    },
    "dogleg_free": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    },
    "dogleg_init": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": []
    },
    "dogleg_preloop": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "dogleg_step": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": []
    },
    "dogleg_double_step": {
      "start_point": [
        270,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": []
    },
    "dogleg_preduction": {
      "start_point": [
        348,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": []
    },
    "dogleg_calc_gn": {
      "start_point": [
        373,
        0
      ],
      "end_point": [
        398,
        1
      ],
      "strings": []
    },
    "dogleg_beta": {
      "start_point": [
        427,
        0
      ],
      "end_point": [
        462,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/fdf.c": {
    "gsl_multifit_nlinear_alloc": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"insufficient data points, n < p\"",
        "\"failed to allocate space for multifit workspace\"",
        "\"failed to allocate space for x\"",
        "\"failed to allocate space for f\"",
        "\"failed to allocate space for dx\"",
        "\"failed to allocate space for g\"",
        "\"failed to allocate space for Jacobian\"",
        "\"failed to allocate space for weights\"",
        "\"failed to allocate space for multifit state\""
      ]
    },
    "gsl_multifit_nlinear_free": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_default_parameters": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_init": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_winit": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"function size does not match workspace\"",
        "\"vector length does not match workspace\"",
        "\"weight vector length does not match workspace\""
      ]
    },
    "gsl_multifit_nlinear_iterate": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_avratio": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_driver": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_jac": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        328,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_name": {
      "start_point": [
        330,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_position": {
      "start_point": [
        336,
        0
      ],
      "end_point": [
        340,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_residual": {
      "start_point": [
        342,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_niter": {
      "start_point": [
        348,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_rcond": {
      "start_point": [
        354,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_trs_name": {
      "start_point": [
        361,
        0
      ],
      "end_point": [
        365,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_eval_f": {
      "start_point": [
        382,
        0
      ],
      "end_point": [
        397,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_eval_df": {
      "start_point": [
        418,
        0
      ],
      "end_point": [
        458,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_eval_fvv": {
      "start_point": [
        480,
        0
      ],
      "end_point": [
        510,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/fdfvv.c": {
    "fdfvv": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_fdfvv": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/fdjac.c": {
    "forward_jac": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "center_jac": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "gsl_multifit_nlinear_df": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": [
        "\"invalid specified fdtype\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/gsl_multifit_nlinear.h": {},
  "gsl/gsl-2.5/multifit_nlinear/lm.c": {
    "lm_alloc": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"failed to allocate lm state\"",
        "\"failed to allocate space for workp\"",
        "\"failed to allocate space for workn\"",
        "\"failed to allocate space for fvv\"",
        "\"failed to allocate space for vel\"",
        "\"failed to allocate space for acc\""
      ]
    },
    "lm_alloc_noaccel": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    },
    "lm_alloc_accel": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "lm_free": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "lm_init": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "lm_preloop": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "lm_step": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": []
    },
    "lm_preduction": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/nielsen.c": {
    "nielsen_init": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "nielsen_accept": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "nielsen_reject": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/qr.c": {
    "qr_alloc": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": [
        "\"failed to allocate qr state\"",
        "\"failed to allocate space for QR\"",
        "\"failed to allocate space for tau_Q\"",
        "\"failed to allocate space for T\"",
        "\"failed to allocate space for qtf\"",
        "\"failed to allocate space for residual\"",
        "\"failed to allocate space for perm\"",
        "\"failed to allocate space for workn\"",
        "\"failed to allocate space for workp\"",
        "\"failed to allocate space for work3p\""
      ]
    },
    "qr_free": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "qr_init": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "qr_presolve": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    },
    "qr_solve": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    },
    "qr_rcond": {
      "start_point": [
        263,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/qrsolv.c": {
    "qrsolv": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/scaling.c": {
    "init_diag_levenberg": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "update_diag_levenberg": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "init_diag_marquardt": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "update_diag_marquardt": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "init_diag_more": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "update_diag_more": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/subspace2D.c": {
    "subspace2D_alloc": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": [
        "\"failed to allocate subspace2D state\"",
        "\"failed to allocate space for dx_gn\"",
        "\"failed to allocate space for dx_sd\"",
        "\"failed to allocate space for workp\"",
        "\"failed to allocate space for workn\"",
        "\"failed to allocate space for W\"",
        "\"failed to allocate space for JQ\"",
        "\"failed to allocate space for tau\"",
        "\"failed to allocate space for subg\"",
        "\"failed to allocate space for subB\"",
        "\"failed to allocate space for perm\"",
        "\"failed to allocate space for poly workspace\""
      ]
    },
    "subspace2D_free": {
      "start_point": [
        241,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": []
    },
    "subspace2D_init": {
      "start_point": [
        292,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": []
    },
    "subspace2D_preloop": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        428,
        1
      ],
      "strings": []
    },
    "subspace2D_step": {
      "start_point": [
        438,
        0
      ],
      "end_point": [
        556,
        1
      ],
      "strings": [
        "\"gsl_poly_complex_solve failed\""
      ]
    },
    "subspace2D_preduction": {
      "start_point": [
        558,
        0
      ],
      "end_point": [
        569,
        1
      ],
      "strings": []
    },
    "subspace2D_solution": {
      "start_point": [
        572,
        0
      ],
      "end_point": [
        596,
        1
      ],
      "strings": []
    },
    "subspace2D_objective": {
      "start_point": [
        599,
        0
      ],
      "end_point": [
        614,
        1
      ],
      "strings": []
    },
    "subspace2D_calc_gn": {
      "start_point": [
        628,
        0
      ],
      "end_point": [
        653,
        1
      ],
      "strings": []
    },
    "subspace2D_calc_sd": {
      "start_point": [
        668,
        0
      ],
      "end_point": [
        697,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/svd.c": {
    "svd_alloc": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"failed to allocate svd state\"",
        "\"failed to allocate space for U\"",
        "\"failed to allocate space for V\"",
        "\"failed to allocate space for S\"",
        "\"failed to allocate space for workp\""
      ]
    },
    "svd_free": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "svd_init": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    },
    "svd_presolve": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "svd_solve": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    },
    "svd_rcond": {
      "start_point": [
        244,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test.c": {
    "test_proc": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": [
        "\"trs = %s\\n\"",
        "\"solver = %s\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_bard.c": {
    "bard_checksol": {
      "start_point": [
        11,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "bard_f": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "bard_df": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "bard_fvv": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_beale.c": {
    "beale_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "beale_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "beale_df": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "beale_fvv": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_biggs.c": {
    "biggs_checksol": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "biggs_f": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "biggs_df": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "biggs_fvv": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_box.c": {
    "box_checksol": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=0\"",
        "\"%s/%s i=1\"",
        "\"%s/%s i=2\"",
        "\"%s/%s i=0\"",
        "\"%s/%s i=1\"",
        "\"%s/%s i=2\"",
        "\"%s/%s i=0,1\"",
        "\"%s/%s i=2\""
      ]
    },
    "box_f": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "box_df": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "box_fvv": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_boxbod.c": {
    "boxbod_checksol": {
      "start_point": [
        16,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "boxbod_f": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "boxbod_df": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "boxbod_fvv": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_brown1.c": {
    "brown1_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "brown1_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "brown1_df": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "brown1_fvv": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_brown2.c": {
    "brown2_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"%s/%s alpha lhs\"",
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\"",
        "\"%s/%s last element\""
      ]
    },
    "brown2_f": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "brown2_df": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "brown2_fvv": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_brown3.c": {
    "brown3_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        23,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "brown3_f": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    },
    "brown3_df": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "brown3_fvv": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_eckerle.c": {
    "eckerle_checksol": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "eckerle_f": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "eckerle_df": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_enso.c": {
    "enso_checksol": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "enso_f": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "enso_df": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_exp1.c": {
    "exp1_checksol": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "exp1_f": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "exp1_df": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "exp1_fvv": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_fdf.c": {
    "test_fdf_main": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    },
    "test_fdf": {
      "start_point": [
        243,
        0
      ],
      "end_point": [
        326,
        1
      ],
      "strings": [
        "\"%s/%s/scale=%s/solver=%s\"",
        "\"/fdjac,forward\"",
        "\"/fdjac,center\"",
        "\"/fdfvv\"",
        "\"%s/%s did not converge, status=%s\"",
        "\"%s/weighted\"",
        "\"%s/%s did not converge, status=%s\""
      ]
    },
    "test_fdf_checksol": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        364,
        1
      ],
      "strings": [
        "\"%s/%s, sigma(%d)\""
      ]
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_gaussian.c": {
    "gaussian_checksol": {
      "start_point": [
        11,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "gaussian_f": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "gaussian_df": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "gaussian_fvv": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_hahn1.c": {
    "hahn1_checksol": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "hahn1_f": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "hahn1_df": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_helical.c": {
    "helical_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "helical_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "helical_df": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "helical_fvv": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_jennrich.c": {
    "jennrich_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "jennrich_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "jennrich_df": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "jennrich_fvv": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_kirby2.c": {
    "kirby2_checksol": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "kirby2_f": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    },
    "kirby2_df": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "kirby2_fvv": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_kowalik.c": {
    "kowalik_checksol": {
      "start_point": [
        16,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "kowalik_f": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "kowalik_df": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "kowalik_fvv": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_lin1.c": {
    "lin1_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "lin1_f": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "lin1_df": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "lin1_fvv": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_lin2.c": {
    "lin2_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s coeff sum\""
      ]
    },
    "lin2_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "lin2_df": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "lin2_fvv": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_lin3.c": {
    "lin3_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s coeff sum\""
      ]
    },
    "lin3_f": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "lin3_df": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "lin3_fvv": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_meyer.c": {
    "meyer_checksol": {
      "start_point": [
        12,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "meyer_f": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "meyer_df": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "meyer_fvv": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_meyerscal.c": {
    "meyerscal_checksol": {
      "start_point": [
        12,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "meyerscal_f": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "meyerscal_df": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "meyerscal_fvv": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_osborne.c": {
    "osborne_checksol": {
      "start_point": [
        14,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=0\""
      ]
    },
    "osborne_f": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "osborne_df": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "osborne_fvv": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_penalty1.c": {
    "penalty1_checksol": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        18,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\""
      ]
    },
    "penalty1_f": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "penalty1_df": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "penalty1_fvv": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_penalty2.c": {
    "penalty2_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        17,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\""
      ]
    },
    "penalty2_f": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "penalty2_df": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "penalty2_fvv": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_powell1.c": {
    "powell1_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "powell1_f": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "powell1_df": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "powell1_fvv": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_powell2.c": {
    "powell2_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "powell2_f": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "powell2_df": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "powell2_fvv": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_powell3.c": {
    "powell3_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "powell3_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    },
    "powell3_df": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "powell3_fvv": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_rat42.c": {
    "rat42_checksol": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rat42_f": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "rat42_df": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "rat42_fvv": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_rat43.c": {
    "rat43_checksol": {
      "start_point": [
        17,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rat43_f": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "rat43_df": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_rosenbrock.c": {
    "rosenbrock_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rosenbrock_f": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "rosenbrock_df": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "rosenbrock_fvv": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_rosenbrocke.c": {
    "rosenbrocke_checksol": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rosenbrocke_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "rosenbrocke_df": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "rosenbrocke_fvv": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_roth.c": {
    "roth_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "roth_f": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "roth_df": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "roth_fvv": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_thurber.c": {
    "thurber_checksol": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "thurber_f": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "thurber_df": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_vardim.c": {
    "vardim_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "vardim_f": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "vardim_df": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "vardim_fvv": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_watson.c": {
    "watson_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "watson_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "watson_df": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "watson_fvv": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_wnlin.c": {
    "wnlin_checksol": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "wnlin_f": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "wnlin_df": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "wnlin_fvv": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/test_wood.c": {
    "wood_checksol": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        23,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "wood_f": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "wood_df": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "wood_fvv": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multifit_nlinear/trust.c": {
    "trust_alloc": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": [
        "\"failed to allocate lm state\"",
        "\"failed to allocate space for diag\"",
        "\"failed to allocate space for workp\"",
        "\"failed to allocate space for workn\"",
        "\"failed to allocate space for x_trial\"",
        "\"failed to allocate space for f_trial\"",
        "\"failed to allocate space for trs state\"",
        "\"failed to allocate space for solver state\""
      ]
    },
    "trust_free": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "trust_init": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        257,
        1
      ],
      "strings": []
    },
    "trust_iterate": {
      "start_point": [
        289,
        0
      ],
      "end_point": [
        414,
        1
      ],
      "strings": []
    },
    "trust_rcond": {
      "start_point": [
        416,
        0
      ],
      "end_point": [
        426,
        1
      ],
      "strings": []
    },
    "trust_avratio": {
      "start_point": [
        428,
        0
      ],
      "end_point": [
        433,
        1
      ],
      "strings": []
    },
    "trust_trial_step": {
      "start_point": [
        436,
        0
      ],
      "end_point": [
        448,
        1
      ],
      "strings": []
    },
    "trust_calc_rho": {
      "start_point": [
        474,
        0
      ],
      "end_point": [
        525,
        1
      ],
      "strings": []
    },
    "trust_eval_step": {
      "start_point": [
        533,
        0
      ],
      "end_point": [
        554,
        1
      ],
      "strings": []
    },
    "trust_scaled_norm": {
      "start_point": [
        557,
        0
      ],
      "end_point": [
        574,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge/gsl_multilarge.h": {
    "typedef": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge/multilarge.c": {
    "gsl_multilarge_linear_alloc": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for multilarge state\""
      ]
    },
    "gsl_multilarge_linear_free": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_linear_name": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_linear_reset": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_linear_accumulate": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_linear_solve": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_linear_rcond": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_linear_lcurve": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"reg_param and rho have different sizes\"",
        "\"reg_param and eta have different sizes\""
      ]
    },
    "gsl_multilarge_linear_wstdform1": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": [
        "\"L vector does not match X\"",
        "\"y vector does not match X\"",
        "\"weight vector does not match X\"",
        "\"Xs matrix dimensions do not match X\"",
        "\"ys vector must be length n\"",
        "\"L matrix is singular\""
      ]
    },
    "gsl_multilarge_linear_stdform1": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_linear_L_decomp": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": [
        "\"m < p not yet supported\""
      ]
    },
    "gsl_multilarge_linear_wstdform2": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        316,
        1
      ],
      "strings": [
        "\"X has wrong number of columns\"",
        "\"LQR and X matrices have different numbers of columns\"",
        "\"y vector does not match X\"",
        "\"weights vector must be length n\"",
        "\"m < p not yet supported\"",
        "\"Xs matrix must be n-by-p\"",
        "\"ys vector must have length n\""
      ]
    },
    "gsl_multilarge_linear_stdform2": {
      "start_point": [
        318,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_linear_genform1": {
      "start_point": [
        340,
        0
      ],
      "end_point": [
        366,
        1
      ],
      "strings": [
        "\"L vector does not match workspace\"",
        "\"cs vector does not match L\"",
        "\"c vector does not match L\""
      ]
    },
    "gsl_multilarge_linear_genform2": {
      "start_point": [
        368,
        0
      ],
      "end_point": [
        401,
        1
      ],
      "strings": [
        "\"c vector does not match LQR\"",
        "\"m < p not yet supported\"",
        "\"cs vector size does not match c\""
      ]
    }
  },
  "gsl/gsl-2.5/multilarge/normal.c": {
    "normal_alloc": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"p must be a positive integer\"",
        "\"failed to allocate normal state\"",
        "\"failed to allocate ATA matrix\"",
        "\"failed to allocate temporary ATA matrix\"",
        "\"failed to allocate ATb vector\"",
        "\"failed to allocate perm\"",
        "\"failed to allocate D vector\"",
        "\"failed to allocate temporary ATb vector\"",
        "\"failed to allocate work3p\"",
        "\"failed to allocate c vector\"",
        "\"failed to allocate eigen workspace\""
      ]
    },
    "normal_free": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    },
    "normal_reset": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": []
    },
    "normal_accumulate": {
      "start_point": [
        226,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": [
        "\"columns of A do not match workspace\"",
        "\"A and b have different numbers of rows\""
      ]
    },
    "normal_solve": {
      "start_point": [
        278,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"solution vector does not match workspace\"",
        "\"failed to solve normal equations\""
      ]
    },
    "normal_rcond": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        319,
        1
      ],
      "strings": []
    },
    "normal_lcurve": {
      "start_point": [
        333,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": [
        "\"matrix is not positive definite\""
      ]
    },
    "normal_solve_system": {
      "start_point": [
        398,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": []
    },
    "normal_solve_cholesky": {
      "start_point": [
        417,
        0
      ],
      "end_point": [
        432,
        1
      ],
      "strings": []
    },
    "normal_calc_norms": {
      "start_point": [
        445,
        0
      ],
      "end_point": [
        469,
        1
      ],
      "strings": []
    },
    "normal_eigen": {
      "start_point": [
        479,
        0
      ],
      "end_point": [
        497,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge/test.c": {
    "test_random_matrix_orth": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "test_random_matrix_ill": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "test_random_vector": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "test_random_matrix": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "test_vander_matrix": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "test_random_vector_noise": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "test_compare_vectors": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": [
        "\"%s i=%zu\""
      ]
    },
    "test_multifit_solve": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": []
    },
    "test_multilarge_solve": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        335,
        1
      ],
      "strings": []
    },
    "test_random": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        484,
        1
      ],
      "strings": [
        "\"random %s unweighted stdform n=%zu p=%zu lambda=%g\"",
        "\"rnorm %s\"",
        "\"snorm %s\"",
        "\"random %s weighted diag(L) n=%zu p=%zu lambda=%g\"",
        "\"rnorm %s\"",
        "\"snorm %s\"",
        "\"random %s unweighted diag(L) n=%zu p=%zu lambda=%g\"",
        "\"rnorm %s\"",
        "\"snorm %s\"",
        "\"random %s weighted Lsqr n=%zu p=%zu lambda=%g\"",
        "\"rnorm %s\"",
        "\"snorm %s\"",
        "\"random %s unweighted Lsqr n=%zu p=%zu lambda=%g\"",
        "\"rnorm %s\"",
        "\"snorm %s\"",
        "\"random %s weighted Ltall n=%zu p=%zu lambda=%g\"",
        "\"rnorm %s\"",
        "\"snorm %s\"",
        "\"random %s unweighted Ltall n=%zu p=%zu lambda=%g\"",
        "\"rnorm %s\"",
        "\"snorm %s\""
      ]
    },
    "main": {
      "start_point": [
        486,
        0
      ],
      "end_point": [
        514,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge/tsqr.c": {
    "tsqr_alloc": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": [
        "\"p must be a positive integer\"",
        "\"failed to allocate tsqr state\"",
        "\"failed to allocate R matrix\"",
        "\"failed to allocate QTb vector\"",
        "\"failed to allocate tau vector\"",
        "\"failed to allocate multifit workspace\""
      ]
    },
    "tsqr_free": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    },
    "tsqr_reset": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "tsqr_accumulate": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": [
        "\"columns of A do not match workspace\"",
        "\"A and b have different numbers of rows\""
      ]
    },
    "tsqr_solve": {
      "start_point": [
        305,
        0
      ],
      "end_point": [
        361,
        1
      ],
      "strings": [
        "\"solution vector does not match workspace\""
      ]
    },
    "tsqr_lcurve": {
      "start_point": [
        375,
        0
      ],
      "end_point": [
        413,
        1
      ],
      "strings": []
    },
    "tsqr_rcond": {
      "start_point": [
        415,
        0
      ],
      "end_point": [
        431,
        1
      ],
      "strings": []
    },
    "tsqr_svd": {
      "start_point": [
        445,
        0
      ],
      "end_point": [
        459,
        1
      ],
      "strings": [
        "\"error computing SVD of R\""
      ]
    },
    "tsqr_householder_transform": {
      "start_point": [
        485,
        0
      ],
      "end_point": [
        522,
        1
      ],
      "strings": []
    },
    "tsqr_householder_hv": {
      "start_point": [
        556,
        0
      ],
      "end_point": [
        579,
        1
      ],
      "strings": []
    },
    "tsqr_householder_hm": {
      "start_point": [
        600,
        0
      ],
      "end_point": [
        630,
        1
      ],
      "strings": []
    },
    "tsqr_QR_decomp": {
      "start_point": [
        646,
        0
      ],
      "end_point": [
        689,
        1
      ],
      "strings": [
        "\"R and A have different number of columns\"",
        "\"size of tau must be p\""
      ]
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/cgst.c": {
    "cgst_alloc": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": [
        "\"failed to allocate st state\"",
        "\"failed to allocate space for z\"",
        "\"failed to allocate space for r\"",
        "\"failed to allocate space for d\"",
        "\"failed to allocate space for workp\"",
        "\"failed to allocate space for workn\""
      ]
    },
    "cgst_free": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "cgst_init": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "cgst_preloop": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    },
    "cgst_step": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        328,
        1
      ],
      "strings": []
    },
    "cgst_preduction": {
      "start_point": [
        330,
        0
      ],
      "end_point": [
        341,
        1
      ],
      "strings": []
    },
    "cgst_calc_tau": {
      "start_point": [
        350,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/cholesky.c": {
    "cholesky_alloc": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": [
        "\"failed to allocate cholesky state\"",
        "\"failed to allocate space for JTJ\"",
        "\"failed to allocate space for JTJ workspace\"",
        "\"failed to allocate space for rhs\"",
        "\"failed to allocate space for perm\"",
        "\"failed to allocate space for work3p\"",
        "\"failed to allocate space for workn\""
      ]
    },
    "cholesky_free": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "cholesky_init": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "cholesky_presolve": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    },
    "cholesky_solve": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    },
    "cholesky_rcond": {
      "start_point": [
        226,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": []
    },
    "cholesky_covar": {
      "start_point": [
        251,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "cholesky_solve_rhs": {
      "start_point": [
        276,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": []
    },
    "cholesky_regularize": {
      "start_point": [
        290,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/common.c": {
    "scaled_enorm": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "scaled_addition": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "quadratic_preduction": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"error computing preduction\""
      ]
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/convergence.c": {
    "gsl_multilarge_nlinear_test": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": [
        "\"gnorm = %.12e fnorm = %.12e gnorm/phi = %.12e\\n\""
      ]
    },
    "scaled_infnorm": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/dogleg.c": {
    "dogleg_alloc": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": [
        "\"failed to allocate dogleg state\"",
        "\"failed to allocate space for dx_gn\"",
        "\"failed to allocate space for dx_sd\"",
        "\"failed to allocate space for workp1\"",
        "\"failed to allocate space for workp2\"",
        "\"failed to allocate space for workn\""
      ]
    },
    "dogleg_free": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "dogleg_init": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "dogleg_preloop": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    },
    "dogleg_step": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        274,
        1
      ],
      "strings": []
    },
    "dogleg_double_step": {
      "start_point": [
        282,
        0
      ],
      "end_point": [
        358,
        1
      ],
      "strings": []
    },
    "dogleg_preduction": {
      "start_point": [
        360,
        0
      ],
      "end_point": [
        371,
        1
      ],
      "strings": []
    },
    "dogleg_calc_gn": {
      "start_point": [
        385,
        0
      ],
      "end_point": [
        410,
        1
      ],
      "strings": []
    },
    "dogleg_beta": {
      "start_point": [
        439,
        0
      ],
      "end_point": [
        474,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/dummy.c": {
    "dummy_alloc": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "dummy_free": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "dummy_init": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "dummy_presolve": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "dummy_solve": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "dummy_rcond": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "dummy_covar": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/fdf.c": {
    "gsl_multilarge_nlinear_alloc": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"insufficient data points, n < p\"",
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for x\"",
        "\"failed to allocate space for f\"",
        "\"failed to allocate space for dx\"",
        "\"failed to allocate space for g\"",
        "\"failed to allocate space for JTJ\"",
        "\"failed to allocate space for weights\"",
        "\"failed to allocate space for state\""
      ]
    },
    "gsl_multilarge_nlinear_free": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_default_parameters": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_init": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_winit": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": [
        "\"function size does not match workspace\"",
        "\"vector length does not match workspace\"",
        "\"weight vector length does not match workspace\""
      ]
    },
    "gsl_multilarge_nlinear_iterate": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_avratio": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_rcond": {
      "start_point": [
        243,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_covar": {
      "start_point": [
        250,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": [
        "\"covariance matrix must be square\"",
        "\"covariance matrix does not match workspace\""
      ]
    },
    "gsl_multilarge_nlinear_driver": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        361,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_name": {
      "start_point": [
        363,
        0
      ],
      "end_point": [
        367,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_position": {
      "start_point": [
        369,
        0
      ],
      "end_point": [
        373,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_residual": {
      "start_point": [
        375,
        0
      ],
      "end_point": [
        379,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_step": {
      "start_point": [
        381,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_niter": {
      "start_point": [
        387,
        0
      ],
      "end_point": [
        391,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_trs_name": {
      "start_point": [
        393,
        0
      ],
      "end_point": [
        397,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_eval_f": {
      "start_point": [
        414,
        0
      ],
      "end_point": [
        429,
        1
      ],
      "strings": []
    },
    "gsl_multilarge_nlinear_eval_df": {
      "start_point": [
        455,
        0
      ],
      "end_point": [
        510,
        1
      ],
      "strings": [
        "\"u vector has wrong size\"",
        "\"v vector has wrong size\"",
        "\"JTJ matrix has wrong size\""
      ]
    },
    "gsl_multilarge_nlinear_eval_fvv": {
      "start_point": [
        531,
        0
      ],
      "end_point": [
        563,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/gsl_multilarge_nlinear.h": {},
  "gsl/gsl-2.5/multilarge_nlinear/lm.c": {
    "lm_alloc": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": [
        "\"failed to allocate lm state\"",
        "\"failed to allocate space for workp\"",
        "\"failed to allocate space for workn\"",
        "\"failed to allocate space for fvv\"",
        "\"failed to allocate space for vel\"",
        "\"failed to allocate space for acc\"",
        "\"failed to allocate space for JTfvv\""
      ]
    },
    "lm_alloc_noaccel": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "lm_alloc_accel": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "lm_free": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "lm_init": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    },
    "lm_preloop": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        212,
        1
      ],
      "strings": []
    },
    "lm_step": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": []
    },
    "lm_preduction": {
      "start_point": [
        306,
        0
      ],
      "end_point": [
        337,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/nielsen.c": {
    "nielsen_init": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "nielsen_accept": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "nielsen_reject": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/scaling.c": {
    "init_diag_levenberg": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "update_diag_levenberg": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "init_diag_marquardt": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "update_diag_marquardt": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "init_diag_more": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "update_diag_more": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/subspace2D.c": {
    "subspace2D_alloc": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        246,
        1
      ],
      "strings": [
        "\"failed to allocate subspace2D state\"",
        "\"failed to allocate space for dx_gn\"",
        "\"failed to allocate space for dx_sd\"",
        "\"failed to allocate space for workp1\"",
        "\"failed to allocate space for workp2\"",
        "\"failed to allocate space for workn\"",
        "\"failed to allocate space for W\"",
        "\"failed to allocate space for work_JTJ\"",
        "\"failed to allocate space for tau\"",
        "\"failed to allocate space for subg\"",
        "\"failed to allocate space for subB\"",
        "\"failed to allocate space for perm\"",
        "\"failed to allocate space for poly workspace\""
      ]
    },
    "subspace2D_free": {
      "start_point": [
        248,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": []
    },
    "subspace2D_init": {
      "start_point": [
        302,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": []
    },
    "subspace2D_preloop": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        450,
        1
      ],
      "strings": []
    },
    "subspace2D_step": {
      "start_point": [
        460,
        0
      ],
      "end_point": [
        578,
        1
      ],
      "strings": [
        "\"gsl_poly_complex_solve failed\""
      ]
    },
    "subspace2D_preduction": {
      "start_point": [
        580,
        0
      ],
      "end_point": [
        591,
        1
      ],
      "strings": []
    },
    "subspace2D_solution": {
      "start_point": [
        594,
        0
      ],
      "end_point": [
        618,
        1
      ],
      "strings": []
    },
    "subspace2D_objective": {
      "start_point": [
        621,
        0
      ],
      "end_point": [
        636,
        1
      ],
      "strings": []
    },
    "subspace2D_calc_gn": {
      "start_point": [
        650,
        0
      ],
      "end_point": [
        675,
        1
      ],
      "strings": []
    },
    "subspace2D_calc_sd": {
      "start_point": [
        690,
        0
      ],
      "end_point": [
        722,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test.c": {
    "test_proc": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"trs = %s\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_bard.c": {
    "bard_checksol": {
      "start_point": [
        13,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "bard_f": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "bard_df": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "bard_fvv": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_beale.c": {
    "beale_checksol": {
      "start_point": [
        10,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "beale_f": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "beale_df": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "beale_fvv": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_biggs.c": {
    "biggs_checksol": {
      "start_point": [
        11,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s norm\""
      ]
    },
    "biggs_f": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "biggs_df": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "biggs_fvv": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_box.c": {
    "box_checksol": {
      "start_point": [
        11,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=0\"",
        "\"%s/%s i=1\"",
        "\"%s/%s i=2\"",
        "\"%s/%s i=0\"",
        "\"%s/%s i=1\"",
        "\"%s/%s i=2\"",
        "\"%s/%s i=0,1\"",
        "\"%s/%s i=2\""
      ]
    },
    "box_f": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "box_df": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "box_fvv": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_boxbod.c": {
    "boxbod_checksol": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "boxbod_f": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "boxbod_df": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "boxbod_fvv": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_brown1.c": {
    "brown1_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "brown1_f": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "brown1_df": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "brown1_fvv": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_brown2.c": {
    "brown2_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"%s/%s alpha lhs\"",
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\"",
        "\"%s/%s last element\""
      ]
    },
    "brown2_f": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "brown2_df": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    },
    "brown2_fvv": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_brown3.c": {
    "brown3_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "brown3_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "brown3_df": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "brown3_fvv": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_eckerle.c": {
    "eckerle_checksol": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "eckerle_f": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "eckerle_df": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_enso.c": {
    "enso_checksol": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "enso_f": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "enso_df": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_exp1.c": {
    "exp1_checksol": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "exp1_f": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "exp1_df": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "exp1_fvv": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_fdf.c": {
    "test_fdf_main": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": []
    },
    "test_fdf": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": [
        "\"%s/%s/solver=%s/scale=%s%s%s\"",
        "\"\"",
        "\"/fdjac\"",
        "\"\"",
        "\"/fdfvv\"",
        "\"%s/%s did not converge, status=%s\"",
        "\"%s/weighted\"",
        "\"%s/%s did not converge, status=%s\""
      ]
    },
    "test_fdf_checksol": {
      "start_point": [
        332,
        0
      ],
      "end_point": [
        371,
        1
      ],
      "strings": [
        "\"%s/%s, sigma(%d)\""
      ]
    },
    "test_scale_x0": {
      "start_point": [
        373,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_gaussian.c": {
    "gaussian_checksol": {
      "start_point": [
        13,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "gaussian_f": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "gaussian_df": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "gaussian_fvv": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_hahn1.c": {
    "hahn1_checksol": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "hahn1_f": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    },
    "hahn1_df": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_helical.c": {
    "helical_checksol": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "helical_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "helical_df": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "helical_fvv": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_jennrich.c": {
    "jennrich_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "jennrich_f": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "jennrich_df": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "jennrich_fvv": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_kirby2.c": {
    "kirby2_checksol": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "kirby2_f": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    },
    "kirby2_df": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "kirby2_fvv": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_kowalik.c": {
    "kowalik_checksol": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "kowalik_f": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "kowalik_df": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "kowalik_fvv": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_lin1.c": {
    "lin1_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "lin1_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "lin1_df": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "lin1_fvv": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_lin2.c": {
    "lin2_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s coeff sum\""
      ]
    },
    "lin2_f": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "lin2_df": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "lin2_fvv": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_lin3.c": {
    "lin3_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s coeff sum\""
      ]
    },
    "lin3_f": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "lin3_df": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "lin3_fvv": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_meyer.c": {
    "meyer_checksol": {
      "start_point": [
        14,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "meyer_f": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "meyer_df": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "meyer_fvv": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_meyerscal.c": {
    "meyerscal_checksol": {
      "start_point": [
        14,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "meyerscal_f": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "meyerscal_df": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "meyerscal_fvv": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_osborne.c": {
    "osborne_checksol": {
      "start_point": [
        16,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=0\""
      ]
    },
    "osborne_f": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "osborne_df": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "osborne_fvv": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_penalty1.c": {
    "penalty1_checksol": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        20,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\""
      ]
    },
    "penalty1_f": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "penalty1_df": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "penalty1_fvv": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_penalty2.c": {
    "penalty2_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        19,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\""
      ]
    },
    "penalty2_f": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "penalty2_df": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "penalty2_fvv": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_powell1.c": {
    "powell1_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "powell1_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "powell1_df": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "powell1_fvv": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_powell2.c": {
    "powell2_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "powell2_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    },
    "powell2_df": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "powell2_fvv": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_powell3.c": {
    "powell3_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "powell3_f": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "powell3_df": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "powell3_fvv": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_rat42.c": {
    "rat42_checksol": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rat42_f": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "rat42_df": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "rat42_fvv": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_rat43.c": {
    "rat43_checksol": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rat43_f": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "rat43_df": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_rosenbrock.c": {
    "rosenbrock_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rosenbrock_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    },
    "rosenbrock_df": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "rosenbrock_fvv": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_rosenbrocke.c": {
    "rosenbrocke_checksol": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "rosenbrocke_f": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "rosenbrocke_df": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "rosenbrocke_fvv": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_roth.c": {
    "roth_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "roth_f": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "roth_df": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "roth_fvv": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_thurber.c": {
    "thurber_checksol": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "thurber_f": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "thurber_df": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_vardim.c": {
    "vardim_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "vardim_f": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "vardim_df": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "vardim_fvv": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_watson.c": {
    "watson_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "watson_f": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "watson_df": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "watson_fvv": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_wnlin.c": {
    "wnlin_checksol": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "wnlin_f": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "wnlin_df": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "wnlin_fvv": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/test_wood.c": {
    "wood_checksol": {
      "start_point": [
        8,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": [
        "\"%s/%s sumsq\"",
        "\"%s/%s i=%zu\""
      ]
    },
    "wood_f": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "wood_df": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "wood_fvv": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multilarge_nlinear/trust.c": {
    "trust_alloc": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": [
        "\"failed to allocate lm state\"",
        "\"failed to allocate space for diag\"",
        "\"failed to allocate space for workn\"",
        "\"failed to allocate space for x_trial\"",
        "\"failed to allocate space for f_trial\"",
        "\"failed to allocate space for trs state\"",
        "\"failed to allocate space for solver state\""
      ]
    },
    "trust_free": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "trust_init": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": []
    },
    "trust_iterate": {
      "start_point": [
        282,
        0
      ],
      "end_point": [
        412,
        1
      ],
      "strings": [
        "\"delta = %.12e |D dx| = %.12e |dx| = %.12e, dx0 = %.12e dx1 = %.12e |x_trial| = %.12e |f_trial| = %.12e rho = %.12e\\n\""
      ]
    },
    "trust_rcond": {
      "start_point": [
        414,
        0
      ],
      "end_point": [
        424,
        1
      ],
      "strings": []
    },
    "trust_covar": {
      "start_point": [
        426,
        0
      ],
      "end_point": [
        436,
        1
      ],
      "strings": []
    },
    "trust_avratio": {
      "start_point": [
        438,
        0
      ],
      "end_point": [
        443,
        1
      ],
      "strings": []
    },
    "trust_trial_step": {
      "start_point": [
        446,
        0
      ],
      "end_point": [
        458,
        1
      ],
      "strings": []
    },
    "trust_calc_rho": {
      "start_point": [
        482,
        0
      ],
      "end_point": [
        521,
        1
      ],
      "strings": []
    },
    "trust_eval_step": {
      "start_point": [
        529,
        0
      ],
      "end_point": [
        550,
        1
      ],
      "strings": []
    },
    "trust_scaled_norm": {
      "start_point": [
        553,
        0
      ],
      "end_point": [
        570,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multimin/conjugate_fr.c": {
    "conjugate_fr_alloc": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\"failed to allocate space for x1\"",
        "\"failed to allocate space for dx1\"",
        "\"failed to allocate space for x2\"",
        "\"failed to allocate space for p\"",
        "\"failed to allocate space for g0\""
      ]
    },
    "conjugate_fr_set": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    },
    "conjugate_fr_free": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "conjugate_fr_restart": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "conjugate_fr_iterate": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": [
        "\"got stepc = %g fc = %g\\n\"",
        "\"updated conjugate directions\\n\"",
        "\"p: \"",
        "\"%g\"",
        "\"g: \"",
        "\"%g\""
      ]
    }
  },
  "gsl/gsl-2.5/multimin/conjugate_pr.c": {
    "conjugate_pr_alloc": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\"failed to allocate space for x1\"",
        "\"failed to allocate space for dx1\"",
        "\"failed to allocate space for x2\"",
        "\"failed to allocate space for p\"",
        "\"failed to allocate space for g0\""
      ]
    },
    "conjugate_pr_set": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    },
    "conjugate_pr_free": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "conjugate_pr_restart": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "conjugate_pr_iterate": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": [
        "\"got stepc = %g fc = %g\\n\"",
        "\"updated conjugate directions\\n\"",
        "\"p: \"",
        "\"%g\"",
        "\"g: \"",
        "\"%g\""
      ]
    }
  },
  "gsl/gsl-2.5/multimin/convergence.c": {
    "gsl_multimin_test_gradient": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": [
        "\"absolute tolerance is negative\""
      ]
    },
    "gsl_multimin_test_size": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"absolute tolerance is negative\""
      ]
    }
  },
  "gsl/gsl-2.5/multimin/diff.c": {
    "gsl_multimin_diff": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multimin/directional_minimize.c": {
    "take_step": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        28,
        1
      ],
      "strings": []
    },
    "intermediate_point": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": [
        "\"fast exit x == x1 for stepb = %g\\n\"",
        "\"trying stepb = %g  fb = %.18e\\n\"",
        "\"ok!\\n\""
      ]
    },
    "minimize": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": [
        "\"trying stepm = %g  fm = %.18e\\n\"",
        "\"p: \"",
        "\"%g\"",
        "\"g: \"",
        "\"%g\"",
        "\"gnorm: %.18e\\n\"",
        "\"pg: %.18e\\n\"",
        "\"orth: %g\\n\"",
        "\"ok!\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/multimin/fdfminimizer.c": {
    "gsl_multimin_fdfminimizer_alloc": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"failed to allocate space for minimizer struct\"",
        "\"failed to allocate space for x\"",
        "\"failed to allocate space for gradient\"",
        "\"failed to allocate space for dx\"",
        "\"failed to allocate space for minimizer state\"",
        "\"failed to initialize minimizer state\""
      ]
    },
    "gsl_multimin_fdfminimizer_set": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": [
        "\"function incompatible with solver size\"",
        "\"vector length not compatible with function\""
      ]
    },
    "gsl_multimin_fdfminimizer_free": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fdfminimizer_iterate": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fdfminimizer_restart": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fdfminimizer_name": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fdfminimizer_x": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fdfminimizer_dx": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fdfminimizer_gradient": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fdfminimizer_minimum": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multimin/fminimizer.c": {
    "gsl_multimin_fminimizer_alloc": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": [
        "\"failed to allocate space for minimizer struct\"",
        "\"failed to allocate space for x\"",
        "\"failed to allocate space for minimizer state\"",
        "\"failed to initialize minimizer state\""
      ]
    },
    "gsl_multimin_fminimizer_set": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"function incompatible with solver size\"",
        "\"vector length not compatible with function\""
      ]
    },
    "gsl_multimin_fminimizer_free": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fminimizer_iterate": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fminimizer_name": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fminimizer_x": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fminimizer_minimum": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    },
    "gsl_multimin_fminimizer_size": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multimin/gsl_multimin.h": {
    "struct": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multimin/linear_minimize.c": {
    "interp_quad": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "cubic": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "check_extremum": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "interp_cubic": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "interpolate": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    },
    "minimize": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        246,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multimin/linear_wrapper.c": {
    "moveto": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "slope": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "wrap_f": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "wrap_df": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "wrap_fdf": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "prepare_wrapper": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "update_position": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "change_direction": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multimin/simplex.c": {
    "nmsimplex_move_corner": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "nmsimplex_contract_by_best": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "nmsimplex_calc_center": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "nmsimplex_size": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": []
    },
    "nmsimplex_alloc": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": [
        "\"invalid number of parameters specified\"",
        "\"failed to allocate space for x1\"",
        "\"failed to allocate space for y\"",
        "\"failed to allocate space for ws1\"",
        "\"failed to allocate space for ws2\""
      ]
    },
    "nmsimplex_set": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": [
        "\"incompatible size of x\"",
        "\"incompatible size of step_size\"",
        "\"non-finite function value encountered\"",
        "\"vector memcopy failed\"",
        "\"non-finite function value encountered\""
      ]
    },
    "nmsimplex_free": {
      "start_point": [
        301,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": []
    },
    "nmsimplex_iterate": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        454,
        1
      ],
      "strings": [
        "\"incompatible size of x\"",
        "\"nmsimplex_contract_by_best failed\""
      ]
    }
  },
  "gsl/gsl-2.5/multimin/simplex2.c": {
    "try_corner_move": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "update_point": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    },
    "contract_by_best": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "compute_center": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "compute_size": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": []
    },
    "nmsimplex_alloc": {
      "start_point": [
        243,
        0
      ],
      "end_point": [
        326,
        1
      ],
      "strings": [
        "\"invalid number of parameters specified\"",
        "\"failed to allocate space for x1\"",
        "\"failed to allocate space for y\"",
        "\"failed to allocate space for ws1\"",
        "\"failed to allocate space for ws2\"",
        "\"failed to allocate space for center\"",
        "\"failed to allocate space for delta\"",
        "\"failed to allocate space for xmc\""
      ]
    },
    "nmsimplex_free": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        340,
        1
      ],
      "strings": []
    },
    "nmsimplex_set": {
      "start_point": [
        342,
        0
      ],
      "end_point": [
        413,
        1
      ],
      "strings": [
        "\"incompatible size of x\"",
        "\"incompatible size of step_size\"",
        "\"non-finite function value encountered\"",
        "\"vector memcopy failed\"",
        "\"non-finite function value encountered\""
      ]
    },
    "nmsimplex_iterate": {
      "start_point": [
        415,
        0
      ],
      "end_point": [
        558,
        1
      ],
      "strings": [
        "\"incompatible size of x\"",
        "\"contraction failed\""
      ]
    },
    "ran_unif": {
      "start_point": [
        573,
        0
      ],
      "end_point": [
        579,
        1
      ],
      "strings": []
    },
    "nmsimplex_set_rand": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        688,
        1
      ],
      "strings": [
        "\"incompatible size of x\"",
        "\"incompatible size of step_size\"",
        "\"non-finite function value encountered\"",
        "\"non-finite function value encountered\""
      ]
    }
  },
  "gsl/gsl-2.5/multimin/steepest_descent.c": {
    "steepest_descent_alloc": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"failed to allocate space for x1\"",
        "\"failed to allocate space for g1\""
      ]
    },
    "steepest_descent_set": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "steepest_descent_free": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "steepest_descent_restart": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "steepest_descent_iterate": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multimin/test.c": {
    "main": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"Roth\"",
        "\"Wood\"",
        "\"Rosenbrock\"",
        "\"Rosenbrock1\"",
        "\"SimpleAbs\"",
        "\"NRoth\"",
        "\"NWood\"",
        "\"NRosenbrock\"",
        "\"Roth\"",
        "\"Wood\"",
        "\"Rosenbrock\"",
        "\"Spring\""
      ]
    },
    "test_fdf": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"x \"",
        "\"%g\"",
        "\"g \"",
        "\"%g\"",
        "\"%i: \\n\"",
        "\"x \"",
        "\"%g\"",
        "\"g \"",
        "\"%g\"",
        "\"f(x) %g\\n\"",
        "\"dx %g\\n\"",
        "\"status=%d\\n\"",
        "\"\\n\"",
        "\"%s, on %s: %i iters (fn+g=%d+%d), f(x)=%g\""
      ]
    },
    "test_f": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"x \"",
        "\"%g\"",
        "\"%i: \\n\"",
        "\"x \"",
        "\"%g\"",
        "\"f(x) %g\\n\"",
        "\"size: %g\\n\"",
        "\"\\n\"",
        "\"%s, on %s: %d iter (fn=%d), f(x)=%g\""
      ]
    }
  },
  "gsl/gsl-2.5/multimin/test_funcs.c": {
    "simpleabs_initpt": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "simpleabs_initpt1": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "simpleabs_f": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "simpleabs_df": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "simpleabs_fdf": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "rosenbrock_initpt": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "rosenbrock_initpt1": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "rosenbrock_f": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "rosenbrock_df": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    },
    "rosenbrock_fdf": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "roth_initpt": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "roth_f": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "roth_df": {
      "start_point": [
        161,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "roth_fdf": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "wood_initpt": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    },
    "wood_f": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    },
    "wood_df": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": []
    },
    "wood_fdf": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "Nrosenbrock_df": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    },
    "Nrosenbrock_fdf": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "Nroth_df": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        274,
        1
      ],
      "strings": []
    },
    "Nroth_fdf": {
      "start_point": [
        276,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": []
    },
    "Nwood_df": {
      "start_point": [
        290,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": []
    },
    "Nwood_fdf": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": []
    },
    "spring_initpt": {
      "start_point": [
        311,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    },
    "spring_f": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        339,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multimin/test_funcs.h": {},
  "gsl/gsl-2.5/multimin/vector_bfgs.c": {
    "vector_bfgs_alloc": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": [
        "\"failed to allocate space for x1\"",
        "\"failed to allocate space for dx1\"",
        "\"failed to allocate space for x2\"",
        "\"failed to allocate space for p\"",
        "\"failed to allocate space for g0\"",
        "\"failed to allocate space for g0\"",
        "\"failed to allocate space for g0\"",
        "\"failed to allocate space for g0\""
      ]
    },
    "vector_bfgs_set": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "vector_bfgs_free": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "vector_bfgs_restart": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        191,
        1
      ],
      "strings": []
    },
    "vector_bfgs_iterate": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": [
        "\"got stepc = %g fc = %g\\n\"",
        "\"updated directions\\n\"",
        "\"p: \"",
        "\"%g\"",
        "\"g: \"",
        "\"%g\""
      ]
    }
  },
  "gsl/gsl-2.5/multimin/vector_bfgs2.c": {
    "vector_bfgs2_alloc": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": [
        "\"failed to allocate space for p\"",
        "\"failed to allocate space for g0\"",
        "\"failed to allocate space for g0\"",
        "\"failed to allocate space for g0\"",
        "\"failed to allocate space for g0\"",
        "\"failed to allocate space for g0\"",
        "\"failed to allocate space for g0\""
      ]
    },
    "vector_bfgs2_set": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "vector_bfgs2_free": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "vector_bfgs2_restart": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "vector_bfgs2_iterate": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/broyden.c": {
    "broyden_alloc": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": [
        "\"failed to allocate space for lu\"",
        "\"failed to allocate space for permutation\"",
        "\"failed to allocate space for d\"",
        "\"failed to allocate space for v\"",
        "\"failed to allocate space for w\"",
        "\"failed to allocate space for y\"",
        "\"failed to allocate space for fnew\"",
        "\"failed to allocate space for x_trial\"",
        "\"failed to allocate space for p\""
      ]
    },
    "broyden_set": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": []
    },
    "broyden_iterate": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        423,
        1
      ],
      "strings": [
        "\"approximation to Jacobian has collapsed\""
      ]
    },
    "broyden_free": {
      "start_point": [
        426,
        0
      ],
      "end_point": [
        444,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/convergence.c": {
    "gsl_multiroot_test_delta": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": [
        "\"relative tolerance is negative\""
      ]
    },
    "gsl_multiroot_test_residual": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": [
        "\"absolute tolerance is negative\""
      ]
    }
  },
  "gsl/gsl-2.5/multiroots/dnewton.c": {
    "dnewton_alloc": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"failed to allocate space for lu\"",
        "\"failed to allocate space for permutation\"",
        "\"failed to allocate space for d\""
      ]
    },
    "dnewton_set": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "dnewton_iterate": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "dnewton_free": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/dogleg.c": {
    "scaled_enorm": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "enorm_sum": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "compute_wv": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "compute_df": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "compute_diag": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "update_diag": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    },
    "compute_delta": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    },
    "compute_actual_reduction": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "compute_predicted_reduction": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "compute_qtf": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "compute_rdx": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    },
    "compute_trial_step": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": []
    },
    "newton_direction": {
      "start_point": [
        221,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": [
        "\"rsolve status = %d\\n\""
      ]
    },
    "gradient_direction": {
      "start_point": [
        243,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": []
    },
    "minimum_step": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": []
    },
    "compute_Rg": {
      "start_point": [
        281,
        0
      ],
      "end_point": [
        300,
        1
      ],
      "strings": []
    },
    "scaled_addition": {
      "start_point": [
        302,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": []
    },
    "dogleg": {
      "start_point": [
        316,
        0
      ],
      "end_point": [
        412,
        1
      ],
      "strings": [
        "\"newton = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"took newton (qnorm = %g  <=   delta = %g)\\n\"",
        "\"grad = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"took scaled newton because gnorm = 0\\n\"",
        "\"mingrad = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"Rg = \"",
        "\"%g\"",
        "\"\\n\"",
        "\"took gradient\\n\"",
        "\"bnorm = %g\\n\"",
        "\"gnorm = %g\\n\"",
        "\"qnorm = %g\\n\"",
        "\"delta = %g\\n\"",
        "\"alpha = %g   beta = %g\\n\"",
        "\"took scaled combination of newton and gradient\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/multiroots/enorm.c": {
    "enorm": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/fdfsolver.c": {
    "gsl_multiroot_fdfsolver_alloc": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"failed to allocate space for multiroot solver struct\"",
        "\"failed to allocate space for x\"",
        "\"failed to allocate space for f\"",
        "\"failed to allocate space for g\"",
        "\"failed to allocate space for dx\"",
        "\"failed to allocate space for multiroot solver state\"",
        "\"failed to set solver\""
      ]
    },
    "gsl_multiroot_fdfsolver_set": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"function incompatible with solver size\"",
        "\"vector length not compatible with function\""
      ]
    },
    "gsl_multiroot_fdfsolver_iterate": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "gsl_multiroot_fdfsolver_free": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "gsl_multiroot_fdfsolver_name": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    },
    "gsl_multiroot_fdfsolver_root": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "gsl_multiroot_fdfsolver_dx": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "gsl_multiroot_fdfsolver_f": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/fdjac.c": {
    "gsl_multiroot_fdjacobian": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"function and jacobian are not conformant\"",
        "\"failed to allocate space for x1 workspace\"",
        "\"failed to allocate space for f1 workspace\""
      ]
    }
  },
  "gsl/gsl-2.5/multiroots/fsolver.c": {
    "gsl_multiroot_fsolver_alloc": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"failed to allocate space for multiroot solver struct\"",
        "\"failed to allocate space for x\"",
        "\"failed to allocate space for f\"",
        "\"failed to allocate space for dx\"",
        "\"failed to allocate space for multiroot solver state\"",
        "\"failed to set solver\""
      ]
    },
    "gsl_multiroot_fsolver_set": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": [
        "\"function incompatible with solver size\"",
        "\"vector length not compatible with function\""
      ]
    },
    "gsl_multiroot_fsolver_iterate": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    },
    "gsl_multiroot_fsolver_free": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "gsl_multiroot_fsolver_name": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "gsl_multiroot_fsolver_root": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "gsl_multiroot_fsolver_dx": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "gsl_multiroot_fsolver_f": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/gnewton.c": {
    "gnewton_alloc": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"failed to allocate space for lu\"",
        "\"failed to allocate space for permutation\"",
        "\"failed to allocate space for d\"",
        "\"failed to allocate space for x_trial\""
      ]
    },
    "gnewton_set": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    },
    "gnewton_iterate": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": []
    },
    "gnewton_free": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/gsl_multiroots.h": {
    "struct": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/hybrid.c": {
    "hybrid_alloc": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        339,
        1
      ],
      "strings": [
        "\"failed to allocate space for J\"",
        "\"failed to allocate space for q\"",
        "\"failed to allocate space for r\"",
        "\"failed to allocate space for tau\"",
        "\"failed to allocate space for diag\"",
        "\"failed to allocate space for qtf\"",
        "\"failed to allocate space for newton\"",
        "\"failed to allocate space for gradient\"",
        "\"failed to allocate space for x_trial\"",
        "\"failed to allocate space for f_trial\"",
        "\"failed to allocate space for df\"",
        "\"failed to allocate space for qtdf\"",
        "\"failed to allocate space for rdx\"",
        "\"failed to allocate space for w\"",
        "\"failed to allocate space for v\""
      ]
    },
    "hybrid_set": {
      "start_point": [
        341,
        0
      ],
      "end_point": [
        347,
        1
      ],
      "strings": []
    },
    "hybrids_set": {
      "start_point": [
        349,
        0
      ],
      "end_point": [
        355,
        1
      ],
      "strings": []
    },
    "hybrid_set_impl": {
      "start_point": [
        357,
        0
      ],
      "end_point": [
        417,
        1
      ],
      "strings": []
    },
    "hybrid_iterate": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": []
    },
    "hybrids_iterate": {
      "start_point": [
        427,
        0
      ],
      "end_point": [
        433,
        1
      ],
      "strings": []
    },
    "hybrid_iterate_impl": {
      "start_point": [
        435,
        0
      ],
      "end_point": [
        616,
        1
      ],
      "strings": []
    },
    "hybrid_free": {
      "start_point": [
        619,
        0
      ],
      "end_point": [
        639,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/hybridj.c": {
    "hybridj_alloc": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        308,
        1
      ],
      "strings": [
        "\"failed to allocate space for q\"",
        "\"failed to allocate space for r\"",
        "\"failed to allocate space for tau\"",
        "\"failed to allocate space for diag\"",
        "\"failed to allocate space for qtf\"",
        "\"failed to allocate space for newton\"",
        "\"failed to allocate space for gradient\"",
        "\"failed to allocate space for x_trial\"",
        "\"failed to allocate space for f_trial\"",
        "\"failed to allocate space for df\"",
        "\"failed to allocate space for qtdf\"",
        "\"failed to allocate space for rdx\"",
        "\"failed to allocate space for w\"",
        "\"failed to allocate space for v\""
      ]
    },
    "hybridj_set": {
      "start_point": [
        310,
        0
      ],
      "end_point": [
        315,
        1
      ],
      "strings": []
    },
    "hybridsj_set": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    },
    "hybridj_set_impl": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": []
    },
    "hybridj_iterate": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        369,
        1
      ],
      "strings": []
    },
    "hybridsj_iterate": {
      "start_point": [
        371,
        0
      ],
      "end_point": [
        376,
        1
      ],
      "strings": []
    },
    "hybridj_iterate_impl": {
      "start_point": [
        378,
        0
      ],
      "end_point": [
        562,
        1
      ],
      "strings": []
    },
    "hybridj_free": {
      "start_point": [
        565,
        0
      ],
      "end_point": [
        584,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/newton.c": {
    "newton_alloc": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"failed to allocate space for lu\"",
        "\"failed to allocate space for permutation\""
      ]
    },
    "newton_set": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "newton_iterate": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "newton_free": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/test.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"Rosenbrock\"",
        "\"Roth\"",
        "\"Powell badly scaled\"",
        "\"Brown badly scaled\"",
        "\"Powell singular\"",
        "\"Wood\"",
        "\"Helical\"",
        "\"Discrete BVP\"",
        "\"Trig\"",
        "\"Rosenbrock\"",
        "\"Roth\"",
        "\"Powell badly scaled\"",
        "\"Brown badly scaled\"",
        "\"Powell singular\"",
        "\"Wood\"",
        "\"Helical\"",
        "\"Discrete BVP\"",
        "\"Trig\""
      ]
    },
    "scale": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "test_fdf": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": [
        "\"x \"",
        "\"%g\"",
        "\"\\n\"",
        "\"f \"",
        "\"%g\"",
        "\"\\n\"",
        "\"broken jacobian %g\\n\"",
        "\"avg r = %g\\n\"",
        "\"%s on %s (%g), %u iterations, residual = %.2g\""
      ]
    },
    "test_f": {
      "start_point": [
        201,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": [
        "\"x \"",
        "\"%g\"",
        "\"\\n\"",
        "\"f \"",
        "\"%g\"",
        "\"\\n\"",
        "\"%s on %s (%g), %u iterations, residual = %.2g\""
      ]
    }
  },
  "gsl/gsl-2.5/multiroots/test_funcs.c": {
    "rosenbrock_initpt": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "rosenbrock_f": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "rosenbrock_df": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "rosenbrock_fdf": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "roth_initpt": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "roth_f": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    },
    "roth_df": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    },
    "roth_fdf": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    },
    "powellscal_initpt": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": []
    },
    "powellscal_f": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    },
    "powellscal_df": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    },
    "powellscal_fdf": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "brownscal_initpt": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "brownscal_f": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        254,
        1
      ],
      "strings": []
    },
    "brownscal_df": {
      "start_point": [
        256,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "brownscal_fdf": {
      "start_point": [
        275,
        0
      ],
      "end_point": [
        283,
        1
      ],
      "strings": []
    },
    "powellsing_initpt": {
      "start_point": [
        294,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": []
    },
    "powellsing_f": {
      "start_point": [
        303,
        0
      ],
      "end_point": [
        324,
        1
      ],
      "strings": []
    },
    "powellsing_df": {
      "start_point": [
        326,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": []
    },
    "powellsing_fdf": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        372,
        1
      ],
      "strings": []
    },
    "wood_initpt": {
      "start_point": [
        383,
        0
      ],
      "end_point": [
        390,
        1
      ],
      "strings": []
    },
    "wood_f": {
      "start_point": [
        392,
        0
      ],
      "end_point": [
        416,
        1
      ],
      "strings": []
    },
    "wood_df": {
      "start_point": [
        418,
        0
      ],
      "end_point": [
        457,
        1
      ],
      "strings": []
    },
    "wood_fdf": {
      "start_point": [
        459,
        0
      ],
      "end_point": [
        467,
        1
      ],
      "strings": []
    },
    "helical_initpt": {
      "start_point": [
        478,
        0
      ],
      "end_point": [
        484,
        1
      ],
      "strings": []
    },
    "helical_f": {
      "start_point": [
        486,
        0
      ],
      "end_point": [
        522,
        1
      ],
      "strings": []
    },
    "helical_df": {
      "start_point": [
        524,
        0
      ],
      "end_point": [
        553,
        1
      ],
      "strings": []
    },
    "helical_fdf": {
      "start_point": [
        555,
        0
      ],
      "end_point": [
        563,
        1
      ],
      "strings": []
    },
    "dbv_initpt": {
      "start_point": [
        576,
        0
      ],
      "end_point": [
        588,
        1
      ],
      "strings": []
    },
    "dbv_f": {
      "start_point": [
        590,
        0
      ],
      "end_point": [
        619,
        1
      ],
      "strings": []
    },
    "dbv_df": {
      "start_point": [
        621,
        0
      ],
      "end_point": [
        653,
        1
      ],
      "strings": []
    },
    "dbv_fdf": {
      "start_point": [
        655,
        0
      ],
      "end_point": [
        663,
        1
      ],
      "strings": []
    },
    "trig_initpt": {
      "start_point": [
        673,
        0
      ],
      "end_point": [
        682,
        1
      ],
      "strings": []
    },
    "trig_f": {
      "start_point": [
        684,
        0
      ],
      "end_point": [
        706,
        1
      ],
      "strings": []
    },
    "trig_df": {
      "start_point": [
        708,
        0
      ],
      "end_point": [
        733,
        1
      ],
      "strings": []
    },
    "trig_fdf": {
      "start_point": [
        735,
        0
      ],
      "end_point": [
        743,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiroots/test_funcs.h": {},
  "gsl/gsl-2.5/multiset/file.c": {
    "gsl_multiset_fread": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": [
        "\"fread failed\""
      ]
    },
    "gsl_multiset_fwrite": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"fwrite failed\""
      ]
    },
    "gsl_multiset_fprintf": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"fprintf failed\""
      ]
    },
    "gsl_multiset_fscanf": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": [
        "\"fscanf failed\""
      ]
    }
  },
  "gsl/gsl-2.5/multiset/gsl_multiset.h": {
    "struct": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "gsl_multiset_get": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/multiset/init.c": {
    "gsl_multiset_alloc": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"multiset parameter n must be positive integer\"",
        "\"failed to allocate space for multiset struct\"",
        "\"failed to allocate space for multiset data\""
      ]
    },
    "gsl_multiset_calloc": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "gsl_multiset_init_first": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "gsl_multiset_init_last": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "gsl_multiset_free": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/multiset/inline.c": {},
  "gsl/gsl-2.5/multiset/multiset.c": {
    "gsl_multiset_n": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "gsl_multiset_k": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "gsl_multiset_data": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "gsl_multiset_valid": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"multiset index outside range\"",
        "\"multiset indices not in increasing order\""
      ]
    },
    "gsl_multiset_next": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "gsl_multiset_prev": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "gsl_multiset_memcpy": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": [
        "\"multiset lengths are not equal\""
      ]
    }
  },
  "gsl/gsl-2.5/multiset/test.c": {
    "main": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": [
        "\"gsl_multiset_valid (%u)\"",
        "\"gsl_multiset_next, 6 choose 3 multiset, 56 steps\"",
        "\"gsl_multiset_next on the last multiset\"",
        "\"gsl_multiset_valid on the last multiset\"",
        "\"gsl_multiset_memcpy, 6 choose 3 multiset\"",
        "\"gsl_multiset_valid (%u)\"",
        "\"gsl_multiset_prev, 6 choose 3 multiset, 20 steps\"",
        "\"gsl_multiset_prev on the first multiset\"",
        "\"gsl_multiset_valid on the first multiset\"",
        "\"gsl_multiset_memcpy, 6 choose 3 multiset\"",
        "\"gsl_multiset 2 choose 3\"",
        "\"gsl_multiset 7 choose 0\"",
        "\"gsl_multiset 7 choose 7\"",
        "\"gsl_multiset_valid on an invalid multiset (1,1,2)\"",
        "\"gsl_multiset_valid on an invalid multiset (2,1,0)\"",
        "\"gsl_multiset_valid on an invalid multiset (1,2,0)\"",
        "\"gsl_multiset_memcpy, (6,4) vs (6,3)\"",
        "\"gsl_multiset_memcpy, (7,3) vs (6,3)\"",
        "\"gsl_multiset_memcpy, (7,2) vs (6,3)\""
      ]
    },
    "my_error_handler": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        303,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/ntuple/gsl_ntuple.h": {
    "typedef": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ntuple/ntuple.c": {
    "gsl_ntuple_create": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"failed to allocate space for ntuple struct\"",
        "\"wb\"",
        "\"unable to create ntuple file\""
      ]
    },
    "gsl_ntuple_open": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": [
        "\"failed to allocate space for ntuple struct\"",
        "\"rb\"",
        "\"unable to open ntuple file for reading\""
      ]
    },
    "gsl_ntuple_write": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"failed to write ntuple entry to file\""
      ]
    },
    "gsl_ntuple_bookdata": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "gsl_ntuple_read": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": [
        "\"failed to read ntuple entry from file\""
      ]
    },
    "gsl_ntuple_project": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"failed to read ntuple for projection\""
      ]
    },
    "gsl_ntuple_close": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": [
        "\"failed to close ntuple file\""
      ]
    }
  },
  "gsl/gsl-2.5/ntuple/test.c": {
    "main": {
      "start_point": [
        17,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": [
        "\"test.dat\"",
        "\"writing ntuples\"",
        "\"test.dat\"",
        "\"reading ntuples\"",
        "\"test.dat\"",
        "\"histogramming ntuples\""
      ]
    },
    "sel_func": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "val_func": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/bsimp.c": {
    "compute_weights": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "bsimp_deuf_kchoice": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "poly_extrap": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "bsimp_step_local": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": []
    },
    "bsimp_alloc": {
      "start_point": [
        348,
        0
      ],
      "end_point": [
        383,
        1
      ],
      "strings": []
    },
    "bsimp_apply": {
      "start_point": [
        388,
        0
      ],
      "end_point": [
        506,
        1
      ],
      "strings": []
    },
    "bsimp_order": {
      "start_point": [
        508,
        0
      ],
      "end_point": [
        513,
        1
      ],
      "strings": []
    },
    "bsimp_reset": {
      "start_point": [
        515,
        0
      ],
      "end_point": [
        525,
        1
      ],
      "strings": []
    },
    "bsimp_free": {
      "start_point": [
        528,
        0
      ],
      "end_point": [
        553,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/control.c": {
    "gsl_odeiv_control_alloc": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": [
        "\"failed to allocate space for control struct\"",
        "\"failed to allocate space for control state\""
      ]
    },
    "gsl_odeiv_control_init": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_control_free": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_control_name": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_control_hadjust": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/cscal.c": {
    "sc_control_alloc": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"failed to allocate space for sc_control_state\""
      ]
    },
    "sc_control_init": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": [
        "\"eps_abs is negative\"",
        "\"eps_rel is negative\"",
        "\"a_y is negative\"",
        "\"a_dydt is negative\""
      ]
    },
    "sc_control_hadjust": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "sc_control_free": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_control_scaled_new": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"error trying to initialize control\"",
        "\"failed to allocate space for scale_abs\""
      ]
    }
  },
  "gsl/gsl-2.5/ode-initval/cstd.c": {
    "std_control_alloc": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"failed to allocate space for std_control_state\""
      ]
    },
    "std_control_init": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"eps_abs is negative\"",
        "\"eps_rel is negative\"",
        "\"a_y is negative\"",
        "\"a_dydt is negative\""
      ]
    },
    "std_control_hadjust": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "std_control_free": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_control_standard_new": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": [
        "\"error trying to initialize control\""
      ]
    },
    "gsl_odeiv_control_y_new": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_control_yp_new": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/evolve.c": {
    "gsl_odeiv_evolve_alloc": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": [
        "\"failed to allocate space for evolve struct\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for yerr\"",
        "\"failed to allocate space for dydt_in\"",
        "\"failed to allocate space for dydt_out\""
      ]
    },
    "gsl_odeiv_evolve_reset": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_evolve_free": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_evolve_apply": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": [
        "\"step dimension must match evolution size\"",
        "\"step direction must match interval direction\""
      ]
    }
  },
  "gsl/gsl-2.5/ode-initval/gear1.c": {
    "gear1_alloc": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": [
        "\"failed to allocate space for gear1_state\"",
        "\"failed to allocate space for k\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for y0_orig\"",
        "\"failed to allocate space for y_onestep\""
      ]
    },
    "gear1_step": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "gear1_apply": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    },
    "gear1_reset": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "gear1_order": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": []
    },
    "gear1_free": {
      "start_point": [
        250,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/gear2.c": {
    "gear2_alloc": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": [
        "\"failed to allocate space for gear2_state\"",
        "\"failed to allocate space for yim1\"",
        "\"failed to allocate space for k\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for y0_orig\"",
        "\"failed to allocate space for y0_orig\"",
        "\"failed to allocate space for primer\""
      ]
    },
    "gear2_step": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "gear2_apply": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": []
    },
    "gear2_reset": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        311,
        1
      ],
      "strings": []
    },
    "gear2_order": {
      "start_point": [
        313,
        0
      ],
      "end_point": [
        319,
        1
      ],
      "strings": []
    },
    "gear2_free": {
      "start_point": [
        321,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/gsl_odeiv.h": {
    "typedef": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/odeiv_util.h": {},
  "gsl/gsl-2.5/ode-initval/rk2.c": {
    "rk2_alloc": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk2_state\"",
        "\"failed to allocate space for k1\"",
        "\"failed to allocate space for k2\"",
        "\"failed to allocate space for k3\"",
        "\"failed to allocate space for ytmp\""
      ]
    },
    "rk2_apply": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    },
    "rk2_reset": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    },
    "rk2_order": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "rk2_free": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/rk2imp.c": {
    "rk2imp_alloc": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk2imp_state\"",
        "\"failed to allocate space for Y1\"",
        "\"failed to allocate space for ytmp\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for y_onestep\"",
        "\"failed to allocate space for y0_orig\""
      ]
    },
    "rk2imp_step": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "rk2imp_apply": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        288,
        1
      ],
      "strings": []
    },
    "rk2imp_reset": {
      "start_point": [
        290,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": []
    },
    "rk2imp_order": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": []
    },
    "rk2imp_free": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        323,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/rk2simp.c": {
    "rk2simp_alloc": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk2simp_state\"",
        "\"failed to allocate space for Y1\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for y0_orig\"",
        "\"failed to allocate space for ytmp\"",
        "\"failed to allocate space for dfdy\"",
        "\"failed to allocate space for dfdt\"",
        "\"failed to allocate space for y_onestep\"",
        "\"failed to allocate space for p\""
      ]
    },
    "rk2simp_step": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    },
    "rk2simp_apply": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        329,
        1
      ],
      "strings": []
    },
    "rk2simp_reset": {
      "start_point": [
        332,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": []
    },
    "rk2simp_order": {
      "start_point": [
        348,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": []
    },
    "rk2simp_free": {
      "start_point": [
        356,
        0
      ],
      "end_point": [
        369,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/rk4.c": {
    "rk4_alloc": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk4_state\"",
        "\"failed to allocate space for k\"",
        "\"failed to allocate space for k1\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for ytmp\"",
        "\"failed to allocate space for ytmp\""
      ]
    },
    "rk4_step": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "rk4_apply": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": []
    },
    "rk4_reset": {
      "start_point": [
        320,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": []
    },
    "rk4_order": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        340,
        1
      ],
      "strings": []
    },
    "rk4_free": {
      "start_point": [
        342,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/rk4imp.c": {
    "rk4imp_alloc": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk4imp_state\"",
        "\"failed to allocate space for k1nu\"",
        "\"failed to allocate space for k2nu\"",
        "\"failed to allocate space for ytmp1\"",
        "\"failed to allocate space for ytmp2\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for y0_orig\"",
        "\"failed to allocate space for y_onestep\""
      ]
    },
    "rk4imp_step": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    },
    "rk4imp_apply": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        338,
        1
      ],
      "strings": []
    },
    "rk4imp_reset": {
      "start_point": [
        340,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": []
    },
    "rk4imp_order": {
      "start_point": [
        356,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": []
    },
    "rk4imp_free": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        377,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/rk8pd.c": {
    "rk8pd_alloc": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk8pd_state\"",
        "\"failed to allocate space for ytmp\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for k's\""
      ]
    },
    "rk8pd_apply": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        483,
        1
      ],
      "strings": []
    },
    "rk8pd_reset": {
      "start_point": [
        485,
        0
      ],
      "end_point": [
        501,
        1
      ],
      "strings": []
    },
    "rk8pd_order": {
      "start_point": [
        503,
        0
      ],
      "end_point": [
        509,
        1
      ],
      "strings": []
    },
    "rk8pd_free": {
      "start_point": [
        511,
        0
      ],
      "end_point": [
        524,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/rkck.c": {
    "rkck_alloc": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": [
        "\"failed to allocate space for rkck_state\"",
        "\"failed to allocate space for k1\"",
        "\"failed to allocate space for k2\"",
        "\"failed to allocate space for k3\"",
        "\"failed to allocate space for k4\"",
        "\"failed to allocate space for k5\"",
        "\"failed to allocate space for k6\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for ytmp\""
      ]
    },
    "rkck_apply": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        316,
        1
      ],
      "strings": []
    },
    "rkck_reset": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "rkck_order": {
      "start_point": [
        336,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    },
    "rkck_free": {
      "start_point": [
        344,
        0
      ],
      "end_point": [
        358,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/rkf45.c": {
    "rkf45_alloc": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": [
        "\"failed to allocate space for rkf45_state\"",
        "\"failed to allocate space for k1\"",
        "\"failed to allocate space for k2\"",
        "\"failed to allocate space for k3\"",
        "\"failed to allocate space for k4\"",
        "\"failed to allocate space for k5\"",
        "\"failed to allocate space for k6\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for ytmp\""
      ]
    },
    "rkf45_apply": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    },
    "rkf45_reset": {
      "start_point": [
        320,
        0
      ],
      "end_point": [
        335,
        1
      ],
      "strings": []
    },
    "rkf45_order": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        343,
        1
      ],
      "strings": []
    },
    "rkf45_free": {
      "start_point": [
        345,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/step.c": {
    "gsl_odeiv_step_alloc": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"failed to allocate space for ode struct\"",
        "\"failed to allocate space for ode state\""
      ]
    },
    "gsl_odeiv_step_name": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_step_order": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_step_apply": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_step_reset": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "gsl_odeiv_step_free": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval/test.c": {
    "rhs_linear": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "jac_linear": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "rhs_exp": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "jac_exp": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "rhs_sin": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "jac_sin": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "rhs_xsin": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "jac_xsin": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "rhs_stiff": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    },
    "jac_stiff": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "rhs_vanderpol": {
      "start_point": [
        243,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    },
    "jac_vanderpol": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": []
    },
    "rhs_oregonator": {
      "start_point": [
        282,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": []
    },
    "jac_oregonator": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        321,
        1
      ],
      "strings": []
    },
    "rhs_vl": {
      "start_point": [
        336,
        0
      ],
      "end_point": [
        348,
        1
      ],
      "strings": []
    },
    "jac_vl": {
      "start_point": [
        350,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": []
    },
    "rhs_stifftrig": {
      "start_point": [
        382,
        0
      ],
      "end_point": [
        388,
        1
      ],
      "strings": []
    },
    "jac_stifftrig": {
      "start_point": [
        390,
        0
      ],
      "end_point": [
        399,
        1
      ],
      "strings": []
    },
    "rhs_e5": {
      "start_point": [
        418,
        0
      ],
      "end_point": [
        432,
        1
      ],
      "strings": []
    },
    "jac_e5": {
      "start_point": [
        434,
        0
      ],
      "end_point": [
        469,
        1
      ],
      "strings": []
    },
    "test_odeiv_stepper": {
      "start_point": [
        478,
        0
      ],
      "end_point": [
        513,
        1
      ],
      "strings": [
        "\"test_odeiv_stepper: %s step_apply returned %d\"",
        "\"%s %s step(%d)\""
      ]
    },
    "test_stepper": {
      "start_point": [
        515,
        0
      ],
      "end_point": [
        569,
        1
      ],
      "strings": [
        "\"linear\"",
        "\"exponential\"",
        "\"cosine-sine\"",
        "\"classic_stiff\""
      ]
    },
    "test_evolve_system": {
      "start_point": [
        571,
        0
      ],
      "end_point": [
        654,
        1
      ],
      "strings": [
        "\"%s, t must be restored on failure\"",
        "\"%s, y must be restored on failure\"",
        "\"%s evolve_apply returned %d\"",
        "\"%s evolve_apply reached maxiter\"",
        "\"%s %s evolve(%d)\""
      ]
    },
    "sys_driver": {
      "start_point": [
        656,
        0
      ],
      "end_point": [
        711,
        1
      ],
      "strings": [
        "\"sys_driver: %s evolve_apply returned %d\"",
        "\"sys_driver: %s evolve_apply reached maxiter at t=%g\"",
        "\"%s %s [%g,%g], %d steps completed\""
      ]
    },
    "test_compare_vanderpol": {
      "start_point": [
        713,
        0
      ],
      "end_point": [
        818,
        1
      ],
      "strings": [
        "\"vanderpol\"",
        "\"%s/%s vanderpol\""
      ]
    },
    "test_compare_oregonator": {
      "start_point": [
        820,
        0
      ],
      "end_point": [
        909,
        1
      ],
      "strings": [
        "\"oregonator\"",
        "\"%s/%s oregonator\""
      ]
    },
    "test_evolve_linear": {
      "start_point": [
        911,
        0
      ],
      "end_point": [
        921,
        1
      ],
      "strings": [
        "\"linear[0,4]\""
      ]
    },
    "test_evolve_exp": {
      "start_point": [
        923,
        0
      ],
      "end_point": [
        933,
        1
      ],
      "strings": [
        "\"exp[0,2]\""
      ]
    },
    "test_evolve_sin": {
      "start_point": [
        935,
        0
      ],
      "end_point": [
        947,
        1
      ],
      "strings": [
        "\"sine[0,2]\""
      ]
    },
    "test_evolve_xsin": {
      "start_point": [
        949,
        0
      ],
      "end_point": [
        962,
        1
      ],
      "strings": [
        "\"sine[0,2] w/errors\""
      ]
    },
    "test_evolve_stiff1": {
      "start_point": [
        965,
        0
      ],
      "end_point": [
        982,
        1
      ],
      "strings": [
        "\"stiff[0,1]\""
      ]
    },
    "test_evolve_stiff5": {
      "start_point": [
        984,
        0
      ],
      "end_point": [
        1001,
        1
      ],
      "strings": [
        "\"stiff[0,5]\""
      ]
    },
    "rhs_stepfn": {
      "start_point": [
        1005,
        0
      ],
      "end_point": [
        1012,
        1
      ],
      "strings": []
    },
    "test_stepfn": {
      "start_point": [
        1014,
        0
      ],
      "end_point": [
        1048,
        1
      ],
      "strings": [
        "\"i=%d status=%d t=%g h=%g y=%g\\n\"",
        "\"evolve step function, t (stepfn/rk2)\"",
        "\"evolve step function, y (stepfn/rk2)\""
      ]
    },
    "rhs_stepfn2": {
      "start_point": [
        1050,
        0
      ],
      "end_point": [
        1057,
        1
      ],
      "strings": []
    },
    "test_stepfn2": {
      "start_point": [
        1059,
        0
      ],
      "end_point": [
        1094,
        1
      ],
      "strings": [
        "\"i=%d status=%d t=%g h=%g y=%g\\n\"",
        "\"evolve big step function, t (stepfn2/rk2)\"",
        "\"evolve big step function, y (stepfn2/rk2)\""
      ]
    },
    "rhs_stepfn3": {
      "start_point": [
        1096,
        0
      ],
      "end_point": [
        1108,
        1
      ],
      "strings": []
    },
    "test_stepfn3": {
      "start_point": [
        1111,
        0
      ],
      "end_point": [
        1146,
        1
      ],
      "strings": [
        "\"i=%d status=%d t=%g h=%g y=%g\\n\"",
        "\"evolve big step function, t (stepfn3/rkf45)\"",
        "\"evolve big step function, y (stepfn3/rkf45)\""
      ]
    },
    "rhs_cos": {
      "start_point": [
        1148,
        0
      ],
      "end_point": [
        1151,
        1
      ],
      "strings": []
    },
    "jac_cos": {
      "start_point": [
        1153,
        0
      ],
      "end_point": [
        1160,
        1
      ],
      "strings": []
    },
    "test_evolve_negative_h": {
      "start_point": [
        1164,
        0
      ],
      "end_point": [
        1202,
        1
      ],
      "strings": [
        "\"%s evolve_apply returned %d for negative h\"",
        "\"evolution with negative h (using %s)\""
      ]
    },
    "main": {
      "start_point": [
        1204,
        0
      ],
      "end_point": [
        1267,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/bsimp.c": {
    "compute_weights": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "bsimp_deuf_kchoice": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    },
    "poly_extrap": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "bsimp_step_local": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        348,
        1
      ],
      "strings": []
    },
    "bsimp_alloc": {
      "start_point": [
        351,
        0
      ],
      "end_point": [
        386,
        1
      ],
      "strings": []
    },
    "bsimp_apply": {
      "start_point": [
        391,
        0
      ],
      "end_point": [
        509,
        1
      ],
      "strings": []
    },
    "bsimp_order": {
      "start_point": [
        511,
        0
      ],
      "end_point": [
        516,
        1
      ],
      "strings": []
    },
    "bsimp_reset": {
      "start_point": [
        518,
        0
      ],
      "end_point": [
        528,
        1
      ],
      "strings": []
    },
    "bsimp_free": {
      "start_point": [
        531,
        0
      ],
      "end_point": [
        556,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/control.c": {
    "gsl_odeiv2_control_alloc": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": [
        "\"failed to allocate space for control struct\"",
        "\"failed to allocate space for control state\""
      ]
    },
    "gsl_odeiv2_control_init": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_control_free": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_control_name": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_control_hadjust": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_control_errlevel": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_control_set_driver": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"driver pointer is null\""
      ]
    }
  },
  "gsl/gsl-2.5/ode-initval2/control_utils.c": {
    "control_set_driver_null": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/cscal.c": {
    "sc_control_alloc": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": [
        "\"failed to allocate space for sc_control_state\""
      ]
    },
    "sc_control_init": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": [
        "\"eps_abs is negative\"",
        "\"eps_rel is negative\"",
        "\"a_y is negative\"",
        "\"a_dydt is negative\""
      ]
    },
    "sc_control_hadjust": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "sc_control_errlevel": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": [
        "\"errlev <= zero\""
      ]
    },
    "sc_control_free": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_control_scaled_new": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": [
        "\"error trying to initialize control\"",
        "\"failed to allocate space for scale_abs\""
      ]
    }
  },
  "gsl/gsl-2.5/ode-initval2/cstd.c": {
    "std_control_alloc": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"failed to allocate space for std_control_state\""
      ]
    },
    "std_control_init": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": [
        "\"eps_abs is negative\"",
        "\"eps_rel is negative\"",
        "\"a_y is negative\"",
        "\"a_dydt is negative\""
      ]
    },
    "std_control_hadjust": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "std_control_errlevel": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"errlev <= zero\""
      ]
    },
    "std_control_free": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_control_standard_new": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": [
        "\"error trying to initialize control\""
      ]
    },
    "gsl_odeiv2_control_y_new": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        208,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_control_yp_new": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/driver.c": {
    "driver_alloc": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": [
        "\"gsl_odeiv2_system must be defined\"",
        "\"failed to allocate space for driver state\"",
        "\"gsl_odeiv2_system dimension must be a positive integer\"",
        "\"failed to allocate step object\"",
        "\"failed to allocate evolve object\"",
        "\"invalid hstart\""
      ]
    },
    "gsl_odeiv2_driver_set_hmin": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": [
        "\"hmin <= fabs(h) <= hmax required\""
      ]
    },
    "gsl_odeiv2_driver_set_hmax": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"hmin <= fabs(h) <= hmax required\"",
        "\"invalid hmax\""
      ]
    },
    "gsl_odeiv2_driver_set_nmax": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_driver_alloc_y_new": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"failed to allocate driver object\"",
        "\"failed to allocate control object\"",
        "\"epsabs and epsrel must be positive\""
      ]
    },
    "gsl_odeiv2_driver_alloc_yp_new": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": [
        "\"failed to allocate driver object\"",
        "\"failed to allocate control object\"",
        "\"epsabs and epsrel must be positive\""
      ]
    },
    "gsl_odeiv2_driver_alloc_standard_new": {
      "start_point": [
        234,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": [
        "\"failed to allocate driver object\"",
        "\"failed to allocate control object\"",
        "\"epsabs and epsrel must be positive\""
      ]
    },
    "gsl_odeiv2_driver_alloc_scaled_new": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": [
        "\"failed to allocate driver object\"",
        "\"failed to allocate control object\"",
        "\"epsabs and epsrel must be positive\""
      ]
    },
    "gsl_odeiv2_driver_apply": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": [
        "\"integration limits and/or step direction not consistent\""
      ]
    },
    "gsl_odeiv2_driver_apply_fixed_step": {
      "start_point": [
        397,
        0
      ],
      "end_point": [
        428,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_driver_reset": {
      "start_point": [
        430,
        0
      ],
      "end_point": [
        454,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_driver_reset_hstart": {
      "start_point": [
        456,
        0
      ],
      "end_point": [
        478,
        1
      ],
      "strings": [
        "\"hmin <= fabs(h) <= hmax required\"",
        "\"invalid hstart\""
      ]
    },
    "gsl_odeiv2_driver_free": {
      "start_point": [
        480,
        0
      ],
      "end_point": [
        493,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/evolve.c": {
    "gsl_odeiv2_evolve_alloc": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": [
        "\"failed to allocate space for evolve struct\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for yerr\"",
        "\"failed to allocate space for dydt_in\"",
        "\"failed to allocate space for dydt_out\""
      ]
    },
    "gsl_odeiv2_evolve_reset": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_evolve_free": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_evolve_apply": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": [
        "\"step dimension must match evolution size\"",
        "\"step direction must match interval direction\"",
        "\"-- gsl_odeiv2_evolve_apply h0=%.5e\\n\"",
        "\"-- gsl_odeiv2_evolve_apply h0=%.5e, t0=%.5e, step_status=%d\\n\""
      ]
    },
    "gsl_odeiv2_evolve_apply_fixed_step": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        381,
        1
      ],
      "strings": [
        "\"step dimension must match evolution size\""
      ]
    },
    "gsl_odeiv2_evolve_set_driver": {
      "start_point": [
        383,
        0
      ],
      "end_point": [
        397,
        1
      ],
      "strings": [
        "\"driver pointer is null\""
      ]
    }
  },
  "gsl/gsl-2.5/ode-initval2/gsl_odeiv2.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/modnewton1.c": {
    "modnewton1_alloc": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"failed to allocate space for modnewton1_state_t\"",
        "\"failed to allocate space for IhAJ\"",
        "\"failed to allocate space for p\"",
        "\"failed to allocate space for dYk\"",
        "\"failed to allocate space for dScal\"",
        "\"failed to allocate space for Yk\"",
        "\"failed to allocate space for Yk\"",
        "\"failed to allocate space for rhs\""
      ]
    },
    "modnewton1_init": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "modnewton1_solve": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        410,
        1
      ],
      "strings": []
    },
    "modnewton1_free": {
      "start_point": [
        412,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/msadams.c": {
    "msadams_alloc": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        298,
        1
      ],
      "strings": [
        "\"failed to allocate space for msadams_state\"",
        "\"failed to allocate space for z\"",
        "\"failed to allocate space for zbackup\"",
        "\"failed to allocate space for ytmp\"",
        "\"failed to allocate space for ytmp2\"",
        "\"failed to allocate space for pc\"",
        "\"failed to allocate space for l\"",
        "\"failed to allocate space for hprev\"",
        "\"failed to allocate space for hprevbackup\"",
        "\"failed to allocate space for errlev\"",
        "\"failed to allocate space for abscor\"",
        "\"failed to allocate space for relcor\"",
        "\"failed to allocate space for svec\"",
        "\"failed to allocate space for tempvec\""
      ]
    },
    "msadams_failurehandler": {
      "start_point": [
        300,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "msadams_calccoeffs": {
      "start_point": [
        336,
        0
      ],
      "end_point": [
        494,
        1
      ],
      "strings": [
        "\"-- calccoeffs l: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- calccoeffs pc: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- calccoeffs st1=%.5e, st2=%.5e\\n\"",
        "\"-- calccoeffs ordm1coeff=%.5e \"",
        "\"ordp1coeff=%.5e \"",
        "\"ordp2coeff=%.5e \"",
        "\"errcoeff=%.5e\\n\""
      ]
    },
    "msadams_corrector": {
      "start_point": [
        496,
        0
      ],
      "end_point": [
        656,
        1
      ],
      "strings": [
        "\"-- FAIL at user function evaluation\\n\"",
        "\"-- dstep: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- func iter loop %d, errcoeff=%.5e, stepnorm =%.5e, convrate = %.5e, convtest = %.5e\\n\"",
        "\"-- FAIL, diverging functional iteration\\n\"",
        "\"-- FAIL at user function evaluation\\n\"",
        "\"-- functional iteration exit at mi=%d\\n\"",
        "\"-- FAIL, max_iter reached\\n\""
      ]
    },
    "msadams_eval_order": {
      "start_point": [
        658,
        0
      ],
      "end_point": [
        760,
        1
      ],
      "strings": [
        "\"-- eval_order ord=%d, ordest=%.5e, ordm1est=%.5e, ordp1est=%.5e\\n\"",
        "\"-- eval_order order DECREASED to %d\\n\"",
        "\"-- eval_order order INCREASED to %d\\n\""
      ]
    },
    "msadams_apply": {
      "start_point": [
        763,
        0
      ],
      "end_point": [
        1248,
        1
      ],
      "strings": [
        "\"msadams_apply: t=%.5e, ord=%d, h=%.5e, y:\"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- first step was REJECTED, msadams_reset called\\n\"",
        "\"-- previous step was REJECTED, state restored\\n\"",
        "\"-- max_failcount reached, msadams_reset called\\n\"",
        "\"-- order decreased by two, msadams_reset called\\n\"",
        "\"-- previous step was ACCEPTED, state saved\\n\"",
        "\"-- ord=%d, ni=%ld, ordwait=%d\\n\"",
        "\"-- ordprev: %d\\n\"",
        "\"-- errlev: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- order change %d\\n\"",
        "\"msadams_apply too large order change\"",
        "\"-- order increase detected, Nordsieck modified\\n\"",
        "\"-- order decrease detected, Nordsieck modified\\n\"",
        "\"-- h != hprev, Nordsieck modified\\n\"",
        "\"-- predicted y: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- corrected y: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- FAIL at user function evaluation\\n\"",
        "\"-- yerr: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- hprev: \"",
        "\"%.5e \"",
        "\"\\n\""
      ]
    },
    "msadams_set_driver": {
      "start_point": [
        1250,
        0
      ],
      "end_point": [
        1258,
        1
      ],
      "strings": []
    },
    "msadams_reset": {
      "start_point": [
        1260,
        0
      ],
      "end_point": [
        1283,
        1
      ],
      "strings": [
        "\"-- msadams_reset called\\n\""
      ]
    },
    "msadams_order": {
      "start_point": [
        1285,
        0
      ],
      "end_point": [
        1291,
        1
      ],
      "strings": []
    },
    "msadams_free": {
      "start_point": [
        1293,
        0
      ],
      "end_point": [
        1312,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/msbdf.c": {
    "msbdf_alloc": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        480,
        1
      ],
      "strings": [
        "\"failed to allocate space for msbdf_state\"",
        "\"failed to allocate space for z\"",
        "\"failed to allocate space for zbackup\"",
        "\"failed to allocate space for ytmp\"",
        "\"failed to allocate space for ytmp2\"",
        "\"failed to allocate space for l\"",
        "\"failed to allocate space for hprev\"",
        "\"failed to allocate space for hprevbackup\"",
        "\"failed to allocate space for ordprev\"",
        "\"failed to allocate space for ordprevbackup\"",
        "\"failed to allocate space for errlev\"",
        "\"failed to allocate space for abscor\"",
        "\"failed to allocate space for relcor\"",
        "\"failed to allocate space for svec\"",
        "\"failed to allocate space for tempvec\"",
        "\"failed to allocate space for dfdy\"",
        "\"failed to allocate space for dfdt\"",
        "\"failed to allocate space for M\"",
        "\"failed to allocate space for p\"",
        "\"failed to allocate space for rhs\"",
        "\"failed to allocate space for abscorscaled\""
      ]
    },
    "msbdf_failurehandler": {
      "start_point": [
        482,
        0
      ],
      "end_point": [
        516,
        1
      ],
      "strings": []
    },
    "msbdf_calccoeffs": {
      "start_point": [
        518,
        0
      ],
      "end_point": [
        641,
        1
      ],
      "strings": [
        "\"-- calccoeffs l: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- calccoeffs ordm1coeff=%.5e \"",
        "\"ordp1coeff=%.5e \"",
        "\"ordp2coeff=%.5e \"",
        "\"errcoeff=%.5e\\n\""
      ]
    },
    "msbdf_update": {
      "start_point": [
        643,
        0
      ],
      "end_point": [
        731,
        1
      ],
      "strings": [
        "\"-- evaluate jacobian\\n\"",
        "\"-- FAIL at jacobian function evaluation\\n\"",
        "\"-- update M, gamma=%.5e\\n\""
      ]
    },
    "msbdf_corrector": {
      "start_point": [
        733,
        0
      ],
      "end_point": [
        952,
        1
      ],
      "strings": [
        "\"-- FAIL at user function evaluation\\n\"",
        "\"-- FAIL at LU_solve\\n\"",
        "\"-- dstep: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- abscor: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- newt iter loop %d, errcoeff=%.5e, stepnorm =%.5e, convrate = %.5e, convtest = %.5e\\n\"",
        "\"-- FAIL, diverging Newton iteration\\n\"",
        "\"-- FAIL at user function evaluation\\n\"",
        "\"-- Newton iteration exit at mi=%d\\n\"",
        "\"-- FAIL, max_iter reached\\n\""
      ]
    },
    "msbdf_eval_order": {
      "start_point": [
        954,
        0
      ],
      "end_point": [
        1050,
        1
      ],
      "strings": [
        "\"-- eval_order ord=%d, ordest=%.5e, ordm1est=%.5e, ordp1est=%.5e\\n\"",
        "\"-- eval_order order DECREASED to %d\\n\"",
        "\"-- eval_order order INCREASED to %d\\n\""
      ]
    },
    "msbdf_check_no_order_decrease": {
      "start_point": [
        1052,
        0
      ],
      "end_point": [
        1070,
        1
      ],
      "strings": []
    },
    "msbdf_check_step_size_decrease": {
      "start_point": [
        1072,
        0
      ],
      "end_point": [
        1100,
        1
      ],
      "strings": []
    },
    "msbdf_apply": {
      "start_point": [
        1102,
        0
      ],
      "end_point": [
        1709,
        1
      ],
      "strings": [
        "\"msbdf_apply: t=%.5e, ord=%d, h=%.5e, y:\"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- first step was REJECTED, msbdf_reset called\\n\"",
        "\"-- previous step was REJECTED, state restored\\n\"",
        "\"-- max_failcount reached, msbdf_reset called\\n\"",
        "\"-- previous step was ACCEPTED, state saved\\n\"",
        "\"-- ord=%d, ni=%ld, ordwait=%d\\n\"",
        "\"-- ordprev: \"",
        "\"%d \"",
        "\"\\n\"",
        "\"-- errlev: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- check_no_order_decrease %d, check_step_size_decrease %d\\n\"",
        "\"-- stability enhancement decreased order to %d\\n\"",
        "\"-- order change %d\\n\"",
        "\"msbdf_apply too large order change\"",
        "\"-- order increase detected, Nordsieck modified\\n\"",
        "\"-- order decrease detected, Nordsieck modified\\n\"",
        "\"-- h != hprev, Nordsieck modified\\n\"",
        "\"-- predicted y: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"---- l: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- corrected y: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- FAIL at user function evaluation\\n\"",
        "\"-- yerr: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- hprev: \"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- nJ=%d, nM=%d\\n\""
      ]
    },
    "msbdf_set_driver": {
      "start_point": [
        1711,
        0
      ],
      "end_point": [
        1719,
        1
      ],
      "strings": []
    },
    "msbdf_reset": {
      "start_point": [
        1721,
        0
      ],
      "end_point": [
        1757,
        1
      ],
      "strings": [
        "\"-- msbdf_reset called\\n\""
      ]
    },
    "msbdf_order": {
      "start_point": [
        1759,
        0
      ],
      "end_point": [
        1765,
        1
      ],
      "strings": []
    },
    "msbdf_free": {
      "start_point": [
        1767,
        0
      ],
      "end_point": [
        1793,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/odeiv_util.h": {},
  "gsl/gsl-2.5/ode-initval2/rk1imp.c": {
    "rk1imp_alloc": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk1imp_state\"",
        "\"failed to allocate space for A\"",
        "\"failed to allocate space for y_onestep\"",
        "\"failed to allocate space for y_onestep\"",
        "\"failed to allocate space for ytmp\"",
        "\"failed to allocate space for y_save\"",
        "\"failed to allocate space for YZ\"",
        "\"failed to allocate space for fYZ\"",
        "\"failed to allocate space for dfdt\"",
        "\"failed to allocate space for dfdy\"",
        "\"failed to allocate space for esol\"",
        "\"failed to allocate space for errlev\""
      ]
    },
    "rk1imp_apply": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        432,
        1
      ],
      "strings": [
        "\"no non-linear equation solver speficied\""
      ]
    },
    "rk1imp_set_driver": {
      "start_point": [
        434,
        0
      ],
      "end_point": [
        442,
        1
      ],
      "strings": []
    },
    "rk1imp_reset": {
      "start_point": [
        444,
        0
      ],
      "end_point": [
        457,
        1
      ],
      "strings": []
    },
    "rk1imp_order": {
      "start_point": [
        459,
        0
      ],
      "end_point": [
        465,
        1
      ],
      "strings": []
    },
    "rk1imp_free": {
      "start_point": [
        467,
        0
      ],
      "end_point": [
        484,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/rk2.c": {
    "rk2_alloc": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk2_state\"",
        "\"failed to allocate space for k1\"",
        "\"failed to allocate space for k2\"",
        "\"failed to allocate space for k3\"",
        "\"failed to allocate space for ytmp\""
      ]
    },
    "rk2_apply": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    },
    "rk2_reset": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    },
    "rk2_order": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "rk2_free": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/rk2imp.c": {
    "rk2imp_alloc": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk2imp_state\"",
        "\"failed to allocate space for A\"",
        "\"failed to allocate space for y_onestep\"",
        "\"failed to allocate space for y_onestep\"",
        "\"failed to allocate space for ytmp\"",
        "\"failed to allocate space for y_save\"",
        "\"failed to allocate space for YZ\"",
        "\"failed to allocate space for fYZ\"",
        "\"failed to allocate space for dfdt\"",
        "\"failed to allocate space for dfdy\"",
        "\"failed to allocate space for esol\"",
        "\"failed to allocate space for errlev\""
      ]
    },
    "rk2imp_apply": {
      "start_point": [
        221,
        0
      ],
      "end_point": [
        552,
        1
      ],
      "strings": [
        "\"rk2imp_apply: t=%.5e, h=%.5e, y:\"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"no non-linear equation solver speficied\"",
        "\"-- evaluate jacobian\\n\"",
        "\"-- FAIL at jacobian function evaluation\\n\"",
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g\\n\"",
        "\"-- modnewton1_init IhAJ:\\n\"",
        "\"(%3lu,%3lu)[%lu,%lu]: %22.18g\\n\"",
        "\"-- modnewton1_init p:\\n\"",
        "\"(%3lu)[%lu]: %22.18g\\n\"",
        "\"-- modnewton1_solve s=%d\\n\"",
        "\"YZ:\"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"fYZ:\"",
        "\"%.5e \"",
        "\"\\n\"",
        "\"-- error estimates: \"",
        "\"%.5e \"",
        "\"\\n\""
      ]
    },
    "rk2imp_set_driver": {
      "start_point": [
        554,
        0
      ],
      "end_point": [
        562,
        1
      ],
      "strings": []
    },
    "rk2imp_reset": {
      "start_point": [
        564,
        0
      ],
      "end_point": [
        577,
        1
      ],
      "strings": []
    },
    "rk2imp_order": {
      "start_point": [
        579,
        0
      ],
      "end_point": [
        585,
        1
      ],
      "strings": []
    },
    "rk2imp_free": {
      "start_point": [
        587,
        0
      ],
      "end_point": [
        604,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/rk4.c": {
    "rk4_alloc": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk4_state\"",
        "\"failed to allocate space for k\"",
        "\"failed to allocate space for k1\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for ytmp\"",
        "\"failed to allocate space for ytmp\""
      ]
    },
    "rk4_step": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    },
    "rk4_apply": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        312,
        1
      ],
      "strings": []
    },
    "rk4_reset": {
      "start_point": [
        314,
        0
      ],
      "end_point": [
        326,
        1
      ],
      "strings": []
    },
    "rk4_order": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "rk4_free": {
      "start_point": [
        336,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/rk4imp.c": {
    "rk4imp_alloc": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk4imp_state\"",
        "\"failed to allocate space for A\"",
        "\"failed to allocate space for y_onestep\"",
        "\"failed to allocate space for y_onestep\"",
        "\"failed to allocate space for ytmp\"",
        "\"failed to allocate space for y_save\"",
        "\"failed to allocate space for YZ\"",
        "\"failed to allocate space for fYZ\"",
        "\"failed to allocate space for dfdt\"",
        "\"failed to allocate space for dfdy\"",
        "\"failed to allocate space for esol\"",
        "\"failed to allocate space for errlev\""
      ]
    },
    "rk4imp_apply": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        465,
        1
      ],
      "strings": [
        "\"no non-linear equation solver speficied\""
      ]
    },
    "rk4imp_set_driver": {
      "start_point": [
        467,
        0
      ],
      "end_point": [
        475,
        1
      ],
      "strings": []
    },
    "rk4imp_reset": {
      "start_point": [
        477,
        0
      ],
      "end_point": [
        490,
        1
      ],
      "strings": []
    },
    "rk4imp_order": {
      "start_point": [
        492,
        0
      ],
      "end_point": [
        498,
        1
      ],
      "strings": []
    },
    "rk4imp_free": {
      "start_point": [
        500,
        0
      ],
      "end_point": [
        517,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/rk8pd.c": {
    "rk8pd_alloc": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": [
        "\"failed to allocate space for rk8pd_state\"",
        "\"failed to allocate space for ytmp\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for k's\""
      ]
    },
    "rk8pd_apply": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        491,
        1
      ],
      "strings": []
    },
    "rk8pd_reset": {
      "start_point": [
        493,
        0
      ],
      "end_point": [
        509,
        1
      ],
      "strings": []
    },
    "rk8pd_order": {
      "start_point": [
        511,
        0
      ],
      "end_point": [
        517,
        1
      ],
      "strings": []
    },
    "rk8pd_free": {
      "start_point": [
        519,
        0
      ],
      "end_point": [
        532,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/rkck.c": {
    "rkck_alloc": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": [
        "\"failed to allocate space for rkck_state\"",
        "\"failed to allocate space for k1\"",
        "\"failed to allocate space for k2\"",
        "\"failed to allocate space for k3\"",
        "\"failed to allocate space for k4\"",
        "\"failed to allocate space for k5\"",
        "\"failed to allocate space for k6\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for ytmp\""
      ]
    },
    "rkck_apply": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        321,
        1
      ],
      "strings": []
    },
    "rkck_reset": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        339,
        1
      ],
      "strings": []
    },
    "rkck_order": {
      "start_point": [
        341,
        0
      ],
      "end_point": [
        347,
        1
      ],
      "strings": []
    },
    "rkck_free": {
      "start_point": [
        349,
        0
      ],
      "end_point": [
        363,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/rkf45.c": {
    "rkf45_alloc": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"failed to allocate space for rkf45_state\"",
        "\"failed to allocate space for k1\"",
        "\"failed to allocate space for k2\"",
        "\"failed to allocate space for k3\"",
        "\"failed to allocate space for k4\"",
        "\"failed to allocate space for k5\"",
        "\"failed to allocate space for k6\"",
        "\"failed to allocate space for y0\"",
        "\"failed to allocate space for ytmp\""
      ]
    },
    "rkf45_apply": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": []
    },
    "rkf45_reset": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        343,
        1
      ],
      "strings": []
    },
    "rkf45_order": {
      "start_point": [
        345,
        0
      ],
      "end_point": [
        351,
        1
      ],
      "strings": []
    },
    "rkf45_free": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        367,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/rksubs.c": {
    "rksubs": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/step.c": {
    "gsl_odeiv2_step_alloc": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"failed to allocate space for ode struct\"",
        "\"failed to allocate space for ode state\""
      ]
    },
    "gsl_odeiv2_step_name": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_step_order": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_step_apply": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_step_reset": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_step_free": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "gsl_odeiv2_step_set_driver": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"driver pointer is null\""
      ]
    }
  },
  "gsl/gsl-2.5/ode-initval2/step_utils.c": {
    "stepper_set_driver_null": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/ode-initval2/test.c": {
    "rhs_linear": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "jac_linear": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "rhs_exp": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "jac_exp": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "rhs_sin": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    },
    "jac_sin": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "rhs_xsin": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        191,
        1
      ],
      "strings": []
    },
    "jac_xsin": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "rhs_stiff": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        257,
        1
      ],
      "strings": []
    },
    "jac_stiff": {
      "start_point": [
        259,
        0
      ],
      "end_point": [
        275,
        1
      ],
      "strings": []
    },
    "rhs_cos": {
      "start_point": [
        286,
        0
      ],
      "end_point": [
        291,
        1
      ],
      "strings": []
    },
    "jac_cos": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": []
    },
    "rhs_broken": {
      "start_point": [
        315,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": []
    },
    "jac_broken": {
      "start_point": [
        332,
        0
      ],
      "end_point": [
        349,
        1
      ],
      "strings": []
    },
    "rhs_sin_ub": {
      "start_point": [
        360,
        0
      ],
      "end_point": [
        375,
        1
      ],
      "strings": []
    },
    "jac_sin_ub": {
      "start_point": [
        377,
        0
      ],
      "end_point": [
        398,
        1
      ],
      "strings": []
    },
    "rhs_br": {
      "start_point": [
        409,
        0
      ],
      "end_point": [
        414,
        1
      ],
      "strings": []
    },
    "jac_br": {
      "start_point": [
        416,
        0
      ],
      "end_point": [
        423,
        1
      ],
      "strings": []
    },
    "rhs_stepfn": {
      "start_point": [
        438,
        0
      ],
      "end_point": [
        447,
        1
      ],
      "strings": []
    },
    "jac_stepfn": {
      "start_point": [
        449,
        0
      ],
      "end_point": [
        457,
        1
      ],
      "strings": []
    },
    "rhs_stepfn2": {
      "start_point": [
        468,
        0
      ],
      "end_point": [
        477,
        1
      ],
      "strings": []
    },
    "rhs_vl": {
      "start_point": [
        491,
        0
      ],
      "end_point": [
        506,
        1
      ],
      "strings": []
    },
    "jac_vl": {
      "start_point": [
        508,
        0
      ],
      "end_point": [
        528,
        1
      ],
      "strings": []
    },
    "rhs_vanderpol": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        554,
        1
      ],
      "strings": []
    },
    "jac_vanderpol": {
      "start_point": [
        556,
        0
      ],
      "end_point": [
        574,
        1
      ],
      "strings": []
    },
    "rhs_stifftrig": {
      "start_point": [
        587,
        0
      ],
      "end_point": [
        596,
        1
      ],
      "strings": []
    },
    "jac_stifftrig": {
      "start_point": [
        598,
        0
      ],
      "end_point": [
        610,
        1
      ],
      "strings": []
    },
    "rhs_oregonator": {
      "start_point": [
        623,
        0
      ],
      "end_point": [
        638,
        1
      ],
      "strings": []
    },
    "jac_oregonator": {
      "start_point": [
        640,
        0
      ],
      "end_point": [
        668,
        1
      ],
      "strings": []
    },
    "rhs_e5": {
      "start_point": [
        687,
        0
      ],
      "end_point": [
        704,
        1
      ],
      "strings": []
    },
    "jac_e5": {
      "start_point": [
        706,
        0
      ],
      "end_point": [
        743,
        1
      ],
      "strings": []
    },
    "rhs_robertson": {
      "start_point": [
        761,
        0
      ],
      "end_point": [
        776,
        1
      ],
      "strings": []
    },
    "jac_robertson": {
      "start_point": [
        778,
        0
      ],
      "end_point": [
        806,
        1
      ],
      "strings": []
    },
    "rhs_brusselator": {
      "start_point": [
        821,
        0
      ],
      "end_point": [
        834,
        1
      ],
      "strings": []
    },
    "jac_brusselator": {
      "start_point": [
        836,
        0
      ],
      "end_point": [
        855,
        1
      ],
      "strings": []
    },
    "rhs_ringmod": {
      "start_point": [
        873,
        0
      ],
      "end_point": [
        926,
        1
      ],
      "strings": []
    },
    "jac_ringmod": {
      "start_point": [
        928,
        0
      ],
      "end_point": [
        1032,
        1
      ],
      "strings": []
    },
    "test_odeiv_stepper": {
      "start_point": [
        1046,
        0
      ],
      "end_point": [
        1090,
        1
      ],
      "strings": [
        "\"test_odeiv_stepper: %s step_apply returned %d\"",
        "\"%s %s step(%d)\""
      ]
    },
    "test_stepper": {
      "start_point": [
        1092,
        0
      ],
      "end_point": [
        1146,
        1
      ],
      "strings": [
        "\"classic_stiff\"",
        "\"linear\"",
        "\"exponential\"",
        "\"cosine-sine\""
      ]
    },
    "test_evolve_system": {
      "start_point": [
        1148,
        0
      ],
      "end_point": [
        1240,
        1
      ],
      "strings": [
        "\"test_evolve_system at: %.5e %.5e %.5e %d\\n\"",
        "\"%s t must be restored on failure\"",
        "\"%s y must be restored on failure\"",
        "\"%s evolve_apply returned %d\"",
        "\"%s evolve_apply reached maxiter\"",
        "\"%s %s [%g,%g], %d steps (nfe %d, nje %d) completed\"",
        "\"%s %s evolve(%d)\""
      ]
    },
    "sys_driver": {
      "start_point": [
        1242,
        0
      ],
      "end_point": [
        1301,
        1
      ],
      "strings": [
        "\"sys_driver at: %.5e %.5e %.5e %d\\n\"",
        "\"sys_driver: %s evolve_apply returned %d\"",
        "\"sys_driver: %s evolve_apply reached maxiter at t=%g\"",
        "\"%s %s [%g,%g], %d steps (nfe %d, nje %d) completed\""
      ]
    },
    "test_evolve_linear": {
      "start_point": [
        1303,
        0
      ],
      "end_point": [
        1315,
        1
      ],
      "strings": [
        "\"linear[0,4]\""
      ]
    },
    "test_evolve_exp": {
      "start_point": [
        1317,
        0
      ],
      "end_point": [
        1329,
        1
      ],
      "strings": [
        "\"exp[0,2]\""
      ]
    },
    "test_evolve_sin": {
      "start_point": [
        1331,
        0
      ],
      "end_point": [
        1345,
        1
      ],
      "strings": [
        "\"sine[0,2]\""
      ]
    },
    "test_evolve_xsin": {
      "start_point": [
        1347,
        0
      ],
      "end_point": [
        1363,
        1
      ],
      "strings": [
        "\"sine[0,2] w/errors\""
      ]
    },
    "test_evolve_stiff1": {
      "start_point": [
        1365,
        0
      ],
      "end_point": [
        1384,
        1
      ],
      "strings": [
        "\"stiff[0,1]\""
      ]
    },
    "test_evolve_stiff5": {
      "start_point": [
        1386,
        0
      ],
      "end_point": [
        1405,
        1
      ],
      "strings": [
        "\"stiff[0,5]\""
      ]
    },
    "test_evolve_negative_h": {
      "start_point": [
        1407,
        0
      ],
      "end_point": [
        1445,
        1
      ],
      "strings": [
        "\"%s evolve_apply returned %d for negative h\"",
        "\"%s evolution with negative h\""
      ]
    },
    "test_broken": {
      "start_point": [
        1447,
        0
      ],
      "end_point": [
        1502,
        1
      ],
      "strings": [
        "\"%s test_broken: step size at break point\"",
        "\"%s test_broken: point of break\"",
        "\"%s test_broken: evolve return value %d\"",
        "\"%s test_broken: evolve return value %d\""
      ]
    },
    "test_stepsize_fail": {
      "start_point": [
        1504,
        0
      ],
      "end_point": [
        1555,
        1
      ],
      "strings": [
        "\"%s test_stepsize_fail: step size at break point\"",
        "\"%s test_stepsize_fail: point of break\"",
        "\"%s test_stepsize_fail: evolve return value\""
      ]
    },
    "test_user_break": {
      "start_point": [
        1557,
        0
      ],
      "end_point": [
        1577,
        1
      ],
      "strings": [
        "\"%s test_user_break returned %d\""
      ]
    },
    "test_stepfn": {
      "start_point": [
        1579,
        0
      ],
      "end_point": [
        1623,
        1
      ],
      "strings": [
        "\"test_stepfn at: i=%d status=%d t=%g h=%g y=%g\\n\"",
        "\"evolve step function, return value (stepfn/%s): %d\"",
        "\"evolve step function, t (stepfn/%s)\"",
        "\"evolve step function, y (stepfn/%s)\""
      ]
    },
    "test_stepfn2": {
      "start_point": [
        1625,
        0
      ],
      "end_point": [
        1670,
        1
      ],
      "strings": [
        "\"test_stepfn2 at: i=%d status=%d t=%g h=%g y=%g\\n\"",
        "\"FAIL: evolve big step function, (stepfn2/%s) reached maxiter\\n\"",
        "\"evolve big step function, t (stepfn2/%s)\"",
        "\"evolve big step function, y (stepfn2/%s)\""
      ]
    },
    "test_nonstiff_problems": {
      "start_point": [
        1672,
        0
      ],
      "end_point": [
        1801,
        1
      ],
      "strings": [
        "\"volterra-lotka\"",
        "\"vanderpol\"",
        "\"stifftrig\"",
        "\"brusselator\"",
        "\"test_nonstiff_problems: initialization error\\n\"",
        "\"test_nonstiff_problems %s %s\"",
        "\"%s/%s %s [%d]\""
      ]
    },
    "test_stiff_problems": {
      "start_point": [
        1803,
        0
      ],
      "end_point": [
        1916,
        1
      ],
      "strings": [
        "\"oregonator\"",
        "\"e5\"",
        "\"robertson\"",
        "\"test_stiff_problems: initialization error\\n\"",
        "\"test_stiff_problems %s %s\"",
        "\"%s/%s %s [%d]\""
      ]
    },
    "test_extreme_problems": {
      "start_point": [
        1918,
        0
      ],
      "end_point": [
        2034,
        1
      ],
      "strings": [
        "\"e5_bigt\"",
        "\"robertson_bigt\"",
        "\"ringmod\"",
        "\"test_extreme_problems: initialization error\\n\"",
        "\"start=%.5e, initstepsize=%.5e\\n\"",
        "\"test_extreme_problems %s %s\"",
        "\"%s/%s %s [%d]\""
      ]
    },
    "test_driver": {
      "start_point": [
        2036,
        0
      ],
      "end_point": [
        2223,
        1
      ],
      "strings": [
        "\"%s test_driver apply returned %d\"",
        "\"%s test_driver y0\"",
        "\"%s test_driver y1\"",
        "\"%s test_driver steps %d < minsteps %d \\n\"",
        "\"%s test_driver max step length test\"",
        "\"%s test_driver apply returned %d\"",
        "\"%s test_driver y0\"",
        "\"%s test_driver y1\"",
        "\"%s test_driver steps %d, expected %d\"",
        "\"%s test_driver max steps test\"",
        "\"%s test_driver min step test returned %d\"",
        "\"%s test_driver min step test\"",
        "\"%s test_driver negative dir diff %e, expected less than %e\"",
        "\"%s test_driver negative dir val %e, expected less than %e\"",
        "\"%s test_driver negative direction test\"",
        "\"%s test_driver apply_fixed_step returned %d\"",
        "\"%s test_driver apply_fixed_step t %e, expected less than %e\"",
        "\"%s test_driver apply_fixed_step val %e, expected less than %e\"",
        "\"%s test_driver apply_fixed_step test\""
      ]
    },
    "benchmark_precision": {
      "start_point": [
        2225,
        0
      ],
      "end_point": [
        2418,
        1
      ],
      "strings": [
        "\"rhs_func_sin\"",
        "\"rhs_func_exp\"",
        "\"rhs_func_stiff\"",
        "\"benchmark_precision: initialization error\\n\"",
        "\"benchmark_precision: diff = (y_true - y) / y_true with %s\\n          epsrel:   \"",
        "\"%12.0e \"",
        "\"\\n\"",
        "\"%8s diff[%d]:   \"",
        "\"%12.5e \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"benchmark_precision: number of function/jacobian evaluations with %s\\n          epsrel:   \"",
        "\"%12.0e          \"",
        "\"\\n\"",
        "\"%8s nfe/nje: \"",
        "\"%9d %9d | \"",
        "\"\\n\"",
        "\"\\n\""
      ]
    },
    "test_evolve_temp": {
      "start_point": [
        2420,
        0
      ],
      "end_point": [
        2435,
        1
      ],
      "strings": [
        "\"temp\""
      ]
    },
    "main": {
      "start_point": [
        2441,
        0
      ],
      "end_point": [
        2537,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/permutation/canonical.c": {
    "gsl_permutation_linear_to_canonical": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": [
        "\"size of q does not match size of p\""
      ]
    },
    "gsl_permutation_canonical_to_linear": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": [
        "\"size of q does not match size of p\""
      ]
    },
    "gsl_permutation_inversions": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "gsl_permutation_linear_cycles": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "gsl_permutation_canonical_cycles": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/permutation/file.c": {
    "gsl_permutation_fread": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": [
        "\"fread failed\""
      ]
    },
    "gsl_permutation_fwrite": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": [
        "\"fwrite failed\""
      ]
    },
    "gsl_permutation_fprintf": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": [
        "\"fprintf failed\""
      ]
    },
    "gsl_permutation_fscanf": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"fscanf failed\""
      ]
    }
  },
  "gsl/gsl-2.5/permutation/gsl_permutation.h": {
    "struct": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "gsl_permutation_get": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/permutation/gsl_permute.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_char.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_complex_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_complex_float.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_complex_long_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_float.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_int.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_long.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_long_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_char.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_complex_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_complex_float.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_complex_long_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_float.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_int.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_long.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_long_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_short.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_uchar.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_uint.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_ulong.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_matrix_ushort.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_short.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_uchar.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_uint.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_ulong.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_ushort.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_char.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_complex_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_complex_float.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_complex_long_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_float.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_int.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_long.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_long_double.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_short.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_uchar.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_uint.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_ulong.h": {},
  "gsl/gsl-2.5/permutation/gsl_permute_vector_ushort.h": {},
  "gsl/gsl-2.5/permutation/init.c": {
    "gsl_permutation_alloc": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"permutation length n must be positive integer\"",
        "\"failed to allocate space for permutation struct\"",
        "\"failed to allocate space for permutation data\""
      ]
    },
    "gsl_permutation_calloc": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "gsl_permutation_init": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "gsl_permutation_free": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/permutation/inline.c": {},
  "gsl/gsl-2.5/permutation/permutation.c": {
    "gsl_permutation_size": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": []
    },
    "gsl_permutation_data": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "gsl_permutation_swap": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": [
        "\"first index is out of range\"",
        "\"second index is out of range\""
      ]
    },
    "gsl_permutation_valid": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": [
        "\"permutation index outside range\"",
        "\"duplicate permutation index\""
      ]
    },
    "gsl_permutation_reverse": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "gsl_permutation_inverse": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": [
        "\"permutation lengths are not equal\""
      ]
    },
    "gsl_permutation_next": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    },
    "gsl_permutation_prev": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    },
    "gsl_permutation_mul": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": [
        "\"size of result does not match size of pa\"",
        "\"size of result does not match size of pb\""
      ]
    },
    "gsl_permutation_memcpy": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        275,
        1
      ],
      "strings": [
        "\"permutation lengths are not equal\""
      ]
    }
  },
  "gsl/gsl-2.5/permutation/permute.c": {},
  "gsl/gsl-2.5/permutation/permute_source.c": {
    "TYPE": [
      {
        "start_point": [
          33,
          0
        ],
        "end_point": [
          82,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          138,
          0
        ],
        "end_point": [
          149,
          1
        ],
        "strings": [
          "\"vector and permutation must be the same length\""
        ]
      },
      {
        "start_point": [
          164,
          0
        ],
        "end_point": [
          184,
          1
        ],
        "strings": [
          "\"matrix columns and permutation must be the same length\""
        ]
      }
    ],
    "FUNCTION": [
      {
        "start_point": [
          84,
          0
        ],
        "end_point": [
          135,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          151,
          0
        ],
        "end_point": [
          162,
          1
        ],
        "strings": [
          "\"vector and permutation must be the same length\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/permutation/test.c": {
    "main": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        298,
        1
      ],
      "strings": [
        "\"gsl_permutation_next, 5-th order permutation, 120 steps\"",
        "\"gsl_permutation_prev, 5-th order permutation, 120 steps\"",
        "\"gsl_permutation_mul, all 5-th order combinations\"",
        "\"gsl_permutation canonical conversion, 5-th order permutation, 120 steps\"",
        "\"gsl_permutation_inversions, 5-th order permutation, 120 steps\""
      ]
    }
  },
  "gsl/gsl-2.5/poly/balance.c": {
    "balance_companion_matrix": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/poly/companion.c": {
    "set_companion_matrix": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/poly/dd.c": {
    "gsl_poly_dd_init": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "gsl_poly_dd_taylor": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "gsl_poly_dd_hermite_init": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/poly/deriv.c": {
    "gsl_poly_eval_derivs": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/poly/eval.c": {},
  "gsl/gsl-2.5/poly/gsl_poly.h": {
    "gsl_poly_eval": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "gsl_poly_complex_eval": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "gsl_complex_poly_complex_eval": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "gsl_poly_dd_eval": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/poly/qr.c": {
    "qr_companion": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/poly/solve_cubic.c": {
    "gsl_poly_solve_cubic": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/poly/solve_quadratic.c": {
    "gsl_poly_solve_quadratic": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/poly/test.c": {
    "cmp_cplx": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        679,
        1
      ],
      "strings": [
        "\"gsl_poly_eval({1, 0.5, 0.3}, 0.5)\"",
        "\"gsl_poly_eval({1,-1, 1, -1, 1, -1, 1, -1, 1, -1, 1}, 1.0)\"",
        "\"y.real, gsl_poly_complex_eval ({0.3}, 0.75 + 1.2i)\"",
        "\"y.imag, gsl_poly_complex_eval ({0.3}, 0.75 + 1.2i)\"",
        "\"y.real, gsl_poly_complex_eval ({2.1, -1.34, 0.76, 0.45}, 0.49 + 0.95i)\"",
        "\"y.imag, gsl_poly_complex_eval ({2.1, -1.34, 0.76, 0.45}, 0.49 + 0.95i)\"",
        "\"y.real, gsl_complex_poly_complex_eval ({0.674 - 1.423i}, -1.44 + 9.55i)\"",
        "\"y.imag, gsl_complex_poly_complex_eval ({0.674 - 1.423i}, -1.44 + 9.55i)\"",
        "\"y.real, gsl_complex_poly_complex_eval ({-2.31 + 0.44i, 4.21 - 3.19i, 0.93 + 1.04i, -0.42 + 0.68i}, 0.49 + 0.95i)\"",
        "\"y.imag, gsl_complex_poly_complex_eval ({-2.31 + 0.44i, 4.21 - 3.19i, 0.93 + 1.04i, -0.42 + 0.68i}, 0.49 + 0.95i)\"",
        "\"gsl_poly_solve_quadratic, no roots, (2x - 5)^2 = -1\"",
        "\"gsl_poly_solve_quadratic, one root, (2x - 5)^2 = 0\"",
        "\"x0, (2x - 5)^2 = 0\"",
        "\"x1, (2x - 5)^2 = 0\"",
        "\"x0 == x1, (2x - 5)^2 = 0\"",
        "\"gsl_poly_solve_quadratic, two roots, (2x - 5)^2 = 4\"",
        "\"x0, (2x - 5)^2 = 4\"",
        "\"x1, (2x - 5)^2 = 4\"",
        "\"gsl_poly_solve_quadratic, two roots, x(4x + 7) = 0\"",
        "\"x0, x(4x + 7) = 0\"",
        "\"x1, x(4x + 7) = 0\"",
        "\"gsl_poly_solve_quadratic, two roots b = 0, 5 x^2 = 20\"",
        "\"x0, 5 x^2 = 20\"",
        "\"x1, 5 x^2 = 20\"",
        "\"gsl_poly_solve_quadratic, one root (linear) 3 x - 21 = 0\"",
        "\"x0, 3x - 21 = 0\"",
        "\"gsl_poly_solve_quadratic, no roots 1 = 0\"",
        "\"gsl_poly_solve_cubic, one root, x^3 = 27\"",
        "\"x0, x^3 = 27\"",
        "\"gsl_poly_solve_cubic, three roots, (x-17)^3=0\"",
        "\"x0, (x-17)^3=0\"",
        "\"x1, (x-17)^3=0\"",
        "\"x2, (x-17)^3=0\"",
        "\"gsl_poly_solve_cubic, three roots, (x-17)(x-17)(x-23)=0\"",
        "\"x0, (x-17)(x-17)(x-23)=0\"",
        "\"x1, (x-17)(x-17)(x-23)=0\"",
        "\"x2, (x-17)(x-17)(x-23)=0\"",
        "\"gsl_poly_solve_cubic, three roots, (x+23)(x-17)(x-17)=0\"",
        "\"x0, (x+23)(x-17)(x-17)=0\"",
        "\"x1, (x+23)(x-17)(x-17)=0\"",
        "\"x2, (x+23)(x-17)(x-17)=0\"",
        "\"gsl_poly_solve_cubic, three roots, (x-17)(x-31)(x-95)=0\"",
        "\"x0, (x-17)(x-31)(x-95)=0\"",
        "\"x1, (x-17)(x-31)(x-95)=0\"",
        "\"x2, (x-17)(x-31)(x-95)=0\"",
        "\"gsl_poly_solve_cubic, three roots, (x+17)(x-31)(x-95)=0\"",
        "\"x0, (x+17)(x-31)(x-95)=0\"",
        "\"x1, (x+17)(x-31)(x-95)=0\"",
        "\"x2, (x+17)(x-31)(x-95)=0\"",
        "\"gsl_poly_complex_solve_quadratic, 2 roots (2x - 5)^2 = -1\"",
        "\"z0.real, (2x - 5)^2 = -1\"",
        "\"z0.imag, (2x - 5)^2 = -1\"",
        "\"z1.real, (2x - 5)^2 = -1\"",
        "\"z1.imag, (2x - 5)^2 = -1\"",
        "\"gsl_poly_complex_solve_quadratic, one root, (2x - 5)^2 = 0\"",
        "\"z0.real, (2x - 5)^2 = 0\"",
        "\"z0.imag (2x - 5)^2 = 0\"",
        "\"z1.real, (2x - 5)^2 = 0\"",
        "\"z1.imag (2x - 5)^2 = 0\"",
        "\"z0.real == z1.real, (2x - 5)^2 = 0\"",
        "\"z0.imag == z1.imag, (2x - 5)^2 = 0\"",
        "\"gsl_poly_complex_solve_quadratic, two roots, (2x - 5)^2 = 4\"",
        "\"z0.real, (2x - 5)^2 = 4\"",
        "\"z0.imag, (2x - 5)^2 = 4\"",
        "\"z1.real, (2x - 5)^2 = 4\"",
        "\"z1.imag, (2x - 5)^2 = 4\"",
        "\"gsl_poly_complex_solve_quadratic, two roots, x(4x + 7) = 0\"",
        "\"z0.real, x(4x + 7) = 0\"",
        "\"z0.imag, x(4x + 7) = 0\"",
        "\"z1.real, x(4x + 7) = 0\"",
        "\"z1.imag, x(4x + 7) = 0\"",
        "\"gsl_poly_complex_solve_quadratic, two roots b = 0, 5 x^2 = 20\"",
        "\"z0.real, 5 x^2 = 20\"",
        "\"z0.imag, 5 x^2 = 20\"",
        "\"z1.real, 5 x^2 = 20\"",
        "\"z1.imag, 5 x^2 = 20\"",
        "\"gsl_poly_complex_solve_quadratic, two roots b = 0, 5 x^2 = -20\"",
        "\"z0.real, 5 x^2 = -20\"",
        "\"z0.imag, 5 x^2 = -20\"",
        "\"z1.real, 5 x^2 = -20\"",
        "\"z1.imag, 5 x^2 = -20\"",
        "\"gsl_poly_complex_solve_quadratic, one root (linear) 3 x - 21 = 0\"",
        "\"z0.real, 3x - 21 = 0\"",
        "\"z0.imag, 3x - 21 = 0\"",
        "\"gsl_poly_complex_solve_quadratic, no roots 1 = 0\"",
        "\"gsl_poly_complex_solve_cubic, three root, x^3 = 27\"",
        "\"z0.real, x^3 = 27\"",
        "\"z0.imag, x^3 = 27\"",
        "\"z1.real, x^3 = 27\"",
        "\"z1.imag, x^3 = 27\"",
        "\"z2.real, x^3 = 27\"",
        "\"z2.imag, x^3 = 27\"",
        "\"gsl_poly_complex_solve_cubic, three root, (x+3)(x^2-4x+13) = 0\"",
        "\"z0.real, (x+3)(x^2+1) = 0\"",
        "\"z0.imag, (x+3)(x^2+1) = 0\"",
        "\"z1.real, (x+3)(x^2+1) = 0\"",
        "\"z1.imag, (x+3)(x^2+1) = 0\"",
        "\"z2.real, (x+3)(x^2+1) = 0\"",
        "\"z2.imag, (x+3)(x^2+1) = 0\"",
        "\"gsl_poly_complex_solve_cubic, three roots, (x-17)^3=0\"",
        "\"z0.real, (x-17)^3=0\"",
        "\"z0.imag, (x-17)^3=0\"",
        "\"z1.real, (x-17)^3=0\"",
        "\"z1.imag, (x-17)^3=0\"",
        "\"z2.real, (x-17)^3=0\"",
        "\"z2.imag, (x-17)^3=0\"",
        "\"gsl_poly_complex_solve_cubic, three roots, (x-17)(x-17)(x-23)=0\"",
        "\"z0.real, (x-17)(x-17)(x-23)=0\"",
        "\"z0.imag, (x-17)(x-17)(x-23)=0\"",
        "\"z1.real, (x-17)(x-17)(x-23)=0\"",
        "\"z1.imag, (x-17)(x-17)(x-23)=0\"",
        "\"z2.real, (x-17)(x-17)(x-23)=0\"",
        "\"z2.imag, (x-17)(x-17)(x-23)=0\"",
        "\"gsl_poly_complex_solve_cubic, three roots, (x+23)(x-17)(x-17)=0\"",
        "\"z0.real, (x+23)(x-17)(x-17)=0\"",
        "\"z0.imag, (x+23)(x-17)(x-17)=0\"",
        "\"z1.real, (x+23)(x-17)(x-17)=0\"",
        "\"z1.imag, (x+23)(x-17)(x-17)=0\"",
        "\"z2.real, (x+23)(x-17)(x-17)=0\"",
        "\"z2.imag, (x+23)(x-17)(x-17)=0\"",
        "\"gsl_poly_complex_solve_cubic, three roots, (x-17)(x-31)(x-95)=0\"",
        "\"z0.real, (x-17)(x-31)(x-95)=0\"",
        "\"z0.imag, (x-17)(x-31)(x-95)=0\"",
        "\"z1.real, (x-17)(x-31)(x-95)=0\"",
        "\"z1.imag, (x-17)(x-31)(x-95)=0\"",
        "\"z2.real, (x-17)(x-31)(x-95)=0\"",
        "\"z2.imag, (x-17)(x-31)(x-95)=0\"",
        "\"gsl_poly_complex_solve, 5th-order Wilkinson polynomial\"",
        "\"z0.real, 5th-order polynomial\"",
        "\"z0.imag, 5th-order polynomial\"",
        "\"z1.real, 5th-order polynomial\"",
        "\"z1.imag, 5th-order polynomial\"",
        "\"z2.real, 5th-order polynomial\"",
        "\"z2.imag, 5th-order polynomial\"",
        "\"z3.real, 5th-order polynomial\"",
        "\"z3.imag, 5th-order polynomial\"",
        "\"z4.real, 5th-order polynomial\"",
        "\"z4.imag, 5th-order polynomial\"",
        "\"gsl_poly_complex_solve, 8th-order polynomial\"",
        "\"z0.real, 8th-order polynomial\"",
        "\"z0.imag, 8th-order polynomial\"",
        "\"z1.real, 8th-order polynomial\"",
        "\"z1.imag, 8th-order polynomial\"",
        "\"z2.real, 8th-order polynomial\"",
        "\"z2.imag, 8th-order polynomial\"",
        "\"z3.real, 8th-order polynomial\"",
        "\"z3.imag, 8th-order polynomial\"",
        "\"z4.real, 8th-order polynomial\"",
        "\"z4.imag, 8th-order polynomial\"",
        "\"z5.real, 8th-order polynomial\"",
        "\"z5.imag, 8th-order polynomial\"",
        "\"z6.real, 8th-order polynomial\"",
        "\"z6.imag, 8th-order polynomial\"",
        "\"z7.real, 8th-order polynomial\"",
        "\"z7.imag, 8th-order polynomial\"",
        "\"gsl_poly_complex_solve, 15th-order polynomial\"",
        "\"z%d.real, 15th-order polynomial\"",
        "\"z%d.imag, 15th-order polynomial\"",
        "\"divided difference dd[%d]\"",
        "\"divided difference y[%d]\"",
        "\"taylor expansion about 1.5 y[%d]\"",
        "\"hermite divided difference dd[%d]\"",
        "\"hermite divided difference y[%d]\"",
        "\"hermite divided difference dy/dx[%d]\"",
        "\"gsl_poly_eval_derivs({+1, -2, +3, -4, +5, -6}, 3.75)\"",
        "\"gsl_poly_eval_derivs({+1, -2, +3, -4, +5, -6} deriv 1, -12.375)\"",
        "\"gsl_poly_eval_derivs({+1, -2, +3, -4, +5, -6} deriv 2, +48.0)\"",
        "\"gsl_poly_eval_derivs({+1, -2, +3, -4, +5, -6} deriv 3, -174.0)\"",
        "\"gsl_poly_eval_derivs({+1, -2, +3, -4, +5, -6} deriv 4, +480.0)\"",
        "\"gsl_poly_eval_derivs({+1, -2, +3, -4, +5, -6} deriv 5, -720.0)\""
      ]
    }
  },
  "gsl/gsl-2.5/poly/zsolve.c": {
    "gsl_poly_complex_solve": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": [
        "\"number of terms must be a positive integer\"",
        "\"cannot solve for only one term\"",
        "\"leading term of polynomial must be non-zero\"",
        "\"size of workspace does not match polynomial\"",
        "\"root solving qr method failed to converge\""
      ]
    }
  },
  "gsl/gsl-2.5/poly/zsolve_cubic.c": {
    "gsl_poly_complex_solve_cubic": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/poly/zsolve_init.c": {
    "gsl_poly_complex_workspace_alloc": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"matrix size n must be positive integer\"",
        "\"failed to allocate space for struct\"",
        "\"failed to allocate space for workspace matrix\""
      ]
    },
    "gsl_poly_complex_workspace_free": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/poly/zsolve_quadratic.c": {
    "gsl_poly_complex_solve_quadratic": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/qrng/gsl_qrng.h": {
    "typedef": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "gsl_qrng_get": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/qrng/halton.c": {
    "halton_state_size": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "halton_init": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "vdcorput": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    },
    "halton_get": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        238,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/qrng/inline.c": {},
  "gsl/gsl-2.5/qrng/niederreiter-2.c": {
    "nied2_state_size": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "poly_multiply": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "calculate_v": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    },
    "calculate_cj": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        296,
        1
      ],
      "strings": []
    },
    "nied2_init": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        312,
        1
      ],
      "strings": []
    },
    "nied2_get": {
      "start_point": [
        315,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/qrng/qrng.c": {
    "gsl_qrng_alloc": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": [
        "\"allocation failed for qrng struct\"",
        "\"allocation failed for qrng state\""
      ]
    },
    "gsl_qrng_init": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "gsl_qrng_memcpy": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": [
        "\"generators must be of the same type\""
      ]
    },
    "gsl_qrng_clone": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": [
        "\"failed to allocate space for rng struct\"",
        "\"failed to allocate space for rng state\""
      ]
    },
    "gsl_qrng_name": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "gsl_qrng_size": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "gsl_qrng_state": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "gsl_qrng_free": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/qrng/reversehalton.c": {
    "reversehalton_state_size": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    },
    "reversehalton_init": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "vdcorput": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": []
    },
    "reversehalton_get": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/qrng/sobol.c": {
    "sobol_state_size": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "sobol_init": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    },
    "sobol_get": {
      "start_point": [
        201,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/qrng/test.c": {
    "test_sobol": {
      "start_point": [
        10,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": [
        "\"Sobol d=2\"",
        "\"Sobol d=3\"",
        "\"Sobol d=3 (reinitialized)\""
      ]
    },
    "test_halton": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"Halton d=1229\"",
        "\"halton(2) k=2 v[0]\"",
        "\"halton(2) k=2 v[1]\"",
        "\"halton(2) k=3 v[0]\"",
        "\"halton(2) k=3 v[1]\"",
        "\"halton(3) k=3 v[0]\"",
        "\"halton(3) k=3 v[1]\"",
        "\"halton(3) k=3 v[2]\"",
        "\"halton(3) k=4 v[0]\"",
        "\"halton(3) k=4 v[1]\"",
        "\"halton(3) k=4 v[2]\"",
        "\"halton(3) reinitialized k=3 v[0]\"",
        "\"halton(3) reinitialized k=3 v[1]\"",
        "\"halton(3) reinitialized k=3 v[2]\"",
        "\"halton(3) reinitialized k=4 v[0]\"",
        "\"halton(3) reinitialized k=4 v[1]\"",
        "\"halton(3) reinitialized k=4 v[2]\""
      ]
    },
    "test_reversehalton": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": [
        "\"reversehalton(2) k=2 v[0]\"",
        "\"reversehalton(2) k=2 v[1]\"",
        "\"reversehalton(2) k=2 v[0]\"",
        "\"reversehalton(2) k=2 v[1]\"",
        "\"reversehalton(3) k=3 v[0]\"",
        "\"reversehalton(3) k=3 v[1]\"",
        "\"reversehalton(3) k=3 v[2]\"",
        "\"reversehalton(3) k=3 v[0]\"",
        "\"reversehalton(3) k=3 v[1]\"",
        "\"reversehalton(3) k=3 v[2]\"",
        "\"reversehalton(3) reinitialized k=3 v[0]\"",
        "\"reversehalton(3) reinitialized k=3 v[1]\"",
        "\"reversehalton(3) reinitialized k=3 v[2]\"",
        "\"reversehalton(3) reinitialized k=3 v[0]\"",
        "\"reversehalton(3) reinitialized k=3 v[1]\"",
        "\"reversehalton(3) reinitialized k=3 v[2]\""
      ]
    },
    "test_nied2": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": [
        "\"Niederreiter d=2\"",
        "\"Niederreiter d=3\"",
        "\"Niederreiter d=3 (reinitialized)\""
      ]
    },
    "main": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        246,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/bernoulli.c": {
    "gsl_ran_bernoulli": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "gsl_ran_bernoulli_pdf": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/beta.c": {
    "gsl_ran_beta": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "gsl_ran_beta_pdf": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/bigauss.c": {
    "gsl_ran_bivariate_gaussian": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "gsl_ran_bivariate_gaussian_pdf": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/binomial.c": {
    "gsl_ran_binomial_knuth": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "gsl_ran_binomial_pdf": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/binomial_tpe.c": {
    "Stirling": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "gsl_ran_binomial_tpe": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "gsl_ran_binomial": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        380,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/cauchy.c": {
    "gsl_ran_cauchy": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "gsl_ran_cauchy_pdf": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/chisq.c": {
    "gsl_ran_chisq": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "gsl_ran_chisq_pdf": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/dirichlet.c": {
    "gsl_ran_dirichlet": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "ran_dirichlet_small": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "gsl_ran_dirichlet_pdf": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "gsl_ran_dirichlet_lnpdf": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/discrete.c": {
    "new_stack": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    },
    "push_stack": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "pop_stack": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"internal error - stack exhausted\""
      ]
    },
    "size_stack": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    },
    "free_stack": {
      "start_point": [
        201,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    },
    "gsl_ran_discrete_preproc": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        351,
        1
      ],
      "strings": [
        "\"number of events must be a positive integer\"",
        "\"probabilities must be non-negative\"",
        "\"Cannot allocate memory for randevent\"",
        "\"failed to build stacks\"",
        "\"s=%2d, A=%2d, F=%.4f\\n\"",
        "\"Smalls stack has not been emptied\""
      ]
    },
    "gsl_ran_discrete": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        376,
        1
      ],
      "strings": []
    },
    "gsl_ran_discrete_free": {
      "start_point": [
        378,
        0
      ],
      "end_point": [
        384,
        1
      ],
      "strings": []
    },
    "gsl_ran_discrete_pdf": {
      "start_point": [
        386,
        0
      ],
      "end_point": [
        405,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/erlang.c": {
    "gsl_ran_erlang": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "gsl_ran_erlang_pdf": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/exponential.c": {
    "gsl_ran_exponential": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "gsl_ran_exponential_pdf": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/exppow.c": {
    "gsl_ran_exppow": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "gsl_ran_exppow_pdf": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/fdist.c": {
    "gsl_ran_fdist": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "gsl_ran_fdist_pdf": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/flat.c": {
    "gsl_ran_flat": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "gsl_ran_flat_pdf": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/gamma.c": {
    "gsl_ran_gamma_knuth": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "gsl_ran_gamma_int": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "gamma_large": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "gamma_frac": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "gsl_ran_gamma_pdf": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    },
    "gsl_ran_gamma_mt": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    },
    "gsl_ran_gamma": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/gauss.c": {
    "gsl_ran_gaussian": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "gsl_ran_gaussian_ratio_method": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "gsl_ran_gaussian_pdf": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    },
    "gsl_ran_ugaussian": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "gsl_ran_ugaussian_ratio_method": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "gsl_ran_ugaussian_pdf": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/gausstail.c": {
    "gsl_ran_gaussian_tail": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "gsl_ran_gaussian_tail_pdf": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "gsl_ran_ugaussian_tail": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "gsl_ran_ugaussian_tail_pdf": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/gausszig.c": {
    "gsl_ran_gaussian_ziggurat": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/geometric.c": {
    "gsl_ran_geometric": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_ran_geometric_pdf": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/gsl_randist.h": {},
  "gsl/gsl-2.5/randist/gumbel.c": {
    "gsl_ran_gumbel1": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "gsl_ran_gumbel1_pdf": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_ran_gumbel2": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "gsl_ran_gumbel2_pdf": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/hyperg.c": {
    "gsl_ran_hypergeometric": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "gsl_ran_hypergeometric_pdf": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/landau.c": {
    "gsl_ran_landau_pdf": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": []
    },
    "gsl_ran_landau_dislan": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        312,
        1
      ],
      "strings": []
    },
    "gsl_ran_landau": {
      "start_point": [
        315,
        0
      ],
      "end_point": [
        563,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/laplace.c": {
    "gsl_ran_laplace": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_ran_laplace_pdf": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/levy.c": {
    "gsl_ran_levy": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "gsl_ran_levy_skew": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/logarithmic.c": {
    "gsl_ran_logarithmic": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "gsl_ran_logarithmic_pdf": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/logistic.c": {
    "gsl_ran_logistic": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "gsl_ran_logistic_pdf": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/lognormal.c": {
    "gsl_ran_lognormal": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "gsl_ran_lognormal_pdf": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/multinomial.c": {
    "gsl_ran_multinomial": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "gsl_ran_multinomial_pdf": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "gsl_ran_multinomial_lnpdf": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/mvgauss.c": {
    "gsl_ran_multivariate_gaussian": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": [
        "\"requires square matrix\"",
        "\"incompatible dimension of mean vector with variance-covariance matrix\"",
        "\"incompatible dimension of result vector\""
      ]
    },
    "gsl_ran_multivariate_gaussian_log_pdf": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": [
        "\"requires square matrix\"",
        "\"incompatible dimension of mean vector with variance-covariance matrix\"",
        "\"incompatible dimension of quantile vector\"",
        "\"incompatible dimension of work vector\""
      ]
    },
    "gsl_ran_multivariate_gaussian_pdf": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "gsl_ran_multivariate_gaussian_mean": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"mu_hat vector has wrong size\""
      ]
    },
    "gsl_ran_multivariate_gaussian_vcov": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": [
        "\"sigma_hat must be a square matrix\"",
        "\"sigma_hat does not match X matrix dimensions\""
      ]
    },
    "multivar_vcov": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/nbinomial.c": {
    "gsl_ran_negative_binomial": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "gsl_ran_negative_binomial_pdf": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/pareto.c": {
    "gsl_ran_pareto": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    },
    "gsl_ran_pareto_pdf": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/pascal.c": {
    "gsl_ran_pascal": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "gsl_ran_pascal_pdf": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/poisson.c": {
    "gsl_ran_poisson": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "gsl_ran_poisson_array": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "gsl_ran_poisson_pdf": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/rayleigh.c": {
    "gsl_ran_rayleigh": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "gsl_ran_rayleigh_pdf": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "gsl_ran_rayleigh_tail": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "gsl_ran_rayleigh_tail_pdf": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/shuffle.c": {
    "swap": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "copy": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "gsl_ran_shuffle": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "gsl_ran_choose": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"k is greater than n, cannot sample more than n items\""
      ]
    },
    "gsl_ran_sample": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/sphere.c": {
    "gsl_ran_dir_2d": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_ran_dir_2d_trig_method": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "gsl_ran_dir_3d": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "gsl_ran_dir_nd": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/tdist.c": {
    "gsl_ran_tdist": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "gsl_ran_tdist_pdf": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/test.c": {
    "main": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        420,
        1
      ],
      "strings": []
    },
    "test_shuffle": {
      "start_point": [
        422,
        0
      ],
      "end_point": [
        467,
        1
      ],
      "strings": [
        "\"gsl_ran_shuffle %d,%d (%g observed vs %g expected)\"",
        "\"gsl_ran_shuffle on {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}\""
      ]
    },
    "test_choose": {
      "start_point": [
        469,
        0
      ],
      "end_point": [
        509,
        1
      ],
      "strings": [
        "\"gsl_ran_choose %d (%g observed vs %g expected)\"",
        "\"gsl_ran_choose (3) on {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}\""
      ]
    },
    "testMoments": {
      "start_point": [
        514,
        0
      ],
      "end_point": [
        536,
        1
      ],
      "strings": [
        "\"%s [%g,%g] (%g observed vs %g expected)\""
      ]
    },
    "wrapper_function": {
      "start_point": [
        546,
        0
      ],
      "end_point": [
        557,
        1
      ],
      "strings": []
    },
    "integrate": {
      "start_point": [
        559,
        0
      ],
      "end_point": [
        573,
        1
      ],
      "strings": []
    },
    "testPDF": {
      "start_point": [
        576,
        0
      ],
      "end_point": [
        687,
        1
      ],
      "strings": [
        "\"%s, finite mean, observed %g\"",
        "\"%s [%g,%g) (%g/%d=%g observed vs %g expected)\"",
        "\"%s, sampling against pdf over range [%g,%g) \""
      ]
    },
    "testDiscretePDF": {
      "start_point": [
        689,
        0
      ],
      "end_point": [
        731,
        1
      ],
      "strings": [
        "\"%s i=%d (%g observed vs %g expected)\"",
        "\"%s, sampling against pdf over range [%d,%d) \""
      ]
    },
    "test_beta": {
      "start_point": [
        735,
        0
      ],
      "end_point": [
        739,
        1
      ],
      "strings": []
    },
    "test_beta_pdf": {
      "start_point": [
        741,
        0
      ],
      "end_point": [
        745,
        1
      ],
      "strings": []
    },
    "test_bernoulli": {
      "start_point": [
        747,
        0
      ],
      "end_point": [
        751,
        1
      ],
      "strings": []
    },
    "test_bernoulli_pdf": {
      "start_point": [
        753,
        0
      ],
      "end_point": [
        757,
        1
      ],
      "strings": []
    },
    "test_binomial": {
      "start_point": [
        759,
        0
      ],
      "end_point": [
        763,
        1
      ],
      "strings": []
    },
    "test_binomial_pdf": {
      "start_point": [
        765,
        0
      ],
      "end_point": [
        769,
        1
      ],
      "strings": []
    },
    "test_binomial0": {
      "start_point": [
        771,
        0
      ],
      "end_point": [
        775,
        1
      ],
      "strings": []
    },
    "test_binomial0_pdf": {
      "start_point": [
        777,
        0
      ],
      "end_point": [
        781,
        1
      ],
      "strings": []
    },
    "test_binomial1": {
      "start_point": [
        783,
        0
      ],
      "end_point": [
        787,
        1
      ],
      "strings": []
    },
    "test_binomial1_pdf": {
      "start_point": [
        789,
        0
      ],
      "end_point": [
        793,
        1
      ],
      "strings": []
    },
    "test_binomial_knuth": {
      "start_point": [
        795,
        0
      ],
      "end_point": [
        799,
        1
      ],
      "strings": []
    },
    "test_binomial_knuth_pdf": {
      "start_point": [
        801,
        0
      ],
      "end_point": [
        805,
        1
      ],
      "strings": []
    },
    "test_binomial_large": {
      "start_point": [
        808,
        0
      ],
      "end_point": [
        812,
        1
      ],
      "strings": []
    },
    "test_binomial_large_pdf": {
      "start_point": [
        814,
        0
      ],
      "end_point": [
        818,
        1
      ],
      "strings": []
    },
    "test_binomial_large_knuth": {
      "start_point": [
        820,
        0
      ],
      "end_point": [
        824,
        1
      ],
      "strings": []
    },
    "test_binomial_large_knuth_pdf": {
      "start_point": [
        826,
        0
      ],
      "end_point": [
        830,
        1
      ],
      "strings": []
    },
    "test_binomial_huge": {
      "start_point": [
        833,
        0
      ],
      "end_point": [
        837,
        1
      ],
      "strings": []
    },
    "test_binomial_huge_pdf": {
      "start_point": [
        839,
        0
      ],
      "end_point": [
        843,
        1
      ],
      "strings": []
    },
    "test_binomial_huge_knuth": {
      "start_point": [
        845,
        0
      ],
      "end_point": [
        849,
        1
      ],
      "strings": []
    },
    "test_binomial_huge_knuth_pdf": {
      "start_point": [
        851,
        0
      ],
      "end_point": [
        855,
        1
      ],
      "strings": []
    },
    "test_binomial_max": {
      "start_point": [
        857,
        0
      ],
      "end_point": [
        861,
        1
      ],
      "strings": []
    },
    "test_binomial_max_pdf": {
      "start_point": [
        863,
        0
      ],
      "end_point": [
        867,
        1
      ],
      "strings": []
    },
    "test_cauchy": {
      "start_point": [
        869,
        0
      ],
      "end_point": [
        873,
        1
      ],
      "strings": []
    },
    "test_cauchy_pdf": {
      "start_point": [
        875,
        0
      ],
      "end_point": [
        879,
        1
      ],
      "strings": []
    },
    "test_chisq": {
      "start_point": [
        881,
        0
      ],
      "end_point": [
        885,
        1
      ],
      "strings": []
    },
    "test_chisq_pdf": {
      "start_point": [
        887,
        0
      ],
      "end_point": [
        891,
        1
      ],
      "strings": []
    },
    "test_chisqnu2": {
      "start_point": [
        893,
        0
      ],
      "end_point": [
        897,
        1
      ],
      "strings": []
    },
    "test_chisqnu2_pdf": {
      "start_point": [
        899,
        0
      ],
      "end_point": [
        903,
        1
      ],
      "strings": []
    },
    "test_dir2d": {
      "start_point": [
        906,
        0
      ],
      "end_point": [
        913,
        1
      ],
      "strings": []
    },
    "test_dir2d_pdf": {
      "start_point": [
        915,
        0
      ],
      "end_point": [
        926,
        1
      ],
      "strings": []
    },
    "test_dir2d_trig_method": {
      "start_point": [
        928,
        0
      ],
      "end_point": [
        935,
        1
      ],
      "strings": []
    },
    "test_dir2d_trig_method_pdf": {
      "start_point": [
        937,
        0
      ],
      "end_point": [
        948,
        1
      ],
      "strings": []
    },
    "test_dir3dxy": {
      "start_point": [
        950,
        0
      ],
      "end_point": [
        957,
        1
      ],
      "strings": []
    },
    "test_dir3dxy_pdf": {
      "start_point": [
        959,
        0
      ],
      "end_point": [
        970,
        1
      ],
      "strings": []
    },
    "test_dir3dyz": {
      "start_point": [
        972,
        0
      ],
      "end_point": [
        979,
        1
      ],
      "strings": []
    },
    "test_dir3dyz_pdf": {
      "start_point": [
        981,
        0
      ],
      "end_point": [
        992,
        1
      ],
      "strings": []
    },
    "test_dir3dzx": {
      "start_point": [
        994,
        0
      ],
      "end_point": [
        1001,
        1
      ],
      "strings": []
    },
    "test_dir3dzx_pdf": {
      "start_point": [
        1003,
        0
      ],
      "end_point": [
        1014,
        1
      ],
      "strings": []
    },
    "test_dirichlet": {
      "start_point": [
        1016,
        0
      ],
      "end_point": [
        1028,
        1
      ],
      "strings": []
    },
    "test_dirichlet_pdf": {
      "start_point": [
        1030,
        0
      ],
      "end_point": [
        1044,
        1
      ],
      "strings": []
    },
    "test_dirichlet_small": {
      "start_point": [
        1047,
        0
      ],
      "end_point": [
        1057,
        1
      ],
      "strings": []
    },
    "test_dirichlet_small_pdf": {
      "start_point": [
        1059,
        0
      ],
      "end_point": [
        1073,
        1
      ],
      "strings": []
    },
    "test_dirichlet_moments": {
      "start_point": [
        1081,
        0
      ],
      "end_point": [
        1121,
        1
      ],
      "strings": [
        "\"test gsl_ran_dirichlet: mean (%g observed vs %g expected)\""
      ]
    },
    "test_multinomial_moments": {
      "start_point": [
        1127,
        0
      ],
      "end_point": [
        1165,
        1
      ],
      "strings": [
        "\"test gsl_ran_multinomial: mean (%g observed vs %g expected)\""
      ]
    },
    "test_discrete1": {
      "start_point": [
        1168,
        0
      ],
      "end_point": [
        1177,
        1
      ],
      "strings": []
    },
    "test_discrete1_pdf": {
      "start_point": [
        1179,
        0
      ],
      "end_point": [
        1183,
        1
      ],
      "strings": []
    },
    "test_discrete2": {
      "start_point": [
        1185,
        0
      ],
      "end_point": [
        1194,
        1
      ],
      "strings": []
    },
    "test_discrete2_pdf": {
      "start_point": [
        1196,
        0
      ],
      "end_point": [
        1200,
        1
      ],
      "strings": []
    },
    "test_discrete3": {
      "start_point": [
        1201,
        0
      ],
      "end_point": [
        1211,
        1
      ],
      "strings": []
    },
    "test_discrete3_pdf": {
      "start_point": [
        1213,
        0
      ],
      "end_point": [
        1217,
        1
      ],
      "strings": []
    },
    "test_erlang": {
      "start_point": [
        1220,
        0
      ],
      "end_point": [
        1224,
        1
      ],
      "strings": []
    },
    "test_erlang_pdf": {
      "start_point": [
        1226,
        0
      ],
      "end_point": [
        1230,
        1
      ],
      "strings": []
    },
    "test_exponential": {
      "start_point": [
        1232,
        0
      ],
      "end_point": [
        1236,
        1
      ],
      "strings": []
    },
    "test_exponential_pdf": {
      "start_point": [
        1238,
        0
      ],
      "end_point": [
        1242,
        1
      ],
      "strings": []
    },
    "test_exppow0": {
      "start_point": [
        1244,
        0
      ],
      "end_point": [
        1248,
        1
      ],
      "strings": []
    },
    "test_exppow0_pdf": {
      "start_point": [
        1250,
        0
      ],
      "end_point": [
        1254,
        1
      ],
      "strings": []
    },
    "test_exppow1": {
      "start_point": [
        1256,
        0
      ],
      "end_point": [
        1260,
        1
      ],
      "strings": []
    },
    "test_exppow1_pdf": {
      "start_point": [
        1262,
        0
      ],
      "end_point": [
        1266,
        1
      ],
      "strings": []
    },
    "test_exppow1a": {
      "start_point": [
        1268,
        0
      ],
      "end_point": [
        1272,
        1
      ],
      "strings": []
    },
    "test_exppow1a_pdf": {
      "start_point": [
        1274,
        0
      ],
      "end_point": [
        1278,
        1
      ],
      "strings": []
    },
    "test_exppow2": {
      "start_point": [
        1280,
        0
      ],
      "end_point": [
        1284,
        1
      ],
      "strings": []
    },
    "test_exppow2_pdf": {
      "start_point": [
        1286,
        0
      ],
      "end_point": [
        1290,
        1
      ],
      "strings": []
    },
    "test_exppow2a": {
      "start_point": [
        1293,
        0
      ],
      "end_point": [
        1297,
        1
      ],
      "strings": []
    },
    "test_exppow2a_pdf": {
      "start_point": [
        1299,
        0
      ],
      "end_point": [
        1303,
        1
      ],
      "strings": []
    },
    "test_exppow2b": {
      "start_point": [
        1305,
        0
      ],
      "end_point": [
        1309,
        1
      ],
      "strings": []
    },
    "test_exppow2b_pdf": {
      "start_point": [
        1311,
        0
      ],
      "end_point": [
        1315,
        1
      ],
      "strings": []
    },
    "test_fdist": {
      "start_point": [
        1317,
        0
      ],
      "end_point": [
        1321,
        1
      ],
      "strings": []
    },
    "test_fdist_pdf": {
      "start_point": [
        1323,
        0
      ],
      "end_point": [
        1327,
        1
      ],
      "strings": []
    },
    "test_fdist_large": {
      "start_point": [
        1331,
        0
      ],
      "end_point": [
        1335,
        1
      ],
      "strings": []
    },
    "test_fdist_large_pdf": {
      "start_point": [
        1337,
        0
      ],
      "end_point": [
        1341,
        1
      ],
      "strings": []
    },
    "test_flat": {
      "start_point": [
        1343,
        0
      ],
      "end_point": [
        1347,
        1
      ],
      "strings": []
    },
    "test_flat_pdf": {
      "start_point": [
        1349,
        0
      ],
      "end_point": [
        1353,
        1
      ],
      "strings": []
    },
    "test_gamma": {
      "start_point": [
        1355,
        0
      ],
      "end_point": [
        1359,
        1
      ],
      "strings": []
    },
    "test_gamma_pdf": {
      "start_point": [
        1361,
        0
      ],
      "end_point": [
        1365,
        1
      ],
      "strings": []
    },
    "test_gamma1": {
      "start_point": [
        1367,
        0
      ],
      "end_point": [
        1371,
        1
      ],
      "strings": []
    },
    "test_gamma1_pdf": {
      "start_point": [
        1373,
        0
      ],
      "end_point": [
        1377,
        1
      ],
      "strings": []
    },
    "test_gamma_int": {
      "start_point": [
        1380,
        0
      ],
      "end_point": [
        1384,
        1
      ],
      "strings": []
    },
    "test_gamma_int_pdf": {
      "start_point": [
        1386,
        0
      ],
      "end_point": [
        1390,
        1
      ],
      "strings": []
    },
    "test_gamma_large": {
      "start_point": [
        1393,
        0
      ],
      "end_point": [
        1397,
        1
      ],
      "strings": []
    },
    "test_gamma_large_pdf": {
      "start_point": [
        1399,
        0
      ],
      "end_point": [
        1403,
        1
      ],
      "strings": []
    },
    "test_gamma_small": {
      "start_point": [
        1405,
        0
      ],
      "end_point": [
        1409,
        1
      ],
      "strings": []
    },
    "test_gamma_small_pdf": {
      "start_point": [
        1411,
        0
      ],
      "end_point": [
        1415,
        1
      ],
      "strings": []
    },
    "test_gamma_vlarge": {
      "start_point": [
        1417,
        0
      ],
      "end_point": [
        1425,
        1
      ],
      "strings": []
    },
    "test_gamma_vlarge_pdf": {
      "start_point": [
        1427,
        0
      ],
      "end_point": [
        1434,
        1
      ],
      "strings": []
    },
    "test_gamma_mt": {
      "start_point": [
        1436,
        0
      ],
      "end_point": [
        1440,
        1
      ],
      "strings": []
    },
    "test_gamma_mt_pdf": {
      "start_point": [
        1442,
        0
      ],
      "end_point": [
        1446,
        1
      ],
      "strings": []
    },
    "test_gamma_mt1": {
      "start_point": [
        1448,
        0
      ],
      "end_point": [
        1452,
        1
      ],
      "strings": []
    },
    "test_gamma_mt1_pdf": {
      "start_point": [
        1454,
        0
      ],
      "end_point": [
        1458,
        1
      ],
      "strings": []
    },
    "test_gamma_mt_int": {
      "start_point": [
        1461,
        0
      ],
      "end_point": [
        1465,
        1
      ],
      "strings": []
    },
    "test_gamma_mt_int_pdf": {
      "start_point": [
        1467,
        0
      ],
      "end_point": [
        1471,
        1
      ],
      "strings": []
    },
    "test_gamma_mt_large": {
      "start_point": [
        1474,
        0
      ],
      "end_point": [
        1478,
        1
      ],
      "strings": []
    },
    "test_gamma_mt_large_pdf": {
      "start_point": [
        1480,
        0
      ],
      "end_point": [
        1484,
        1
      ],
      "strings": []
    },
    "test_gamma_mt_small": {
      "start_point": [
        1487,
        0
      ],
      "end_point": [
        1491,
        1
      ],
      "strings": []
    },
    "test_gamma_mt_small_pdf": {
      "start_point": [
        1493,
        0
      ],
      "end_point": [
        1497,
        1
      ],
      "strings": []
    },
    "test_gamma_knuth_vlarge": {
      "start_point": [
        1500,
        0
      ],
      "end_point": [
        1508,
        1
      ],
      "strings": []
    },
    "test_gamma_knuth_vlarge_pdf": {
      "start_point": [
        1510,
        0
      ],
      "end_point": [
        1517,
        1
      ],
      "strings": []
    },
    "test_gaussian": {
      "start_point": [
        1519,
        0
      ],
      "end_point": [
        1523,
        1
      ],
      "strings": []
    },
    "test_gaussian_pdf": {
      "start_point": [
        1525,
        0
      ],
      "end_point": [
        1529,
        1
      ],
      "strings": []
    },
    "test_gaussian_ratio_method": {
      "start_point": [
        1531,
        0
      ],
      "end_point": [
        1535,
        1
      ],
      "strings": []
    },
    "test_gaussian_ratio_method_pdf": {
      "start_point": [
        1537,
        0
      ],
      "end_point": [
        1541,
        1
      ],
      "strings": []
    },
    "test_gaussian_ziggurat": {
      "start_point": [
        1543,
        0
      ],
      "end_point": [
        1547,
        1
      ],
      "strings": []
    },
    "test_gaussian_ziggurat_pdf": {
      "start_point": [
        1549,
        0
      ],
      "end_point": [
        1553,
        1
      ],
      "strings": []
    },
    "test_gaussian_tail": {
      "start_point": [
        1555,
        0
      ],
      "end_point": [
        1559,
        1
      ],
      "strings": []
    },
    "test_gaussian_tail_pdf": {
      "start_point": [
        1561,
        0
      ],
      "end_point": [
        1565,
        1
      ],
      "strings": []
    },
    "test_gaussian_tail1": {
      "start_point": [
        1567,
        0
      ],
      "end_point": [
        1571,
        1
      ],
      "strings": []
    },
    "test_gaussian_tail1_pdf": {
      "start_point": [
        1573,
        0
      ],
      "end_point": [
        1577,
        1
      ],
      "strings": []
    },
    "test_gaussian_tail2": {
      "start_point": [
        1579,
        0
      ],
      "end_point": [
        1583,
        1
      ],
      "strings": []
    },
    "test_gaussian_tail2_pdf": {
      "start_point": [
        1585,
        0
      ],
      "end_point": [
        1589,
        1
      ],
      "strings": []
    },
    "test_ugaussian": {
      "start_point": [
        1592,
        0
      ],
      "end_point": [
        1596,
        1
      ],
      "strings": []
    },
    "test_ugaussian_pdf": {
      "start_point": [
        1598,
        0
      ],
      "end_point": [
        1602,
        1
      ],
      "strings": []
    },
    "test_ugaussian_ratio_method": {
      "start_point": [
        1604,
        0
      ],
      "end_point": [
        1608,
        1
      ],
      "strings": []
    },
    "test_ugaussian_ratio_method_pdf": {
      "start_point": [
        1610,
        0
      ],
      "end_point": [
        1614,
        1
      ],
      "strings": []
    },
    "test_ugaussian_tail": {
      "start_point": [
        1616,
        0
      ],
      "end_point": [
        1620,
        1
      ],
      "strings": []
    },
    "test_ugaussian_tail_pdf": {
      "start_point": [
        1622,
        0
      ],
      "end_point": [
        1626,
        1
      ],
      "strings": []
    },
    "test_bivariate_gaussian1": {
      "start_point": [
        1628,
        0
      ],
      "end_point": [
        1634,
        1
      ],
      "strings": []
    },
    "test_bivariate_gaussian1_pdf": {
      "start_point": [
        1636,
        0
      ],
      "end_point": [
        1640,
        1
      ],
      "strings": []
    },
    "test_bivariate_gaussian2": {
      "start_point": [
        1642,
        0
      ],
      "end_point": [
        1648,
        1
      ],
      "strings": []
    },
    "test_bivariate_gaussian2_pdf": {
      "start_point": [
        1650,
        0
      ],
      "end_point": [
        1662,
        1
      ],
      "strings": []
    },
    "test_bivariate_gaussian3": {
      "start_point": [
        1665,
        0
      ],
      "end_point": [
        1671,
        1
      ],
      "strings": []
    },
    "test_bivariate_gaussian3_pdf": {
      "start_point": [
        1673,
        0
      ],
      "end_point": [
        1682,
        1
      ],
      "strings": []
    },
    "test_bivariate_gaussian4": {
      "start_point": [
        1684,
        0
      ],
      "end_point": [
        1690,
        1
      ],
      "strings": []
    },
    "test_bivariate_gaussian4_pdf": {
      "start_point": [
        1692,
        0
      ],
      "end_point": [
        1701,
        1
      ],
      "strings": []
    },
    "test_multivariate_gaussian_log_pdf": {
      "start_point": [
        1710,
        0
      ],
      "end_point": [
        1741,
        1
      ],
      "strings": [
        "\"gsl_ran_multivariate_gaussian_log_pdf\""
      ]
    },
    "test_multivariate_gaussian_pdf": {
      "start_point": [
        1750,
        0
      ],
      "end_point": [
        1781,
        1
      ],
      "strings": [
        "\"gsl_ran_multivariate_gaussian_pdf\""
      ]
    },
    "test_multivariate_gaussian": {
      "start_point": [
        1789,
        0
      ],
      "end_point": [
        1860,
        1
      ],
      "strings": [
        "\"test gsl_ran_multivariate_gaussian: T2 %f < %f\"",
        "\"test gsl_ran_multivariate_gaussian: p value %f > %f\""
      ]
    },
    "test_wishart_log_pdf": {
      "start_point": [
        1871,
        0
      ],
      "end_point": [
        1907,
        1
      ],
      "strings": [
        "\"gsl_ran_wishart_log_pdf\""
      ]
    },
    "test_wishart_pdf": {
      "start_point": [
        1918,
        0
      ],
      "end_point": [
        1954,
        1
      ],
      "strings": [
        "\"gsl_ran_wishart_pdf\""
      ]
    },
    "test_wishart": {
      "start_point": [
        1961,
        0
      ],
      "end_point": [
        2003,
        1
      ],
      "strings": [
        "\"gsl_ran_wishart, mean\"",
        "\"gsl_ran_wishart, var\""
      ]
    },
    "test_geometric": {
      "start_point": [
        2006,
        0
      ],
      "end_point": [
        2010,
        1
      ],
      "strings": []
    },
    "test_geometric_pdf": {
      "start_point": [
        2012,
        0
      ],
      "end_point": [
        2016,
        1
      ],
      "strings": []
    },
    "test_geometric1": {
      "start_point": [
        2018,
        0
      ],
      "end_point": [
        2022,
        1
      ],
      "strings": []
    },
    "test_geometric1_pdf": {
      "start_point": [
        2024,
        0
      ],
      "end_point": [
        2028,
        1
      ],
      "strings": []
    },
    "test_hypergeometric1": {
      "start_point": [
        2030,
        0
      ],
      "end_point": [
        2034,
        1
      ],
      "strings": []
    },
    "test_hypergeometric1_pdf": {
      "start_point": [
        2036,
        0
      ],
      "end_point": [
        2040,
        1
      ],
      "strings": []
    },
    "test_hypergeometric2": {
      "start_point": [
        2043,
        0
      ],
      "end_point": [
        2047,
        1
      ],
      "strings": []
    },
    "test_hypergeometric2_pdf": {
      "start_point": [
        2049,
        0
      ],
      "end_point": [
        2053,
        1
      ],
      "strings": []
    },
    "test_hypergeometric3": {
      "start_point": [
        2055,
        0
      ],
      "end_point": [
        2059,
        1
      ],
      "strings": []
    },
    "test_hypergeometric3_pdf": {
      "start_point": [
        2061,
        0
      ],
      "end_point": [
        2065,
        1
      ],
      "strings": []
    },
    "test_hypergeometric4": {
      "start_point": [
        2067,
        0
      ],
      "end_point": [
        2071,
        1
      ],
      "strings": []
    },
    "test_hypergeometric4_pdf": {
      "start_point": [
        2073,
        0
      ],
      "end_point": [
        2077,
        1
      ],
      "strings": []
    },
    "test_hypergeometric5": {
      "start_point": [
        2079,
        0
      ],
      "end_point": [
        2083,
        1
      ],
      "strings": []
    },
    "test_hypergeometric5_pdf": {
      "start_point": [
        2085,
        0
      ],
      "end_point": [
        2089,
        1
      ],
      "strings": []
    },
    "test_hypergeometric6": {
      "start_point": [
        2092,
        0
      ],
      "end_point": [
        2096,
        1
      ],
      "strings": []
    },
    "test_hypergeometric6_pdf": {
      "start_point": [
        2098,
        0
      ],
      "end_point": [
        2102,
        1
      ],
      "strings": []
    },
    "test_gumbel1": {
      "start_point": [
        2107,
        0
      ],
      "end_point": [
        2111,
        1
      ],
      "strings": []
    },
    "test_gumbel1_pdf": {
      "start_point": [
        2113,
        0
      ],
      "end_point": [
        2117,
        1
      ],
      "strings": []
    },
    "test_gumbel2": {
      "start_point": [
        2119,
        0
      ],
      "end_point": [
        2123,
        1
      ],
      "strings": []
    },
    "test_gumbel2_pdf": {
      "start_point": [
        2125,
        0
      ],
      "end_point": [
        2129,
        1
      ],
      "strings": []
    },
    "test_landau": {
      "start_point": [
        2131,
        0
      ],
      "end_point": [
        2135,
        1
      ],
      "strings": []
    },
    "test_landau_pdf": {
      "start_point": [
        2137,
        0
      ],
      "end_point": [
        2141,
        1
      ],
      "strings": []
    },
    "test_levy1": {
      "start_point": [
        2143,
        0
      ],
      "end_point": [
        2147,
        1
      ],
      "strings": []
    },
    "test_levy1_pdf": {
      "start_point": [
        2149,
        0
      ],
      "end_point": [
        2153,
        1
      ],
      "strings": []
    },
    "test_levy2": {
      "start_point": [
        2155,
        0
      ],
      "end_point": [
        2159,
        1
      ],
      "strings": []
    },
    "test_levy2_pdf": {
      "start_point": [
        2161,
        0
      ],
      "end_point": [
        2165,
        1
      ],
      "strings": []
    },
    "test_levy1a": {
      "start_point": [
        2167,
        0
      ],
      "end_point": [
        2171,
        1
      ],
      "strings": []
    },
    "test_levy1a_pdf": {
      "start_point": [
        2173,
        0
      ],
      "end_point": [
        2177,
        1
      ],
      "strings": []
    },
    "test_levy2a": {
      "start_point": [
        2179,
        0
      ],
      "end_point": [
        2183,
        1
      ],
      "strings": []
    },
    "test_levy2a_pdf": {
      "start_point": [
        2185,
        0
      ],
      "end_point": [
        2189,
        1
      ],
      "strings": []
    },
    "test_levy_skew1": {
      "start_point": [
        2192,
        0
      ],
      "end_point": [
        2196,
        1
      ],
      "strings": []
    },
    "test_levy_skew1_pdf": {
      "start_point": [
        2198,
        0
      ],
      "end_point": [
        2202,
        1
      ],
      "strings": []
    },
    "test_levy_skew2": {
      "start_point": [
        2204,
        0
      ],
      "end_point": [
        2208,
        1
      ],
      "strings": []
    },
    "test_levy_skew2_pdf": {
      "start_point": [
        2210,
        0
      ],
      "end_point": [
        2214,
        1
      ],
      "strings": []
    },
    "test_levy_skew1a": {
      "start_point": [
        2216,
        0
      ],
      "end_point": [
        2220,
        1
      ],
      "strings": []
    },
    "test_levy_skew1a_pdf": {
      "start_point": [
        2222,
        0
      ],
      "end_point": [
        2226,
        1
      ],
      "strings": []
    },
    "test_levy_skew2a": {
      "start_point": [
        2228,
        0
      ],
      "end_point": [
        2232,
        1
      ],
      "strings": []
    },
    "test_levy_skew2a_pdf": {
      "start_point": [
        2234,
        0
      ],
      "end_point": [
        2238,
        1
      ],
      "strings": []
    },
    "test_levy_skew1b": {
      "start_point": [
        2240,
        0
      ],
      "end_point": [
        2244,
        1
      ],
      "strings": []
    },
    "test_levy_skew1b_pdf": {
      "start_point": [
        2246,
        0
      ],
      "end_point": [
        2250,
        1
      ],
      "strings": []
    },
    "test_levy_skew2b": {
      "start_point": [
        2252,
        0
      ],
      "end_point": [
        2256,
        1
      ],
      "strings": []
    },
    "test_levy_skew2b_pdf": {
      "start_point": [
        2258,
        0
      ],
      "end_point": [
        2262,
        1
      ],
      "strings": []
    },
    "test_logistic": {
      "start_point": [
        2265,
        0
      ],
      "end_point": [
        2269,
        1
      ],
      "strings": []
    },
    "test_logistic_pdf": {
      "start_point": [
        2271,
        0
      ],
      "end_point": [
        2275,
        1
      ],
      "strings": []
    },
    "test_logarithmic": {
      "start_point": [
        2277,
        0
      ],
      "end_point": [
        2281,
        1
      ],
      "strings": []
    },
    "test_logarithmic_pdf": {
      "start_point": [
        2283,
        0
      ],
      "end_point": [
        2287,
        1
      ],
      "strings": []
    },
    "test_lognormal": {
      "start_point": [
        2290,
        0
      ],
      "end_point": [
        2294,
        1
      ],
      "strings": []
    },
    "test_lognormal_pdf": {
      "start_point": [
        2296,
        0
      ],
      "end_point": [
        2300,
        1
      ],
      "strings": []
    },
    "test_multinomial": {
      "start_point": [
        2302,
        0
      ],
      "end_point": [
        2314,
        1
      ],
      "strings": []
    },
    "test_multinomial_pdf": {
      "start_point": [
        2316,
        0
      ],
      "end_point": [
        2330,
        1
      ],
      "strings": []
    },
    "test_multinomial_large": {
      "start_point": [
        2333,
        0
      ],
      "end_point": [
        2344,
        1
      ],
      "strings": []
    },
    "test_multinomial_large_pdf": {
      "start_point": [
        2346,
        0
      ],
      "end_point": [
        2350,
        1
      ],
      "strings": []
    },
    "test_negative_binomial": {
      "start_point": [
        2352,
        0
      ],
      "end_point": [
        2356,
        1
      ],
      "strings": []
    },
    "test_negative_binomial_pdf": {
      "start_point": [
        2358,
        0
      ],
      "end_point": [
        2362,
        1
      ],
      "strings": []
    },
    "test_pascal": {
      "start_point": [
        2364,
        0
      ],
      "end_point": [
        2368,
        1
      ],
      "strings": []
    },
    "test_pascal_pdf": {
      "start_point": [
        2370,
        0
      ],
      "end_point": [
        2374,
        1
      ],
      "strings": []
    },
    "test_pareto": {
      "start_point": [
        2377,
        0
      ],
      "end_point": [
        2381,
        1
      ],
      "strings": []
    },
    "test_pareto_pdf": {
      "start_point": [
        2383,
        0
      ],
      "end_point": [
        2387,
        1
      ],
      "strings": []
    },
    "test_rayleigh": {
      "start_point": [
        2389,
        0
      ],
      "end_point": [
        2393,
        1
      ],
      "strings": []
    },
    "test_rayleigh_pdf": {
      "start_point": [
        2395,
        0
      ],
      "end_point": [
        2399,
        1
      ],
      "strings": []
    },
    "test_rayleigh_tail": {
      "start_point": [
        2401,
        0
      ],
      "end_point": [
        2405,
        1
      ],
      "strings": []
    },
    "test_rayleigh_tail_pdf": {
      "start_point": [
        2407,
        0
      ],
      "end_point": [
        2411,
        1
      ],
      "strings": []
    },
    "test_poisson": {
      "start_point": [
        2414,
        0
      ],
      "end_point": [
        2418,
        1
      ],
      "strings": []
    },
    "test_poisson_pdf": {
      "start_point": [
        2420,
        0
      ],
      "end_point": [
        2424,
        1
      ],
      "strings": []
    },
    "test_poisson_large": {
      "start_point": [
        2426,
        0
      ],
      "end_point": [
        2430,
        1
      ],
      "strings": []
    },
    "test_poisson_large_pdf": {
      "start_point": [
        2432,
        0
      ],
      "end_point": [
        2436,
        1
      ],
      "strings": []
    },
    "test_tdist1": {
      "start_point": [
        2439,
        0
      ],
      "end_point": [
        2443,
        1
      ],
      "strings": []
    },
    "test_tdist1_pdf": {
      "start_point": [
        2445,
        0
      ],
      "end_point": [
        2449,
        1
      ],
      "strings": []
    },
    "test_tdist2": {
      "start_point": [
        2451,
        0
      ],
      "end_point": [
        2455,
        1
      ],
      "strings": []
    },
    "test_tdist2_pdf": {
      "start_point": [
        2457,
        0
      ],
      "end_point": [
        2461,
        1
      ],
      "strings": []
    },
    "test_laplace": {
      "start_point": [
        2464,
        0
      ],
      "end_point": [
        2468,
        1
      ],
      "strings": []
    },
    "test_laplace_pdf": {
      "start_point": [
        2470,
        0
      ],
      "end_point": [
        2474,
        1
      ],
      "strings": []
    },
    "test_weibull": {
      "start_point": [
        2476,
        0
      ],
      "end_point": [
        2480,
        1
      ],
      "strings": []
    },
    "test_weibull_pdf": {
      "start_point": [
        2482,
        0
      ],
      "end_point": [
        2486,
        1
      ],
      "strings": []
    },
    "test_weibull1": {
      "start_point": [
        2489,
        0
      ],
      "end_point": [
        2493,
        1
      ],
      "strings": []
    },
    "test_weibull1_pdf": {
      "start_point": [
        2495,
        0
      ],
      "end_point": [
        2499,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/weibull.c": {
    "gsl_ran_weibull": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    },
    "gsl_ran_weibull_pdf": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/randist/wishart.c": {
    "gsl_ran_wishart": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"L should be a square matrix\"",
        "\"result should be a square matrix\"",
        "\"work should be a square matrix\"",
        "\"incompatible dimensions of result matrix\"",
        "\"incompatible dimensions of work matrix\"",
        "\"incompatible degrees of freedom\""
      ]
    },
    "gsl_ran_wishart_log_pdf": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": [
        "\"L should be a square matrix\"",
        "\"X should be a square matrix\"",
        "\"L_X should be a square matrix\"",
        "\"incompatible dimensions of X matrix\"",
        "\"incompatible dimensions of L_X matrix\"",
        "\"incompatible degrees of freedom\""
      ]
    },
    "gsl_ran_wishart_pdf": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/borosh13.c": {
    "ran_get": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "ran_get_double": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "ran_set": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/cmrg.c": {
    "cmrg_get": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "cmrg_get_double": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    },
    "cmrg_set": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/coveyou.c": {
    "ran_get": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "ran_get_double": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "ran_set": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/default.c": {
    "gsl_rng_env_setup": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"GSL_RNG_TYPE\"",
        "\"GSL_RNG_TYPE=%s not recognized\\n\"",
        "\"Valid generator types are:\\n\"",
        "\" %18s\"",
        "\"unknown generator\"",
        "\"GSL_RNG_TYPE=%s\\n\"",
        "\"GSL_RNG_SEED\"",
        "\"GSL_RNG_SEED=%lu\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/rng/file.c": {
    "gsl_rng_fread": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": [
        "\"fread failed\""
      ]
    },
    "gsl_rng_fwrite": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"fwrite failed\""
      ]
    }
  },
  "gsl/gsl-2.5/rng/fishman18.c": {
    "ran_get": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "ran_get_double": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "ran_set": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/fishman20.c": {
    "ran_get": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "ran_get_double": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "ran_set": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/fishman2x.c": {
    "ran_get": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "ran_get_double": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "ran_set": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/gfsr4.c": {
    "gfsr4_get": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "gfsr4_get_double": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "gfsr4_set": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/gsl_rng.h": {
    "typedef": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        47,
        3
      ],
      "strings": []
    },
    "gsl_rng_get": {
      "start_point": [
        157,
        20
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    },
    "gsl_rng_uniform": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "gsl_rng_uniform_pos": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": []
    },
    "gsl_rng_uniform_int": {
      "start_point": [
        188,
        20
      ],
      "end_point": [
        211,
        1
      ],
      "strings": [
        "\"invalid n, either 0 or exceeds maximum value of generator\""
      ]
    }
  },
  "gsl/gsl-2.5/rng/inline.c": {},
  "gsl/gsl-2.5/rng/knuthran.c": {
    "ran_array": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "ran_get": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "ran_get_double": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "ran_set": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/knuthran2.c": {
    "ran_get": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "ran_get_double": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "ran_set": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/knuthran2002.c": {
    "ran_array": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "ran_get": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "ran_get_double": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "ran_set": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/lecuyer21.c": {
    "ran_get": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "ran_get_double": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "ran_set": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/minstd.c": {
    "minstd_get": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "minstd_get_double": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "minstd_set": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/mrg.c": {
    "mrg_get": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "mrg_get_double": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "mrg_set": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/mt.c": {
    "mt_get": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "mt_get_double": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    },
    "mt_set": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "mt_1999_set": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "mt_1998_set": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/r250.c": {
    "r250_get": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "r250_get_double": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    },
    "r250_set": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/ran0.c": {
    "ran0_get": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "ran0_get_double": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "ran0_set": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": [
        "\"ran0 should not use seed == mask\""
      ]
    }
  },
  "gsl/gsl-2.5/rng/ran1.c": {
    "ran1_get": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "ran1_get_double": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "ran1_set": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/ran2.c": {
    "ran2_get": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "ran2_get_double": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "ran2_set": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/ran3.c": {
    "ran3_get": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "ran3_get_double": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "ran3_set": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/rand.c": {
    "rand_get": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "rand_get_double": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "rand_set": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/rand48.c": {
    "rand48_advance": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "rand48_get": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "rand48_get_double": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "rand48_set": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/random.c": {
    "random8_get": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "random_get": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "random32_get": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "random64_get": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "random128_get": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    },
    "random256_get": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "random8_get_double": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": []
    },
    "random32_get_double": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "random64_get_double": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "random128_get_double": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "random256_get_double": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    },
    "random8_bsd_set": {
      "start_point": [
        201,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "random32_bsd_set": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": []
    },
    "random64_bsd_set": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "random128_bsd_set": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    },
    "random256_bsd_set": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    },
    "bsd_initialize": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": []
    },
    "libc5_initialize": {
      "start_point": [
        286,
        0
      ],
      "end_point": [
        298,
        1
      ],
      "strings": []
    },
    "glibc2_initialize": {
      "start_point": [
        300,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": []
    },
    "random8_glibc2_set": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": []
    },
    "random32_glibc2_set": {
      "start_point": [
        338,
        0
      ],
      "end_point": [
        351,
        1
      ],
      "strings": []
    },
    "random64_glibc2_set": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        366,
        1
      ],
      "strings": []
    },
    "random128_glibc2_set": {
      "start_point": [
        368,
        0
      ],
      "end_point": [
        381,
        1
      ],
      "strings": []
    },
    "random256_glibc2_set": {
      "start_point": [
        383,
        0
      ],
      "end_point": [
        396,
        1
      ],
      "strings": []
    },
    "random8_libc5_set": {
      "start_point": [
        399,
        0
      ],
      "end_point": [
        408,
        1
      ],
      "strings": []
    },
    "random32_libc5_set": {
      "start_point": [
        410,
        0
      ],
      "end_point": [
        423,
        1
      ],
      "strings": []
    },
    "random64_libc5_set": {
      "start_point": [
        425,
        0
      ],
      "end_point": [
        438,
        1
      ],
      "strings": []
    },
    "random128_libc5_set": {
      "start_point": [
        440,
        0
      ],
      "end_point": [
        453,
        1
      ],
      "strings": []
    },
    "random256_libc5_set": {
      "start_point": [
        455,
        0
      ],
      "end_point": [
        468,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/randu.c": {
    "randu_get": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "randu_get_double": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "randu_set": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/ranf.c": {
    "ranf_advance": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "ranf_get": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "ranf_get_double": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "ranf_set": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/ranlux.c": {
    "increment_state": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "ranlux_get": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "ranlux_get_double": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "ranlux_set_lux": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "ranlux_set": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "ranlux389_set": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/ranlxd.c": {
    "increment_state": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "ranlxd_get": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "ranlxd_get_double": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "ranlxd_set_lux": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    },
    "ranlxd1_set": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "ranlxd2_set": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/ranlxs.c": {
    "increment_state": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": []
    },
    "ranlxs_get_double": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    },
    "ranlxs_get": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "ranlxs_set_lux": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": []
    },
    "ranlxs0_set": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        257,
        1
      ],
      "strings": []
    },
    "ranlxs1_set": {
      "start_point": [
        259,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": []
    },
    "ranlxs2_set": {
      "start_point": [
        265,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/ranmar.c": {
    "ranmar_get": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "ranmar_get_double": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "ranmar_set": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/rng.c": {
    "gsl_rng_alloc": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"failed to allocate space for rng struct\"",
        "\"failed to allocate space for rng state\""
      ]
    },
    "gsl_rng_memcpy": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": [
        "\"generators must be of the same type\""
      ]
    },
    "gsl_rng_clone": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"failed to allocate space for rng struct\"",
        "\"failed to allocate space for rng state\""
      ]
    },
    "gsl_rng_set": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "gsl_rng_max": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "gsl_rng_min": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "gsl_rng_name": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "gsl_rng_size": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    },
    "gsl_rng_state": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    },
    "gsl_rng_print_state": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": [
        "\"%.2x\""
      ]
    },
    "gsl_rng_free": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/schrage.c": {
    "schrage": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "schrage_mult": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/slatec.c": {
    "slatec_get": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "slatec_get_double": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "slatec_set": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/taus.c": {
    "taus_get": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "taus_get_double": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "taus_set": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "taus2_set": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/taus113.c": {
    "taus113_get": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "taus113_get_double": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "taus113_set": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/test.c": {
    "main": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "rng_test": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": [
        "\"%s, %u steps (%u observed vs %u expected)\""
      ]
    },
    "rng_float_test": {
      "start_point": [
        255,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": [
        "\"%s, ratio of int to double (%g observed vs %g expected)\""
      ]
    },
    "rng_state_test": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": [
        "\"%s, random number state consistency\""
      ]
    },
    "rng_parallel_state_test": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": [
        "\"%s, parallel random number state consistency\""
      ]
    },
    "rng_read_write_test": {
      "start_point": [
        384,
        0
      ],
      "end_point": [
        431,
        1
      ],
      "strings": [
        "\"test.dat\"",
        "\"wb\"",
        "\"test.dat\"",
        "\"rb\"",
        "\"%s, random number generator read and write\""
      ]
    },
    "generic_rng_test": {
      "start_point": [
        433,
        0
      ],
      "end_point": [
        490,
        1
      ],
      "strings": [
        "\"%s, observed vs theoretical maximum (%lu vs %lu)\"",
        "\"%s, observed vs theoretical minimum (%lu vs %lu)\"",
        "\"%s, sum test within acceptable sigma (observed %.2g sigma)\"",
        "\"%s, bin test within acceptable chisq (observed %.2g sigma)\"",
        "\"%s, max, min and sum tests for seed=1\"",
        "\"%s, max, min and sum tests for non-default seeds\""
      ]
    },
    "rng_max_test": {
      "start_point": [
        492,
        0
      ],
      "end_point": [
        516,
        1
      ],
      "strings": []
    },
    "rng_min_test": {
      "start_point": [
        518,
        0
      ],
      "end_point": [
        543,
        1
      ],
      "strings": []
    },
    "rng_sum_test": {
      "start_point": [
        545,
        0
      ],
      "end_point": [
        572,
        1
      ],
      "strings": [
        "\"sum=%g, sigma=%g\\n\""
      ]
    },
    "rng_bin_test": {
      "start_point": [
        576,
        0
      ],
      "end_point": [
        620,
        1
      ],
      "strings": [
        "\"%s, wrote outside range in bin test \"",
        "\"(%d observed vs %d expected)\""
      ]
    },
    "rng_sanity_test": {
      "start_point": [
        622,
        0
      ],
      "end_point": [
        653,
        1
      ],
      "strings": [
        "\"x=%g out of range\\n\"",
        "\"sum=%g, sigma=%g\\n\""
      ]
    },
    "rng_seed_test": {
      "start_point": [
        655,
        0
      ],
      "end_point": [
        674,
        1
      ],
      "strings": [
        "\"%s, sanity tests for seed = %#lx\""
      ]
    }
  },
  "gsl/gsl-2.5/rng/transputer.c": {
    "transputer_get": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "transputer_get_double": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "transputer_set": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/tt.c": {
    "tt_get": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "tt_get_double": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "tt_set": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/types.c": {
    "gsl_rng_types_setup": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/uni.c": {
    "uni_get": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "uni_get_double": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "uni_set": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/uni32.c": {
    "uni32_get": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "uni32_get_double": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "uni32_set": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        191,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/vax.c": {
    "vax_get": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "vax_get_double": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "vax_set": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/waterman14.c": {
    "ran_get": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "ran_get_double": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "ran_set": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rng/zuf.c": {
    "zuf_get": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "zuf_get_double": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "zuf_set": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/roots/bisection.c": {
    "bisection_init": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"endpoints do not straddle y=0\""
      ]
    },
    "bisection_iterate": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/roots/brent.c": {
    "brent_init": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"endpoints do not straddle y=0\""
      ]
    },
    "brent_iterate": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/roots/convergence.c": {
    "gsl_root_test_interval": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"relative tolerance is negative\"",
        "\"absolute tolerance is negative\"",
        "\"lower bound larger than upper bound\""
      ]
    },
    "gsl_root_test_delta": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": [
        "\"relative tolerance is negative\"",
        "\"absolute tolerance is negative\""
      ]
    },
    "gsl_root_test_residual": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": [
        "\"absolute tolerance is negative\""
      ]
    }
  },
  "gsl/gsl-2.5/roots/falsepos.c": {
    "falsepos_init": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"endpoints do not straddle y=0\""
      ]
    },
    "falsepos_iterate": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/roots/fdfsolver.c": {
    "gsl_root_fdfsolver_alloc": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": [
        "\"failed to allocate space for root solver struct\"",
        "\"failed to allocate space for root solver state\""
      ]
    },
    "gsl_root_fdfsolver_set": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "gsl_root_fdfsolver_iterate": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "gsl_root_fdfsolver_free": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "gsl_root_fdfsolver_name": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "gsl_root_fdfsolver_root": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/roots/fsolver.c": {
    "gsl_root_fsolver_alloc": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"failed to allocate space for root solver struct\"",
        "\"failed to allocate space for root solver state\""
      ]
    },
    "gsl_root_fsolver_set": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": [
        "\"invalid interval (lower > upper)\""
      ]
    },
    "gsl_root_fsolver_iterate": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "gsl_root_fsolver_free": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "gsl_root_fsolver_name": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "gsl_root_fsolver_root": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "gsl_root_fsolver_x_lower": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "gsl_root_fsolver_x_upper": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/roots/gsl_roots.h": {
    "typedef": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        44,
        3
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/roots/newton.c": {
    "newton_init": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "newton_iterate": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\"derivative is zero\"",
        "\"function value is not finite\"",
        "\"derivative value is not finite\""
      ]
    }
  },
  "gsl/gsl-2.5/roots/roots.h": {},
  "gsl/gsl-2.5/roots/secant.c": {
    "secant_init": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "secant_iterate": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"derivative is zero\"",
        "\"function value is not finite\"",
        "\"derivative value is not finite\""
      ]
    }
  },
  "gsl/gsl-2.5/roots/steffenson.c": {
    "steffenson_init": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "steffenson_iterate": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": [
        "\"derivative is zero\"",
        "\"function value is not finite\"",
        "\"derivative value is not finite\""
      ]
    }
  },
  "gsl/gsl-2.5/roots/test.c": {
    "main": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"sin(x) [3, 4]\"",
        "\"sin(x) [-4, -3]\"",
        "\"sin(x) [-1/3, 1]\"",
        "\"cos(x) [0, 3]\"",
        "\"cos(x) [-3, 0]\"",
        "\"x^20 - 1 [0.1, 2]\"",
        "\"sqrt(|x|)*sgn(x)\"",
        "\"x^2 - 1e-8 [0, 1]\"",
        "\"x exp(-x) [-1/3, 2]\"",
        "\"(x - 1)^7 [0.9995, 1.0002]\"",
        "\"invalid range check [4, 0]\"",
        "\"invalid range check [1, 1]\"",
        "\"invalid range check [0.1, 0.2]\"",
        "\"sin(x) {3.4}\"",
        "\"sin(x) {-3.3}\"",
        "\"sin(x) {0.5}\"",
        "\"cos(x) {0.6}\"",
        "\"cos(x) {-2.5}\"",
        "\"x^{20} - 1 {0.9}\"",
        "\"x^{20} - 1 {1.1}\"",
        "\"sqrt(|x|)*sgn(x) {1.001}\"",
        "\"x^2 - 1e-8 {1}\"",
        "\"x exp(-x) {-2}\"",
        "\"max iterations x -> +Inf, x exp(-x) {2}\"",
        "\"max iterations x -> -Inf, 1/(1 + exp(-x)) {0}\"",
        "\"-pi * x + e {1.5}\"",
        "\"(x - 1)^7 {0.9}\""
      ]
    },
    "test_f": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"interval is invalid (%g,%g)\"",
        "\"r lies outside interval %g (%g,%g)\"",
        "\"%s, %s (%g obs vs %g expected) \"",
        "\"exceeded maximum number of iterations\"",
        "\"incorrect precision (%g obs vs %g expected)\""
      ]
    },
    "test_f_e": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": [
        "\"%s (set), %s\"",
        "\"%s, %s\""
      ]
    },
    "test_fdf": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": [
        "\"%s, %s (%g obs vs %g expected) \"",
        "\"exceeded maximum number of iterations\"",
        "\"incorrect precision (%g obs vs %g expected)\""
      ]
    },
    "test_fdf_e": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": [
        "\"%s (set), %s\"",
        "\"%s, %s\""
      ]
    },
    "my_error_handler": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/roots/test.h": {},
  "gsl/gsl-2.5/roots/test_funcs.c": {
    "create_function": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "create_fdf": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "func1": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "func1_df": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "func1_fdf": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "func2": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "func2_df": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "func2_fdf": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "func3": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "func3_df": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "func3_fdf": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "func4": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "func4_df": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "func4_fdf": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": []
    },
    "func5": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "func5_df": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "func5_fdf": {
      "start_point": [
        161,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": []
    },
    "func6": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": []
    },
    "func6_df": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "func6_fdf": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "sin_f": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "sin_df": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": []
    },
    "sin_fdf": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        208,
        1
      ],
      "strings": []
    },
    "cos_f": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    },
    "cos_df": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "cos_fdf": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    },
    "func7": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": []
    },
    "func7_df": {
      "start_point": [
        238,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": []
    },
    "func7_fdf": {
      "start_point": [
        243,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rstat/gsl_rstat.h": {
    "typedef": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rstat/rquantile.c": {
    "gsl_rstat_quantile_alloc": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"failed to allocate space for workspace\""
      ]
    },
    "gsl_rstat_quantile_free": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "gsl_rstat_quantile_reset": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "gsl_rstat_quantile_add": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"invalid input argument x\""
      ]
    },
    "gsl_rstat_quantile_get": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "calc_psq": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rstat/rstat.c": {
    "gsl_rstat_alloc": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"failed to allocate space for workspace\"",
        "\"failed to allocate space for median workspace\""
      ]
    },
    "gsl_rstat_free": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "gsl_rstat_n": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "gsl_rstat_add": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "gsl_rstat_min": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "gsl_rstat_max": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "gsl_rstat_mean": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    },
    "gsl_rstat_variance": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "gsl_rstat_sd": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    },
    "gsl_rstat_rms": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "gsl_rstat_sd_mean": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "gsl_rstat_median": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    },
    "gsl_rstat_skew": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    },
    "gsl_rstat_kurtosis": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "gsl_rstat_reset": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/rstat/test.c": {
    "random_data": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "test_basic": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"n n=%zu\"",
        "\"mean n=%zu\"",
        "\"variance n=%zu\"",
        "\"stddev n=%zu\"",
        "\"stddev_mean n=%zu\"",
        "\"rms n=%zu\"",
        "\"skew n=%zu\"",
        "\"kurtosis n=%zu\"",
        "\"rstat returned success\"",
        "\"n n=%zu\""
      ]
    },
    "test_quantile": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": [
        "\"%s p=%g\"",
        "\"%s p=%g\""
      ]
    },
    "main": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": [
        "\"jain\"",
        "\"gauss\"",
        "\"mean\"",
        "\"variance\"",
        "\"stddev\"",
        "\"skew\"",
        "\"kurtosis\"",
        "\"median\""
      ]
    }
  },
  "gsl/gsl-2.5/siman/gsl_siman.h": {},
  "gsl/gsl-2.5/siman/siman.c": {
    "boltzmann": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "copy_state": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "gsl_siman_solve": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": [
        "\"#-iter  #-evals   temperature     position   energy\\n\"",
        "\"%5d   %7d  %12g\"",
        "\"  %12g  %12g\\n\""
      ]
    },
    "gsl_siman_solve_many": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": [
        "\"#-iter    temperature       position\"",
        "\"         delta_pos        energy\\n\"",
        "\"%5d\\t%12g\\t\"",
        "\"\\t%12g\\t%12g\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/siman/siman_tsp.c": {
    "city_distance": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "Etsp": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "Mtsp": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "Stsp": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "Ptsp": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": [
        "\"  [\"",
        "\" %d \"",
        "\"]  \""
      ]
    },
    "main": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": [
        "\"# initial order of cities:\\n\"",
        "\"# \\\"%s\\\"\\n\"",
        "\"# distance matrix is:\\n\"",
        "\"# initial coordinates of cities (longitude and latitude)\\n\"",
        "\"###initial_city_coord: %g %g \\\"%s\\\"\\n\"",
        "\"# final order of cities:\\n\"",
        "\"# \\\"%s\\\"\\n\"",
        "\"# final coordinates of cities (longitude and latitude)\\n\"",
        "\"###final_city_coord: %g %g %s\\n\"",
        "\"# \"",
        "\"date\""
      ]
    },
    "prepare_distance_matrix": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "print_distance_matrix": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": [
        "\"# \"",
        "\"%15.8f   \"",
        "\"\\n\""
      ]
    },
    "exhaustive_search": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": [
        "\"\\n# \"",
        "\"date\"",
        "\"\\n# \"",
        "\"date\"",
        "\"# exhaustive best route: \"",
        "\"\\n# its energy is: %g\\n\"",
        "\"# exhaustive second_best route: \"",
        "\"\\n# its energy is: %g\\n\"",
        "\"# exhaustive third_best route: \"",
        "\"\\n# its energy is: %g\\n\""
      ]
    },
    "do_all_perms": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        328,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/siman/test.c": {
    "square": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        42,
        43
      ],
      "strings": []
    },
    "E1": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "M1": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "S1": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "P1": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\" %12g \""
      ]
    },
    "main": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"f(x)= exp(-(x-1)^2) sin(8x), x0=-10\"",
        "\"f(x)= exp(-(x-1)^2) sin(8x), x0=10\"",
        "\"f(x)= exp(-(x-1)^2) sin(8x), x0=0.6\"",
        "\"f(x)= exp(-(x-1)^2) sin(8x), x0=0.5\"",
        "\"f(x)= exp(-(x-1)^2) sin(8x), x0=0.4\"",
        "\"#one dimensional problem, x0 = %f\\n\"",
        "\"#two dimensional problem, (x0,y0) = (%f,%f)\\n\"",
        "\"#three dimensional problem, (x0,y0,z0) = (%f,%f,%f)\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/sort/gsl_heapsort.h": {},
  "gsl/gsl-2.5/sort/gsl_sort.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_char.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_double.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_float.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_int.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_long.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_long_double.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_short.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_uchar.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_uint.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_ulong.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_ushort.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector_char.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector_double.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector_float.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector_int.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector_long.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector_long_double.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector_short.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector_uchar.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector_uint.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector_ulong.h": {},
  "gsl/gsl-2.5/sort/gsl_sort_vector_ushort.h": {},
  "gsl/gsl-2.5/sort/sort.c": {
    "swap": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "downheap": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "gsl_heapsort": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sort/sortind.c": {
    "downheap": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "gsl_heapsort_index": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sort/sortvec.c": {},
  "gsl/gsl-2.5/sort/sortvecind.c": {},
  "gsl/gsl-2.5/sort/sortvecind_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          21,
          0
        ],
        "end_point": [
          46,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          48,
          0
        ],
        "end_point": [
          92,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          94,
          0
        ],
        "end_point": [
          105,
          1
        ],
        "strings": [
          "\"permutation and vector lengths are not equal\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/sort/sortvec_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          22,
          0
        ],
        "end_point": [
          47,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          49,
          0
        ],
        "end_point": [
          77,
          1
        ],
        "strings": []
      }
    ],
    "TYPE": [
      {
        "start_point": [
          79,
          0
        ],
        "end_point": [
          116,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          118,
          0
        ],
        "end_point": [
          122,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          124,
          0
        ],
        "end_point": [
          167,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          169,
          0
        ],
        "end_point": [
          173,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/sort/subset.c": {},
  "gsl/gsl-2.5/sort/subsetind.c": {},
  "gsl/gsl-2.5/sort/subsetind_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          17,
          0
        ],
        "end_point": [
          72,
          1
        ],
        "strings": [
          "\"subset length k exceeds vector length n\""
        ]
      },
      {
        "start_point": [
          75,
          0
        ],
        "end_point": [
          80,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          82,
          0
        ],
        "end_point": [
          137,
          1
        ],
        "strings": [
          "\"subset length k exceeds vector length n\""
        ]
      },
      {
        "start_point": [
          140,
          0
        ],
        "end_point": [
          145,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/sort/subset_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          17,
          0
        ],
        "end_point": [
          72,
          1
        ],
        "strings": [
          "\"subset length k exceeds vector length n\""
        ]
      },
      {
        "start_point": [
          75,
          0
        ],
        "end_point": [
          80,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          82,
          0
        ],
        "end_point": [
          137,
          1
        ],
        "strings": [
          "\"subset length k exceeds vector length n\""
        ]
      },
      {
        "start_point": [
          140,
          0
        ],
        "end_point": [
          145,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/sort/test.c": {
    "main": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "urand": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sort/test_heapsort.c": {
    "test_heapsort": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": [
        "\"indexing array, n = %u, ordered\"",
        "\"sorting, array, n = %u, ordered\"",
        "\"indexing array, n = %u, reversed\"",
        "\"sorting, array, n = %u, reversed\"",
        "\"indexing array, n = %u, randomized\"",
        "\"sorting, array, n = %u, randomized\""
      ]
    },
    "initialize": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "cpy": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "randomize": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "reverse": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "check": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "pcheck": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "cmp_dbl": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sort/test_source.c": {
    "TYPE": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": [
        "\"indexing \"",
        "\", n = %u, stride = %u, ordered\"",
        "\"sorting, \"",
        "\", n = %u, stride = %u, ordered\"",
        "\"smallest, \"",
        "\", n = %u, stride = %u, ordered\"",
        "\"largest, \"",
        "\", n = %u, stride = %u, ordered\"",
        "\"smallest index, \"",
        "\", n = %u, stride = %u, ordered\"",
        "\"largest index, \"",
        "\", n = %u, stride = %u, ordered\"",
        "\"indexing \"",
        "\", n = %u, stride = %u, reversed\"",
        "\"sorting, \"",
        "\", n = %u, stride = %u, reversed\"",
        "\"sorting2, \"",
        "\", n = %u, stride = %u, reversed data\"",
        "\"sorting2, \"",
        "\", n = %u, stride = %u, reversed data2\"",
        "\"smallest, \"",
        "\", n = %u, stride = %u, reversed\"",
        "\"largest, \"",
        "\", n = %u, stride = %u, reversed\"",
        "\"smallest index, \"",
        "\", n = %u, stride = %u, reversed\"",
        "\"largest index, \"",
        "\", n = %u, stride = %u, reversed\"",
        "\"sorting2, \"",
        "\", n = %u, stride = %u, randomized data\"",
        "\"sorting2, \"",
        "\", n = %u, stride = %u, randomized data2\"",
        "\"indexing \"",
        "\", n = %u, stride = %u, randomized\"",
        "\"sorting, \"",
        "\", n = %u, stride = %u, randomized\"",
        "\"smallest, \"",
        "\", n = %u, stride = %u, randomized\"",
        "\"largest, \"",
        "\", n = %u, stride = %u, randomized\"",
        "\"smallest index, \"",
        "\", n = %u, stride = %u, randomized\"",
        "\"largest index, \"",
        "\", n = %u, stride = %u, randomized\""
      ]
    },
    "FUNCTION": [
      {
        "start_point": [
          177,
          0
        ],
        "end_point": [
          194,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          196,
          0
        ],
        "end_point": [
          206,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          208,
          0
        ],
        "end_point": [
          232,
          1
        ],
        "strings": [
          "\"%u: \"",
          "\" \"",
          "\" %c\\n\""
        ]
      },
      {
        "start_point": [
          234,
          0
        ],
        "end_point": [
          248,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          250,
          0
        ],
        "end_point": [
          264,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          268,
          0
        ],
        "end_point": [
          282,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          285,
          0
        ],
        "end_point": [
          301,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          303,
          0
        ],
        "end_point": [
          319,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/spblas/gsl_spblas.h": {},
  "gsl/gsl-2.5/spblas/spdgemm.c": {
    "gsl_spblas_dgemm": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": [
        "\"matrix dimensions do not match\"",
        "\"matrix storage formats do not match\"",
        "\"compressed column format required\"",
        "\"unable to realloc matrix C\"",
        "\"unable to realloc matrix C\""
      ]
    },
    "gsl_spblas_scatter": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/spblas/spdgemv.c": {
    "gsl_spblas_dgemv": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"invalid length of x vector\"",
        "\"invalid length of y vector\"",
        "\"unsupported matrix type\""
      ]
    }
  },
  "gsl/gsl-2.5/spblas/test.c": {
    "create_random_sparse": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "create_random_vector": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "test_vectors": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": [
        "\"N=%zu i=%zu %s\""
      ]
    },
    "test_dgemv": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": [
        "\"test_dgemv: triplet format\"",
        "\"test_dgemv: CCS format\"",
        "\"test_dgemv: CRS format\""
      ]
    },
    "test_dgemm": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"test_dgemm: _dgemm\""
      ]
    },
    "main": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/airy.c": {
    "airy_mod_phase": {
      "start_point": [
        240,
        0
      ],
      "end_point": [
        278,
        1
      ],
      "strings": [
        "\"x is greater than 1.0\""
      ]
    },
    "airy_aie": {
      "start_point": [
        613,
        0
      ],
      "end_point": [
        624,
        1
      ],
      "strings": []
    },
    "airy_bie": {
      "start_point": [
        627,
        0
      ],
      "end_point": [
        652,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Ai_e": {
      "start_point": [
        657,
        0
      ],
      "end_point": [
        695,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Ai_scaled_e": {
      "start_point": [
        698,
        0
      ],
      "end_point": [
        735,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Bi_e": {
      "start_point": [
        738,
        0
      ],
      "end_point": [
        790,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Bi_scaled_e": {
      "start_point": [
        793,
        0
      ],
      "end_point": [
        841,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Ai": {
      "start_point": [
        848,
        0
      ],
      "end_point": [
        851,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Ai_scaled": {
      "start_point": [
        853,
        0
      ],
      "end_point": [
        856,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Bi": {
      "start_point": [
        858,
        0
      ],
      "end_point": [
        861,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Bi_scaled": {
      "start_point": [
        863,
        0
      ],
      "end_point": [
        866,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/airy_der.c": {
    "airy_deriv_mod_phase": {
      "start_point": [
        584,
        0
      ],
      "end_point": [
        629,
        1
      ],
      "strings": [
        "\"x is greater than 1.0\""
      ]
    },
    "gsl_sf_airy_Ai_deriv_scaled_e": {
      "start_point": [
        634,
        0
      ],
      "end_point": [
        692,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Ai_deriv_e": {
      "start_point": [
        695,
        0
      ],
      "end_point": [
        733,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Bi_deriv_scaled_e": {
      "start_point": [
        736,
        0
      ],
      "end_point": [
        808,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Bi_deriv_e": {
      "start_point": [
        811,
        0
      ],
      "end_point": [
        861,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Ai_deriv_scaled": {
      "start_point": [
        867,
        0
      ],
      "end_point": [
        870,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Ai_deriv": {
      "start_point": [
        872,
        0
      ],
      "end_point": [
        875,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Bi_deriv_scaled": {
      "start_point": [
        877,
        0
      ],
      "end_point": [
        880,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_Bi_deriv": {
      "start_point": [
        882,
        0
      ],
      "end_point": [
        885,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/airy_zero.c": {
    "zero_f": {
      "start_point": [
        404,
        0
      ],
      "end_point": [
        416,
        1
      ],
      "strings": []
    },
    "zero_g": {
      "start_point": [
        417,
        0
      ],
      "end_point": [
        428,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_zero_Ai_e": {
      "start_point": [
        432,
        0
      ],
      "end_point": [
        452,
        1
      ],
      "strings": [
        "\"s is less than 1\""
      ]
    },
    "gsl_sf_airy_zero_Bi_e": {
      "start_point": [
        455,
        0
      ],
      "end_point": [
        475,
        1
      ],
      "strings": [
        "\"s is less than 1\""
      ]
    },
    "gsl_sf_airy_zero_Ai_deriv_e": {
      "start_point": [
        478,
        0
      ],
      "end_point": [
        498,
        1
      ],
      "strings": [
        "\"s is less than 1\""
      ]
    },
    "gsl_sf_airy_zero_Bi_deriv_e": {
      "start_point": [
        501,
        0
      ],
      "end_point": [
        521,
        1
      ],
      "strings": [
        "\"s is less than 1\""
      ]
    },
    "gsl_sf_airy_zero_Ai": {
      "start_point": [
        527,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_zero_Bi": {
      "start_point": [
        532,
        0
      ],
      "end_point": [
        535,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_zero_Ai_deriv": {
      "start_point": [
        537,
        0
      ],
      "end_point": [
        540,
        1
      ],
      "strings": []
    },
    "gsl_sf_airy_zero_Bi_deriv": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        545,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/atanint.c": {
    "gsl_sf_atanint_e": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "gsl_sf_atanint": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel.c": {
    "debye_u1": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "debye_u2": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "debye_u3": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "debye_u4": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "debye_u5": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "debye_u6": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_IJ_taylor_e": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Jnu_asympx_e": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Ynu_asympx_e": {
      "start_point": [
        263,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Inu_scaled_asympx_e": {
      "start_point": [
        295,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Knu_scaled_asympx_e": {
      "start_point": [
        310,
        0
      ],
      "end_point": [
        321,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Inu_scaled_asymp_unif_e": {
      "start_point": [
        354,
        0
      ],
      "end_point": [
        384,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Knu_scaled_asymp_unif_e": {
      "start_point": [
        392,
        0
      ],
      "end_point": [
        422,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_JY_mu_restricted": {
      "start_point": [
        427,
        0
      ],
      "end_point": [
        516,
        1
      ],
      "strings": [
        "\"error\"",
        "\"error\""
      ]
    },
    "gsl_sf_bessel_J_CF1": {
      "start_point": [
        519,
        0
      ],
      "end_point": [
        586,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_J_CF1_ser": {
      "start_point": [
        597,
        0
      ],
      "end_point": [
        628,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_I_CF1_ser": {
      "start_point": [
        635,
        0
      ],
      "end_point": [
        658,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_JY_steed_CF2": {
      "start_point": [
        661,
        0
      ],
      "end_point": [
        715,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_K_scaled_steed_temme_CF2": {
      "start_point": [
        724,
        0
      ],
      "end_point": [
        774,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_cos_pi4_e": {
      "start_point": [
        777,
        0
      ],
      "end_point": [
        812,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_sin_pi4_e": {
      "start_point": [
        815,
        0
      ],
      "end_point": [
        848,
        1
      ],
      "strings": []
    },
    "besselJ_meissel": {
      "start_point": [
        865,
        0
      ],
      "end_point": [
        981,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel.h": {},
  "gsl/gsl-2.5/specfunc/bessel_amp_phase.c": {
    "gsl_sf_bessel_asymp_Mnu_e": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_asymp_thetanu_corr_e": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_amp_phase.h": {},
  "gsl/gsl-2.5/specfunc/bessel_i.c": {
    "bessel_il_CF1": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_i0_scaled_e": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_i1_scaled_e": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_i2_scaled_e": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_il_scaled_e": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_il_scaled_array": {
      "start_point": [
        275,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_i0_scaled": {
      "start_point": [
        309,
        0
      ],
      "end_point": [
        312,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_i1_scaled": {
      "start_point": [
        314,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_i2_scaled": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_il_scaled": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        327,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_I0.c": {
    "gsl_sf_bessel_I0_scaled_e": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_I0_e": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_I0_scaled": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_I0": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_I1.c": {
    "gsl_sf_bessel_I1_scaled_e": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_I1_e": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_I1_scaled": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_I1": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        257,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_In.c": {
    "gsl_sf_bessel_In_scaled_e": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_In_scaled_array": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_bessel_In_e": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_In_array": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": [
        "\"overflow\""
      ]
    },
    "gsl_sf_bessel_In_scaled": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_In": {
      "start_point": [
        221,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_Inu.c": {
    "gsl_sf_bessel_Inu_scaled_e": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Inu_e": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Inu_scaled": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Inu": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_j.c": {
    "gsl_sf_bessel_j0_e": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_j1_e": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_j2_e": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_jl_e": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_jl_array": {
      "start_point": [
        250,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_jl_steed_array": {
      "start_point": [
        289,
        0
      ],
      "end_point": [
        374,
        1
      ],
      "strings": [
        "\"error\"",
        "\"error\""
      ]
    },
    "gsl_sf_bessel_j0": {
      "start_point": [
        381,
        0
      ],
      "end_point": [
        384,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_j1": {
      "start_point": [
        386,
        0
      ],
      "end_point": [
        389,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_j2": {
      "start_point": [
        391,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_jl": {
      "start_point": [
        396,
        0
      ],
      "end_point": [
        399,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_J0.c": {
    "gsl_sf_bessel_J0_e": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_J0": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_J1.c": {
    "gsl_sf_bessel_J1_e": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_J1": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_Jn.c": {
    "gsl_sf_bessel_Jn_e": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Jn_array": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_bessel_Jn": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_Jnu.c": {
    "bessel_J_recur_asymp": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Jnupos_e": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Jnu_e": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Jnu": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_k.c": {
    "bessel_kl_scaled_small_x": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_k0_scaled_e": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_k1_scaled_e": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_k2_scaled_e": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_kl_scaled_e": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_kl_scaled_array": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_bessel_k0_scaled": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_k1_scaled": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_k2_scaled": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_kl_scaled": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_K0.c": {
    "gsl_sf_bessel_K0_scaled_e": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_K0_e": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_K0_scaled": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_K0": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_K1.c": {
    "gsl_sf_bessel_K1_scaled_e": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_K1_e": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_K1_scaled": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_K1": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_Kn.c": {
    "bessel_Kn_scaled_small_x": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_Kn_scaled_e": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Kn_e": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Kn_scaled_array": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": [
        "\"domain error\"",
        "\"overflow\""
      ]
    },
    "gsl_sf_bessel_Kn_array": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Kn_scaled": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Kn": {
      "start_point": [
        236,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_Knu.c": {
    "gsl_sf_bessel_Knu_scaled_e": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Knu_scaled_e10_e": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Knu_e": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_lnKnu_e": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Knu_scaled": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Knu": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_lnKnu": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_olver.c": {
    "gsl_sf_bessel_Olver_zofmzeta": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "olver_B0": {
      "start_point": [
        526,
        0
      ],
      "end_point": [
        549,
        1
      ],
      "strings": []
    },
    "olver_B1": {
      "start_point": [
        552,
        0
      ],
      "end_point": [
        593,
        1
      ],
      "strings": []
    },
    "olver_B2": {
      "start_point": [
        596,
        0
      ],
      "end_point": [
        625,
        1
      ],
      "strings": []
    },
    "olver_B3": {
      "start_point": [
        628,
        0
      ],
      "end_point": [
        654,
        1
      ],
      "strings": []
    },
    "olver_A1": {
      "start_point": [
        657,
        0
      ],
      "end_point": [
        694,
        1
      ],
      "strings": []
    },
    "olver_A2": {
      "start_point": [
        697,
        0
      ],
      "end_point": [
        748,
        1
      ],
      "strings": []
    },
    "olver_A3": {
      "start_point": [
        751,
        0
      ],
      "end_point": [
        777,
        1
      ],
      "strings": []
    },
    "olver_A4": {
      "start_point": [
        780,
        0
      ],
      "end_point": [
        805,
        1
      ],
      "strings": []
    },
    "olver_Asum": {
      "start_point": [
        807,
        0
      ],
      "end_point": [
        818,
        1
      ],
      "strings": []
    },
    "olver_Bsum": {
      "start_point": [
        820,
        0
      ],
      "end_point": [
        829,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Jnu_asymp_Olver_e": {
      "start_point": [
        841,
        0
      ],
      "end_point": [
        905,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Ynu_asymp_Olver_e": {
      "start_point": [
        916,
        0
      ],
      "end_point": [
        981,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_olver.h": {},
  "gsl/gsl-2.5/specfunc/bessel_sequence.c": {
    "rk_step": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_sequence_Jnu_e": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": [
        "\"domain error\"",
        "\"error\"",
        "\"error\"",
        "\"error\"",
        "\"error\""
      ]
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_temme.c": {
    "gsl_sf_temme_gamma": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Y_temme": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_K_scaled_temme": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_temme.h": {},
  "gsl/gsl-2.5/specfunc/bessel_y.c": {
    "bessel_yl_small_x": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_y0_e": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_y1_e": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_y2_e": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_yl_e": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_yl_array": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        264,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_y0": {
      "start_point": [
        271,
        0
      ],
      "end_point": [
        274,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_y1": {
      "start_point": [
        276,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_y2": {
      "start_point": [
        281,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_yl": {
      "start_point": [
        286,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_Y0.c": {
    "gsl_sf_bessel_Y0_e": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Y0": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_Y1.c": {
    "gsl_sf_bessel_Y1_e": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Y1": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_Yn.c": {
    "bessel_Yn_small_x": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_Yn_e": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Yn_array": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_Yn": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_Ynu.c": {
    "bessel_Y_recur": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Ynupos_e": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Ynu_e": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_Ynu": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/bessel_zero.c": {
    "clenshaw": {
      "start_point": [
        924,
        0
      ],
      "end_point": [
        937,
        1
      ],
      "strings": []
    },
    "mcmahon_correction": {
      "start_point": [
        949,
        0
      ],
      "end_point": [
        984,
        1
      ],
      "strings": []
    },
    "olver_b0": {
      "start_point": [
        988,
        0
      ],
      "end_point": [
        1009,
        1
      ],
      "strings": []
    },
    "olver_f1": {
      "start_point": [
        1012,
        0
      ],
      "end_point": [
        1019,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_zero_J0_e": {
      "start_point": [
        1022,
        0
      ],
      "end_point": [
        1055,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_bessel_zero_J1_e": {
      "start_point": [
        1058,
        0
      ],
      "end_point": [
        1091,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_zero_Jnu_e": {
      "start_point": [
        1094,
        0
      ],
      "end_point": [
        1198,
        1
      ],
      "strings": [
        "\"no zero-th root for nu = 0.0\"",
        "\"unimplemented\""
      ]
    },
    "gsl_sf_bessel_zero_J0": {
      "start_point": [
        1205,
        0
      ],
      "end_point": [
        1208,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_zero_J1": {
      "start_point": [
        1210,
        0
      ],
      "end_point": [
        1213,
        1
      ],
      "strings": []
    },
    "gsl_sf_bessel_zero_Jnu": {
      "start_point": [
        1215,
        0
      ],
      "end_point": [
        1218,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/beta.c": {
    "isnegint": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnbeta_e": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnbeta_sgn_e": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "gsl_sf_beta_e": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnbeta": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "gsl_sf_beta": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/beta_inc.c": {
    "isnegint": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "beta_cont_frac": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_beta_inc_e": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_beta_inc": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/chebyshev.h": {},
  "gsl/gsl-2.5/specfunc/cheb_eval.c": {
    "cheb_eval_e": {
      "start_point": [
        1,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/cheb_eval_mode.c": {
    "cheb_eval_mode_e": {
      "start_point": [
        0,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/check.h": {},
  "gsl/gsl-2.5/specfunc/clausen.c": {
    "gsl_sf_clausen_e": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "gsl_sf_clausen": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/coulomb.c": {
    "C0sq": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "CLeta": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "gsl_sf_coulomb_CL_e": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    },
    "gsl_sf_coulomb_CL_array": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "coulomb_Phi_series": {
      "start_point": [
        161,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "coulomb_connection": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "coulomb_FG_series": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        358,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "coulomb_FG0_series": {
      "start_point": [
        365,
        0
      ],
      "end_point": [
        442,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "coulomb_FGmhalf_series": {
      "start_point": [
        448,
        0
      ],
      "end_point": [
        505,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "coulomb_F_recur": {
      "start_point": [
        517,
        0
      ],
      "end_point": [
        546,
        1
      ],
      "strings": []
    },
    "coulomb_G_recur": {
      "start_point": [
        556,
        0
      ],
      "end_point": [
        583,
        1
      ],
      "strings": []
    },
    "coulomb_CF1": {
      "start_point": [
        592,
        0
      ],
      "end_point": [
        646,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "old_coulomb_CF1": {
      "start_point": [
        650,
        0
      ],
      "end_point": [
        723,
        1
      ],
      "strings": [
        "\"HELP............\\n\"",
        "\"error\""
      ]
    },
    "coulomb_CF2": {
      "start_point": [
        732,
        0
      ],
      "end_point": [
        799,
        1
      ],
      "strings": []
    },
    "coulomb_jwkb": {
      "start_point": [
        819,
        0
      ],
      "end_point": [
        867,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "coulomb_AS_xlt2eta": {
      "start_point": [
        880,
        0
      ],
      "end_point": [
        887,
        1
      ],
      "strings": []
    },
    "gsl_sf_coulomb_wave_FG_e": {
      "start_point": [
        894,
        0
      ],
      "end_point": [
        1206,
        1
      ],
      "strings": [
        "\"domain error\"",
        "\"domain error\"",
        "\"error\"",
        "\"overflow\""
      ]
    },
    "gsl_sf_coulomb_wave_F_array": {
      "start_point": [
        1209,
        0
      ],
      "end_point": [
        1258,
        1
      ],
      "strings": []
    },
    "gsl_sf_coulomb_wave_FG_array": {
      "start_point": [
        1261,
        0
      ],
      "end_point": [
        1314,
        1
      ],
      "strings": []
    },
    "gsl_sf_coulomb_wave_FGp_array": {
      "start_point": [
        1317,
        0
      ],
      "end_point": [
        1376,
        1
      ],
      "strings": []
    },
    "gsl_sf_coulomb_wave_sphF_array": {
      "start_point": [
        1379,
        0
      ],
      "end_point": [
        1414,
        1
      ],
      "strings": [
        "\"domain error\"",
        "\"underflow\""
      ]
    }
  },
  "gsl/gsl-2.5/specfunc/coulomb_bound.c": {
    "R_norm": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "gsl_sf_hydrogenicR_1_e": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "gsl_sf_hydrogenicR_e": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "gsl_sf_hydrogenicR_1": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "gsl_sf_hydrogenicR": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/coupling.c": {
    "locMax3": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "locMin3": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "locMin5": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "delta": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "triangle_selection_fails": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "m_selection_fails": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "gsl_sf_coupling_3j_e": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "gsl_sf_coupling_6j_INCORRECT_e": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    },
    "gsl_sf_coupling_6j_e": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        320,
        1
      ],
      "strings": []
    },
    "gsl_sf_coupling_RacahW_e": {
      "start_point": [
        323,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": []
    },
    "gsl_sf_coupling_9j_e": {
      "start_point": [
        335,
        0
      ],
      "end_point": [
        405,
        1
      ],
      "strings": []
    },
    "gsl_sf_coupling_3j": {
      "start_point": [
        412,
        0
      ],
      "end_point": [
        418,
        1
      ],
      "strings": []
    },
    "gsl_sf_coupling_6j_INCORRECT": {
      "start_point": [
        422,
        0
      ],
      "end_point": [
        428,
        1
      ],
      "strings": []
    },
    "gsl_sf_coupling_6j": {
      "start_point": [
        433,
        0
      ],
      "end_point": [
        439,
        1
      ],
      "strings": []
    },
    "gsl_sf_coupling_RacahW": {
      "start_point": [
        442,
        0
      ],
      "end_point": [
        448,
        1
      ],
      "strings": []
    },
    "gsl_sf_coupling_9j": {
      "start_point": [
        451,
        0
      ],
      "end_point": [
        459,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/dawson.c": {
    "gsl_sf_dawson_e": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    },
    "gsl_sf_dawson": {
      "start_point": [
        277,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/debye.c": {
    "gsl_sf_debye_1_e": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    },
    "gsl_sf_debye_2_e": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": []
    },
    "gsl_sf_debye_3_e": {
      "start_point": [
        302,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": []
    },
    "gsl_sf_debye_4_e": {
      "start_point": [
        359,
        0
      ],
      "end_point": [
        414,
        1
      ],
      "strings": []
    },
    "gsl_sf_debye_5_e": {
      "start_point": [
        416,
        0
      ],
      "end_point": [
        472,
        1
      ],
      "strings": []
    },
    "gsl_sf_debye_6_e": {
      "start_point": [
        474,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": []
    },
    "gsl_sf_debye_1": {
      "start_point": [
        537,
        0
      ],
      "end_point": [
        540,
        1
      ],
      "strings": []
    },
    "gsl_sf_debye_2": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        545,
        1
      ],
      "strings": []
    },
    "gsl_sf_debye_3": {
      "start_point": [
        547,
        0
      ],
      "end_point": [
        550,
        1
      ],
      "strings": []
    },
    "gsl_sf_debye_4": {
      "start_point": [
        552,
        0
      ],
      "end_point": [
        555,
        1
      ],
      "strings": []
    },
    "gsl_sf_debye_5": {
      "start_point": [
        557,
        0
      ],
      "end_point": [
        560,
        1
      ],
      "strings": []
    },
    "gsl_sf_debye_6": {
      "start_point": [
        562,
        0
      ],
      "end_point": [
        565,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/dilog.c": {
    "dilog_series_1": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "series_2": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "dilog_series_2": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    },
    "dilog_xge0": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    },
    "dilogc_series_1": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": []
    },
    "series_2_c": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": []
    },
    "dilogc_series_2": {
      "start_point": [
        325,
        0
      ],
      "end_point": [
        366,
        1
      ],
      "strings": []
    },
    "dilogc_series_3": {
      "start_point": [
        386,
        0
      ],
      "end_point": [
        450,
        1
      ],
      "strings": []
    },
    "dilogc_fundamental": {
      "start_point": [
        465,
        0
      ],
      "end_point": [
        475,
        1
      ],
      "strings": []
    },
    "dilogc_unitdisk": {
      "start_point": [
        484,
        0
      ],
      "end_point": [
        526,
        1
      ],
      "strings": []
    },
    "gsl_sf_dilog_e": {
      "start_point": [
        533,
        0
      ],
      "end_point": [
        548,
        1
      ],
      "strings": []
    },
    "gsl_sf_complex_dilog_xy_e": {
      "start_point": [
        551,
        0
      ],
      "end_point": [
        620,
        1
      ],
      "strings": []
    },
    "gsl_sf_complex_dilog_e": {
      "start_point": [
        623,
        0
      ],
      "end_point": [
        636,
        1
      ],
      "strings": []
    },
    "gsl_sf_complex_spence_xy_e": {
      "start_point": [
        639,
        0
      ],
      "end_point": [
        650,
        1
      ],
      "strings": []
    },
    "gsl_sf_dilog": {
      "start_point": [
        658,
        0
      ],
      "end_point": [
        661,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/elementary.c": {
    "gsl_sf_multiply_e": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "gsl_sf_multiply_err_e": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "gsl_sf_multiply": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/ellint.c": {
    "locMAX3": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "locMAX4": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_RC_e": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_RD_e": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_RF_e": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_RJ_e": {
      "start_point": [
        240,
        0
      ],
      "end_point": [
        323,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_F_e": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_E_e": {
      "start_point": [
        360,
        0
      ],
      "end_point": [
        405,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_P_e": {
      "start_point": [
        409,
        0
      ],
      "end_point": [
        446,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_D_e": {
      "start_point": [
        450,
        0
      ],
      "end_point": [
        481,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_Dcomp_e": {
      "start_point": [
        483,
        0
      ],
      "end_point": [
        496,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_Kcomp_e": {
      "start_point": [
        500,
        0
      ],
      "end_point": [
        533,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_Ecomp_e": {
      "start_point": [
        537,
        0
      ],
      "end_point": [
        564,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_Pcomp_e": {
      "start_point": [
        567,
        0
      ],
      "end_point": [
        584,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_Kcomp": {
      "start_point": [
        592,
        0
      ],
      "end_point": [
        595,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_Ecomp": {
      "start_point": [
        597,
        0
      ],
      "end_point": [
        600,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_Pcomp": {
      "start_point": [
        602,
        0
      ],
      "end_point": [
        605,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_Dcomp": {
      "start_point": [
        607,
        0
      ],
      "end_point": [
        610,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_F": {
      "start_point": [
        612,
        0
      ],
      "end_point": [
        615,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_E": {
      "start_point": [
        617,
        0
      ],
      "end_point": [
        620,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_P": {
      "start_point": [
        622,
        0
      ],
      "end_point": [
        625,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_D": {
      "start_point": [
        627,
        0
      ],
      "end_point": [
        630,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_RC": {
      "start_point": [
        632,
        0
      ],
      "end_point": [
        635,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_RD": {
      "start_point": [
        637,
        0
      ],
      "end_point": [
        640,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_RF": {
      "start_point": [
        642,
        0
      ],
      "end_point": [
        645,
        1
      ],
      "strings": []
    },
    "gsl_sf_ellint_RJ": {
      "start_point": [
        647,
        0
      ],
      "end_point": [
        650,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/elljac.c": {
    "gsl_sf_elljac_e": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"|m| > 1.0\""
      ]
    }
  },
  "gsl/gsl-2.5/specfunc/erfc.c": {
    "erfc8_sum": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "erfc8": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "log_erfc8": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "erfcasympsum": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    },
    "erfseries": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    },
    "erfc_asymptotic": {
      "start_point": [
        238,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    },
    "log_erfc_asymptotic": {
      "start_point": [
        244,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": []
    },
    "gsl_sf_erfc_e": {
      "start_point": [
        255,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": []
    },
    "gsl_sf_log_erfc_e": {
      "start_point": [
        305,
        0
      ],
      "end_point": [
        353,
        1
      ],
      "strings": []
    },
    "gsl_sf_erf_e": {
      "start_point": [
        356,
        0
      ],
      "end_point": [
        371,
        1
      ],
      "strings": []
    },
    "gsl_sf_erf_Z_e": {
      "start_point": [
        374,
        0
      ],
      "end_point": [
        386,
        1
      ],
      "strings": []
    },
    "gsl_sf_erf_Q_e": {
      "start_point": [
        389,
        0
      ],
      "end_point": [
        401,
        1
      ],
      "strings": []
    },
    "gsl_sf_hazard_e": {
      "start_point": [
        404,
        0
      ],
      "end_point": [
        427,
        1
      ],
      "strings": []
    },
    "gsl_sf_erfc": {
      "start_point": [
        435,
        0
      ],
      "end_point": [
        438,
        1
      ],
      "strings": []
    },
    "gsl_sf_log_erfc": {
      "start_point": [
        440,
        0
      ],
      "end_point": [
        443,
        1
      ],
      "strings": []
    },
    "gsl_sf_erf": {
      "start_point": [
        445,
        0
      ],
      "end_point": [
        448,
        1
      ],
      "strings": []
    },
    "gsl_sf_erf_Z": {
      "start_point": [
        450,
        0
      ],
      "end_point": [
        453,
        1
      ],
      "strings": []
    },
    "gsl_sf_erf_Q": {
      "start_point": [
        455,
        0
      ],
      "end_point": [
        458,
        1
      ],
      "strings": []
    },
    "gsl_sf_hazard": {
      "start_point": [
        460,
        0
      ],
      "end_point": [
        463,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/error.h": {},
  "gsl/gsl-2.5/specfunc/eval.h": {},
  "gsl/gsl-2.5/specfunc/exp.c": {
    "exprel_n_CF": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_exp_e": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "gsl_sf_exp_e10_e": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    },
    "gsl_sf_exp_mult_e": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "gsl_sf_exp_mult_e10_e": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": []
    },
    "gsl_sf_exp_mult_err_e": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "gsl_sf_exp_mult_err_e10_e": {
      "start_point": [
        276,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    },
    "gsl_sf_expm1_e": {
      "start_point": [
        325,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": []
    },
    "gsl_sf_exprel_e": {
      "start_point": [
        355,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": []
    },
    "gsl_sf_exprel_2_e": {
      "start_point": [
        385,
        0
      ],
      "end_point": [
        412,
        1
      ],
      "strings": []
    },
    "gsl_sf_exprel_n_CF_e": {
      "start_point": [
        415,
        0
      ],
      "end_point": [
        419,
        1
      ],
      "strings": []
    },
    "gsl_sf_exprel_n_e": {
      "start_point": [
        421,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": []
    },
    "gsl_sf_exp_err_e": {
      "start_point": [
        533,
        0
      ],
      "end_point": [
        554,
        1
      ],
      "strings": []
    },
    "gsl_sf_exp_err_e10_e": {
      "start_point": [
        557,
        0
      ],
      "end_point": [
        578,
        1
      ],
      "strings": []
    },
    "gsl_sf_exp": {
      "start_point": [
        585,
        0
      ],
      "end_point": [
        588,
        1
      ],
      "strings": []
    },
    "gsl_sf_exp_mult": {
      "start_point": [
        590,
        0
      ],
      "end_point": [
        593,
        1
      ],
      "strings": []
    },
    "gsl_sf_expm1": {
      "start_point": [
        595,
        0
      ],
      "end_point": [
        598,
        1
      ],
      "strings": []
    },
    "gsl_sf_exprel": {
      "start_point": [
        600,
        0
      ],
      "end_point": [
        603,
        1
      ],
      "strings": []
    },
    "gsl_sf_exprel_2": {
      "start_point": [
        605,
        0
      ],
      "end_point": [
        608,
        1
      ],
      "strings": []
    },
    "gsl_sf_exprel_n": {
      "start_point": [
        610,
        0
      ],
      "end_point": [
        613,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/expint.c": {
    "expint_E1_impl": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        364,
        1
      ],
      "strings": []
    },
    "expint_E2_impl": {
      "start_point": [
        367,
        0
      ],
      "end_point": [
        419,
        1
      ],
      "strings": []
    },
    "expint_En_impl": {
      "start_point": [
        421,
        0
      ],
      "end_point": [
        460,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_E1_e": {
      "start_point": [
        465,
        0
      ],
      "end_point": [
        468,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_E1_scaled_e": {
      "start_point": [
        471,
        0
      ],
      "end_point": [
        474,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_E2_e": {
      "start_point": [
        477,
        0
      ],
      "end_point": [
        480,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_E2_scaled_e": {
      "start_point": [
        483,
        0
      ],
      "end_point": [
        486,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_En_e": {
      "start_point": [
        488,
        0
      ],
      "end_point": [
        491,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_En_scaled_e": {
      "start_point": [
        494,
        0
      ],
      "end_point": [
        497,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_Ei_e": {
      "start_point": [
        500,
        0
      ],
      "end_point": [
        509,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_Ei_scaled_e": {
      "start_point": [
        512,
        0
      ],
      "end_point": [
        521,
        1
      ],
      "strings": []
    },
    "recurse_En": {
      "start_point": [
        525,
        0
      ],
      "end_point": [
        534,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_E1": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        545,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_E1_scaled": {
      "start_point": [
        547,
        0
      ],
      "end_point": [
        550,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_E2": {
      "start_point": [
        552,
        0
      ],
      "end_point": [
        555,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_E2_scaled": {
      "start_point": [
        557,
        0
      ],
      "end_point": [
        560,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_En": {
      "start_point": [
        562,
        0
      ],
      "end_point": [
        565,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_En_scaled": {
      "start_point": [
        567,
        0
      ],
      "end_point": [
        570,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_Ei": {
      "start_point": [
        572,
        0
      ],
      "end_point": [
        575,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_Ei_scaled": {
      "start_point": [
        577,
        0
      ],
      "end_point": [
        580,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/expint3.c": {
    "gsl_sf_expint_3_e": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "gsl_sf_expint_3": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/fermi_dirac.c": {
    "fd_whiz": {
      "start_point": [
        816,
        0
      ],
      "end_point": [
        843,
        1
      ],
      "strings": []
    },
    "fd_nint": {
      "start_point": [
        848,
        0
      ],
      "end_point": [
        902,
        1
      ],
      "strings": [
        "\"error\"",
        "\"error\""
      ]
    },
    "fd_neg": {
      "start_point": [
        907,
        0
      ],
      "end_point": [
        971,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "fd_asymp": {
      "start_point": [
        977,
        0
      ],
      "end_point": [
        1027,
        1
      ],
      "strings": []
    },
    "fd_series": {
      "start_point": [
        1034,
        0
      ],
      "end_point": [
        1059,
        1
      ],
      "strings": []
    },
    "fd_series_int": {
      "start_point": [
        1066,
        0
      ],
      "end_point": [
        1126,
        1
      ],
      "strings": []
    },
    "fd_UMseries_int": {
      "start_point": [
        1132,
        0
      ],
      "end_point": [
        1208,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_m1_e": {
      "start_point": [
        1214,
        0
      ],
      "end_point": [
        1231,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_0_e": {
      "start_point": [
        1235,
        0
      ],
      "end_point": [
        1258,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_1_e": {
      "start_point": [
        1261,
        0
      ],
      "end_point": [
        1318,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_2_e": {
      "start_point": [
        1321,
        0
      ],
      "end_point": [
        1378,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_int_e": {
      "start_point": [
        1381,
        0
      ],
      "end_point": [
        1421,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_mhalf_e": {
      "start_point": [
        1424,
        0
      ],
      "end_point": [
        1469,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_half_e": {
      "start_point": [
        1472,
        0
      ],
      "end_point": [
        1517,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_3half_e": {
      "start_point": [
        1520,
        0
      ],
      "end_point": [
        1565,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_inc_0_e": {
      "start_point": [
        1568,
        0
      ],
      "end_point": [
        1581,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_m1": {
      "start_point": [
        1589,
        0
      ],
      "end_point": [
        1592,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_0": {
      "start_point": [
        1594,
        0
      ],
      "end_point": [
        1597,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_1": {
      "start_point": [
        1599,
        0
      ],
      "end_point": [
        1602,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_2": {
      "start_point": [
        1604,
        0
      ],
      "end_point": [
        1607,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_int": {
      "start_point": [
        1609,
        0
      ],
      "end_point": [
        1612,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_mhalf": {
      "start_point": [
        1614,
        0
      ],
      "end_point": [
        1617,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_half": {
      "start_point": [
        1619,
        0
      ],
      "end_point": [
        1622,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_3half": {
      "start_point": [
        1624,
        0
      ],
      "end_point": [
        1627,
        1
      ],
      "strings": []
    },
    "gsl_sf_fermi_dirac_inc_0": {
      "start_point": [
        1629,
        0
      ],
      "end_point": [
        1632,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/gamma.c": {
    "lngamma_lanczos_complex": {
      "start_point": [
        658,
        0
      ],
      "end_point": [
        693,
        1
      ],
      "strings": []
    },
    "lngamma_lanczos": {
      "start_point": [
        700,
        0
      ],
      "end_point": [
        721,
        1
      ],
      "strings": []
    },
    "lngamma_sgn_0": {
      "start_point": [
        726,
        0
      ],
      "end_point": [
        752,
        1
      ],
      "strings": []
    },
    "lngamma_sgn_sing": {
      "start_point": [
        760,
        0
      ],
      "end_point": [
        859,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "lngamma_complex_stirling": {
      "start_point": [
        867,
        0
      ],
      "end_point": [
        889,
        1
      ],
      "strings": []
    },
    "lngamma_1_pade": {
      "start_point": [
        893,
        0
      ],
      "end_point": [
        918,
        1
      ],
      "strings": []
    },
    "lngamma_2_pade": {
      "start_point": [
        920,
        0
      ],
      "end_point": [
        945,
        1
      ],
      "strings": []
    },
    "gammastar_ser": {
      "start_point": [
        951,
        0
      ],
      "end_point": [
        972,
        1
      ],
      "strings": []
    },
    "gamma_xgthalf": {
      "start_point": [
        1016,
        0
      ],
      "end_point": [
        1107,
        1
      ],
      "strings": []
    },
    "gsl_sf_lngamma_e": {
      "start_point": [
        1113,
        0
      ],
      "end_point": [
        1181,
        1
      ],
      "strings": [
        "\"error\"",
        "\"error\""
      ]
    },
    "gsl_sf_lngamma_sgn_e": {
      "start_point": [
        1184,
        0
      ],
      "end_point": [
        1250,
        1
      ],
      "strings": [
        "\"error\"",
        "\"x too large to extract fraction part\""
      ]
    },
    "gsl_sf_gamma_e": {
      "start_point": [
        1253,
        0
      ],
      "end_point": [
        1294,
        1
      ],
      "strings": []
    },
    "gsl_sf_gammastar_e": {
      "start_point": [
        1297,
        0
      ],
      "end_point": [
        1344,
        1
      ],
      "strings": []
    },
    "gsl_sf_gammainv_e": {
      "start_point": [
        1347,
        0
      ],
      "end_point": [
        1388,
        1
      ],
      "strings": []
    },
    "gsl_sf_lngamma_complex_e": {
      "start_point": [
        1391,
        0
      ],
      "end_point": [
        1423,
        1
      ],
      "strings": []
    },
    "gsl_sf_taylorcoeff_e": {
      "start_point": [
        1426,
        0
      ],
      "end_point": [
        1470,
        1
      ],
      "strings": []
    },
    "gsl_sf_fact_e": {
      "start_point": [
        1473,
        0
      ],
      "end_point": [
        1490,
        1
      ],
      "strings": []
    },
    "gsl_sf_doublefact_e": {
      "start_point": [
        1493,
        0
      ],
      "end_point": [
        1510,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnfact_e": {
      "start_point": [
        1513,
        0
      ],
      "end_point": [
        1526,
        1
      ],
      "strings": []
    },
    "gsl_sf_lndoublefact_e": {
      "start_point": [
        1529,
        0
      ],
      "end_point": [
        1552,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnchoose_e": {
      "start_point": [
        1555,
        0
      ],
      "end_point": [
        1580,
        1
      ],
      "strings": []
    },
    "gsl_sf_choose_e": {
      "start_point": [
        1583,
        0
      ],
      "end_point": [
        1624,
        1
      ],
      "strings": []
    },
    "gsl_sf_fact": {
      "start_point": [
        1631,
        0
      ],
      "end_point": [
        1634,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnfact": {
      "start_point": [
        1636,
        0
      ],
      "end_point": [
        1639,
        1
      ],
      "strings": []
    },
    "gsl_sf_doublefact": {
      "start_point": [
        1641,
        0
      ],
      "end_point": [
        1644,
        1
      ],
      "strings": []
    },
    "gsl_sf_lndoublefact": {
      "start_point": [
        1646,
        0
      ],
      "end_point": [
        1649,
        1
      ],
      "strings": []
    },
    "gsl_sf_lngamma": {
      "start_point": [
        1651,
        0
      ],
      "end_point": [
        1654,
        1
      ],
      "strings": []
    },
    "gsl_sf_gamma": {
      "start_point": [
        1656,
        0
      ],
      "end_point": [
        1659,
        1
      ],
      "strings": []
    },
    "gsl_sf_gammastar": {
      "start_point": [
        1661,
        0
      ],
      "end_point": [
        1664,
        1
      ],
      "strings": []
    },
    "gsl_sf_gammainv": {
      "start_point": [
        1666,
        0
      ],
      "end_point": [
        1669,
        1
      ],
      "strings": []
    },
    "gsl_sf_taylorcoeff": {
      "start_point": [
        1671,
        0
      ],
      "end_point": [
        1674,
        1
      ],
      "strings": []
    },
    "gsl_sf_choose": {
      "start_point": [
        1676,
        0
      ],
      "end_point": [
        1679,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnchoose": {
      "start_point": [
        1681,
        0
      ],
      "end_point": [
        1684,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/gamma_inc.c": {
    "gamma_inc_D": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "gamma_inc_P_series": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": [
        "\"gamma_inc_P_series x>>a exceeds range\"",
        "\"gamma_inc_P_series failed to converge\""
      ]
    },
    "gamma_inc_Q_large_x": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"error in large x asymptotic\""
      ]
    },
    "gamma_inc_Q_asymp_unif": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "gamma_inc_F_CF": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        288,
        1
      ],
      "strings": [
        "\"error in CF for F(a,x)\""
      ]
    },
    "gamma_inc_Q_CF": {
      "start_point": [
        318,
        0
      ],
      "end_point": [
        331,
        1
      ],
      "strings": []
    },
    "gamma_inc_Q_series": {
      "start_point": [
        336,
        0
      ],
      "end_point": [
        439,
        1
      ],
      "strings": []
    },
    "gamma_inc_series": {
      "start_point": [
        443,
        0
      ],
      "end_point": [
        455,
        1
      ],
      "strings": []
    },
    "gamma_inc_a_gt_0": {
      "start_point": [
        458,
        0
      ],
      "end_point": [
        472,
        1
      ],
      "strings": []
    },
    "gamma_inc_CF": {
      "start_point": [
        475,
        0
      ],
      "end_point": [
        489,
        1
      ],
      "strings": []
    },
    "gsl_sf_gamma_inc_Q_e": {
      "start_point": [
        498,
        0
      ],
      "end_point": [
        576,
        1
      ],
      "strings": []
    },
    "gsl_sf_gamma_inc_P_e": {
      "start_point": [
        579,
        0
      ],
      "end_point": [
        641,
        1
      ],
      "strings": []
    },
    "gsl_sf_gamma_inc_e": {
      "start_point": [
        644,
        0
      ],
      "end_point": [
        700,
        1
      ],
      "strings": []
    },
    "gsl_sf_gamma_inc_P": {
      "start_point": [
        707,
        0
      ],
      "end_point": [
        710,
        1
      ],
      "strings": []
    },
    "gsl_sf_gamma_inc_Q": {
      "start_point": [
        712,
        0
      ],
      "end_point": [
        715,
        1
      ],
      "strings": []
    },
    "gsl_sf_gamma_inc": {
      "start_point": [
        717,
        0
      ],
      "end_point": [
        720,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/gegenbauer.c": {
    "gsl_sf_gegenpoly_1_e": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "gsl_sf_gegenpoly_2_e": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "gsl_sf_gegenpoly_3_e": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "gsl_sf_gegenpoly_n_e": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    },
    "gsl_sf_gegenpoly_array": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_gegenpoly_1": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "gsl_sf_gegenpoly_2": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    },
    "gsl_sf_gegenpoly_3": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "gsl_sf_gegenpoly_n": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/gsl_sf.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_airy.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_bessel.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_clausen.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_coulomb.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_coupling.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_dawson.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_debye.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_dilog.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_elementary.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_ellint.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_elljac.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_erf.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_exp.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_expint.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_fermi_dirac.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_gamma.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_gegenbauer.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_hermite.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_hyperg.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_laguerre.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_lambert.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_legendre.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_log.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_mathieu.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_pow_int.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_psi.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_result.h": {
    "struct": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/gsl_sf_sincos_pi.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_synchrotron.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_transport.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_trig.h": {},
  "gsl/gsl-2.5/specfunc/gsl_sf_zeta.h": {},
  "gsl/gsl-2.5/specfunc/gsl_specfunc.h": {},
  "gsl/gsl-2.5/specfunc/hermite.c": {
    "gsl_sf_hermite_prob_iter_e": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_prob_appr_e": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_prob_e": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_prob": {
      "start_point": [
        236,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_prob_der_e": {
      "start_point": [
        243,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_prob_der": {
      "start_point": [
        264,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_phys_e": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_phys": {
      "start_point": [
        427,
        0
      ],
      "end_point": [
        431,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_phys_der_e": {
      "start_point": [
        435,
        0
      ],
      "end_point": [
        454,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_phys_der": {
      "start_point": [
        456,
        0
      ],
      "end_point": [
        460,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_func_e": {
      "start_point": [
        464,
        0
      ],
      "end_point": [
        599,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_func": {
      "start_point": [
        601,
        0
      ],
      "end_point": [
        605,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_prob_array": {
      "start_point": [
        609,
        0
      ],
      "end_point": [
        659,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_hermite_prob_array_der": {
      "start_point": [
        665,
        0
      ],
      "end_point": [
        738,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_hermite_prob_der_array": {
      "start_point": [
        743,
        0
      ],
      "end_point": [
        823,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_hermite_prob_series_e": {
      "start_point": [
        828,
        0
      ],
      "end_point": [
        871,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_prob_series": {
      "start_point": [
        873,
        0
      ],
      "end_point": [
        877,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_phys_array": {
      "start_point": [
        881,
        0
      ],
      "end_point": [
        931,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_hermite_phys_array_der": {
      "start_point": [
        936,
        0
      ],
      "end_point": [
        1009,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_hermite_phys_der_array": {
      "start_point": [
        1014,
        0
      ],
      "end_point": [
        1094,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_hermite_phys_series_e": {
      "start_point": [
        1099,
        0
      ],
      "end_point": [
        1142,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_phys_series": {
      "start_point": [
        1144,
        0
      ],
      "end_point": [
        1148,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_func_array": {
      "start_point": [
        1153,
        0
      ],
      "end_point": [
        1204,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_hermite_func_series_e": {
      "start_point": [
        1209,
        0
      ],
      "end_point": [
        1252,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_func_series": {
      "start_point": [
        1254,
        0
      ],
      "end_point": [
        1258,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_func_der_e": {
      "start_point": [
        1263,
        0
      ],
      "end_point": [
        1427,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_func_der": {
      "start_point": [
        1429,
        0
      ],
      "end_point": [
        1433,
        1
      ],
      "strings": []
    },
    "H_zero_init": {
      "start_point": [
        1435,
        0
      ],
      "end_point": [
        1467,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_prob_zero_e": {
      "start_point": [
        1575,
        0
      ],
      "end_point": [
        1616,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_prob_zero": {
      "start_point": [
        1618,
        0
      ],
      "end_point": [
        1622,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_phys_zero_e": {
      "start_point": [
        1729,
        0
      ],
      "end_point": [
        1770,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_phys_zero": {
      "start_point": [
        1772,
        0
      ],
      "end_point": [
        1776,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_func_zero_e": {
      "start_point": [
        1778,
        0
      ],
      "end_point": [
        1782,
        1
      ],
      "strings": []
    },
    "gsl_sf_hermite_func_zero": {
      "start_point": [
        1784,
        0
      ],
      "end_point": [
        1788,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/hyperg.c": {
    "gsl_sf_hyperg_1F1_series_e": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"hypergeometric series failed to converge\"",
        "\"overflow\"",
        "\"overflow\""
      ]
    },
    "gsl_sf_hyperg_1F1_large_b_e": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_U_large_b_e": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": [
        "\"overflow\"",
        "\"overflow\""
      ]
    },
    "gsl_sf_hyperg_2F0_series_e": {
      "start_point": [
        238,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": [
        "\"overflow\"",
        "\"error\""
      ]
    }
  },
  "gsl/gsl-2.5/specfunc/hyperg.h": {},
  "gsl/gsl-2.5/specfunc/hyperg_0F1.c": {
    "hyperg_0F1_bessel_I": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "hyperg_0F1_bessel_J": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_0F1_e": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_0F1": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/hyperg_1F1.c": {
    "hyperg_1F1_asymp_negx": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_asymp_posx": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_largebx": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_large2bm4a": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_luke": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_1_series": {
      "start_point": [
        292,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_1_int": {
      "start_point": [
        316,
        0
      ],
      "end_point": [
        335,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_1": {
      "start_point": [
        343,
        0
      ],
      "end_point": [
        407,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_renorm_b0": {
      "start_point": [
        413,
        0
      ],
      "end_point": [
        471,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_CF1_p": {
      "start_point": [
        491,
        0
      ],
      "end_point": [
        544,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "hyperg_1F1_CF1_p_ser": {
      "start_point": [
        556,
        0
      ],
      "end_point": [
        583,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "hyperg_1F1_CF1": {
      "start_point": [
        592,
        0
      ],
      "end_point": [
        644,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "hyperg_1F1_CF1_b": {
      "start_point": [
        654,
        0
      ],
      "end_point": [
        706,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "hyperg_1F1_small_a_bgt0": {
      "start_point": [
        713,
        0
      ],
      "end_point": [
        794,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_beps_bgt0": {
      "start_point": [
        800,
        0
      ],
      "end_point": [
        850,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_beq2a_pos": {
      "start_point": [
        860,
        0
      ],
      "end_point": [
        882,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_diag_step": {
      "start_point": [
        892,
        0
      ],
      "end_point": [
        908,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_diag_end_step": {
      "start_point": [
        918,
        0
      ],
      "end_point": [
        928,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_ab_posint": {
      "start_point": [
        935,
        0
      ],
      "end_point": [
        1173,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_a_negint_poly": {
      "start_point": [
        1180,
        0
      ],
      "end_point": [
        1207,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_a_negint_lag": {
      "start_point": [
        1220,
        0
      ],
      "end_point": [
        1276,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_a_negint_U": {
      "start_point": [
        1286,
        0
      ],
      "end_point": [
        1301,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_ab_negint": {
      "start_point": [
        1307,
        0
      ],
      "end_point": [
        1332,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_U": {
      "start_point": [
        1343,
        0
      ],
      "end_point": [
        1415,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_ab_pos": {
      "start_point": [
        1421,
        0
      ],
      "end_point": [
        1698,
        1
      ],
      "strings": []
    },
    "hyperg_1F1_ab_neg": {
      "start_point": [
        1705,
        0
      ],
      "end_point": [
        1783,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_1F1_int_e": {
      "start_point": [
        1788,
        0
      ],
      "end_point": [
        1839,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_1F1_e": {
      "start_point": [
        1842,
        0
      ],
      "end_point": [
        2007,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_1F1_int": {
      "start_point": [
        2056,
        0
      ],
      "end_point": [
        2059,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_1F1": {
      "start_point": [
        2061,
        0
      ],
      "end_point": [
        2064,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/hyperg_2F0.c": {
    "gsl_sf_hyperg_2F0_e": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_2F0": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/hyperg_2F1.c": {
    "hyperg_2F1_series": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"error\"",
        "\"error\""
      ]
    },
    "hyperg_2F1_conj_series": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": [
        "\"error\"",
        "\"error\""
      ]
    },
    "hyperg_2F1_luke": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "hyperg_2F1_conj_luke": {
      "start_point": [
        265,
        0
      ],
      "end_point": [
        358,
        1
      ],
      "strings": []
    },
    "hyperg_2F1_reflect": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        621,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "pow_omx": {
      "start_point": [
        624,
        0
      ],
      "end_point": [
        636,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_2F1_e": {
      "start_point": [
        641,
        0
      ],
      "end_point": [
        774,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_hyperg_2F1_conj_e": {
      "start_point": [
        777,
        0
      ],
      "end_point": [
        818,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_hyperg_2F1_renorm_e": {
      "start_point": [
        821,
        0
      ],
      "end_point": [
        880,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_2F1_conj_renorm_e": {
      "start_point": [
        883,
        0
      ],
      "end_point": [
        938,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_2F1": {
      "start_point": [
        945,
        0
      ],
      "end_point": [
        948,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_2F1_conj": {
      "start_point": [
        950,
        0
      ],
      "end_point": [
        953,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_2F1_renorm": {
      "start_point": [
        955,
        0
      ],
      "end_point": [
        958,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_2F1_conj_renorm": {
      "start_point": [
        960,
        0
      ],
      "end_point": [
        963,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/hyperg_U.c": {
    "hyperg_lnU_beq2a": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "hyperg_U_CF1": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "d9chu": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "hyperg_zaU_asymp": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": []
    },
    "hyperg_U_finite_sum": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        341,
        1
      ],
      "strings": []
    },
    "hyperg_U_infinite_sum_stable": {
      "start_point": [
        346,
        0
      ],
      "end_point": [
        442,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "hyperg_U_infinite_sum_simple": {
      "start_point": [
        444,
        0
      ],
      "end_point": [
        541,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "hyperg_U_infinite_sum_improved": {
      "start_point": [
        544,
        0
      ],
      "end_point": [
        668,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "hyperg_U_series": {
      "start_point": [
        677,
        0
      ],
      "end_point": [
        731,
        1
      ],
      "strings": []
    },
    "hyperg_U_small_ab": {
      "start_point": [
        737,
        0
      ],
      "end_point": [
        769,
        1
      ],
      "strings": []
    },
    "hyperg_U_small_a_bgt0": {
      "start_point": [
        774,
        0
      ],
      "end_point": [
        825,
        1
      ],
      "strings": []
    },
    "hyperg_U_int_bge1": {
      "start_point": [
        857,
        0
      ],
      "end_point": [
        1148,
        1
      ],
      "strings": [
        "\"error\"",
        "\"error\""
      ]
    },
    "hyperg_U_bge1": {
      "start_point": [
        1153,
        0
      ],
      "end_point": [
        1455,
        1
      ],
      "strings": []
    },
    "hyperg_U_origin": {
      "start_point": [
        1470,
        0
      ],
      "end_point": [
        1483,
        1
      ],
      "strings": []
    },
    "hyperg_U_int_origin": {
      "start_point": [
        1485,
        0
      ],
      "end_point": [
        1489,
        1
      ],
      "strings": []
    },
    "hyperg_U_negx": {
      "start_point": [
        1520,
        0
      ],
      "end_point": [
        1618,
        1
      ],
      "strings": [
        "\"limit case integer b <= 0 unimplemented\"",
        "\"limit case integer b >= 2 unimplemented\""
      ]
    },
    "hyperg_U_int_negx": {
      "start_point": [
        1620,
        0
      ],
      "end_point": [
        1642,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_U_int_e10_e": {
      "start_point": [
        1648,
        0
      ],
      "end_point": [
        1685,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_U_e10_e": {
      "start_point": [
        1688,
        0
      ],
      "end_point": [
        1751,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_U_int_e": {
      "start_point": [
        1754,
        0
      ],
      "end_point": [
        1761,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_U_e": {
      "start_point": [
        1764,
        0
      ],
      "end_point": [
        1771,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_U_int": {
      "start_point": [
        1778,
        0
      ],
      "end_point": [
        1781,
        1
      ],
      "strings": []
    },
    "gsl_sf_hyperg_U": {
      "start_point": [
        1783,
        0
      ],
      "end_point": [
        1786,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/laguerre.c": {
    "laguerre_large_n": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "laguerre_n_cp": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    },
    "laguerre_n_poly_safe": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": []
    },
    "gsl_sf_laguerre_1_e": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "gsl_sf_laguerre_2_e": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "gsl_sf_laguerre_3_e": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": []
    },
    "gsl_sf_laguerre_n_e": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": []
    },
    "gsl_sf_laguerre_1": {
      "start_point": [
        316,
        0
      ],
      "end_point": [
        319,
        1
      ],
      "strings": []
    },
    "gsl_sf_laguerre_2": {
      "start_point": [
        321,
        0
      ],
      "end_point": [
        324,
        1
      ],
      "strings": []
    },
    "gsl_sf_laguerre_3": {
      "start_point": [
        326,
        0
      ],
      "end_point": [
        329,
        1
      ],
      "strings": []
    },
    "gsl_sf_laguerre_n": {
      "start_point": [
        331,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/lambert.c": {
    "halley_iteration": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "series_eval": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "gsl_sf_lambert_W0_e": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "gsl_sf_lambert_Wm1_e": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    },
    "gsl_sf_lambert_W0": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": []
    },
    "gsl_sf_lambert_Wm1": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/legendre.h": {},
  "gsl/gsl-2.5/specfunc/legendre_con.c": {
    "conicalP_negmu_xlt1_CF1": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "conicalP_negmu_xgt1_CF1": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "olver_U1": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "olver_U2": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "olver_U3": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_xlt1_large_neg_mu_e": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    },
    "olver_B0_xi": {
      "start_point": [
        255,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "olver_A1_xi": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        274,
        1
      ],
      "strings": []
    },
    "olver_B0_th": {
      "start_point": [
        276,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": []
    },
    "olver_A1_th": {
      "start_point": [
        282,
        0
      ],
      "end_point": [
        295,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_xgt1_neg_mu_largetau_e": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_xlt1_neg_mu_largetau_e": {
      "start_point": [
        366,
        0
      ],
      "end_point": [
        419,
        1
      ],
      "strings": []
    },
    "conicalP_hyperg_large_x": {
      "start_point": [
        429,
        0
      ],
      "end_point": [
        475,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_conicalP_large_x_e": {
      "start_point": [
        481,
        0
      ],
      "end_point": [
        539,
        1
      ],
      "strings": []
    },
    "conicalP_xlt1_hyperg_A": {
      "start_point": [
        551,
        0
      ],
      "end_point": [
        589,
        1
      ],
      "strings": []
    },
    "conicalP_def_hyperg": {
      "start_point": [
        600,
        0
      ],
      "end_point": [
        608,
        1
      ],
      "strings": []
    },
    "conicalP_xnear1_hyperg_C": {
      "start_point": [
        619,
        0
      ],
      "end_point": [
        638,
        1
      ],
      "strings": []
    },
    "conicalP_0_V": {
      "start_point": [
        644,
        0
      ],
      "end_point": [
        698,
        1
      ],
      "strings": []
    },
    "conicalP_1_V": {
      "start_point": [
        703,
        0
      ],
      "end_point": [
        756,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_0_e": {
      "start_point": [
        764,
        0
      ],
      "end_point": [
        860,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_1_e": {
      "start_point": [
        865,
        0
      ],
      "end_point": [
        1002,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_half_e": {
      "start_point": [
        1009,
        0
      ],
      "end_point": [
        1047,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_mhalf_e": {
      "start_point": [
        1054,
        0
      ],
      "end_point": [
        1105,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_sph_reg_e": {
      "start_point": [
        1108,
        0
      ],
      "end_point": [
        1221,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_cyl_reg_e": {
      "start_point": [
        1224,
        0
      ],
      "end_point": [
        1338,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_0": {
      "start_point": [
        1345,
        0
      ],
      "end_point": [
        1348,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_1": {
      "start_point": [
        1350,
        0
      ],
      "end_point": [
        1353,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_half": {
      "start_point": [
        1355,
        0
      ],
      "end_point": [
        1358,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_mhalf": {
      "start_point": [
        1360,
        0
      ],
      "end_point": [
        1363,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_sph_reg": {
      "start_point": [
        1365,
        0
      ],
      "end_point": [
        1368,
        1
      ],
      "strings": []
    },
    "gsl_sf_conicalP_cyl_reg": {
      "start_point": [
        1370,
        0
      ],
      "end_point": [
        1373,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/legendre_H3d.c": {
    "legendre_H3d_lnnorm": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "legendre_H3d_series": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "legendre_H3d_CF1": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "legendre_H3d_CF1_ser": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_legendre_H3d_0_e": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_H3d_1_e": {
      "start_point": [
        282,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_H3d_e": {
      "start_point": [
        362,
        0
      ],
      "end_point": [
        491,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_H3d_array": {
      "start_point": [
        494,
        0
      ],
      "end_point": [
        547,
        1
      ],
      "strings": [
        "\"domain error\"",
        "\"overflow\""
      ]
    },
    "gsl_sf_legendre_H3d_0": {
      "start_point": [
        554,
        0
      ],
      "end_point": [
        557,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_H3d_1": {
      "start_point": [
        559,
        0
      ],
      "end_point": [
        562,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_H3d": {
      "start_point": [
        564,
        0
      ],
      "end_point": [
        567,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/legendre_P.c": {
    "gsl_sf_legendre_nlm": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_array_n": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_array_index": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "legendre_sqrts": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/legendre_poly.c": {
    "legendre_Pmm": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_P1_e": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_P2_e": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_P3_e": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Pl_e": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Pl_array": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": [
        "\"domain error\""
      ]
    },
    "gsl_sf_legendre_Pl_deriv_array": {
      "start_point": [
        243,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Plm_e": {
      "start_point": [
        292,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_sphPlm_e": {
      "start_point": [
        358,
        0
      ],
      "end_point": [
        449,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Plm_array": {
      "start_point": [
        453,
        0
      ],
      "end_point": [
        512,
        1
      ],
      "strings": [
        "\"domain error\"",
        "\"overflow\""
      ]
    },
    "gsl_sf_legendre_Plm_deriv_array": {
      "start_point": [
        514,
        0
      ],
      "end_point": [
        590,
        1
      ],
      "strings": [
        "\"m < 0 or m > lmax\"",
        "\"divergence near |x| = 1.0 since m = 1\""
      ]
    },
    "gsl_sf_legendre_sphPlm_array": {
      "start_point": [
        592,
        0
      ],
      "end_point": [
        658,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_legendre_sphPlm_deriv_array": {
      "start_point": [
        661,
        0
      ],
      "end_point": [
        734,
        1
      ],
      "strings": [
        "\"domain\""
      ]
    },
    "gsl_sf_legendre_array_size": {
      "start_point": [
        736,
        0
      ],
      "end_point": [
        740,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_P1": {
      "start_point": [
        748,
        0
      ],
      "end_point": [
        751,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_P2": {
      "start_point": [
        753,
        0
      ],
      "end_point": [
        756,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_P3": {
      "start_point": [
        758,
        0
      ],
      "end_point": [
        761,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Pl": {
      "start_point": [
        763,
        0
      ],
      "end_point": [
        766,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Plm": {
      "start_point": [
        768,
        0
      ],
      "end_point": [
        771,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_sphPlm": {
      "start_point": [
        773,
        0
      ],
      "end_point": [
        776,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/legendre_Qn.c": {
    "legendreQ_CF1_xgt1": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "legendre_Ql_asymp_unif": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Q0_e": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Q1_e": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        275,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Ql_e": {
      "start_point": [
        278,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Q0": {
      "start_point": [
        352,
        0
      ],
      "end_point": [
        355,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Q1": {
      "start_point": [
        357,
        0
      ],
      "end_point": [
        360,
        1
      ],
      "strings": []
    },
    "gsl_sf_legendre_Ql": {
      "start_point": [
        362,
        0
      ],
      "end_point": [
        365,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/legendre_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          72,
          0
        ],
        "end_point": [
          79,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          93,
          0
        ],
        "end_point": [
          197,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          215,
          0
        ],
        "end_point": [
          405,
          1
        ],
        "strings": [
          "\"x is outside [-1,1]\"",
          "\"x cannot equal 1 or -1 for derivative computation\"",
          "\"csphase has invalid value\""
        ]
      },
      {
        "start_point": [
          423,
          0
        ],
        "end_point": [
          589,
          1
        ],
        "strings": [
          "\"x is outside [-1,1]\"",
          "\"x cannot equal 1 or -1 for derivative computation\"",
          "\"csphase has invalid value\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/specfunc/log.c": {
    "gsl_sf_log_e": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "gsl_sf_log_abs_e": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "gsl_sf_complex_log_e": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "gsl_sf_log_1plusx_e": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    },
    "gsl_sf_log_1plusx_mx_e": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": []
    },
    "gsl_sf_log": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": []
    },
    "gsl_sf_log_abs": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    },
    "gsl_sf_log_1plusx": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": []
    },
    "gsl_sf_log_1plusx_mx": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/mathieu_angfunc.c": {
    "gsl_sf_mathieu_ce_e": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "gsl_sf_mathieu_se_e": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    },
    "gsl_sf_mathieu_ce_array": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": [
        "\"Work space not large enough\"",
        "\"domain error\""
      ]
    },
    "gsl_sf_mathieu_se_array": {
      "start_point": [
        271,
        0
      ],
      "end_point": [
        349,
        1
      ],
      "strings": [
        "\"Work space not large enough\"",
        "\"domain error\""
      ]
    },
    "gsl_sf_mathieu_ce": {
      "start_point": [
        356,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": []
    },
    "gsl_sf_mathieu_se": {
      "start_point": [
        361,
        0
      ],
      "end_point": [
        364,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/mathieu_charv.c": {
    "ceer": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "ceor": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "seer": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "seor": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "asymptotic": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "solve_cubic": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": []
    },
    "approx_c": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": [
        "\"Undefined order for Mathieu function\""
      ]
    },
    "approx_s": {
      "start_point": [
        292,
        0
      ],
      "end_point": [
        366,
        1
      ],
      "strings": [
        "\"Undefined order for Mathieu function\""
      ]
    },
    "gsl_sf_mathieu_a_e": {
      "start_point": [
        369,
        0
      ],
      "end_point": [
        492,
        1
      ],
      "strings": [
        "\"Wrong characteristic Mathieu value\""
      ]
    },
    "gsl_sf_mathieu_b_e": {
      "start_point": [
        495,
        0
      ],
      "end_point": [
        624,
        1
      ],
      "strings": [
        "\"Characteristic value undefined for order 0\"",
        "\"Wrong characteristic Mathieu value\""
      ]
    },
    "figi": {
      "start_point": [
        674,
        0
      ],
      "end_point": [
        706,
        1
      ],
      "strings": []
    },
    "gsl_sf_mathieu_a_array": {
      "start_point": [
        709,
        0
      ],
      "end_point": [
        804,
        1
      ],
      "strings": [
        "\"invalid range [order_min,order_max]\"",
        "\"Internal error in tridiagonal Mathieu matrix\""
      ]
    },
    "gsl_sf_mathieu_b_array": {
      "start_point": [
        807,
        0
      ],
      "end_point": [
        874,
        1
      ],
      "strings": [
        "\"invalid range [order_min,order_max]\""
      ]
    },
    "gsl_sf_mathieu_a": {
      "start_point": [
        881,
        0
      ],
      "end_point": [
        884,
        1
      ],
      "strings": []
    },
    "gsl_sf_mathieu_b": {
      "start_point": [
        886,
        0
      ],
      "end_point": [
        889,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/mathieu_coeff.c": {
    "backward_recurse_c": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "backward_recurse_s": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "gsl_sf_mathieu_a_coeff": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "gsl_sf_mathieu_b_coeff": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        347,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/mathieu_radfunc.c": {
    "gsl_sf_mathieu_Mc_e": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"q must be greater than zero\"",
        "\"kind must be 1 or 2\""
      ]
    },
    "gsl_sf_mathieu_Ms_e": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": [
        "\"q must be greater than zero\"",
        "\"kind must be 1 or 2\""
      ]
    },
    "gsl_sf_mathieu_Mc_array": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": [
        "\"q must be greater than zero\"",
        "\"kind must be 1 or 2\""
      ]
    },
    "gsl_sf_mathieu_Ms_array": {
      "start_point": [
        359,
        0
      ],
      "end_point": [
        473,
        1
      ],
      "strings": [
        "\"q must be greater than zero\"",
        "\"kind must be 1 or 2\""
      ]
    },
    "gsl_sf_mathieu_Mc": {
      "start_point": [
        480,
        0
      ],
      "end_point": [
        483,
        1
      ],
      "strings": []
    },
    "gsl_sf_mathieu_Ms": {
      "start_point": [
        485,
        0
      ],
      "end_point": [
        488,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/mathieu_workspace.c": {
    "gsl_sf_mathieu_alloc": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"matrix dimension must be positive integer\"",
        "\"failed to allocate space for workspace\"",
        "\"Error allocating memory for characteristic a values\"",
        "\"Error allocating memory for characteristic b values\"",
        "\"failed to allocate space for diagonal\"",
        "\"failed to allocate space for diagonal\"",
        "\"failed to allocate space for diagonal\"",
        "\"failed to allocate space for diagonal\"",
        "\"failed to allocate space for diagonal\"",
        "\"failed to allocate space for eval\"",
        "\"failed to allocate space for evec\"",
        "\"failed to allocate space for wmat\""
      ]
    },
    "gsl_sf_mathieu_free": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/poch.c": {
    "pochrel_smallx": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "lnpoch_pos": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        275,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnpoch_e": {
      "start_point": [
        280,
        0
      ],
      "end_point": [
        296,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnpoch_sgn_e": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        388,
        1
      ],
      "strings": []
    },
    "gsl_sf_poch_e": {
      "start_point": [
        391,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": []
    },
    "gsl_sf_pochrel_e": {
      "start_point": [
        418,
        0
      ],
      "end_point": [
        444,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnpoch": {
      "start_point": [
        451,
        0
      ],
      "end_point": [
        454,
        1
      ],
      "strings": []
    },
    "gsl_sf_poch": {
      "start_point": [
        456,
        0
      ],
      "end_point": [
        459,
        1
      ],
      "strings": []
    },
    "gsl_sf_pochrel": {
      "start_point": [
        461,
        0
      ],
      "end_point": [
        464,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/pow_int.c": {
    "gsl_sf_pow_int_e": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": [
        "\"overflow\""
      ]
    },
    "gsl_sf_pow_int": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/psi.c": {
    "psi_x": {
      "start_point": [
        378,
        0
      ],
      "end_point": [
        454,
        1
      ],
      "strings": []
    },
    "psi_complex_asymp": {
      "start_point": [
        458,
        0
      ],
      "end_point": [
        492,
        1
      ],
      "strings": []
    },
    "psi_complex_rhp": {
      "start_point": [
        497,
        0
      ],
      "end_point": [
        551,
        1
      ],
      "strings": []
    },
    "psi_n_xg0": {
      "start_point": [
        557,
        0
      ],
      "end_point": [
        575,
        1
      ],
      "strings": []
    },
    "gsl_sf_psi_int_e": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        606,
        1
      ],
      "strings": []
    },
    "gsl_sf_psi_e": {
      "start_point": [
        609,
        0
      ],
      "end_point": [
        613,
        1
      ],
      "strings": []
    },
    "gsl_sf_psi_1piy_e": {
      "start_point": [
        616,
        0
      ],
      "end_point": [
        691,
        1
      ],
      "strings": []
    },
    "gsl_sf_psi_1_int_e": {
      "start_point": [
        694,
        0
      ],
      "end_point": [
        718,
        1
      ],
      "strings": []
    },
    "gsl_sf_psi_1_e": {
      "start_point": [
        721,
        0
      ],
      "end_point": [
        764,
        1
      ],
      "strings": []
    },
    "gsl_sf_psi_n_e": {
      "start_point": [
        767,
        0
      ],
      "end_point": [
        793,
        1
      ],
      "strings": []
    },
    "gsl_sf_complex_psi_e": {
      "start_point": [
        796,
        0
      ],
      "end_point": [
        829,
        1
      ],
      "strings": [
        "\"singularity\""
      ]
    },
    "gsl_sf_psi_int": {
      "start_point": [
        837,
        0
      ],
      "end_point": [
        840,
        1
      ],
      "strings": []
    },
    "gsl_sf_psi": {
      "start_point": [
        842,
        0
      ],
      "end_point": [
        845,
        1
      ],
      "strings": []
    },
    "gsl_sf_psi_1piy": {
      "start_point": [
        847,
        0
      ],
      "end_point": [
        850,
        1
      ],
      "strings": []
    },
    "gsl_sf_psi_1_int": {
      "start_point": [
        852,
        0
      ],
      "end_point": [
        855,
        1
      ],
      "strings": []
    },
    "gsl_sf_psi_1": {
      "start_point": [
        857,
        0
      ],
      "end_point": [
        860,
        1
      ],
      "strings": []
    },
    "gsl_sf_psi_n": {
      "start_point": [
        862,
        0
      ],
      "end_point": [
        865,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/recurse.h": {},
  "gsl/gsl-2.5/specfunc/result.c": {
    "gsl_sf_result_smash_e": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/shint.c": {
    "gsl_sf_Shi_e": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\"underflow\"",
        "\"overflow\""
      ]
    },
    "gsl_sf_Chi_e": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    },
    "gsl_sf_Shi": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "gsl_sf_Chi": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/sincos_pi.c": {
    "sin_pi_taylor": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "cos_pi_taylor": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "gsl_sf_sin_pi_e": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": []
    },
    "gsl_sf_cos_pi_e": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": []
    },
    "gsl_sf_sin_pi": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": []
    },
    "gsl_sf_cos_pi": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/sinint.c": {
    "fg_asymp": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    },
    "gsl_sf_Si_e": {
      "start_point": [
        318,
        0
      ],
      "end_point": [
        350,
        1
      ],
      "strings": []
    },
    "gsl_sf_Ci_e": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        386,
        1
      ],
      "strings": []
    },
    "gsl_sf_Si": {
      "start_point": [
        393,
        0
      ],
      "end_point": [
        396,
        1
      ],
      "strings": []
    },
    "gsl_sf_Ci": {
      "start_point": [
        398,
        0
      ],
      "end_point": [
        401,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/synchrotron.c": {
    "gsl_sf_synchrotron_1_e": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    },
    "gsl_sf_synchrotron_2_e": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    },
    "gsl_sf_synchrotron_1": {
      "start_point": [
        276,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": []
    },
    "gsl_sf_synchrotron_2": {
      "start_point": [
        281,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/test_airy.c": {
    "test_airy": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/test_bessel.c": {
    "test_bessel": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        1199,
        1
      ],
      "strings": [
        "\"  gsl_sf_bessel_Jn_array\"",
        "\"  gsl_sf_bessel_Yn_array\"",
        "\"  gsl_sf_bessel_In_scaled_array\"",
        "\"  gsl_sf_bessel_In_array\"",
        "\"  gsl_sf_bessel_Kn_array\"",
        "\"  gsl_sf_bessel_Kn_scaled_array\"",
        "\"  gsl_sf_bessel_jl_array\"",
        "\"  gsl_sf_bessel_jl_steed_array\"",
        "\"  gsl_sf_bessel_yl_array\"",
        "\"  gsl_sf_bessel_yl_array (lmax=0)\"",
        "\"  gsl_sf_bessel_il_scaled_array\"",
        "\"  gsl_sf_bessel_il_scaled_array (L=0)\"",
        "\"  gsl_sf_bessel_kl_scaled_array\"",
        "\"  gsl_sf_bessel_kl_scaled_array (lmax=0)\"",
        "\"  gsl_sf_sequence_Jnu_e(2)\"",
        "\"  gsl_sf_sequence_Jnu_e(12)\"",
        "\"  gsl_sf_sequence_Jnu_e(1000)\""
      ]
    }
  },
  "gsl/gsl-2.5/specfunc/test_coulomb.c": {
    "test_coulomb": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        441,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(1.0, 5.0, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(1.0, 5.0, lam_F=10, lam_G=8)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(50.0, 120.0, lam_F=4, lam_G=2)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(-1000.0, 1.0, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(-50.0, 5.0, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(-50.0, 1000.0, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(-50.0, 5.0, lam_F=10, lam_G=10)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(-4.0, 5.0, lam_F=0, lam_G=0\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(-4.0, 5.0, lam_F=3, lam_G=3\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(1.0, 2.0, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(1.0, 0.5, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(1.0, 0.5, lam_F=0.5, lam_G=0.5)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(1.0, 0.5, lam_F=0.1, lam_G=0.1)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(8.0, 1.05, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(8.0, 1.05, lam_F=0.1, lam_G=0.1)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(50.0, 0.1, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(10.0, 5.0, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(25.0, 10.0, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(1.0, 9.2, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(10.0, 10.0, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(100.0, 1.0, lam_F=0, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(3.25, 0.0, lam_F=1, lam_G=1)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(3.25, 0.0, lam_F=1, lam_G=0)\"",
        "\"%s\"",
        "\"  gsl_sf_coulomb_wave_FG_e(1.2693881947287221e-07, 0.0, lam_F=37, lam_G=36)\""
      ]
    }
  },
  "gsl/gsl-2.5/specfunc/test_dilog.c": {
    "test_dilog": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/test_gamma.c": {
    "test_gamma": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        392,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/test_hermite.c": {
    "test_hermite_id1": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": [
        "\"identity1 phys n=%d x=%g y=%g\"",
        "\"identity1 prob n=%d x=%g y=%g\""
      ]
    },
    "test_hermite": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        494,
        1
      ],
      "strings": [
        "\"gsl_sf_hermite_prob_array(0, 0.75)\"",
        "\"gsl_sf_hermite_prob_array(1, 0.75)\"",
        "\"gsl_sf_hermite_prob_array(100, 0.75)\"",
        "\"gsl_sf_hermite_prob_array_der(0, 100, 0.75)\"",
        "\"gsl_sf_hermite_prob_array_der(1000, 100, 0.75)\"",
        "\"gsl_sf_hermite_prob_array(23, 37, 0.75)\"",
        "\"gsl_sf_hermite_prob_der_array(100, 50, 0.75)\"",
        "\"gsl_sf_hermite_phys_array(0, 0.75)\"",
        "\"gsl_sf_hermite_phys_array(1, 0.75)\"",
        "\"gsl_sf_hermite_phys_array(100, 0.75)\"",
        "\"gsl_sf_hermite_phys_array_der(0, 100, 0.75)\"",
        "\"gsl_sf_hermite_phys_array_der(1000, 100, 0.75)\"",
        "\"gsl_sf_hermite_phys_array(23, 37, 0.75)\"",
        "\"gsl_sf_hermite_phys_der_array(100, 50, 0.75)\"",
        "\"gsl_sf_hermite_func_array(100, 0.75)\"",
        "\"sanity check failed! (gsl_sf_hermite_prob_zero)\\n\"",
        "\"gsl_sf_hermite_prob_zero(n, m, r)\"",
        "\"sanity check failed! (gsl_sf_hermite_phys_zero)\\n\"",
        "\"gsl_sf_hermite_phys_zero(n, m, r)\""
      ]
    }
  },
  "gsl/gsl-2.5/specfunc/test_hyperg.c": {
    "test_hyperg": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        695,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/test_legendre.c": {
    "test_legendre_dx": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "test_legendre_sum": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "test_legendre_sum_deriv": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "test_legendre_sum_deriv2": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "test_value": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"%s %s lmax=%zu l=%zu m=%zu\""
      ]
    },
    "test_factor_spharm": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "test_factor_full": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "test_legendre_compare": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": [
        "\"%s %s l=%zu m=%zu\""
      ]
    },
    "test_legendre_schmidt": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        321,
        1
      ],
      "strings": [
        "\"x=0.5\"",
        "\"x=0.5\"",
        "\"x=0.5\"",
        "\"x=0.5\"",
        "\"x=0.5\"",
        "\"x=0.5\"",
        "\"x=0.5\"",
        "\"x=0.5\"",
        "\"x=0.5\"",
        "\"x=0.1\"",
        "\"x=0.1\"",
        "\"x=0.1\"",
        "\"deriv x=0.15\"",
        "\"deriv x=0.15\"",
        "\"deriv x=0.15\"",
        "\"deriv x=0.15\"",
        "\"deriv2 x=0.23\"",
        "\"deriv2 x=0.23\"",
        "\"deriv2 x=0.23\"",
        "\"deriv2 x=0.23\"",
        "\"deriv2 x=0.23\"",
        "\"%s l=%zu, x=%f, sum=%.12e\"",
        "\"%s deriv i=%zu\"",
        "\"%s deriv_alt i=%zu\"",
        "\"%s deriv_alt x=%f i=%zu\"",
        "\"%s deriv l=%zu, x=%f, sum=%.12e\"",
        "\"%s deriv2 i=%zu\"",
        "\"%s deriv2 i=%zu\"",
        "\"%s deriv2 l=%zu, x=%f, sum=%.12e\"",
        "\"%s deriv2 l=%zu, x=%f, sum=%.12e\""
      ]
    },
    "test_legendre_norm": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        406,
        1
      ],
      "strings": [
        "\"x=0.45\"",
        "\"x=0.45\"",
        "\"x=0.45\"",
        "\"x=0.45\"",
        "\"x=0.45\"",
        "\"x=0.45\"",
        "\"x=0.45\"",
        "\"x=0.45\"",
        "\"x=0.45\"",
        "\"x=0.45\"",
        "\"p\"",
        "\"deriv p\"",
        "\"deriv dp\"",
        "\"deriv2 p\"",
        "\"deriv2 dp\"",
        "\"deriv2 d2p\""
      ]
    },
    "test_legendre_unnorm": {
      "start_point": [
        425,
        0
      ],
      "end_point": [
        516,
        1
      ],
      "strings": [
        "\"legendre unnorm l=%zu, m=0, x=%f\"",
        "\"legendre unnorm deriv l=%zu, m=0, x=%f\"",
        "\"legendre unnorm deriv2 l=%zu, m=0, x=%f\"",
        "\"legendre unnorm deriv2 l=%zu, m=0, x=%f\"",
        "\"legendre unnorm l=%zu, m=%zu, x=%f\"",
        "\"legendre unnorm deriv l=%zu, m=%zu, x=%f\"",
        "\"legendre unnorm deriv2 l=%zu, m=%zu, x=%f\"",
        "\"%s compare l=%zu, m=%zu, x=%f\""
      ]
    },
    "test_legendre_all": {
      "start_point": [
        518,
        0
      ],
      "end_point": [
        539,
        1
      ],
      "strings": [
        "\"schmidt csphase=1\"",
        "\"schmidt csphase=-1\"",
        "\"spharm csphase=1\"",
        "\"spharm csphase=-1\"",
        "\"full csphase=1\"",
        "\"full csphase=-1\"",
        "\"unnorm csphase=1\""
      ]
    },
    "test_legendre": {
      "start_point": [
        541,
        0
      ],
      "end_point": [
        1083,
        1
      ],
      "strings": [
        "\"gsl_sf_legendre_Pl_array(100, 0.5)\"",
        "\"gsl_sf_legendre_Pl_deriv_array(100, 0.5)\"",
        "\"gsl_sf_legendre_Pl_deriv_array(10, 1.0)\"",
        "\"gsl_sf_legendre_Pl_deriv_array(10, 1.0 - 1.0e-11)\"",
        "\"gsl_sf_legendre_Pl_deriv_array(10, -1.0)\"",
        "\"gsl_sf_legendre_Pl_deriv_array(10, -1.0 + 1.0e-11)\"",
        "\"gsl_sf_legendre_Plm_deriv_array(100, 2, -1.0 + 2^(-50)\"",
        "\"gsl_sf_legendre_Plm_deriv_array(100, 2, 1.0 - 2^(-50)\"",
        "\"gsl_sf_legendre_Plm_array(100, 5, 0.5)\"",
        "\"gsl_sf_legendre_Plm_array(100, 5, 0.999)\"",
        "\"gsl_sf_legendre_Plm_array(100, 5, -0.999)\"",
        "\"gsl_sf_legendre_Plm_deriv_array(100, 2, 0.999)\"",
        "\"gsl_sf_legendre_Plm_deriv_array(100, 2, 1.0 - 1.0e-15)\"",
        "\"gsl_sf_legendre_Plm_deriv_array(100, 2, -1.0 + 1.0e-15)\"",
        "\"gsl_sf_legendre_Plm_deriv_array(100, 5, 0.999)\"",
        "\"gsl_sf_legendre_sphPlm_array(100, 5, 0.5)\"",
        "\"gsl_sf_legendre_sphPlm_array(100, 2, 1.0 - 2^(-50))\"",
        "\"gsl_sf_legendre_sphPlm_array(100, 2, -1.0 + 2^(-50))\"",
        "\"gsl_sf_legendre_sphPlm_deriv_array(100, 0, 0.5)\"",
        "\"gsl_sf_legendre_sphPlm_deriv_array(100, 1, 0.5)\"",
        "\"gsl_sf_legendre_sphPlm_deriv_array(100, 1, 1.0 - 2^(-50))\"",
        "\"gsl_sf_legendre_sphPlm_deriv_array(100, 2, 0.5)\"",
        "\"gsl_sf_legendre_sphPlm_deriv_array(100, 5, 0.5)\"",
        "\"gsl_sf_legendre_sphPlm_deriv_array(100, 5, 1.0 - 2^(-50))\"",
        "\"gsl_sf_legendre_sphPlm_deriv_array(100, 5, -1.0 + 2^(-50))\"",
        "\"  gsl_sf_legendre_H3d_array(100, 1.0, 3.0)\""
      ]
    }
  },
  "gsl/gsl-2.5/specfunc/test_mathieu.c": {
    "test_mathieu": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": [
        "\"gsl_sf_mathieu_ce_array\"",
        "\"gsl_sf_mathieu_ce_array\"",
        "\"gsl_sf_mathieu_se_array\""
      ]
    }
  },
  "gsl/gsl-2.5/specfunc/test_sf.c": {
    "test_sf_frac_diff": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "test_sf_check_result": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"  expected: %20.16e\\n\"",
        "\"  obtained: %20.16e +/- %.16e (rel=%g)\\n\"",
        "\"  fracdiff: %20.16e\\n\"",
        "\" tolerance: %20.16e\\n\"",
        "\"  value/expected not consistent within reported error\\n\"",
        "\"  reported error negative\\n\"",
        "\"  reported error is bad\\n\"",
        "\"  reported error is much too big\\n\"",
        "\"  value not within tolerance of expected value\\n\""
      ]
    },
    "test_sf_check_e10": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": [
        "\"  expected exponent: 10^%d\\n\"",
        "\"  obtained exponent: 10^%d\"",
        "\"  exponent is incorrect\\n\""
      ]
    },
    "test_sf_check_val": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": [
        "\"  expected: %20.16e\\n\"",
        "\"  obtained: %20.16e\\n\"",
        "\"  fracdiff: %20.16e\\n\"",
        "\"  value not within tolerance of expected value\\n\""
      ]
    },
    "test_sf_check_result_relax": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": [
        "\"  expected: %20.16e\\n\"",
        "\"  obtained: %20.16e +/- %.16e  (rel=%g)\\n\"",
        "\"  fracdiff: %20.16e\\n\"",
        "\"  value/expected not consistent MAX(tol,SINGLE_PREC)\\n\"",
        "\"  reported error negative\\n\"",
        "\"  reported error is bad\\n\"",
        "\"  value not within tolerance of expected value\\n\""
      ]
    },
    "test_sf_check_return": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": [
        "\"  unexpected return code: %d\\n\""
      ]
    },
    "test_sf": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"  %22.18e  %22.18e\\n\""
      ]
    },
    "test_sf_e10": {
      "start_point": [
        244,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"  %22.18e  %22.18e  10^%d\\n\""
      ]
    },
    "test_sf_val": {
      "start_point": [
        269,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"  %22.18e\\n\""
      ]
    },
    "test_sf_rlx": {
      "start_point": [
        289,
        0
      ],
      "end_point": [
        308,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"  %22.18e  %22.18e\\n\""
      ]
    },
    "test_sf_2": {
      "start_point": [
        311,
        0
      ],
      "end_point": [
        333,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"  %22.18e  %22.18e\\n\"",
        "\"  %22.18e  %22.18e\\n\""
      ]
    },
    "test_sf_sgn": {
      "start_point": [
        335,
        0
      ],
      "end_point": [
        358,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"  %22.18e  %22.18e\\n\""
      ]
    },
    "test_clausen": {
      "start_point": [
        360,
        0
      ],
      "end_point": [
        372,
        1
      ],
      "strings": []
    },
    "test_coupling": {
      "start_point": [
        375,
        0
      ],
      "end_point": [
        487,
        1
      ],
      "strings": []
    },
    "test_dawson": {
      "start_point": [
        489,
        0
      ],
      "end_point": [
        500,
        1
      ],
      "strings": []
    },
    "test_debye": {
      "start_point": [
        502,
        0
      ],
      "end_point": [
        532,
        1
      ],
      "strings": []
    },
    "test_elementary": {
      "start_point": [
        535,
        0
      ],
      "end_point": [
        550,
        1
      ],
      "strings": []
    },
    "test_ellint": {
      "start_point": [
        553,
        0
      ],
      "end_point": [
        883,
        1
      ],
      "strings": []
    },
    "test_erf": {
      "start_point": [
        886,
        0
      ],
      "end_point": [
        936,
        1
      ],
      "strings": []
    },
    "test_exp": {
      "start_point": [
        939,
        0
      ],
      "end_point": [
        1107,
        1
      ],
      "strings": [
        "\"  gsl_sf_exp_e10_e(1.0, &re)\"",
        "\"  gsl_sf_exp_e10_e(2000.0, &re)\"",
        "\"  gsl_sf_exp_err_e10_e(1.0, TEST_SQRT_TOL0, &re)\"",
        "\"  gsl_sf_exp_err_e10_e(2000.0, 1.0e-10, &re)\"",
        "\"gsl_sf_exp_mult_e10_e(1.0, 1.0, &re)\"",
        "\"gsl_sf_exp_mult_e10_e(1000.0, 1.0e+200, &re)\"",
        "\"gsl_sf_exp_mult_err_e10_e(1.0, TEST_TOL0, 1.0, TEST_TOL0, &re)\"",
        "\"gsl_sf_exp_mult_err_e10_e(1.0e-12, 1.0e+200, &re)\""
      ]
    },
    "test_expint": {
      "start_point": [
        1110,
        0
      ],
      "end_point": [
        1331,
        1
      ],
      "strings": []
    },
    "test_fermidirac": {
      "start_point": [
        1334,
        0
      ],
      "end_point": [
        1478,
        1
      ],
      "strings": []
    },
    "test_gegen": {
      "start_point": [
        1481,
        0
      ],
      "end_point": [
        1527,
        1
      ],
      "strings": [
        "\"  gsl_sf_gegenpoly_array\""
      ]
    },
    "test_jac": {
      "start_point": [
        1530,
        0
      ],
      "end_point": [
        1861,
        1
      ],
      "strings": [
        "\"gsl_sf_elljac_e(0.5|0.5) sn\"",
        "\"gsl_sf_elljac_e(0.5|0.5) cn\"",
        "\"gsl_sf_elljac_e(0.5|0.5) dn\"",
        "\"  gsl_sf_elljac_e(0.5|0.5)\"",
        "\"gsl_sf_elljac_e(1.0|0.3) sn\"",
        "\"gsl_sf_elljac_e(1.0|0.3) cn\"",
        "\"gsl_sf_elljac_e(1.0|0.3) dn\"",
        "\"  gsl_sf_elljac_e(1.0|0.3)\"",
        "\"gsl_sf_elljac_e(1.0|0.6) sn\"",
        "\"gsl_sf_elljac_e(1.0|0.6) cn\"",
        "\"gsl_sf_elljac_e(1.0|0.6) dn\"",
        "\"  gsl_sf_elljac_e(1.0|0.6)\"",
        "\" gsl_sf_elljac_e(3.0|0.6) sn\"",
        "\" gsl_sf_elljac_e(3.0|0.6) cn\"",
        "\" gsl_sf_elljac_e(3.0|0.6) dn\"",
        "\"  gsl_sf_elljac_e(3.0|0.6)\"",
        "\"gsl_sf_elljac_e(2.0|0.999999) sn\"",
        "\"gsl_sf_elljac_e(2.0|0.999999) cn\"",
        "\"gsl_sf_elljac_e(2.0|0.999999) dn\"",
        "\"  gsl_sf_elljac_e(2.0|0.999999)\"",
        "\"gsl_sf_elljac_e(1.69..|0.27..) sn\"",
        "\"gsl_sf_elljac_e(1.69..|0.27..) cn\"",
        "\"gsl_sf_elljac_e(1.69..|0.27..) dn\"",
        "\"  gsl_sf_elljac_e(1.69695970624443|0.270378013104138)\"",
        "\"gsl_sf_elljac_e(0|0.1) sn\"",
        "\"gsl_sf_elljac_e(0|0.1) cn\"",
        "\"gsl_sf_elljac_e(0|0.1) dn\"",
        "\"  gsl_sf_elljac_e(0|0.1)\"",
        "\"gsl_sf_elljac_e(-1e-10|0.1) sn\"",
        "\"gsl_sf_elljac_e(-1e-10|0.1) cn\"",
        "\"gsl_sf_elljac_e(-1e-10|0.1) dn\"",
        "\"  gsl_sf_elljac_e(-1e-10|0.1)\"",
        "\"gsl_sf_elljac_e(1e-10|0.1) sn\"",
        "\"gsl_sf_elljac_e(1e-10|0.1) cn\"",
        "\"gsl_sf_elljac_e(1e-10|0.1) dn\"",
        "\"  gsl_sf_elljac_e(1e-10|0.1)\"",
        "\"gsl_sf_elljac_e(1e-30|0.1) sn\"",
        "\"gsl_sf_elljac_e(1e-30|0.1) cn\"",
        "\"gsl_sf_elljac_e(1e-30|0.1) dn\"",
        "\"  gsl_sf_elljac_e(1e-30|0.1)\"",
        "\"gsl_sf_elljac_e(K/2-1e-10|0.1) sn\"",
        "\"gsl_sf_elljac_e(K/2-1e-10|0.1) cn\"",
        "\"gsl_sf_elljac_e(K/2-1e-10|0.1) dn\"",
        "\"  gsl_sf_elljac_e(K/2-1e-10|0.1)\"",
        "\"gsl_sf_elljac_e(K/2|0.1) sn\"",
        "\"gsl_sf_elljac_e(K/2|0.1) cn\"",
        "\"gsl_sf_elljac_e(K/2|0.1) dn\"",
        "\"  gsl_sf_elljac_e(K/2|0.1)\"",
        "\"gsl_sf_elljac_e(K/2+1e-10|0.1) sn\"",
        "\"gsl_sf_elljac_e(K/2+1e-10|0.1) cn\"",
        "\"gsl_sf_elljac_e(K/2+1e-10|0.1) dn\"",
        "\"  gsl_sf_elljac_e(K/2+1e-10|0.1)\"",
        "\"gsl_sf_elljac_e(K-1e-10|0.1) sn\"",
        "\"gsl_sf_elljac_e(K-1e-10|0.1) cn\"",
        "\"gsl_sf_elljac_e(K-1e-10|0.1) dn\"",
        "\"  gsl_sf_elljac_e(K-1e-10|0.1)\"",
        "\"gsl_sf_elljac_e(K|0.1) sn\"",
        "\"gsl_sf_elljac_e(K|0.1) cn\"",
        "\"gsl_sf_elljac_e(K|0.1) dn\"",
        "\"  gsl_sf_elljac_e(K|0.1)\"",
        "\"gsl_sf_elljac_e(K+1e-10|0.1) sn\"",
        "\"gsl_sf_elljac_e(K+1e-10|0.1) cn\"",
        "\"gsl_sf_elljac_e(K+1e-10|0.1) dn\"",
        "\"  gsl_sf_elljac_e(K+1e-10|0.1)\"",
        "\"gsl_sf_elljac_e(3K/2|0.1) sn\"",
        "\"gsl_sf_elljac_e(3K/2|0.1) cn\"",
        "\"gsl_sf_elljac_e(3K/2|0.1) dn\"",
        "\"  gsl_sf_elljac_e(3K/2|0.1)\"",
        "\"gsl_sf_elljac_e(2K-1e-10|0.1) sn\"",
        "\"gsl_sf_elljac_e(2K-1e-10|0.1) cn\"",
        "\"gsl_sf_elljac_e(2K-1e-10|0.1) dn\"",
        "\"  gsl_sf_elljac_e(2K-1e-10|0.1)\"",
        "\"gsl_sf_elljac_e(2K|0.1) sn\"",
        "\"gsl_sf_elljac_e(2K|0.1) cn\"",
        "\"gsl_sf_elljac_e(2K|0.1) dn\"",
        "\"  gsl_sf_elljac_e(2K|0.1)\"",
        "\"gsl_sf_elljac_e(2K+1e-10|0.1) sn\"",
        "\"gsl_sf_elljac_e(2K+1e-10|0.1) cn\"",
        "\"gsl_sf_elljac_e(2K+1e-10|0.1) dn\"",
        "\"  gsl_sf_elljac_e(2K+1e-10|0.1)\"",
        "\"gsl_sf_elljac_e(5K/2|0.1) sn\"",
        "\"gsl_sf_elljac_e(5K/2|0.1) cn\"",
        "\"gsl_sf_elljac_e(5K/2|0.1) dn\"",
        "\"  gsl_sf_elljac_e(5K/2|0.1)\"",
        "\"gsl_sf_elljac_e(3K-1e-10|0.1) sn\"",
        "\"gsl_sf_elljac_e(3K-1e-10|0.1) cn\"",
        "\"gsl_sf_elljac_e(3K-1e-10|0.1) dn\"",
        "\"  gsl_sf_elljac_e(3K-1e-10|0.1)\"",
        "\"gsl_sf_elljac_e(3K|0.1) sn\"",
        "\"gsl_sf_elljac_e(3K|0.1) cn\"",
        "\"gsl_sf_elljac_e(3K|0.1) dn\"",
        "\"  gsl_sf_elljac_e(3K|0.1)\"",
        "\"gsl_sf_elljac_e(3K+1e-10|0.1) sn\"",
        "\"gsl_sf_elljac_e(3K+1e-10|0.1) cn\"",
        "\"gsl_sf_elljac_e(3K+1e-10|0.1) dn\"",
        "\"  gsl_sf_elljac_e(3K+1e-10|0.1)\"",
        "\"gsl_sf_elljac_e(7K/2|0.1) sn\"",
        "\"gsl_sf_elljac_e(7K/2|0.1) cn\"",
        "\"gsl_sf_elljac_e(7K/2|0.1) dn\"",
        "\"  gsl_sf_elljac_e(7K/2|0.1)\"",
        "\"gsl_sf_elljac_e(4K-1e-10|0.1) sn\"",
        "\"gsl_sf_elljac_e(4K-1e-10|0.1) cn\"",
        "\"gsl_sf_elljac_e(4K-1e-10|0.1) dn\"",
        "\"  gsl_sf_elljac_e(4K-1e-10|0.1)\"",
        "\"gsl_sf_elljac_e(4K|0.1) sn\"",
        "\"gsl_sf_elljac_e(4K|0.1) cn\"",
        "\"gsl_sf_elljac_e(4K|0.1) dn\"",
        "\"  gsl_sf_elljac_e(4K|0.1)\"",
        "\"gsl_sf_elljac_e(9K/2|0.1) sn\"",
        "\"gsl_sf_elljac_e(9K/2|0.1) cn\"",
        "\"gsl_sf_elljac_e(9K/2|0.1) dn\"",
        "\"  gsl_sf_elljac_e(9K/2|0.1)\"",
        "\"gsl_sf_elljac_e(-K/2|0.1) sn\"",
        "\"gsl_sf_elljac_e(-K/2|0.1) cn\"",
        "\"gsl_sf_elljac_e(-K/2|0.1) dn\"",
        "\"  gsl_sf_elljac_e(-K/2|0.1)\"",
        "\"gsl_sf_elljac_e(-K|0.1) sn\"",
        "\"gsl_sf_elljac_e(-K|0.1) cn\"",
        "\"gsl_sf_elljac_e(-K|0.1) dn\"",
        "\"  gsl_sf_elljac_e(-K|0.1)\"",
        "\"gsl_sf_elljac_e(-3K/2|0.1) sn\"",
        "\"gsl_sf_elljac_e(-3K/2|0.1) cn\"",
        "\"gsl_sf_elljac_e(-3K/2|0.1) dn\"",
        "\"  gsl_sf_elljac_e(-3K/2|0.1)\"",
        "\"gsl_sf_elljac_e(-2K|0.1) sn\"",
        "\"gsl_sf_elljac_e(-2K|0.1) cn\"",
        "\"gsl_sf_elljac_e(-2K|0.1) dn\"",
        "\"  gsl_sf_elljac_e(-2K|0.1)\"",
        "\"gsl_sf_elljac_e(-5K/2|0.1) sn\"",
        "\"gsl_sf_elljac_e(-5K/2|0.1) cn\"",
        "\"gsl_sf_elljac_e(-5K/2|0.1) dn\"",
        "\"  gsl_sf_elljac_e(-5K/2|0.1)\"",
        "\"gsl_sf_elljac_e(-3K|0.1) sn\"",
        "\"gsl_sf_elljac_e(-3K|0.1) cn\"",
        "\"gsl_sf_elljac_e(-3K|0.1) dn\"",
        "\"  gsl_sf_elljac_e(-3K|0.1)\"",
        "\"gsl_sf_elljac_e(-7K/2|0.1) sn\"",
        "\"gsl_sf_elljac_e(-7K/2|0.1) cn\"",
        "\"gsl_sf_elljac_e(-7K/2|0.1) dn\"",
        "\"  gsl_sf_elljac_e(-7K/2|0.1)\"",
        "\"gsl_sf_elljac_e(-4K|0.1) sn\"",
        "\"gsl_sf_elljac_e(-4K|0.1) cn\"",
        "\"gsl_sf_elljac_e(-4K|0.1) dn\"",
        "\"  gsl_sf_elljac_e(-4K|0.1)\""
      ]
    },
    "test_laguerre": {
      "start_point": [
        1864,
        0
      ],
      "end_point": [
        1954,
        1
      ],
      "strings": []
    },
    "test_lambert": {
      "start_point": [
        1957,
        0
      ],
      "end_point": [
        1995,
        1
      ],
      "strings": []
    },
    "test_log": {
      "start_point": [
        1998,
        0
      ],
      "end_point": [
        2062,
        1
      ],
      "strings": []
    },
    "test_pow_int": {
      "start_point": [
        2065,
        0
      ],
      "end_point": [
        2093,
        1
      ],
      "strings": []
    },
    "test_psi": {
      "start_point": [
        2095,
        0
      ],
      "end_point": [
        2178,
        1
      ],
      "strings": []
    },
    "test_psi_complex": {
      "start_point": [
        2181,
        0
      ],
      "end_point": [
        2223,
        1
      ],
      "strings": []
    },
    "test_synch": {
      "start_point": [
        2228,
        0
      ],
      "end_point": [
        2244,
        1
      ],
      "strings": []
    },
    "test_transport": {
      "start_point": [
        2247,
        0
      ],
      "end_point": [
        2293,
        1
      ],
      "strings": []
    },
    "test_trig": {
      "start_point": [
        2296,
        0
      ],
      "end_point": [
        2561,
        1
      ],
      "strings": [
        "\"  gsl_angle_restrict_pos_e: theta =  11/2 Pi\"",
        "\"  gsl_angle_restrict_pos_e: theta = -11/2 Pi\"",
        "\"  gsl_angle_restrict_pos_e: theta = 50000.0 + 1.0/65536.0\"",
        "\"  gsl_angle_restrict_pos_e: theta = 5000000.0 + 1.0/65536.0\"",
        "\"  gsl_angle_restrict_symm_e: theta =  11/2 Pi\"",
        "\"  gsl_angle_restrict_symm_e: theta = -11/2 Pi\"",
        "\"  gsl_angle_restrict_symm_e: theta = -9/2 Pi\"",
        "\"  gsl_angle_restrict_symm_e: theta =  3/2 Pi\"",
        "\"  gsl_angle_restrict_symm_e: theta = -3/2 Pi\"",
        "\"  gsl_angle_restrict_symm_e: theta = 50000.0 + 1.0/65536.0\""
      ]
    },
    "test_zeta": {
      "start_point": [
        2582,
        0
      ],
      "end_point": [
        2691,
        1
      ],
      "strings": []
    },
    "test_results": {
      "start_point": [
        2693,
        0
      ],
      "end_point": [
        2725,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        2728,
        0
      ],
      "end_point": [
        2769,
        1
      ],
      "strings": [
        "\"Airy Functions\"",
        "\"Bessel Functions\"",
        "\"Clausen Integral\"",
        "\"Coulomb Wave Functions\"",
        "\"Coupling Coefficients\"",
        "\"Dawson Integral\"",
        "\"Debye Functions\"",
        "\"Dilogarithm\"",
        "\"Elementary Functions (Misc)\"",
        "\"Elliptic Integrals\"",
        "\"Elliptic Functions (Jacobi)\"",
        "\"Error Functions\"",
        "\"Exponential Functions\"",
        "\"Exponential/Sine/Cosine Integrals\"",
        "\"Fermi-Dirac Functions\"",
        "\"Gamma Functions\"",
        "\"Gegenbauer Polynomials\"",
        "\"Hermite Functions\"",
        "\"Hypergeometric Functions\"",
        "\"Laguerre Polynomials\"",
        "\"Lambert W Functions\"",
        "\"Legendre Functions\"",
        "\"Logarithm\"",
        "\"Mathieu Functions\"",
        "\"Integer Powers\"",
        "\"Psi Functions\"",
        "\"Psi Function for complex argument\"",
        "\"sin_pi and cos_pi\"",
        "\"Synchrotron Functions\"",
        "\"Transport Functions\"",
        "\"Trigonometric and Related Functions\"",
        "\"Zeta Functions\"",
        "\"Result Methods\""
      ]
    }
  },
  "gsl/gsl-2.5/specfunc/test_sf.h": {},
  "gsl/gsl-2.5/specfunc/test_sincos_pi.c": {
    "test_sincos_pi": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        393,
        1
      ],
      "strings": [
        "\"ix+fx= %.18e\\n\"",
        "\"ix+fx= %.18e\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/specfunc/transport.c": {
    "transport_sumexp": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "gsl_sf_transport_2_e": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": []
    },
    "gsl_sf_transport_3_e": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": []
    },
    "gsl_sf_transport_4_e": {
      "start_point": [
        316,
        0
      ],
      "end_point": [
        390,
        1
      ],
      "strings": []
    },
    "gsl_sf_transport_5_e": {
      "start_point": [
        393,
        0
      ],
      "end_point": [
        467,
        1
      ],
      "strings": []
    },
    "gsl_sf_transport_2": {
      "start_point": [
        473,
        0
      ],
      "end_point": [
        476,
        1
      ],
      "strings": []
    },
    "gsl_sf_transport_3": {
      "start_point": [
        478,
        0
      ],
      "end_point": [
        481,
        1
      ],
      "strings": []
    },
    "gsl_sf_transport_4": {
      "start_point": [
        483,
        0
      ],
      "end_point": [
        486,
        1
      ],
      "strings": []
    },
    "gsl_sf_transport_5": {
      "start_point": [
        488,
        0
      ],
      "end_point": [
        491,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/trig.c": {
    "sinh_series": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "cosh_m1_series": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "gsl_sf_sin_e": {
      "start_point": [
        161,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": []
    },
    "gsl_sf_cos_e": {
      "start_point": [
        234,
        0
      ],
      "end_point": [
        307,
        1
      ],
      "strings": []
    },
    "gsl_sf_hypot_e": {
      "start_point": [
        310,
        0
      ],
      "end_point": [
        337,
        1
      ],
      "strings": []
    },
    "gsl_sf_complex_sin_e": {
      "start_point": [
        340,
        0
      ],
      "end_point": [
        370,
        1
      ],
      "strings": []
    },
    "gsl_sf_complex_cos_e": {
      "start_point": [
        373,
        0
      ],
      "end_point": [
        403,
        1
      ],
      "strings": []
    },
    "gsl_sf_complex_logsin_e": {
      "start_point": [
        406,
        0
      ],
      "end_point": [
        435,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnsinh_e": {
      "start_point": [
        438,
        0
      ],
      "end_point": [
        463,
        1
      ],
      "strings": []
    },
    "gsl_sf_lncosh_e": {
      "start_point": [
        466,
        0
      ],
      "end_point": [
        485,
        1
      ],
      "strings": []
    },
    "gsl_sf_polar_to_rect": {
      "start_point": [
        498,
        0
      ],
      "end_point": [
        513,
        1
      ],
      "strings": []
    },
    "gsl_sf_rect_to_polar": {
      "start_point": [
        516,
        0
      ],
      "end_point": [
        529,
        1
      ],
      "strings": []
    },
    "gsl_sf_angle_restrict_symm_err_e": {
      "start_point": [
        532,
        0
      ],
      "end_point": [
        562,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_angle_restrict_pos_err_e": {
      "start_point": [
        565,
        0
      ],
      "end_point": [
        598,
        1
      ],
      "strings": [
        "\"error\""
      ]
    },
    "gsl_sf_angle_restrict_symm_e": {
      "start_point": [
        601,
        0
      ],
      "end_point": [
        607,
        1
      ],
      "strings": []
    },
    "gsl_sf_angle_restrict_pos_e": {
      "start_point": [
        610,
        0
      ],
      "end_point": [
        616,
        1
      ],
      "strings": []
    },
    "gsl_sf_sin_err_e": {
      "start_point": [
        619,
        0
      ],
      "end_point": [
        625,
        1
      ],
      "strings": []
    },
    "gsl_sf_cos_err_e": {
      "start_point": [
        628,
        0
      ],
      "end_point": [
        634,
        1
      ],
      "strings": []
    },
    "gsl_sf_sin_pi_x_e": {
      "start_point": [
        638,
        0
      ],
      "end_point": [
        677,
        1
      ],
      "strings": []
    },
    "gsl_sf_sinc_e": {
      "start_point": [
        681,
        0
      ],
      "end_point": [
        715,
        1
      ],
      "strings": []
    },
    "gsl_sf_sin": {
      "start_point": [
        723,
        0
      ],
      "end_point": [
        726,
        1
      ],
      "strings": []
    },
    "gsl_sf_cos": {
      "start_point": [
        728,
        0
      ],
      "end_point": [
        731,
        1
      ],
      "strings": []
    },
    "gsl_sf_hypot": {
      "start_point": [
        733,
        0
      ],
      "end_point": [
        736,
        1
      ],
      "strings": []
    },
    "gsl_sf_lnsinh": {
      "start_point": [
        738,
        0
      ],
      "end_point": [
        741,
        1
      ],
      "strings": []
    },
    "gsl_sf_lncosh": {
      "start_point": [
        743,
        0
      ],
      "end_point": [
        746,
        1
      ],
      "strings": []
    },
    "gsl_sf_angle_restrict_symm": {
      "start_point": [
        748,
        0
      ],
      "end_point": [
        752,
        1
      ],
      "strings": []
    },
    "gsl_sf_angle_restrict_pos": {
      "start_point": [
        754,
        0
      ],
      "end_point": [
        758,
        1
      ],
      "strings": []
    },
    "gsl_sf_sin_pi_x": {
      "start_point": [
        761,
        0
      ],
      "end_point": [
        764,
        1
      ],
      "strings": []
    },
    "gsl_sf_sinc": {
      "start_point": [
        767,
        0
      ],
      "end_point": [
        770,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/specfunc/zeta.c": {
    "riemann_zeta_sgt0": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "riemann_zeta1ms_slt0": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "riemann_zeta_minus_1_intermediate_s": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    },
    "riemann_zeta_minus1_large_s": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    },
    "gsl_sf_hzeta_e": {
      "start_point": [
        713,
        0
      ],
      "end_point": [
        772,
        1
      ],
      "strings": []
    },
    "gsl_sf_zeta_e": {
      "start_point": [
        775,
        0
      ],
      "end_point": [
        849,
        1
      ],
      "strings": []
    },
    "gsl_sf_zeta_int_e": {
      "start_point": [
        852,
        0
      ],
      "end_point": [
        884,
        1
      ],
      "strings": []
    },
    "gsl_sf_zetam1_e": {
      "start_point": [
        887,
        0
      ],
      "end_point": [
        903,
        1
      ],
      "strings": []
    },
    "gsl_sf_zetam1_int_e": {
      "start_point": [
        906,
        0
      ],
      "end_point": [
        936,
        1
      ],
      "strings": []
    },
    "gsl_sf_eta_int_e": {
      "start_point": [
        939,
        0
      ],
      "end_point": [
        976,
        1
      ],
      "strings": []
    },
    "gsl_sf_eta_e": {
      "start_point": [
        979,
        0
      ],
      "end_point": [
        1009,
        1
      ],
      "strings": []
    },
    "gsl_sf_zeta": {
      "start_point": [
        1016,
        0
      ],
      "end_point": [
        1019,
        1
      ],
      "strings": []
    },
    "gsl_sf_hzeta": {
      "start_point": [
        1021,
        0
      ],
      "end_point": [
        1024,
        1
      ],
      "strings": []
    },
    "gsl_sf_zeta_int": {
      "start_point": [
        1026,
        0
      ],
      "end_point": [
        1029,
        1
      ],
      "strings": []
    },
    "gsl_sf_zetam1": {
      "start_point": [
        1031,
        0
      ],
      "end_point": [
        1034,
        1
      ],
      "strings": []
    },
    "gsl_sf_zetam1_int": {
      "start_point": [
        1036,
        0
      ],
      "end_point": [
        1039,
        1
      ],
      "strings": []
    },
    "gsl_sf_eta_int": {
      "start_point": [
        1041,
        0
      ],
      "end_point": [
        1044,
        1
      ],
      "strings": []
    },
    "gsl_sf_eta": {
      "start_point": [
        1046,
        0
      ],
      "end_point": [
        1049,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/splinalg/gmres.c": {
    "gmres_alloc": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": [
        "\"matrix dimension n must be a positive integer\"",
        "\"failed to allocate gmres state\"",
        "\"failed to allocate r vector\"",
        "\"failed to allocate H matrix\"",
        "\"failed to allocate tau vector\"",
        "\"failed to allocate y vector\"",
        "\"failed to allocate Givens vectors\""
      ]
    },
    "gmres_free": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "gmres_iterate": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": [
        "\"matrix must be square\"",
        "\"matrix does not match right hand side\"",
        "\"matrix does not match solution vector\"",
        "\"matrix does not match workspace\""
      ]
    },
    "gmres_normr": {
      "start_point": [
        417,
        0
      ],
      "end_point": [
        422,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/splinalg/gsl_splinalg.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/splinalg/itersolve.c": {
    "gsl_splinalg_itersolve_alloc": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"failed to allocate space for itersolve struct\"",
        "\"failed to allocate space for itersolve state\""
      ]
    },
    "gsl_splinalg_itersolve_free": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "gsl_splinalg_itersolve_name": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "gsl_splinalg_itersolve_iterate": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "gsl_splinalg_itersolve_normr": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/splinalg/test.c": {
    "create_random_sparse": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "create_random_vector": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "test_poisson": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": [
        "\"%s poisson status s=%d N=%zu\"",
        "\"%s poisson N=%zu i=%zu\"",
        "\"%s poisson residual N=%zu normr=%.12e normb=%.12e\""
      ]
    },
    "test_toeplitz": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": [
        "\"%s toeplitz status s=%d N=%zu a=%f b=%f c=%f\"",
        "\"%s toeplitz residual N=%zu a=%f b=%f c=%f normr=%.12e normb=%.12e\""
      ]
    },
    "test_random": {
      "start_point": [
        286,
        0
      ],
      "end_point": [
        337,
        1
      ],
      "strings": [
        "\"%s random status s=%d N=%zu\"",
        "\"%s random residual N=%zu normr=%.12e normb=%.12e\""
      ]
    },
    "main": {
      "start_point": [
        339,
        0
      ],
      "end_point": [
        371,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/spmatrix/avl.c": {
    "avl_create": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    },
    "avl_find": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "avl_probe": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    },
    "avl_insert": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": []
    },
    "avl_replace": {
      "start_point": [
        264,
        0
      ],
      "end_point": [
        276,
        1
      ],
      "strings": []
    },
    "avl_delete": {
      "start_point": [
        280,
        0
      ],
      "end_point": [
        440,
        1
      ],
      "strings": []
    },
    "copy_error_recovery": {
      "start_point": [
        445,
        0
      ],
      "end_point": [
        452,
        1
      ],
      "strings": []
    },
    "avl_copy": {
      "start_point": [
        463,
        0
      ],
      "end_point": [
        551,
        1
      ],
      "strings": []
    },
    "avl_empty": {
      "start_point": [
        554,
        0
      ],
      "end_point": [
        577,
        1
      ],
      "strings": []
    },
    "avl_destroy": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        586,
        1
      ],
      "strings": []
    },
    "avl_malloc": {
      "start_point": [
        590,
        0
      ],
      "end_point": [
        595,
        1
      ],
      "strings": []
    },
    "avl_free": {
      "start_point": [
        598,
        0
      ],
      "end_point": [
        603,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/spmatrix/gsl_spmatrix.h": {
    "typedef": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/spmatrix/spcompress.c": {
    "gsl_spmatrix_ccs": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": [
        "\"matrix must be in triplet format\""
      ]
    },
    "gsl_spmatrix_compcol": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "gsl_spmatrix_crs": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": [
        "\"matrix must be in triplet format\""
      ]
    },
    "gsl_spmatrix_cumsum": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/spmatrix/spcopy.c": {
    "gsl_spmatrix_memcpy": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"matrix sizes are different\"",
        "\"cannot copy matrices of different storage formats\"",
        "\"detected duplicate entry\"",
        "\"invalid matrix type for src\""
      ]
    }
  },
  "gsl/gsl-2.5/spmatrix/spgetset.c": {
    "gsl_spmatrix_get": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\"",
        "\"unknown sparse matrix type\""
      ]
    },
    "gsl_spmatrix_set": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": [
        "\"matrix not in triplet representation\""
      ]
    },
    "gsl_spmatrix_ptr": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": [
        "\"first index out of range\"",
        "\"second index out of range\"",
        "\"unknown sparse matrix type\""
      ]
    },
    "tree_find": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/spmatrix/spio.c": {
    "gsl_spmatrix_fprintf": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": [
        "\"%%%%MatrixMarket matrix coordinate real general\\n\"",
        "\"fprintf failed for header\"",
        "\"%u\\t%u\\t%u\\n\"",
        "\"fprintf failed for dimension header\"",
        "\"%u\\t%u\\t\"",
        "\"fprintf failed\"",
        "\"fprintf failed\"",
        "\"putc failed\"",
        "\"%u\\t%u\\t\"",
        "\"fprintf failed\"",
        "\"fprintf failed\"",
        "\"putc failed\"",
        "\"%u\\t%u\\t\"",
        "\"fprintf failed\"",
        "\"fprintf failed\"",
        "\"putc failed\"",
        "\"unknown sparse matrix type\""
      ]
    },
    "gsl_spmatrix_fscanf": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        212,
        1
      ],
      "strings": [
        "\"%u %u %u\"",
        "\"fscanf failed reading header\"",
        "\"error allocating m\"",
        "\"%u %u %lg\"",
        "\"error in input file format\"",
        "\"element exceeds matrix dimensions\""
      ]
    },
    "gsl_spmatrix_fwrite": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": [
        "\"fwrite failed on size1\"",
        "\"fwrite failed on size2\"",
        "\"fwrite failed on nz\"",
        "\"fwrite failed on row indices\"",
        "\"fwrite failed on data\"",
        "\"fwrite failed on column indices\"",
        "\"fwrite failed on column indices\"",
        "\"fwrite failed on column indices\""
      ]
    },
    "gsl_spmatrix_fread": {
      "start_point": [
        281,
        0
      ],
      "end_point": [
        367,
        1
      ],
      "strings": [
        "\"fread failed on size1\"",
        "\"fread failed on size2\"",
        "\"fread failed on nz\"",
        "\"matrix has wrong size1\"",
        "\"matrix has wrong size2\"",
        "\"matrix nzmax is too small\"",
        "\"fread failed on row indices\"",
        "\"fread failed on data\"",
        "\"fread failed on column indices\"",
        "\"fread failed on row pointers\"",
        "\"fread failed on column pointers\""
      ]
    }
  },
  "gsl/gsl-2.5/spmatrix/spmatrix.c": {
    "gsl_spmatrix_alloc": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "gsl_spmatrix_alloc_nzmax": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"matrix dimension n1 must be positive integer\"",
        "\"matrix dimension n2 must be positive integer\"",
        "\"failed to allocate space for spmatrix struct\"",
        "\"failed to allocate space for row indices\"",
        "\"failed to allocate space for AVL tree struct\"",
        "\"failed to allocate space for AVL tree\"",
        "\"failed to allocate space for AVL tree nodes\"",
        "\"failed to allocate space for column indices\"",
        "\"failed to allocate space for column pointers\"",
        "\"failed to allocate space for row pointers\"",
        "\"failed to allocate space for data\""
      ]
    },
    "gsl_spmatrix_free": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": []
    },
    "gsl_spmatrix_realloc": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": [
        "\"new nzmax is less than current nz\"",
        "\"failed to allocate space for row indices\"",
        "\"failed to allocate space for column indices\"",
        "\"failed to allocate space for data\"",
        "\"failed to allocate space for AVL tree nodes\"",
        "\"detected duplicate entry\""
      ]
    },
    "gsl_spmatrix_set_zero": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    },
    "gsl_spmatrix_nnz": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        323,
        1
      ],
      "strings": []
    },
    "gsl_spmatrix_compare_idx": {
      "start_point": [
        350,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": []
    },
    "gsl_spmatrix_tree_rebuild": {
      "start_point": [
        379,
        0
      ],
      "end_point": [
        406,
        1
      ],
      "strings": [
        "\"m must be in triplet format\"",
        "\"detected duplicate entry\""
      ]
    },
    "compare_triplet": {
      "start_point": [
        432,
        0
      ],
      "end_point": [
        443,
        1
      ],
      "strings": []
    },
    "avl_spmalloc": {
      "start_point": [
        445,
        0
      ],
      "end_point": [
        477,
        1
      ],
      "strings": [
        "\"attemping to allocate incorrect node size\"",
        "\"attemping to allocate tree node past nzmax\""
      ]
    },
    "avl_spfree": {
      "start_point": [
        479,
        0
      ],
      "end_point": [
        488,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/spmatrix/spoper.c": {
    "gsl_spmatrix_scale": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    },
    "gsl_spmatrix_minmax": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": [
        "\"matrix is empty\""
      ]
    },
    "gsl_spmatrix_add": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"matrices must have same dimensions\"",
        "\"matrices must have same sparse storage format\"",
        "\"triplet format not yet supported\"",
        "\"unknown sparse matrix type\""
      ]
    },
    "gsl_spmatrix_d2sp": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "gsl_spmatrix_sp2d": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": [
        "\"matrix sizes do not match\"",
        "\"non-triplet formats not yet supported\""
      ]
    }
  },
  "gsl/gsl-2.5/spmatrix/spprop.c": {
    "gsl_spmatrix_equal": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": [
        "\"matrices must have same dimensions\"",
        "\"trying to compare different sparse matrix types\"",
        "\"unknown sparse matrix type\""
      ]
    }
  },
  "gsl/gsl-2.5/spmatrix/spswap.c": {
    "gsl_spmatrix_transpose": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"unknown sparse matrix type\""
      ]
    },
    "gsl_spmatrix_transpose2": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"unknown sparse matrix type\""
      ]
    },
    "gsl_spmatrix_transpose_memcpy": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": [
        "\"dimensions of dest must be transpose of src matrix\"",
        "\"cannot copy matrices of different storage formats\"",
        "\"detected duplicate entry\"",
        "\"unknown sparse matrix type\""
      ]
    }
  },
  "gsl/gsl-2.5/spmatrix/test.c": {
    "create_random_sparse": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "create_random_sparse_int": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "test_getset": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        319,
        1
      ],
      "strings": [
        "\"test_getset: triplet M=%zu N=%zu not initialized to zero\"",
        "\"test_getset: CCS M=%zu N=%zu not initialized to zero\"",
        "\"test_getset: CRS M=%zu N=%zu not initialized to zero\"",
        "\"test_getset: M=%zu N=%zu _get != _set\"",
        "\"test_getset: M=%zu N=%zu m(0,0) = %f\"",
        "\"test_getset: M=%zu N=%zu set_zero m(0,0) = %f\"",
        "\"test_getset: M=%zu N=%zu set_zero nz = %zu\"",
        "\"test_getset: M=%zu N=%zu triplet ptr\"",
        "\"test_getset: duplicate test M=%zu N=%zu _get != _set\"",
        "\"test_getset: duplicate test M=%zu N=%zu nnz=%zu, expected=%zu\"",
        "\"test_getset: M=%zu N=%zu CCS get\"",
        "\"test_getset: M=%zu N=%zu CCS ptr\"",
        "\"test_getset: M=%zu N=%zu CRS get\"",
        "\"test_getset: M=%zu N=%zu CRS ptr\""
      ]
    },
    "test_memcpy": {
      "start_point": [
        321,
        0
      ],
      "end_point": [
        427,
        1
      ],
      "strings": [
        "\"test_memcpy: _memcpy M=%zu N=%zu triplet format\"",
        "\"test_memcpy: _memcpy M=%zu N=%zu CCS\"",
        "\"test_memcpy: _memcpy M=%zu N=%zu CRS\"",
        "\"test_memcpy: _transpose_memcpy M=%zu N=%zu triplet format\"",
        "\"test_memcpy: _transpose_memcpy M=%zu N=%zu CCS format\"",
        "\"test_memcpy: _transpose_memcpy M=%zu N=%zu CRS format\""
      ]
    },
    "test_transpose": {
      "start_point": [
        429,
        0
      ],
      "end_point": [
        517,
        1
      ],
      "strings": [
        "\"test_transpose: transpose M=%zu N=%zu triplet format\"",
        "\"test_transpose: transpose2 M=%zu N=%zu triplet format\"",
        "\"test_transpose: transpose2 M=%zu N=%zu CCS format\"",
        "\"test_transpose: transpose2 M=%zu N=%zu CRS format\""
      ]
    },
    "test_ops": {
      "start_point": [
        519,
        0
      ],
      "end_point": [
        601,
        1
      ],
      "strings": [
        "\"test_ops: add M=%zu N=%zu CCS\"",
        "\"test_ops: add M=%zu N=%zu CRS\"",
        "\"test_ops: add duplicate M=%zu N=%zu CCS\"",
        "\"test_ops: add duplicate M=%zu N=%zu CRS\""
      ]
    },
    "test_io_ascii": {
      "start_point": [
        603,
        0
      ],
      "end_point": [
        679,
        1
      ],
      "strings": [
        "\"test.dat\"",
        "\"w\"",
        "\"%g\"",
        "\"r\"",
        "\"test_io_ascii: fprintf/fscanf M=%zu N=%zu triplet format\"",
        "\"w\"",
        "\"%g\"",
        "\"r\"",
        "\"test_io_ascii: fprintf/fscanf M=%zu N=%zu CCS format\"",
        "\"w\"",
        "\"%g\"",
        "\"r\"",
        "\"test_io_ascii: fprintf/fscanf M=%zu N=%zu CRS format\""
      ]
    },
    "test_io_binary": {
      "start_point": [
        681,
        0
      ],
      "end_point": [
        766,
        1
      ],
      "strings": [
        "\"test.dat\"",
        "\"wb\"",
        "\"rb\"",
        "\"test_io_binary: fwrite/fread M=%zu N=%zu triplet format\"",
        "\"wb\"",
        "\"rb\"",
        "\"test_io_binary: fwrite/fread M=%zu N=%zu CCS format\"",
        "\"wb\"",
        "\"rb\"",
        "\"test_io_binary: fwrite/fread M=%zu N=%zu CRS format\""
      ]
    },
    "main": {
      "start_point": [
        768,
        0
      ],
      "end_point": [
        806,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/statistics/absdev.c": {},
  "gsl/gsl-2.5/statistics/absdev_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          24,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          26,
          0
        ],
        "end_point": [
          47,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/covariance.c": {
    "compute_rank": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/statistics/covariance_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          25,
          0
        ],
        "end_point": [
          46,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          48,
          0
        ],
        "end_point": [
          60,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          62,
          0
        ],
        "end_point": [
          74,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          95,
          0
        ],
        "end_point": [
          135,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          151,
          0
        ],
        "end_point": [
          181,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/gastwirth.c": {},
  "gsl/gsl-2.5/statistics/gastwirth_source.c": {
    "FUNCTION": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/statistics/gsl_statistics.h": {},
  "gsl/gsl-2.5/statistics/gsl_statistics_char.h": {},
  "gsl/gsl-2.5/statistics/gsl_statistics_double.h": {},
  "gsl/gsl-2.5/statistics/gsl_statistics_float.h": {},
  "gsl/gsl-2.5/statistics/gsl_statistics_int.h": {},
  "gsl/gsl-2.5/statistics/gsl_statistics_long.h": {},
  "gsl/gsl-2.5/statistics/gsl_statistics_long_double.h": {},
  "gsl/gsl-2.5/statistics/gsl_statistics_short.h": {},
  "gsl/gsl-2.5/statistics/gsl_statistics_uchar.h": {},
  "gsl/gsl-2.5/statistics/gsl_statistics_uint.h": {},
  "gsl/gsl-2.5/statistics/gsl_statistics_ulong.h": {},
  "gsl/gsl-2.5/statistics/gsl_statistics_ushort.h": {},
  "gsl/gsl-2.5/statistics/kurtosis.c": {},
  "gsl/gsl-2.5/statistics/kurtosis_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          25,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          27,
          0
        ],
        "end_point": [
          53,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/lag1.c": {},
  "gsl/gsl-2.5/statistics/lag1_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          20,
          0
        ],
        "end_point": [
          25,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          27,
          0
        ],
        "end_point": [
          50,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/mad.c": {},
  "gsl/gsl-2.5/statistics/mad_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          31,
          0
        ],
        "end_point": [
          54,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          56,
          0
        ],
        "end_point": [
          65,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/mean.c": {},
  "gsl/gsl-2.5/statistics/mean_source.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/statistics/median.c": {},
  "gsl/gsl-2.5/statistics/median_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          20,
          0
        ],
        "end_point": [
          42,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          44,
          0
        ],
        "end_point": [
          66,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/minmax.c": {},
  "gsl/gsl-2.5/statistics/minmax_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          20,
          0
        ],
        "end_point": [
          42,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          44,
          0
        ],
        "end_point": [
          67,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          69,
          0
        ],
        "end_point": [
          103,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          105,
          0
        ],
        "end_point": [
          134,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          136,
          0
        ],
        "end_point": [
          165,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          167,
          0
        ],
        "end_point": [
          206,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/p_variance.c": {},
  "gsl/gsl-2.5/statistics/p_variance_source.c": {
    "FUNCTION": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/statistics/Qn.c": {},
  "gsl/gsl-2.5/statistics/Qn_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          79,
          0
        ],
        "end_point": [
          214,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          237,
          0
        ],
        "end_point": [
          278,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          294,
          0
        ],
        "end_point": [
          380,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/quantiles.c": {},
  "gsl/gsl-2.5/statistics/quantiles_source.c": {
    "FUNCTION": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/statistics/select.c": {},
  "gsl/gsl-2.5/statistics/select_source.c": {
    "FUNCTION": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"array size must be positive\"",
        "\"select error\""
      ]
    }
  },
  "gsl/gsl-2.5/statistics/skew.c": {},
  "gsl/gsl-2.5/statistics/skew_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          25,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          27,
          0
        ],
        "end_point": [
          49,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/Sn.c": {},
  "gsl/gsl-2.5/statistics/Sn_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          73,
          0
        ],
        "end_point": [
          214,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          237,
          0
        ],
        "end_point": [
          268,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/test.c": {
    "main": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/statistics/test_float_source.c": {
    "FUNCTION": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        560,
        1
      ],
      "strings": [
        "\"_mean\"",
        "\"_variance_with_fixed_mean\"",
        "\"_sd_with_fixed_mean\"",
        "\"_variance\"",
        "\"_sd\"",
        "\"_ss\"",
        "\"_ss_m\"",
        "\"_absdev\"",
        "\"_skew\"",
        "\"_kurtosis\"",
        "\"_wmean\"",
        "\"_wvariance_with_fixed_mean\"",
        "\"_wvariance\"",
        "\"_wsd\"",
        "\"_wtss\"",
        "\"_wtss_m\"",
        "\"_wabsdev\"",
        "\"_wskew\"",
        "\"_wkurtosis\"",
        "\"_covariance\"",
        "\"_correlation\"",
        "\"_spearman\"",
        "\"_pvariance\"",
        "\"_ttest\"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\"_max_index (%d observed vs %d expected)\"",
        "\"_min_index (%d observed vs %d expected)\"",
        "\"_minmax_index max (%u observed vs %u expected)\"",
        "\"_minmax_index min (%u observed vs %u expected)\"",
        "\"_median_from_sorted_data (even)\"",
        "\"_median_from_sorted_data (odd)\"",
        "\"_median (even)\"",
        "\"_median (odd)\"",
        "\"_trmean_from_sorted_data (even)\"",
        "\"_trmean_from_sorted_data (odd)\"",
        "\"_gastwirth_from_sorted_data (even)\"",
        "\"_gastwirth_from_sorted_data (odd)\"",
        "\"_quantile_from_sorted_data (0)\"",
        "\"_quantile_from_sorted_data (100)\"",
        "\"_quantile_from_sorted_data (50even)\"",
        "\"_quantile_from_sorted_data (50odd)\"",
        "\"_select\"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\"_minmax(-1) max NaN (\"",
        "\" observed vs \"",
        "\" expected)\"",
        "\"_minmax(-1) min NaN (\"",
        "\" observed vs \"",
        "\" expected)\"",
        "\"_max_index NaN (%d observed vs %d expected)\"",
        "\"_min_index NaN (%d observed vs %d expected)\"",
        "\"_minmax_index max NaN (%u observed vs %u expected)\"",
        "\"_minmax_index min NaN (%u observed vs %u expected)\"",
        "\"_mad0 (even)\"",
        "\"_mad0 (odd)\"",
        "\"_Sn_from_sorted_data (even)\"",
        "\"_Sn_from_sorted_data (odd)\"",
        "\"_Qn_from_sorted_data (even)\"",
        "\"_Qn_from_sorted_data (odd)\""
      ]
    }
  },
  "gsl/gsl-2.5/statistics/test_int_source.c": {
    "FUNCTION": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        405,
        1
      ],
      "strings": [
        "\"_mean (integer)\"",
        "\"_mean (fractional)\"",
        "\"_variance_with_fixed_mean\"",
        "\"_sd_with_fixed_mean\"",
        "\"_variance\"",
        "\"_sd\"",
        "\"_absdev\"",
        "\"_skew\"",
        "\"_kurtosis\"",
        "\"_covariance\"",
        "\"_correlation\"",
        "\"_spearman\"",
        "\"_pvariance\"",
        "\"_ttest\"",
        "\"_max (%d observed vs %d expected)\"",
        "\"_min (%d observed vs %d expected)\"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\" OUT_FORMAT \"",
        "\"_max_index (%d observed vs %d expected)\"",
        "\"_min_index (%d observed vs %d expected)\"",
        "\"_minmax_index max (%u observed vs %u expected)\"",
        "\"_minmax_index min (%u observed vs %u expected)\"",
        "\"_median_from_sorted_data (even)\"",
        "\"_median_from_sorted_data (odd)\"",
        "\"_median (even)\"",
        "\"_median (odd)\"",
        "\"_trmean_from_sorted_data (even)\"",
        "\"_trmean_from_sorted_data (odd)\"",
        "\"_gastwirth_from_sorted_data (even)\"",
        "\"_gastwirth_from_sorted_data (odd)\"",
        "\"_quantile_from_sorted_data (0)\"",
        "\"_quantile_from_sorted_data (100)\"",
        "\"_quantile_from_sorted_data (50, even)\"",
        "\"_quantile_from_sorted_data (50, odd)\"",
        "\"_select (%d observed vs %d expected)\"",
        "\"_mad0 (even)\"",
        "\"_mad0 (odd)\"",
        "\"_Sn_from_sorted_data (even)\"",
        "\"_Sn_from_sorted_data (odd)\"",
        "\"_Qn_from_sorted_data (even)\"",
        "\"_Qn_from_sorted_data (odd)\""
      ]
    }
  },
  "gsl/gsl-2.5/statistics/test_nist.c": {
    "test_nist": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        497,
        1
      ],
      "strings": [
        "\"lew gsl_stats_mean\"",
        "\"lew gsl_stats_sd\"",
        "\"lew autocorrelation\"",
        "\"lottery gsl_stats_mean\"",
        "\"lottery gsl_stats_sd\"",
        "\"lottery autocorrelation\"",
        "\"mavro gsl_stats_mean\"",
        "\"mavro gsl_stats_sd\"",
        "\"mavro autocorrelation\"",
        "\"michelson gsl_stats_mean\"",
        "\"michelson gsl_stats_sd\"",
        "\"michelson autocorrelation\"",
        "\"pidigits gsl_stats_mean\"",
        "\"pidigits gsl_stats_sd\"",
        "\"pidigits autocorrelation\"",
        "\"acc1 gsl_stats_mean\"",
        "\"acc1 gsl_stats_sd\"",
        "\"acc1 autocorrelation\"",
        "\"acc2 gsl_stats_mean\"",
        "\"acc2 gsl_stats_sd\"",
        "\"acc2 autocorrelation\"",
        "\"acc3 gsl_stats_mean\"",
        "\"acc3 gsl_stats_sd\"",
        "\"acc3 autocorrelation\"",
        "\"acc4 gsl_stats_mean\"",
        "\"acc4 gsl_stats_sd\"",
        "\"acc4 autocorrelation\""
      ]
    }
  },
  "gsl/gsl-2.5/statistics/test_robust.c": {
    "random_array": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "slow_MAD": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "slow_Sn0": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "slow_Qn0": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "test_median": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": [
        "\"test_median n=%zu\""
      ]
    },
    "test_mad": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": [
        "\"test_mad n=%zu\""
      ]
    },
    "test_Sn": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": [
        "\"test_Sn n=%zu\""
      ]
    },
    "test_Qn": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": [
        "\"test_Qn n=%zu\""
      ]
    },
    "test_robust": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/statistics/trmean.c": {},
  "gsl/gsl-2.5/statistics/trmean_source.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/statistics/ttest.c": {},
  "gsl/gsl-2.5/statistics/ttest_source.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/statistics/variance.c": {},
  "gsl/gsl-2.5/statistics/variance_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          25,
          0
        ],
        "end_point": [
          42,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          44,
          0
        ],
        "end_point": [
          61,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          64,
          0
        ],
        "end_point": [
          69,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          71,
          0
        ],
        "end_point": [
          78,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          82,
          0
        ],
        "end_point": [
          88,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          90,
          0
        ],
        "end_point": [
          97,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          99,
          0
        ],
        "end_point": [
          104,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          106,
          0
        ],
        "end_point": [
          111,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          114,
          0
        ],
        "end_point": [
          120,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          122,
          0
        ],
        "end_point": [
          127,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/wabsdev.c": {},
  "gsl/gsl-2.5/statistics/wabsdev_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          24,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          26,
          0
        ],
        "end_point": [
          49,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/wkurtosis.c": {},
  "gsl/gsl-2.5/statistics/wkurtosis_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          25,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          27,
          0
        ],
        "end_point": [
          60,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/wmean.c": {},
  "gsl/gsl-2.5/statistics/wmean_source.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/statistics/wskew.c": {},
  "gsl/gsl-2.5/statistics/wskew_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          25,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          27,
          0
        ],
        "end_point": [
          57,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/statistics/wvariance.c": {},
  "gsl/gsl-2.5/statistics/wvariance_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          29,
          0
        ],
        "end_point": [
          52,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          54,
          0
        ],
        "end_point": [
          74,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          77,
          0
        ],
        "end_point": [
          104,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          106,
          0
        ],
        "end_point": [
          111,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          113,
          0
        ],
        "end_point": [
          120,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          123,
          0
        ],
        "end_point": [
          130,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          132,
          0
        ],
        "end_point": [
          140,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          142,
          0
        ],
        "end_point": [
          147,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          149,
          0
        ],
        "end_point": [
          154,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          156,
          0
        ],
        "end_point": [
          161,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          163,
          0
        ],
        "end_point": [
          168,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/sum/gsl_sum.h": {
    "typedef": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sum/levin_u.c": {
    "gsl_sum_levin_u_accel": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "gsl_sum_levin_u_minmax": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "gsl_sum_levin_u_step": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sum/levin_utrunc.c": {
    "gsl_sum_levin_utrunc_accel": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "gsl_sum_levin_utrunc_minmax": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "gsl_sum_levin_utrunc_step": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sum/test.c": {
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": [
        "\"zeta(2)\"",
        "\"zeta(2)\"",
        "\"exp(10)\"",
        "\"exp(10)\"",
        "\"exp(-10)\"",
        "\"exp(-10)\"",
        "\"-log(1/2)\"",
        "\"-log(1/2)\"",
        "\"-log(2)\"",
        "\"-log(2)\"",
        "\"asymptotic series\"",
        "\"asymptotic series\"",
        "\"Euler's constant\"",
        "\"Euler's constant\"",
        "\"eta(1/2)\"",
        "\"eta(1/2)\"",
        "\"1.23 + 0 + 0 + 0...\"",
        "\"1.23 + 0 + 0 + 0...\""
      ]
    },
    "check_trunc": {
      "start_point": [
        215,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"trunc result, %s\""
      ]
    },
    "check_full": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": [
        "\"full result, %s\"",
        "\"full significant digits, %s (%g vs %g)\""
      ]
    }
  },
  "gsl/gsl-2.5/sum/work_u.c": {
    "gsl_sum_levin_u_alloc": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": [
        "\"length n must be positive integer\"",
        "\"failed to allocate struct\"",
        "\"failed to allocate space for q_num\"",
        "\"failed to allocate space for q_den\"",
        "\"failed to allocate space for dq_num\"",
        "\"failed to allocate space for dq_den\"",
        "\"failed to allocate space for dsum\""
      ]
    },
    "gsl_sum_levin_u_free": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sum/work_utrunc.c": {
    "gsl_sum_levin_utrunc_alloc": {
      "start_point": [
        5,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"length n must be positive integer\"",
        "\"failed to allocate struct\"",
        "\"failed to allocate space for q_num\"",
        "\"failed to allocate space for q_den\"",
        "\"failed to allocate space for dsum\""
      ]
    },
    "gsl_sum_levin_utrunc_free": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sys/coerce.c": {
    "gsl_coerce_double": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    },
    "gsl_coerce_float": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "gsl_coerce_long_double": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sys/expm1.c": {
    "gsl_expm1": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sys/fcmp.c": {
    "gsl_fcmp": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sys/fdiv.c": {
    "gsl_fdiv": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sys/gsl_sys.h": {},
  "gsl/gsl-2.5/sys/hypot.c": {
    "gsl_hypot": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "gsl_hypot3": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sys/infnan.c": {
    "gsl_nan": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    },
    "gsl_posinf": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "gsl_neginf": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "gsl_isnan": [
      {
        "start_point": [
          50,
          0
        ],
        "end_point": [
          54,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          101,
          0
        ],
        "end_point": [
          105,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          107,
          0
        ],
        "end_point": [
          112,
          1
        ],
        "strings": []
      }
    ],
    "gsl_isinf": [
      {
        "start_point": [
          56,
          0
        ],
        "end_point": [
          67,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          118,
          0
        ],
        "end_point": [
          133,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          136,
          0
        ],
        "end_point": [
          147,
          1
        ],
        "strings": []
      }
    ],
    "gsl_finite": [
      {
        "start_point": [
          69,
          0
        ],
        "end_point": [
          73,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          77,
          0
        ],
        "end_point": [
          81,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          83,
          0
        ],
        "end_point": [
          87,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          89,
          0
        ],
        "end_point": [
          95,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/sys/invhyp.c": {
    "gsl_acosh": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_asinh": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "gsl_atanh": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sys/ldfrexp.c": {
    "gsl_ldexp": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "gsl_frexp": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sys/log1p.c": {
    "gsl_log1p": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sys/minmax.c": {
    "gsl_max": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "gsl_min": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sys/pow_int.c": {
    "gsl_pow_int": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "gsl_pow_uint": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/sys/prec.c": {},
  "gsl/gsl-2.5/sys/test.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        681,
        1
      ],
      "strings": [
        "\"gsl_expm1(0.0)\"",
        "\"gsl_expm1(1e-10)\"",
        "\"gsl_expm1(-1e-10)\"",
        "\"gsl_expm1(0.1)\"",
        "\"gsl_expm1(-0.1)\"",
        "\"gsl_expm1(10.0)\"",
        "\"gsl_expm1(-10.0)\"",
        "\"gsl_log1p(0.0)\"",
        "\"gsl_log1p(1e-10)\"",
        "\"gsl_log1p(0.1)\"",
        "\"gsl_log1p(10.0)\"",
        "\"gsl_hypot(0.0, 0.0)\"",
        "\"gsl_hypot(1e-10, 1e-10)\"",
        "\"gsl_hypot(1e-38, 1e-38)\"",
        "\"gsl_hypot(1e-10, -1)\"",
        "\"gsl_hypot(-1, 1e-10)\"",
        "\"gsl_hypot(1e307, 1e301)\"",
        "\"gsl_hypot(1e301, 1e307)\"",
        "\"gsl_hypot(1e307, 1e307)\"",
        "\"gsl_hypot(GSL_POSINF, 1.2)\"",
        "\"gsl_hypot(GSL_NEGINF, 1.2)\"",
        "\"gsl_hypot(1.2, GSL_POSINF)\"",
        "\"gsl_hypot(1.2, GSL_NEGINF)\"",
        "\"gsl_hypot(GSL_NAN, 1.2)\"",
        "\"gsl_hypot(1.2, GSL_NAN)\"",
        "\"gsl_hypot(GSL_NAN, GSL_NAN)\"",
        "\"gsl_hypot(GSL_POSINF, GSL_NAN)\"",
        "\"gsl_hypot(GSL_NEGINF, GSL_NAN)\"",
        "\"gsl_hypot(GSL_NAN, GSL_POSINF)\"",
        "\"gsl_hypot(GSL_NAN, GSL_NEGINF)\"",
        "\"gsl_hypot3(0.0, 0.0, 0.0)\"",
        "\"gsl_hypot3(1e-10, 1e-10, 1e-10)\"",
        "\"gsl_hypot3(1e-38, 1e-38, 1e-38)\"",
        "\"gsl_hypot3(1e-10, 1e-10, -1)\"",
        "\"gsl_hypot3(1e-10, -1, 1e-10)\"",
        "\"gsl_hypot3(-1, 1e-10, 1e-10)\"",
        "\"gsl_hypot3(1e307, 1e301, 1e301)\"",
        "\"gsl_hypot3(1e307, 1e307, 1e307)\"",
        "\"gsl_hypot3(1e307, 1e-307, 1e-307)\"",
        "\"gsl_acosh(1.0)\"",
        "\"gsl_acosh(1.1)\"",
        "\"gsl_acosh(10.0)\"",
        "\"gsl_acosh(1e10)\"",
        "\"gsl_asinh(0.0)\"",
        "\"gsl_asinh(1e-10)\"",
        "\"gsl_asinh(1e-10)\"",
        "\"gsl_asinh(0.1)\"",
        "\"gsl_asinh(-0.1)\"",
        "\"gsl_asinh(1.0)\"",
        "\"gsl_asinh(-1.0)\"",
        "\"gsl_asinh(10)\"",
        "\"gsl_asinh(-10)\"",
        "\"gsl_asinh(1e10)\"",
        "\"gsl_asinh(-1e10)\"",
        "\"gsl_atanh(0.0)\"",
        "\"gsl_atanh(1e-20)\"",
        "\"gsl_atanh(-1e-20)\"",
        "\"gsl_atanh(0.1)\"",
        "\"gsl_atanh(-0.1)\"",
        "\"gsl_atanh(0.9)\"",
        "\"gsl_atanh(0.9)\"",
        "\"gsl_pow_2(-3.14)\"",
        "\"gsl_pow_3(-3.14)\"",
        "\"gsl_pow_4(-3.14)\"",
        "\"gsl_pow_5(-3.14)\"",
        "\"gsl_pow_6(-3.14)\"",
        "\"gsl_pow_7(-3.14)\"",
        "\"gsl_pow_8(-3.14)\"",
        "\"gsl_pow_9(-3.14)\"",
        "\"gsl_pow_int(-3.14,%d)\"",
        "\"gsl_pow_uint(-3.14,%d)\"",
        "\"gsl_pow_int(%.7f,%d)\"",
        "\"gsl_pow_int(%.7f,%d)\"",
        "\"gsl_ldexp(pi,-2)\"",
        "\"gsl_ldexp(1.0,2)\"",
        "\"gsl_ldexp(0.0,2)\"",
        "\"gsl_ldexp DBL_MAX\"",
        "\"gsl_ldexp(1e308,-2000)\"",
        "\"gsl_ldexp(DBL_MIN,2000)\"",
        "\"gsl_ldexp(DBL_MIN/2**%d,%d)\"",
        "\"gsl_frexp(0) fraction\"",
        "\"gsl_frexp(0) exponent\"",
        "\"gsl_frexp(pi) fraction\"",
        "\"gsl_frexp(pi) exponent\"",
        "\"gsl_frexp(2.0) fraction\"",
        "\"gsl_frexp(2.0) exponent\"",
        "\"gsl_frexp(0.25) fraction\"",
        "\"gsl_frexp(0.25) exponent\"",
        "\"gsl_frexp(0.25-eps) fraction\"",
        "\"gsl_frexp(0.25-eps) exponent\"",
        "\"gsl_frexp(DBL_MAX) fraction\"",
        "\"gsl_frexp(DBL_MAX) exponent\"",
        "\"gsl_frexp(-DBL_MAX) fraction\"",
        "\"gsl_frexp(-DBL_MAX) exponent\"",
        "\"gsl_frexp(DBL_MIN) fraction\"",
        "\"gsl_frexp(DBL_MIN) exponent\"",
        "\"gsl_frexp(-DBL_MIN) fraction\"",
        "\"gsl_frexp(-DBL_MIN) exponent\"",
        "\"gsl_frexp(DBL_MIN/2**%d) fraction\"",
        "\"gsl_frexp(DBL_MIN/2**%d) exponent\"",
        "\"gsl_fcmp(%.5f,%.5f,%g)\"",
        "\"gsl_fcmp(%.5f,%.5f,%g)\"",
        "\"gsl_isinf(0)\"",
        "\"gsl_isinf(1)\"",
        "\"gsl_isinf(inf)\"",
        "\"gsl_isinf(-inf)\"",
        "\"gsl_isinf(nan)\"",
        "\"gsl_isnan(0)\"",
        "\"gsl_isnan(1)\"",
        "\"gsl_isnan(inf)\"",
        "\"gsl_isnan(-inf)\"",
        "\"gsl_isnan(nan)\"",
        "\"gsl_finite(0)\"",
        "\"gsl_finite(1)\"",
        "\"gsl_finite(inf)\"",
        "\"gsl_finite(-inf)\"",
        "\"gsl_finite(nan)\"",
        "\"gsl_fdiv(2,3)\"",
        "\"ln(M_E)\"",
        "\"2^M_LOG2E\"",
        "\"10^M_LOG10E\"",
        "\"M_SQRT2^2\"",
        "\"M_SQRT1_2\"",
        "\"M_SQRT3^2\"",
        "\"M_PI\"",
        "\"2*M_PI_2\"",
        "\"4*M_PI_4\"",
        "\"M_SQRTPI^2\"",
        "\"M_SQRTPI^2\"",
        "\"M_1_SQRTPI\"",
        "\"M_2_PI\"",
        "\"exp(M_LN10)\"",
        "\"exp(M_LN2)\"",
        "\"exp(M_LNPI)\"",
        "\"M_EULER\""
      ]
    }
  },
  "gsl/gsl-2.5/test/gsl_test.h": {},
  "gsl/gsl-2.5/test/results.c": {
    "initialise": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"GSL_TEST_VERBOSE\""
      ]
    },
    "update": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "gsl_test": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"FAIL: \"",
        "\"PASS: \"",
        "\" [%u]\"",
        "\"\\n\""
      ]
    },
    "gsl_test_rel": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": [
        "\"FAIL: \"",
        "\"PASS: \"",
        "\" (%g observed vs %g expected)\"",
        "\" (%g obs vs %g exp)\"",
        "\" (%.18g observed vs %.18g expected)\"",
        "\" [test uses subnormal value]\"",
        "\" [%u]\"",
        "\"\\n\""
      ]
    },
    "gsl_test_abs": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": [
        "\"FAIL: \"",
        "\"PASS: \"",
        "\" (%g observed vs %g expected)\"",
        "\" (%g obs vs %g exp)\"",
        "\" (%.18g observed vs %.18g expected)\"",
        "\" [test uses subnormal value]\"",
        "\" [%u]\"",
        "\"\\n\""
      ]
    },
    "gsl_test_factor": {
      "start_point": [
        268,
        0
      ],
      "end_point": [
        341,
        1
      ],
      "strings": [
        "\"FAIL: \"",
        "\"PASS: \"",
        "\" (%g observed vs %g expected)\"",
        "\" (%g obs vs %g exp)\"",
        "\" (%.18g observed vs %.18g expected)\"",
        "\" [test uses subnormal value]\"",
        "\" [%u]\"",
        "\"\\n\""
      ]
    },
    "gsl_test_int": {
      "start_point": [
        343,
        0
      ],
      "end_point": [
        384,
        1
      ],
      "strings": [
        "\"FAIL: \"",
        "\"PASS: \"",
        "\" (%d observed vs %d expected)\"",
        "\" (%d observed vs %d expected)\"",
        "\" [%u]\"",
        "\"\\n\""
      ]
    },
    "gsl_test_str": {
      "start_point": [
        386,
        0
      ],
      "end_point": [
        424,
        1
      ],
      "strings": [
        "\"FAIL: \"",
        "\"PASS: \"",
        "\" (%s observed vs %s expected)\"",
        "\" [%u]\"",
        "\"\\n\""
      ]
    },
    "gsl_test_verbose": {
      "start_point": [
        426,
        0
      ],
      "end_point": [
        430,
        1
      ],
      "strings": []
    },
    "gsl_test_summary": {
      "start_point": [
        432,
        0
      ],
      "end_point": [
        460,
        1
      ],
      "strings": [
        "\"%d tests, passed %d, failed %d.\\n\"",
        "\"TEST RESULTS DO NOT ADD UP %d != %d + %d\\n\"",
        "\"Completed [%d/%d]\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/utils/memcpy.c": {},
  "gsl/gsl-2.5/utils/memmove.c": {},
  "gsl/gsl-2.5/utils/placeholder.c": {
    "gsl_utils_placeholder": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        8,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/utils/strdup.c": {},
  "gsl/gsl-2.5/utils/strtol.c": {},
  "gsl/gsl-2.5/utils/strtoul.c": {},
  "gsl/gsl-2.5/utils/system.h": {},
  "gsl/gsl-2.5/vector/copy.c": {},
  "gsl/gsl-2.5/vector/copy_source.c": {
    "FUNCTION": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"vector lengths are not equal\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/file.c": {},
  "gsl/gsl-2.5/vector/file_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          27,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          29,
          0
        ],
        "end_point": [
          37,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          40,
          0
        ],
        "end_point": [
          50,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          52,
          0
        ],
        "end_point": [
          60,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/vector/gsl_vector.h": {},
  "gsl/gsl-2.5/vector/gsl_vector_char.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_vector_char_get": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_char_set": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_char_ptr": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_char_const_ptr": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_complex.h": {},
  "gsl/gsl-2.5/vector/gsl_vector_complex_double.h": {
    "typedef": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "gsl_vector_complex_get": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_complex_set": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_complex_ptr": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_complex_const_ptr": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_complex_float.h": {
    "typedef": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "gsl_vector_complex_float_get": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_complex_float_set": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_complex_float_ptr": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_complex_float_const_ptr": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_complex_long_double.h": {
    "typedef": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "gsl_vector_complex_long_double_get": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_complex_long_double_set": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_complex_long_double_ptr": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_complex_long_double_const_ptr": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_double.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_vector_get": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_set": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_ptr": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_const_ptr": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_float.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_vector_float_get": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_float_set": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_float_ptr": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_float_const_ptr": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_int.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_vector_int_get": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_int_set": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_int_ptr": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_int_const_ptr": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_long.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_vector_long_get": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_long_set": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_long_ptr": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_long_const_ptr": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_long_double.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_vector_long_double_get": {
      "start_point": [
        173,
        5
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_long_double_set": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_long_double_ptr": {
      "start_point": [
        199,
        5
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_long_double_const_ptr": {
      "start_point": [
        212,
        11
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_short.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_vector_short_get": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_short_set": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_short_ptr": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_short_const_ptr": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_uchar.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_vector_uchar_get": {
      "start_point": [
        173,
        9
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_uchar_set": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_uchar_ptr": {
      "start_point": [
        199,
        9
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_uchar_const_ptr": {
      "start_point": [
        212,
        15
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_uint.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_vector_uint_get": {
      "start_point": [
        173,
        9
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_uint_set": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_uint_ptr": {
      "start_point": [
        199,
        9
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_uint_const_ptr": {
      "start_point": [
        212,
        15
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_ulong.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_vector_ulong_get": {
      "start_point": [
        173,
        9
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_ulong_set": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_ulong_ptr": {
      "start_point": [
        199,
        9
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_ulong_const_ptr": {
      "start_point": [
        212,
        15
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/gsl_vector_ushort.h": {
    "typedef": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "gsl_vector_ushort_get": {
      "start_point": [
        173,
        9
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_ushort_set": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_ushort_ptr": {
      "start_point": [
        199,
        9
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    },
    "gsl_vector_ushort_const_ptr": {
      "start_point": [
        212,
        15
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"index out of range\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/init.c": {},
  "gsl/gsl-2.5/vector/init_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          50,
          1
        ],
        "strings": [
          "\"failed to allocate space for vector struct\"",
          "\"failed to allocate space for block\""
        ]
      },
      {
        "start_point": [
          52,
          0
        ],
        "end_point": [
          71,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          73,
          0
        ],
        "end_point": [
          106,
          1
        ],
        "strings": [
          "\"stride must be positive integer\"",
          "\"vector would extend past end of block\"",
          "\"failed to allocate space for vector struct\""
        ]
      },
      {
        "start_point": [
          108,
          0
        ],
        "end_point": [
          141,
          1
        ],
        "strings": [
          "\"stride must be positive integer\"",
          "\"vector would extend past end of block\"",
          "\"failed to allocate space for vector struct\""
        ]
      },
      {
        "start_point": [
          144,
          0
        ],
        "end_point": [
          154,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          157,
          0
        ],
        "end_point": [
          170,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          172,
          0
        ],
        "end_point": [
          186,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          188,
          0
        ],
        "end_point": [
          212,
          1
        ],
        "strings": [
          "\"index out of range\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/vector/minmax.c": {},
  "gsl/gsl-2.5/vector/minmax_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          42,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          44,
          0
        ],
        "end_point": [
          67,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          69,
          0
        ],
        "end_point": [
          107,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          110,
          0
        ],
        "end_point": [
          139,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          141,
          0
        ],
        "end_point": [
          170,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          173,
          0
        ],
        "end_point": [
          214,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/vector/oper.c": {},
  "gsl/gsl-2.5/vector/oper_complex_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          43,
          1
        ],
        "strings": [
          "\"vectors must have same length\""
        ]
      },
      {
        "start_point": [
          45,
          0
        ],
        "end_point": [
          69,
          1
        ],
        "strings": [
          "\"vectors must have same length\""
        ]
      },
      {
        "start_point": [
          71,
          0
        ],
        "end_point": [
          101,
          1
        ],
        "strings": [
          "\"vectors must have same length\""
        ]
      },
      {
        "start_point": [
          103,
          0
        ],
        "end_point": [
          138,
          1
        ],
        "strings": [
          "\"vectors must have same length\""
        ]
      },
      {
        "start_point": [
          140,
          0
        ],
        "end_point": [
          161,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          163,
          0
        ],
        "end_point": [
          181,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/vector/oper_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          42,
          1
        ],
        "strings": [
          "\"vectors must have same length\""
        ]
      },
      {
        "start_point": [
          44,
          0
        ],
        "end_point": [
          67,
          1
        ],
        "strings": [
          "\"vectors must have same length\""
        ]
      },
      {
        "start_point": [
          69,
          0
        ],
        "end_point": [
          92,
          1
        ],
        "strings": [
          "\"vectors must have same length\""
        ]
      },
      {
        "start_point": [
          94,
          0
        ],
        "end_point": [
          117,
          1
        ],
        "strings": [
          "\"vectors must have same length\""
        ]
      },
      {
        "start_point": [
          119,
          0
        ],
        "end_point": [
          133,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          135,
          0
        ],
        "end_point": [
          149,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/vector/prop.c": {},
  "gsl/gsl-2.5/vector/prop_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          20,
          0
        ],
        "end_point": [
          48,
          1
        ],
        "strings": [
          "\"vectors must have same length\""
        ]
      },
      {
        "start_point": [
          52,
          0
        ],
        "end_point": [
          74,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          76,
          0
        ],
        "end_point": [
          98,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          100,
          0
        ],
        "end_point": [
          122,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          124,
          0
        ],
        "end_point": [
          146,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/vector/reim.c": {},
  "gsl/gsl-2.5/vector/reim_source.c": {},
  "gsl/gsl-2.5/vector/subvector.c": {},
  "gsl/gsl-2.5/vector/subvector_source.c": {},
  "gsl/gsl-2.5/vector/swap.c": {},
  "gsl/gsl-2.5/vector/swap_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          19,
          0
        ],
        "end_point": [
          45,
          1
        ],
        "strings": [
          "\"vector lengths must be equal\""
        ]
      },
      {
        "start_point": [
          47,
          0
        ],
        "end_point": [
          78,
          1
        ],
        "strings": [
          "\"first index is out of range\"",
          "\"second index is out of range\""
        ]
      },
      {
        "start_point": [
          80,
          0
        ],
        "end_point": [
          105,
          1
        ],
        "strings": []
      }
    ]
  },
  "gsl/gsl-2.5/vector/test.c": {
    "main": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "my_error_handler": {
      "start_point": [
        275,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": [
        "\"(caught [%s:%d: %s (%d)])\\n\""
      ]
    }
  },
  "gsl/gsl-2.5/vector/test_complex_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          29,
          0
        ],
        "end_point": [
          36,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          38,
          0
        ],
        "end_point": [
          481,
          1
        ],
        "strings": [
          "\"_calloc pointer\"",
          "\"_calloc size\"",
          "\"_calloc stride\"",
          "\"_isnull\"",
          "\" on calloc vector\"",
          "\"_ispos\"",
          "\" on calloc vector\"",
          "\"_isneg\"",
          "\" on calloc vector\"",
          "\"_alloc pointer\"",
          "\"_alloc size\"",
          "\"_alloc stride\"",
          "\"_set\"",
          "\" writes into array\"",
          "\"_get\"",
          "\" reads from array\"",
          "\"_ptr\"",
          "\" access to array\"",
          "\"_const_ptr\"",
          "\" access to array\"",
          "\"_isnull\"",
          "\" on null vector\"",
          "\"_ispos\"",
          "\" on null vector\"",
          "\"_isneg\"",
          "\" on null vector\"",
          "\"_isnull\"",
          "\" on non-null vector\"",
          "\"_ispos\"",
          "\" on non-null vector\"",
          "\"_isneg\"",
          "\" on non-null vector\"",
          "\"_setzero\"",
          "\" on non-null vector\"",
          "\"_setall\"",
          "\" to non-zero value\"",
          "\"_setbasis\"",
          "\" over range\"",
          "\"_scale\"",
          "\" by 2\"",
          "\"_add_constant\"",
          "\"_swap_elements\"",
          "\" exchanges elements\"",
          "\"_reverse\"",
          "\" reverses elements\"",
          "\"_view_array\"",
          "\"_view_array_with_stride\"",
          "\"_view_subvector\"",
          "\"_view_subvector_with_stride\"",
          "\"_real\"",
          "\"_imag\""
        ]
      },
      {
        "start_point": [
          483,
          0
        ],
        "end_point": [
          630,
          1
        ],
        "strings": [
          "\"_equal vectors unequal\"",
          "\"_equal vectors equal\"",
          "\"_add vector addition\"",
          "\"_swap exchange vectors\"",
          "\"_sub vector subtraction\"",
          "\"_mul multiplication\"",
          "\"_div division\""
        ]
      },
      {
        "start_point": [
          632,
          0
        ],
        "end_point": [
          682,
          1
        ],
        "strings": [
          "\"test_static.dat\"",
          "\"test.dat\"",
          "\"wb\"",
          "\"rb\"",
          "\"_write and read work\""
        ]
      },
      {
        "start_point": [
          687,
          0
        ],
        "end_point": [
          737,
          1
        ],
        "strings": [
          "\"test_static.dat\"",
          "\"test.dat\"",
          "\"w\"",
          "\"r\"",
          "\"_fprintf and fscanf\""
        ]
      },
      {
        "start_point": [
          740,
          0
        ],
        "end_point": [
          792,
          1
        ],
        "strings": [
          "\"_set traps index below lower bound\"",
          "\"_set traps index above upper bound\"",
          "\"_set traps index at upper bound\"",
          "\"_get traps index below lower bound\"",
          "\"_get returns zero real below lower bound\"",
          "\"_get returns zero imag below lower bound\"",
          "\"_get traps index above upper bound\"",
          "\"_get returns zero real above upper bound\"",
          "\"_get returns zero imag above upper bound\"",
          "\"_get traps index at upper bound\"",
          "\"_get returns zero real at upper bound\"",
          "\"_get returns zero imag at upper bound\""
        ]
      },
      {
        "start_point": [
          794,
          0
        ],
        "end_point": [
          803,
          1
        ],
        "strings": [
          "\"_alloc permits zero length\"",
          "\"_alloc reflects zero length\""
        ]
      },
      {
        "start_point": [
          805,
          0
        ],
        "end_point": [
          814,
          1
        ],
        "strings": [
          "\"_calloc permits zero length\"",
          "\"_calloc reflects zero length\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/vector/test_source.c": {
    "FUNCTION": [
      {
        "start_point": [
          29,
          0
        ],
        "end_point": [
          36,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          38,
          0
        ],
        "end_point": [
          583,
          1
        ],
        "strings": [
          "\"_calloc pointer\"",
          "\"_calloc size\"",
          "\"_calloc stride\"",
          "\"_isnull\"",
          "\" on calloc vector\"",
          "\"_ispos\"",
          "\" on calloc vector\"",
          "\"_isneg\"",
          "\" on calloc vector\"",
          "\"_isnonneg\"",
          "\" on calloc vector\"",
          "\"_alloc pointer\"",
          "\"_alloc size\"",
          "\"_alloc stride\"",
          "\"_set\"",
          "\" writes into array\"",
          "\"_get\"",
          "\" reads from array\"",
          "\"_ptr\"",
          "\" access to array\"",
          "\"_const_ptr\"",
          "\" access to array\"",
          "\"_isnull\"",
          "\" on null vector\"",
          "\"_ispos\"",
          "\" on null vector\"",
          "\"_isneg\"",
          "\" on null vector\"",
          "\"_isnonneg\"",
          "\" on null vector\"",
          "\"_isnull\"",
          "\" on non-negative vector\"",
          "\"_ispos\"",
          "\" on non-negative vector\"",
          "\"_isneg\"",
          "\" on non-negative vector\"",
          "\"_isnonneg\"",
          "\" on non-negative vector\"",
          "\"_isnull\"",
          "\" on mixed vector\"",
          "\"_ispos\"",
          "\" on mixed vector\"",
          "\"_isneg\"",
          "\" on mixed vector\"",
          "\"_isnonneg\"",
          "\" on mixed vector\"",
          "\"_isnull\"",
          "\" on non-positive vector\"",
          "\"_ispos\"",
          "\" on non-positive vector\"",
          "\"_isneg\"",
          "\" on non-positive non-null vector\"",
          "\"_isnonneg\"",
          "\" on non-positive non-null vector\"",
          "\"_isnull\"",
          "\" on positive vector\"",
          "\"_ispos\"",
          "\" on positive vector\"",
          "\"_isneg\"",
          "\" on positive vector\"",
          "\"_isnonneg\"",
          "\" on positive vector\"",
          "\"_isnull\"",
          "\" on negative vector\"",
          "\"_ispos\"",
          "\" on negative vector\"",
          "\"_isneg\"",
          "\" on negative vector\"",
          "\"_isnonneg\"",
          "\" on negative vector\"",
          "\"_setzero\"",
          "\" on non-null vector\"",
          "\"_setall\"",
          "\" to non-zero value\"",
          "\"_setbasis\"",
          "\" over range\"",
          "\"_scale\"",
          "\" by 2\"",
          "\"_add_constant\"",
          "\"_swap_elements\"",
          "\" (2,5)\"",
          "\"_reverse\"",
          "\" reverses elements\"",
          "\"_view_array\"",
          "\"_view_array_with_stride\"",
          "\"_view_subvector\"",
          "\"_view_subvector_with_stride\"",
          "\"_max returns correct maximum value\"",
          "\"_min returns correct minimum value\"",
          "\"_minmax returns correct maximum value\"",
          "\"_minmax returns correct minimum value\"",
          "\"_max_index returns correct maximum i\"",
          "\"_min_index returns correct minimum i\"",
          "\"_minmax_index returns correct maximum i\"",
          "\"_minmax_index returns correct minimum i\"",
          "\"_max returns correct maximum value for NaN\"",
          "\"_min returns correct minimum value for NaN\"",
          "\"_minmax returns correct maximum value for NaN\"",
          "\"_minmax returns correct minimum value for NaN\"",
          "\"_max_index returns correct maximum i for NaN\"",
          "\"_min_index returns correct minimum i for NaN\"",
          "\"_minmax_index returns correct maximum i for NaN\"",
          "\"_minmax_index returns correct minimum i for NaN\""
        ]
      },
      {
        "start_point": [
          585,
          0
        ],
        "end_point": [
          709,
          1
        ],
        "strings": [
          "\"_equal vectors unequal\"",
          "\"_equal vectors equal\"",
          "\"_add vector addition\"",
          "\"_swap exchange vectors\"",
          "\"_sub vector subtraction\"",
          "\"_mul multiplication\"",
          "\"_div division\""
        ]
      },
      {
        "start_point": [
          712,
          0
        ],
        "end_point": [
          759,
          1
        ],
        "strings": [
          "\"test_static.dat\"",
          "\"test.dat\"",
          "\"wb\"",
          "\"rb\"",
          "\"_write and read\""
        ]
      },
      {
        "start_point": [
          764,
          0
        ],
        "end_point": [
          811,
          1
        ],
        "strings": [
          "\"test_static.dat\"",
          "\"test.dat\"",
          "\"w\"",
          "\"r\"",
          "\"_fprintf and fscanf\""
        ]
      },
      {
        "start_point": [
          814,
          0
        ],
        "end_point": [
          851,
          1
        ],
        "strings": [
          "\"_set traps index below lower bound\"",
          "\"_set traps index above upper bound\"",
          "\"_set traps index at upper bound\"",
          "\"_get traps index below lower bound\"",
          "\"_get returns zero for index below lower bound\"",
          "\"_get traps index above upper bound\"",
          "\"_get returns zero for index above upper bound\"",
          "\"_get traps index at upper bound\"",
          "\"_get returns zero for index at upper bound\""
        ]
      },
      {
        "start_point": [
          853,
          0
        ],
        "end_point": [
          862,
          1
        ],
        "strings": [
          "\"_alloc permits zero length\"",
          "\"_alloc reflects zero length\""
        ]
      },
      {
        "start_point": [
          864,
          0
        ],
        "end_point": [
          873,
          1
        ],
        "strings": [
          "\"_calloc permits zero length\"",
          "\"_calloc reflects zero length\""
        ]
      }
    ]
  },
  "gsl/gsl-2.5/vector/test_static.c": {},
  "gsl/gsl-2.5/vector/vector.c": {},
  "gsl/gsl-2.5/vector/view.c": {},
  "gsl/gsl-2.5/vector/view.h": {},
  "gsl/gsl-2.5/vector/view_source.c": {},
  "gsl/gsl-2.5/wavelet/bspline.c": {
    "bspline_init": {
      "start_point": [
        371,
        0
      ],
      "end_point": [
        473,
        1
      ],
      "strings": []
    },
    "bspline_centered_init": {
      "start_point": [
        475,
        0
      ],
      "end_point": [
        577,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/wavelet/daubechies.c": {
    "daubechies_init": {
      "start_point": [
        285,
        0
      ],
      "end_point": [
        363,
        1
      ],
      "strings": []
    },
    "daubechies_centered_init": {
      "start_point": [
        365,
        0
      ],
      "end_point": [
        443,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/wavelet/dwt.c": {
    "binary_logn": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "dwt_step": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "gsl_wavelet_transform": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": [
        "\"not enough workspace provided\"",
        "\"n is not a power of 2\""
      ]
    },
    "gsl_wavelet_transform_forward": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "gsl_wavelet_transform_inverse": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "gsl_dwt_vector": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "gsl_wavelet2d_transform": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"2d dwt works only with square matrix\"",
        "\"not enough workspace provided\"",
        "\"n is not a power of 2\""
      ]
    },
    "gsl_wavelet2d_nstransform": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": [
        "\"2d dwt works only with square matrix\"",
        "\"not enough workspace provided\"",
        "\"n is not a power of 2\""
      ]
    },
    "gsl_wavelet2d_transform_forward": {
      "start_point": [
        300,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": []
    },
    "gsl_wavelet2d_transform_inverse": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": []
    },
    "gsl_wavelet2d_nstransform_forward": {
      "start_point": [
        316,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    },
    "gsl_wavelet2d_nstransform_inverse": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": []
    },
    "gsl_wavelet2d_transform_matrix": {
      "start_point": [
        333,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    },
    "gsl_wavelet2d_transform_matrix_forward": {
      "start_point": [
        344,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": []
    },
    "gsl_wavelet2d_transform_matrix_inverse": {
      "start_point": [
        354,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": []
    },
    "gsl_wavelet2d_nstransform_matrix": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        373,
        1
      ],
      "strings": []
    },
    "gsl_wavelet2d_nstransform_matrix_forward": {
      "start_point": [
        375,
        0
      ],
      "end_point": [
        383,
        1
      ],
      "strings": []
    },
    "gsl_wavelet2d_nstransform_matrix_inverse": {
      "start_point": [
        385,
        0
      ],
      "end_point": [
        393,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/wavelet/gsl_wavelet.h": {},
  "gsl/gsl-2.5/wavelet/gsl_wavelet2d.h": {},
  "gsl/gsl-2.5/wavelet/haar.c": {
    "haar_init": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "haar_centered_init": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    }
  },
  "gsl/gsl-2.5/wavelet/test.c": {
    "urand": {
      "start_point": [
        16,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "test_1d": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": [
        "\"%s(%d), n = %d, stride = %d, maxerr = %g\"",
        "\"%s(%d) other data untouched, n = %d, stride = %d\""
      ]
    },
    "test_2d": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": [
        "\"standard\"",
        "\"nonstd\"",
        "\"%s(%d)-2d %s, n = %d, tda = %d, maxerr = %g\"",
        "\"%s(%d)-2d %s other data untouched, n = %d, tda = %d\""
      ]
    }
  },
  "gsl/gsl-2.5/wavelet/wavelet.c": {
    "gsl_wavelet_alloc": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"failed to allocate space for wavelet struct\"",
        "\"invalid wavelet member\""
      ]
    },
    "gsl_wavelet_free": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "gsl_wavelet_name": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "gsl_wavelet_print": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"Wavelet type: %s\\n\"",
        "\" h1(%d):%12.8f   g1(%d):%12.8f       h2(%d):%12.8f   g2(%d):%12.8f\\n\"",
        "\" h1(%d):%12.8f   g1(%d):%12.8f       h2(%d):%12.8f   g2(%d):%12.8f\\n\"",
        "\"h1(%d):%12.8f  g1(%d):%12.8f      h2(%d):%12.8f  g2(%d):%12.8f\\n\""
      ]
    },
    "gsl_wavelet_workspace_alloc": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": [
        "\"length n must be positive integer\"",
        "\"failed to allocate struct\"",
        "\"failed to allocate scratch space\""
      ]
    },
    "gsl_wavelet_workspace_free": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    }
  }
}