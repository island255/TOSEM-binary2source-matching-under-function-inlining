{
  "glpk/glpk-4.65/examples/glpsol.c": {
    "str2int": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": [
        "\"str2int: x = %d\\n\""
      ]
    },
    "str2num": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": [
        "\"str2num: x = %g\\n\""
      ]
    },
    "print_help": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        430,
        1
      ],
      "strings": [
        "\"Usage: %s [options...] filename\\n\"",
        "\"\\n\"",
        "\"General options:\\n\"",
        "\"   --mps             read LP/MIP problem in fixed MPS fo\"",
        "\"rmat\\n\"",
        "\"   --freemps         read LP/MIP problem in free MPS for\"",
        "\"mat (default)\\n\"",
        "\"   --lp              read LP/MIP problem in CPLEX LP for\"",
        "\"mat\\n\"",
        "\"   --glp             read LP/MIP problem in GLPK format \"",
        "\"\\n\"",
        "\"   --math            read LP/MIP model written in GNU Ma\"",
        "\"thProg modeling\\n\"",
        "\"                     language\\n\"",
        "\"   -m filename, --model filename\\n\"",
        "\"                     read model section and optional dat\"",
        "\"a section from\\n\"",
        "\"                     filename (same as --math)\\n\"",
        "\"   -d filename, --data filename\\n\"",
        "\"                     read data section from filename (fo\"",
        "\"r --math only);\\n\"",
        "\"                     if model file also has data section\"",
        "\", it is ignored\\n\"",
        "\"   -y filename, --display filename\\n\"",
        "\"                     send display output to filename (fo\"",
        "\"r --math only);\\n\"",
        "\"                     by default the output is sent to te\"",
        "\"rminal\\n\"",
        "\"   --seed value      initialize pseudo-random number gen\"",
        "\"erator used in\\n\"",
        "\"                     MathProg model with specified seed \"",
        "\"(any integer);\\n\"",
        "\"                     if seed value is ?, some random see\"",
        "\"d will be used\\n\"",
        "\"   --mincost         read min-cost flow problem in DIMAC\"",
        "\"S format\\n\"",
        "\"   --maxflow         read maximum flow problem in DIMACS\"",
        "\" format\\n\"",
        "\"   --cnf             read CNF-SAT problem in DIMACS form\"",
        "\"at\\n\"",
        "\"   --simplex         use simplex method (default)\\n\"",
        "\"   --interior        use interior point method (LP only)\"",
        "\"\\n\"",
        "\"   -r filename, --read filename\\n\"",
        "\"                     read solution from filename rather \"",
        "\"to find it with\\n\"",
        "\"                     the solver\\n\"",
        "\"   --min             minimization\\n\"",
        "\"   --max             maximization\\n\"",
        "\"   --scale           scale problem (default)\\n\"",
        "\"   --noscale         do not scale problem\\n\"",
        "\"   -o filename, --output filename\\n\"",
        "\"                     write solution to filename in print\"",
        "\"able format\\n\"",
        "\"   -w filename, --write filename\\n\"",
        "\"                     write solution to filename in plain\"",
        "\" text format\\n\"",
        "\"   --ranges filename\\n\"",
        "\"                     write sensitivity analysis report t\"",
        "\"o filename in\\n\"",
        "\"                     printable format (simplex only)\\n\"",
        "\"   --tmlim nnn       limit solution time to nnn seconds \"",
        "\"\\n\"",
        "\"   --memlim nnn      limit available memory to nnn megab\"",
        "\"ytes\\n\"",
        "\"   --check           do not solve problem, check input d\"",
        "\"ata only\\n\"",
        "\"   --name probname   change problem name to probname\\n\"",
        "\"   --hide            remove all symbolic names from prob\"",
        "\"lem object\\n\"",
        "\"   --wmps filename   write problem to filename in fixed \"",
        "\"MPS format\\n\"",
        "\"   --wfreemps filename\\n\"",
        "\"                     write problem to filename in free M\"",
        "\"PS format\\n\"",
        "\"   --wlp filename    write problem to filename in CPLEX \"",
        "\"LP format\\n\"",
        "\"   --wglp filename   write problem to filename in GLPK f\"",
        "\"ormat\\n\"",
        "\"   --wpb filename    write problem to filename in OPB fo\"",
        "\"rmat\\n\"",
        "\"   --wnpb filename   write problem to filename in normal\"",
        "\"ized OPB format\\n\"",
        "\"   --wcnf filename   write problem to filename in DIMACS\"",
        "\" CNF-SAT format\\n\"",
        "\"   --log filename    write copy of terminal output to fi\"",
        "\"lename\\n\"",
        "\"   -h, --help        display this help information and e\"",
        "\"xit\\n\"",
        "\"   -v, --version     display program version and exit\\n\"",
        "\"\\n\"",
        "\"LP basis factorization options:\\n\"",
        "\"   --luf             LU + Forrest-Tomlin update\\n\"",
        "\"                     (faster, less stable; default)\\n\"",
        "\"   --cbg             LU + Schur complement + Bartels-Gol\"",
        "\"ub update\\n\"",
        "\"                     (slower, more stable)\\n\"",
        "\"   --cgr             LU + Schur complement + Givens rota\"",
        "\"tion update\\n\"",
        "\"                     (slower, more stable)\\n\"",
        "\"   --luf             plain LU-factorization (default)\\n\"",
        "\"   --btf             block triangular LU-factorization\\n\"",
        "\"   --ft              Forrest-Tomlin update (requires --l\"",
        "\"uf; default)\\n\"",
        "\"   --cbg             Schur complement + Bartels-Golub up\"",
        "\"date\\n\"",
        "\"   --cgr             Schur complement + Givens rotation \"",
        "\"update\\n\"",
        "\"\\n\"",
        "\"Options specific to simplex solver:\\n\"",
        "\"   --primal          use primal simplex (default)\\n\"",
        "\"   --dual            use dual simplex\\n\"",
        "\"   --std             use standard initial basis of all s\"",
        "\"lacks\\n\"",
        "\"   --adv             use advanced initial basis (default\"",
        "\")\\n\"",
        "\"   --bib             use Bixby's initial basis\\n\"",
        "\"   --ini filename    use as initial basis previously sav\"",
        "\"ed with -w\\n\"",
        "\"                     (disables LP presolver)\\n\"",
        "\"   --steep           use steepest edge technique (defaul\"",
        "\"t)\\n\"",
        "\"   --nosteep         use standard \\\"textbook\\\" pricing\\n\"",
        "\"   --relax           use Harris' two-pass ratio test (de\"",
        "\"fault)\\n\"",
        "\"   --norelax         use standard \\\"textbook\\\" ratio tes\"",
        "\"t\\n\"",
        "\"   --flip            use flip-flop ratio test (assumes -\"",
        "\"-dual)\\n\"",
        "\"   --flip            use long-step ratio test\\n\"",
        "\"   --presol          use presolver (default; assumes --s\"",
        "\"cale and --adv)\\n\"",
        "\"   --nopresol        do not use presolver\\n\"",
        "\"   --exact           use simplex method based on exact a\"",
        "\"rithmetic\\n\"",
        "\"   --xcheck          check final basis using exact arith\"",
        "\"metic\\n\"",
        "\"\\n\"",
        "\"Options specific to interior-point solver:\\n\"",
        "\"   --nord            use natural (original) ordering\\n\"",
        "\"   --qmd             use quotient minimum degree orderin\"",
        "\"g\\n\"",
        "\"   --amd             use approximate minimum degree orde\"",
        "\"ring (default)\\n\"",
        "\"   --symamd          use approximate minimum degree orde\"",
        "\"ring\\n\"",
        "\"\\n\"",
        "\"Options specific to MIP solver:\\n\"",
        "\"   --nomip           consider all integer variables as c\"",
        "\"ontinuous\\n\"",
        "\"                     (allows solving MIP as pure LP)\\n\"",
        "\"   --first           branch on first integer variable\\n\"",
        "\"   --last            branch on last integer variable\\n\"",
        "\"   --mostf           branch on most fractional variable \"",
        "\"\\n\"",
        "\"   --drtom           branch using heuristic by Driebeck \"",
        "\"and Tomlin\\n\"",
        "\"                     (default)\\n\"",
        "\"   --pcost           branch using hybrid pseudocost heur\"",
        "\"istic (may be\\n\"",
        "\"                     useful for hard instances)\\n\"",
        "\"   --dfs             backtrack using depth first search \"",
        "\"\\n\"",
        "\"   --bfs             backtrack using breadth first searc\"",
        "\"h\\n\"",
        "\"   --bestp           backtrack using the best projection\"",
        "\" heuristic\\n\"",
        "\"   --bestb           backtrack using node with best loca\"",
        "\"l bound\\n\"",
        "\"                     (default)\\n\"",
        "\"   --intopt          use MIP presolver (default)\\n\"",
        "\"   --nointopt        do not use MIP presolver\\n\"",
        "\"   --binarize        replace general integer variables b\"",
        "\"y binary ones\\n\"",
        "\"                     (assumes --intopt)\\n\"",
        "\"   --fpump           apply feasibility pump heuristic\\n\"",
        "\"   --proxy [nnn]     apply proximity search heuristic (n\"",
        "\"nn is time limit\\n\"",
        "\"                     in seconds; default is 60)\\n\"",
        "\"   --gomory          generate Gomory's mixed integer cut\"",
        "\"s\\n\"",
        "\"   --mir             generate MIR (mixed integer roundin\"",
        "\"g) cuts\\n\"",
        "\"   --cover           generate mixed cover cuts\\n\"",
        "\"   --clique          generate clique cuts\\n\"",
        "\"   --cuts            generate all cuts above\\n\"",
        "\"   --mipgap tol      set relative mip gap tolerance to t\"",
        "\"ol\\n\"",
        "\"   --minisat         translate integer feasibility probl\"",
        "\"em to CNF-SAT\\n\"",
        "\"                     and solve it with MiniSat solver\\n\"",
        "\"   --objbnd bound    add inequality obj <= bound (minimi\"",
        "\"zation) or\\n\"",
        "\"                     obj >= bound (maximization) to inte\"",
        "\"ger feasibility\\n\"",
        "\"                     problem (assumes --minisat)\\n\"",
        "\"\\n\"",
        "\"For description of the MPS and CPLEX LP formats see Refe\"",
        "\"rence Manual.\\n\"",
        "\"For description of the modeling language see \\\"GLPK: Mod\"",
        "\"eling Language\\n\"",
        "\"GNU MathProg\\\". Both documents are included in the GLPK \"",
        "\"distribution.\\n\"",
        "\"\\n\"",
        "\"See GLPK web page at <http://www.gnu.org/software/glpk/g\"",
        "\"lpk.html>.\\n\"",
        "\"\\n\"",
        "\"Please report bugs to <bug-glpk@gnu.org>.\\n\""
      ]
    },
    "print_version": {
      "start_point": [
        432,
        0
      ],
      "end_point": [
        449,
        1
      ],
      "strings": [
        "\"GLPSOL: GLPK LP/MIP Solver, v%s\\n\"",
        "\"Copyright (C) 2000-2017 Andrew Makhorin, Department for \"",
        "\"Applied\\n\"",
        "\"Informatics, Moscow Aviation Institute, Moscow, Russia. \"",
        "\"All rights\\n\"",
        "\"reserved. E-mail: <mao@gnu.org>.\\n\"",
        "\"\\n\"",
        "\"This program has ABSOLUTELY NO WARRANTY.\\n\"",
        "\"\\n\"",
        "\"This program is free software; you may re-distribute it \"",
        "\"under the terms\\n\"",
        "\"of the GNU General Public License version 3 or later.\\n\""
      ]
    },
    "parse_cmdline": {
      "start_point": [
        451,
        0
      ],
      "end_point": [
        950,
        1
      ],
      "strings": [
        "\"--mps\"",
        "\"--freemps\"",
        "\"--lp\"",
        "\"--cpxlp\"",
        "\"--glp\"",
        "\"--math\"",
        "\"-m\"",
        "\"--model\"",
        "\"-d\"",
        "\"--data\"",
        "\"No input data file specified\\n\"",
        "\"Too many input data files\\n\"",
        "\"-y\"",
        "\"--display\"",
        "\"No display output file specified\\n\"",
        "\"Only one display output file allowed\\n\"",
        "\"--seed\"",
        "\"No seed value specified\\n\"",
        "\"?\"",
        "\"Invalid seed value '%s'\\n\"",
        "\"--mincost\"",
        "\"--maxflow\"",
        "\") || p(\"",
        "\"No input solution file specified\\n\"",
        "\"Only one input solution file allowed\\n\"",
        "\") || p(\"",
        "\"No output solution file specified\\n\"",
        "\"Only one output solution file allowed\\n\"",
        "\") || p(\"",
        "\"No output solution file specified\\n\"",
        "\"Only one output solution file allowed\\n\"",
        "\") || p(\"",
        "\"No output file specified to write sensitivity a\"",
        "\"nalysis report\\n\"",
        "\"Only one output file allowed to write sensitivi\"",
        "\"ty analysis report\\n\"",
        "\"No time limit specified\\n\"",
        "\"Invalid time limit '%s'\\n\"",
        "\"No memory limit specified\\n\"",
        "\"Invalid memory limit '%s'\\n\"",
        "\"No problem name specified\\n\"",
        "\"Only one problem name allowed\\n\"",
        "\"No fixed MPS output file specified\\n\"",
        "\"Only one fixed MPS output file allowed\\n\"",
        "\"No free MPS output file specified\\n\"",
        "\"Only one free MPS output file allowed\\n\"",
        "\") || p(\"",
        "\") || p(\"",
        "\"No CPLEX LP output file specified\\n\"",
        "\"Only one CPLEX LP output file allowed\\n\"",
        "\"No GLPK LP/MIP output file specified\\n\"",
        "\"Only one GLPK LP/MIP output file allowed\\n\"",
        "\"No problem output file specified\\n\"",
        "\"Only one OPB output file allowed\\n\"",
        "\"No problem output file specified\\n\"",
        "\"Only one normalized OPB output file allowed\\n\"",
        "\"No problem output file specified\\n\"",
        "\"Only one output DIMACS CNF-SAT file allowed\\n\"",
        "\"No log file specified\\n\"",
        "\"Only one log file allowed\\n\"",
        "\") || p(\"",
        "\") || p(\"",
        "\"No initial basis file specified\\n\"",
        "\"Only one initial basis file allowed\\n\"",
        "\"Invalid proxy time limit '%s'\\n\"",
        "\"No relative gap tolerance specified\\n\"",
        "\"Invalid relative mip gap tolerance '%s'\\n\"",
        "\"No objective bound specified\\n\"",
        "\"Invalid objective bound '%s' (should be integer\"",
        "\" value)\\n\"",
        "\"No input MIP solution file specified\\n\"",
        "\"Only one input MIP solution file allowed\\n\"",
        "\"No output MIP solution file specified\\n\"",
        "\"Only one output MIP solution file allowed\\n\"",
        "\"Invalid option '%s'; try %s --help\\n\"",
        "\"Only one input problem file allowed\\n\""
      ]
    },
    "main": {
      "start_point": [
        958,
        0
      ],
      "end_point": [
        1581,
        1
      ],
      "strings": [
        "\"Unable to create log file\\n\"",
        "\"Parameter(s) specified in the command line:\"",
        "\"\\n\"",
        "\" %s\"",
        "\"\\n\"",
        "\"No input problem file specified; try %s --help\\n\"",
        "\"MPS file processing error\\n\"",
        "\"CPLEX LP file processing error\\n\"",
        "\"GLPK LP/MIP file processing error\\n\"",
        "\"MathProg model processing error\\n\"",
        "\"DIMACS file processing error\\n\"",
        "\"DIMACS file processing error\\n\"",
        "\"DIMACS file processing error\\n\"",
        "\"Unable to write problem in fixed MPS format\\n\"",
        "\"Unable to write problem in free MPS format\\n\"",
        "\"Unable to write problem in CPLEX LP format\\n\"",
        "\"Unable to write problem in GLPK format\\n\"",
        "\"Unable to write problem in OPB format\\n\"",
        "\"Unable to write problem in normalized OPB format\\n\"",
        "\"Unable to write problem in DIMACS CNF-SAT format\\n\"",
        "\"--- Problem Characteristics ---\\n\"",
        "\"Number of rows               = %8d\\n\"",
        "\"Number of columns            = %8d\\n\"",
        "\"Number of non-zeros (matrix) = %8d\\n\"",
        "\"Number of non-zeros (objrow) = %8d\\n\"",
        "\"Interior-point method is not able to solve MIP pro\"",
        "\"blem; use --simplex\\n\"",
        "\"Unable to read problem solution\\n\"",
        "\"Unable to read initial MIP solution\\n\"",
        "\"Unable to read initial basis\\n\"",
        "\"If you need to check final basis for non-opt\"",
        "\"imal solution, use --nopresol\\n\"",
        "\"If you need actual output for non-optimal solut\"",
        "\"ion, use --nopresol\\n\"",
        "\"Time used:   %.1f secs\\n\"",
        "\"Memory used: %.1f Mb (%s bytes)\\n\"",
        "\"Memory used: %.1f Mb (%.0f bytes)\\n\"",
        "\"Model postsolving error\\n\"",
        "\"Unable to write problem solution\\n\"",
        "\"Unable to write problem solution\\n\"",
        "\"Unable to write sensitivity analysis repo\"",
        "\"rt\\n\"",
        "\"Cannot produce sensitivity analysis report d\"",
        "\"ue to error in basis factorization (glp_factorize\"",
        "\" returned %d); try --nopresol\\n\"",
        "\"Cannot produce sensitivity analysis report for \"",
        "\"non-optimal basic solution\\n\"",
        "\"Cannot produce sensitivity analysis report for int\"",
        "\"erior-point or MIP solution\\n\"",
        "\"Error: %d memory block(s) were lost\\n\"",
        "\"Error: %d memory block(s) were lost\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/iptsamp.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        14,
        1
      ],
      "strings": [
        "\"25fv47.mps\"",
        "\"25fv47.txt\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/mplsamp1.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": [
        "\"egypt.mod\"",
        "\"Error on translating model\\n\"",
        "\"Error on generating model\\n\"",
        "\"egypt.mps\"",
        "\"Error on writing MPS file\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/mplsamp2.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": [
        "\"sudoku.mod\"",
        "\"Error on translating model\\n\"",
        "\"sudoku.dat\"",
        "\"Error on translating data\\n\"",
        "\"Error on generating model\\n\"",
        "\"Error on postsolving model\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/netgen.c": {
    "main": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": [
        "\"netgn%03d.min\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/nppsamp.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": [
        "\"murtagh.mps\"",
        "\"Error on reading problem data\\n\"",
        "\"LP has no primal feasible solution\\n\"",
        "\"LP has no dual feasible solution\\n\"",
        "\"Unable to recover non-optimal solution\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/sample.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"sample\"",
        "\"p\"",
        "\"q\"",
        "\"r\"",
        "\"x1\"",
        "\"x2\"",
        "\"x3\"",
        "\"\\nz = %g; x1 = %g; x2 = %g; x3 = %g\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/spxsamp1.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": [
        "\"25fv47.mps\"",
        "\"25fv47.txt\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/spxsamp2.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        17,
        1
      ],
      "strings": [
        "\"25fv47.mps\"",
        "\"25fv47.txt\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/cplex/cplex.c": {
    "findintparam": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "getintparam": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "finddblparam": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "getdblparam": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": []
    },
    "finderrstring": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    },
    "error": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": []
    },
    "checkenv": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    },
    "invalidate": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    },
    "enlargerflag": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": []
    },
    "enlargeiwork": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": []
    },
    "CPXaddcols": {
      "start_point": [
        269,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": []
    },
    "CPXaddrows": {
      "start_point": [
        359,
        0
      ],
      "end_point": [
        475,
        1
      ],
      "strings": []
    },
    "CPXbaropt": {
      "start_point": [
        477,
        0
      ],
      "end_point": [
        483,
        1
      ],
      "strings": [
        "\"CPXbaropt: not implemented yet\\n\""
      ]
    },
    "CPXbinvrow": {
      "start_point": [
        485,
        0
      ],
      "end_point": [
        493,
        1
      ],
      "strings": [
        "\"CPXbinvrow: not implemented yet\\n\""
      ]
    },
    "CPXchgbds": {
      "start_point": [
        495,
        0
      ],
      "end_point": [
        553,
        1
      ],
      "strings": []
    },
    "CPXchgcoeflist": {
      "start_point": [
        555,
        0
      ],
      "end_point": [
        710,
        1
      ],
      "strings": []
    },
    "CPXchgobjsen": {
      "start_point": [
        712,
        0
      ],
      "end_point": [
        728,
        1
      ],
      "strings": []
    },
    "CPXchgsense": {
      "start_point": [
        730,
        0
      ],
      "end_point": [
        799,
        1
      ],
      "strings": []
    },
    "CPXcloseCPLEX": {
      "start_point": [
        801,
        0
      ],
      "end_point": [
        823,
        1
      ],
      "strings": []
    },
    "CPXcopybase": {
      "start_point": [
        825,
        0
      ],
      "end_point": [
        877,
        1
      ],
      "strings": []
    },
    "CPXcopybasednorms": {
      "start_point": [
        879,
        0
      ],
      "end_point": [
        885,
        1
      ],
      "strings": []
    },
    "CPXcopylp": {
      "start_point": [
        887,
        0
      ],
      "end_point": [
        897,
        1
      ],
      "strings": []
    },
    "CPXcopylpwnames": {
      "start_point": [
        899,
        0
      ],
      "end_point": [
        1063,
        1
      ],
      "strings": []
    },
    "CPXcreateprob": {
      "start_point": [
        1065,
        0
      ],
      "end_point": [
        1084,
        1
      ],
      "strings": []
    },
    "CPXdelcols": {
      "start_point": [
        1086,
        0
      ],
      "end_point": [
        1104,
        1
      ],
      "strings": []
    },
    "CPXdelrows": {
      "start_point": [
        1106,
        0
      ],
      "end_point": [
        1126,
        1
      ],
      "strings": []
    },
    "CPXdelsetcols": {
      "start_point": [
        1128,
        0
      ],
      "end_point": [
        1135,
        1
      ],
      "strings": [
        "\"CPXdelsetcols: not implemented yet\\n\""
      ]
    },
    "CPXdelsetrows": {
      "start_point": [
        1137,
        0
      ],
      "end_point": [
        1165,
        1
      ],
      "strings": []
    },
    "CPXfreeprob": {
      "start_point": [
        1169,
        0
      ],
      "end_point": [
        1198,
        1
      ],
      "strings": []
    },
    "CPXgetbase": {
      "start_point": [
        1200,
        0
      ],
      "end_point": [
        1242,
        1
      ],
      "strings": []
    },
    "CPXgetbasednorms": {
      "start_point": [
        1244,
        0
      ],
      "end_point": [
        1254,
        1
      ],
      "strings": []
    },
    "CPXgetbhead": {
      "start_point": [
        1256,
        0
      ],
      "end_point": [
        1264,
        1
      ],
      "strings": [
        "\"CPXgetbhead: not implemented yet\\n\""
      ]
    },
    "CPXgetdblparam": {
      "start_point": [
        1266,
        0
      ],
      "end_point": [
        1279,
        1
      ],
      "strings": []
    },
    "CPXgetdj": {
      "start_point": [
        1281,
        0
      ],
      "end_point": [
        1304,
        1
      ],
      "strings": []
    },
    "CPXgeterrorstring": {
      "start_point": [
        1306,
        0
      ],
      "end_point": [
        1315,
        1
      ],
      "strings": [
        "\"CPLEX Error %5d:  %s.\\n\""
      ]
    },
    "CPXgetijdiv": {
      "start_point": [
        1317,
        0
      ],
      "end_point": [
        1325,
        1
      ],
      "strings": [
        "\"CPXgetijdiv: not implemented yet\\n\""
      ]
    },
    "CPXgetintparam": {
      "start_point": [
        1327,
        0
      ],
      "end_point": [
        1340,
        1
      ],
      "strings": []
    },
    "CPXgetlb": {
      "start_point": [
        1342,
        0
      ],
      "end_point": [
        1351,
        1
      ],
      "strings": [
        "\"CPXgetlb: not implemented yet\\n\""
      ]
    },
    "CPXgetmethod": {
      "start_point": [
        1353,
        0
      ],
      "end_point": [
        1360,
        1
      ],
      "strings": []
    },
    "CPXgetnumcols": {
      "start_point": [
        1362,
        0
      ],
      "end_point": [
        1369,
        1
      ],
      "strings": []
    },
    "CPXgetnumnz": {
      "start_point": [
        1371,
        0
      ],
      "end_point": [
        1378,
        1
      ],
      "strings": []
    },
    "CPXgetnumrows": {
      "start_point": [
        1380,
        0
      ],
      "end_point": [
        1387,
        1
      ],
      "strings": []
    },
    "CPXgetobjval": {
      "start_point": [
        1389,
        0
      ],
      "end_point": [
        1405,
        1
      ],
      "strings": []
    },
    "CPXgetpi": {
      "start_point": [
        1407,
        0
      ],
      "end_point": [
        1430,
        1
      ],
      "strings": []
    },
    "CPXgetsense": {
      "start_point": [
        1432,
        0
      ],
      "end_point": [
        1442,
        1
      ],
      "strings": [
        "\"CPXgetsense: not implemented yet\\n\""
      ]
    },
    "CPXgetslack": {
      "start_point": [
        1444,
        0
      ],
      "end_point": [
        1493,
        1
      ],
      "strings": []
    },
    "CPXgetstat": {
      "start_point": [
        1495,
        0
      ],
      "end_point": [
        1502,
        1
      ],
      "strings": []
    },
    "CPXgetub": {
      "start_point": [
        1504,
        0
      ],
      "end_point": [
        1513,
        1
      ],
      "strings": [
        "\"CPXgetub: not implemented yet\\n\""
      ]
    },
    "CPXgetweight": {
      "start_point": [
        1515,
        0
      ],
      "end_point": [
        1529,
        1
      ],
      "strings": [
        "\"CPXgetweight: not implemented yet\\n\""
      ]
    },
    "CPXgetx": {
      "start_point": [
        1531,
        0
      ],
      "end_point": [
        1554,
        1
      ],
      "strings": []
    },
    "CPXinfodblparam": {
      "start_point": [
        1556,
        0
      ],
      "end_point": [
        1574,
        1
      ],
      "strings": []
    },
    "CPXinfointparam": {
      "start_point": [
        1576,
        0
      ],
      "end_point": [
        1594,
        1
      ],
      "strings": []
    },
    "CPXmdleave": {
      "start_point": [
        1596,
        0
      ],
      "end_point": [
        1609,
        1
      ],
      "strings": []
    },
    "CPXnewcols": {
      "start_point": [
        1611,
        0
      ],
      "end_point": [
        1673,
        1
      ],
      "strings": []
    },
    "CPXnewrows": {
      "start_point": [
        1675,
        0
      ],
      "end_point": [
        1743,
        1
      ],
      "strings": []
    },
    "CPXopenCPLEX": {
      "start_point": [
        1745,
        0
      ],
      "end_point": [
        1760,
        1
      ],
      "strings": []
    },
    "CPXpivotin": {
      "start_point": [
        1762,
        0
      ],
      "end_point": [
        1791,
        1
      ],
      "strings": []
    },
    "CPXpivotout": {
      "start_point": [
        1793,
        0
      ],
      "end_point": [
        1824,
        1
      ],
      "strings": []
    },
    "CPXsavwrite": {
      "start_point": [
        1828,
        0
      ],
      "end_point": [
        1835,
        1
      ],
      "strings": [
        "\"CPXsavwrite: not implemented yet\\n\""
      ]
    },
    "CPXsetdblparam": {
      "start_point": [
        1837,
        0
      ],
      "end_point": [
        1857,
        1
      ],
      "strings": []
    },
    "CPXsetintparam": {
      "start_point": [
        1859,
        0
      ],
      "end_point": [
        1879,
        1
      ],
      "strings": []
    },
    "CPXsolninfo": {
      "start_point": [
        1881,
        0
      ],
      "end_point": [
        1905,
        1
      ],
      "strings": []
    },
    "CPXsolution": {
      "start_point": [
        1907,
        0
      ],
      "end_point": [
        1936,
        1
      ],
      "strings": []
    },
    "CPXstrongbranch": {
      "start_point": [
        1938,
        0
      ],
      "end_point": [
        1952,
        1
      ],
      "strings": []
    },
    "xstrcasecmp": {
      "start_point": [
        1954,
        0
      ],
      "end_point": [
        1962,
        1
      ],
      "strings": []
    },
    "getfiletype": {
      "start_point": [
        1964,
        0
      ],
      "end_point": [
        1983,
        1
      ],
      "strings": [
        "\"gz\""
      ]
    },
    "CPXwriteprob": {
      "start_point": [
        1985,
        0
      ],
      "end_point": [
        2033,
        1
      ],
      "strings": [
        "\"MPS\"",
        "\"LP\"",
        "\"RMP\"",
        "\"REW\"",
        "\"RLP\""
      ]
    },
    "solvelp": {
      "start_point": [
        2037,
        0
      ],
      "end_point": [
        2109,
        1
      ],
      "strings": []
    },
    "CPXprimopt": {
      "start_point": [
        2111,
        0
      ],
      "end_point": [
        2115,
        1
      ],
      "strings": []
    },
    "CPXdualopt": {
      "start_point": [
        2117,
        0
      ],
      "end_point": [
        2121,
        1
      ],
      "strings": []
    },
    "CPXlpopt": {
      "start_point": [
        2123,
        0
      ],
      "end_point": [
        2127,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/examples/cplex/cplex.h": {},
  "glpk/glpk-4.65/examples/oldapi/lpx.c": {
    "find_cps": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    },
    "reset_cps": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    },
    "lpx_create_prob": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    },
    "lpx_set_prob_name": {
      "start_point": [
        226,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": []
    },
    "lpx_set_obj_name": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": []
    },
    "lpx_set_obj_dir": {
      "start_point": [
        238,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    },
    "lpx_add_rows": {
      "start_point": [
        244,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    },
    "lpx_add_cols": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    },
    "lpx_set_row_name": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": []
    },
    "lpx_set_col_name": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        264,
        1
      ],
      "strings": []
    },
    "lpx_set_row_bnds": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    },
    "lpx_set_col_bnds": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        276,
        1
      ],
      "strings": []
    },
    "lpx_set_obj_coef": {
      "start_point": [
        278,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": []
    },
    "lpx_set_mat_row": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": []
    },
    "lpx_set_mat_col": {
      "start_point": [
        291,
        0
      ],
      "end_point": [
        296,
        1
      ],
      "strings": []
    },
    "lpx_load_matrix": {
      "start_point": [
        298,
        0
      ],
      "end_point": [
        303,
        1
      ],
      "strings": []
    },
    "lpx_del_rows": {
      "start_point": [
        305,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": []
    },
    "lpx_del_cols": {
      "start_point": [
        311,
        0
      ],
      "end_point": [
        315,
        1
      ],
      "strings": []
    },
    "lpx_delete_prob": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": []
    },
    "lpx_get_prob_name": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        337,
        1
      ],
      "strings": []
    },
    "lpx_get_obj_name": {
      "start_point": [
        339,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    },
    "lpx_get_obj_dir": {
      "start_point": [
        344,
        0
      ],
      "end_point": [
        347,
        1
      ],
      "strings": []
    },
    "lpx_get_num_rows": {
      "start_point": [
        349,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": []
    },
    "lpx_get_num_cols": {
      "start_point": [
        354,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": []
    },
    "lpx_get_row_name": {
      "start_point": [
        359,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": []
    },
    "lpx_get_col_name": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        367,
        1
      ],
      "strings": []
    },
    "lpx_get_row_type": {
      "start_point": [
        369,
        0
      ],
      "end_point": [
        372,
        1
      ],
      "strings": []
    },
    "lpx_get_row_lb": {
      "start_point": [
        374,
        0
      ],
      "end_point": [
        380,
        1
      ],
      "strings": []
    },
    "lpx_get_row_ub": {
      "start_point": [
        382,
        0
      ],
      "end_point": [
        388,
        1
      ],
      "strings": []
    },
    "lpx_get_row_bnds": {
      "start_point": [
        390,
        0
      ],
      "end_point": [
        397,
        1
      ],
      "strings": []
    },
    "lpx_get_col_type": {
      "start_point": [
        399,
        0
      ],
      "end_point": [
        402,
        1
      ],
      "strings": []
    },
    "lpx_get_col_lb": {
      "start_point": [
        404,
        0
      ],
      "end_point": [
        410,
        1
      ],
      "strings": []
    },
    "lpx_get_col_ub": {
      "start_point": [
        412,
        0
      ],
      "end_point": [
        418,
        1
      ],
      "strings": []
    },
    "lpx_get_col_bnds": {
      "start_point": [
        420,
        0
      ],
      "end_point": [
        427,
        1
      ],
      "strings": []
    },
    "lpx_get_obj_coef": {
      "start_point": [
        429,
        0
      ],
      "end_point": [
        432,
        1
      ],
      "strings": []
    },
    "lpx_get_num_nz": {
      "start_point": [
        434,
        0
      ],
      "end_point": [
        437,
        1
      ],
      "strings": []
    },
    "lpx_get_mat_row": {
      "start_point": [
        439,
        0
      ],
      "end_point": [
        442,
        1
      ],
      "strings": []
    },
    "lpx_get_mat_col": {
      "start_point": [
        444,
        0
      ],
      "end_point": [
        447,
        1
      ],
      "strings": []
    },
    "lpx_create_index": {
      "start_point": [
        449,
        0
      ],
      "end_point": [
        453,
        1
      ],
      "strings": []
    },
    "lpx_find_row": {
      "start_point": [
        455,
        0
      ],
      "end_point": [
        458,
        1
      ],
      "strings": []
    },
    "lpx_find_col": {
      "start_point": [
        460,
        0
      ],
      "end_point": [
        463,
        1
      ],
      "strings": []
    },
    "lpx_delete_index": {
      "start_point": [
        465,
        0
      ],
      "end_point": [
        469,
        1
      ],
      "strings": []
    },
    "lpx_scale_prob": {
      "start_point": [
        471,
        0
      ],
      "end_point": [
        494,
        1
      ],
      "strings": []
    },
    "lpx_unscale_prob": {
      "start_point": [
        496,
        0
      ],
      "end_point": [
        500,
        1
      ],
      "strings": []
    },
    "lpx_set_row_stat": {
      "start_point": [
        502,
        0
      ],
      "end_point": [
        506,
        1
      ],
      "strings": []
    },
    "lpx_set_col_stat": {
      "start_point": [
        508,
        0
      ],
      "end_point": [
        512,
        1
      ],
      "strings": []
    },
    "lpx_std_basis": {
      "start_point": [
        514,
        0
      ],
      "end_point": [
        518,
        1
      ],
      "strings": []
    },
    "lpx_adv_basis": {
      "start_point": [
        520,
        0
      ],
      "end_point": [
        524,
        1
      ],
      "strings": []
    },
    "lpx_cpx_basis": {
      "start_point": [
        526,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": []
    },
    "fill_smcp": {
      "start_point": [
        532,
        0
      ],
      "end_point": [
        578,
        1
      ],
      "strings": []
    },
    "lpx_simplex": {
      "start_point": [
        580,
        0
      ],
      "end_point": [
        602,
        1
      ],
      "strings": []
    },
    "lpx_exact": {
      "start_point": [
        604,
        0
      ],
      "end_point": [
        621,
        1
      ],
      "strings": []
    },
    "lpx_get_status": {
      "start_point": [
        623,
        0
      ],
      "end_point": [
        636,
        1
      ],
      "strings": []
    },
    "lpx_get_prim_stat": {
      "start_point": [
        638,
        0
      ],
      "end_point": [
        641,
        1
      ],
      "strings": []
    },
    "lpx_get_dual_stat": {
      "start_point": [
        643,
        0
      ],
      "end_point": [
        646,
        1
      ],
      "strings": []
    },
    "lpx_get_obj_val": {
      "start_point": [
        648,
        0
      ],
      "end_point": [
        651,
        1
      ],
      "strings": []
    },
    "lpx_get_row_stat": {
      "start_point": [
        653,
        0
      ],
      "end_point": [
        656,
        1
      ],
      "strings": []
    },
    "lpx_get_row_prim": {
      "start_point": [
        658,
        0
      ],
      "end_point": [
        661,
        1
      ],
      "strings": []
    },
    "lpx_get_row_dual": {
      "start_point": [
        663,
        0
      ],
      "end_point": [
        666,
        1
      ],
      "strings": []
    },
    "lpx_get_row_info": {
      "start_point": [
        668,
        0
      ],
      "end_point": [
        675,
        1
      ],
      "strings": []
    },
    "lpx_get_col_stat": {
      "start_point": [
        677,
        0
      ],
      "end_point": [
        680,
        1
      ],
      "strings": []
    },
    "lpx_get_col_prim": {
      "start_point": [
        682,
        0
      ],
      "end_point": [
        685,
        1
      ],
      "strings": []
    },
    "lpx_get_col_dual": {
      "start_point": [
        687,
        0
      ],
      "end_point": [
        690,
        1
      ],
      "strings": []
    },
    "lpx_get_col_info": {
      "start_point": [
        692,
        0
      ],
      "end_point": [
        699,
        1
      ],
      "strings": []
    },
    "lpx_get_ray_info": {
      "start_point": [
        701,
        0
      ],
      "end_point": [
        704,
        1
      ],
      "strings": []
    },
    "lpx_check_kkt": {
      "start_point": [
        706,
        0
      ],
      "end_point": [
        778,
        1
      ],
      "strings": []
    },
    "lpx_warm_up": {
      "start_point": [
        780,
        0
      ],
      "end_point": [
        795,
        1
      ],
      "strings": []
    },
    "lpx_eval_tab_row": {
      "start_point": [
        797,
        0
      ],
      "end_point": [
        800,
        1
      ],
      "strings": []
    },
    "lpx_eval_tab_col": {
      "start_point": [
        802,
        0
      ],
      "end_point": [
        805,
        1
      ],
      "strings": []
    },
    "lpx_transform_row": {
      "start_point": [
        807,
        0
      ],
      "end_point": [
        810,
        1
      ],
      "strings": []
    },
    "lpx_transform_col": {
      "start_point": [
        812,
        0
      ],
      "end_point": [
        815,
        1
      ],
      "strings": []
    },
    "lpx_prim_ratio_test": {
      "start_point": [
        817,
        0
      ],
      "end_point": [
        824,
        1
      ],
      "strings": []
    },
    "lpx_dual_ratio_test": {
      "start_point": [
        826,
        0
      ],
      "end_point": [
        833,
        1
      ],
      "strings": []
    },
    "lpx_interior": {
      "start_point": [
        835,
        0
      ],
      "end_point": [
        849,
        1
      ],
      "strings": []
    },
    "lpx_ipt_status": {
      "start_point": [
        851,
        0
      ],
      "end_point": [
        860,
        1
      ],
      "strings": []
    },
    "lpx_ipt_obj_val": {
      "start_point": [
        862,
        0
      ],
      "end_point": [
        865,
        1
      ],
      "strings": []
    },
    "lpx_ipt_row_prim": {
      "start_point": [
        867,
        0
      ],
      "end_point": [
        870,
        1
      ],
      "strings": []
    },
    "lpx_ipt_row_dual": {
      "start_point": [
        872,
        0
      ],
      "end_point": [
        875,
        1
      ],
      "strings": []
    },
    "lpx_ipt_col_prim": {
      "start_point": [
        877,
        0
      ],
      "end_point": [
        880,
        1
      ],
      "strings": []
    },
    "lpx_ipt_col_dual": {
      "start_point": [
        882,
        0
      ],
      "end_point": [
        885,
        1
      ],
      "strings": []
    },
    "lpx_set_class": {
      "start_point": [
        887,
        0
      ],
      "end_point": [
        893,
        1
      ],
      "strings": [
        "\"lpx_set_class: invalid problem class\\n\""
      ]
    },
    "lpx_get_class": {
      "start_point": [
        895,
        0
      ],
      "end_point": [
        898,
        1
      ],
      "strings": []
    },
    "lpx_set_col_kind": {
      "start_point": [
        900,
        0
      ],
      "end_point": [
        904,
        1
      ],
      "strings": []
    },
    "lpx_get_col_kind": {
      "start_point": [
        906,
        0
      ],
      "end_point": [
        909,
        1
      ],
      "strings": []
    },
    "lpx_get_num_int": {
      "start_point": [
        911,
        0
      ],
      "end_point": [
        914,
        1
      ],
      "strings": []
    },
    "lpx_get_num_bin": {
      "start_point": [
        916,
        0
      ],
      "end_point": [
        919,
        1
      ],
      "strings": []
    },
    "solve_mip": {
      "start_point": [
        921,
        0
      ],
      "end_point": [
        987,
        1
      ],
      "strings": []
    },
    "lpx_integer": {
      "start_point": [
        989,
        0
      ],
      "end_point": [
        992,
        1
      ],
      "strings": []
    },
    "lpx_intopt": {
      "start_point": [
        994,
        0
      ],
      "end_point": [
        997,
        1
      ],
      "strings": []
    },
    "lpx_mip_status": {
      "start_point": [
        999,
        0
      ],
      "end_point": [
        1010,
        1
      ],
      "strings": []
    },
    "lpx_mip_obj_val": {
      "start_point": [
        1012,
        0
      ],
      "end_point": [
        1015,
        1
      ],
      "strings": []
    },
    "lpx_mip_row_val": {
      "start_point": [
        1017,
        0
      ],
      "end_point": [
        1020,
        1
      ],
      "strings": []
    },
    "lpx_mip_col_val": {
      "start_point": [
        1022,
        0
      ],
      "end_point": [
        1025,
        1
      ],
      "strings": []
    },
    "lpx_check_int": {
      "start_point": [
        1027,
        0
      ],
      "end_point": [
        1060,
        1
      ],
      "strings": []
    },
    "lpx_reset_parms": {
      "start_point": [
        1062,
        0
      ],
      "end_point": [
        1067,
        1
      ],
      "strings": []
    },
    "lpx_set_int_parm": {
      "start_point": [
        1069,
        0
      ],
      "end_point": [
        1209,
        1
      ],
      "strings": [
        "\"lpx_set_int_parm: MSGLEV = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: SCALE = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: DUAL = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: PRICE = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: ROUND = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: OUTFRQ = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: BRANCH = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: BTRACK = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: MPSINFO = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: MPSOBJ = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: MPSORIG = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: MPSWIDE = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: MPSFREE = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: MPSSKIP = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: LPTORIG = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: PRESOL = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: BINARIZE = %d; invalid value\\n\"",
        "\"lpx_set_int_parm: USECUTS = 0x%X; invalid value\\n\"",
        "\"lpx_set_int_parm: BFTYPE = %d; invalid val\"",
        "\"ue\\n\"",
        "\"lpx_set_int_parm: parm = %d; invalid parameter\\n\""
      ]
    },
    "lpx_get_int_parm": {
      "start_point": [
        1211,
        0
      ],
      "end_point": [
        1276,
        1
      ],
      "strings": [
        "\"lpx_get_int_parm: parm = %d; invalid parameter\\n\""
      ]
    },
    "lpx_set_real_parm": {
      "start_point": [
        1278,
        0
      ],
      "end_point": [
        1341,
        1
      ],
      "strings": [
        "\"lpx_set_real_parm: RELAX = %g; invalid value\\n\"",
        "\"lpx_set_real_parm: TOLBND = %g; invalid value\\n\"",
        "\"lpx_set_real_parm: TOLDJ = %g; invalid value\\n\"",
        "\"lpx_set_real_parm: TOLPIV = %g; invalid value\\n\"",
        "\"lpx_set_real_parm: TOLINT = %g; invalid value\\n\"",
        "\"lpx_set_real_parm: TOLOBJ = %g; invalid value\\n\"",
        "\"lpx_set_real_parm: MIPGAP = %g; invalid value\\n\"",
        "\"lpx_set_real_parm: parm = %d; invalid parameter\\n\""
      ]
    },
    "lpx_get_real_parm": {
      "start_point": [
        1343,
        0
      ],
      "end_point": [
        1386,
        1
      ],
      "strings": [
        "\"lpx_get_real_parm: parm = %d; invalid parameter\\n\""
      ]
    },
    "lpx_read_mps": {
      "start_point": [
        1388,
        0
      ],
      "end_point": [
        1394,
        1
      ],
      "strings": []
    },
    "lpx_write_mps": {
      "start_point": [
        1396,
        0
      ],
      "end_point": [
        1399,
        1
      ],
      "strings": []
    },
    "lpx_read_bas": {
      "start_point": [
        1401,
        0
      ],
      "end_point": [
        1407,
        1
      ],
      "strings": [
        "\"lpx_read_bas: operation not supported\\n\""
      ]
    },
    "lpx_write_bas": {
      "start_point": [
        1409,
        0
      ],
      "end_point": [
        1415,
        1
      ],
      "strings": [
        "\"lpx_write_bas: operation not supported\\n\""
      ]
    },
    "lpx_read_freemps": {
      "start_point": [
        1417,
        0
      ],
      "end_point": [
        1423,
        1
      ],
      "strings": []
    },
    "lpx_write_freemps": {
      "start_point": [
        1425,
        0
      ],
      "end_point": [
        1428,
        1
      ],
      "strings": []
    },
    "lpx_read_cpxlp": {
      "start_point": [
        1430,
        0
      ],
      "end_point": [
        1437,
        1
      ],
      "strings": []
    },
    "lpx_write_cpxlp": {
      "start_point": [
        1439,
        0
      ],
      "end_point": [
        1442,
        1
      ],
      "strings": []
    },
    "lpx_read_model": {
      "start_point": [
        1444,
        0
      ],
      "end_point": [
        1465,
        1
      ],
      "strings": []
    },
    "lpx_print_prob": {
      "start_point": [
        1467,
        0
      ],
      "end_point": [
        1470,
        1
      ],
      "strings": []
    },
    "lpx_print_sol": {
      "start_point": [
        1472,
        0
      ],
      "end_point": [
        1475,
        1
      ],
      "strings": []
    },
    "lpx_print_sens_bnds": {
      "start_point": [
        1477,
        0
      ],
      "end_point": [
        1482,
        1
      ],
      "strings": []
    },
    "lpx_print_ips": {
      "start_point": [
        1484,
        0
      ],
      "end_point": [
        1487,
        1
      ],
      "strings": []
    },
    "lpx_print_mip": {
      "start_point": [
        1489,
        0
      ],
      "end_point": [
        1492,
        1
      ],
      "strings": []
    },
    "lpx_is_b_avail": {
      "start_point": [
        1494,
        0
      ],
      "end_point": [
        1497,
        1
      ],
      "strings": []
    },
    "lpx_main": {
      "start_point": [
        1499,
        0
      ],
      "end_point": [
        1502,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/examples/oldapi/lpx.h": {},
  "glpk/glpk-4.65/examples/oldapi/lpxsamp.c": {
    "main": {
      "start_point": [
        6,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"sample\"",
        "\"p\"",
        "\"q\"",
        "\"r\"",
        "\"x1\"",
        "\"x2\"",
        "\"x3\"",
        "\"\\nZ = %g; x1 = %g; x2 = %g; x3 = %g\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/threads/multiseed.c": {
    "term_hook": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"%02d-%05d %s%s\"",
        "\"%02d-%05d %s\""
      ]
    },
    "error_hook": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"Error caught\\n\""
      ]
    },
    "worker": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": [
        "\"Seed %02d\\n\"",
        "\"Out of memory\\n\"",
        "\"Out of memory\\n\"",
        "\"Model %s is not valid\\n\"",
        "\"Cannot generate model %s\\n\"",
        "\"Voluntarily throwing an error in %s at line %d\\n\""
      ]
    },
    "run": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": [
        "\"TLS\"",
        "\"The loaded GLPK library does not support thread local memory.\\n\"",
        "\"You need a version of the library configured with \"",
        "\"--enable-reentrant=yes to run this program.\\n\"",
        "\"Usage %s filename threads\\n\"",
        "\"  filename - MathProg model file\\n\"",
        "\"  threads  - number of threads\\n\"",
        "\"Number of threads is to high (> 50).\\n\"",
        "\"Need positive number of threads\\n\"",
        "\"Out of memory\"",
        "\"ERROR; return code from pthread_create() is %d\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/threads/thread.h": {},
  "glpk/glpk-4.65/examples/tsp/main.c": {
    "loc": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "read_data": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": [
        "\"TSP data file processing error\\n\"",
        "\"Invalid TSP data type\\n\"",
        "\"TSP instance too large\\n\""
      ]
    },
    "build_prob": {
      "start_point": [
        161,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": [
        "\"x[%d,%d]\"",
        "\"v[%d]\""
      ]
    },
    "build_tour": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        264,
        1
      ],
      "strings": []
    },
    "tour_length": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": []
    },
    "write_tour": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": [
        "\"Writing TSP solution to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"NAME : %s\\n\"",
        "\"COMMENT : Tour length is %d\\n\"",
        "\"TYPE : TOUR\\n\"",
        "\"DIMENSION : %d\\n\"",
        "\"TOUR_SECTION\\n\"",
        "\"%d\\n\"",
        "\"-1\\n\"",
        "\"EOF\\n\""
      ]
    },
    "gen_subt": {
      "start_point": [
        330,
        0
      ],
      "end_point": [
        410,
        1
      ],
      "strings": []
    },
    "cb_func": {
      "start_point": [
        418,
        0
      ],
      "end_point": [
        427,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        435,
        0
      ],
      "end_point": [
        532,
        1
      ],
      "strings": [
        "\"--output\"",
        "\"-o\"",
        "\"No solution output file specified\\n\"",
        "\"Only one solution output file allowed\\n\"",
        "\"--help\"",
        "\"-h\"",
        "\"Usage: %s [options...] tsp-file\\n\"",
        "\"\\n\"",
        "\"Options:\\n\"",
        "\"   -o filename, --output filename\\n\"",
        "\"                     write solution to filename\\n\"",
        "\"   -h, --help        display this help information\"",
        "\" and exit\\n\"",
        "\"Invalid option '%s'; try %s --help\\n\"",
        "\"Only one input file allowed\\n\"",
        "\"No input file specified; try %s --help\\n\"",
        "\"TSP Solver for GLPK %s\\n\"",
        "\"Solving initial LP relaxation...\\n\"",
        "\"Time used:   %.1f secs\\n\"",
        "\"Memory used: %.1f Mb (%.0f bytes)\\n\"",
        "\"Error: %d memory block(s) were lost\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/examples/tsp/maxflow.c": {
    "max_flow": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "max_flow_lp": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/examples/tsp/maxflow.h": {},
  "glpk/glpk-4.65/examples/tsp/mincut.c": {
    "min_cut": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "min_st_cut": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": []
    },
    "min_cut_sw": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        389,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/examples/tsp/mincut.h": {},
  "glpk/glpk-4.65/examples/tsp/misc.c": {
    "str2int": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "str2num": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/examples/tsp/misc.h": {},
  "glpk/glpk-4.65/examples/tsp/tsplib.c": {
    "get_char": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"%s:%d: read error - %s\\n\"",
        "\"%s:%d: invalid control character 0x%02X\\n\""
      ]
    },
    "skip_spaces": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "scan_keyword": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"%s:%d: warning: missing EOF inserted\\n\"",
        "\"EOF\"",
        "\"%s:%d: keyword '%s...' too long\\n\"",
        "\"%s:%d: missing keyword\\n\""
      ]
    },
    "check_colon": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"%s:%d: missing colon after '%s'\\n\""
      ]
    },
    "scan_token": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": [
        "\"%s:%d: token '%s...' too long\\n\""
      ]
    },
    "check_newline": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": [
        "\"%s:%d: extra symbols detected\\n\""
      ]
    },
    "scan_comment": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": [
        "\"%s:%d: comment too long\\n\""
      ]
    },
    "scan_integer": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"%s:%d: missing integer\\n\"",
        "\"%s:%d: integer '%s' invalid\\n\""
      ]
    },
    "scan_number": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": [
        "\"%s:%d: missing number\\n\"",
        "\"%s:%d: number '%s' invalid\\n\""
      ]
    },
    "tsp_read_data": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        597,
        1
      ],
      "strings": [
        "\"Reading TSP data from '%s'...\\n\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"NAME\"",
        "\"%s:%d: NAME entry multiply defined\\n\"",
        "\"%s:%d: NAME entry incomplete\\n\"",
        "\"NAME: %s\\n\"",
        "\"TYPE\"",
        "\"%s:%d: TYPE entry multiply defined\\n\"",
        "\"TSP\"",
        "\"ATSP\"",
        "\"TOUR\"",
        "\"%s:%d: data type '%s' not recognized\\n\"",
        "\"TYPE: %s\\n\"",
        "\"COMMENT\"",
        "\"COMMENT: %s\\n\"",
        "\"%s:%d: warning: extra COMMENT entry ignored\\n\"",
        "\"DIMENSION\"",
        "\"%s:%d: DIMENSION entry multiply defined\\n\"",
        "\"%s:%d: invalid dimension\\n\"",
        "\"DIMENSION: %d\\n\"",
        "\"EDGE_WEIGHT_TYPE\"",
        "\"%s:%d: EDGE_WEIGHT_TYPE entry multiply defined\\n\"",
        "\"GEO\"",
        "\"EUC_2D\"",
        "\"ATT\"",
        "\"EXPLICIT\"",
        "\"CEIL_2D\"",
        "\"%s:%d: edge weight type '%s' not recognized\\n\"",
        "\"EDGE_WEIGHT_TYPE: %s\\n\"",
        "\"EDGE_WEIGHT_FORMAT\"",
        "\"%s:%d: EDGE_WEIGHT_FORMAT entry multiply defined\\n\"",
        "\"UPPER_ROW\"",
        "\"FULL_MATRIX\"",
        "\"FUNCTION\"",
        "\"LOWER_DIAG_ROW\"",
        "\"%s:%d: edge weight format '%s' not recognized\\n\"",
        "\"EDGE_WEIGHT_FORMAT: %s\\n\"",
        "\"DISPLAY_DATA_TYPE\"",
        "\"%s:%d: DISPLAY_DATA_TYPE entry multiply defined\\n\"",
        "\"COORD_DISPLAY\"",
        "\"TWOD_DISPLAY\"",
        "\"%s:%d: display data type '%s' not recognized\\n\"",
        "\"DISPLAY_DATA_TYPE: %s\\n\"",
        "\"NODE_COORD_SECTION\"",
        "\"%s:%d: DIMENSION entry not specified\\n\"",
        "\"%s:%d: NODE_COORD_SECTION multiply specified\\n\"",
        "\"%s:%d: invalid node number %d\\n\"",
        "\"%s:%d: node number %d multiply specified\\n\"",
        "\"DISPLAY_DATA_SECTION\"",
        "\"%s:%d: DIMENSION entry not specified\\n\"",
        "\"%s:%d: DISPLAY_DATA_SECTION multiply specified\\n\"",
        "\"%s:%d: invalid node number %d\\n\"",
        "\"%s:%d: node number %d multiply specified\\n\"",
        "\"TOUR_SECTION\"",
        "\"%s:%d: DIMENSION entry not specified\\n\"",
        "\"%s:%d: TOUR_SECTION multiply specified\\n\"",
        "\"%s:%d: invalid node number %d\\n\"",
        "\"%s:%d: extra node(s) detected\\n\"",
        "\"EDGE_WEIGHT_SECTION\"",
        "\"%s:%d: DIMENSION entry not specified\\n\"",
        "\"%s:%d: EDGE_WEIGHT_FORMAT entry not specified\\n\"",
        "\"%s:%d: EDGE_WEIGHT_SECTION multiply specified\\n\"",
        "\"EOF\"",
        "\"%s:%d: keyword '%s' not recognized\\n\"",
        "\"%d lines were read\\n\""
      ]
    },
    "rad": {
      "start_point": [
        620,
        0
      ],
      "end_point": [
        626,
        1
      ],
      "strings": []
    },
    "tsp_distance": {
      "start_point": [
        628,
        0
      ],
      "end_point": [
        691,
        1
      ],
      "strings": [
        "\"tsp_distance: invalid TSP instance\\n\"",
        "\"tsp_distance: node number out of range\\n\"",
        "\"tsp_distance: edge weight type not specified\\n\"",
        "\"tsp_distance: edge weights not specified\\n\"",
        "\"tsp_distance: node coordinates not specified\\n\"",
        "\"tsp_distance: node coordinates not specified\\n\"",
        "\"tsp_distance: node coordinates not specified\\n\"",
        "\"tsp_distance: node coordinates not specified\\n\""
      ]
    },
    "tsp_free_data": {
      "start_point": [
        708,
        0
      ],
      "end_point": [
        727,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/examples/tsp/tsplib.h": {},
  "glpk/glpk-4.65/src/glpk.h": {},
  "glpk/glpk-4.65/src/amd/amd.h": {},
  "glpk/glpk-4.65/src/amd/amd_1.c": {
    "AMD_1": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"Construct row/column k= \"",
        "\" of A+A'\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/amd/amd_2.c": {
    "clear_flag": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "AMD_2": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        1841,
        1
      ],
      "strings": [
        "\"\\n\\nAMD (debug), alpha %g, aggr. \"",
        "\"\\n\"",
        "\"\\n======Nel \"",
        "\" initial\\n\"",
        "\"Dense node \"",
        "\" degree \"",
        "\"\\n\"",
        "\"\\n======Nel \"",
        "\"\\n\"",
        "\"=================me: \"",
        "\"\\n\"",
        "\"Search sv: \"",
        "\" \"",
        "\" \"",
        "\"\\n\"",
        "\"Search element e \"",
        "\" in me \"",
        "\"\\n\"",
        "\": \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"\\n\"",
        "\"GARBAGE COLLECTION\\n\"",
        "\"Got object j: \"",
        "\"\\n\"",
        "\"     s: \"",
        "\"     nv \"",
        "\"\\n\"",
        "\" Element \"",
        "\" => \"",
        "\"\\n\"",
        "\"New element structure: length= \"",
        "\"\\n\"",
        "\" \"",
        "\"\"",
        "\"\\n\"",
        "\"me: \"",
        "\"\"",
        "\" Elen \"",
        "\": \\n\"",
        "\"    e \"",
        "\" we \"",
        "\" \"",
        "\"    unabsorbed, first time seen\"",
        "\"    unabsorbed\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"Updating: i \"",
        "\" \"",
        "\" \"",
        "\"\\n\"",
        "\" e: \"",
        "\" hash = \"",
        "\"\\n\"",
        "\" Element \"",
        "\" =>\"",
        "\" (aggressive)\\n\"",
        "\"  e: \"",
        "\" hash = \"",
        "\"\\n\"",
        "\"  s: \"",
        "\" hash \"",
        "\" Nv[j]= \"",
        "\"\\n\"",
        "\"  MASS i \"",
        "\" => parent e \"",
        "\"\\n\"",
        "\"Detecting supervariables:\\n\"",
        "\"Consider i \"",
        "\" nv \"",
        "\"\\n\"",
        "\"----i \"",
        "\" hash \"",
        "\"\\n\"",
        "\"compare i \"",
        "\" and j \"",
        "\"\\n\"",
        "\"found it! j \"",
        "\" => i \"",
        "\"\\n\"",
        "\"detect done\\n\"",
        "\"Restore i \"",
        "\" \"",
        "\"\\n\"",
        "\"restore done\\n\"",
        "\"ME = \"",
        "\" DONE\\n\"",
        "\"finalize done nel \"",
        "\" n \"",
        "\"\\n   ::::\\n\"",
        "\" \"",
        "\"\"",
        "\"\\n\"",
        "\"\\nTree:\\n\"",
        "\" \"",
        "\" parent: \"",
        "\"   \"",
        "\" element, size is \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\nelements:\\n\"",
        "\"Element e= \"",
        "\" size \"",
        "\" nv \"",
        "\" \\n\"",
        "\"\\nvariables:\\n\"",
        "\"i unordered: \"",
        "\"\\n\"",
        "\"  j: \"",
        "\"\\n\"",
        "\"  i is a dense variable\\n\"",
        "\"      j : \"",
        "\"\\n\"",
        "\"      j:: \"",
        "\"\\n\"",
        "\"  got to e: \"",
        "\"\\n\"",
        "\"Path compression, i unordered: \"",
        "\"\\n\"",
        "\"      j: \"",
        "\"\\n\"",
        "\"      i is a dense variable\\n\"",
        "\"          j : \"",
        "\"\\n\"",
        "\"          j:: \"",
        "\"\\n\"",
        "\"got to e: \"",
        "\"\\n\"",
        "\"j \"",
        "\" jnext \"",
        "\"\\n\"",
        "\"\\n\\nPerm:\\n\"",
        "\"   perm [\"",
        "\"] = \"",
        "\"\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/amd/amd_aat.c": {
    "AMD_aat": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": [
        "\"AMD AAT\"",
        "\"\\nAAT Column: \"",
        "\" p1: \"",
        "\" p2: \"",
        "\"\\n\"",
        "\"    upper (\"",
        "\",\"",
        "\") (\"",
        "\",\"",
        "\")\\n\"",
        "\"    lower (\"",
        "\",\"",
        "\") (\"",
        "\",\"",
        "\")\\n\"",
        "\"    lower cleanup (\"",
        "\",\"",
        "\") (\"",
        "\",\"",
        "\")\\n\"",
        "\"AMD nz in A+A', excluding diagonal (nzaat) = %g\\n\"",
        "\"   nzboth: \"",
        "\" nz: \"",
        "\" nzdiag: \"",
        "\" symmetry: %g\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/amd/amd_control.c": {
    "AMD_control": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"\\nAMD version %d.%d.%d, %s: approximate minimum degree ordering\\n\"",
        "\"    dense row parameter: %g\\n\"",
        "\"    no rows treated as dense\\n\"",
        "\"    (rows with more than max (%g * sqrt (n), 16) entries are\\n\"",
        "\"    considered \\\"dense\\\", and placed last in output permutation)\\n\"",
        "\"    aggressive absorption:  yes\\n\"",
        "\"    aggressive absorption:  no\\n\"",
        "\"    size of AMD integer: %d\\n\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/amd/amd_defaults.c": {
    "AMD_defaults": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/amd/amd_dump.c": {
    "AMD_debug_init": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"debug.amd\"",
        "\"r\"",
        "\"%s: AMD_debug_init, D= \"",
        "\"\\n\""
      ]
    },
    "AMD_dump": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": [
        "\"\\nAMD dump, pfree: \"",
        "\"\\n\"",
        "\"\\nI \"",
        "\": nonprincipal:    \"",
        "\" dense node\\n\"",
        "\" i \"",
        "\" -> parent \"",
        "\"\\n\"",
        "\"\\nI \"",
        "\": active principal supervariable:\\n\"",
        "\"   nv(i): \"",
        "\"  Flag: %d\\n\"",
        "\"   e/s: \"",
        "\" : \"",
        "\"  \"",
        "\"\"",
        "\" : \"",
        "\"\\n\"",
        "\"\\nE \"",
        "\": absorbed element: w \"",
        "\"\\n\"",
        "\" e \"",
        "\" -> parent \"",
        "\"\\n\"",
        "\"\\nE \"",
        "\": unabsorbed element: w \"",
        "\"\\n\"",
        "\" : \"",
        "\"  \"",
        "\"\"",
        "\"\\n\"",
        "\"\\nDegree lists:\\n\"",
        "\": \\n\"",
        "\"   \"",
        "\" : next \"",
        "\" last \"",
        "\" deg \"",
        "\"\\n\"",
        "\"\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/amd/amd_info.c": {
    "AMD_info": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"\\nAMD version %d.%d.%d, %s, results:\\n\"",
        "\"    status: \"",
        "\"OK\\n\"",
        "\"out of memory\\n\"",
        "\"invalid matrix\\n\"",
        "\"OK, but jumbled\\n\"",
        "\"unknown\\n\"",
        "\"    n, dimension of A:                                  %.20g\\n\"",
        "\"    nz, number of nonzeros in A:                        %.20g\\n\"",
        "\"    symmetry of A:                                      %.4f\\n\"",
        "\"    number of nonzeros on diagonal:                     %.20g\\n\"",
        "\"    nonzeros in pattern of A+A' (excl. diagonal):       %.20g\\n\"",
        "\"    # dense rows/columns of A+A':                       %.20g\\n\"",
        "\"    memory used, in bytes:                              %.20g\\n\"",
        "\"    # of memory compactions:                            %.20g\\n\"",
        "\"\\n\"",
        "\"    The following approximate statistics are for a subsequent\\n\"",
        "\"    factorization of A(P,P) + A(P,P)'.  They are slight upper\\n\"",
        "\"    bounds if there are no dense rows/columns in A+A', and become\\n\"",
        "\"    looser if dense rows/columns exist.\\n\\n\"",
        "\"    nonzeros in L (excluding diagonal):                 %.20g\\n\"",
        "\"    nonzeros in L (including diagonal):                 %.20g\\n\"",
        "\"    # divide operations for LDL' or LU:                 %.20g\\n\"",
        "\"    # multiply-subtract operations for LDL':            %.20g\\n\"",
        "\"    # multiply-subtract operations for LU:              %.20g\\n\"",
        "\"    max nz. in any column of L (incl. diagonal):        %.20g\\n\"",
        "\"\\n\"",
        "\"    chol flop count for real A, sqrt counted as 1 flop: %.20g\\n\"",
        "\"    LDL' flop count for real A:                         %.20g\\n\"",
        "\"    LDL' flop count for complex A:                      %.20g\\n\"",
        "\"    LU flop count for real A (with no pivoting):        %.20g\\n\"",
        "\"    LU flop count for complex A (with no pivoting):     %.20g\\n\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/amd/amd_internal.h": {},
  "glpk/glpk-4.65/src/amd/amd_order.c": {
    "AMD_order": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": [
        "\"amd\"",
        "\"Matrix is jumbled\\n\"",
        "\"nzaat: %g\\n\"",
        "\"slen %g\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/amd/amd_postorder.c": {
    "AMD_postorder": {
      "start_point": [
        15,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": [
        "\"\\n\\n================================ AMD_postorder:\\n\"",
        "\"\"",
        "\" :  nels \"",
        "\" npiv \"",
        "\" size \"",
        "\" parent \"",
        "\" maxfr \"",
        "\"\\n\"",
        "\"    Children: \"",
        "\"\\n\"",
        "\"\\n\\nGo through the children of each node, and put\\n\"",
        "\"the biggest child last in each list:\\n\"",
        "\"Before partial sort, element \"",
        "\"\\n\"",
        "\"      f: \"",
        "\"  size: \"",
        "\"\\n\"",
        "\"bigf \"",
        "\" maxfrsize \"",
        "\" bigfprev \"",
        "\" fnext \"",
        "\" fprev \"",
        "\"\\n\"",
        "\"After partial sort, element \"",
        "\"\\n\"",
        "\"        \"",
        "\"  \"",
        "\"\\n\"",
        "\"Root of assembly tree \"",
        "\"\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/amd/amd_post_tree.c": {
    "AMD_post_tree": {
      "start_point": [
        15,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": [
        "\"head of stack \"",
        "\" \\n\"",
        "\"push \"",
        "\" on stack\\n\"",
        "\"pop \"",
        "\" order \"",
        "\"\\n\"",
        "\"\\nStack:\"",
        "\" \"",
        "\"\\n\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/amd/amd_preprocess.c": {
    "AMD_preprocess": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/amd/amd_valid.c": {
    "AMD_valid": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"column 0 pointer bad or nz < 0\\n\"",
        "\"\\nColumn: \"",
        "\" p1: \"",
        "\" p2: \"",
        "\"\\n\"",
        "\"column \"",
        "\" pointer bad\\n\"",
        "\"row: \"",
        "\"\\n\"",
        "\"index out of range, col \"",
        "\" row \"",
        "\"\\n\"",
        "\"index unsorted/dupl col \"",
        "\" row \"",
        "\"\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/advbas.c": {
    "mat": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "glp_adv_basis": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"glp_adv_basis: flags = %d; invalid flags\\n\"",
        "\"Constructing initial basis...\\n\"",
        "\"Size of triangular part is %d\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/asnhall.c": {
    "glp_asnprob_hall": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": [
        "\"glp_asnprob_hall: v_set = %d; invalid offset\\n\"",
        "\"glp_asnprob_hall: a_x = %d; invalid offset\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/asnlp.c": {
    "glp_asnprob_lp": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"glp_asnprob_lp: form = %d; invalid parameter\\n\"",
        "\"glp_asnprob_lp: names = %d; invalid parameter\\n\"",
        "\"glp_asnprob_lp: v_set = %d; invalid offset\\n\"",
        "\"glp_asnprob_lp: a_cost = %d; invalid offset\\n\"",
        "\"x[%d,%d]\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/asnokalg.c": {
    "glp_asnprob_okalg": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": [
        "\"glp_asnprob_okalg: form = %d; invalid parameter\\n\"",
        "\"glp_asnprob_okalg: v_set = %d; invalid offset\\n\"",
        "\"glp_asnprob_okalg: a_cost = %d; invalid offset\\n\"",
        "\"glp_asnprob_okalg: a_x = %d; invalid offset\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/ckasn.c": {
    "glp_check_asnprob": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": [
        "\"glp_check_asnprob: v_set = %d; invalid offset\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/ckcnf.c": {
    "glp_check_cnfsat": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"glp_check_cnfsat: P = %p; invalid problem object\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/cplex.c": {
    "glp_init_cpxcp": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "check_parm": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "error": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": [
        "\"%s:%d: \""
      ]
    },
    "warning": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": [
        "\"%s:%d: warning: \""
      ]
    },
    "read_char": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"read error - %s\\n\"",
        "\"missing final end of line\\n\"",
        "\"invalid control character 0x%02X\\n\""
      ]
    },
    "add_char": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": [
        "\"token '%.15s...' too long\\n\""
      ]
    },
    "the_same": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": []
    },
    "scan_token": {
      "start_point": [
        215,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": [
        "\"minimize\"",
        "\"minimum\"",
        "\"min\"",
        "\"maximize\"",
        "\"maximum\"",
        "\"max\"",
        "\"subject\"",
        "\"keyword 'subject to' incomplete\\n\"",
        "\"keyword '%s%c...' not recognized\\n\"",
        "\"such\"",
        "\"keyword 'such that' incomplete\\n\"",
        "\"keyword '%s%c...' not recognized\\n\"",
        "\"st\"",
        "\"s.t.\"",
        "\"st.\"",
        "\"bounds\"",
        "\"bound\"",
        "\"general\"",
        "\"generals\"",
        "\"gen\"",
        "\"integer\"",
        "\"integers\"",
        "\"int\"",
        "\"binary\"",
        "\"binaries\"",
        "\"bin\"",
        "\"end\"",
        "\"invalid use of decimal point\\n\"",
        "\"numeric constant '%s' incomplete\\n\"",
        "\"numeric constant '%s' out of range\\n\"",
        "\"character '%c' not recognized\\n\""
      ]
    },
    "find_col": {
      "start_point": [
        387,
        0
      ],
      "end_point": [
        424,
        1
      ],
      "strings": []
    },
    "parse_linear_form": {
      "start_point": [
        439,
        0
      ],
      "end_point": [
        482,
        1
      ],
      "strings": [
        "\"missing variable name\\n\"",
        "\"multiple use of variable '%s' not allowed\\n\""
      ]
    },
    "parse_objective": {
      "start_point": [
        494,
        0
      ],
      "end_point": [
        522,
        1
      ],
      "strings": [
        "\"obj\""
      ]
    },
    "parse_constraints": {
      "start_point": [
        540,
        0
      ],
      "end_point": [
        596,
        1
      ],
      "strings": [
        "\"constraint '%s' multiply defined\\n\"",
        "\"r.%d\"",
        "\"missing constraint sense\\n\"",
        "\"missing right-hand side\\n\"",
        "\"invalid symbol(s) beyond right-hand side\\n\""
      ]
    },
    "set_lower_bound": {
      "start_point": [
        598,
        0
      ],
      "end_point": [
        607,
        1
      ],
      "strings": [
        "\"lower bound of variable '%s' redefined\\n\""
      ]
    },
    "set_upper_bound": {
      "start_point": [
        609,
        0
      ],
      "end_point": [
        618,
        1
      ],
      "strings": [
        "\"upper bound of variable '%s' redefined\\n\""
      ]
    },
    "parse_bounds": {
      "start_point": [
        638,
        0
      ],
      "end_point": [
        795,
        1
      ],
      "strings": [
        "\"infinity\"",
        "\"inf\"",
        "\"invalid use of '+inf' as lower bound\\n\"",
        "\"missing lower bound\\n\"",
        "\"missing '<', '<=', or '=<' after lower bound\\n\"",
        "\"missing variable name\\n\"",
        "\"infinity\"",
        "\"inf\"",
        "\"invalid use of '-inf' as upper bound\\n\"",
        "\"missing upper bound\\n\"",
        "\"missing upper bound\\n\"",
        "\"invalid bound definition\\n\"",
        "\"infinity\"",
        "\"inf\"",
        "\"invalid use of '+inf' as lower bound\\n\"",
        "\"missing lower bound\\n\"",
        "\"missing lower bound\\n\"",
        "\"invalid bound definition\\n\"",
        "\"missing fixed value\\n\"",
        "\"missing fixed value\\n\"",
        "\"free\"",
        "\"invalid bound definition\\n\"",
        "\"invalid bound definition\\n\""
      ]
    },
    "parse_integer": {
      "start_point": [
        808,
        0
      ],
      "end_point": [
        841,
        1
      ],
      "strings": []
    },
    "glp_read_lp": {
      "start_point": [
        843,
        0
      ],
      "end_point": [
        974,
        1
      ],
      "strings": [
        "\"Reading problem data from '%s'...\\n\"",
        "\"glp_read_lp\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"'minimize' or 'maximize' keyword missing\\n\"",
        "\"constraints section missing\\n\"",
        "\"keyword 'end' missing\\n\"",
        "\"symbol '%s' in wrong position\\n\"",
        "\"extra symbol(s) detected beyond 'end'\\n\"",
        "\"%d row%s, %d column%s, %d non-zero%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"One variable is integer\\n\"",
        "\"One variable is binary\\n\"",
        "\"%d integer variables, \"",
        "\"none\"",
        "\"one\"",
        "\"all\"",
        "\"%d\"",
        "\" of which %s binary\\n\"",
        "\"is\"",
        "\"are\"",
        "\"%d lines were read\\n\""
      ]
    },
    "check_name": {
      "start_point": [
        1013,
        0
      ],
      "end_point": [
        1022,
        1
      ],
      "strings": []
    },
    "adjust_name": {
      "start_point": [
        1024,
        0
      ],
      "end_point": [
        1038,
        1
      ],
      "strings": []
    },
    "row_name": {
      "start_point": [
        1040,
        0
      ],
      "end_point": [
        1057,
        1
      ],
      "strings": [
        "\"obj\"",
        "\"r_%d\""
      ]
    },
    "col_name": {
      "start_point": [
        1059,
        0
      ],
      "end_point": [
        1092,
        1
      ],
      "strings": [
        "\"x_%d\"",
        "\"s_%d\"",
        "\"x_%d\"",
        "\"y_%d\"",
        "\"z_%d\""
      ]
    },
    "glp_write_lp": {
      "start_point": [
        1094,
        0
      ],
      "end_point": [
        1280,
        1
      ],
      "strings": [
        "\"Writing problem data to '%s'...\\n\"",
        "\"glp_write_lp\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"\\\\* Problem: %s *\\\\\\n\"",
        "\"Unknown\"",
        "\"\\n\"",
        "\"Warning: problem has no rows/columns\\n\"",
        "\"\\\\* WARNING: PROBLEM HAS NO ROWS/COLUMNS *\\\\\\n\"",
        "\"\\n\"",
        "\"Minimize\\n\"",
        "\"Maximize\\n\"",
        "\" %s:\"",
        "\" + 0 %s\"",
        "\" + %s\"",
        "\" - %s\"",
        "\" + %.*g %s\"",
        "\" - %.*g %s\"",
        "\"%s\\n\"",
        "\" 0 %s\"",
        "\"%s\\n\"",
        "\"\\\\* constant term = %.*g *\\\\\\n\"",
        "\"\\n\"",
        "\"Subject To\\n\"",
        "\" %s:\"",
        "\" + %s\"",
        "\" - %s\"",
        "\" + %.*g %s\"",
        "\" - %.*g %s\"",
        "\"%s\\n\"",
        "\" - ~r_%d\"",
        "\"%s\\n\"",
        "\" 0 %s\"",
        "\" >= %.*g\"",
        "\" <= %.*g\"",
        "\" = %.*g\"",
        "\"%s\\n\"",
        "\"%s\\n\"",
        "\"\\n\"",
        "\"Bounds\\n\"",
        "\" 0 <= ~r_%d <= %.*g\\n\"",
        "\"Bounds\\n\"",
        "\" %s free\\n\"",
        "\" %s >= %.*g\\n\"",
        "\" -Inf <= %s <= %.*g\\n\"",
        "\" %.*g <= %s <= %.*g\\n\"",
        "\" %s = %.*g\\n\"",
        "\"\\n\"",
        "\"Generals\\n\"",
        "\" %s\\n\"",
        "\"\\n\"",
        "\"End\\n\"",
        "\"Write error on '%s' - %s\\n\"",
        "\"%d lines were written\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/cpp.c": {
    "glp_cpp": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": [
        "\"glp_cpp: v_t = %d; invalid offset\\n\"",
        "\"glp_cpp: v_es = %d; invalid offset\\n\"",
        "\"glp_cpp: v_ls = %d; invalid offset\\n\"",
        "\"glp_cpp: t[%d] = %g; invalid time\\n\""
      ]
    },
    "sorting": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": [
        "\"glp_cpp: project network is not acyclic\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/cpxbas.c": {
    "fcmp": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "get_column": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "cpx_basis": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": [
        "\"Constructing initial basis...\\n\""
      ]
    },
    "glp_cpx_basis": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/api/graph.c": {
    "create_graph": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "glp_create_graph": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"glp_create_graph: v_size = %d; invalid size of vertex \"",
        "\"data\\n\"",
        "\"glp_create_graph: a_size = %d; invalid size of arc dat\"",
        "\"a\\n\""
      ]
    },
    "glp_set_graph_name": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": [
        "\"glp_set_graph_name: graph name too long\\n\"",
        "\"glp_set_graph_name: graph name contains invalid \"",
        "\"character(s)\\n\""
      ]
    },
    "glp_add_vertices": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": [
        "\"glp_add_vertices: nadd = %d; invalid number of vertice\"",
        "\"s\\n\"",
        "\"glp_add_vertices: nadd = %d; too many vertices\\n\""
      ]
    },
    "glp_set_vertex_name": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": [
        "\"glp_set_vertex_name: i = %d; vertex number out of rang\"",
        "\"e\\n\"",
        "\"glp_set_vertex_name: i = %d; vertex name too lon\"",
        "\"g\\n\"",
        "\"glp_set_vertex_name: i = %d; vertex name contain\"",
        "\"s invalid character(s)\\n\""
      ]
    },
    "glp_add_arc": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        276,
        1
      ],
      "strings": [
        "\"glp_add_arc: i = %d; tail vertex number out of range\\n\"",
        "\"glp_add_arc: j = %d; head vertex number out of range\\n\"",
        "\"glp_add_arc: too many arcs\\n\""
      ]
    },
    "glp_del_vertices": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        353,
        1
      ],
      "strings": [
        "\"glp_del_vertices: ndel = %d; invalid number of vertice\"",
        "\"s\\n\"",
        "\"glp_del_vertices: num[%d] = %d; vertex number out o\"",
        "\"f range\\n\"",
        "\"glp_del_vertices: num[%d] = %d; duplicate vertex nu\"",
        "\"mbers not allowed\\n\""
      ]
    },
    "glp_del_arc": {
      "start_point": [
        369,
        0
      ],
      "end_point": [
        401,
        1
      ],
      "strings": []
    },
    "delete_graph": {
      "start_point": [
        420,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": []
    },
    "glp_erase_graph": {
      "start_point": [
        427,
        0
      ],
      "end_point": [
        437,
        1
      ],
      "strings": [
        "\"glp_erase_graph: v_size = %d; invalid size of vertex d\"",
        "\"ata\\n\"",
        "\"glp_erase_graph: a_size = %d; invalid size of arc data\"",
        "\"\\n\""
      ]
    },
    "glp_delete_graph": {
      "start_point": [
        453,
        0
      ],
      "end_point": [
        457,
        1
      ],
      "strings": []
    },
    "glp_create_v_index": {
      "start_point": [
        461,
        0
      ],
      "end_point": [
        477,
        1
      ],
      "strings": []
    },
    "glp_find_vertex": {
      "start_point": [
        479,
        0
      ],
      "end_point": [
        491,
        1
      ],
      "strings": [
        "\"glp_find_vertex: vertex name index does not exist\\n\""
      ]
    },
    "glp_delete_v_index": {
      "start_point": [
        493,
        0
      ],
      "end_point": [
        501,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/api/gridgen.c": {
    "glp_gridgen": {
      "start_point": [
        240,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": [
        "\"glp_gridgen: v_rhs = %d; invalid offset\\n\"",
        "\"glp_gridgen: a_cap = %d; invalid offset\\n\"",
        "\"glp_gridgen: a_cost = %d; invalid offset\\n\"",
        "\"GRIDGEN\""
      ]
    },
    "assign_capacities": {
      "start_point": [
        372,
        0
      ],
      "end_point": [
        399,
        1
      ],
      "strings": []
    },
    "assign_costs": {
      "start_point": [
        401,
        0
      ],
      "end_point": [
        435,
        1
      ],
      "strings": []
    },
    "assign_imbalance": {
      "start_point": [
        437,
        0
      ],
      "end_point": [
        466,
        1
      ],
      "strings": []
    },
    "exponential": {
      "start_point": [
        468,
        0
      ],
      "end_point": [
        472,
        1
      ],
      "strings": []
    },
    "gen_additional_arcs": {
      "start_point": [
        474,
        0
      ],
      "end_point": [
        488,
        1
      ],
      "strings": []
    },
    "gen_basic_grid": {
      "start_point": [
        490,
        0
      ],
      "end_point": [
        551,
        1
      ],
      "strings": []
    },
    "gen_more_arcs": {
      "start_point": [
        553,
        0
      ],
      "end_point": [
        569,
        1
      ],
      "strings": []
    },
    "generate": {
      "start_point": [
        571,
        0
      ],
      "end_point": [
        582,
        1
      ],
      "strings": []
    },
    "output": {
      "start_point": [
        584,
        0
      ],
      "end_point": [
        677,
        1
      ],
      "strings": [
        "\"c generated by GRIDGEN\\n\"",
        "\"c seed %d\\n\"",
        "\"c nodes %d\\n\"",
        "\"c grid size %d X %d\\n\"",
        "\"c sources %d sinks %d\\n\"",
        "\"c avg. degree %d\\n\"",
        "\"c supply %d\\n\"",
        "\"c arc costs: UNIFORM distr. min %d max %d\\n\"",
        "\"c arc costs: EXPONENTIAL distr. lambda %d\\n\"",
        "\"c arc caps :  UNIFORM distr. min %d max %d\\n\"",
        "\"c arc caps :  EXPONENTIAL distr. %d lambda %d\\n\"",
        "\"p min %d %d\\n\"",
        "\"n %d %d\\n\"",
        "\"n %d %d\\n\"",
        "\"a %d %d 0 %d %d\\n\""
      ]
    },
    "randy": {
      "start_point": [
        679,
        0
      ],
      "end_point": [
        686,
        1
      ],
      "strings": []
    },
    "select_source_sinks": {
      "start_point": [
        688,
        0
      ],
      "end_point": [
        722,
        1
      ],
      "strings": []
    },
    "uniform": {
      "start_point": [
        724,
        0
      ],
      "end_point": [
        727,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        732,
        0
      ],
      "end_point": [
        765,
        1
      ],
      "strings": [
        "\"%d\"",
        "\"%d\"",
        "\"%d\"",
        "\"%d\"",
        "\"%d\"",
        "\"%d\"",
        "\"%d\"",
        "\"%d\"",
        "\"%d\"",
        "\"%d\"",
        "\"%d\"",
        "\"%le\"",
        "\"%d\"",
        "\"%d\"",
        "\"%d\"",
        "\"%le\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/intfeas1.c": {
    "glp_intfeas1": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        266,
        9
      ],
      "strings": [
        "\"glp_intfeas1: P = %p; invalid problem object\\n\"",
        "\"glp_intfeas1: operation not allowed\\n\"",
        "\"glp_intfeas1: column %d: non-integer non-fixed var\"",
        "\"iable not allowed\\n\"",
        "\"glp_intfeas1: column %d: non-binary non-fixed vari\"",
        "\"able not allowed\\n\"",
        "\"glp_intfeas1: column %d: fixed value %g is non-\"",
        "\"integer or out of range\\n\"",
        "\"glp_intfeas1: column %d: lower bound %g is non-\"",
        "\"integer or out of range\\n\"",
        "\"glp_intfeas1: column %d: upper bound %g is non-int\"",
        "\"eger or out of range\\n\"",
        "\"glp_intfeas1: column %d: lower bound %g is greater\"",
        "\" than upper bound %g\\n\"",
        "\"glp_intfeas1: row = %d, column %d: constraint c\"",
        "\"oefficient %g is non-integer or out of range\\n\"",
        "\"glp_intfeas1: row = %d: fixed value %g is non-i\"",
        "\"nteger or out of range\\n\"",
        "\"glp_intfeas1: row = %d: lower bound %g is non-i\"",
        "\"nteger or out of range\\n\"",
        "\"glp_intfeas1: row = %d: upper bound %g is non-inte\"",
        "\"ger or out of range\\n\"",
        "\"glp_intfeas1: row %d: lower bound %g is greater th\"",
        "\"an upper bound %g\\n\"",
        "\"glp_intfeas1: objective constant term %g is non-integ\"",
        "\"er or out of range\\n\"",
        "\"glp_intfeas1: column %d: objective coefficient is \"",
        "\"non-integer or out of range\\n\"",
        "\"Will search for ANY feasible solution\\n\"",
        "\"Will search only for solution not worse than %d\\n\"",
        "\"Translating to CNF-SAT...\\n\"",
        "\"Original problem has %d row%s, %d column%s, and %d non-z\"",
        "\"ero%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"PROBLEM HAS NO INTEGER FEASIBLE SOLUTION\\n\"",
        "\"glp_intfeas1: translation to SAT-CNF failed because o\"",
        "\"f integer overflow\\n\"",
        "\"Objective value = %17.9e\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/maxffalg.c": {
    "glp_maxflow_ffalg": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"glp_maxflow_ffalg: s = %d; source node number out of r\"",
        "\"ange\\n\"",
        "\"glp_maxflow_ffalg: t = %d: sink node number out of ran\"",
        "\"ge\\n\"",
        "\"glp_maxflow_ffalg: s = t = %d; source and sink nodes m\"",
        "\"ust be distinct\\n\"",
        "\"glp_maxflow_ffalg: a_cap = %d; invalid offset\\n\"",
        "\"glp_maxflow_ffalg: v_cut = %d; invalid offset\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/maxflp.c": {
    "glp_maxflow_lp": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"glp_maxflow_lp: names = %d; invalid parameter\\n\"",
        "\"glp_maxflow_lp: s = %d; source node number out of rang\"",
        "\"e\\n\"",
        "\"glp_maxflow_lp: t = %d: sink node number out of range \"",
        "\"\\n\"",
        "\"glp_maxflow_lp: s = t = %d; source and sink nodes must\"",
        "\" be distinct\\n\"",
        "\"glp_maxflow_lp: a_cap = %d; invalid offset\\n\"",
        "\"x[%d,%d]\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/mcflp.c": {
    "glp_mincost_lp": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"glp_mincost_lp: names = %d; invalid parameter\\n\"",
        "\"glp_mincost_lp: v_rhs = %d; invalid offset\\n\"",
        "\"glp_mincost_lp: a_low = %d; invalid offset\\n\"",
        "\"glp_mincost_lp: a_cap = %d; invalid offset\\n\"",
        "\"glp_mincost_lp: a_cost = %d; invalid offset\\n\"",
        "\"x[%d,%d]\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/mcfokalg.c": {
    "glp_mincost_okalg": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": [
        "\"glp_mincost_okalg: v_rhs = %d; invalid offset\\n\"",
        "\"glp_mincost_okalg: a_low = %d; invalid offset\\n\"",
        "\"glp_mincost_okalg: a_cap = %d; invalid offset\\n\"",
        "\"glp_mincost_okalg: a_cost = %d; invalid offset\\n\"",
        "\"glp_mincost_okalg: a_x = %d; invalid offset\\n\"",
        "\"glp_mincost_okalg: v_pi = %d; invalid offset\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/mcfrelax.c": {
    "overflow": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "glp_mincost_relax4": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": [
        "\"glp_mincost_relax4: v_rhs = %d; invalid offset\\n\"",
        "\"glp_mincost_relax4: a_low = %d; invalid offset\\n\"",
        "\"glp_mincost_relax4: a_cap = %d; invalid offset\\n\"",
        "\"glp_mincost_relax4: a_cost = %d; invalid offset\\n\"",
        "\"glp_mincost_relax4: a_x = %d; invalid offset\\n\"",
        "\"glp_mincost_relax4: a_rc = %d; invalid offset\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/minisat1.c": {
    "glp_minisat1": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"glp_minisat1: P = %p; invalid problem object\\n\"",
        "\"glp_minisat1: operation not allowed\\n\"",
        "\"glp_minisat1: problem object does not encode CNF-SAT \"",
        "\"instance\\n\"",
        "\"glp_minisat1: sorry, MiniSat solver is not supported \"",
        "\"on 64-bit platforms\\n\"",
        "\"glp_minisat1: sorry, MiniSat solver is not supported \"",
        "\"on this platform\\n\"",
        "\"Solving CNF-SAT problem...\\n\"",
        "\"Instance has %d variable%s, %d clause%s, and %d literal%\"",
        "\"s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"SATISFIABLE\\n\"",
        "\"UNSATISFIABLE\\n\"",
        "\"glp_minisat1: solver failed\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/mpl.c": {
    "glp_mpl_alloc_wksp": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    },
    "glp_mpl_init_rand": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": [
        "\"glp_mpl_init_rand: invalid call sequence\\n\""
      ]
    },
    "glp_mpl_read_model": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"glp_mpl_read_model: invalid call sequence\\n\""
      ]
    },
    "glp_mpl_read_data": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": [
        "\"glp_mpl_read_data: invalid call sequence\\n\""
      ]
    },
    "glp_mpl_generate": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": [
        "\"glp_mpl_generate: invalid call sequence\\n\""
      ]
    },
    "glp_mpl_build_prob": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\"glp_mpl_build_prob: invalid call sequence\\n\"",
        "\"glp_mpl_build_prob: row %s; constant term %.12g ig\"",
        "\"nored\\n\""
      ]
    },
    "glp_mpl_postsolve": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": [
        "\"glp_mpl_postsolve: invalid call sequence\\n\"",
        "\"glp_mpl_postsolve: sol = %d; invalid parameter\\n\"",
        "\"glp_mpl_postsolve: wrong problem object\\n\""
      ]
    },
    "glp_mpl_free_wksp": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/api/mps.c": {
    "glp_init_mpscp": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "check_parm": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"%s: blank = 0x%02X; invalid parameter\\n\"",
        "\"%s: obj_name = \\\"%.12s...\\\"; parameter too long\\n\"",
        "\"%s: tol_mps = %g; invalid parameter\\n\""
      ]
    },
    "error": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"%s:%d: \""
      ]
    },
    "warning": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": [
        "\"%s:%d: warning: \""
      ]
    },
    "read_char": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": [
        "\"read error - %s\\n\"",
        "\"unexpected end of file\\n\"",
        "\"missing final end of line\\n\"",
        "\"in fixed MPS format white-space character 0x%02\"",
        "\"X is not allowed\\n\"",
        "\"invalid control character 0x%02X\\n\"",
        "\"in fixed MPS format record must not be longer th\"",
        "\"an 80 characters\\n\""
      ]
    },
    "indicator": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        246,
        1
      ],
      "strings": [
        "\"NAME\"",
        "\"ROWS\"",
        "\"COLUMNS\"",
        "\"RHS\"",
        "\"RANGES\"",
        "\"BOUNDS\"",
        "\"ENDATA\"",
        "\"invalid indicator record\\n\""
      ]
    },
    "read_field": {
      "start_point": [
        248,
        0
      ],
      "end_point": [
        348,
        1
      ],
      "strings": [
        "\"in fixed MPS format positions %d-%d must \"",
        "\"be blank\\n\"",
        "\"in fixed MPS format positions 62-72 must \"",
        "\"be blank\\n\"",
        "\"length of field %d exceeds 255 characters\\n\"",
        "\"some extra field(s) detected beyond field \"",
        "\"6; field(s) ignored\\n\""
      ]
    },
    "patch_name": {
      "start_point": [
        350,
        0
      ],
      "end_point": [
        363,
        1
      ],
      "strings": []
    },
    "read_number": {
      "start_point": [
        365,
        0
      ],
      "end_point": [
        381,
        1
      ],
      "strings": [
        "\"missing numeric value in field %d\\n\"",
        "\"cannot convert '%s' to floating-point number\\n\""
      ]
    },
    "skip_field": {
      "start_point": [
        383,
        0
      ],
      "end_point": [
        389,
        1
      ],
      "strings": [
        "\"field %d must be blank\\n\""
      ]
    },
    "read_name": {
      "start_point": [
        391,
        0
      ],
      "end_point": [
        408,
        1
      ],
      "strings": [
        "\"NAME\"",
        "\"missing NAME indicator record\\n\"",
        "\"missing model name in field 3\\n\""
      ]
    },
    "read_rows": {
      "start_point": [
        410,
        0
      ],
      "end_point": [
        444,
        1
      ],
      "strings": [
        "\"N\"",
        "\"G\"",
        "\"L\"",
        "\"E\"",
        "\"missing row type in field 1\\n\"",
        "\"invalid row type in field 1\\n\"",
        "\"missing row name in field 2\\n\"",
        "\"row '%s' multiply specified\\n\""
      ]
    },
    "read_columns": {
      "start_point": [
        446,
        0
      ],
      "end_point": [
        561,
        1
      ],
      "strings": [
        "\"field 1 must be blank\\n\"",
        "\"'MARKER'\"",
        "\"field 4 must be blank\\n\"",
        "\"'INTORG'\"",
        "\"'INTEND'\"",
        "\"missing keyword in field 5\\n\"",
        "\"invalid keyword in field 5\\n\"",
        "\"missing column name in field 2\\n\"",
        "\"column '%s' multiply specified\\n\"",
        "\"missing row name in field 3\\n\"",
        "\"row '%s' not found\\n\"",
        "\"duplicate coefficient in row '%s'\\n\""
      ]
    },
    "read_rhs": {
      "start_point": [
        563,
        0
      ],
      "end_point": [
        641,
        1
      ],
      "strings": [
        "\"field 1 must be blank\\n\"",
        "\"missing RHS vector name in field 2\\n\"",
        "\"multiple RHS vectors not supported\\n\"",
        "\"missing row name in field 3\\n\"",
        "\"row '%s' not found\\n\"",
        "\"duplicate right-hand side for row '%s'\\n\"",
        "\"non-zero right-hand side for free row '%s'\"",
        "\" ignored\\n\""
      ]
    },
    "read_bounds": {
      "start_point": [
        743,
        0
      ],
      "end_point": [
        888,
        1
      ],
      "strings": [
        "\"LO\"",
        "\"UP\"",
        "\"FX\"",
        "\"FR\"",
        "\"MI\"",
        "\"PL\"",
        "\"LI\"",
        "\"UI\"",
        "\"BV\"",
        "\"missing bound type in field 1\\n\"",
        "\"invalid bound type in field 1\\n\"",
        "\"missing BOUNDS vector name in field 2\\n\"",
        "\"multiple BOUNDS vectors not supported\\n\"",
        "\"missing column name in field 3\\n\"",
        "\"column '%s' not found\\n\"",
        "\"duplicate lower bound for column '%s'\\n\"",
        "\"duplicate upper bound for column '%s'\\n\"",
        "\"LO\"",
        "\"UP\"",
        "\"FX\"",
        "\"FR\"",
        "\"MI\"",
        "\"PL\"",
        "\"LI\"",
        "\"UI\"",
        "\"BV\""
      ]
    },
    "glp_read_mps": {
      "start_point": [
        890,
        0
      ],
      "end_point": [
        1060,
        1
      ],
      "strings": [
        "\"Reading problem data from '%s'...\\n\"",
        "\"glp_read_mps: fmt = %d; invalid parameter\\n\"",
        "\"glp_read_mps\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"Problem: %s\\n\"",
        "\"ROWS\"",
        "\"missing ROWS indicator record\\n\"",
        "\"unable to determine objective row\\n\"",
        "\"objective row '%s' not found\\n\"",
        "\"Objective: %s\\n\"",
        "\"COLUMNS\"",
        "\"missing COLUMNS indicator record\\n\"",
        "\"RHS\"",
        "\"RANGES\"",
        "\"BOUNDS\"",
        "\"ENDATA\"",
        "\"invalid use of %s indicator record\\n\"",
        "\"%d row%s, %d column%s, %d non-zero%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"One variable is integer\\n\"",
        "\"One variable is binary\\n\"",
        "\"%d integer variables, \"",
        "\"none\"",
        "\"one\"",
        "\"all\"",
        "\"%d\"",
        "\" of which %s binary\\n\"",
        "\"is\"",
        "\"are\"",
        "\"%d records were read\\n\"",
        "\"One free row was removed\\n\"",
        "\"%d free rows were removed\\n\"",
        "\"Free objective row was removed\\n\""
      ]
    },
    "mps_name": {
      "start_point": [
        1108,
        0
      ],
      "end_point": [
        1122,
        1
      ],
      "strings": []
    },
    "row_name": {
      "start_point": [
        1124,
        0
      ],
      "end_point": [
        1137,
        1
      ],
      "strings": [
        "\"R%07d\""
      ]
    },
    "col_name": {
      "start_point": [
        1139,
        0
      ],
      "end_point": [
        1152,
        1
      ],
      "strings": [
        "\"C%07d\""
      ]
    },
    "mps_numb": {
      "start_point": [
        1154,
        0
      ],
      "end_point": [
        1170,
        1
      ],
      "strings": [
        "\"%.*E\"",
        "\"%.*G\"",
        "\"%d\""
      ]
    },
    "glp_write_mps": {
      "start_point": [
        1172,
        0
      ],
      "end_point": [
        1449,
        1
      ],
      "strings": [
        "\"Writing problem data to '%s'...\\n\"",
        "\"glp_write_mps: fmt = %d; invalid parameter\\n\"",
        "\"glp_write_mps\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"* %-*s%s\\n\"",
        "\"Problem:\"",
        "\"\"",
        "\"* %-12s%s\\n\"",
        "\"Class:\"",
        "\"LP\"",
        "\"MIP\"",
        "\"* %-12s%d\\n\"",
        "\"Rows:\"",
        "\"* %-12s%d\\n\"",
        "\"Columns:\"",
        "\"* %-12s%d (%d integer, %d binary)\\n\"",
        "\"Columns:\"",
        "\"* %-12s%d\\n\"",
        "\"Non-zeros:\"",
        "\"* %-12s%s\\n\"",
        "\"Format:\"",
        "\"Fixed MPS\"",
        "\"Free MPS\"",
        "\"*\\n\"",
        "\"NAME%*s%s\\n\"",
        "\"\"",
        "\"ROWS\\n\"",
        "\" %c%*s%s\\n\"",
        "\"\"",
        "\"COLUMNS\\n\"",
        "\"%*sM%07d%*s'MARKER'%*s'INTEND'\\n\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"%*sM%07d%*s'MARKER'%*s'INTORG'\\n\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"%*s%-*s\"",
        "\"\"",
        "\"%*s%-*s\"",
        "\"\"",
        "\"%*s0%*s$ empty column\\n\"",
        "\"\"",
        "\"\"",
        "\"%*s%-*s\"",
        "\"\"",
        "\"%*s%-*s\"",
        "\"\"",
        "\"%*s%*s\"",
        "\"\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"%*sM%07d%*s'MARKER'%*s'INTEND'\\n\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"Warning: problem has %d empty column(s)\\n\"",
        "\"RHS\\n\"",
        "\"%*s%-*s\"",
        "\"\"",
        "\"RHS1\"",
        "\"%*s%-*s\"",
        "\"\"",
        "\"%*s%*s\"",
        "\"\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"RANGES\\n\"",
        "\"%*s%-*s\"",
        "\"\"",
        "\"RNG1\"",
        "\"%*s%-*s\"",
        "\"\"",
        "\"%*s%*s\"",
        "\"\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"BOUNDS\\n\"",
        "\"FR\"",
        "\"LO\"",
        "\"PL\"",
        "\"MI\"",
        "\"UP\"",
        "\"LO\"",
        "\"UP\"",
        "\"FX\"",
        "\" %s %-*s%*s%-*s\"",
        "\"BND1\"",
        "\"\"",
        "\"%*s%*s\"",
        "\"\"",
        "\"\\n\"",
        "\"ENDATA\\n\"",
        "\"Write error on '%s' - %s\\n\"",
        "\"%d records were written\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/netgen.c": {
    "glp_netgen": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        489,
        1
      ],
      "strings": [
        "\"glp_netgen: v_rhs = %d; invalid offset\\n\"",
        "\"glp_netgen: a_cap = %d; invalid offset\\n\"",
        "\"glp_netgen: a_cost = %d; invalid offset\\n\"",
        "\"BEGIN\\n\"",
        "\"NETGEN PROBLEM%8d%10s%10d NODES AND%10d ARCS\\n\"",
        "\"\"",
        "\"USER:%11d%11d%11d%11d%11d%11d\\nDATA:%11d%11d%11d%11d%\"",
        "\"11d%11d\\n\"",
        "\"NETGEN\"",
        "\"SUPPLY\\n\"",
        "\"%6s%6d%18s%10d\\n\"",
        "\"\"",
        "\"\"",
        "\"ARCS\\n\"",
        "\"%6s%6d%6d%2s%10d%10d\\n\"",
        "\"\"",
        "\"\"",
        "\"DEMAND\\n\"",
        "\"%6s%6d%18s%10d\\n\"",
        "\"\"",
        "\"\"",
        "\"END\\n\""
      ]
    },
    "cresup": {
      "start_point": [
        495,
        0
      ],
      "end_point": [
        510,
        1
      ],
      "strings": []
    },
    "chain": {
      "start_point": [
        516,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": []
    },
    "chnarc": {
      "start_point": [
        536,
        0
      ],
      "end_point": [
        547,
        1
      ],
      "strings": []
    },
    "sort": {
      "start_point": [
        553,
        0
      ],
      "end_point": [
        575,
        1
      ],
      "strings": []
    },
    "pickj": {
      "start_point": [
        582,
        0
      ],
      "end_point": [
        630,
        1
      ],
      "strings": [
        "\"%6s%6d%6d%2s%10d%10d\\n\"",
        "\"\"",
        "\"\""
      ]
    },
    "assign": {
      "start_point": [
        636,
        0
      ],
      "end_point": [
        690,
        1
      ],
      "strings": [
        "\"SUPPLY\\n\"",
        "\"%6s%6d%18s%10d\\n\"",
        "\"\"",
        "\"\"",
        "\"ARCS\\n\"",
        "\"%6s%6d%6d%2s%10d%10d\\n\"",
        "\"\"",
        "\"\""
      ]
    },
    "setran": {
      "start_point": [
        706,
        0
      ],
      "end_point": [
        714,
        1
      ],
      "strings": []
    },
    "iran": {
      "start_point": [
        720,
        0
      ],
      "end_point": [
        739,
        1
      ],
      "strings": []
    },
    "glp_netgen_prob": {
      "start_point": [
        974,
        0
      ],
      "end_point": [
        982,
        1
      ],
      "strings": [
        "\"glp_netgen_prob: nprob = %d; invalid problem instance \"",
        "\"number\\n\""
      ]
    },
    "scan": {
      "start_point": [
        987,
        0
      ],
      "end_point": [
        992,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        994,
        0
      ],
      "end_point": [
        1016,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/api/npp.c": {
    "glp_npp_alloc_wksp": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    },
    "glp_npp_load_prob": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"glp_npp_load_prob: invalid call sequence (original ins\"",
        "\"tance already loaded)\\n\"",
        "\"glp_npp_load_prob: sol = %d; invalid parameter\\n\"",
        "\"glp_npp_load_prob: names = %d; invalid parameter\\n\""
      ]
    },
    "glp_npp_preprocess1": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"glp_npp_preprocess1: invalid call sequence (original i\"",
        "\"nstance not loaded yet)\\n\"",
        "\"glp_npp_preprocess1: invalid call sequence (preprocess\"",
        "\"ing already finished)\\n\"",
        "\"glp_npp_preprocess1: hard = %d; invalid parameter\\n\""
      ]
    },
    "glp_npp_build_prob": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"glp_npp_build_prob: invalid call sequence (original in\"",
        "\"stance not loaded yet)\\n\"",
        "\"glp_npp_build_prob: invalid call sequence (resultant i\"",
        "\"nstance already built)\\n\""
      ]
    },
    "glp_npp_postprocess": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"glp_npp_postprocess: invalid call sequence (resultant \"",
        "\"instance not built yet)\\n\"",
        "\"glp_npp_postprocess: resultant instance mismatch\\n\"",
        "\"glp_npp_postprocess: unable to recover non-optim\"",
        "\"al basic solution\\n\"",
        "\"glp_npp_postprocess: unable to recover non-optim\"",
        "\"al interior-point solution\\n\"",
        "\"glp_npp_postprocess: unable to recover integer n\"",
        "\"on-feasible solution\\n\""
      ]
    },
    "glp_npp_obtain_sol": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": [
        "\"glp_npp_obtain_sol: invalid call sequence (resultant i\"",
        "\"nstance not built yet)\\n\"",
        "\"glp_npp_obtain_sol: invalid call sequence (basic\"",
        "\" solution not provided yet)\\n\"",
        "\"glp_npp_obtain_sol: invalid call sequence (inter\"",
        "\"ior-point solution not provided yet)\\n\"",
        "\"glp_npp_obtain_sol: invalid call sequence (MIP s\"",
        "\"olution not provided yet)\\n\"",
        "\"glp_npp_obtain_sol: original instance mismatch\\n\""
      ]
    },
    "glp_npp_free_wksp": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/api/pript.c": {
    "glp_print_ipt": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"Writing interior-point solution to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"%-12s%s\\n\"",
        "\"Problem:\"",
        "\"\"",
        "\"%-12s%d\\n\"",
        "\"Rows:\"",
        "\"%-12s%d\\n\"",
        "\"Columns:\"",
        "\"%-12s%d\\n\"",
        "\"Non-zeros:\"",
        "\"%-12s%s\\n\"",
        "\"Status:\"",
        "\"OPTIMAL\"",
        "\"UNDEFINED\"",
        "\"INFEASIBLE (INTERMEDIATE)\"",
        "\"INFEASIBLE (FINAL)\"",
        "\"???\"",
        "\"%-12s%s%s%.10g (%s)\\n\"",
        "\"Objective:\"",
        "\"\"",
        "\"\"",
        "\" = \"",
        "\"MINimum\"",
        "\"MAXimum\"",
        "\"???\"",
        "\"\\n\"",
        "\"   No.   Row name        Activity     Lower bound  \"",
        "\" Upper bound    Marginal\\n\"",
        "\"------ ------------    ------------- ------------- \"",
        "\"------------- -------------\\n\"",
        "\"%6d \"",
        "\"%-12s \"",
        "\"\"",
        "\"%s\\n%20s\"",
        "\"\"",
        "\"%3s\"",
        "\"\"",
        "\"%13.6g \"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"\"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"=\"",
        "\"\"",
        "\"%13s\"",
        "\"< eps\"",
        "\"%13.6g \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"   No. Column name       Activity     Lower bound  \"",
        "\" Upper bound    Marginal\\n\"",
        "\"------ ------------    ------------- ------------- \"",
        "\"------------- -------------\\n\"",
        "\"%6d \"",
        "\"%-12s \"",
        "\"\"",
        "\"%s\\n%20s\"",
        "\"\"",
        "\"%3s\"",
        "\"\"",
        "\"%13.6g \"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"\"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"=\"",
        "\"\"",
        "\"%13s\"",
        "\"< eps\"",
        "\"%13.6g \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"Karush-Kuhn-Tucker optimality conditions:\\n\"",
        "\"\\n\"",
        "\"KKT.PE: max.abs.err = %.2e on row %d\\n\"",
        "\"        max.rel.err = %.2e on row %d\\n\"",
        "\"%8s%s\\n\"",
        "\"\"",
        "\"High quality\"",
        "\"Medium quality\"",
        "\"Low quality\"",
        "\"PRIMAL SOLUTION IS WRONG\"",
        "\"\\n\"",
        "\"KKT.PB: max.abs.err = %.2e on %s %d\\n\"",
        "\"row\"",
        "\"column\"",
        "\"        max.rel.err = %.2e on %s %d\\n\"",
        "\"row\"",
        "\"column\"",
        "\"%8s%s\\n\"",
        "\"\"",
        "\"High quality\"",
        "\"Medium quality\"",
        "\"Low quality\"",
        "\"PRIMAL SOLUTION IS INFEASIBL\"",
        "\"E\"",
        "\"\\n\"",
        "\"KKT.DE: max.abs.err = %.2e on column %d\\n\"",
        "\"        max.rel.err = %.2e on column %d\\n\"",
        "\"%8s%s\\n\"",
        "\"\"",
        "\"High quality\"",
        "\"Medium quality\"",
        "\"Low quality\"",
        "\"DUAL SOLUTION IS WRONG\"",
        "\"\\n\"",
        "\"KKT.DB: max.abs.err = %.2e on %s %d\\n\"",
        "\"row\"",
        "\"column\"",
        "\"        max.rel.err = %.2e on %s %d\\n\"",
        "\"row\"",
        "\"column\"",
        "\"%8s%s\\n\"",
        "\"\"",
        "\"High quality\"",
        "\"Medium quality\"",
        "\"Low quality\"",
        "\"DUAL SOLUTION IS INFEASIBLE\"",
        "\"\\n\"",
        "\"End of output\\n\"",
        "\"Write error on '%s' - %s\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/prmip.c": {
    "glp_print_mip": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"Writing MIP solution to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"%-12s%s\\n\"",
        "\"Problem:\"",
        "\"\"",
        "\"%-12s%d\\n\"",
        "\"Rows:\"",
        "\"%-12s%d (%d integer, %d binary)\\n\"",
        "\"Columns:\"",
        "\"%-12s%d\\n\"",
        "\"Non-zeros:\"",
        "\"%-12s%s\\n\"",
        "\"Status:\"",
        "\"INTEGER OPTIMAL\"",
        "\"INTEGER NON-OPTIMAL\"",
        "\"INTEGER EMPTY\"",
        "\"INTEGER UNDEFINED\"",
        "\"???\"",
        "\"%-12s%s%s%.10g (%s)\\n\"",
        "\"Objective:\"",
        "\"\"",
        "\"\"",
        "\" = \"",
        "\"MINimum\"",
        "\"MAXimum\"",
        "\"???\"",
        "\"\\n\"",
        "\"   No.   Row name        Activity     Lower bound  \"",
        "\" Upper bound\\n\"",
        "\"------ ------------    ------------- ------------- \"",
        "\"-------------\\n\"",
        "\"%6d \"",
        "\"%-12s \"",
        "\"\"",
        "\"%s\\n%20s\"",
        "\"\"",
        "\"%3s\"",
        "\"\"",
        "\"%13.6g \"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"\"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"=\"",
        "\"\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"   No. Column name       Activity     Lower bound  \"",
        "\" Upper bound\\n\"",
        "\"------ ------------    ------------- ------------- \"",
        "\"-------------\\n\"",
        "\"%6d \"",
        "\"%-12s \"",
        "\"\"",
        "\"%s\\n%20s\"",
        "\"\"",
        "\"%s  \"",
        "\" \"",
        "\"*\"",
        "\"?\"",
        "\"%13.6g \"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"\"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"=\"",
        "\"\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"Integer feasibility conditions:\\n\"",
        "\"\\n\"",
        "\"KKT.PE: max.abs.err = %.2e on row %d\\n\"",
        "\"        max.rel.err = %.2e on row %d\\n\"",
        "\"%8s%s\\n\"",
        "\"\"",
        "\"High quality\"",
        "\"Medium quality\"",
        "\"Low quality\"",
        "\"SOLUTION IS WRONG\"",
        "\"\\n\"",
        "\"KKT.PB: max.abs.err = %.2e on %s %d\\n\"",
        "\"row\"",
        "\"column\"",
        "\"        max.rel.err = %.2e on %s %d\\n\"",
        "\"row\"",
        "\"column\"",
        "\"%8s%s\\n\"",
        "\"\"",
        "\"High quality\"",
        "\"Medium quality\"",
        "\"Low quality\"",
        "\"SOLUTION IS INFEASIBLE\"",
        "\"\\n\"",
        "\"End of output\\n\"",
        "\"Write error on '%s' - %s\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/prob.h": {},
  "glpk/glpk-4.65/src/api/prob1.c": {
    "glp_create_prob": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "glp_set_prob_name": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": [
        "\"glp_set_prob_name: operation not allowed\\n\"",
        "\"glp_set_prob_name: problem name too long\\n\"",
        "\"glp_set_prob_name: problem name contains invalid\"",
        "\" character(s)\\n\""
      ]
    },
    "glp_set_obj_name": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": [
        "\"glp_set_obj_name: operation not allowed\\n\"",
        "\"glp_set_obj_name: objective name too long\\n\"",
        "\"glp_set_obj_name: objective name contains invali\"",
        "\"d character(s)\\n\""
      ]
    },
    "glp_set_obj_dir": {
      "start_point": [
        215,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": [
        "\"glp_set_obj_dir: operation not allowed\\n\"",
        "\"glp_set_obj_dir: dir = %d; invalid direction flag\\n\""
      ]
    },
    "glp_add_rows": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        327,
        1
      ],
      "strings": [
        "\"glp_add_rows: nrs = %d; invalid number of rows\\n\"",
        "\"glp_add_rows: nrs = %d; too many rows\\n\""
      ]
    },
    "glp_add_cols": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        404,
        1
      ],
      "strings": [
        "\"glp_add_cols: operation not allowed\\n\"",
        "\"glp_add_cols: ncs = %d; invalid number of columns\\n\"",
        "\"glp_add_cols: ncs = %d; too many columns\\n\""
      ]
    },
    "glp_set_row_name": {
      "start_point": [
        424,
        0
      ],
      "end_point": [
        463,
        1
      ],
      "strings": [
        "\"glp_set_row_name: i = %d; row number out of range\\n\"",
        "\"glp_set_row_name: i = %d; row name too long\\n\"",
        "\"glp_set_row_name: i = %d: row name contains inva\"",
        "\"lid character(s)\\n\""
      ]
    },
    "glp_set_col_name": {
      "start_point": [
        483,
        0
      ],
      "end_point": [
        520,
        1
      ],
      "strings": [
        "\"glp_set_col_name: operation not allowed\\n\"",
        "\"glp_set_col_name: j = %d; column number out of range\\n\"",
        "\"glp_set_col_name: j = %d; column name too long\\n\"",
        "\"glp_set_col_name: j = %d: column name contains i\"",
        "\"nvalid character(s)\\n\""
      ]
    },
    "glp_set_row_bnds": {
      "start_point": [
        556,
        0
      ],
      "end_point": [
        592,
        1
      ],
      "strings": [
        "\"glp_set_row_bnds: i = %d; row number out of range\\n\"",
        "\"glp_set_row_bnds: i = %d; type = %d; invalid row ty\"",
        "\"pe\\n\""
      ]
    },
    "glp_set_col_bnds": {
      "start_point": [
        627,
        0
      ],
      "end_point": [
        663,
        1
      ],
      "strings": [
        "\"glp_set_col_bnds: j = %d; column number out of range\\n\"",
        "\"glp_set_col_bnds: j = %d; type = %d; invalid column\"",
        "\" type\\n\""
      ]
    },
    "glp_set_obj_coef": {
      "start_point": [
        682,
        0
      ],
      "end_point": [
        694,
        1
      ],
      "strings": [
        "\"glp_set_obj_coef: operation not allowed\\n\"",
        "\"glp_set_obj_coef: j = %d; column number out of range\\n\""
      ]
    },
    "glp_set_mat_row": {
      "start_point": [
        721,
        0
      ],
      "end_point": [
        820,
        1
      ],
      "strings": [
        "\"glp_set_mat_row: i = %d; row number out of range\\n\"",
        "\"glp_set_mat_row: i = %d; len = %d; invalid row length \"",
        "\"\\n\"",
        "\"glp_set_mat_row: i = %d; len = %d; too many constraint\"",
        "\" coefficients\\n\"",
        "\"glp_set_mat_row: i = %d; ind[%d] = %d; column index\"",
        "\" out of range\\n\"",
        "\"glp_set_mat_row: i = %d; ind[%d] = %d; duplicate co\"",
        "\"lumn indices not allowed\\n\""
      ]
    },
    "glp_set_mat_col": {
      "start_point": [
        847,
        0
      ],
      "end_point": [
        940,
        1
      ],
      "strings": [
        "\"glp_set_mat_col: operation not allowed\\n\"",
        "\"glp_set_mat_col: j = %d; column number out of range\\n\"",
        "\"glp_set_mat_col: j = %d; len = %d; invalid column leng\"",
        "\"th\\n\"",
        "\"glp_set_mat_col: j = %d; len = %d; too many constraint\"",
        "\" coefficients\\n\"",
        "\"glp_set_mat_col: j = %d; ind[%d] = %d; row index ou\"",
        "\"t of range\\n\"",
        "\"glp_set_mat_col: j = %d; ind[%d] = %d; duplicate ro\"",
        "\"w indices not allowed\\n\""
      ]
    },
    "glp_load_matrix": {
      "start_point": [
        970,
        0
      ],
      "end_point": [
        1076,
        1
      ],
      "strings": [
        "\"glp_load_matrix: operation not allowed\\n\"",
        "\"glp_load_matrix: ne = %d; invalid number of constraint\"",
        "\" coefficients\\n\"",
        "\"glp_load_matrix: ne = %d; too many constraint coeffici\"",
        "\"ents\\n\"",
        "\"glp_load_matrix: ia[%d] = %d; row index out of rang\"",
        "\"e\\n\"",
        "\"glp_load_matrix: ja[%d] = %d; column index out of r\"",
        "\"ange\\n\"",
        "\"glp_load_mat: ia[%d] = %d; ja[%d] = %d; duplicat\"",
        "\"e indices not allowed\\n\""
      ]
    },
    "glp_check_dup": {
      "start_point": [
        1117,
        0
      ],
      "end_point": [
        1185,
        1
      ],
      "strings": [
        "\"glp_check_dup: m = %d; invalid parameter\\n\"",
        "\"glp_check_dup: n = %d; invalid parameter\\n\"",
        "\"glp_check_dup: ne = %d; invalid parameter\\n\"",
        "\"glp_check_dup: ia = %p; invalid parameter\\n\"",
        "\"glp_check_dup: ja = %p; invalid parameter\\n\""
      ]
    },
    "glp_sort_matrix": {
      "start_point": [
        1205,
        0
      ],
      "end_point": [
        1238,
        1
      ],
      "strings": [
        "\"glp_sort_matrix: P = %p; invalid problem object\\n\""
      ]
    },
    "glp_del_rows": {
      "start_point": [
        1260,
        0
      ],
      "end_point": [
        1323,
        1
      ],
      "strings": [
        "\"glp_del_rows: nrs = %d; invalid number of rows\\n\"",
        "\"glp_del_rows: num[%d] = %d; row number out of range\"",
        "\"\\n\"",
        "\"glp_del_rows: operation not allowed\\n\"",
        "\"glp_del_rows: num[%d] = %d; invalid attempt to d\"",
        "\"elete row created not in current subproblem\\n\"",
        "\"glp_del_rows: num[%d] = %d; invalid attempt to d\"",
        "\"elete active row (constraint)\\n\"",
        "\"glp_del_rows: num[%d] = %d; duplicate row numbers n\"",
        "\"ot allowed\\n\""
      ]
    },
    "glp_del_cols": {
      "start_point": [
        1345,
        0
      ],
      "end_point": [
        1409,
        1
      ],
      "strings": [
        "\"glp_del_cols: operation not allowed\\n\"",
        "\"glp_del_cols: ncs = %d; invalid number of columns\\n\"",
        "\"glp_del_cols: num[%d] = %d; column number out of ra\"",
        "\"nge\"",
        "\"glp_del_cols: num[%d] = %d; duplicate column number\"",
        "\"s not allowed\\n\""
      ]
    },
    "glp_copy_prob": {
      "start_point": [
        1429,
        0
      ],
      "end_point": [
        1504,
        1
      ],
      "strings": [
        "\"glp_copy_prob: operation not allowed\\n\"",
        "\"glp_copy_prob: copying problem object to itself not al\"",
        "\"lowed\\n\"",
        "\"glp_copy_prob: names = %d; invalid parameter\\n\""
      ]
    },
    "glp_erase_prob": {
      "start_point": [
        1525,
        0
      ],
      "end_point": [
        1532,
        1
      ],
      "strings": [
        "\"glp_erase_prob: operation not allowed\\n\""
      ]
    },
    "glp_delete_prob": {
      "start_point": [
        1578,
        0
      ],
      "end_point": [
        1585,
        1
      ],
      "strings": [
        "\"glp_delete_prob: operation not allowed\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/prob2.c": {
    "glp_get_prob_name": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "glp_get_obj_name": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "glp_get_obj_dir": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "glp_get_num_rows": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "glp_get_num_cols": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    },
    "glp_get_row_name": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": [
        "\"glp_get_row_name: i = %d; row number out of range\\n\""
      ]
    },
    "glp_get_col_name": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": [
        "\"glp_get_col_name: j = %d; column number out of range\\n\""
      ]
    },
    "glp_get_row_type": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": [
        "\"glp_get_row_type: i = %d; row number out of range\\n\""
      ]
    },
    "glp_get_row_lb": {
      "start_point": [
        219,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": [
        "\"glp_get_row_lb: i = %d; row number out of range\\n\""
      ]
    },
    "glp_get_row_ub": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": [
        "\"glp_get_row_ub: i = %d; row number out of range\\n\""
      ]
    },
    "glp_get_col_type": {
      "start_point": [
        290,
        0
      ],
      "end_point": [
        295,
        1
      ],
      "strings": [
        "\"glp_get_col_type: j = %d; column number out of range\\n\""
      ]
    },
    "glp_get_col_lb": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        329,
        1
      ],
      "strings": [
        "\"glp_get_col_lb: j = %d; column number out of range\\n\""
      ]
    },
    "glp_get_col_ub": {
      "start_point": [
        346,
        0
      ],
      "end_point": [
        363,
        1
      ],
      "strings": [
        "\"glp_get_col_ub: j = %d; column number out of range\\n\""
      ]
    },
    "glp_get_obj_coef": {
      "start_point": [
        382,
        0
      ],
      "end_point": [
        387,
        1
      ],
      "strings": [
        "\"glp_get_obj_coef: j = %d; column number out of range\\n\""
      ]
    },
    "glp_get_num_nz": {
      "start_point": [
        403,
        0
      ],
      "end_point": [
        406,
        1
      ],
      "strings": []
    },
    "glp_get_mat_row": {
      "start_point": [
        433,
        0
      ],
      "end_point": [
        447,
        1
      ],
      "strings": [
        "\"glp_get_mat_row: i = %d; row number out of range\\n\""
      ]
    },
    "glp_get_mat_col": {
      "start_point": [
        474,
        0
      ],
      "end_point": [
        488,
        1
      ],
      "strings": [
        "\"glp_get_mat_col: j = %d; column number out of range\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/prob3.c": {
    "glp_create_index": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "glp_find_row": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": [
        "\"glp_find_row: row name index does not exist\\n\""
      ]
    },
    "glp_find_col": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"glp_find_col: column name index does not exist\\n\""
      ]
    },
    "glp_delete_index": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/api/prob4.c": {
    "glp_set_rii": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": [
        "\"glp_set_rii: i = %d; row number out of range\\n\"",
        "\"glp_set_rii: i = %d; rii = %g; invalid scale factor\\n\""
      ]
    },
    "glp_set_sjj": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": [
        "\"glp_set_sjj: j = %d; column number out of range\\n\"",
        "\"glp_set_sjj: j = %d; sjj = %g; invalid scale factor\\n\""
      ]
    },
    "glp_get_rii": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"glp_get_rii: i = %d; row number out of range\\n\""
      ]
    },
    "glp_get_sjj": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"glp_get_sjj: j = %d; column number out of range\\n\""
      ]
    },
    "glp_unscale_prob": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/api/prob5.c": {
    "glp_set_row_stat": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"glp_set_row_stat: i = %d; row number out of range\\n\"",
        "\"glp_set_row_stat: i = %d; stat = %d; invalid status\\n\""
      ]
    },
    "glp_set_col_stat": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"glp_set_col_stat: j = %d; column number out of range\\n\"",
        "\"glp_set_col_stat: j = %d; stat = %d; invalid status\\n\""
      ]
    },
    "glp_std_basis": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/api/prrngs.c": {
    "format": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"         -Inf\"",
        "\"         +Inf\"",
        "\"%13.5f\"",
        "\"      0.00000\"",
        "\"     -0.00000\"",
        "\"       .     \"",
        "\"      0.\"",
        "\"       .\"",
        "\"     -0.\"",
        "\"      -.\"",
        "\"%13.6g\""
      ]
    },
    "glp_print_ranges": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": [
        "\"glp_print_ranges: P = %p; invalid problem object\\n\"",
        "\"glp_print_ranges: len = %d; invalid list length\\n\"",
        "\"glp_print_ranges: list = %p: invalid parameter\\n\"",
        "\"glp_print_ranges: list[%d] = %d; row/column numb\"",
        "\"er out of range\\n\"",
        "\"glp_print_ranges: flags = %d; invalid parameter\\n\"",
        "\"glp_print_ranges: fname = %p; invalid parameter\\n\"",
        "\"glp_print_ranges: optimal basic solution required\\n\"",
        "\"glp_print_ranges: basis factorization required\\n\"",
        "\"Write sensitivity analysis report to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"GLPK %-4s - SENSITIVITY ANALYSIS REPORT%73sPa\"",
        "\"ge%4d\\n\"",
        "\"\"",
        "\"\\n\"",
        "\"%-12s%s\\n\"",
        "\"Problem:\"",
        "\"\"",
        "\"%-12s%s%s%.10g (%s)\\n\"",
        "\"Objective:\"",
        "\"\"",
        "\"\"",
        "\" = \"",
        "\"MINimum\"",
        "\"MAXimum\"",
        "\"???\"",
        "\"\\n\"",
        "\"%6s %-12s %2s %13s %13s %13s  %13s %13s %13s \"",
        "\"%s\\n\"",
        "\"No.\"",
        "\"Row name\"",
        "\"Column name\"",
        "\"St\"",
        "\"Activity\"",
        "\"Slack\"",
        "\"Obj coef\"",
        "\"Lower bound\"",
        "\"Activity\"",
        "\"Obj coef\"",
        "\"Obj value at\"",
        "\"Limiting\"",
        "\"%6s %-12s %2s %13s %13s %13s  %13s %13s %13s \"",
        "\"%s\\n\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"Marginal\"",
        "\"Upper bound\"",
        "\"range\"",
        "\"range\"",
        "\"break point\"",
        "\"variable\"",
        "\"------ ------------ -- ------------- --------\"",
        "\"----- -------------  ------------- ------------- ------\"",
        "\"------- ------------\\n\"",
        "\"%6d\"",
        "\" %-12.12s\"",
        "\"\"",
        "\"%s\\n%6s %12s\"",
        "\"\"",
        "\"\"",
        "\" %2s\"",
        "\"BS\"",
        "\"NL\"",
        "\"NU\"",
        "\"NF\"",
        "\"NS\"",
        "\"??\"",
        "\" %s\"",
        "\" %s\"",
        "\" %s\"",
        "\"  %s\"",
        "\" %s\"",
        "\" %s\"",
        "\" %s\"",
        "\"\\n\"",
        "\"%6s %-12s %2s %13s\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\" %s\"",
        "\" %s\"",
        "\"  %s\"",
        "\" %s\"",
        "\" %s\"",
        "\" %s\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"End of report\\n\"",
        "\"Write error on '%s' - %s\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/prsol.c": {
    "glp_print_sol": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": [
        "\"Writing basic solution to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"%-12s%s\\n\"",
        "\"Problem:\"",
        "\"\"",
        "\"%-12s%d\\n\"",
        "\"Rows:\"",
        "\"%-12s%d\\n\"",
        "\"Columns:\"",
        "\"%-12s%d\\n\"",
        "\"Non-zeros:\"",
        "\"%-12s%s\\n\"",
        "\"Status:\"",
        "\"OPTIMAL\"",
        "\"FEASIBLE\"",
        "\"INFEASIBLE (INTERMEDIATE)\"",
        "\"INFEASIBLE (FINAL)\"",
        "\"UNBOUNDED\"",
        "\"UNDEFINED\"",
        "\"???\"",
        "\"%-12s%s%s%.10g (%s)\\n\"",
        "\"Objective:\"",
        "\"\"",
        "\"\"",
        "\" = \"",
        "\"MINimum\"",
        "\"MAXimum\"",
        "\"???\"",
        "\"\\n\"",
        "\"   No.   Row name   St   Activity     Lower bound  \"",
        "\" Upper bound    Marginal\\n\"",
        "\"------ ------------ -- ------------- ------------- \"",
        "\"------------- -------------\\n\"",
        "\"%6d \"",
        "\"%-12s \"",
        "\"\"",
        "\"%s\\n%20s\"",
        "\"\"",
        "\"%s \"",
        "\"B \"",
        "\"NL\"",
        "\"NU\"",
        "\"NF\"",
        "\"NS\"",
        "\"??\"",
        "\"%13.6g \"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"\"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"=\"",
        "\"\"",
        "\"%13s\"",
        "\"< eps\"",
        "\"%13.6g \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"   No. Column name  St   Activity     Lower bound  \"",
        "\" Upper bound    Marginal\\n\"",
        "\"------ ------------ -- ------------- ------------- \"",
        "\"------------- -------------\\n\"",
        "\"%6d \"",
        "\"%-12s \"",
        "\"\"",
        "\"%s\\n%20s\"",
        "\"\"",
        "\"%s \"",
        "\"B \"",
        "\"NL\"",
        "\"NU\"",
        "\"NF\"",
        "\"NS\"",
        "\"??\"",
        "\"%13.6g \"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"\"",
        "\"%13.6g \"",
        "\"%13s \"",
        "\"=\"",
        "\"\"",
        "\"%13s\"",
        "\"< eps\"",
        "\"%13.6g \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"Karush-Kuhn-Tucker optimality conditions:\\n\"",
        "\"\\n\"",
        "\"KKT.PE: max.abs.err = %.2e on row %d\\n\"",
        "\"        max.rel.err = %.2e on row %d\\n\"",
        "\"%8s%s\\n\"",
        "\"\"",
        "\"High quality\"",
        "\"Medium quality\"",
        "\"Low quality\"",
        "\"PRIMAL SOLUTION IS WRONG\"",
        "\"\\n\"",
        "\"KKT.PB: max.abs.err = %.2e on %s %d\\n\"",
        "\"row\"",
        "\"column\"",
        "\"        max.rel.err = %.2e on %s %d\\n\"",
        "\"row\"",
        "\"column\"",
        "\"%8s%s\\n\"",
        "\"\"",
        "\"High quality\"",
        "\"Medium quality\"",
        "\"Low quality\"",
        "\"PRIMAL SOLUTION IS INFEASIBL\"",
        "\"E\"",
        "\"\\n\"",
        "\"KKT.DE: max.abs.err = %.2e on column %d\\n\"",
        "\"        max.rel.err = %.2e on column %d\\n\"",
        "\"%8s%s\\n\"",
        "\"\"",
        "\"High quality\"",
        "\"Medium quality\"",
        "\"Low quality\"",
        "\"DUAL SOLUTION IS WRONG\"",
        "\"\\n\"",
        "\"KKT.DB: max.abs.err = %.2e on %s %d\\n\"",
        "\"row\"",
        "\"column\"",
        "\"        max.rel.err = %.2e on %s %d\\n\"",
        "\"row\"",
        "\"column\"",
        "\"%8s%s\\n\"",
        "\"\"",
        "\"High quality\"",
        "\"Medium quality\"",
        "\"Low quality\"",
        "\"DUAL SOLUTION IS INFEASIBLE\"",
        "\"\\n\"",
        "\"End of output\\n\"",
        "\"Write error on '%s' - %s\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/rdasn.c": {
    "glp_read_asnprob": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": [
        "\"glp_read_asnprob: v_set = %d; invalid offset\\n\"",
        "\"glp_read_asnprob: a_cost = %d; invalid offset\\n\"",
        "\"Reading assignment problem data from '%s'...\\n\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"p\"",
        "\"problem line missing or invalid\"",
        "\"asn\"",
        "\"wrong problem designator; 'asn' expected\"",
        "\"number of nodes missing or invalid\"",
        "\"number of arcs missing or invalid\"",
        "\"n\"",
        "\"node number missing or invalid\"",
        "\"node number %d out of range\"",
        "\"duplicate descriptor of node %d\"",
        "\"Assignment problem has %d + %d = %d node%s and %d arc%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"a\"",
        "\"wrong line designator; 'a' expected\"",
        "\"starting node number missing or invalid\"",
        "\"starting node number %d out of range\"",
        "\"node %d cannot be a starting node\"",
        "\"ending node number missing or invalid\"",
        "\"ending node number %d out of range\"",
        "\"node %d cannot be an ending node\"",
        "\"arc cost missing or invalid\"",
        "\"%d lines were read\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/rdcc.c": {
    "glp_read_ccdata": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"glp_read_ccdata: v_wgt = %d; invalid offset\\n\"",
        "\"Reading graph from '%s'...\\n\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"p\"",
        "\"problem line missing or invalid\"",
        "\"edge\"",
        "\"wrong problem designator; 'edge' expected\"",
        "\"number of vertices missing or invalid\"",
        "\"number of edges missing or invalid\"",
        "\"Graph has %d vert%s and %d edge%s\\n\"",
        "\"ex\"",
        "\"ices\"",
        "\"\"",
        "\"s\"",
        "\"n\"",
        "\"vertex number missing or invalid\"",
        "\"vertex number %d out of range\"",
        "\"duplicate descriptor of vertex %d\"",
        "\"vertex weight missing or invalid\"",
        "\"e\"",
        "\"wrong line designator; 'e' expected\"",
        "\"first vertex number missing or invalid\"",
        "\"first vertex number %d out of range\"",
        "\"second vertex number missing or invalid\"",
        "\"second vertex number %d out of range\"",
        "\"%d lines were read\\n\""
      ]
    },
    "glp_read_graph": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/api/rdcnf.c": {
    "glp_read_cnfsat": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"glp_read_cnfsat: P = %p; invalid problem object\\n\"",
        "\"glp_read_cnfsat: fname = %p; invalid parameter\\n\"",
        "\"Reading CNF-SAT problem data from '%s'...\\n\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"p\"",
        "\"problem line missing or invalid\"",
        "\"cnf\"",
        "\"wrong problem designator; 'cnf' expected\\n\"",
        "\"number of variables missing or invalid\\n\"",
        "\"number of clauses missing or invalid\\n\"",
        "\"Instance has %d variable%s and %d clause%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"variable number missing or invalid\\n\"",
        "\"variable number out of range\\n\"",
        "\"duplicate variable number\\n\"",
        "\"%d lines were read\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/rdipt.c": {
    "glp_read_ipt": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": [
        "\"glp_read_ipt: P = %p; invalid problem object\\n\"",
        "\"glp_read_ipt: fname = %d; invalid parameter\\n\"",
        "\"Reading interior-point solution from '%s'...\\n\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"s\"",
        "\"solution line missing or invalid\"",
        "\"ipt\"",
        "\"wrong solution designator; 'ipt' expected\"",
        "\"number of rows missing or invalid\"",
        "\"number of rows mismatch\"",
        "\"number of columns missing or invalid\"",
        "\"number of columns mismatch\"",
        "\"o\"",
        "\"i\"",
        "\"n\"",
        "\"u\"",
        "\"solution status missing or invalid\"",
        "\"objective value missing or invalid\"",
        "\"i\"",
        "\"row number missing or invalid\"",
        "\"row number out of range\"",
        "\"duplicate row solution descriptor\"",
        "\"row primal value missing or invalid\"",
        "\"row dual value missing or invalid\"",
        "\"j\"",
        "\"column number missing or invalid\"",
        "\"column number out of range\"",
        "\"duplicate column solution descriptor\"",
        "\"column primal value missing or invalid\"",
        "\"column dual value missing or invalid\"",
        "\"e\"",
        "\"line designator missing or invalid\"",
        "\"incomplete interior-point solution\"",
        "\"%d lines were read\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/rdmaxf.c": {
    "glp_read_maxflow": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": [
        "\"glp_read_maxflow: a_cap = %d; invalid offset\\n\"",
        "\"Reading maximum flow problem data from '%s'...\\n\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"p\"",
        "\"problem line missing or invalid\"",
        "\"max\"",
        "\"wrong problem designator; 'max' expected\"",
        "\"number of nodes missing or invalid\"",
        "\"number of arcs missing or invalid\"",
        "\"Flow network has %d node%s and %d arc%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"n\"",
        "\"node number missing or invalid\"",
        "\"node number %d out of range\"",
        "\"s\"",
        "\"only one source node allowed\"",
        "\"t\"",
        "\"only one sink node allowed\"",
        "\"wrong node designator; 's' or 't' expected\"",
        "\"source and sink nodes must be distinct\"",
        "\"source node descriptor missing\\n\"",
        "\"sink node descriptor missing\\n\"",
        "\"a\"",
        "\"wrong line designator; 'a' expected\"",
        "\"starting node number missing or invalid\"",
        "\"starting node number %d out of range\"",
        "\"ending node number missing or invalid\"",
        "\"ending node number %d out of range\"",
        "\"arc capacity missing or invalid\"",
        "\"%d lines were read\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/rdmcf.c": {
    "glp_read_mincost": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"glp_read_mincost: v_rhs = %d; invalid offset\\n\"",
        "\"glp_read_mincost: a_low = %d; invalid offset\\n\"",
        "\"glp_read_mincost: a_cap = %d; invalid offset\\n\"",
        "\"glp_read_mincost: a_cost = %d; invalid offset\\n\"",
        "\"Reading min-cost flow problem data from '%s'...\\n\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"p\"",
        "\"problem line missing or invalid\"",
        "\"min\"",
        "\"wrong problem designator; 'min' expected\"",
        "\"number of nodes missing or invalid\"",
        "\"number of arcs missing or invalid\"",
        "\"Flow network has %d node%s and %d arc%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"n\"",
        "\"node number missing or invalid\"",
        "\"node number %d out of range\"",
        "\"duplicate descriptor of node %d\"",
        "\"node supply/demand missing or invalid\"",
        "\"a\"",
        "\"wrong line designator; 'a' expected\"",
        "\"starting node number missing or invalid\"",
        "\"starting node number %d out of range\"",
        "\"ending node number missing or invalid\"",
        "\"ending node number %d out of range\"",
        "\"lower bound of arc flow missing or invalid\"",
        "\"upper bound of arc flow missing or invalid\"",
        "\"per-unit cost of arc flow missing or invalid\"",
        "\"%d lines were read\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/rdmip.c": {
    "glp_read_mip": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": [
        "\"glp_read_mip: P = %p; invalid problem object\\n\"",
        "\"glp_read_mip: fname = %d; invalid parameter\\n\"",
        "\"Reading MIP solution from '%s'...\\n\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"s\"",
        "\"solution line missing or invalid\"",
        "\"mip\"",
        "\"wrong solution designator; 'mip' expected\"",
        "\"number of rows missing or invalid\"",
        "\"number of rows mismatch\"",
        "\"number of columns missing or invalid\"",
        "\"number of columns mismatch\"",
        "\"o\"",
        "\"f\"",
        "\"n\"",
        "\"u\"",
        "\"solution status missing or invalid\"",
        "\"objective value missing or invalid\"",
        "\"i\"",
        "\"row number missing or invalid\"",
        "\"row number out of range\"",
        "\"duplicate row solution descriptor\"",
        "\"row value missing or invalid\"",
        "\"j\"",
        "\"column number missing or invalid\"",
        "\"column number out of range\"",
        "\"duplicate column solution descriptor\"",
        "\"column value missing or invalid\"",
        "\"e\"",
        "\"line designator missing or invalid\"",
        "\"incomplete MIP solution\"",
        "\"%d lines were read\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/rdprob.c": {
    "glp_read_prob": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        374,
        1
      ],
      "strings": [
        "\"glp_read_prob: P = %p; invalid problem object\\n\"",
        "\"glp_read_prob: flags = %d; invalid parameter\\n\"",
        "\"glp_read_prob: fname = %d; invalid parameter\\n\"",
        "\"Reading problem data from '%s'...\\n\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"p\"",
        "\"problem line missing or invalid\"",
        "\"lp\"",
        "\"mip\"",
        "\"wrong problem designator; 'lp' or 'mip' expected\"",
        "\"min\"",
        "\"max\"",
        "\"objective sense missing or invalid\"",
        "\"number of rows missing or invalid\"",
        "\"number of columns missing or invalid\"",
        "\"number of constraint coefficients missing or inval\"",
        "\"id\"",
        "\"i\"",
        "\"row number missing or invalid\"",
        "\"row number out of range\"",
        "\"f\"",
        "\"l\"",
        "\"u\"",
        "\"d\"",
        "\"s\"",
        "\"row type missing or invalid\"",
        "\"row lower bound/fixed value missing or in\"",
        "\"valid\"",
        "\"row upper bound missing or invalid\"",
        "\"duplicate row descriptor\"",
        "\"j\"",
        "\"column number missing or invalid\"",
        "\"column number out of range\"",
        "\"c\"",
        "\"i\"",
        "\"b\"",
        "\"column kind missing or invalid\"",
        "\"f\"",
        "\"l\"",
        "\"u\"",
        "\"d\"",
        "\"s\"",
        "\"column type missing or invalid\"",
        "\"column lower bound/fixed value missing or\"",
        "\" invalid\"",
        "\"column upper bound missing or invalid\"",
        "\"duplicate column descriptor\"",
        "\"a\"",
        "\"row number missing or invalid\"",
        "\"row number out of range\"",
        "\"column number missing or invalid\"",
        "\"column number out of range\"",
        "\"objective %s missing or invalid\"",
        "\"constant term\"",
        "\"coefficient\"",
        "\"duplicate objective %s\"",
        "\"constant term\"",
        "\"coefficient\"",
        "\"constraint coefficient missing or invalid\"",
        "\"too many constraint coefficient descripto\"",
        "\"rs\"",
        "\"n\"",
        "\"p\"",
        "\"duplicate problem name\"",
        "\"z\"",
        "\"duplicate objective name\"",
        "\"i\"",
        "\"row number missing or invalid\"",
        "\"row number out of range\"",
        "\"duplicate row name\"",
        "\"j\"",
        "\"column number missing or invalid\"",
        "\"column number out of range\"",
        "\"duplicate column name\"",
        "\"object designator missing or invalid\"",
        "\"e\"",
        "\"line designator missing or invalid\"",
        "\"too few constraint coefficient descriptors\"",
        "\"duplicate constraint coefficient\"",
        "\"Problem: %s\\n\"",
        "\"Objective: %s\\n\"",
        "\"%d row%s, %d column%s, %d non-zero%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"One variable is integer\\n\"",
        "\"One variable is binary\\n\"",
        "\"%d integer variables, \"",
        "\"none\"",
        "\"one\"",
        "\"all\"",
        "\"%d\"",
        "\" of which %s binary\\n\"",
        "\"is\"",
        "\"are\"",
        "\"%d lines were read\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/rdsol.c": {
    "glp_read_sol": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"glp_read_sol: P = %p; invalid problem object\\n\"",
        "\"glp_read_sol: fname = %d; invalid parameter\\n\"",
        "\"Reading basic solution from '%s'...\\n\"",
        "\"r\"",
        "\"Unable to open '%s' - %s\\n\"",
        "\"s\"",
        "\"solution line missing or invalid\"",
        "\"bas\"",
        "\"wrong solution designator; 'bas' expected\"",
        "\"number of rows missing or invalid\"",
        "\"number of rows mismatch\"",
        "\"number of columns missing or invalid\"",
        "\"number of columns mismatch\"",
        "\"u\"",
        "\"f\"",
        "\"i\"",
        "\"n\"",
        "\"primal solution status missing or invalid\"",
        "\"u\"",
        "\"f\"",
        "\"i\"",
        "\"n\"",
        "\"dual solution status missing or invalid\"",
        "\"objective value missing or invalid\"",
        "\"i\"",
        "\"row number missing or invalid\"",
        "\"row number out of range\"",
        "\"duplicate row solution descriptor\"",
        "\"b\"",
        "\"l\"",
        "\"u\"",
        "\"f\"",
        "\"s\"",
        "\"row status missing or invalid\"",
        "\"row primal value missing or invalid\"",
        "\"row dual value missing or invalid\"",
        "\"j\"",
        "\"column number missing or invalid\"",
        "\"column number out of range\"",
        "\"duplicate column solution descriptor\"",
        "\"b\"",
        "\"l\"",
        "\"u\"",
        "\"f\"",
        "\"s\"",
        "\"column status missing or invalid\"",
        "\"column primal value missing or invalid\"",
        "\"column dual value missing or invalid\"",
        "\"e\"",
        "\"line designator missing or invalid\"",
        "\"incomplete basic solution\"",
        "\"%d lines were read\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/rmfgen.c": {
    "make_edge": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "permute": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    },
    "connect": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "gen_rmf": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": []
    },
    "print_max_format": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": [
        "\"c %s\\n\"",
        "\"p max %7d %10d\\n\"",
        "\"n %7d s\\n\"",
        "\"n %7d t\\n\"",
        "\"a %7d %7d %10d\\n\""
      ]
    },
    "gen_free_net": {
      "start_point": [
        282,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": []
    },
    "glp_rmfgen": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        329,
        1
      ],
      "strings": [
        "\"glp_rmfgen: a_cap = %d; invalid offset\\n\"",
        "\"RMFGEN\"",
        "\"This file was generated by genrmf.\"",
        "\"The parameters are: a: %d b: %d c1: %d c2: %d\""
      ]
    },
    "main": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        364,
        1
      ],
      "strings": [
        "\"-seed\"",
        "\"-a\"",
        "\"-b\"",
        "\"-c1\"",
        "\"-c2\"",
        "\"Usage:\\n\"",
        "\"genrmf [-seed seed] -a frame_size -b depth\\n\"",
        "\"        -c1 cap_range1 -c2 cap_range2\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/strong.c": {
    "glp_strong_comp": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"glp_strong_comp: v_num = %d; invalid offset\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/topsort.c": {
    "top_sort": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "glp_top_sort": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": [
        "\"glp_top_sort: v_num = %d; invalid offset\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/wcliqex.c": {
    "set_edge": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "glp_wclique_exact": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"glp_wclique_exact: v_wgt = %d; invalid parameter\\n\"",
        "\"glp_wclique_exact: v_set = %d; invalid parameter\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/weak.c": {
    "glp_weak_comp": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"glp_weak_comp: v_num = %d; invalid offset\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/wrasn.c": {
    "glp_write_asnprob": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": [
        "\"glp_write_asnprob: v_set = %d; invalid offset\\n\"",
        "\"glp_write_asnprob: a_cost = %d; invalid offset\\n\"",
        "\"Writing assignment problem data to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"c %s\\n\"",
        "\"unknown\"",
        "\"p asn %d %d\\n\"",
        "\"n %d\\n\"",
        "\"a %d %d %.*g\\n\"",
        "\"c eof\\n\"",
        "\"Write error on '%s' - %s\\n\"",
        "\"%d lines were written\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/wrcc.c": {
    "glp_write_ccdata": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"glp_write_ccdata: v_wgt = %d; invalid offset\\n\"",
        "\"Writing graph to '%s'\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"c %s\\n\"",
        "\"unknown\"",
        "\"p edge %d %d\\n\"",
        "\"n %d %.*g\\n\"",
        "\"e %d %d\\n\"",
        "\"c eof\\n\"",
        "\"Write error on '%s' - %s\\n\"",
        "\"%d lines were written\\n\""
      ]
    },
    "glp_write_graph": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/api/wrcnf.c": {
    "glp_write_cnfsat": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": [
        "\"glp_write_cnfsat: P = %p; invalid problem object\\n\"",
        "\"glp_write_cnfsat: problem object does not encode CNF-\"",
        "\"SAT instance\\n\"",
        "\"Writing CNF-SAT problem data to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"c %s\\n\"",
        "\"unknown\"",
        "\"p cnf %d %d\\n\"",
        "\"%d\"",
        "\"\\n\"",
        "\"%s%s\"",
        "\"\"",
        "\" \"",
        "\"\\n\"",
        "\"%s0\\n\"",
        "\"\"",
        "\" \"",
        "\"c eof\\n\"",
        "\"Write error on '%s' - %s\\n\"",
        "\"%d lines were written\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/wript.c": {
    "glp_write_ipt": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": [
        "\"glp_write_ipt: P = %p; invalid problem object\\n\"",
        "\"glp_write_ipt: fname = %d; invalid parameter\\n\"",
        "\"Writing interior-point solution to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"c %-12s%s\\n\"",
        "\"Problem:\"",
        "\"\"",
        "\"c %-12s%d\\n\"",
        "\"Rows:\"",
        "\"c %-12s%d\\n\"",
        "\"Columns:\"",
        "\"c %-12s%d\\n\"",
        "\"Non-zeros:\"",
        "\"OPTIMAL\"",
        "\"INFEASIBLE (INTERMEDIATE)\"",
        "\"INFEASIBLE (FINAL)\"",
        "\"UNDEFINED\"",
        "\"???\"",
        "\"c %-12s%s\\n\"",
        "\"Status:\"",
        "\"MINimum\"",
        "\"MAXimum\"",
        "\"???\"",
        "\"c %-12s%s%s%.10g (%s)\\n\"",
        "\"Objective:\"",
        "\"\"",
        "\"\"",
        "\" = \"",
        "\"c\\n\"",
        "\"s ipt %d %d \"",
        "\"o\"",
        "\"i\"",
        "\"n\"",
        "\"u\"",
        "\"?\"",
        "\" %.*g\\n\"",
        "\"i %d %.*g %.*g\\n\"",
        "\"j %d %.*g %.*g\\n\"",
        "\"e o f\\n\"",
        "\"Write error on '%s' - %s\\n\"",
        "\"%d lines were written\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/wrmaxf.c": {
    "glp_write_maxflow": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"glp_write_maxflow: s = %d; source node number out of r\"",
        "\"ange\\n\"",
        "\"glp_write_maxflow: t = %d: sink node number out of ran\"",
        "\"ge\\n\"",
        "\"glp_write_mincost: a_cap = %d; invalid offset\\n\"",
        "\"Writing maximum flow problem data to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"c %s\\n\"",
        "\"unknown\"",
        "\"p max %d %d\\n\"",
        "\"n %d s\\n\"",
        "\"n %d t\\n\"",
        "\"a %d %d %.*g\\n\"",
        "\"c eof\\n\"",
        "\"Write error on '%s' - %s\\n\"",
        "\"%d lines were written\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/wrmcf.c": {
    "glp_write_mincost": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"glp_write_mincost: v_rhs = %d; invalid offset\\n\"",
        "\"glp_write_mincost: a_low = %d; invalid offset\\n\"",
        "\"glp_write_mincost: a_cap = %d; invalid offset\\n\"",
        "\"glp_write_mincost: a_cost = %d; invalid offset\\n\"",
        "\"Writing min-cost flow problem data to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"c %s\\n\"",
        "\"unknown\"",
        "\"p min %d %d\\n\"",
        "\"n %d %.*g\\n\"",
        "\"a %d %d %.*g %.*g %.*g\\n\"",
        "\"c eof\\n\"",
        "\"Write error on '%s' - %s\\n\"",
        "\"%d lines were written\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/wrmip.c": {
    "glp_write_mip": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"glp_write_mip: P = %p; invalid problem object\\n\"",
        "\"glp_write_mip: fname = %d; invalid parameter\\n\"",
        "\"Writing MIP solution to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"c %-12s%s\\n\"",
        "\"Problem:\"",
        "\"\"",
        "\"c %-12s%d\\n\"",
        "\"Rows:\"",
        "\"c %-12s%d\\n\"",
        "\"Columns:\"",
        "\"c %-12s%d\\n\"",
        "\"Non-zeros:\"",
        "\"INTEGER OPTIMAL\"",
        "\"INTEGER NON-OPTIMAL\"",
        "\"INTEGER EMPTY\"",
        "\"INTEGER UNDEFINED\"",
        "\"???\"",
        "\"c %-12s%s\\n\"",
        "\"Status:\"",
        "\"MINimum\"",
        "\"MAXimum\"",
        "\"???\"",
        "\"c %-12s%s%s%.10g (%s)\\n\"",
        "\"Objective:\"",
        "\"\"",
        "\"\"",
        "\" = \"",
        "\"c\\n\"",
        "\"s mip %d %d \"",
        "\"o\"",
        "\"f\"",
        "\"n\"",
        "\"u\"",
        "\"?\"",
        "\" %.*g\\n\"",
        "\"i %d %.*g\\n\"",
        "\"j %d %.*g\\n\"",
        "\"e o f\\n\"",
        "\"Write error on '%s' - %s\\n\"",
        "\"%d lines were written\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/wrprob.c": {
    "glp_write_prob": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"glp_write_prob: P = %p; invalid problem object\\n\"",
        "\"glp_write_prob: flags = %d; invalid parameter\\n\"",
        "\"glp_write_prob: fname = %d; invalid parameter\\n\"",
        "\"Writing problem data to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"p %s %s %d %d %d\\n\"",
        "\"lp\"",
        "\"mip\"",
        "\"min\"",
        "\"max\"",
        "\"???\"",
        "\"n p %s\\n\"",
        "\"n z %s\\n\"",
        "\"i %d \"",
        "\"f\\n\"",
        "\"l %.*g\\n\"",
        "\"u %.*g\\n\"",
        "\"d %.*g %.*g\\n\"",
        "\"s %.*g\\n\"",
        "\"n i %d %s\\n\"",
        "\"j %d \"",
        "\"c \"",
        "\"i \"",
        "\"f\\n\"",
        "\"l %.*g\\n\"",
        "\"u %.*g\\n\"",
        "\"d %.*g %.*g\\n\"",
        "\"s %.*g\\n\"",
        "\"n j %d %s\\n\"",
        "\"a 0 0 %.*g\\n\"",
        "\"a 0 %d %.*g\\n\"",
        "\"a %d %d %.*g\\n\"",
        "\"e o f\\n\"",
        "\"Write error on '%s' - %s\\n\"",
        "\"%d lines were written\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/api/wrsol.c": {
    "glp_write_sol": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": [
        "\"glp_write_sol: P = %p; invalid problem object\\n\"",
        "\"glp_write_sol: fname = %d; invalid parameter\\n\"",
        "\"Writing basic solution to '%s'...\\n\"",
        "\"w\"",
        "\"Unable to create '%s' - %s\\n\"",
        "\"c %-12s%s\\n\"",
        "\"Problem:\"",
        "\"\"",
        "\"c %-12s%d\\n\"",
        "\"Rows:\"",
        "\"c %-12s%d\\n\"",
        "\"Columns:\"",
        "\"c %-12s%d\\n\"",
        "\"Non-zeros:\"",
        "\"OPTIMAL\"",
        "\"FEASIBLE\"",
        "\"INFEASIBLE (INTERMEDIATE)\"",
        "\"INFEASIBLE (FINAL)\"",
        "\"UNBOUNDED\"",
        "\"UNDEFINED\"",
        "\"???\"",
        "\"c %-12s%s\\n\"",
        "\"Status:\"",
        "\"MINimum\"",
        "\"MAXimum\"",
        "\"???\"",
        "\"c %-12s%s%s%.10g (%s)\\n\"",
        "\"Objective:\"",
        "\"\"",
        "\"\"",
        "\" = \"",
        "\"c\\n\"",
        "\"s bas %d %d \"",
        "\"u\"",
        "\"f\"",
        "\"i\"",
        "\"n\"",
        "\"?\"",
        "\" \"",
        "\"u\"",
        "\"f\"",
        "\"i\"",
        "\"n\"",
        "\"?\"",
        "\" %.*g\\n\"",
        "\"i %d \"",
        "\"b\"",
        "\"l\"",
        "\"u\"",
        "\"f\"",
        "\"s\"",
        "\" %.*g %.*g\\n\"",
        "\"j %d \"",
        "\"b\"",
        "\"l\"",
        "\"u\"",
        "\"f\"",
        "\"s\"",
        "\" %.*g %.*g\\n\"",
        "\"e o f\\n\"",
        "\"Write error on '%s' - %s\\n\"",
        "\"%d lines were written\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/bflib/btf.c": {
    "btf_store_a_cols": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "btf_make_blocks": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    },
    "btf_check_blocks": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    },
    "btf_build_a_rows": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": []
    },
    "btf_a_solve": {
      "start_point": [
        268,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    },
    "btf_at_solve": {
      "start_point": [
        360,
        0
      ],
      "end_point": [
        434,
        1
      ],
      "strings": []
    },
    "btf_at_solve1": {
      "start_point": [
        455,
        0
      ],
      "end_point": [
        518,
        1
      ],
      "strings": []
    },
    "btf_estimate_norm": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        566,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/bflib/btf.h": {},
  "glpk/glpk-4.65/src/bflib/btfint.c": {
    "btfint_create": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "factorize_triv": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "factorize_block": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": []
    },
    "btfint_factorize": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": []
    },
    "btfint_delete": {
      "start_point": [
        370,
        0
      ],
      "end_point": [
        404,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/bflib/btfint.h": {},
  "glpk/glpk-4.65/src/bflib/fhv.c": {
    "fhv_ft_update": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        222,
        7
      ],
      "strings": []
    },
    "fhv_h_solve": {
      "start_point": [
        533,
        0
      ],
      "end_point": [
        551,
        1
      ],
      "strings": []
    },
    "fhv_ht_solve": {
      "start_point": [
        565,
        0
      ],
      "end_point": [
        583,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/bflib/fhv.h": {},
  "glpk/glpk-4.65/src/bflib/fhvint.c": {
    "fhvint_create": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "fhvint_factorize": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "fhvint_update": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "fhvint_ftran": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "fhvint_btran": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "fhvint_estimate": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "fhvint_delete": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/bflib/fhvint.h": {},
  "glpk/glpk-4.65/src/bflib/ifu.c": {
    "ifu_expand": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "ifu_bg_update": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "givens": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "ifu_gr_update": {
      "start_point": [
        226,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": []
    },
    "ifu_a_solve": {
      "start_point": [
        301,
        0
      ],
      "end_point": [
        333,
        1
      ],
      "strings": []
    },
    "ifu_at_solve": {
      "start_point": [
        358,
        0
      ],
      "end_point": [
        389,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/bflib/ifu.h": {},
  "glpk/glpk-4.65/src/bflib/luf.c": {
    "luf_store_v_cols": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "luf_check_all": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    },
    "luf_build_v_rows": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "luf_build_f_rows": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": []
    },
    "luf_build_v_cols": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": []
    },
    "luf_check_f_rc": {
      "start_point": [
        369,
        0
      ],
      "end_point": [
        407,
        1
      ],
      "strings": []
    },
    "luf_check_v_rc": {
      "start_point": [
        417,
        0
      ],
      "end_point": [
        455,
        1
      ],
      "strings": []
    },
    "luf_f_solve": {
      "start_point": [
        468,
        0
      ],
      "end_point": [
        491,
        1
      ],
      "strings": []
    },
    "luf_ft_solve": {
      "start_point": [
        505,
        0
      ],
      "end_point": [
        528,
        1
      ],
      "strings": []
    },
    "luf_v_solve": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        569,
        1
      ],
      "strings": []
    },
    "luf_vt_solve": {
      "start_point": [
        584,
        0
      ],
      "end_point": [
        611,
        1
      ],
      "strings": []
    },
    "luf_vt_solve1": {
      "start_point": [
        628,
        0
      ],
      "end_point": [
        656,
        1
      ],
      "strings": []
    },
    "luf_estimate_norm": {
      "start_point": [
        680,
        0
      ],
      "end_point": [
        710,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/bflib/luf.h": {},
  "glpk/glpk-4.65/src/bflib/lufint.c": {
    "lufint_create": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "lufint_factorize": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    },
    "lufint_delete": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/bflib/lufint.h": {},
  "glpk/glpk-4.65/src/bflib/scf.c": {
    "scf_r0_solve": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "scf_s0_solve": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "scf_r_prod": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    },
    "scf_rt_prod": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": []
    },
    "scf_s_prod": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": []
    },
    "scf_st_prod": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "scf_a_solve": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": []
    },
    "scf_at_solve": {
      "start_point": [
        297,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": []
    },
    "scf_add_r_row": {
      "start_point": [
        338,
        0
      ],
      "end_point": [
        379,
        1
      ],
      "strings": []
    },
    "scf_add_s_col": {
      "start_point": [
        387,
        0
      ],
      "end_point": [
        428,
        1
      ],
      "strings": []
    },
    "scf_update_aug": {
      "start_point": [
        471,
        0
      ],
      "end_point": [
        520,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/bflib/scf.h": {},
  "glpk/glpk-4.65/src/bflib/scfint.c": {
    "scfint_create": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "scfint_factorize": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "scfint_update": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "scfint_ftran": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "scfint_btran": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "scfint_estimate": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    },
    "scfint_delete": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/bflib/scfint.h": {},
  "glpk/glpk-4.65/src/bflib/sgf.c": {
    "sgf_reduce_nuc": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    },
    "sgf_singl_phase": {
      "start_point": [
        259,
        0
      ],
      "end_point": [
        408,
        1
      ],
      "strings": []
    },
    "sgf_choose_pivot": {
      "start_point": [
        469,
        0
      ],
      "end_point": [
        655,
        1
      ],
      "strings": []
    },
    "sgf_eliminate": {
      "start_point": [
        712,
        0
      ],
      "end_point": [
        965,
        1
      ],
      "strings": []
    },
    "sgf_dense_lu": {
      "start_point": [
        1006,
        0
      ],
      "end_point": [
        1056,
        1
      ],
      "strings": []
    },
    "sgf_dense_phase": {
      "start_point": [
        1103,
        0
      ],
      "end_point": [
        1282,
        1
      ],
      "strings": []
    },
    "sgf_factorize": {
      "start_point": [
        1304,
        0
      ],
      "end_point": [
        1440,
        1
      ],
      "strings": [
        "\"n = %d; k1 = %d; k2 = %d\\n\"",
        "\"na = %d; nnz = %d; den = %g\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/bflib/sgf.h": {},
  "glpk/glpk-4.65/src/bflib/sva.c": {
    "sva_create_area": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "sva_alloc_vecs": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": [
        "\"sva_alloc_vecs: nnn = %d\\n\"",
        "\"now sva->n_max = %d, sva->n = %d\\n\""
      ]
    },
    "sva_resize_area": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"sva_resize_area: delta = %d\\n\"",
        "\"now sva->size = %d\\n\""
      ]
    },
    "sva_defrag_area": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": [
        "\"sva_defrag_area:\\n\"",
        "\"before defragmenting = %d %d %d\\n\"",
        "\"after defragmenting = %d %d %d\\n\""
      ]
    },
    "sva_more_space": {
      "start_point": [
        276,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": [
        "\"sva_more_space: m_size = %d\\n\""
      ]
    },
    "sva_enlarge_cap": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": []
    },
    "sva_reserve_cap": {
      "start_point": [
        402,
        0
      ],
      "end_point": [
        417,
        1
      ],
      "strings": []
    },
    "sva_make_static": {
      "start_point": [
        434,
        0
      ],
      "end_point": [
        480,
        1
      ],
      "strings": []
    },
    "sva_check_area": {
      "start_point": [
        489,
        0
      ],
      "end_point": [
        551,
        1
      ],
      "strings": []
    },
    "sva_delete_area": {
      "start_point": [
        559,
        0
      ],
      "end_point": [
        569,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/bflib/sva.h": {},
  "glpk/glpk-4.65/src/colamd/colamd.c": {
    "t_add": {
      "start_point": [
        1050,
        0
      ],
      "end_point": [
        1054,
        1
      ],
      "strings": []
    },
    "t_mult": {
      "start_point": [
        1057,
        0
      ],
      "end_point": [
        1065,
        1
      ],
      "strings": []
    },
    "COLAMD_recommended": {
      "start_point": [
        1075,
        0
      ],
      "end_point": [
        1099,
        1
      ],
      "strings": []
    },
    "COLAMD_set_defaults": {
      "start_point": [
        1129,
        0
      ],
      "end_point": [
        1151,
        1
      ],
      "strings": []
    },
    "SYMAMD_MAIN": {
      "start_point": [
        1158,
        0
      ],
      "end_point": [
        1464,
        1
      ],
      "strings": [
        "\"symamd\"",
        "\"symamd: stats not present\\n\"",
        "\"symamd: A not present\\n\"",
        "\"symamd: p not present\\n\"",
        "\"symamd: n negative %d\\n\"",
        "\"symamd: number of entries negative %d\\n\"",
        "\"symamd: p[0] not zero %d\\n\"",
        "\"symamd: allocate count (size %d) failed\\n\"",
        "\"symamd: allocate mark (size %d) failed\\n\"",
        "\"symamd: col %d negative length %d\\n\"",
        "\"symamd: row %d col %d out of bounds\\n\"",
        "\"symamd: row %d col %d unsorted/duplicate\\n\"",
        "\"symamd: M is %d-by-%d with %d entries, Mlen = %g\\n\"",
        "\"symamd: allocate M (size %g) failed\\n\"",
        "\"symamd: Duplicates in A.\\n\"",
        "\"symamd: done.\\n\""
      ]
    },
    "COLAMD_MAIN": {
      "start_point": [
        1478,
        0
      ],
      "end_point": [
        1640,
        1
      ],
      "strings": [
        "\"colamd\"",
        "\"colamd: stats not present\\n\"",
        "\"colamd: A not present\\n\"",
        "\"colamd: p not present\\n\"",
        "\"colamd: nrow negative %d\\n\"",
        "\"colamd: ncol negative %d\\n\"",
        "\"colamd: number of entries negative %d\\n\"",
        "\"colamd: p[0] not zero %d\\n\"",
        "\"colamd: Need Alen >= %d, given only Alen = %d\\n\"",
        "\"colamd: Matrix invalid\\n\"",
        "\"colamd: done.\\n\""
      ]
    },
    "COLAMD_report": {
      "start_point": [
        1647,
        0
      ],
      "end_point": [
        1653,
        1
      ],
      "strings": [
        "\"colamd\""
      ]
    },
    "SYMAMD_report": {
      "start_point": [
        1660,
        0
      ],
      "end_point": [
        1666,
        1
      ],
      "strings": [
        "\"symamd\""
      ]
    },
    "init_rows_cols": {
      "start_point": [
        1690,
        0
      ],
      "end_point": [
        1915,
        1
      ],
      "strings": [
        "\"colamd: col %d length %d < 0\\n\"",
        "\"colamd: row %d col %d out of bounds\\n\"",
        "\"colamd: row %d col %d unsorted/duplicate\\n\"",
        "\"colamd: reconstructing column form, matrix jumbled\\n\""
      ]
    },
    "init_scoring": {
      "start_point": [
        1927,
        0
      ],
      "end_point": [
        2189,
        1
      ],
      "strings": [
        "\"colamd: densecount: %d %d\\n\"",
        "\"colamd: null columns killed: %d\\n\"",
        "\"colamd: Dense and null columns killed: %d\\n\"",
        "\"colamd: Dense and null rows killed: %d\\n\"",
        "\"Newly null killed: %d\\n\"",
        "\"colamd: Dense, null, and newly-null columns killed: %d\\n\"",
        "\"place %d score %d minscore %d ncol %d\\n\"",
        "\"colamd: Live cols %d out of %d, non-princ: %d\\n\""
      ]
    },
    "find_ordering": {
      "start_point": [
        2202,
        0
      ],
      "end_point": [
        2747,
        1
      ],
      "strings": [
        "\"colamd: Ordering, n_col2=%d\\n\"",
        "\"\\n...       Step k: %d out of n_col2: %d\\n\"",
        "\"\\n----------Step k: %d out of n_col2: %d\\n\"",
        "\"Pivot col: %d thick %d\\n\"",
        "\"Pivot col pattern %d %d\\n\"",
        "\"check2\\n\"",
        "\"Kill row in pivot col: %d\\n\"",
        "\"Pivotal row is %d\\n\"",
        "\"** Computing set differences phase. **\\n\"",
        "\"Pivot row: \"",
        "\"Col: %d\\n\"",
        "\"aggressive absorption. Row: %d\\n\"",
        "\"** Adding set differences phase. **\\n\"",
        "\"Adding set diffs for Col: %d.\\n\"",
        "\" Row %d, dead\\n\"",
        "\" Row %d, set diff %d\\n\"",
        "\"further mass elimination. Col: %d\\n\"",
        "\"Preparing supercol detection for Col: %d.\\n\"",
        "\" Hash = %d, n_col = %d.\\n\"",
        "\"** Supercolumn detection phase. **\\n\"",
        "\"check3\\n\"",
        "\"** Finalize scores phase. **\\n\"",
        "\"Resurrect Pivot_row %d deg: %d\\n\""
      ]
    },
    "order_children": {
      "start_point": [
        2767,
        0
      ],
      "end_point": [
        2832,
        1
      ],
      "strings": []
    },
    "detect_super_cols": {
      "start_point": [
        2868,
        0
      ],
      "end_point": [
        3009,
        1
      ],
      "strings": []
    },
    "garbage_collection": {
      "start_point": [
        3025,
        0
      ],
      "end_point": [
        3145,
        1
      ],
      "strings": [
        "\"Defrag..\\n\""
      ]
    },
    "clear_mark": {
      "start_point": [
        3157,
        0
      ],
      "end_point": [
        3185,
        1
      ],
      "strings": []
    },
    "print_report": {
      "start_point": [
        3192,
        0
      ],
      "end_point": [
        3313,
        1
      ],
      "strings": [
        "\"\\n%s version %d.%d, %s: \"",
        "\"No statistics available.\\n\"",
        "\"OK.  \"",
        "\"ERROR.  \"",
        "\"Matrix has unsorted or duplicate row indices.\\n\"",
        "\"%s: number of duplicate or out-of-order row indices: %d\\n\"",
        "\"%s: last seen duplicate or out-of-order row index:   %d\\n\"",
        "\"%s: last seen in column:                             %d\"",
        "\"\\n\"",
        "\"%s: number of dense or empty rows ignored:           %d\\n\"",
        "\"%s: number of dense or empty columns ignored:        %d\\n\"",
        "\"%s: number of garbage collections performed:         %d\\n\"",
        "\"Array A (row indices of matrix) not present.\\n\"",
        "\"Array p (column pointers for matrix) not present.\\n\"",
        "\"Invalid number of rows (%d).\\n\"",
        "\"Invalid number of columns (%d).\\n\"",
        "\"Invalid number of nonzero entries (%d).\\n\"",
        "\"Invalid column pointer, p [0] = %d, must be zero.\\n\"",
        "\"Array A too small.\\n\"",
        "\"        Need Alen >= %d, but given only Alen = %d.\\n\"",
        "\"Column %d has a negative number of nonzero entries (%d).\\n\"",
        "\"Row index (row %d) out of bounds (%d to %d) in column %d.\\n\"",
        "\"Out of memory.\\n\""
      ]
    },
    "debug_structures": {
      "start_point": [
        3338,
        0
      ],
      "end_point": [
        3412,
        1
      ],
      "strings": [
        "\"initial live col %5d %5d %5d\\n\""
      ]
    },
    "debug_deg_lists": {
      "start_point": [
        3425,
        0
      ],
      "end_point": [
        3487,
        1
      ],
      "strings": [
        "\"Degree lists: %d\\n\"",
        "\"%d:\"",
        "\" %d\"",
        "\"\\n\"",
        "\"should %d have %d\\n\""
      ]
    },
    "debug_mark": {
      "start_point": [
        3499,
        0
      ],
      "end_point": [
        3524,
        1
      ],
      "strings": []
    },
    "debug_matrix": {
      "start_point": [
        3535,
        0
      ],
      "end_point": [
        3598,
        1
      ],
      "strings": [
        "\"DUMP MATRIX:\\n\"",
        "\"Row %d alive? %d\\n\"",
        "\"start %d length %d degree %d\\n\"",
        "\"  %d col %d\\n\"",
        "\"Col %d alive? %d\\n\"",
        "\"start %d length %d shared1 %d shared2 %d\\n\"",
        "\"  %d row %d\\n\""
      ]
    },
    "colamd_get_debug": {
      "start_point": [
        3600,
        0
      ],
      "end_point": [
        3619,
        1
      ],
      "strings": [
        "\"debug\"",
        "\"r\"",
        "\"%d\"",
        "\"%s: debug version, D = %d (THIS WILL BE SLOW!)\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/colamd/colamd.h": {},
  "glpk/glpk-4.65/src/draft/bfd.c": {
    "bfd_create_it": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"bfd_create_it: warning: debugging version used\\n\""
      ]
    },
    "bfd_set_parm": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "bfd_get_bfcp": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "bfd_set_bfcp": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "bfd_col": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "bfd_factorize": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": [
        "\"bfd_factorize: warning: cond(B) = %g\\n\"",
        "\"bfd_factorize: m = %d; ret = %d\\n\""
      ]
    },
    "bfd_estimate": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        303,
        1
      ],
      "strings": []
    },
    "bfd_condest": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        316,
        1
      ],
      "strings": []
    },
    "bfd_ftran": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        358,
        1
      ],
      "strings": [
        "\"bfd_ftran: maxerr = %g; relative error too large\\n\""
      ]
    },
    "bfd_ftran_s": {
      "start_point": [
        361,
        0
      ],
      "end_point": [
        375,
        1
      ],
      "strings": []
    },
    "bfd_btran": {
      "start_point": [
        378,
        0
      ],
      "end_point": [
        417,
        1
      ],
      "strings": [
        "\"bfd_btran: maxerr = %g; relative error too large\\n\""
      ]
    },
    "bfd_btran_s": {
      "start_point": [
        420,
        0
      ],
      "end_point": [
        434,
        1
      ],
      "strings": []
    },
    "bfd_update": {
      "start_point": [
        437,
        0
      ],
      "end_point": [
        514,
        1
      ],
      "strings": []
    },
    "bfd_get_count": {
      "start_point": [
        516,
        0
      ],
      "end_point": [
        519,
        1
      ],
      "strings": []
    },
    "bfd_delete_it": {
      "start_point": [
        521,
        0
      ],
      "end_point": [
        541,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/bfd.h": {},
  "glpk/glpk-4.65/src/draft/bfx.c": {
    "bfx_create_binv": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "bfx_factorize": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "bfx_ftran": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "bfx_btran": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "bfx_update": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "bfx_delete_binv": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/bfx.h": {},
  "glpk/glpk-4.65/src/draft/draft.h": {},
  "glpk/glpk-4.65/src/draft/glpapi06.c": {
    "trivial_lp": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": [
        "\"~%6d: obj = %17.9e  infeas = %10.3e\\n\"",
        "\"OPTIMAL SOLUTION FOUND\\n\"",
        "\"PROBLEM HAS NO FEASIBLE SOLUTION\\n\"",
        "\"PROBLEM HAS UNBOUNDED SOLUTION\\n\"",
        "\"PROBLEM HAS NO DUAL FEASIBLE SOLUTION\\n\""
      ]
    },
    "solve_lp": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": [
        "\"glp_simplex: initial basis is invalid\\n\"",
        "\"glp_simplex: initial basis is singular\\n\"",
        "\"glp_simplex: initial basis is ill-conditioned\\n\""
      ]
    },
    "preprocess_and_solve_lp": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        364,
        1
      ],
      "strings": [
        "\"Preprocessing...\\n\"",
        "\"PROBLEM HAS NO PRIMAL FEASIBLE SOLUTION\\n\"",
        "\"PROBLEM HAS NO DUAL FEASIBLE SOLUTION\\n\"",
        "\"~%6d: obj = %17.9e  infeas = %10.3e\\n\"",
        "\"OPTIMAL SOLUTION FOUND BY LP PREPROCESSOR\\n\"",
        "\"%d row%s, %d column%s, %d non-zero%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"glp_simplex: unable to recover undefined or non-op\"",
        "\"timal solution\\n\""
      ]
    },
    "glp_simplex": {
      "start_point": [
        366,
        0
      ],
      "end_point": [
        482,
        1
      ],
      "strings": [
        "\"glp_simplex: P = %p; invalid problem object\\n\"",
        "\"glp_simplex: operation not allowed\\n\"",
        "\"glp_simplex: msg_lev = %d; invalid parameter\\n\"",
        "\"glp_simplex: meth = %d; invalid parameter\\n\"",
        "\"glp_simplex: pricing = %d; invalid parameter\\n\"",
        "\"glp_simplex: r_test = %d; invalid parameter\\n\"",
        "\"glp_simplex: tol_bnd = %g; invalid parameter\\n\"",
        "\"glp_simplex: tol_dj = %g; invalid parameter\\n\"",
        "\"glp_simplex: tol_piv = %g; invalid parameter\\n\"",
        "\"glp_simplex: it_lim = %d; invalid parameter\\n\"",
        "\"glp_simplex: tm_lim = %d; invalid parameter\\n\"",
        "\"glp_simplex: out_frq = %d; invalid parameter\\n\"",
        "\"glp_simplex: out_dly = %d; invalid parameter\\n\"",
        "\"glp_simplex: presolve = %d; invalid parameter\\n\"",
        "\"glp_simplex: excl = %d; invalid parameter\\n\"",
        "\"glp_simplex: shift = %d; invalid parameter\\n\"",
        "\"glp_simplex: aorn = %d; invalid parameter\\n\"",
        "\"glp_simplex: row %d: lb = %g, ub = %g; incorrec\"",
        "\"t bounds\\n\"",
        "\"glp_simplex: column %d: lb = %g, ub = %g; incor\"",
        "\"rect bounds\\n\"",
        "\"GLPK Simplex Optimizer, v%s\\n\"",
        "\"%d row%s, %d column%s, %d non-zero%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\""
      ]
    },
    "glp_init_smcp": {
      "start_point": [
        501,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": []
    },
    "glp_get_status": {
      "start_point": [
        553,
        0
      ],
      "end_point": [
        582,
        1
      ],
      "strings": []
    },
    "glp_get_prim_stat": {
      "start_point": [
        603,
        0
      ],
      "end_point": [
        606,
        1
      ],
      "strings": []
    },
    "glp_get_dual_stat": {
      "start_point": [
        627,
        0
      ],
      "end_point": [
        630,
        1
      ],
      "strings": []
    },
    "glp_get_obj_val": {
      "start_point": [
        646,
        0
      ],
      "end_point": [
        652,
        1
      ],
      "strings": []
    },
    "glp_get_row_stat": {
      "start_point": [
        674,
        0
      ],
      "end_point": [
        679,
        1
      ],
      "strings": [
        "\"glp_get_row_stat: i = %d; row number out of range\\n\""
      ]
    },
    "glp_get_row_prim": {
      "start_point": [
        695,
        0
      ],
      "end_point": [
        704,
        1
      ],
      "strings": [
        "\"glp_get_row_prim: i = %d; row number out of range\\n\""
      ]
    },
    "glp_get_row_dual": {
      "start_point": [
        720,
        0
      ],
      "end_point": [
        729,
        1
      ],
      "strings": [
        "\"glp_get_row_dual: i = %d; row number out of range\\n\""
      ]
    },
    "glp_get_col_stat": {
      "start_point": [
        751,
        0
      ],
      "end_point": [
        756,
        1
      ],
      "strings": [
        "\"glp_get_col_stat: j = %d; column number out of range\\n\""
      ]
    },
    "glp_get_col_prim": {
      "start_point": [
        772,
        0
      ],
      "end_point": [
        781,
        1
      ],
      "strings": [
        "\"glp_get_col_prim: j = %d; column number out of range\\n\""
      ]
    },
    "glp_get_col_dual": {
      "start_point": [
        797,
        0
      ],
      "end_point": [
        806,
        1
      ],
      "strings": [
        "\"glp_get_col_dual: j = %d; column number out of range\\n\""
      ]
    },
    "glp_get_unbnd_ray": {
      "start_point": [
        836,
        0
      ],
      "end_point": [
        842,
        1
      ],
      "strings": []
    },
    "glp_get_it_cnt": {
      "start_point": [
        845,
        0
      ],
      "end_point": [
        848,
        1
      ],
      "strings": []
    },
    "glp_set_it_cnt": {
      "start_point": [
        852,
        0
      ],
      "end_point": [
        856,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/glpapi07.c": {
    "set_d_eps": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    },
    "load_data": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": []
    },
    "load_basis": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/glpapi08.c": {
    "transform": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    },
    "glp_interior": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": [
        "\"glp_interior: msg_lev = %d; invalid parameter\\n\"",
        "\"glp_interior: ord_alg = %d; invalid parameter\\n\"",
        "\"glp_interior: row %d: lb = %g, ub = %g; incorre\"",
        "\"ct bounds\\n\"",
        "\"glp_interior: column %d: lb = %g, ub = %g; inco\"",
        "\"rrect bounds\\n\"",
        "\"Original LP has %d row(s), %d column(s), and %d non-z\"",
        "\"ero(s)\\n\"",
        "\"Working LP has %d row(s), %d column(s), and %d non-ze\"",
        "\"ro(s)\\n\"",
        "\"glp_interior: unable to solve empty problem\\n\"",
        "\"WARNING: PROBLEM HAS ONE DENSE COLUMN\\n\"",
        "\"WARNING: PROBLEM HAS %d DENSE COLUMNS\\n\""
      ]
    },
    "glp_init_iptcp": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": []
    },
    "glp_ipt_status": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": []
    },
    "glp_ipt_obj_val": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": []
    },
    "glp_ipt_row_prim": {
      "start_point": [
        301,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": [
        "\"glp_ipt_row_prim: i = %d; row number out of range\\n\""
      ]
    },
    "glp_ipt_row_dual": {
      "start_point": [
        326,
        0
      ],
      "end_point": [
        335,
        1
      ],
      "strings": [
        "\"glp_ipt_row_dual: i = %d; row number out of range\\n\""
      ]
    },
    "glp_ipt_col_prim": {
      "start_point": [
        351,
        0
      ],
      "end_point": [
        360,
        1
      ],
      "strings": [
        "\"glp_ipt_col_prim: j = %d; column number out of range\\n\""
      ]
    },
    "glp_ipt_col_dual": {
      "start_point": [
        376,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": [
        "\"glp_ipt_col_dual: j = %d; column number out of range\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/draft/glpapi09.c": {
    "glp_set_col_kind": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": [
        "\"glp_set_col_kind: j = %d; column number out of range\\n\"",
        "\"glp_set_col_kind: j = %d; kind = %d; invalid column\"",
        "\" kind\\n\""
      ]
    },
    "glp_get_col_kind": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"glp_get_col_kind: j = %d; column number out of range\\n\""
      ]
    },
    "glp_get_num_int": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "glp_get_num_bin": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    },
    "solve_mip": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"glp_intopt: optimal basis to initial LP relaxation\"",
        "\" not provided\\n\"",
        "\"Integer optimization begins...\\n\"",
        "\"INTEGER OPTIMAL SOLUTION FOUND\\n\"",
        "\"PROBLEM HAS NO INTEGER FEASIBLE SOLUTION\\n\"",
        "\"RELATIVE MIP GAP TOLERANCE REACHED; SEARCH TERMINA\"",
        "\"TED\\n\"",
        "\"TIME LIMIT EXCEEDED; SEARCH TERMINATED\\n\"",
        "\"glp_intopt: cannot solve current LP relaxation\\n\"",
        "\"SEARCH TERMINATED BY APPLICATION\\n\""
      ]
    },
    "preprocess_and_solve_mip": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        433,
        1
      ],
      "strings": [
        "\"Preprocessing...\\n\"",
        "\"PROBLEM HAS NO PRIMAL FEASIBLE SOLUTION\\n\"",
        "\"LP RELAXATION HAS NO DUAL FEASIBLE SOLUTION\\n\"",
        "\"Objective value = %17.9e\\n\"",
        "\"INTEGER OPTIMAL SOLUTION FOUND BY MIP PREPROCESSOR\"",
        "\"\\n\"",
        "\"%d row%s, %d column%s, %d non-zero%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"none of\"",
        "\"\"",
        "\"one of\"",
        "\"all of\"",
        "\"%d of\"",
        "\"%d integer variable%s, %s which %s binary\\n\"",
        "\"\"",
        "\"s\"",
        "\"is\"",
        "\"are\"",
        "\"Solving LP relaxation...\\n\"",
        "\"glp_intopt: cannot solve LP relaxation\\n\""
      ]
    },
    "_glp_intopt1": {
      "start_point": [
        436,
        0
      ],
      "end_point": [
        441,
        1
      ],
      "strings": [
        "\"glp_intopt: no alien solver is available\\n\""
      ]
    },
    "glp_intopt": {
      "start_point": [
        444,
        0
      ],
      "end_point": [
        640,
        1
      ],
      "strings": [
        "\"glp_intopt: P = %p; invalid problem object\\n\"",
        "\"glp_intopt: operation not allowed\\n\"",
        "\"glp_intopt: msg_lev = %d; invalid parameter\\n\"",
        "\"glp_intopt: br_tech = %d; invalid parameter\\n\"",
        "\"glp_intopt: bt_tech = %d; invalid parameter\\n\"",
        "\"glp_intopt: tol_int = %g; invalid parameter\\n\"",
        "\"glp_intopt: tol_obj = %g; invalid parameter\\n\"",
        "\"glp_intopt: tm_lim = %d; invalid parameter\\n\"",
        "\"glp_intopt: out_frq = %d; invalid parameter\\n\"",
        "\"glp_intopt: out_dly = %d; invalid parameter\\n\"",
        "\"glp_intopt: cb_size = %d; invalid parameter\\n\"",
        "\"glp_intopt: pp_tech = %d; invalid parameter\\n\"",
        "\"glp_intopt: mip_gap = %g; invalid parameter\\n\"",
        "\"glp_intopt: mir_cuts = %d; invalid parameter\\n\"",
        "\"glp_intopt: gmi_cuts = %d; invalid parameter\\n\"",
        "\"glp_intopt: cov_cuts = %d; invalid parameter\\n\"",
        "\"glp_intopt: clq_cuts = %d; invalid parameter\\n\"",
        "\"glp_intopt: presolve = %d; invalid parameter\\n\"",
        "\"glp_intopt: binarize = %d; invalid parameter\\n\"",
        "\"glp_intopt: fp_heur = %d; invalid parameter\\n\"",
        "\"glp_intopt: alien = %d; invalid parameter\\n\"",
        "\"glp_intopt: row %d: lb = %g, ub = %g; incorrect\"",
        "\" bounds\\n\"",
        "\"glp_intopt: column %d: lb = %g, ub = %g; incorr\"",
        "\"ect bounds\\n\"",
        "\"glp_intopt: integer column %d has non-intege\"",
        "\"r lower bound %g\\n\"",
        "\"glp_intopt: integer column %d has non-intege\"",
        "\"r upper bound %g\\n\"",
        "\"glp_intopt: integer column %d has non-intege\"",
        "\"r fixed value %g\\n\"",
        "\"GLPK Integer Optimizer, v%s\\n\"",
        "\"%d row%s, %d column%s, %d non-zero%s\\n\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"none of\"",
        "\"\"",
        "\"one of\"",
        "\"all of\"",
        "\"%d of\"",
        "\"%d integer variable%s, %s which %s binary\\n\"",
        "\"\"",
        "\"s\"",
        "\"is\"",
        "\"are\""
      ]
    },
    "glp_init_iocp": {
      "start_point": [
        659,
        0
      ],
      "end_point": [
        696,
        1
      ],
      "strings": []
    },
    "glp_mip_status": {
      "start_point": [
        720,
        0
      ],
      "end_point": [
        723,
        1
      ],
      "strings": []
    },
    "glp_mip_obj_val": {
      "start_point": [
        739,
        0
      ],
      "end_point": [
        745,
        1
      ],
      "strings": []
    },
    "glp_mip_row_val": {
      "start_point": [
        761,
        0
      ],
      "end_point": [
        770,
        1
      ],
      "strings": [
        "\"glp_mip_row_val: i = %d; row number out of range\\n\""
      ]
    },
    "glp_mip_col_val": {
      "start_point": [
        786,
        0
      ],
      "end_point": [
        795,
        1
      ],
      "strings": [
        "\"glp_mip_col_val: j = %d; column number out of range\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/draft/glpapi10.c": {},
  "glpk/glpk-4.65/src/draft/glpapi12.c": {
    "glp_bf_exists": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "b_col": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "glp_factorize": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    },
    "glp_bf_updated": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": [
        "\"glp_bf_update: basis factorization does not exist\\n\""
      ]
    },
    "glp_get_bfcp": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "glp_set_bfcp": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": [
        "\"glp_set_bfcp: type = 0x%02X; invalid parameter\\n\"",
        "\"glp_set_bfcp: piv_tol = %g; invalid parameter\\n\"",
        "\"glp_set_bfcp: piv_lim = %d; invalid parameter\\n\"",
        "\"glp_set_bfcp: suhl = %d; invalid parameter\\n\"",
        "\"glp_set_bfcp: eps_tol = %g; invalid parameter\\n\"",
        "\"glp_set_bfcp: nfs_max = %d; invalid parameter\\n\"",
        "\"glp_set_bfcp: nrs_max = %d; invalid parameter\\n\""
      ]
    },
    "glp_get_bhead": {
      "start_point": [
        310,
        0
      ],
      "end_point": [
        316,
        1
      ],
      "strings": [
        "\"glp_get_bhead: basis factorization does not exist\\n\"",
        "\"glp_get_bhead: k = %d; index out of range\\n\""
      ]
    },
    "glp_get_row_bind": {
      "start_point": [
        335,
        0
      ],
      "end_point": [
        343,
        1
      ],
      "strings": [
        "\"glp_get_row_bind: basis factorization does not exist\\n\"",
        "\"glp_get_row_bind: i = %d; row number out of range\\n\""
      ]
    },
    "glp_get_col_bind": {
      "start_point": [
        362,
        0
      ],
      "end_point": [
        370,
        1
      ],
      "strings": [
        "\"glp_get_col_bind: basis factorization does not exist\\n\"",
        "\"glp_get_col_bind: j = %d; column number out of range\\n\""
      ]
    },
    "glp_ftran": {
      "start_point": [
        426,
        0
      ],
      "end_point": [
        449,
        1
      ],
      "strings": [
        "\"glp_ftran: basis factorization does not exist\\n\""
      ]
    },
    "glp_btran": {
      "start_point": [
        476,
        0
      ],
      "end_point": [
        499,
        1
      ],
      "strings": [
        "\"glp_btran: basis factorization does not exist\\n\""
      ]
    },
    "glp_warm_up": {
      "start_point": [
        535,
        0
      ],
      "end_point": [
        708,
        1
      ],
      "strings": []
    },
    "glp_eval_tab_row": {
      "start_point": [
        804,
        0
      ],
      "end_point": [
        859,
        1
      ],
      "strings": [
        "\"glp_eval_tab_row: basis factorization does not exist\\n\"",
        "\"glp_eval_tab_row: k = %d; variable number out of range\"",
        "\"glp_eval_tab_row: k = %d; variable must be basic\""
      ]
    },
    "glp_eval_tab_col": {
      "start_point": [
        919,
        0
      ],
      "end_point": [
        964,
        1
      ],
      "strings": [
        "\"glp_eval_tab_col: basis factorization does not exist\\n\"",
        "\"glp_eval_tab_col: k = %d; variable number out of range\"",
        "\"glp_eval_tab_col: k = %d; variable must be non-basic\""
      ]
    },
    "glp_transform_row": {
      "start_point": [
        1048,
        0
      ],
      "end_point": [
        1118,
        1
      ],
      "strings": [
        "\"glp_transform_row: basis factorization does not exist \"",
        "\"\\n\"",
        "\"glp_transform_row: len = %d; invalid row length\\n\"",
        "\"glp_transform_row: ind[%d] = %d; column index out o\"",
        "\"f range\\n\"",
        "\"glp_transform_row: val[%d] = 0; zero coefficient no\"",
        "\"t allowed\\n\"",
        "\"glp_transform_row: ind[%d] = %d; duplicate column i\"",
        "\"ndices not allowed\\n\""
      ]
    },
    "glp_transform_col": {
      "start_point": [
        1188,
        0
      ],
      "end_point": [
        1227,
        1
      ],
      "strings": [
        "\"glp_transform_col: basis factorization does not exist \"",
        "\"\\n\"",
        "\"glp_transform_col: len = %d; invalid column length\\n\"",
        "\"glp_transform_col: ind[%d] = %d; row index out of r\"",
        "\"ange\\n\"",
        "\"glp_transform_col: val[%d] = 0; zero coefficient no\"",
        "\"t allowed\\n\"",
        "\"glp_transform_col: ind[%d] = %d; duplicate row indi\"",
        "\"ces not allowed\\n\""
      ]
    },
    "glp_prim_rtest": {
      "start_point": [
        1287,
        0
      ],
      "end_point": [
        1371,
        1
      ],
      "strings": [
        "\"glp_prim_rtest: basic solution is not primal feasible \"",
        "\"\\n\"",
        "\"glp_prim_rtest: dir = %d; invalid parameter\\n\"",
        "\"glp_prim_rtest: eps = %g; invalid parameter\\n\"",
        "\"glp_prim_rtest: ind[%d] = %d; variable number out o\"",
        "\"f range\\n\"",
        "\"glp_prim_rtest: ind[%d] = %d; non-basic variable no\"",
        "\"t allowed\\n\""
      ]
    },
    "glp_dual_rtest": {
      "start_point": [
        1429,
        0
      ],
      "end_point": [
        1505,
        1
      ],
      "strings": [
        "\"glp_dual_rtest: basic solution is not dual feasible\\n\"",
        "\"glp_dual_rtest: dir = %d; invalid parameter\\n\"",
        "\"glp_dual_rtest: eps = %g; invalid parameter\\n\"",
        "\"glp_dual_rtest: ind[%d] = %d; variable number out o\"",
        "\"f range\\n\"",
        "\"glp_dual_rtest: ind[%d] = %d; basic variable not al\"",
        "\"lowed\\n\""
      ]
    },
    "_glp_analyze_row": {
      "start_point": [
        1585,
        0
      ],
      "end_point": [
        1681,
        1
      ],
      "strings": [
        "\"glp_analyze_row: primal basic solution components are \"",
        "\"undefined\\n\"",
        "\"glp_analyze_row: basic solution is not dual feasible\\n\"",
        "\"glp_analyze_row: len = %d; invalid row length\\n\"",
        "\"glp_analyze_row: ind[%d] = %d; row/column index out\"",
        "\" of range\\n\"",
        "\"glp_analyze_row: ind[%d] = %d; basic auxiliary v\"",
        "\"ariable is not allowed\\n\"",
        "\"glp_analyze_row: ind[%d] = %d; basic structural \"",
        "\"variable is not allowed\\n\"",
        "\"glp_analyze_row: type = %d; invalid parameter\\n\""
      ]
    },
    "main": {
      "start_point": [
        1684,
        0
      ],
      "end_point": [
        1750,
        1
      ],
      "strings": [
        "\"plan.mps\"",
        "\"BIN1\"",
        "\"BIN2\"",
        "\"BIN4\"",
        "\"BIN5\"",
        "\"y = %g\\n\"",
        "\"k = %d, x = %g; dx = %g; y = %g; dy = %g; dz = %g\\n\"",
        "\"BIN1\"",
        "\"BIN2\"",
        "\"BIN4\"",
        "\"BIN5\""
      ]
    },
    "glp_analyze_bound": {
      "start_point": [
        1795,
        0
      ],
      "end_point": [
        1900,
        1
      ],
      "strings": [
        "\"glp_analyze_bound: P = %p; invalid problem object\\n\"",
        "\"glp_analyze_bound: optimal basic solution required\\n\"",
        "\"glp_analyze_bound: basis factorization required\\n\"",
        "\"glp_analyze_bound: k = %d; variable number out of rang\"",
        "\"e\\n\"",
        "\"glp_analyze_bound: k = %d; basic variable not allowed \"",
        "\"\\n\""
      ]
    },
    "glp_analyze_coef": {
      "start_point": [
        1961,
        0
      ],
      "end_point": [
        2182,
        1
      ],
      "strings": [
        "\"glp_analyze_coef: P = %p; invalid problem object\\n\"",
        "\"glp_analyze_coef: optimal basic solution required\\n\"",
        "\"glp_analyze_coef: basis factorization required\\n\"",
        "\"glp_analyze_coef: k = %d; variable number out of range\"",
        "\"\\n\"",
        "\"glp_analyze_coef: k = %d; non-basic variable not allow\"",
        "\"ed\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/draft/glpapi13.c": {
    "glp_ios_reason": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "glp_ios_get_prob": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "glp_ios_tree_size": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "glp_ios_curr_node": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "glp_ios_next_node": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": [
        "\"glp_ios_next_node: p = %d; invalid subproblem refer\"",
        "\"ence number\\n\"",
        "\"glp_ios_next_node: p = %d; subproblem not in the ac\"",
        "\"tive list\\n\""
      ]
    },
    "glp_ios_prev_node": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": [
        "\"glp_ios_prev_node: p = %d; invalid subproblem refer\"",
        "\"ence number\\n\"",
        "\"glp_ios_prev_node: p = %d; subproblem not in the ac\"",
        "\"tive list\\n\""
      ]
    },
    "glp_ios_up_node": {
      "start_point": [
        244,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": [
        "\"glp_ios_up_node: p = %d; invalid subproblem reference \"",
        "\"number\\n\""
      ]
    },
    "glp_ios_node_level": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": [
        "\"glp_ios_node_level: p = %d; invalid subproblem referen\"",
        "\"ce number\\n\""
      ]
    },
    "glp_ios_node_bound": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        327,
        1
      ],
      "strings": [
        "\"glp_ios_node_bound: p = %d; invalid subproblem referen\"",
        "\"ce number\\n\""
      ]
    },
    "glp_ios_best_node": {
      "start_point": [
        351,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": []
    },
    "glp_ios_mip_gap": {
      "start_point": [
        380,
        0
      ],
      "end_point": [
        383,
        1
      ],
      "strings": []
    },
    "glp_ios_node_data": {
      "start_point": [
        414,
        0
      ],
      "end_point": [
        424,
        1
      ],
      "strings": [
        "\"glp_ios_node_level: p = %d; invalid subproblem referen\"",
        "\"ce number\\n\""
      ]
    },
    "glp_ios_row_attr": {
      "start_point": [
        440,
        0
      ],
      "end_point": [
        450,
        1
      ],
      "strings": [
        "\"glp_ios_row_attr: i = %d; row number out of range\\n\""
      ]
    },
    "glp_ios_pool_size": {
      "start_point": [
        454,
        0
      ],
      "end_point": [
        464,
        1
      ],
      "strings": [
        "\"glp_ios_pool_size: operation not allowed\\n\""
      ]
    },
    "glp_ios_add_row": {
      "start_point": [
        468,
        0
      ],
      "end_point": [
        479,
        1
      ],
      "strings": [
        "\"glp_ios_add_row: operation not allowed\\n\""
      ]
    },
    "glp_ios_del_row": {
      "start_point": [
        483,
        0
      ],
      "end_point": [
        489,
        1
      ],
      "strings": [
        "\"glp_ios_del_row: operation not allowed\\n\""
      ]
    },
    "glp_ios_clear_pool": {
      "start_point": [
        493,
        0
      ],
      "end_point": [
        499,
        1
      ],
      "strings": [
        "\"glp_ios_clear_pool: operation not allowed\\n\""
      ]
    },
    "glp_ios_can_branch": {
      "start_point": [
        515,
        0
      ],
      "end_point": [
        520,
        1
      ],
      "strings": [
        "\"glp_ios_can_branch: j = %d; column number out of range\"",
        "\"\\n\""
      ]
    },
    "glp_ios_branch_upon": {
      "start_point": [
        546,
        0
      ],
      "end_point": [
        563,
        1
      ],
      "strings": [
        "\"glp_ios_branch_upon: j = %d; column number out of rang\"",
        "\"e\\n\"",
        "\"glp_ios_branch_upon: sel = %d: invalid branch selectio\"",
        "\"n flag\\n\"",
        "\"glp_ios_branch_upon: j = %d; variable cannot be used t\"",
        "\"o branch upon\\n\"",
        "\"glp_ios_branch_upon: branching variable already chosen\"",
        "\"\\n\""
      ]
    },
    "glp_ios_select_node": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        599,
        1
      ],
      "strings": [
        "\"glp_ios_select_node: p = %d; invalid subproblem refere\"",
        "\"nce number\\n\"",
        "\"glp_ios_select_node: p = %d; subproblem not in the act\"",
        "\"ive list\\n\"",
        "\"glp_ios_select_node: subproblem already selected\\n\""
      ]
    },
    "glp_ios_heur_sol": {
      "start_point": [
        634,
        0
      ],
      "end_point": [
        685,
        1
      ],
      "strings": [
        "\"Solution found by heuristic: %.12g\\n\""
      ]
    },
    "glp_ios_terminate": {
      "start_point": [
        701,
        0
      ],
      "end_point": [
        707,
        1
      ],
      "strings": [
        "\"The search is prematurely terminated due to applicati\"",
        "\"on request\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/draft/glphbm.c": {
    "read_card": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"%s:%d: read error\\n\"",
        "\"%s:%d: unexpected end-of-file\\n\"",
        "\"%s:%d: invalid control character\\n\"",
        "\"%s:%d: card image too long\\n\""
      ]
    },
    "scan_int": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": [
        "\"%s:%d: field '%s' contains invalid value '%s'\\n\""
      ]
    },
    "parse_fmt": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": [
        "\"hbm_read_mat: format '%s' not recognised\\n\""
      ]
    },
    "read_int_array": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": [
        "\"%s:%d: can't read array '%s' - invalid format '%s'\\n\"",
        "\"%s:%d: can't read array '%s' - invalid value '%s'\\n\""
      ]
    },
    "read_real_array": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": [
        "\"%s:%d: can't read array '%s' - invalid format '%s'\\n\"",
        "\"0\"",
        "\"%s(%d): can't read array '%s' - value '%s' has no \"",
        "\"decimal point\\n\"",
        "\"%s:%d: can't read array '%s' - invalid value '%s'\\n\""
      ]
    },
    "hbm_read_mat": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        502,
        1
      ],
      "strings": [
        "\"hbm_read_mat: reading matrix from '%s'...\\n\"",
        "\"r\"",
        "\"hbm_read_mat: unable to open '%s' - %s\\n\"",
        "\"%s\\n\"",
        "\"key = %s\\n\"",
        "\"totcrd\"",
        "\"ptrcrd\"",
        "\"indcrd\"",
        "\"valcrd\"",
        "\"rhscrd\"",
        "\"totcrd = %d; ptrcrd = %d; indcrd = %d; valcrd = %d; rhsc\"",
        "\"rd = %d\\n\"",
        "\"RCP\"",
        "\"SUHZR\"",
        "\"AE\"",
        "\"%s:%d: matrix type '%s' not recognised\\n\"",
        "\"nrow\"",
        "\"ncol\"",
        "\"nnzero\"",
        "\"neltvl\"",
        "\"mxtype = %s; nrow = %d; ncol = %d; nnzero = %d; neltvl =\"",
        "\" %d\\n\"",
        "\"ptrfmt = %s; indfmt = %s; valfmt = %s; rhsfmt = %s\\n\"",
        "\"???\"",
        "\"nrhs\"",
        "\"nrhsix\"",
        "\"rhstyp = '%s'; nrhs = %d; nrhsix = %d\\n\"",
        "\"colptr\"",
        "\"rowind\"",
        "\"values\"",
        "\"values\"",
        "\"rhsval\"",
        "\"rhsptr\"",
        "\"rhsind\"",
        "\"rhsval\"",
        "\"rhsval\"",
        "\"%s:%d: right-hand side type '%c' not recognised\\n\"",
        "\"sguess\"",
        "\"xexact\"",
        "\"hbm_read_mat: %d cards were read\\n\""
      ]
    },
    "hbm_free_mat": {
      "start_point": [
        519,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/glphbm.h": {},
  "glpk/glpk-4.65/src/draft/glpios01.c": {
    "lpx_eval_tab_row": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "lpx_dual_ratio_test": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "ios_create_tree": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "ios_revive_node": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": []
    },
    "ios_freeze_node": {
      "start_point": [
        378,
        0
      ],
      "end_point": [
        548,
        1
      ],
      "strings": []
    },
    "get_slot": {
      "start_point": [
        574,
        0
      ],
      "end_point": [
        604,
        1
      ],
      "strings": []
    },
    "new_node": {
      "start_point": [
        606,
        0
      ],
      "end_point": [
        663,
        1
      ],
      "strings": []
    },
    "ios_clone_node": {
      "start_point": [
        665,
        0
      ],
      "end_point": [
        693,
        1
      ],
      "strings": []
    },
    "ios_delete_node": {
      "start_point": [
        715,
        0
      ],
      "end_point": [
        805,
        1
      ],
      "strings": []
    },
    "ios_delete_tree": {
      "start_point": [
        826,
        0
      ],
      "end_point": [
        901,
        1
      ],
      "strings": []
    },
    "ios_eval_degrad": {
      "start_point": [
        921,
        0
      ],
      "end_point": [
        1035,
        1
      ],
      "strings": []
    },
    "ios_round_bound": {
      "start_point": [
        1093,
        0
      ],
      "end_point": [
        1149,
        1
      ],
      "strings": []
    },
    "ios_is_hopeful": {
      "start_point": [
        1173,
        0
      ],
      "end_point": [
        1203,
        1
      ],
      "strings": []
    },
    "ios_best_node": {
      "start_point": [
        1230,
        0
      ],
      "end_point": [
        1249,
        1
      ],
      "strings": []
    },
    "ios_relative_gap": {
      "start_point": [
        1276,
        0
      ],
      "end_point": [
        1298,
        1
      ],
      "strings": []
    },
    "ios_solve_node": {
      "start_point": [
        1319,
        0
      ],
      "end_point": [
        1385,
        1
      ],
      "strings": [
        "\"ret = %d; status = %d; pbs = %d; dbs = %d; some = %d\\n\"",
        "\"sol\""
      ]
    },
    "ios_create_pool": [
      {
        "start_point": [
          1390,
          0
        ],
        "end_point": [
          1396,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1398,
          0
        ],
        "end_point": [
          1411,
          1
        ],
        "strings": []
      }
    ],
    "ios_add_row": [
      {
        "start_point": [
          1415,
          0
        ],
        "end_point": [
          1427,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1429,
          0
        ],
        "end_point": [
          1486,
          1
        ],
        "strings": [
          "\"glp_ios_add_row: cut name too long\\n\"",
          "\"glp_ios_add_row: cut name contains invalid chara\"",
          "\"cter(s)\\n\"",
          "\"glp_ios_add_row: klass = %d; invalid cut class\\n\"",
          "\"glp_ios_add_row: flags = %d; invalid cut flags\\n\"",
          "\"glp_ios_add_row: len = %d; invalid cut length\\n\"",
          "\"glp_ios_add_row: ind[%d] = %d; column index out of \"",
          "\"range\\n\"",
          "\"glp_ios_add_row: type = %d; invalid cut type\\n\""
        ]
      }
    ],
    "ios_find_row": [
      {
        "start_point": [
          1490,
          0
        ],
        "end_point": [
          1493,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1495,
          0
        ],
        "end_point": [
          1545,
          1
        ],
        "strings": []
      }
    ],
    "ios_del_row": [
      {
        "start_point": [
          1549,
          0
        ],
        "end_point": [
          1552,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1554,
          0
        ],
        "end_point": [
          1596,
          1
        ],
        "strings": [
          "\"glp_ios_del_row: i = %d; cut number out of range\\n\""
        ]
      }
    ],
    "ios_clear_pool": [
      {
        "start_point": [
          1600,
          0
        ],
        "end_point": [
          1611,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1613,
          0
        ],
        "end_point": [
          1632,
          1
        ],
        "strings": []
      }
    ],
    "ios_delete_pool": [
      {
        "start_point": [
          1636,
          0
        ],
        "end_point": [
          1641,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1643,
          0
        ],
        "end_point": [
          1649,
          1
        ],
        "strings": []
      }
    ],
    "ios_process_sol": {
      "start_point": [
        1655,
        0
      ],
      "end_point": [
        1681,
        1
      ],
      "strings": [
        "\"%03d\""
      ]
    }
  },
  "glpk/glpk-4.65/src/draft/glpios02.c": {
    "prepare_row_info": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "row_implied_bounds": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    },
    "col_implied_bounds": {
      "start_point": [
        297,
        0
      ],
      "end_point": [
        361,
        1
      ],
      "strings": []
    },
    "check_row_bounds": {
      "start_point": [
        384,
        0
      ],
      "end_point": [
        423,
        1
      ],
      "strings": []
    },
    "check_col_bounds": {
      "start_point": [
        454,
        0
      ],
      "end_point": [
        522,
        1
      ],
      "strings": []
    },
    "check_efficiency": {
      "start_point": [
        534,
        0
      ],
      "end_point": [
        566,
        1
      ],
      "strings": []
    },
    "basic_preprocessing": {
      "start_point": [
        602,
        0
      ],
      "end_point": [
        717,
        1
      ],
      "strings": []
    },
    "ios_preprocess_node": {
      "start_point": [
        739,
        0
      ],
      "end_point": [
        823,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/glpios03.c": {
    "show_progress": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": [
        "\"%17.9e\"",
        "\"%17s\"",
        "\"not found yet\"",
        "\"%17s\"",
        "\"tree is empty\"",
        "\"%17s\"",
        "\"-inf\"",
        "\"%17s\"",
        "\"+inf\"",
        "\"%17.9e\"",
        "\">=\"",
        "\"<=\"",
        "\"  0.0%%\"",
        "\"< 0.1%%\"",
        "\"%5.1f%%\"",
        "\"%6s\"",
        "\"\"",
        "\"+%6d: %s %s %s %s %s (%d; %d)\\n\"",
        "\">>>>>\"",
        "\"mip =\""
      ]
    },
    "is_branch_hopeful": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "check_integrality": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": [
        "\"There are no fractional columns\\n\"",
        "\"There is one fractional column, integer infeasibil\"",
        "\"ity is %.3e\\n\"",
        "\"There are %d fractional columns, integer infeasibi\"",
        "\"lity is %.3e\\n\""
      ]
    },
    "record_solution": {
      "start_point": [
        236,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": []
    },
    "fix_by_red_cost": {
      "start_point": [
        268,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": [
        "\"One column has been fixed by reduced cost\\n\"",
        "\"%d columns have been fixed by reduced costs\\n\""
      ]
    },
    "branch_on": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": [
        "\"Both down- and up-branches are hopeless\\n\"",
        "\"Up-branch is hopeless\\n\"",
        "\"Down-branch is hopeless\\n\"",
        "\"Branching on column %d, primal value is %.9e\\n\"",
        "\"Node %d begins down branch, node %d begins up branch \"",
        "\"\\n\""
      ]
    },
    "cleanup_the_tree": {
      "start_point": [
        541,
        0
      ],
      "end_point": [
        564,
        1
      ],
      "strings": [
        "\"One hopeless branch has been pruned\\n\"",
        "\"%d hopeless branches have been pruned\\n\""
      ]
    },
    "round_heur": {
      "start_point": [
        573,
        0
      ],
      "end_point": [
        636,
        1
      ],
      "strings": []
    },
    "gmi_gen": {
      "start_point": [
        641,
        0
      ],
      "end_point": [
        663,
        1
      ],
      "strings": []
    },
    "cov_gen": {
      "start_point": [
        667,
        0
      ],
      "end_point": [
        691,
        1
      ],
      "strings": []
    },
    "mir_gen": {
      "start_point": [
        695,
        0
      ],
      "end_point": [
        717,
        1
      ],
      "strings": []
    },
    "clq_gen": {
      "start_point": [
        721,
        0
      ],
      "end_point": [
        736,
        1
      ],
      "strings": []
    },
    "remove_cuts": {
      "start_point": [
        804,
        0
      ],
      "end_point": [
        827,
        1
      ],
      "strings": [
        "\"%d inactive cut(s) removed\\n\""
      ]
    },
    "display_cut_info": {
      "start_point": [
        831,
        0
      ],
      "end_point": [
        862,
        1
      ],
      "strings": [
        "\"Cuts on level %d:\"",
        "\" gmi = %d;\"",
        "\" mir = %d;\"",
        "\" cov = %d;\"",
        "\" clq = %d;\"",
        "\" app = %d;\"",
        "\"\\n\""
      ]
    },
    "ios_driver": {
      "start_point": [
        899,
        0
      ],
      "end_point": [
        1110,
        7
      ],
      "strings": [
        "\"WARNING: LONG-STEP DUAL SIMPLEX WILL BE USED\\n\"",
        "\"Long-step dual simplex will be used\\n\"",
        "\"Active list is empty!\\n\"",
        "\"-----------------------------------------------------\"",
        "\"-------------------\\n\"",
        "\"Processing node %d at level %d\\n\"",
        "\"root.lp\"",
        "\"Simple rounding heuristic disabled\\n\"",
        "\"Gomory's cuts enabled\\n\"",
        "\"MIR cuts enabled\\n\"",
        "\"Cover cuts enabled\\n\"",
        "\"Clique cuts enabled\\n\"",
        "\"Time used: %.1f secs.  Memory used: %.1f Mb.\\n\"",
        "\"Time used: %.1f secs.  Memory used: %.1f Mb.\\n\"",
        "\"Relative gap tolerance reached; search terminated \"",
        "\"\\n\"",
        "\"Time limit exhausted; search terminated\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/draft/glpios07.c": {
    "cover2": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "cover3": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": []
    },
    "cover4": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": []
    },
    "cover": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        278,
        1
      ],
      "strings": []
    },
    "lpx_cover_cut": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        440,
        1
      ],
      "strings": []
    },
    "lpx_eval_row": {
      "start_point": [
        471,
        0
      ],
      "end_point": [
        486,
        1
      ],
      "strings": [
        "\"lpx_eval_row: len = %d; invalid row length\\n\"",
        "\"lpx_eval_row: j = %d; column number out of range\\n\""
      ]
    },
    "ios_cov_gen": {
      "start_point": [
        503,
        0
      ],
      "end_point": [
        548,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/glpios09.c": {
    "ios_choose_var": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "branch_first": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "branch_last": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "branch_mostf": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": []
    },
    "branch_drtom": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": [
        "\"branch_drtom: column %d chosen to branch on\\n\"",
        "\"branch_drtom: down-branch is infeasible\\n\"",
        "\"branch_drtom: down-branch bound is %.9e\\n\"",
        "\"branch_drtom: up-branch   is infeasible\\n\"",
        "\"branch_drtom: up-branch   bound is %.9e\\n\""
      ]
    },
    "ios_pcost_init": {
      "start_point": [
        407,
        0
      ],
      "end_point": [
        421,
        1
      ],
      "strings": []
    },
    "eval_degrad": {
      "start_point": [
        423,
        0
      ],
      "end_point": [
        483,
        1
      ],
      "strings": []
    },
    "ios_pcost_update": {
      "start_point": [
        485,
        0
      ],
      "end_point": [
        525,
        1
      ],
      "strings": []
    },
    "ios_pcost_free": {
      "start_point": [
        527,
        0
      ],
      "end_point": [
        538,
        1
      ],
      "strings": []
    },
    "eval_psi": {
      "start_point": [
        540,
        0
      ],
      "end_point": [
        580,
        1
      ],
      "strings": []
    },
    "progress": {
      "start_point": [
        582,
        0
      ],
      "end_point": [
        595,
        1
      ],
      "strings": [
        "\"Pseudocosts initialized for %d of %d variables\\n\""
      ]
    },
    "ios_pcost_branch": {
      "start_point": [
        597,
        0
      ],
      "end_point": [
        661,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/glpios11.c": {
    "fcmp": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "ios_process_cuts": [
      {
        "start_point": [
          84,
          0
        ],
        "end_point": [
          213,
          1
        ],
        "strings": [
          "\"*** adding cuts ***\\n\"",
          "\"eff = %g; deg = %g\\n\""
        ]
      },
      {
        "start_point": [
          215,
          0
        ],
        "end_point": [
          336,
          1
        ],
        "strings": [
          "\"*** adding cuts ***\\n\"",
          "\"eff = %g; deg = %g\\n\""
        ]
      }
    ],
    "efficacy": {
      "start_point": [
        359,
        0
      ],
      "end_point": [
        377,
        1
      ],
      "strings": []
    },
    "parallel": [
      {
        "start_point": [
          397,
          0
        ],
        "end_point": [
          413,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          415,
          0
        ],
        "end_point": [
          431,
          1
        ],
        "strings": []
      }
    ]
  },
  "glpk/glpk-4.65/src/draft/glpios12.c": {
    "ios_choose_node": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "most_feas": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "best_proj": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "best_node": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/glpipm.c": {
    "initialize": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"Matrix A has %d non-zeros\\n\"",
        "\"Matrix S = A*A' has %d non-zeros (upper triangle)\\n\"",
        "\"Original ordering is being used\\n\"",
        "\"Minimum degree ordering (QMD)...\\n\"",
        "\"Approximate minimum degree ordering (AMD)...\\n\"",
        "\"Approximate minimum degree ordering (SYMAMD)...\\n\"",
        "\"Computing Cholesky factorization S = L*L'...\\n\"",
        "\"Matrix L has %d non-zeros\\n\""
      ]
    },
    "A_by_vec": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": []
    },
    "AT_by_vec": {
      "start_point": [
        268,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": []
    },
    "decomp_NE": {
      "start_point": [
        294,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": []
    },
    "solve_NE": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": []
    },
    "solve_NS": {
      "start_point": [
        399,
        0
      ],
      "end_point": [
        422,
        1
      ],
      "strings": []
    },
    "initial_point": {
      "start_point": [
        461,
        0
      ],
      "end_point": [
        510,
        1
      ],
      "strings": []
    },
    "basic_info": {
      "start_point": [
        550,
        0
      ],
      "end_point": [
        615,
        1
      ],
      "strings": []
    },
    "make_step": {
      "start_point": [
        692,
        0
      ],
      "end_point": [
        799,
        1
      ],
      "strings": []
    },
    "terminate": {
      "start_point": [
        807,
        0
      ],
      "end_point": [
        829,
        1
      ],
      "strings": []
    },
    "ipm_main": {
      "start_point": [
        847,
        0
      ],
      "end_point": [
        940,
        1
      ],
      "strings": [
        "\"Guessing initial point...\\n\"",
        "\"Optimization begins...\\n\"",
        "\"%3d: obj = %17.9e; rpi = %8.1e; rdi = %8.1e; gap =\"",
        "\" %8.1e\\n\"",
        "\"OPTIMAL SOLUTION FOUND\\n\"",
        "\"PROBLEM HAS NO FEASIBLE PRIMAL/DUAL SOLUTION\\n\"",
        "\"NO CONVERGENCE; SEARCH TERMINATED\\n\"",
        "\"ITERATION LIMIT EXCEEDED; SEARCH TERMINATED\\n\"",
        "\"NUMERIC INSTABILITY; SEARCH TERMINATED\\n\"",
        "\"Best point %17.9e was reached on iteration %d\\n\""
      ]
    },
    "ipm_solve": {
      "start_point": [
        1023,
        0
      ],
      "end_point": [
        1141,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/glpipm.h": {},
  "glpk/glpk-4.65/src/draft/glpmat.c": {
    "check_fvs": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "check_pattern": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "transpose": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    },
    "adat_symbolic": {
      "start_point": [
        255,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": []
    },
    "adat_numeric": {
      "start_point": [
        358,
        0
      ],
      "end_point": [
        399,
        1
      ],
      "strings": []
    },
    "min_degree": {
      "start_point": [
        432,
        0
      ],
      "end_point": [
        489,
        1
      ],
      "strings": []
    },
    "amd_order1": {
      "start_point": [
        493,
        0
      ],
      "end_point": [
        525,
        1
      ],
      "strings": []
    },
    "allocate": {
      "start_point": [
        529,
        0
      ],
      "end_point": [
        534,
        1
      ],
      "strings": []
    },
    "release": {
      "start_point": [
        536,
        0
      ],
      "end_point": [
        539,
        1
      ],
      "strings": []
    },
    "symamd_ord": {
      "start_point": [
        541,
        0
      ],
      "end_point": [
        567,
        1
      ],
      "strings": []
    },
    "chol_symbolic": {
      "start_point": [
        633,
        0
      ],
      "end_point": [
        709,
        1
      ],
      "strings": []
    },
    "chol_numeric": {
      "start_point": [
        790,
        0
      ],
      "end_point": [
        837,
        1
      ],
      "strings": []
    },
    "u_solve": {
      "start_point": [
        866,
        0
      ],
      "end_point": [
        879,
        1
      ],
      "strings": []
    },
    "ut_solve": {
      "start_point": [
        908,
        0
      ],
      "end_point": [
        921,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/glpmat.h": {},
  "glpk/glpk-4.65/src/draft/glprgr.c": {
    "put_byte": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "put_word": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "put_dword": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "rgr_write_bmp16": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": [
        "\"rgr_write_bmp16: m = %d; invalid height\\n\"",
        "\"rgr_write_bmp16: n = %d; invalid width\\n\"",
        "\"wb\"",
        "\"rgr_write_bmp16: unable to create '%s' - %s\\n\"",
        "\"rgr_write_bmp16: write error on '%s' - %s\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/draft/glprgr.h": {},
  "glpk/glpk-4.65/src/draft/glpscl.c": {
    "min_row_aij": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "max_row_aij": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "min_col_aij": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "max_col_aij": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "min_mat_aij": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "max_mat_aij": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "eq_scaling": {
      "start_point": [
        201,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": []
    },
    "gm_scaling": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        278,
        1
      ],
      "strings": []
    },
    "max_row_ratio": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": []
    },
    "max_col_ratio": {
      "start_point": [
        323,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": []
    },
    "gm_iterate": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        374,
        1
      ],
      "strings": [
        "\"k = %d; ratio = %g\\n\""
      ]
    },
    "scale_prob": {
      "start_point": [
        391,
        0
      ],
      "end_point": [
        438,
        1
      ],
      "strings": [
        "\"%s: min|aij| = %10.3e  max|aij| = %10.3e  ratio = %10.3e\\n\"",
        "\"Scaling...\\n\"",
        "\" A\"",
        "\"Problem data seem to be well scaled\\n\"",
        "\"GM\"",
        "\"EQ\"",
        "\"2N\""
      ]
    },
    "glp_scale_prob": {
      "start_point": [
        466,
        0
      ],
      "end_point": [
        475,
        1
      ],
      "strings": [
        "\"glp_scale_prob: flags = 0x%02X; invalid scaling option\"",
        "\"s\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/draft/glpspm.c": {
    "spm_create_mat": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "spm_new_elem": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "spm_delete_mat": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "spm_test_mat_e": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "spm_test_mat_d": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": []
    },
    "spm_show_mat": {
      "start_point": [
        263,
        0
      ],
      "end_point": [
        293,
        1
      ],
      "strings": [
        "\"spm_show_mat: writing matrix pattern to '%s'...\\n\""
      ]
    },
    "spm_read_hbm": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        373,
        1
      ],
      "strings": [
        "\"spm_read_hbm: unable to read matrix\\n\"",
        "\"RSA\"",
        "\"PSA\"",
        "\"RUA\"",
        "\"PUA\"",
        "\"RRA\"",
        "\"PRA\"",
        "\"spm_read_hbm: matrix type '%s' not supported\\n\""
      ]
    },
    "spm_count_nnz": {
      "start_point": [
        390,
        0
      ],
      "end_point": [
        396,
        1
      ],
      "strings": []
    },
    "spm_drop_zeros": {
      "start_point": [
        420,
        0
      ],
      "end_point": [
        452,
        1
      ],
      "strings": []
    },
    "spm_read_mat": [
      {
        "start_point": [
          477,
          0
        ],
        "end_point": [
          480,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          482,
          0
        ],
        "end_point": [
          532,
          1
        ],
        "strings": [
          "\"spm_read_mat: reading matrix from '%s'...\\n\"",
          "\"spm_read_mat: unable to open '%s' - %s\\n\"",
          "\"invalid number of rows\\n\"",
          "\"invalid number of columns\\n\"",
          "\"invalid number of non-zeros\\n\"",
          "\"spm_read_mat: %d rows, %d columns, %d non-zeros\\n\"",
          "\"row index out of range\\n\"",
          "\"column index out of range\\n\"",
          "\"spm_read_mat: %d lines were read\\n\""
        ]
      }
    ],
    "spm_write_mat": [
      {
        "start_point": [
          575,
          0
        ],
        "end_point": [
          579,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          581,
          0
        ],
        "end_point": [
          614,
          1
        ],
        "strings": [
          "\"spm_write_mat: writing matrix to '%s'...\\n\"",
          "\"w\"",
          "\"spm_write_mat: unable to create '%s' - %s\\n\"",
          "\"%d %d %d\\n\"",
          "\"%d %d %.*g\\n\"",
          "\"spm_write_mat: writing error on '%s' - %s\\n\"",
          "\"spm_write_mat: %d lines were written\\n\""
        ]
      }
    ],
    "spm_transpose": {
      "start_point": [
        632,
        0
      ],
      "end_point": [
        642,
        1
      ],
      "strings": []
    },
    "spm_add_sym": {
      "start_point": [
        644,
        0
      ],
      "end_point": [
        687,
        1
      ],
      "strings": []
    },
    "spm_add_num": {
      "start_point": [
        689,
        0
      ],
      "end_point": [
        719,
        1
      ],
      "strings": []
    },
    "spm_add_mat": {
      "start_point": [
        721,
        0
      ],
      "end_point": [
        727,
        1
      ],
      "strings": []
    },
    "spm_mul_sym": {
      "start_point": [
        729,
        0
      ],
      "end_point": [
        765,
        1
      ],
      "strings": []
    },
    "spm_mul_num": {
      "start_point": [
        767,
        0
      ],
      "end_point": [
        801,
        1
      ],
      "strings": []
    },
    "spm_mul_mat": {
      "start_point": [
        803,
        0
      ],
      "end_point": [
        809,
        1
      ],
      "strings": []
    },
    "spm_create_per": {
      "start_point": [
        811,
        0
      ],
      "end_point": [
        824,
        1
      ],
      "strings": []
    },
    "spm_check_per": {
      "start_point": [
        826,
        0
      ],
      "end_point": [
        836,
        1
      ],
      "strings": []
    },
    "spm_delete_per": {
      "start_point": [
        838,
        0
      ],
      "end_point": [
        844,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/glpspm.h": {},
  "glpk/glpk-4.65/src/draft/glpssx.h": {},
  "glpk/glpk-4.65/src/draft/glpssx01.c": {
    "ssx_create": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"ssx_create: m = %d; invalid number of rows\\n\"",
        "\"ssx_create: n = %d; invalid number of columns\\n\"",
        "\"ssx_create: nnz = %d; invalid number of non-zero const\"",
        "\"raint coefficients\\n\""
      ]
    },
    "basis_col": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "ssx_factorize": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    },
    "ssx_get_xNj": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "ssx_eval_bbar": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    },
    "ssx_eval_pi": {
      "start_point": [
        255,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": []
    },
    "ssx_eval_dj": {
      "start_point": [
        280,
        0
      ],
      "end_point": [
        311,
        1
      ],
      "strings": []
    },
    "ssx_eval_cbar": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        326,
        1
      ],
      "strings": []
    },
    "ssx_eval_rho": {
      "start_point": [
        341,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": []
    },
    "ssx_eval_row": {
      "start_point": [
        367,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": []
    },
    "ssx_eval_col": {
      "start_point": [
        407,
        0
      ],
      "end_point": [
        436,
        1
      ],
      "strings": []
    },
    "ssx_chuzc": {
      "start_point": [
        456,
        0
      ],
      "end_point": [
        483,
        1
      ],
      "strings": []
    },
    "ssx_chuzr": {
      "start_point": [
        504,
        0
      ],
      "end_point": [
        587,
        1
      ],
      "strings": []
    },
    "ssx_update_bbar": {
      "start_point": [
        615,
        0
      ],
      "end_point": [
        654,
        1
      ],
      "strings": []
    },
    "ssx_update_pi": {
      "start_point": [
        662,
        0
      ],
      "end_point": [
        688,
        1
      ],
      "strings": []
    },
    "ssx_update_cbar": {
      "start_point": [
        696,
        0
      ],
      "end_point": [
        721,
        1
      ],
      "strings": []
    },
    "ssx_change_basis": {
      "start_point": [
        729,
        0
      ],
      "end_point": [
        793,
        1
      ],
      "strings": [
        "\"Internal error: basis matrix is singular\""
      ]
    },
    "ssx_delete": {
      "start_point": [
        801,
        0
      ],
      "end_point": [
        836,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/glpssx02.c": {
    "show_progress": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": [
        "\"%s%6d:   %s = %22.15g   (%d)\\n\"",
        "\" \"",
        "\"*\"",
        "\"infsum\"",
        "\"objval\""
      ]
    }
  },
  "glpk/glpk-4.65/src/draft/ios.h": {},
  "glpk/glpk-4.65/src/draft/lux.c": {
    "lux_create": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"lux_create: n = %d; invalid parameter\\n\""
      ]
    },
    "initialize": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        208,
        1
      ],
      "strings": [
        "\"lux_decomp: j = %d: len = %d; invalid column length\"",
        "\"\\n\"",
        "\"lux_decomp: j = %d: i = %d; row index out of ran\"",
        "\"ge\\n\"",
        "\"lux_decomp: j = %d: i = %d; duplicate row indice\"",
        "\"s not allowed\\n\"",
        "\"lux_decomp: j = %d: i = %d; zero elements not al\"",
        "\"lowed\\n\""
      ]
    },
    "find_pivot": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        358,
        1
      ],
      "strings": []
    },
    "eliminate": {
      "start_point": [
        418,
        0
      ],
      "end_point": [
        662,
        1
      ],
      "strings": []
    },
    "lux_decomp": {
      "start_point": [
        737,
        0
      ],
      "end_point": [
        827,
        1
      ],
      "strings": []
    },
    "lux_f_solve": {
      "start_point": [
        849,
        0
      ],
      "end_point": [
        884,
        1
      ],
      "strings": []
    },
    "lux_v_solve": {
      "start_point": [
        906,
        0
      ],
      "end_point": [
        952,
        1
      ],
      "strings": []
    },
    "lux_solve": {
      "start_point": [
        974,
        0
      ],
      "end_point": [
        988,
        1
      ],
      "strings": [
        "\"lux_solve: LU-factorization has incomplete rank\\n\""
      ]
    },
    "lux_delete": {
      "start_point": [
        1004,
        0
      ],
      "end_point": [
        1027,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/draft/lux.h": {},
  "glpk/glpk-4.65/src/env/alloc.c": {
    "dma": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"%s: ptr = %p; invalid pointer\\n\"",
        "\"%s: memory allocation error\\n\"",
        "\"%s: block too large\\n\"",
        "\"%s: memory allocation limit exceeded\\n\"",
        "\"%s: too many memory blocks allocated\\n\"",
        "\"%s: no memory available\\n\""
      ]
    },
    "glp_alloc": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"glp_alloc: n = %d; invalid parameter\\n\"",
        "\"glp_alloc: size = %d; invalid parameter\\n\"",
        "\"glp_alloc: n = %d, size = %d; block too large\\n\"",
        "\"glp_alloc\""
      ]
    },
    "glp_realloc": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": [
        "\"glp_realloc: ptr = %p; invalid pointer\\n\"",
        "\"glp_realloc: n = %d; invalid parameter\\n\"",
        "\"glp_realloc: size = %d; invalid parameter\\n\"",
        "\"glp_realloc: n = %d, size = %d; block too large\\n\"",
        "\"glp_realloc\""
      ]
    },
    "glp_free": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": [
        "\"glp_free: ptr = %p; invalid pointer\\n\"",
        "\"glp_free\""
      ]
    },
    "glp_mem_limit": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": [
        "\"glp_mem_limit: limit = %d; invalid parameter\\n\""
      ]
    },
    "glp_mem_usage": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/env/dlsup.c": {
    "xdlopen": [
      {
        "start_point": [
          35,
          0
        ],
        "end_point": [
          49,
          1
        ],
        "strings": [
          "\"xdlopen: %s\\n\""
        ]
      },
      {
        "start_point": [
          77,
          0
        ],
        "end_point": [
          84,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          110,
          0
        ],
        "end_point": [
          120,
          1
        ],
        "strings": [
          "\"Error %d\""
        ]
      },
      {
        "start_point": [
          144,
          0
        ],
        "end_point": [
          149,
          1
        ],
        "strings": [
          "\"Shared libraries not supported\""
        ]
      }
    ],
    "xdlsym": [
      {
        "start_point": [
          51,
          0
        ],
        "end_point": [
          59,
          1
        ],
        "strings": [
          "\"xdlsym: %s: %s\\n\""
        ]
      },
      {
        "start_point": [
          86,
          0
        ],
        "end_point": [
          94,
          1
        ],
        "strings": [
          "\"xdlsym: %s: %s\\n\""
        ]
      },
      {
        "start_point": [
          122,
          0
        ],
        "end_point": [
          130,
          1
        ],
        "strings": [
          "\"xdlsym: %s: Error %d\\n\""
        ]
      },
      {
        "start_point": [
          151,
          0
        ],
        "end_point": [
          156,
          1
        ],
        "strings": []
      }
    ],
    "xdlclose": [
      {
        "start_point": [
          61,
          0
        ],
        "end_point": [
          69,
          1
        ],
        "strings": [
          "\"xdlclose: %s\\n\"",
          "\"xdlclose: %s\\n\""
        ]
      },
      {
        "start_point": [
          96,
          0
        ],
        "end_point": [
          102,
          1
        ],
        "strings": [
          "\"xdlclose: %s\\n\""
        ]
      },
      {
        "start_point": [
          132,
          0
        ],
        "end_point": [
          138,
          1
        ],
        "strings": [
          "\"xdlclose: Error %d\\n\""
        ]
      },
      {
        "start_point": [
          158,
          0
        ],
        "end_point": [
          162,
          1
        ],
        "strings": []
      }
    ]
  },
  "glpk/glpk-4.65/src/env/env.c": {
    "glp_init_env": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": [
        "\"%d.%d\""
      ]
    },
    "get_env_ptr": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": [
        "\"GLPK initialization failed\\n\"",
        "\"Invalid GLPK environment\\n\""
      ]
    },
    "glp_config": {
      "start_point": [
        221,
        0
      ],
      "end_point": [
        246,
        1
      ],
      "strings": [
        "\"TLS\""
      ]
    },
    "glp_free_env": {
      "start_point": [
        277,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": [
        "\"Invalid GLPK environment\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/env/env.h": {},
  "glpk/glpk-4.65/src/env/error.c": {
    "errfunc": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"Error detected in file %s at line %d\\n\""
      ]
    },
    "glp_error_": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "glp_at_error": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "glp_assert_": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"Assertion failed: %s\\n\""
      ]
    },
    "glp_error_hook": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "put_err_msg": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "get_err_msg": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/env/stdc.c": {
    "xgmtime": [
      {
        "start_point": [
          34,
          0
        ],
        "end_point": [
          37,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          55,
          0
        ],
        "end_point": [
          59,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          78,
          0
        ],
        "end_point": [
          82,
          1
        ],
        "strings": []
      }
    ],
    "xstrerr": [
      {
        "start_point": [
          39,
          0
        ],
        "end_point": [
          42,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          61,
          0
        ],
        "end_point": [
          65,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          84,
          0
        ],
        "end_point": [
          88,
          1
        ],
        "strings": []
      }
    ],
    "xstrtok": [
      {
        "start_point": [
          44,
          0
        ],
        "end_point": [
          47,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          67,
          0
        ],
        "end_point": [
          70,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          90,
          0
        ],
        "end_point": [
          93,
          1
        ],
        "strings": []
      }
    ]
  },
  "glpk/glpk-4.65/src/env/stdc.h": {},
  "glpk/glpk-4.65/src/env/stdout.c": {
    "glp_puts": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "glp_printf": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "glp_vprintf": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    },
    "glp_term_out": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": [
        "\"glp_term_out: flag = %d; invalid parameter\\n\""
      ]
    },
    "glp_term_hook": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "glp_open_tee": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": [
        "\"w\""
      ]
    },
    "glp_close_tee": {
      "start_point": [
        250,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/env/stream.c": {
    "glp_open": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": [
        "\"r\"",
        "\"rb\"",
        "\"w\"",
        "\"wb\"",
        "\"ab\"",
        "\"glp_open: invalid mode string\\n\"",
        "\"/dev/null\"",
        "\"/dev/stdin\"",
        "\"/dev/stdout\"",
        "\"/dev/stderr\"",
        "\".gz\"",
        "\"r\"",
        "\"rb\"",
        "\"w\"",
        "\"wb\"",
        "\"ab\""
      ]
    },
    "glp_eof": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "glp_ioerr": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": []
    },
    "glp_read": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": [
        "\"glp_read: attempt to read from output stream\\n\"",
        "\"glp_read: nnn = %d; invalid parameter\\n\""
      ]
    },
    "glp_getc": {
      "start_point": [
        313,
        0
      ],
      "end_point": [
        320,
        1
      ],
      "strings": [
        "\"glp_getc: attempt to read from output stream\\n\""
      ]
    },
    "do_flush": {
      "start_point": [
        331,
        0
      ],
      "end_point": [
        369,
        1
      ],
      "strings": []
    },
    "glp_write": {
      "start_point": [
        392,
        0
      ],
      "end_point": [
        412,
        1
      ],
      "strings": [
        "\"glp_write: attempt to write to input stream\\n\"",
        "\"glp_write: nnn = %d; invalid parameter\\n\""
      ]
    },
    "glp_format": {
      "start_point": [
        434,
        0
      ],
      "end_point": [
        445,
        1
      ],
      "strings": [
        "\"glp_format: attempt to write to input stream\\n\""
      ]
    },
    "glp_close": {
      "start_point": [
        465,
        0
      ],
      "end_point": [
        516,
        9
      ],
      "strings": [
        "\"gzclose returned %d\""
      ]
    }
  },
  "glpk/glpk-4.65/src/env/time.c": {
    "glp_time": [
      {
        "start_point": [
          54,
          0
        ],
        "end_point": [
          71,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          75,
          0
        ],
        "end_point": [
          82,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          91,
          0
        ],
        "end_point": [
          102,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          110,
          0
        ],
        "end_point": [
          126,
          1
        ],
        "strings": []
      }
    ],
    "glp_difftime": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/env/tls.c": {
    "tls_set_ptr": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "tls_get_ptr": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "DllMain": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": [
        "\"The GLPK library called by this application is configur\"",
        "\"ed to use thread local storage which is not fully suppo\"",
        "\"rted by your version of Microsoft Windows.\\n\\n\"",
        "\"Microsoft Windows Vista or a later version of Windows i\"",
        "\"s required to run this application.\"",
        "\"GLPK\""
      ]
    }
  },
  "glpk/glpk-4.65/src/intopt/cfg.c": {
    "cfg_create_graph": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "add_edge": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "cfg_add_clique": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "cfg_get_adjacent": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": []
    },
    "intersection": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        293,
        1
      ],
      "strings": []
    },
    "cfg_expand_clique": {
      "start_point": [
        295,
        0
      ],
      "end_point": [
        343,
        1
      ],
      "strings": []
    },
    "cfg_check_clique": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        389,
        1
      ],
      "strings": []
    },
    "cfg_delete_graph": {
      "start_point": [
        397,
        0
      ],
      "end_point": [
        406,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/intopt/cfg.h": {},
  "glpk/glpk-4.65/src/intopt/cfg1.c": {
    "fcmp": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        208,
        1
      ],
      "strings": []
    },
    "analyze_ineq": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        347,
        1
      ],
      "strings": []
    },
    "cfg_build_graph": {
      "start_point": [
        349,
        0
      ],
      "end_point": [
        387,
        1
      ],
      "strings": []
    },
    "build_subgraph": {
      "start_point": [
        456,
        0
      ],
      "end_point": [
        529,
        1
      ],
      "strings": []
    },
    "sub_adjacent": {
      "start_point": [
        531,
        0
      ],
      "end_point": [
        561,
        1
      ],
      "strings": []
    },
    "find_clique": {
      "start_point": [
        563,
        0
      ],
      "end_point": [
        621,
        1
      ],
      "strings": []
    },
    "func": {
      "start_point": [
        623,
        0
      ],
      "end_point": [
        628,
        1
      ],
      "strings": []
    },
    "find_clique1": {
      "start_point": [
        630,
        0
      ],
      "end_point": [
        640,
        1
      ],
      "strings": []
    },
    "cfg_find_clique": {
      "start_point": [
        642,
        0
      ],
      "end_point": [
        700,
        1
      ],
      "strings": [
        "\"nn = %d\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/intopt/cfg2.c": {
    "glp_cfg_init": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": [
        "\"Constructing conflict graph...\\n\"",
        "\"No conflicts found\\n\"",
        "\"Conflict graph has %d + %d = %d vertices\\n\""
      ]
    },
    "glp_cfg_free": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/intopt/clqcut.c": {
    "glp_clq_cut": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": [
        "\"len = %d; sum = %g\\n\"",
        "\"maximal clique size = %d\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/intopt/covgen.c": {
    "init_bounds": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "check_vb": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "set_vb": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "obtain_vbs": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": []
    },
    "add_term": {
      "start_point": [
        251,
        0
      ],
      "end_point": [
        267,
        1
      ],
      "strings": []
    },
    "build_ks": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        370,
        1
      ],
      "strings": []
    },
    "can_be_active": {
      "start_point": [
        381,
        0
      ],
      "end_point": [
        390,
        1
      ],
      "strings": []
    },
    "is_sos_ineq": {
      "start_point": [
        430,
        0
      ],
      "end_point": [
        455,
        1
      ],
      "strings": []
    },
    "process_ineq": {
      "start_point": [
        473,
        0
      ],
      "end_point": [
        498,
        1
      ],
      "strings": []
    },
    "glp_cov_init": {
      "start_point": [
        502,
        0
      ],
      "end_point": [
        594,
        1
      ],
      "strings": [
        "\"No 0-1 knapsack inequalities detected\\n\"",
        "\"Number of 0-1 knapsack inequalities = %d\\n\"",
        "\"set.lp\""
      ]
    },
    "solve_ks": {
      "start_point": [
        614,
        0
      ],
      "end_point": [
        629,
        1
      ],
      "strings": []
    },
    "simple_cover": {
      "start_point": [
        706,
        0
      ],
      "end_point": [
        772,
        1
      ],
      "strings": []
    },
    "glp_cov_gen1": {
      "start_point": [
        776,
        0
      ],
      "end_point": [
        872,
        1
      ],
      "strings": []
    },
    "glp_cov_free": {
      "start_point": [
        876,
        0
      ],
      "end_point": [
        882,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/intopt/fpump.c": {
    "fcmp": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "ios_feas_pump": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": [
        "\"FPUMP heuristic cannot be applied due to genera\"",
        "\"l integer variables\\n\"",
        "\"Applying FPUMP heuristic...\\n\"",
        "\"Pass %d\\n\"",
        "\"Warning: glp_simplex returned %d\\n\"",
        "\"Warning: glp_get_status returned %d\\n\"",
        "\"delta = %g\\n\"",
        "\"Warning: glp_simplex returned %d\\n\"",
        "\"Warning: glp_get_status returned %d\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/intopt/gmicut.c": {
    "glp_gmi_cut": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/intopt/gmigen.c": {
    "fcmp": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "glp_gmi_gen": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": [
        "\"glp_gmi_gen: basis factorization does not exist\\n\"",
        "\"glp_gmi_gen: optimal basic solution required\\n\"",
        "\"glp_gmi_gen: cut pool has wrong number of columns\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/intopt/mirgen.c": {
    "set_row_attrib": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "set_col_attrib": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": []
    },
    "set_var_bounds": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": []
    },
    "mark_useless_rows": {
      "start_point": [
        270,
        0
      ],
      "end_point": [
        307,
        1
      ],
      "strings": []
    },
    "glp_mir_init": {
      "start_point": [
        309,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": [
        "\"ios_mir_init: warning: debug mode enabled\\n\""
      ]
    },
    "get_current_point": {
      "start_point": [
        366,
        0
      ],
      "end_point": [
        376,
        1
      ],
      "strings": []
    },
    "check_current_point": {
      "start_point": [
        379,
        0
      ],
      "end_point": [
        416,
        1
      ],
      "strings": []
    },
    "initial_agg_row": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        441,
        1
      ],
      "strings": []
    },
    "check_agg_row": {
      "start_point": [
        444,
        0
      ],
      "end_point": [
        466,
        1
      ],
      "strings": []
    },
    "subst_fixed_vars": {
      "start_point": [
        469,
        0
      ],
      "end_point": [
        490,
        1
      ],
      "strings": []
    },
    "bound_subst_heur": {
      "start_point": [
        492,
        0
      ],
      "end_point": [
        540,
        1
      ],
      "strings": []
    },
    "build_mod_row": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        633,
        1
      ],
      "strings": []
    },
    "check_mod_row": {
      "start_point": [
        636,
        0
      ],
      "end_point": [
        678,
        1
      ],
      "strings": []
    },
    "mir_ineq": {
      "start_point": [
        702,
        0
      ],
      "end_point": [
        719,
        1
      ],
      "strings": []
    },
    "cmir_ineq": {
      "start_point": [
        745,
        0
      ],
      "end_point": [
        764,
        1
      ],
      "strings": []
    },
    "cmir_cmp": {
      "start_point": [
        800,
        0
      ],
      "end_point": [
        805,
        1
      ],
      "strings": []
    },
    "cmir_sep": {
      "start_point": [
        807,
        0
      ],
      "end_point": [
        892,
        1
      ],
      "strings": []
    },
    "generate": {
      "start_point": [
        894,
        0
      ],
      "end_point": [
        1034,
        1
      ],
      "strings": [
        "\"glp_mir_gen: warning: x[%d] = %g\\n\"",
        "\"glp_mir_gen: warning: x = %g\\n\""
      ]
    },
    "check_raw_cut": {
      "start_point": [
        1037,
        0
      ],
      "end_point": [
        1077,
        1
      ],
      "strings": []
    },
    "back_subst": {
      "start_point": [
        1080,
        0
      ],
      "end_point": [
        1167,
        1
      ],
      "strings": []
    },
    "check_cut_row": {
      "start_point": [
        1170,
        0
      ],
      "end_point": [
        1193,
        1
      ],
      "strings": []
    },
    "subst_aux_vars": {
      "start_point": [
        1196,
        0
      ],
      "end_point": [
        1220,
        1
      ],
      "strings": []
    },
    "add_cut": {
      "start_point": [
        1222,
        0
      ],
      "end_point": [
        1253,
        1
      ],
      "strings": []
    },
    "glp_mir_gen": {
      "start_point": [
        1385,
        0
      ],
      "end_point": [
        1495,
        1
      ],
      "strings": []
    },
    "glp_mir_free": {
      "start_point": [
        1511,
        0
      ],
      "end_point": [
        1526,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/intopt/spv.c": {
    "spv_create_vec": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "spv_check_vec": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "spv_get_vj": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "spv_set_vj": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "spv_clear_vec": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": []
    },
    "spv_clean_vec": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    },
    "spv_copy_vec": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": []
    },
    "spv_linear_comb": {
      "start_point": [
        264,
        0
      ],
      "end_point": [
        276,
        1
      ],
      "strings": []
    },
    "spv_delete_vec": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        300,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/intopt/spv.h": {},
  "glpk/glpk-4.65/src/minisat/minisat.c": {
    "ymalloc": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": [
        "\"MiniSat: no memory available\\n\""
      ]
    },
    "yrealloc": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"MiniSat: no memory available\\n\""
      ]
    },
    "yfree": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "check": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        87,
        52
      ],
      "strings": []
    },
    "printlits": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\" \""
      ]
    },
    "drand": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        108,
        32
      ],
      "strings": []
    },
    "irand": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        112,
        39
      ],
      "strings": []
    },
    "vecp_remove": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    },
    "order_update": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        208,
        1
      ],
      "strings": []
    },
    "order_unassigned": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": []
    },
    "order_select": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        283,
        1
      ],
      "strings": []
    },
    "act_var_rescale": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": []
    },
    "act_var_bump": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": []
    },
    "act_var_decay": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        309,
        35
      ],
      "strings": []
    },
    "act_clause_rescale": {
      "start_point": [
        311,
        0
      ],
      "end_point": [
        319,
        1
      ],
      "strings": []
    },
    "act_clause_bump": {
      "start_point": [
        321,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": []
    },
    "act_clause_decay": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        328,
        35
      ],
      "strings": []
    },
    "clause_new": {
      "start_point": [
        335,
        0
      ],
      "end_point": [
        377,
        1
      ],
      "strings": []
    },
    "clause_remove": {
      "start_point": [
        379,
        0
      ],
      "end_point": [
        403,
        1
      ],
      "strings": []
    },
    "clause_simplify": {
      "start_point": [
        405,
        0
      ],
      "end_point": [
        419,
        1
      ],
      "strings": []
    },
    "solver_setnvars": {
      "start_point": [
        424,
        0
      ],
      "end_point": [
        469,
        1
      ],
      "strings": []
    },
    "enqueue": {
      "start_point": [
        471,
        0
      ],
      "end_point": [
        502,
        1
      ],
      "strings": [
        "\"enqueue(\"",
        "\")\\n\"",
        "\"bind(\"",
        "\")\\n\""
      ]
    },
    "assume": {
      "start_point": [
        504,
        0
      ],
      "end_point": [
        512,
        1
      ],
      "strings": [
        "\"assume(\"",
        "\")\\n\""
      ]
    },
    "solver_canceluntil": {
      "start_point": [
        514,
        0
      ],
      "end_point": [
        540,
        1
      ],
      "strings": []
    },
    "solver_record": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        558,
        1
      ],
      "strings": []
    },
    "solver_progress": {
      "start_point": [
        560,
        0
      ],
      "end_point": [
        572,
        1
      ],
      "strings": []
    },
    "solver_lit_removable": {
      "start_point": [
        577,
        0
      ],
      "end_point": [
        640,
        1
      ],
      "strings": []
    },
    "solver_analyze": {
      "start_point": [
        642,
        0
      ],
      "end_point": [
        761,
        1
      ],
      "strings": [
        "\"Learnt {\"",
        "\" \"",
        "\" } at level %d\\n\""
      ]
    },
    "solver_propagate": {
      "start_point": [
        763,
        0
      ],
      "end_point": [
        849,
        1
      ],
      "strings": []
    },
    "clause_cmp": {
      "start_point": [
        851,
        0
      ],
      "end_point": [
        855,
        60
      ],
      "strings": []
    },
    "solver_reducedb": {
      "start_point": [
        857,
        0
      ],
      "end_point": [
        888,
        1
      ],
      "strings": []
    },
    "solver_search": {
      "start_point": [
        890,
        0
      ],
      "end_point": [
        989,
        1
      ],
      "strings": [
        "\"**CONFLICT**\\n\""
      ]
    },
    "solver_new": {
      "start_point": [
        994,
        0
      ],
      "end_point": [
        1049,
        1
      ],
      "strings": []
    },
    "solver_delete": {
      "start_point": [
        1051,
        0
      ],
      "end_point": [
        1088,
        1
      ],
      "strings": []
    },
    "solver_addclause": {
      "start_point": [
        1090,
        0
      ],
      "end_point": [
        1140,
        1
      ],
      "strings": []
    },
    "solver_simplify": {
      "start_point": [
        1142,
        0
      ],
      "end_point": [
        1177,
        1
      ],
      "strings": []
    },
    "solver_solve": {
      "start_point": [
        1179,
        0
      ],
      "end_point": [
        1244,
        1
      ],
      "strings": [
        "\"==================================[MINISAT]============\"",
        "\"=======================\\n\"",
        "\"| Conflicts |     ORIGINAL     |              LEARNT   \"",
        "\"           | Progress |\\n\"",
        "\"|           | Clauses Literals |   Limit Clauses Litera\"",
        "\"ls  Lit/Cl |          |\\n\"",
        "\"=======================================================\"",
        "\"=======================\\n\"",
        "\"| %9.0f | %7.0f %8.0f | %7.0f %7.0f %8.0f %7.1f | %\"",
        "\"6.3f %% |\\n\"",
        "\"=======================================================\"",
        "\"=======================\\n\""
      ]
    },
    "solver_nvars": {
      "start_point": [
        1246,
        0
      ],
      "end_point": [
        1249,
        1
      ],
      "strings": []
    },
    "solver_nclauses": {
      "start_point": [
        1251,
        0
      ],
      "end_point": [
        1254,
        1
      ],
      "strings": []
    },
    "solver_nconflicts": {
      "start_point": [
        1256,
        0
      ],
      "end_point": [
        1259,
        1
      ],
      "strings": []
    },
    "selectionsort": {
      "start_point": [
        1264,
        0
      ],
      "end_point": [
        1278,
        1
      ],
      "strings": []
    },
    "sortrnd": {
      "start_point": [
        1280,
        0
      ],
      "end_point": [
        1305,
        1
      ],
      "strings": []
    },
    "sort": {
      "start_point": [
        1307,
        0
      ],
      "end_point": [
        1312,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/minisat/minisat.h": {},
  "glpk/glpk-4.65/src/misc/avl.c": {
    "avl_create_tree": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "avl_strcmp": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "avl_insert_node": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "avl_set_node_type": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    },
    "avl_set_node_link": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "avl_find_node": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "avl_get_node_type": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "avl_get_node_link": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    },
    "find_next_node": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    },
    "avl_delete_node": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        315,
        1
      ],
      "strings": []
    },
    "rotate_subtree": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": []
    },
    "avl_delete_tree": {
      "start_point": [
        397,
        0
      ],
      "end_point": [
        402,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/avl.h": {},
  "glpk/glpk-4.65/src/misc/bignum.c": {
    "bigmul": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "bigdiv": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": [
        "\"%d tests successfully passed\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/misc/bignum.h": {},
  "glpk/glpk-4.65/src/misc/dimacs.c": {
    "dmx_error": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": [
        "\"%s:%d: error: \"",
        "\"\\n\""
      ]
    },
    "dmx_warning": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"%s:%d: warning: \"",
        "\"\\n\""
      ]
    },
    "dmx_read_char": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": [
        "\"read error - %s\"",
        "\"unexpected end of file\"",
        "\"missing final end of line\"",
        "\"invalid control character 0x%02X\""
      ]
    },
    "dmx_read_designator": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"empty line ignored\"",
        "\"line designator missing or invalid\""
      ]
    },
    "dmx_read_field": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": [
        "\"unexpected end of line\"",
        "\"data field '%.15s...' too long\""
      ]
    },
    "dmx_end_of_line": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": [
        "\"too many data fields specified\""
      ]
    },
    "dmx_check_int": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": [
        "\"non-integer data detected\""
      ]
    }
  },
  "glpk/glpk-4.65/src/misc/dimacs.h": {},
  "glpk/glpk-4.65/src/misc/dmp.c": {
    "dmp_create_pool": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": [
        "\"dmp_create_pool: warning: debug mode is on\\n\""
      ]
    },
    "dmp_get_atom": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "dmp_free_atom": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "dmp_in_use": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    },
    "dmp_delete_pool": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/dmp.h": {},
  "glpk/glpk-4.65/src/misc/ffalg.c": {
    "ffalg": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/ffalg.h": {},
  "glpk/glpk-4.65/src/misc/fp2rat.c": {
    "fp2rat": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": [
        "\"%.*g / %.*g = %.*g\""
      ]
    }
  },
  "glpk/glpk-4.65/src/misc/fvs.c": {
    "fvs_alloc_vec": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "fvs_check_vec": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "fvs_gather_vec": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "fvs_clear_vec": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "fvs_copy_vec": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "fvs_adjust_vec": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    },
    "fvs_free_vec": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/fvs.h": {},
  "glpk/glpk-4.65/src/misc/gcd.c": {
    "gcd": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "gcdn": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/jd.c": {
    "jday": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "jdate": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": [
        "\"Routines jday and jdate work correctly.\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/misc/jd.h": {},
  "glpk/glpk-4.65/src/misc/keller.c": {
    "kellerman": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/keller.h": {},
  "glpk/glpk-4.65/src/misc/ks.c": {
    "ks_enum": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "reduce": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    },
    "restore": {
      "start_point": [
        248,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": []
    },
    "free_ks": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": []
    },
    "fcmp": {
      "start_point": [
        306,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": []
    },
    "mt1a": {
      "start_point": [
        315,
        0
      ],
      "end_point": [
        360,
        1
      ],
      "strings": []
    },
    "ks_mt1": {
      "start_point": [
        362,
        0
      ],
      "end_point": [
        390,
        1
      ],
      "strings": []
    },
    "greedy": {
      "start_point": [
        406,
        0
      ],
      "end_point": [
        433,
        1
      ],
      "strings": []
    },
    "ks_greedy": {
      "start_point": [
        435,
        0
      ],
      "end_point": [
        463,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/ks.h": {},
  "glpk/glpk-4.65/src/misc/mc13d.c": {
    "mc13d": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    },
    "test": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": [
        "\"\\n\\n\\nMatrix is of order %d and has %d off-diagonal non-\"",
        "\"zeros\\n\"",
        "\"\\nThe reordered matrix which has %d block%s is of the fo\"",
        "\"rm\\n\"",
        "\"\"",
        "\"s\"",
        "\"\\n\"",
        "\"%.*s\\n\"",
        "\"\\nThe starting point for each block is given by\\n\"",
        "\"\\n\"",
        "\" %4d\"",
        "\"\\n\""
      ]
    },
    "setup": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": []
    },
    "fa01as": {
      "start_point": [
        298,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": []
    },
    "fa01bs": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/mc13d.h": {},
  "glpk/glpk-4.65/src/misc/mc21a.c": {
    "mc21a": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": [
        "\"n = %2d; nz = %4d; sing = %d\\n\"",
        "\"Failure in mc21a, numnz = %d instead of %d\\n\""
      ]
    },
    "ranmat": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": []
    },
    "fa01as": {
      "start_point": [
        285,
        0
      ],
      "end_point": [
        292,
        1
      ],
      "strings": []
    },
    "fa01bs": {
      "start_point": [
        294,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/mc21a.h": {},
  "glpk/glpk-4.65/src/misc/misc.h": {},
  "glpk/glpk-4.65/src/misc/mt1.c": {
    "mt1_": {
      "start_point": [
        60,
        17
      ],
      "end_point": [
        941,
        1
      ],
      "strings": []
    },
    "chmt1_": {
      "start_point": [
        947,
        17
      ],
      "end_point": [
        1087,
        1
      ],
      "strings": []
    },
    "mt1": {
      "start_point": [
        1090,
        0
      ],
      "end_point": [
        1106,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/mt1.h": {},
  "glpk/glpk-4.65/src/misc/mygmp.c": {
    "gmp_get_atom": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "gmp_free_atom": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "gmp_pool_count": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "gmp_get_work": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "gmp_free_mem": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "_mpz_init": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "mpz_clear": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "mpz_set": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "mpz_set_si": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "mpz_get_d": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "mpz_get_d_2exp": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        208,
        1
      ],
      "strings": []
    },
    "mpz_swap": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    },
    "normalize": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "mpz_add": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        409,
        1
      ],
      "strings": []
    },
    "mpz_sub": {
      "start_point": [
        411,
        0
      ],
      "end_point": [
        422,
        1
      ],
      "strings": []
    },
    "mpz_mul": {
      "start_point": [
        424,
        0
      ],
      "end_point": [
        564,
        1
      ],
      "strings": []
    },
    "mpz_neg": {
      "start_point": [
        566,
        0
      ],
      "end_point": [
        571,
        1
      ],
      "strings": []
    },
    "mpz_abs": {
      "start_point": [
        573,
        0
      ],
      "end_point": [
        579,
        1
      ],
      "strings": []
    },
    "mpz_div": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        760,
        1
      ],
      "strings": [
        "\"mpz_div: divide by zero not allowed\\n\""
      ]
    },
    "mpz_gcd": {
      "start_point": [
        762,
        0
      ],
      "end_point": [
        782,
        1
      ],
      "strings": []
    },
    "mpz_cmp": {
      "start_point": [
        784,
        0
      ],
      "end_point": [
        872,
        1
      ],
      "strings": []
    },
    "mpz_sgn": {
      "start_point": [
        874,
        0
      ],
      "end_point": [
        879,
        1
      ],
      "strings": []
    },
    "mpz_out_str": {
      "start_point": [
        881,
        0
      ],
      "end_point": [
        924,
        1
      ],
      "strings": [
        "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
        "\"mpz_out_str: base = %d; invalid base\\n\""
      ]
    },
    "_mpq_init": {
      "start_point": [
        928,
        0
      ],
      "end_point": [
        937,
        1
      ],
      "strings": []
    },
    "mpq_clear": {
      "start_point": [
        939,
        0
      ],
      "end_point": [
        948,
        1
      ],
      "strings": []
    },
    "mpq_canonicalize": {
      "start_point": [
        950,
        0
      ],
      "end_point": [
        967,
        1
      ],
      "strings": []
    },
    "mpq_set": {
      "start_point": [
        969,
        0
      ],
      "end_point": [
        976,
        1
      ],
      "strings": []
    },
    "mpq_set_si": {
      "start_point": [
        978,
        0
      ],
      "end_point": [
        986,
        1
      ],
      "strings": [
        "\"mpq_set_si: zero denominator not allowed\\n\""
      ]
    },
    "mpq_get_d": {
      "start_point": [
        988,
        0
      ],
      "end_point": [
        995,
        1
      ],
      "strings": []
    },
    "mpq_set_d": {
      "start_point": [
        997,
        0
      ],
      "end_point": [
        1038,
        1
      ],
      "strings": []
    },
    "mpq_add": {
      "start_point": [
        1040,
        0
      ],
      "end_point": [
        1055,
        1
      ],
      "strings": []
    },
    "mpq_sub": {
      "start_point": [
        1057,
        0
      ],
      "end_point": [
        1072,
        1
      ],
      "strings": []
    },
    "mpq_mul": {
      "start_point": [
        1074,
        0
      ],
      "end_point": [
        1080,
        1
      ],
      "strings": []
    },
    "mpq_div": {
      "start_point": [
        1082,
        0
      ],
      "end_point": [
        1097,
        1
      ],
      "strings": [
        "\"mpq_div: zero divisor not allowed\\n\""
      ]
    },
    "mpq_neg": {
      "start_point": [
        1099,
        0
      ],
      "end_point": [
        1104,
        1
      ],
      "strings": []
    },
    "mpq_abs": {
      "start_point": [
        1106,
        0
      ],
      "end_point": [
        1112,
        1
      ],
      "strings": []
    },
    "mpq_cmp": {
      "start_point": [
        1114,
        0
      ],
      "end_point": [
        1124,
        1
      ],
      "strings": []
    },
    "mpq_sgn": {
      "start_point": [
        1126,
        0
      ],
      "end_point": [
        1132,
        1
      ],
      "strings": []
    },
    "mpq_out_str": {
      "start_point": [
        1134,
        0
      ],
      "end_point": [
        1157,
        1
      ],
      "strings": [
        "\"mpq_out_str: base = %d; invalid base\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/misc/mygmp.h": {},
  "glpk/glpk-4.65/src/misc/okalg.c": {
    "overflow": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "okalg": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        379,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/okalg.h": {},
  "glpk/glpk-4.65/src/misc/qmd.c": {
    "genqmd": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "qmdrch": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": []
    },
    "qmdqt": {
      "start_point": [
        297,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": []
    },
    "qmdupd": {
      "start_point": [
        389,
        0
      ],
      "end_point": [
        447,
        1
      ],
      "strings": []
    },
    "qmdmrg": {
      "start_point": [
        491,
        0
      ],
      "end_point": [
        581,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/qmd.h": {},
  "glpk/glpk-4.65/src/misc/relax4.c": {
    "relax4": {
      "start_point": [
        241,
        0
      ],
      "end_point": [
        1428,
        1
      ],
      "strings": []
    },
    "relax4_inidat": {
      "start_point": [
        1460,
        0
      ],
      "end_point": [
        1496,
        1
      ],
      "strings": []
    },
    "ascnt1": {
      "start_point": [
        1567,
        0
      ],
      "end_point": [
        1858,
        1
      ],
      "strings": []
    },
    "ascnt2": {
      "start_point": [
        1870,
        0
      ],
      "end_point": [
        2142,
        1
      ],
      "strings": []
    },
    "auction": {
      "start_point": [
        2191,
        0
      ],
      "end_point": [
        2847,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/relax4.h": {},
  "glpk/glpk-4.65/src/misc/rng.c": {
    "flip_cycle": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "rng_create_rand": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "rng_init_rand": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "rng_next_rand": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "rng_unif_rand": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "rng_delete_rand": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": [
        "\"Failure on the first try!\\n\"",
        "\"Failure on the second try!\\n\"",
        "\"OK, the random-number generator routines seem to\"",
        "\" work!\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/misc/rng.h": {},
  "glpk/glpk-4.65/src/misc/rng1.c": {
    "rng_unif_01": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "rng_uniform": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/round2n.c": {
    "round2n": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/str2int.c": {
    "str2int": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/str2num.c": {
    "str2num": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/strspx.c": {
    "strspx": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/strtrim.c": {
    "strtrim": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/triang.c": {
    "triang": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        308,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/misc/triang.h": {},
  "glpk/glpk-4.65/src/misc/wclique.c": {
    "is_edge": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "sub": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    },
    "wclique": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": [
        "\"level = %d (%d); best = %d\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/misc/wclique.h": {},
  "glpk/glpk-4.65/src/misc/wclique1.c": {
    "fcmp": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "wclique1": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "func": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        264,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": [
        "\"nc = %d\\n\"",
        "\"graph\"",
        "\"Time used: %.1f s\\n\"",
        "\"size = %d; sum = %g\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/misc/wclique1.h": {},
  "glpk/glpk-4.65/src/mpl/mpl.h": {},
  "glpk/glpk-4.65/src/mpl/mpl1.c": {
    "enter_context": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"_|_\"",
        "\"'...'\""
      ]
    },
    "print_context": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": [
        "\"Context: %s%.*s\\n\"",
        "\"\"",
        "\"...\""
      ]
    },
    "get_char": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": [
        "\"final NL missing before end of file\"",
        "\"control character 0x%02X not allowed\""
      ]
    },
    "append_char": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": [
        "\"symbolic name %s... too long\"",
        "\"symbol %s... too long\"",
        "\"numeric literal %s... too long\"",
        "\"string literal too long\""
      ]
    },
    "get_token": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        427,
        1
      ],
      "strings": [
        "\"and\"",
        "\"by\"",
        "\"cross\"",
        "\"diff\"",
        "\"div\"",
        "\"else\"",
        "\"if\"",
        "\"in\"",
        "\"keyword s.t. incomplete\"",
        "\"numeric literal %s incomplete\"",
        "\"symbol %s%c... should be enclosed in quotes\"",
        "\"cannot convert numeric literal %s to floating-p\"",
        "\"oint number\"",
        "\"unexpected end of line; string literal incom\"",
        "\"plete\"",
        "\"unexpected end of file; comment sequence \"",
        "\"incomplete\"",
        "\"..\"",
        "\"+-._\"",
        "\"character %c not allowed\""
      ]
    },
    "unget_token": {
      "start_point": [
        435,
        0
      ],
      "end_point": [
        449,
        1
      ],
      "strings": []
    },
    "is_keyword": {
      "start_point": [
        457,
        0
      ],
      "end_point": [
        460,
        1
      ],
      "strings": []
    },
    "is_reserved": {
      "start_point": [
        468,
        0
      ],
      "end_point": [
        487,
        1
      ],
      "strings": []
    },
    "make_code": {
      "start_point": [
        495,
        0
      ],
      "end_point": [
        737,
        1
      ],
      "strings": []
    },
    "make_unary": {
      "start_point": [
        744,
        0
      ],
      "end_point": [
        751,
        1
      ],
      "strings": []
    },
    "make_binary": {
      "start_point": [
        758,
        0
      ],
      "end_point": [
        768,
        1
      ],
      "strings": []
    },
    "make_ternary": {
      "start_point": [
        775,
        0
      ],
      "end_point": [
        787,
        1
      ],
      "strings": []
    },
    "numeric_literal": {
      "start_point": [
        796,
        0
      ],
      "end_point": [
        804,
        1
      ],
      "strings": []
    },
    "string_literal": {
      "start_point": [
        813,
        0
      ],
      "end_point": [
        822,
        1
      ],
      "strings": []
    },
    "create_arg_list": {
      "start_point": [
        829,
        0
      ],
      "end_point": [
        834,
        1
      ],
      "strings": []
    },
    "expand_arg_list": {
      "start_point": [
        841,
        0
      ],
      "end_point": [
        856,
        1
      ],
      "strings": []
    },
    "arg_list_len": {
      "start_point": [
        863,
        0
      ],
      "end_point": [
        870,
        1
      ],
      "strings": []
    },
    "subscript_list": {
      "start_point": [
        881,
        0
      ],
      "end_point": [
        906,
        1
      ],
      "strings": [
        "\"subscript expression has invalid type\"",
        "\"syntax error in subscript list\""
      ]
    },
    "object_reference": {
      "start_point": [
        932,
        0
      ],
      "end_point": [
        1084,
        1
      ],
      "strings": [
        "\"%s not defined\"",
        "\"%s cannot be subscripted\"",
        "\"%s must have %d subscript%s rather than %d\"",
        "\"\"",
        "\"s\"",
        "\"%s must be subscripted\"",
        "\"invalid use of period\"",
        "\"%s cannot have a suffix\"",
        "\"lb\"",
        "\"ub\"",
        "\"status\"",
        "\"val\"",
        "\"dual\"",
        "\"suffix .%s invalid\"",
        "\"invalid reference to status, primal value, o\"",
        "\"r dual value of variable %s above solve statement\"",
        "\"invalid reference to status, primal value, o\"",
        "\"r dual value of %s %s above solve statement\"",
        "\"constraint\"",
        "\"objective\""
      ]
    },
    "numeric_argument": {
      "start_point": [
        1095,
        0
      ],
      "end_point": [
        1106,
        1
      ],
      "strings": [
        "\"argument for %s has invalid type\""
      ]
    },
    "symbolic_argument": {
      "start_point": [
        1109,
        0
      ],
      "end_point": [
        1120,
        1
      ],
      "strings": [
        "\"argument for %s has invalid type\""
      ]
    },
    "elemset_argument": {
      "start_point": [
        1124,
        0
      ],
      "end_point": [
        1131,
        1
      ],
      "strings": [
        "\"argument for %s has invalid type\""
      ]
    },
    "function_reference": {
      "start_point": [
        1172,
        0
      ],
      "end_point": [
        1406,
        1
      ],
      "strings": [
        "\"abs\"",
        "\"ceil\"",
        "\"floor\"",
        "\"exp\"",
        "\"log\"",
        "\"log10\"",
        "\"sqrt\"",
        "\"sin\"",
        "\"cos\"",
        "\"tan\"",
        "\"atan\"",
        "\"min\"",
        "\"max\"",
        "\"round\"",
        "\"trunc\"",
        "\"Irand224\"",
        "\"Uniform01\"",
        "\"Uniform\"",
        "\"Normal01\"",
        "\"Normal\"",
        "\"card\"",
        "\"length\"",
        "\"substr\"",
        "\"str2time\"",
        "\"time2str\"",
        "\"gmtime\"",
        "\"function %s unknown\"",
        "\"syntax error in argument list for %s\"",
        "\"%s needs no arguments\"",
        "\"%s needs two arguments\"",
        "\"syntax error in argument for %s\"",
        "\"%s needs two argument\"",
        "\"syntax error in argument for %s\"",
        "\"%s needs one or two arguments\"",
        "\"syntax error in argument for %s\"",
        "\"%s needs two or three arguments\"",
        "\"syntax error in argument for %s\"",
        "\"%s needs two or three arguments\"",
        "\"syntax error in argument for %s\"",
        "\"%s needs two arguments\"",
        "\"syntax error in argument for %s\"",
        "\"%s needs two argument\"",
        "\"syntax error in argument for %s\"",
        "\"%s needs two arguments\"",
        "\"syntax error in argument for %s\"",
        "\"%s needs two argument\"",
        "\"syntax error in argument for %s\"",
        "\"%s needs one argument\"",
        "\"syntax error in argument for %s\""
      ]
    },
    "create_domain": {
      "start_point": [
        1414,
        0
      ],
      "end_point": [
        1420,
        1
      ],
      "strings": []
    },
    "create_block": {
      "start_point": [
        1428,
        0
      ],
      "end_point": [
        1436,
        1
      ],
      "strings": []
    },
    "append_block": {
      "start_point": [
        1444,
        0
      ],
      "end_point": [
        1458,
        1
      ],
      "strings": []
    },
    "append_slot": {
      "start_point": [
        1474,
        0
      ],
      "end_point": [
        1492,
        1
      ],
      "strings": []
    },
    "expression_list": {
      "start_point": [
        1522,
        0
      ],
      "end_point": [
        1637,
        1
      ],
      "strings": [
        "\"too many components within parentheses\"",
        "\"duplicate dummy index %s not allowed\"",
        "\"%s not defined\"",
        "\"component expression has invalid type\"",
        "\"right parenthesis missing where expected\"",
        "\"keyword in missing where expected\"",
        "\"syntax error in indexing expression\"",
        "\"0-ary slice not allowed\""
      ]
    },
    "literal_set": {
      "start_point": [
        1653,
        0
      ],
      "end_point": [
        1690,
        1
      ],
      "strings": [
        "\"member expression has invalid type\"",
        "\"member %d has %d component%s while member %d ha\"",
        "\"s %d component%s\"",
        "\"\"",
        "\"s\"",
        "\"\"",
        "\"s\"",
        "\"syntax error in literal set\""
      ]
    },
    "indexing_expression": {
      "start_point": [
        1714,
        0
      ],
      "end_point": [
        1872,
        1
      ],
      "strings": [
        "\"empty indexing expression not allowed\"",
        "\"domain expression has invalid type\"",
        "\"%d %s specified for set of dimension %d\"",
        "\"index\"",
        "\"indices\"",
        "\"syntax error in indexing expression\"",
        "\"expression following colon has invalid type\"",
        "\"syntax error in indexing expression\""
      ]
    },
    "close_scope": {
      "start_point": [
        1881,
        0
      ],
      "end_point": [
        1898,
        1
      ],
      "strings": []
    },
    "link_up": {
      "start_point": [
        1919,
        0
      ],
      "end_point": [
        1938,
        1
      ],
      "strings": []
    },
    "iterated_expression": {
      "start_point": [
        1941,
        0
      ],
      "end_point": [
        2032,
        1
      ],
      "strings": [
        "\"sum\"",
        "\"prod\"",
        "\"min\"",
        "\"max\"",
        "\"forall\"",
        "\"exists\"",
        "\"setof\"",
        "\"operator %s unknown\"",
        "\"integrand following %s{...} has invalid type\""
      ]
    },
    "domain_arity": {
      "start_point": [
        2040,
        0
      ],
      "end_point": [
        2050,
        1
      ],
      "strings": []
    },
    "set_expression": {
      "start_point": [
        2060,
        0
      ],
      "end_point": [
        2089,
        1
      ],
      "strings": []
    },
    "branched_expression": {
      "start_point": [
        2102,
        0
      ],
      "end_point": [
        2169,
        1
      ],
      "strings": [
        "\"expression following if has invalid type\"",
        "\"keyword then missing where expected\"",
        "\"expression following then has invalid type\"",
        "\"keyword else missing where expected\"",
        "\"expression following else has invalid type\"",
        "\"expressions following then and else have incompati\"",
        "\"ble types\"",
        "\"expressions following then and else have different\"",
        "\" dimensions %d and %d, respectively\""
      ]
    },
    "primary_expression": {
      "start_point": [
        2196,
        0
      ],
      "end_point": [
        2259,
        1
      ],
      "strings": [
        "\"invalid use of reserved keyword %s\""
      ]
    },
    "error_preceding": {
      "start_point": [
        2267,
        0
      ],
      "end_point": [
        2270,
        1
      ],
      "strings": [
        "\"operand preceding %s has invalid type\""
      ]
    },
    "error_following": {
      "start_point": [
        2278,
        0
      ],
      "end_point": [
        2281,
        1
      ],
      "strings": [
        "\"operand following %s has invalid type\""
      ]
    },
    "error_dimension": {
      "start_point": [
        2289,
        0
      ],
      "end_point": [
        2293,
        1
      ],
      "strings": [
        "\"operands preceding and following %s have different di\"",
        "\"mensions %d and %d, respectively\""
      ]
    },
    "expression_0": {
      "start_point": [
        2302,
        0
      ],
      "end_point": [
        2306,
        1
      ],
      "strings": []
    },
    "expression_1": {
      "start_point": [
        2318,
        0
      ],
      "end_point": [
        2341,
        1
      ],
      "strings": []
    },
    "expression_2": {
      "start_point": [
        2352,
        0
      ],
      "end_point": [
        2375,
        1
      ],
      "strings": [
        "\"+\"",
        "\"-\""
      ]
    },
    "expression_3": {
      "start_point": [
        2388,
        0
      ],
      "end_point": [
        2456,
        1
      ],
      "strings": [
        "\"*\"",
        "\"*\"",
        "\"multiplication of linear forms not allowed\"",
        "\"/\"",
        "\"/\"",
        "\"div\"",
        "\"div\"",
        "\"mod\"",
        "\"mod\""
      ]
    },
    "expression_4": {
      "start_point": [
        2468,
        0
      ],
      "end_point": [
        2523,
        1
      ],
      "strings": [
        "\"+\"",
        "\"+\"",
        "\"-\"",
        "\"-\"",
        "\"less\"",
        "\"less\""
      ]
    },
    "expression_5": {
      "start_point": [
        2533,
        0
      ],
      "end_point": [
        2554,
        1
      ],
      "strings": [
        "\"&\"",
        "\"&\""
      ]
    },
    "expression_6": {
      "start_point": [
        2566,
        0
      ],
      "end_point": [
        2593,
        1
      ],
      "strings": [
        "\"..\"",
        "\"..\"",
        "\"by\""
      ]
    },
    "expression_7": {
      "start_point": [
        2603,
        0
      ],
      "end_point": [
        2621,
        1
      ],
      "strings": [
        "\"cross\"",
        "\"cross\""
      ]
    },
    "expression_8": {
      "start_point": [
        2631,
        0
      ],
      "end_point": [
        2650,
        1
      ],
      "strings": [
        "\"inter\"",
        "\"inter\"",
        "\"inter\""
      ]
    },
    "expression_9": {
      "start_point": [
        2662,
        0
      ],
      "end_point": [
        2703,
        1
      ],
      "strings": [
        "\"union\"",
        "\"union\"",
        "\"union\"",
        "\"diff\"",
        "\"diff\"",
        "\"diff\"",
        "\"symdiff\"",
        "\"symdiff\"",
        "\"symdiff\""
      ]
    },
    "expression_10": {
      "start_point": [
        2715,
        0
      ],
      "end_point": [
        2825,
        1
      ],
      "strings": [
        "\"\"",
        "\"invalid use of %s\"",
        "\" \""
      ]
    },
    "expression_11": {
      "start_point": [
        2836,
        0
      ],
      "end_point": [
        2855,
        1
      ],
      "strings": []
    },
    "expression_12": {
      "start_point": [
        2866,
        0
      ],
      "end_point": [
        2894,
        1
      ],
      "strings": []
    },
    "expression_13": {
      "start_point": [
        2905,
        0
      ],
      "end_point": [
        2933,
        1
      ],
      "strings": []
    },
    "set_statement": {
      "start_point": [
        2954,
        0
      ],
      "end_point": [
        3174,
        1
      ],
      "strings": [
        "\"set\"",
        "\"invalid use of reserved keyword %s\"",
        "\"symbolic name missing where expected\"",
        "\"%s multiply declared\"",
        "\"dimen\"",
        "\"dimension must be integer between 1 and 20\"",
        "\"at most one dimension attribute allowed\"",
        "\"dimension %d conflicts with dimension %d alr\"",
        "\"eady determined\"",
        "\"keyword in understood as within\"",
        "\"expression following within has invalid type\"",
        "\"set expression following within must have di\"",
        "\"mension %d rather than %d\"",
        "\"at most one := or default/data allowed\"",
        "\"expression following := has invalid type\"",
        "\"set expression following := must have dimens\"",
        "\"ion %d rather than %d\"",
        "\"default\"",
        "\"expression following default has invalid typ\"",
        "\"e\"",
        "\"set expression following default must have d\"",
        "\"imension %d rather than %d\"",
        "\"invalid use of reserved keyword %s\"",
        "\"set name missing where expected\"",
        "\"%s not defined\"",
        "\"%s not a plain set\"",
        "\"set cannot be initialized by itself\"",
        "\"dimension of %s too small\"",
        "\"dimension of %s too big\"",
        "\"left parenthesis missing where expected\"",
        "\"component number missing where expected\"",
        "\"component number must be integer between \"",
        "\"1 and %d\"",
        "\"component %d multiply specified\"",
        "\"syntax error in data attribute\"",
        "\"there are must be %d components rather than \"",
        "\"%d\""
      ]
    },
    "parameter_statement": {
      "start_point": [
        3199,
        0
      ],
      "end_point": [
        3434,
        1
      ],
      "strings": [
        "\"param\"",
        "\"invalid use of reserved keyword %s\"",
        "\"symbolic name missing where expected\"",
        "\"%s multiply declared\"",
        "\"integer\"",
        "\"at most one integer allowed\"",
        "\"symbolic parameter cannot be integer\"",
        "\"binary\"",
        "\"at most one binary allowed\"",
        "\"symbolic parameter cannot be binary\"",
        "\"logical\"",
        "\"keyword logical understood as binary\"",
        "\"symbolic\"",
        "\"at most one symbolic allowed\"",
        "\"integer or binary parameter cannot be symbol\"",
        "\"ic\"",
        "\"keyword symbolic must precede any other para\"",
        "\"meter attributes\"",
        "\"inequality restriction not allowed\"",
        "\"expression following %s has invalid type\"",
        "\"keyword within understood as in\"",
        "\"expression following in has invalid type\"",
        "\"set expression following in must have dimens\"",
        "\"ion 1 rather than %d\"",
        "\"at most one := or default allowed\"",
        "\"expression following := has invalid type\"",
        "\"default\"",
        "\"expression following default has invalid typ\"",
        "\"e\"",
        "\"syntax error in parameter statement\""
      ]
    },
    "variable_statement": {
      "start_point": [
        3455,
        0
      ],
      "end_point": [
        3608,
        1
      ],
      "strings": [
        "\"var\"",
        "\"variable statement must precede solve statement\"",
        "\"invalid use of reserved keyword %s\"",
        "\"symbolic name missing where expected\"",
        "\"%s multiply declared\"",
        "\"integer\"",
        "\"at most one integer allowed\"",
        "\"binary\"",
        "\"at most one binary allowed\"",
        "\"logical\"",
        "\"keyword logical understood as binary\"",
        "\"symbolic\"",
        "\"variable cannot be symbolic\"",
        "\"both fixed value and lower bound not allo\"",
        "\"wed\"",
        "\"at most one lower bound allowed\"",
        "\"expression following >= has invalid type\"",
        "\"both fixed value and upper bound not allo\"",
        "\"wed\"",
        "\"at most one upper bound allowed\"",
        "\"expression following <= has invalid type\"",
        "\"at most one fixed value allowed\"",
        "\"both lower bound and fixed value not allo\"",
        "\"wed\"",
        "\"both upper bound and fixed value not allo\"",
        "\"wed\"",
        "\"expression following %s has invalid type\"",
        "\"strict bound not allowed\"",
        "\"syntax error in variable statement\""
      ]
    },
    "constraint_statement": {
      "start_point": [
        3634,
        0
      ],
      "end_point": [
        3828,
        1
      ],
      "strings": [
        "\"constraint statement must precede solve statement\"",
        "\"subject\"",
        "\"to\"",
        "\"keyword subject to incomplete\"",
        "\"subj\"",
        "\"to\"",
        "\"keyword subj to incomplete\"",
        "\"invalid use of reserved keyword %s\"",
        "\"symbolic name missing where expected\"",
        "\"%s multiply declared\"",
        "\"colon missing where expected\"",
        "\"expression following colon has invalid type\"",
        "\"strict inequality not allowed\"",
        "\"constraint must be equality or inequality\"",
        "\"expression following %s has invalid type\"",
        "\"double inequality must be ... <= ... <= ... or \"",
        "\"... >= ... >= ...\"",
        "\"leftmost expression in double inequality cannot\"",
        "\" be linear form\"",
        "\"rightmost expression in double inequality const\"",
        "\"raint has invalid type\"",
        "\"rightmost expression in double inequality canno\"",
        "\"t be linear form\"",
        "\"syntax error in constraint statement\""
      ]
    },
    "objective_statement": {
      "start_point": [
        3845,
        0
      ],
      "end_point": [
        3917,
        1
      ],
      "strings": [
        "\"minimize\"",
        "\"maximize\"",
        "\"objective statement must precede solve statement\"",
        "\"invalid use of reserved keyword %s\"",
        "\"symbolic name missing where expected\"",
        "\"%s multiply declared\"",
        "\"colon missing where expected\"",
        "\"expression following colon has invalid type\"",
        "\"syntax error in objective statement\""
      ]
    },
    "table_statement": {
      "start_point": [
        3954,
        0
      ],
      "end_point": [
        4229,
        1
      ],
      "strings": [
        "\"table\"",
        "\"invalid use of reserved keyword %s\"",
        "\"symbolic name missing where expected\"",
        "\"%s multiply declared\"",
        "\"OUT\"",
        "\"keyword OUT missing where expected\"",
        "\"IN\"",
        "\"keyword IN missing where expected\"",
        "\"argument expression missing where expected\"",
        "\"argument expression has invalid type\"",
        "\"colon missing where expected\"",
        "\"%s not defined\"",
        "\"%s not a set\"",
        "\"%s needs no data\"",
        "\"%s must be a simple set\"",
        "\"delimiter <- missing where expected\"",
        "\"invalid use of reserved keyword %s\"",
        "\"field list missing where expected\"",
        "\"invalid use of reserved keyword %s\"",
        "\"field name missing where expected\"",
        "\"syntax error in field list\"",
        "\"there must be %d field%s rather than %d\"",
        "\"\"",
        "\"s\"",
        "\"invalid use of reserved keyword %s\"",
        "\"parameter name missing where expected\"",
        "\"%s not defined\"",
        "\"%s not a parameter\"",
        "\"%s must have %d subscript%s rather than %d\"",
        "\"\"",
        "\"s\"",
        "\"%s needs no data\"",
        "\"invalid use of reserved keyword %s\"",
        "\"field name missing where expected\"",
        "\"expression missing where expected\"",
        "\"invalid use of reserved keyword %s\"",
        "\"field name missing where expected\"",
        "\"field name required\"",
        "\"syntax error in output list\"",
        "\"syntax error in table statement\""
      ]
    },
    "solve_statement": {
      "start_point": [
        4241,
        0
      ],
      "end_point": [
        4252,
        1
      ],
      "strings": [
        "\"solve\"",
        "\"at most one solve statement allowed\"",
        "\"syntax error in solve statement\""
      ]
    },
    "check_statement": {
      "start_point": [
        4265,
        0
      ],
      "end_point": [
        4295,
        1
      ],
      "strings": [
        "\"check\"",
        "\"colon missing where expected\"",
        "\"expression has invalid type\"",
        "\"syntax error in check statement\""
      ]
    },
    "display_statement": {
      "start_point": [
        4320,
        0
      ],
      "end_point": [
        4410,
        1
      ],
      "strings": [
        "\"display\"",
        "\"%s not defined\"",
        "\"invalid reference to variable %s above\"",
        "\" solve statement\"",
        "\"invalid reference to %s %s above solve\"",
        "\" statement\"",
        "\"constraint\"",
        "\"objective\"",
        "\"syntax error in display statement\""
      ]
    },
    "printf_statement": {
      "start_point": [
        4431,
        0
      ],
      "end_point": [
        4504,
        1
      ],
      "strings": [
        "\"printf\"",
        "\"colon missing where expected\"",
        "\"format expression has invalid type\"",
        "\"only numeric, symbolic, or logical expression a\"",
        "\"llowed\"",
        "\"file name expression has invalid type\"",
        "\"syntax error in printf statement\""
      ]
    },
    "for_statement": {
      "start_point": [
        4521,
        0
      ],
      "end_point": [
        4561,
        1
      ],
      "strings": [
        "\"for\"",
        "\"indexing expression missing where expected\""
      ]
    },
    "end_statement": {
      "start_point": [
        4570,
        0
      ],
      "end_point": [
        4587,
        1
      ],
      "strings": [
        "\"end\"",
        "\"end\"",
        "\"no semicolon following end statement; missing\"",
        "\" semicolon inserted\"",
        "\"unexpected end of file; missing end statement in\"",
        "\"serted\"",
        "\"some text detected beyond end statement; text ig\"",
        "\"nored\""
      ]
    },
    "simple_statement": {
      "start_point": [
        4607,
        0
      ],
      "end_point": [
        4686,
        1
      ],
      "strings": [
        "\"set\"",
        "\"set statement not allowed here\"",
        "\"param\"",
        "\"parameter statement not allowed here\"",
        "\"var\"",
        "\"variable statement not allowed here\"",
        "\"subject\"",
        "\"subj\"",
        "\"constraint statement not allowed here\"",
        "\"minimize\"",
        "\"maximize\"",
        "\"objective statement not allowed here\"",
        "\"table statement not allowed here\"",
        "\"solve statement not allowed here\"",
        "\"constraint statement not allowed here\"",
        "\"invalid use of reserved keyword %s\""
      ]
    },
    "model_section": {
      "start_point": [
        4699,
        0
      ],
      "end_point": [
        4715,
        1
      ],
      "strings": [
        "\"data\"",
        "\"end\""
      ]
    }
  },
  "glpk/glpk-4.65/src/mpl/mpl2.c": {
    "create_slice": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "expand_slice": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "slice_dimen": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "slice_arity": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "fake_slice": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "delete_slice": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "is_number": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "is_symbol": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "is_literal": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "read_number": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "read_symbol": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "read_slice": {
      "start_point": [
        221,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": [
        "\"%s cannot be subscripted\"",
        "\"number, symbol, or asterisk missing where expec\"",
        "\"ted\"",
        "\"syntax error in slice\"",
        "\"%s must have %d subscript%s, not %d\"",
        "\"\"",
        "\"s\"",
        "\"%s has dimension %d, not %d\""
      ]
    },
    "select_set": {
      "start_point": [
        290,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"%s not a set\"",
        "\"%s needs no data\""
      ]
    },
    "simple_format": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        374,
        1
      ],
      "strings": [
        "\"one item missing in data group beginning \"",
        "\"with %s\"",
        "\"%d items missing in data group beginning \"",
        "\"with %s\""
      ]
    },
    "matrix_format": {
      "start_point": [
        399,
        0
      ],
      "end_point": [
        486,
        1
      ],
      "strings": [
        "\"number, symbol, or := missing where expected\"",
        "\"+\"",
        "\"-\"",
        "\"one item missing in data group beginning \"",
        "\"with %s\"",
        "\"%d items missing in data group beginning \"",
        "\"with %s\""
      ]
    },
    "set_data": {
      "start_point": [
        506,
        0
      ],
      "end_point": [
        628,
        1
      ],
      "strings": [
        "\"set\"",
        "\"set name missing where expected\"",
        "\"%s cannot be subscripted\"",
        "\"number or symbol missing where expected\"",
        "\"syntax error in subscript list\"",
        "\"%s must have %d subscript%s rather than %d\"",
        "\"\"",
        "\"s\"",
        "\"%s must be subscripted\"",
        "\"%s%s already defined\"",
        "\"tr\"",
        "\"slice currently used must specify 2 asterisk\"",
        "\"s, not %d\"",
        "\"tr\"",
        "\"transpose indicator (tr) incomplete\"",
        "\"syntax error in set data block\""
      ]
    },
    "select_parameter": {
      "start_point": [
        636,
        0
      ],
      "end_point": [
        653,
        1
      ],
      "strings": [
        "\"%s not a parameter\"",
        "\"%s needs no data\"",
        "\"%s already provided with data\""
      ]
    },
    "set_default": {
      "start_point": [
        660,
        0
      ],
      "end_point": [
        673,
        1
      ],
      "strings": [
        "\"default value for %s already specified in model se\"",
        "\"ction\""
      ]
    },
    "read_value": {
      "start_point": [
        682,
        0
      ],
      "end_point": [
        712,
        1
      ],
      "strings": [
        "\"%s%s already defined\"",
        "\"%s requires numeric data\""
      ]
    },
    "plain_format": {
      "start_point": [
        730,
        0
      ],
      "end_point": [
        773,
        1
      ],
      "strings": [
        "\"%d items missing in data group beginning wit\"",
        "\"h %s\"",
        "\"one item missing in data group beginning with %s\""
      ]
    },
    "tabular_format": {
      "start_point": [
        798,
        0
      ],
      "end_point": [
        878,
        1
      ],
      "strings": [
        "\"number, symbol, or := missing where expected\"",
        "\".\"",
        "\"one item missing in data group beginning \"",
        "\"with %s\"",
        "\"%d items missing in data group beginning \"",
        "\"with %s\""
      ]
    },
    "tabbing_format": {
      "start_point": [
        905,
        0
      ],
      "end_point": [
        1035,
        1
      ],
      "strings": [
        "\"%s must be a simple set\"",
        "\"%s already defined\"",
        "\"parameter name or := missing where expected\"",
        "\"%s not a subscripted parameter\"",
        "\"%s has dimension %d while %s has dimension %d\"",
        "\"at least one parameter name required\"",
        "\"%d items missing in data group beginning wit\"",
        "\"h %s\"",
        "\".\"",
        "\"one item missing in data group beginning \"",
        "\"with %s\"",
        "\"%d items missing in data group beginning \"",
        "\"with %s\""
      ]
    },
    "parameter_data": {
      "start_point": [
        1058,
        0
      ],
      "end_point": [
        1174,
        1
      ],
      "strings": [
        "\"param\"",
        "\"default\"",
        "\"default value missing where expected\"",
        "\"colon missing where expected\"",
        "\"symbol, number, or semicolon missing where expe\"",
        "\"cted\"",
        "\"parameter name missing where expected\"",
        "\"default\"",
        "\"default value missing where expected\"",
        "\"%s not a subscripted parameter\"",
        "\"slice currently used must specify 2 asterisk\"",
        "\"s, not %d\"",
        "\"tr\"",
        "\"transpose indicator (tr) incomplete\"",
        "\"syntax error in parameter data block\""
      ]
    },
    "data_section": {
      "start_point": [
        1189,
        0
      ],
      "end_point": [
        1199,
        1
      ],
      "strings": [
        "\"end\"",
        "\"set\"",
        "\"param\"",
        "\"syntax error in data section\""
      ]
    }
  },
  "glpk/glpk-4.65/src/mpl/mpl3.c": {
    "fp_add": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": [
        "\"%.*g + %.*g; floating-point overflow\""
      ]
    },
    "fp_sub": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"%.*g - %.*g; floating-point overflow\""
      ]
    },
    "fp_less": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": [
        "\"%.*g less %.*g; floating-point overflow\""
      ]
    },
    "fp_mul": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"%.*g * %.*g; floating-point overflow\""
      ]
    },
    "fp_div": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"%.*g / %.*g; floating-point zero divide\"",
        "\"%.*g / %.*g; floating-point overflow\""
      ]
    },
    "fp_idiv": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"%.*g div %.*g; floating-point zero divide\"",
        "\"%.*g div %.*g; floating-point overflow\""
      ]
    },
    "fp_mod": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "fp_power": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": [
        "\"%.*g ** %.*g; result undefined\"",
        "\"%.*g ** %.*g; floating-point overflow\""
      ]
    },
    "fp_exp": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": [
        "\"exp(%.*g); floating-point overflow\""
      ]
    },
    "fp_log": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": [
        "\"log(%.*g); non-positive argument\""
      ]
    },
    "fp_log10": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": [
        "\"log10(%.*g); non-positive argument\""
      ]
    },
    "fp_sqrt": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": [
        "\"sqrt(%.*g); negative argument\""
      ]
    },
    "fp_sin": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": [
        "\"sin(%.*g); argument too large\""
      ]
    },
    "fp_cos": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": [
        "\"cos(%.*g); argument too large\""
      ]
    },
    "fp_tan": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"tan(%.*g); argument too large\""
      ]
    },
    "fp_atan": {
      "start_point": [
        244,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    },
    "fp_atan2": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        257,
        1
      ],
      "strings": []
    },
    "fp_round": {
      "start_point": [
        269,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": [
        "\"round(%.*g, %.*g); non-integer second argument\""
      ]
    },
    "fp_trunc": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": [
        "\"trunc(%.*g, %.*g); non-integer second argument\""
      ]
    },
    "fp_irand224": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        327,
        1
      ],
      "strings": []
    },
    "fp_uniform01": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        340,
        1
      ],
      "strings": []
    },
    "fp_uniform": {
      "start_point": [
        348,
        0
      ],
      "end_point": [
        360,
        1
      ],
      "strings": [
        "\"Uniform(%.*g, %.*g); invalid range\""
      ]
    },
    "fp_normal01": {
      "start_point": [
        371,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": []
    },
    "fp_normal": {
      "start_point": [
        390,
        0
      ],
      "end_point": [
        398,
        1
      ],
      "strings": []
    },
    "create_symbol_num": {
      "start_point": [
        565,
        0
      ],
      "end_point": [
        571,
        1
      ],
      "strings": []
    },
    "create_symbol_str": {
      "start_point": [
        579,
        0
      ],
      "end_point": [
        589,
        1
      ],
      "strings": []
    },
    "copy_symbol": {
      "start_point": [
        596,
        0
      ],
      "end_point": [
        612,
        1
      ],
      "strings": []
    },
    "compare_symbols": {
      "start_point": [
        627,
        0
      ],
      "end_point": [
        643,
        1
      ],
      "strings": []
    },
    "delete_symbol": {
      "start_point": [
        650,
        0
      ],
      "end_point": [
        658,
        1
      ],
      "strings": []
    },
    "format_symbol": {
      "start_point": [
        669,
        0
      ],
      "end_point": [
        708,
        1
      ],
      "strings": [
        "\"%.*g\"",
        "\"+-._\"",
        "\"...\""
      ]
    },
    "concat_symbols": {
      "start_point": [
        717,
        0
      ],
      "end_point": [
        743,
        1
      ],
      "strings": [
        "\"%.*g\"",
        "\"%.*g\"",
        "\"%s & %s; resultant symbol exceeds %d characters\""
      ]
    },
    "create_tuple": {
      "start_point": [
        755,
        0
      ],
      "end_point": [
        760,
        1
      ],
      "strings": []
    },
    "expand_tuple": {
      "start_point": [
        768,
        0
      ],
      "end_point": [
        787,
        1
      ],
      "strings": []
    },
    "tuple_dimen": {
      "start_point": [
        795,
        0
      ],
      "end_point": [
        804,
        1
      ],
      "strings": []
    },
    "copy_tuple": {
      "start_point": [
        811,
        0
      ],
      "end_point": [
        829,
        1
      ],
      "strings": []
    },
    "compare_tuples": {
      "start_point": [
        845,
        0
      ],
      "end_point": [
        863,
        1
      ],
      "strings": []
    },
    "build_subtuple": {
      "start_point": [
        871,
        0
      ],
      "end_point": [
        884,
        1
      ],
      "strings": []
    },
    "delete_tuple": {
      "start_point": [
        891,
        0
      ],
      "end_point": [
        904,
        1
      ],
      "strings": []
    },
    "format_tuple": {
      "start_point": [
        915,
        0
      ],
      "end_point": [
        946,
        1
      ],
      "strings": [
        "\"...\""
      ]
    },
    "create_elemset": {
      "start_point": [
        958,
        0
      ],
      "end_point": [
        963,
        1
      ],
      "strings": []
    },
    "find_tuple": {
      "start_point": [
        973,
        0
      ],
      "end_point": [
        982,
        1
      ],
      "strings": []
    },
    "add_tuple": {
      "start_point": [
        995,
        0
      ],
      "end_point": [
        1007,
        1
      ],
      "strings": []
    },
    "check_then_add": {
      "start_point": [
        1015,
        0
      ],
      "end_point": [
        1024,
        1
      ],
      "strings": [
        "\"duplicate tuple %s detected\""
      ]
    },
    "copy_elemset": {
      "start_point": [
        1031,
        0
      ],
      "end_point": [
        1044,
        1
      ],
      "strings": []
    },
    "delete_elemset": {
      "start_point": [
        1051,
        0
      ],
      "end_point": [
        1059,
        1
      ],
      "strings": []
    },
    "arelset_size": {
      "start_point": [
        1073,
        0
      ],
      "end_point": [
        1099,
        1
      ],
      "strings": [
        "\"%.*g .. %.*g by %.*g; zero stride not allowed\"",
        "\"%.*g .. %.*g by %.*g; set too large\""
      ]
    },
    "arelset_member": {
      "start_point": [
        1117,
        0
      ],
      "end_point": [
        1120,
        1
      ],
      "strings": []
    },
    "create_arelset": {
      "start_point": [
        1132,
        0
      ],
      "end_point": [
        1152,
        1
      ],
      "strings": []
    },
    "set_union": {
      "start_point": [
        1163,
        0
      ],
      "end_point": [
        1182,
        1
      ],
      "strings": []
    },
    "set_diff": {
      "start_point": [
        1193,
        0
      ],
      "end_point": [
        1215,
        1
      ],
      "strings": []
    },
    "set_symdiff": {
      "start_point": [
        1226,
        0
      ],
      "end_point": [
        1254,
        1
      ],
      "strings": []
    },
    "set_inter": {
      "start_point": [
        1265,
        0
      ],
      "end_point": [
        1287,
        1
      ],
      "strings": []
    },
    "set_cross": {
      "start_point": [
        1298,
        0
      ],
      "end_point": [
        1325,
        1
      ],
      "strings": []
    },
    "constant_term": {
      "start_point": [
        1342,
        0
      ],
      "end_point": [
        1353,
        1
      ],
      "strings": []
    },
    "single_variable": {
      "start_point": [
        1361,
        0
      ],
      "end_point": [
        1372,
        1
      ],
      "strings": []
    },
    "copy_formula": {
      "start_point": [
        1379,
        0
      ],
      "end_point": [
        1397,
        1
      ],
      "strings": []
    },
    "delete_formula": {
      "start_point": [
        1404,
        0
      ],
      "end_point": [
        1415,
        1
      ],
      "strings": []
    },
    "linear_comb": {
      "start_point": [
        1427,
        0
      ],
      "end_point": [
        1472,
        1
      ],
      "strings": []
    },
    "remove_constant": {
      "start_point": [
        1480,
        0
      ],
      "end_point": [
        1502,
        1
      ],
      "strings": []
    },
    "reduce_terms": {
      "start_point": [
        1509,
        0
      ],
      "end_point": [
        1536,
        1
      ],
      "strings": []
    },
    "delete_value": {
      "start_point": [
        1555,
        0
      ],
      "end_point": [
        1593,
        1
      ],
      "strings": []
    },
    "create_array": {
      "start_point": [
        1618,
        0
      ],
      "end_point": [
        1637,
        1
      ],
      "strings": []
    },
    "compare_member_tuples": {
      "start_point": [
        1647,
        0
      ],
      "end_point": [
        1652,
        1
      ],
      "strings": []
    },
    "find_member": {
      "start_point": [
        1654,
        0
      ],
      "end_point": [
        1684,
        1
      ],
      "strings": []
    },
    "add_member": {
      "start_point": [
        1701,
        0
      ],
      "end_point": [
        1727,
        1
      ],
      "strings": []
    },
    "delete_array": {
      "start_point": [
        1738,
        0
      ],
      "end_point": [
        1765,
        1
      ],
      "strings": []
    },
    "assign_dummy_index": {
      "start_point": [
        1778,
        0
      ],
      "end_point": [
        1814,
        1
      ],
      "strings": []
    },
    "update_dummy_indices": {
      "start_point": [
        1823,
        0
      ],
      "end_point": [
        1838,
        1
      ],
      "strings": []
    },
    "enter_domain_block": {
      "start_point": [
        1872,
        0
      ],
      "end_point": [
        1911,
        1
      ],
      "strings": []
    },
    "eval_domain_func": {
      "start_point": [
        1958,
        0
      ],
      "end_point": [
        2033,
        1
      ],
      "strings": []
    },
    "eval_within_domain": {
      "start_point": [
        2035,
        0
      ],
      "end_point": [
        2060,
        1
      ],
      "strings": []
    },
    "loop_domain_func": {
      "start_point": [
        2094,
        0
      ],
      "end_point": [
        2212,
        1
      ],
      "strings": []
    },
    "loop_within_domain": {
      "start_point": [
        2214,
        0
      ],
      "end_point": [
        2233,
        1
      ],
      "strings": []
    },
    "out_of_domain": {
      "start_point": [
        2241,
        0
      ],
      "end_point": [
        2251,
        1
      ],
      "strings": [
        "\"%s%s out of domain\""
      ]
    },
    "get_domain_tuple": {
      "start_point": [
        2264,
        0
      ],
      "end_point": [
        2284,
        1
      ],
      "strings": []
    },
    "clean_domain": {
      "start_point": [
        2292,
        0
      ],
      "end_point": [
        2313,
        1
      ],
      "strings": []
    },
    "check_elem_set": {
      "start_point": [
        2327,
        0
      ],
      "end_point": [
        2352,
        1
      ],
      "strings": [
        "\"%s%s contains %s which not within specified \"",
        "\"set; see (%d)\""
      ]
    },
    "take_member_set": {
      "start_point": [
        2362,
        0
      ],
      "end_point": [
        2395,
        1
      ],
      "strings": [
        "\"no value for %s%s\""
      ]
    },
    "eval_set_func": {
      "start_point": [
        2419,
        0
      ],
      "end_point": [
        2432,
        1
      ],
      "strings": []
    },
    "saturate_set": {
      "start_point": [
        2435,
        0
      ],
      "end_point": [
        2492,
        1
      ],
      "strings": [
        "\"Generating %s...\\n\""
      ]
    },
    "eval_member_set": {
      "start_point": [
        2495,
        0
      ],
      "end_point": [
        2542,
        1
      ],
      "strings": []
    },
    "whole_set_func": {
      "start_point": [
        2550,
        0
      ],
      "end_point": [
        2557,
        1
      ],
      "strings": []
    },
    "eval_whole_set": {
      "start_point": [
        2559,
        0
      ],
      "end_point": [
        2562,
        1
      ],
      "strings": []
    },
    "clean_set": {
      "start_point": [
        2570,
        0
      ],
      "end_point": [
        2589,
        1
      ],
      "strings": []
    },
    "check_value_num": {
      "start_point": [
        2603,
        0
      ],
      "end_point": [
        2678,
        1
      ],
      "strings": [
        "\"%s%s = %.*g not integer\"",
        "\"%s%s = %.*g not binary\"",
        "\"<\"",
        "\"%s%s = %.*g not %s %.*g; see (%d)\"",
        "\"<=\"",
        "\"=\"",
        "\">=\"",
        "\">\"",
        "\"<>\"",
        "\"%s%s = %.*g not in specified set; see (%d)\""
      ]
    },
    "take_member_num": {
      "start_point": [
        2688,
        0
      ],
      "end_point": [
        2729,
        1
      ],
      "strings": [
        "\"cannot convert %s to floating-point number\"",
        "\"no value for %s%s\""
      ]
    },
    "eval_num_func": {
      "start_point": [
        2753,
        0
      ],
      "end_point": [
        2766,
        1
      ],
      "strings": []
    },
    "eval_member_num": {
      "start_point": [
        2768,
        0
      ],
      "end_point": [
        2811,
        1
      ],
      "strings": []
    },
    "check_value_sym": {
      "start_point": [
        2821,
        0
      ],
      "end_point": [
        2916,
        1
      ],
      "strings": [
        "\"%s%s = %s not < %s\"",
        "\"%s%s = %s not <= %s\"",
        "\"%s%s = %s not = %s\"",
        "\"%s%s = %s not >= %s\"",
        "\"%s%s = %s not > %s\"",
        "\"%s%s = %s not <> %s\"",
        "\"%s%s = %s not in specified set; see (%d)\""
      ]
    },
    "take_member_sym": {
      "start_point": [
        2926,
        0
      ],
      "end_point": [
        2964,
        1
      ],
      "strings": [
        "\"no value for %s%s\""
      ]
    },
    "eval_sym_func": {
      "start_point": [
        2988,
        0
      ],
      "end_point": [
        3001,
        1
      ],
      "strings": []
    },
    "eval_member_sym": {
      "start_point": [
        3003,
        0
      ],
      "end_point": [
        3045,
        1
      ],
      "strings": []
    },
    "whole_par_func": {
      "start_point": [
        3053,
        0
      ],
      "end_point": [
        3071,
        1
      ],
      "strings": []
    },
    "eval_whole_par": {
      "start_point": [
        3073,
        0
      ],
      "end_point": [
        3076,
        1
      ],
      "strings": []
    },
    "clean_parameter": {
      "start_point": [
        3084,
        0
      ],
      "end_point": [
        3110,
        1
      ],
      "strings": []
    },
    "take_member_var": {
      "start_point": [
        3125,
        0
      ],
      "end_point": [
        3169,
        1
      ],
      "strings": []
    },
    "eval_var_func": {
      "start_point": [
        3187,
        0
      ],
      "end_point": [
        3192,
        1
      ],
      "strings": []
    },
    "eval_member_var": {
      "start_point": [
        3194,
        0
      ],
      "end_point": [
        3210,
        1
      ],
      "strings": []
    },
    "whole_var_func": {
      "start_point": [
        3218,
        0
      ],
      "end_point": [
        3225,
        1
      ],
      "strings": []
    },
    "eval_whole_var": {
      "start_point": [
        3227,
        0
      ],
      "end_point": [
        3230,
        1
      ],
      "strings": []
    },
    "clean_variable": {
      "start_point": [
        3238,
        0
      ],
      "end_point": [
        3251,
        1
      ],
      "strings": []
    },
    "take_member_con": {
      "start_point": [
        3266,
        0
      ],
      "end_point": [
        3356,
        1
      ],
      "strings": []
    },
    "eval_con_func": {
      "start_point": [
        3374,
        0
      ],
      "end_point": [
        3379,
        1
      ],
      "strings": []
    },
    "eval_member_con": {
      "start_point": [
        3381,
        0
      ],
      "end_point": [
        3397,
        1
      ],
      "strings": []
    },
    "whole_con_func": {
      "start_point": [
        3405,
        0
      ],
      "end_point": [
        3412,
        1
      ],
      "strings": []
    },
    "eval_whole_con": {
      "start_point": [
        3414,
        0
      ],
      "end_point": [
        3417,
        1
      ],
      "strings": []
    },
    "clean_constraint": {
      "start_point": [
        3425,
        0
      ],
      "end_point": [
        3442,
        1
      ],
      "strings": []
    },
    "iter_num_func": {
      "start_point": [
        3462,
        0
      ],
      "end_point": [
        3489,
        1
      ],
      "strings": []
    },
    "eval_numeric": {
      "start_point": [
        3491,
        0
      ],
      "end_point": [
        3907,
        1
      ],
      "strings": [
        "\"cannot convert %s to floating-point numbe\"",
        "\"r\"",
        "\"cannot convert %s to floating-point nu\"",
        "\"mber\"",
        "\"%.*g\"",
        "\"%.*g\"",
        "\"%.*g\"",
        "\"min{} over empty set; result undefined\"",
        "\"max{} over empty set; result undefined\""
      ]
    },
    "eval_symbolic": {
      "start_point": [
        3915,
        0
      ],
      "end_point": [
        4033,
        1
      ],
      "strings": [
        "\"%.*g\"",
        "\"substr('...', %.*g); non-integer secon\"",
        "\"d argument\"",
        "\"substr('...', %.*g); substring out of \"",
        "\"range\"",
        "\"substr('...', %.*g, %.*g); non-integer\"",
        "\" second and/or third argument\"",
        "\"substr('...', %.*g, %.*g); substring o\"",
        "\"ut of range\"",
        "\"%.*g\""
      ]
    },
    "iter_log_func": {
      "start_point": [
        4049,
        0
      ],
      "end_point": [
        4069,
        1
      ],
      "strings": []
    },
    "eval_logical": {
      "start_point": [
        4071,
        0
      ],
      "end_point": [
        4284,
        1
      ],
      "strings": []
    },
    "eval_tuple": {
      "start_point": [
        4292,
        0
      ],
      "end_point": [
        4332,
        1
      ],
      "strings": []
    },
    "iter_set_func": {
      "start_point": [
        4348,
        0
      ],
      "end_point": [
        4374,
        1
      ],
      "strings": []
    },
    "eval_elemset": {
      "start_point": [
        4376,
        0
      ],
      "end_point": [
        4488,
        1
      ],
      "strings": []
    },
    "null_func": {
      "start_point": [
        4499,
        0
      ],
      "end_point": [
        4504,
        1
      ],
      "strings": []
    },
    "is_member": {
      "start_point": [
        4506,
        0
      ],
      "end_point": [
        4642,
        1
      ],
      "strings": [
        "\"implementation restriction; in/within setof{} n\"",
        "\"ot allowed\""
      ]
    },
    "iter_form_func": {
      "start_point": [
        4660,
        0
      ],
      "end_point": [
        4699,
        1
      ],
      "strings": []
    },
    "eval_formula": {
      "start_point": [
        4701,
        0
      ],
      "end_point": [
        4819,
        1
      ],
      "strings": []
    },
    "clean_code": {
      "start_point": [
        4827,
        0
      ],
      "end_point": [
        4967,
        1
      ],
      "strings": []
    },
    "mpl_tab_num_args": {
      "start_point": [
        4974,
        0
      ],
      "end_point": [
        4977,
        1
      ],
      "strings": []
    },
    "mpl_tab_get_arg": {
      "start_point": [
        4979,
        0
      ],
      "end_point": [
        4983,
        1
      ],
      "strings": []
    },
    "mpl_tab_num_flds": {
      "start_point": [
        4985,
        0
      ],
      "end_point": [
        4988,
        1
      ],
      "strings": []
    },
    "mpl_tab_get_name": {
      "start_point": [
        4990,
        0
      ],
      "end_point": [
        4994,
        1
      ],
      "strings": []
    },
    "mpl_tab_get_type": {
      "start_point": [
        4996,
        0
      ],
      "end_point": [
        5000,
        1
      ],
      "strings": []
    },
    "mpl_tab_get_num": {
      "start_point": [
        5002,
        0
      ],
      "end_point": [
        5007,
        1
      ],
      "strings": []
    },
    "mpl_tab_get_str": {
      "start_point": [
        5009,
        0
      ],
      "end_point": [
        5015,
        1
      ],
      "strings": []
    },
    "mpl_tab_set_num": {
      "start_point": [
        5017,
        0
      ],
      "end_point": [
        5024,
        1
      ],
      "strings": []
    },
    "mpl_tab_set_str": {
      "start_point": [
        5026,
        0
      ],
      "end_point": [
        5035,
        1
      ],
      "strings": []
    },
    "write_func": {
      "start_point": [
        5037,
        0
      ],
      "end_point": [
        5077,
        1
      ],
      "strings": []
    },
    "execute_table": {
      "start_point": [
        5079,
        0
      ],
      "end_point": [
        5291,
        1
      ],
      "strings": [
        "\"%.*g\"",
        "\"%s already provided with data\"",
        "\"%s already provided with data\"",
        "\"field %s missing in input table\"",
        "\"%s%s already defined\"",
        "\"%s requires numeric data\""
      ]
    },
    "free_dca": {
      "start_point": [
        5293,
        0
      ],
      "end_point": [
        5319,
        1
      ],
      "strings": []
    },
    "clean_table": {
      "start_point": [
        5321,
        0
      ],
      "end_point": [
        5342,
        1
      ],
      "strings": []
    },
    "check_func": {
      "start_point": [
        5354,
        0
      ],
      "end_point": [
        5361,
        1
      ],
      "strings": [
        "\"check%s failed\""
      ]
    },
    "execute_check": {
      "start_point": [
        5363,
        0
      ],
      "end_point": [
        5366,
        1
      ],
      "strings": []
    },
    "clean_check": {
      "start_point": [
        5374,
        0
      ],
      "end_point": [
        5380,
        1
      ],
      "strings": []
    },
    "display_set": {
      "start_point": [
        5387,
        0
      ],
      "end_point": [
        5397,
        1
      ],
      "strings": [
        "\"%s%s%s\\n\"",
        "\" is empty\"",
        "\":\"",
        "\"   %s\\n\""
      ]
    },
    "display_par": {
      "start_point": [
        5399,
        0
      ],
      "end_point": [
        5418,
        1
      ],
      "strings": [
        "\"%s%s = %.*g\\n\"",
        "\"%s%s = %s\\n\""
      ]
    },
    "display_var": {
      "start_point": [
        5421,
        0
      ],
      "end_point": [
        5448,
        1
      ],
      "strings": [
        "\"%s%s.val = %.*g\\n\"",
        "\"%s%s.lb = %.*g\\n\"",
        "\"%s%s.ub = %.*g\\n\"",
        "\"%s%s.status = %d\\n\"",
        "\"%s%s.dual = %.*g\\n\""
      ]
    },
    "display_con": {
      "start_point": [
        5452,
        0
      ],
      "end_point": [
        5479,
        1
      ],
      "strings": [
        "\"%s%s.val = %.*g\\n\"",
        "\"%s%s.lb = %.*g\\n\"",
        "\"%s%s.ub = %.*g\\n\"",
        "\"%s%s.status = %d\\n\"",
        "\"%s%s.dual = %.*g\\n\""
      ]
    },
    "display_memb": {
      "start_point": [
        5482,
        0
      ],
      "end_point": [
        5527,
        1
      ],
      "strings": []
    },
    "display_code": {
      "start_point": [
        5529,
        0
      ],
      "end_point": [
        5596,
        1
      ],
      "strings": [
        "\"%.*g\\n\"",
        "\"%s\\n\"",
        "\"%s\\n\"",
        "\"true\"",
        "\"false\"",
        "\"%s\\n\"",
        "\"set is empty\\n\"",
        "\"   %s\\n\"",
        "\"linear form is empty\\n\"",
        "\"   %.*g\\n\"",
        "\"   %.*g %s%s\\n\""
      ]
    },
    "display_func": {
      "start_point": [
        5598,
        0
      ],
      "end_point": [
        5700,
        1
      ],
      "strings": [
        "\"%s = %s\\n\"",
        "\"%s has empty content\\n\"",
        "\"%s has empty content\\n\"",
        "\"%s has empty content\\n\"",
        "\"%s has empty content\\n\""
      ]
    },
    "execute_display": {
      "start_point": [
        5702,
        0
      ],
      "end_point": [
        5705,
        1
      ],
      "strings": []
    },
    "clean_display": {
      "start_point": [
        5713,
        0
      ],
      "end_point": [
        5732,
        1
      ],
      "strings": []
    },
    "print_char": {
      "start_point": [
        5740,
        0
      ],
      "end_point": [
        5753,
        1
      ],
      "strings": []
    },
    "print_text": {
      "start_point": [
        5755,
        0
      ],
      "end_point": [
        5764,
        1
      ],
      "strings": []
    },
    "printf_func": {
      "start_point": [
        5767,
        0
      ],
      "end_point": [
        5894,
        1
      ],
      "strings": [
        "\"%.*g\"",
        "\"cannot convert %s to floating-point\"",
        "\" number\"",
        "\"cannot convert %.*g to integer\"",
        "\"%.*g\"",
        "\"T\"",
        "\"F\"",
        "\"%.*g\"",
        "\"format specifier missing or invalid\"",
        "\"invalid use of escape character \\\\ in format\"",
        "\" control string\""
      ]
    },
    "execute_printf": [
      {
        "start_point": [
          5897,
          0
        ],
        "end_point": [
          5900,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          5902,
          0
        ],
        "end_point": [
          5947,
          1
        ],
        "strings": [
          "\"%.*g\"",
          "\"a\"",
          "\"w\"",
          "\"unable to open '%s' for writing - %s\"",
          "\"writing error to '%s' - %s\""
        ]
      }
    ],
    "clean_printf": {
      "start_point": [
        5956,
        0
      ],
      "end_point": [
        5972,
        1
      ],
      "strings": []
    },
    "for_func": {
      "start_point": [
        5979,
        0
      ],
      "end_point": [
        5988,
        1
      ],
      "strings": []
    },
    "execute_for": {
      "start_point": [
        5990,
        0
      ],
      "end_point": [
        5993,
        1
      ],
      "strings": []
    },
    "clean_for": {
      "start_point": [
        6001,
        0
      ],
      "end_point": [
        6009,
        1
      ],
      "strings": []
    },
    "execute_statement": {
      "start_point": [
        6016,
        0
      ],
      "end_point": [
        6061,
        1
      ],
      "strings": [
        "\"Generating %s...\\n\"",
        "\"Reading %s...\\n\"",
        "\"Writing %s...\\n\"",
        "\"Checking (line %d)...\\n\"",
        "\"Display statement at line %d\\n\""
      ]
    },
    "clean_statement": {
      "start_point": [
        6069,
        0
      ],
      "end_point": [
        6097,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/mpl/mpl4.c": {
    "alloc_content": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "generate_model": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "build_problem": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    },
    "postsolve_model": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    },
    "clean_model": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": [
        "\"internal logic error: %d string segment(s) were lo\"",
        "\"st\"",
        "\"internal logic error: %d symbol(s) were lost\"",
        "\"internal logic error: %d n-tuple component(s) were\"",
        "\" lost\"",
        "\"internal logic error: %d array(s) were lost\"",
        "\"internal logic error: %d array member(s) were lost\"",
        "\"internal logic error: %d elemental variable(s) wer\"",
        "\"e lost\"",
        "\"internal logic error: %d linear term(s) were lost\"",
        "\"internal logic error: %d elemental constraint(s) w\"",
        "\"ere lost\""
      ]
    },
    "open_input": {
      "start_point": [
        271,
        0
      ],
      "end_point": [
        300,
        1
      ],
      "strings": [
        "\"r\"",
        "\"unable to open %s - %s\""
      ]
    },
    "read_char": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        319,
        1
      ],
      "strings": [
        "\"read error on %s - %s\""
      ]
    },
    "close_input": {
      "start_point": [
        326,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": []
    },
    "open_output": {
      "start_point": [
        340,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": [
        "\"<stdout>\"",
        "\"w\"",
        "\"unable to create %s - %s\""
      ]
    },
    "write_char": {
      "start_point": [
        361,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": [
        "\"%c\"",
        "\"%c\""
      ]
    },
    "write_text": {
      "start_point": [
        376,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": []
    },
    "flush_output": {
      "start_point": [
        392,
        0
      ],
      "end_point": [
        404,
        1
      ],
      "strings": [
        "\"write error on %s - %s\""
      ]
    },
    "error": {
      "start_point": [
        416,
        0
      ],
      "end_point": [
        444,
        1
      ],
      "strings": [
        "\"%s:%d: %s\\n\"",
        "\"(unknown)\"",
        "\"%s:%d: %s\\n\"",
        "\"(unknown)\""
      ]
    },
    "warning": {
      "start_point": [
        452,
        0
      ],
      "end_point": [
        477,
        1
      ],
      "strings": [
        "\"%s:%d: warning: %s\\n\"",
        "\"(unknown)\"",
        "\"%s:%d: warning: %s\\n\"",
        "\"(unknown)\""
      ]
    },
    "mpl_initialize": {
      "start_point": [
        496,
        0
      ],
      "end_point": [
        571,
        1
      ],
      "strings": []
    },
    "mpl_read_model": {
      "start_point": [
        610,
        0
      ],
      "end_point": [
        653,
        1
      ],
      "strings": [
        "\"mpl_read_model: invalid call sequence\\n\"",
        "\"mpl_read_model: no input filename specified\\n\"",
        "\"Reading model section from %s...\\n\"",
        "\"empty model section not allowed\"",
        "\"data\"",
        "\"data section ignored\"",
        "\"semicolon missing where expected\"",
        "\"Reading data section from %s...\\n\"",
        "\"%d line%s were read\\n\"",
        "\"\"",
        "\"s\""
      ]
    },
    "mpl_generate": {
      "start_point": [
        749,
        0
      ],
      "end_point": [
        765,
        1
      ],
      "strings": [
        "\"mpl_generate: invalid call sequence\\n\"",
        "\"Model has been successfully generated\\n\""
      ]
    },
    "mpl_get_prob_name": {
      "start_point": [
        787,
        0
      ],
      "end_point": [
        814,
        1
      ],
      "strings": [
        "\"mpl_get_prob_name: invalid call sequence\\n\"",
        "\"Unknown\""
      ]
    },
    "mpl_get_num_rows": {
      "start_point": [
        829,
        0
      ],
      "end_point": [
        833,
        1
      ],
      "strings": [
        "\"mpl_get_num_rows: invalid call sequence\\n\""
      ]
    },
    "mpl_get_num_cols": {
      "start_point": [
        848,
        0
      ],
      "end_point": [
        852,
        1
      ],
      "strings": [
        "\"mpl_get_num_cols: invalid call sequence\\n\""
      ]
    },
    "mpl_get_row_name": {
      "start_point": [
        867,
        0
      ],
      "end_point": [
        887,
        1
      ],
      "strings": [
        "\"mpl_get_row_name: invalid call sequence\\n\"",
        "\"mpl_get_row_name: i = %d; row number out of range\\n\"",
        "\"...\""
      ]
    },
    "mpl_get_row_kind": {
      "start_point": [
        906,
        0
      ],
      "end_point": [
        924,
        1
      ],
      "strings": [
        "\"mpl_get_row_kind: invalid call sequence\\n\"",
        "\"mpl_get_row_kind: i = %d; row number out of range\\n\""
      ]
    },
    "mpl_get_row_bnds": {
      "start_point": [
        965,
        0
      ],
      "end_point": [
        1003,
        1
      ],
      "strings": [
        "\"mpl_get_row_bnds: invalid call sequence\\n\"",
        "\"mpl_get_row_bnds: i = %d; row number out of range\\n\""
      ]
    },
    "mpl_get_mat_row": {
      "start_point": [
        1034,
        0
      ],
      "end_point": [
        1050,
        1
      ],
      "strings": [
        "\"mpl_get_mat_row: invalid call sequence\\n\"",
        "\"mpl_get_mat_row: i = %d; row number out of range\\n\""
      ]
    },
    "mpl_get_row_c0": {
      "start_point": [
        1068,
        0
      ],
      "end_point": [
        1082,
        1
      ],
      "strings": [
        "\"mpl_get_row_c0: invalid call sequence\\n\"",
        "\"mpl_get_row_c0: i = %d; row number out of range\\n\""
      ]
    },
    "mpl_get_col_name": {
      "start_point": [
        1097,
        0
      ],
      "end_point": [
        1117,
        1
      ],
      "strings": [
        "\"mpl_get_col_name: invalid call sequence\\n\"",
        "\"mpl_get_col_name: j = %d; column number out of range\\n\"",
        "\"...\""
      ]
    },
    "mpl_get_col_kind": {
      "start_point": [
        1142,
        0
      ],
      "end_point": [
        1160,
        1
      ],
      "strings": [
        "\"mpl_get_col_kind: invalid call sequence\\n\"",
        "\"mpl_get_col_kind: j = %d; column number out of range\\n\""
      ]
    },
    "mpl_get_col_bnds": {
      "start_point": [
        1201,
        0
      ],
      "end_point": [
        1239,
        1
      ],
      "strings": [
        "\"mpl_get_col_bnds: invalid call sequence\\n\"",
        "\"mpl_get_col_bnds: j = %d; column number out of range\\n\""
      ]
    },
    "mpl_has_solve_stmt": {
      "start_point": [
        1254,
        0
      ],
      "end_point": [
        1258,
        1
      ],
      "strings": [
        "\"mpl_has_solve_stmt: invalid call sequence\\n\""
      ]
    },
    "mpl_put_row_soln": {
      "start_point": [
        1261,
        0
      ],
      "end_point": [
        1270,
        1
      ],
      "strings": []
    },
    "mpl_put_col_soln": {
      "start_point": [
        1274,
        0
      ],
      "end_point": [
        1283,
        1
      ],
      "strings": []
    },
    "mpl_put_col_value": {
      "start_point": [
        1301,
        0
      ],
      "end_point": [
        1309,
        1
      ],
      "strings": [
        "\"mpl_put_col_value: invalid call sequence\\n\"",
        "\"mpl_put_col_value: j = %d; column number out of range\\n\""
      ]
    },
    "mpl_postsolve": {
      "start_point": [
        1338,
        0
      ],
      "end_point": [
        1350,
        1
      ],
      "strings": [
        "\"mpl_postsolve: invalid call sequence\\n\"",
        "\"Model has been successfully processed\\n\""
      ]
    },
    "mpl_terminate": {
      "start_point": [
        1365,
        0
      ],
      "end_point": [
        1423,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/mpl/mpl5.c": {
    "fn_gmtime": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"gmtime(); unable to obtain current calendar time\""
      ]
    },
    "error1": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": [
        "\"Input string passed to str2time:\\n\"",
        "\"%s\\n\"",
        "\"%*s\\n\"",
        "\"^\"",
        "\"Format string passed to str2time:\\n\"",
        "\"%s\\n\"",
        "\"%*s\\n\"",
        "\"^\"",
        "\"%s\""
      ]
    },
    "fn_str2time": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": [
        "\"month multiply specified\"",
        "\"abbreviated month name m\"",
        "\"issing or invalid\"",
        "\"day multiply specified\"",
        "\"day missing or invalid\"",
        "\"day out of range\"",
        "\"hour multiply specified\"",
        "\"hour missing or invalid\"",
        "\"hour out of range\"",
        "\"month multiply specified\"",
        "\"month missing or invalid\"",
        "\"month out of range\"",
        "\"minute multiply specifie\"",
        "\"d\"",
        "\"minute missing or invali\"",
        "\"d\"",
        "\"minute out of range\"",
        "\"second multiply specifie\"",
        "\"d\"",
        "\"second missing or invali\"",
        "\"d\"",
        "\"second out of range\"",
        "\"year multiply specified\"",
        "\"year missing or invalid\"",
        "\"year multiply specified\"",
        "\"year missing or invalid\"",
        "\"year out of range\"",
        "\"time zone offset multipl\"",
        "\"y specified\"",
        "\"time zone offset sign mi\"",
        "\"ssing\"",
        "\"time zone offset valu\"",
        "\"e incomplete or invalid\"",
        "\"time zone offset value o\"",
        "\"ut of range\"",
        "\"invalid conversion specifie\"",
        "\"r\"",
        "\"character mismatch\""
      ]
    },
    "error2": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": [
        "\"Format string passed to time2str:\\n\"",
        "\"%s\\n\"",
        "\"%*s\\n\"",
        "\"^\"",
        "\"%s\""
      ]
    },
    "weekday": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": []
    },
    "firstday": {
      "start_point": [
        301,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    },
    "fn_time2str": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        563,
        1
      ],
      "strings": [
        "\"time2str(%.*g,...); argument out of range\"",
        "\"%02d\"",
        "\"%02d\"",
        "\"%02d/%02d/%02d\"",
        "\"%2d\"",
        "\"%04d-%02d-%02d\"",
        "\"%02d\"",
        "\"%04d\"",
        "\"%02d\"",
        "\"%02d\"",
        "\"%03d\"",
        "\"%2d\"",
        "\"%2d\"",
        "\"%02d\"",
        "\"%02d\"",
        "\"AM\"",
        "\"PM\"",
        "\"am\"",
        "\"pm\"",
        "\"%02d:%02d:%02d %s\"",
        "\"AM\"",
        "\"PM\"",
        "\"%02d:%02d\"",
        "\"%02d\"",
        "\"%02d:%02d:%02d\"",
        "\"%d\"",
        "\"%02d\"",
        "\"%02d\"",
        "\"%d\"",
        "\"%02d\"",
        "\"%02d\"",
        "\"%04d\"",
        "\"invalid conversion specifier\"",
        "\"time2str; output string length exceeds %d chara\"",
        "\"cters\""
      ]
    }
  },
  "glpk/glpk-4.65/src/mpl/mpl6.c": {
    "read_char": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"%s:%d: read error - %s\\n\"",
        "\"%s:%d: warning: missing final end-of-line\\n\"",
        "\"%s:%d: invalid control character 0x%02X\\n\""
      ]
    },
    "read_field": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": [
        "\"EOF\"",
        "\"EOR\"",
        "\"%s:%d: empty field not allowed\\n\"",
        "\"%s:%d: empty record not allowed\\n\"",
        "\"%s:%d: invalid field\\n\"",
        "\"%s:%d: field too long\\n\"",
        "\"%s:%d: invalid use of single or double quote wi\"",
        "\"thin field\\n\""
      ]
    },
    "csv_open_file": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": [
        "\"csv_driver: file name not specified\\n\"",
        "\"r\"",
        "\"csv_driver: unable to open %s - %s\\n\"",
        "\"%s:%d: invalid field name\\n\"",
        "\"%s:%d: too many fields\\n\"",
        "\"RECNO\"",
        "\"w\"",
        "\"csv_driver: unable to create %s - %s\\n\"",
        "\"%s%c\""
      ]
    },
    "csv_read_record": {
      "start_point": [
        316,
        0
      ],
      "end_point": [
        375,
        1
      ],
      "strings": [
        "\"%s:%d: one field missing\\n\"",
        "\"%s:%d: %d fields missing\\n\"",
        "\"%s:%d: too many fields\\n\""
      ]
    },
    "csv_write_record": {
      "start_point": [
        377,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": [
        "\"%.*g\"",
        "\"%s:%d: write error - %s\\n\""
      ]
    },
    "csv_close_file": {
      "start_point": [
        417,
        0
      ],
      "end_point": [
        437,
        1
      ],
      "strings": [
        "\"%s:%d: write error - %s\\n\""
      ]
    },
    "read_byte": {
      "start_point": [
        475,
        0
      ],
      "end_point": [
        496,
        1
      ],
      "strings": [
        "\"%s:0x%X: read error - %s\\n\"",
        "\"%s:0x%X: unexpected end of file\\n\""
      ]
    },
    "read_header": {
      "start_point": [
        498,
        0
      ],
      "end_point": [
        579,
        1
      ],
      "strings": [
        "\"%s:0x%X: too many fields\\n\"",
        "\"%s:0x%X: invalid field name\\n\"",
        "\"%s:0x%X: invalid field type\\n\"",
        "\"%s:0x%X: invalid field length\\n\"",
        "\"%s:0x%X: field too long\\n\"",
        "\"%s:0x%X: invalid file header\\n\"",
        "\"RECNO\""
      ]
    },
    "parse_third_arg": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        647,
        1
      ],
      "strings": [
        "\"xBASE driver: field %s: specification missing\\n\"",
        "\"xBASE driver: field %s: invalid field type\\n\"",
        "\"xBASE driver: field %s: invalid field format\\n\"",
        "\"xBASE driver: field %s: invalid field length\\n\"",
        "\"xBASE driver: field %s: invalid field precision\"",
        "\"\\n\""
      ]
    },
    "write_byte": {
      "start_point": [
        649,
        0
      ],
      "end_point": [
        654,
        1
      ],
      "strings": []
    },
    "write_header": {
      "start_point": [
        656,
        0
      ],
      "end_point": [
        706,
        1
      ],
      "strings": []
    },
    "dbf_open_file": {
      "start_point": [
        708,
        0
      ],
      "end_point": [
        769,
        1
      ],
      "strings": [
        "\"xBASE driver: file name not specified\\n\"",
        "\"rb\"",
        "\"xBASE driver: unable to open %s - %s\\n\"",
        "\"xBASE driver: file format not specified\\n\"",
        "\"wb\"",
        "\"xBASE driver: unable to create %s - %s\\n\""
      ]
    },
    "dbf_read_record": {
      "start_point": [
        771,
        0
      ],
      "end_point": [
        822,
        1
      ],
      "strings": [
        "\"%s:0x%X: invalid record flag\\n\""
      ]
    },
    "dbf_write_record": {
      "start_point": [
        824,
        0
      ],
      "end_point": [
        878,
        1
      ],
      "strings": [
        "\"%.*g\"",
        "\"xBASE driver: field %s: cannot convert %.15s...\"",
        "\" to field format\\n\"",
        "\"xBASE driver: field %s: cannot convert %g to fi\"",
        "\"eld format\\n\"",
        "\"%*.*f\""
      ]
    },
    "dbf_close_file": {
      "start_point": [
        880,
        0
      ],
      "end_point": [
        922,
        1
      ],
      "strings": [
        "\"%s:0x%X: seek error - %s\\n\"",
        "\"%s:0x%X: write error - %s\\n\""
      ]
    },
    "mpl_tab_drv_open": {
      "start_point": [
        931,
        0
      ],
      "end_point": [
        959,
        1
      ],
      "strings": [
        "\"CSV\"",
        "\"xBASE\"",
        "\"ODBC\"",
        "\"iODBC\"",
        "\"MySQL\"",
        "\"Invalid table driver '%s'\\n\"",
        "\"error on opening table %s\""
      ]
    },
    "mpl_tab_drv_read": {
      "start_point": [
        961,
        0
      ],
      "end_point": [
        984,
        1
      ],
      "strings": [
        "\"error on reading data from table %s\""
      ]
    },
    "mpl_tab_drv_write": {
      "start_point": [
        986,
        0
      ],
      "end_point": [
        1009,
        1
      ],
      "strings": [
        "\"error on writing data to table %s\""
      ]
    },
    "mpl_tab_drv_close": {
      "start_point": [
        1011,
        0
      ],
      "end_point": [
        1036,
        1
      ],
      "strings": [
        "\"error on closing table %s\""
      ]
    }
  },
  "glpk/glpk-4.65/src/mpl/mplsql.c": {
    "args_concat": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": [
        "\" \""
      ]
    },
    "free_buffer": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "db_escaped_string_length": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "db_escape_string": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    },
    "db_generate_select_stmt": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": [
        "\"SELECT \"",
        "\", \"",
        "\" FROM \""
      ]
    },
    "db_generate_insert_stmt": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        296,
        1
      ],
      "strings": [
        "\"INSERT INTO \"",
        "\" ( \"",
        "\", \"",
        "\" ) VALUES ( \"",
        "\"?\"",
        "\", \"",
        "\" )\""
      ]
    },
    "db_iodbc_open": [
      {
        "start_point": [
          304,
          0
        ],
        "end_point": [
          309,
          1
        ],
        "strings": [
          "\"iODBC table driver not supported\\n\""
        ]
      },
      {
        "start_point": [
          669,
          0
        ],
        "end_point": [
          682,
          1
        ],
        "strings": [
          "\"Missing arguments in table statement.\\n\"",
          "\"Please, supply table driver, dsn, and query.\\n\""
        ]
      }
    ],
    "db_iodbc_read": {
      "start_point": [
        311,
        0
      ],
      "end_point": [
        315,
        1
      ],
      "strings": []
    },
    "db_iodbc_write": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        321,
        1
      ],
      "strings": []
    },
    "db_iodbc_close": [
      {
        "start_point": [
          323,
          0
        ],
        "end_point": [
          327,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1011,
          0
        ],
        "end_point": [
          1032,
          1
        ],
        "strings": []
      }
    ],
    "dl_SQLAllocHandle": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        378,
        1
      ],
      "strings": [
        "\"SQLAllocHandle\""
      ]
    },
    "dl_SQLBindCol": {
      "start_point": [
        380,
        0
      ],
      "end_point": [
        400,
        1
      ],
      "strings": [
        "\"SQLBindCol\""
      ]
    },
    "dl_SQLCloseCursor": {
      "start_point": [
        402,
        0
      ],
      "end_point": [
        412,
        1
      ],
      "strings": [
        "\"SQLCloseCursor\""
      ]
    },
    "dl_SQLDisconnect": {
      "start_point": [
        415,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": [
        "\"SQLDisconnect\""
      ]
    },
    "dl_SQLDriverConnect": {
      "start_point": [
        427,
        0
      ],
      "end_point": [
        452,
        1
      ],
      "strings": [
        "\"SQLDriverConnect\""
      ]
    },
    "dl_SQLEndTran": {
      "start_point": [
        454,
        0
      ],
      "end_point": [
        468,
        1
      ],
      "strings": [
        "\"SQLEndTran\""
      ]
    },
    "dl_SQLExecDirect": {
      "start_point": [
        470,
        0
      ],
      "end_point": [
        484,
        1
      ],
      "strings": [
        "\"SQLExecDirect\""
      ]
    },
    "dl_SQLFetch": {
      "start_point": [
        486,
        0
      ],
      "end_point": [
        496,
        1
      ],
      "strings": [
        "\"SQLFetch\""
      ]
    },
    "dl_SQLFreeHandle": {
      "start_point": [
        498,
        0
      ],
      "end_point": [
        510,
        1
      ],
      "strings": [
        "\"SQLFreeHandle\""
      ]
    },
    "dl_SQLDescribeCol": {
      "start_point": [
        512,
        0
      ],
      "end_point": [
        540,
        1
      ],
      "strings": [
        "\"SQLDescribeCol\""
      ]
    },
    "dl_SQLGetDiagRec": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        567,
        1
      ],
      "strings": [
        "\"SQLGetDiagRec\""
      ]
    },
    "dl_SQLGetInfo": {
      "start_point": [
        569,
        0
      ],
      "end_point": [
        588,
        1
      ],
      "strings": [
        "\"SQLGetInfo\""
      ]
    },
    "dl_SQLNumResultCols": {
      "start_point": [
        590,
        0
      ],
      "end_point": [
        602,
        1
      ],
      "strings": [
        "\"SQLNumResultCols\""
      ]
    },
    "dl_SQLSetConnectAttr": {
      "start_point": [
        604,
        0
      ],
      "end_point": [
        620,
        1
      ],
      "strings": [
        "\"SQLSetConnectAttr\""
      ]
    },
    "dl_SQLSetEnvAttr": {
      "start_point": [
        622,
        0
      ],
      "end_point": [
        638,
        1
      ],
      "strings": [
        "\"SQLSetEnvAttr\""
      ]
    },
    "db_iodbc_open_int": {
      "start_point": [
        684,
        0
      ],
      "end_point": [
        879,
        1
      ],
      "strings": [
        "\"No loader for shared ODBC library available\\n\"",
        "\"unable to open library %s\\n\"",
        "\"%s\\n\"",
        "\"Connected to \"",
        "\"%s \"",
        "\"%s - \"",
        "\"%s\\n\"",
        "\"Failed to connect\\n\"",
        "\"SQLDriverConnect\"",
        "\"%s\\n\"",
        "\"db_iodbc_open: Query\\n\\\"%s\\\"\\nfailed.\\n\"",
        "\"SQLExecDirect\"",
        "\"SELECT \"",
        "\"%s\\n\"",
        "\"db_iodbc_open: Query\\n\\\"%s\\\"\\nfailed.\\n\"",
        "\"SQLExecDirect\"",
        "\"db_iodbc_open: Too many fields (> %d) in query.\\n\"",
        "\"\\\"%s\\\"\\n\"",
        "\"%s\\n\""
      ]
    },
    "extract_error": {
      "start_point": [
        1034,
        0
      ],
      "end_point": [
        1057,
        1
      ],
      "strings": [
        "\"\\nThe driver reported the following diagnostics whilst \"",
        "\"running %s\\n\"",
        "\"%s:%ld:%ld:%s\\n\""
      ]
    },
    "is_numeric": {
      "start_point": [
        1059,
        0
      ],
      "end_point": [
        1077,
        1
      ],
      "strings": []
    },
    "db_mysql_open": [
      {
        "start_point": [
          1085,
          0
        ],
        "end_point": [
          1090,
          1
        ],
        "strings": [
          "\"MySQL table driver not supported\\n\""
        ]
      },
      {
        "start_point": [
          1290,
          0
        ],
        "end_point": [
          1303,
          1
        ],
        "strings": [
          "\"Missing arguments in table statement.\\n\"",
          "\"Please, supply table driver, dsn, and query.\\n\""
        ]
      }
    ],
    "db_mysql_read": [
      {
        "start_point": [
          1092,
          0
        ],
        "end_point": [
          1096,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1510,
          0
        ],
        "end_point": [
          1560,
          1
        ],
        "strings": [
          "\"db_mysql_read: no result set available\"",
          "\"'%s' cannot be converted to a number.\\n\""
        ]
      }
    ],
    "db_mysql_write": {
      "start_point": [
        1098,
        0
      ],
      "end_point": [
        1102,
        1
      ],
      "strings": []
    },
    "db_mysql_close": [
      {
        "start_point": [
          1104,
          0
        ],
        "end_point": [
          1108,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1642,
          0
        ],
        "end_point": [
          1654,
          1
        ],
        "strings": []
      }
    ],
    "dl_mysql_close": {
      "start_point": [
        1141,
        0
      ],
      "end_point": [
        1149,
        1
      ],
      "strings": [
        "\"mysql_close\""
      ]
    },
    "dl_mysql_error": {
      "start_point": [
        1151,
        0
      ],
      "end_point": [
        1159,
        1
      ],
      "strings": [
        "\"mysql_error\""
      ]
    },
    "dl_mysql_fetch_lengths": {
      "start_point": [
        1172,
        0
      ],
      "end_point": [
        1182,
        1
      ],
      "strings": [
        "\"mysql_fetch_lengths\""
      ]
    },
    "dl_mysql_fetch_row": {
      "start_point": [
        1184,
        0
      ],
      "end_point": [
        1192,
        1
      ],
      "strings": [
        "\"mysql_fetch_row\""
      ]
    },
    "dl_mysql_field_count": {
      "start_point": [
        1194,
        0
      ],
      "end_point": [
        1202,
        1
      ],
      "strings": [
        "\"mysql_field_count\""
      ]
    },
    "dl_mysql_num_fields": {
      "start_point": [
        1214,
        0
      ],
      "end_point": [
        1222,
        1
      ],
      "strings": [
        "\"mysql_num_fields\""
      ]
    },
    "dl_mysql_query": {
      "start_point": [
        1224,
        0
      ],
      "end_point": [
        1232,
        1
      ],
      "strings": [
        "\"mysql_query\""
      ]
    }
  },
  "glpk/glpk-4.65/src/mpl/mplsql.h": {},
  "glpk/glpk-4.65/src/npp/npp.h": {},
  "glpk/glpk-4.65/src/npp/npp1.c": {
    "npp_create_wksp": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "npp_insert_row": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "npp_remove_row": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "npp_activate_row": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "npp_deactivate_row": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "npp_insert_col": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "npp_remove_col": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": []
    },
    "npp_activate_col": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    },
    "npp_deactivate_col": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "npp_add_row": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "npp_add_col": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "npp_add_aij": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": []
    },
    "npp_row_nnz": {
      "start_point": [
        224,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    },
    "npp_col_nnz": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": []
    },
    "npp_push_tse": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": []
    },
    "npp_erase_row": {
      "start_point": [
        259,
        0
      ],
      "end_point": [
        276,
        1
      ],
      "strings": []
    },
    "npp_del_row": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": []
    },
    "npp_del_col": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        329,
        1
      ],
      "strings": []
    },
    "npp_del_aij": {
      "start_point": [
        331,
        0
      ],
      "end_point": [
        351,
        1
      ],
      "strings": []
    },
    "npp_load_prob": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        484,
        1
      ],
      "strings": []
    },
    "npp_build_prob": {
      "start_point": [
        486,
        0
      ],
      "end_point": [
        570,
        1
      ],
      "strings": []
    },
    "npp_postprocess": {
      "start_point": [
        572,
        0
      ],
      "end_point": [
        698,
        1
      ],
      "strings": []
    },
    "npp_unload_sol": {
      "start_point": [
        700,
        0
      ],
      "end_point": [
        904,
        1
      ],
      "strings": []
    },
    "npp_delete_wksp": {
      "start_point": [
        906,
        0
      ],
      "end_point": [
        934,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/npp/npp2.c": {
    "npp_free_row": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "rcv_free_row": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "npp_geq_row": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": []
    },
    "rcv_geq_row": {
      "start_point": [
        215,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": []
    },
    "npp_leq_row": {
      "start_point": [
        336,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": []
    },
    "rcv_leq_row": {
      "start_point": [
        359,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": []
    },
    "npp_free_col": {
      "start_point": [
        487,
        0
      ],
      "end_point": [
        511,
        1
      ],
      "strings": []
    },
    "rcv_free_col": {
      "start_point": [
        513,
        0
      ],
      "end_point": [
        547,
        1
      ],
      "strings": []
    },
    "npp_lbnd_col": {
      "start_point": [
        645,
        0
      ],
      "end_point": [
        678,
        1
      ],
      "strings": []
    },
    "rcv_lbnd_col": {
      "start_point": [
        680,
        0
      ],
      "end_point": [
        696,
        1
      ],
      "strings": []
    },
    "npp_ubnd_col": {
      "start_point": [
        813,
        0
      ],
      "end_point": [
        849,
        1
      ],
      "strings": []
    },
    "rcv_ubnd_col": {
      "start_point": [
        851,
        0
      ],
      "end_point": [
        869,
        1
      ],
      "strings": []
    },
    "npp_dbnd_col": {
      "start_point": [
        961,
        0
      ],
      "end_point": [
        987,
        1
      ],
      "strings": []
    },
    "rcv_dbnd_col": {
      "start_point": [
        989,
        0
      ],
      "end_point": [
        1018,
        1
      ],
      "strings": []
    },
    "npp_fixed_col": {
      "start_point": [
        1105,
        0
      ],
      "end_point": [
        1134,
        1
      ],
      "strings": []
    },
    "rcv_fixed_col": {
      "start_point": [
        1136,
        0
      ],
      "end_point": [
        1143,
        1
      ],
      "strings": []
    },
    "npp_make_equality": {
      "start_point": [
        1225,
        0
      ],
      "end_point": [
        1248,
        1
      ],
      "strings": []
    },
    "rcv_make_equality": {
      "start_point": [
        1250,
        0
      ],
      "end_point": [
        1268,
        1
      ],
      "strings": []
    },
    "npp_make_fixed": {
      "start_point": [
        1365,
        0
      ],
      "end_point": [
        1403,
        1
      ],
      "strings": []
    },
    "rcv_make_fixed": {
      "start_point": [
        1405,
        0
      ],
      "end_point": [
        1430,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/npp/npp3.c": {
    "npp_empty_row": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "npp_empty_col": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "rcv_empty_col": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": []
    },
    "npp_implied_value": {
      "start_point": [
        289,
        0
      ],
      "end_point": [
        328,
        1
      ],
      "strings": []
    },
    "npp_eq_singlet": {
      "start_point": [
        422,
        0
      ],
      "end_point": [
        463,
        1
      ],
      "strings": []
    },
    "rcv_eq_singlet": {
      "start_point": [
        465,
        0
      ],
      "end_point": [
        487,
        1
      ],
      "strings": []
    },
    "npp_implied_lower": {
      "start_point": [
        549,
        0
      ],
      "end_point": [
        600,
        1
      ],
      "strings": []
    },
    "npp_implied_upper": {
      "start_point": [
        662,
        0
      ],
      "end_point": [
        712,
        1
      ],
      "strings": []
    },
    "npp_ineq_singlet": {
      "start_point": [
        883,
        0
      ],
      "end_point": [
        962,
        1
      ],
      "strings": []
    },
    "rcv_ineq_singlet": {
      "start_point": [
        964,
        0
      ],
      "end_point": [
        1092,
        1
      ],
      "strings": []
    },
    "npp_implied_slack": {
      "start_point": [
        1238,
        0
      ],
      "end_point": [
        1289,
        1
      ],
      "strings": []
    },
    "rcv_implied_slack": {
      "start_point": [
        1291,
        0
      ],
      "end_point": [
        1323,
        1
      ],
      "strings": []
    },
    "npp_implied_free": {
      "start_point": [
        1488,
        0
      ],
      "end_point": [
        1613,
        1
      ],
      "strings": []
    },
    "rcv_implied_free": {
      "start_point": [
        1615,
        0
      ],
      "end_point": [
        1631,
        1
      ],
      "strings": []
    },
    "npp_eq_doublet": {
      "start_point": [
        1762,
        0
      ],
      "end_point": [
        1851,
        1
      ],
      "strings": []
    },
    "rcv_eq_doublet": {
      "start_point": [
        1853,
        0
      ],
      "end_point": [
        1877,
        1
      ],
      "strings": []
    },
    "npp_forcing_row": {
      "start_point": [
        2090,
        0
      ],
      "end_point": [
        2174,
        1
      ],
      "strings": []
    },
    "rcv_forcing_row": {
      "start_point": [
        2176,
        0
      ],
      "end_point": [
        2242,
        1
      ],
      "strings": []
    },
    "npp_analyze_row": {
      "start_point": [
        2337,
        0
      ],
      "end_point": [
        2418,
        1
      ],
      "strings": []
    },
    "npp_inactive_bound": {
      "start_point": [
        2482,
        0
      ],
      "end_point": [
        2511,
        1
      ],
      "strings": []
    },
    "rcv_inactive_bound": {
      "start_point": [
        2513,
        0
      ],
      "end_point": [
        2525,
        1
      ],
      "strings": []
    },
    "npp_implied_bounds": {
      "start_point": [
        2747,
        0
      ],
      "end_point": [
        2858,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/npp/npp4.c": {
    "npp_binarize_prob": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": [
        "\"%d integer variable(s) were replaced by %d binary one\"",
        "\"s\\n\"",
        "\"%d row(s) were added due to binarization\\n\"",
        "\"Binarization failed for %d integer variable(s)\\n\""
      ]
    },
    "rcv_binarize_prob": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": []
    },
    "copy_form": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": []
    },
    "drop_form": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": []
    },
    "npp_is_packing": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "hidden_packing": {
      "start_point": [
        428,
        0
      ],
      "end_point": [
        495,
        1
      ],
      "strings": []
    },
    "npp_hidden_packing": {
      "start_point": [
        497,
        0
      ],
      "end_point": [
        571,
        1
      ],
      "strings": [
        "\"Original constraint:\\n\"",
        "\" %+g x%d\"",
        "\", >= %g\"",
        "\", <= %g\"",
        "\"\\n\"",
        "\"Equivalent packing inequality:\\n\"",
        "\" %sx%d\"",
        "\"+\"",
        "\"-\"",
        "\", <= %g\\n\""
      ]
    },
    "npp_implied_packing": {
      "start_point": [
        714,
        0
      ],
      "end_point": [
        787,
        1
      ],
      "strings": []
    },
    "npp_is_covering": {
      "start_point": [
        837,
        0
      ],
      "end_point": [
        859,
        1
      ],
      "strings": []
    },
    "hidden_covering": {
      "start_point": [
        931,
        0
      ],
      "end_point": [
        988,
        1
      ],
      "strings": []
    },
    "npp_hidden_covering": {
      "start_point": [
        990,
        0
      ],
      "end_point": [
        1064,
        1
      ],
      "strings": [
        "\"Original constraint:\\n\"",
        "\" %+g x%d\"",
        "\", >= %g\"",
        "\", <= %g\"",
        "\"\\n\"",
        "\"Equivalent covering inequality:\\n\"",
        "\" %sx%d\"",
        "\"+\"",
        "\"-\"",
        "\", >= %g\\n\""
      ]
    },
    "npp_is_partitioning": {
      "start_point": [
        1109,
        0
      ],
      "end_point": [
        1130,
        1
      ],
      "strings": []
    },
    "reduce_ineq_coef": {
      "start_point": [
        1274,
        0
      ],
      "end_point": [
        1339,
        1
      ],
      "strings": [
        "\"+\"",
        "\"-\""
      ]
    },
    "npp_reduce_ineq_coef": {
      "start_point": [
        1341,
        0
      ],
      "end_point": [
        1411,
        1
      ],
      "strings": [
        "\"L\"",
        "\"U\"",
        "\"*\""
      ]
    }
  },
  "glpk/glpk-4.65/src/npp/npp5.c": {
    "npp_clean_prob": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": [
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\""
      ]
    },
    "npp_process_row": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        387,
        1
      ],
      "strings": [
        "\"A\"",
        "\"B\"",
        "\"C\"",
        "\"D\"",
        "\"E\"",
        "\"F\"",
        "\"G\"",
        "\"H\"",
        "\"I\"",
        "\"J\"",
        "\"K\""
      ]
    },
    "npp_improve_bounds": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        485,
        1
      ],
      "strings": [
        "\"L\"",
        "\"M\""
      ]
    },
    "npp_process_col": {
      "start_point": [
        521,
        0
      ],
      "end_point": [
        604,
        1
      ],
      "strings": [
        "\"N\"",
        "\"O\"",
        "\"P\"",
        "\"Q\""
      ]
    },
    "npp_process_prob": {
      "start_point": [
        650,
        0
      ],
      "end_point": [
        703,
        1
      ],
      "strings": [
        "\"\\n\""
      ]
    },
    "npp_simplex": {
      "start_point": [
        707,
        0
      ],
      "end_point": [
        714,
        1
      ],
      "strings": []
    },
    "npp_integer": {
      "start_point": [
        718,
        0
      ],
      "end_point": [
        806,
        1
      ],
      "strings": [
        "\"%d hidden packing inequaliti(es) were detected\\n\"",
        "\"%d hidden covering inequaliti(es) were detected\\n\"",
        "\"%d constraint coefficient(s) were reduced\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/npp/npp6.c": {
    "npp_sat_free_row": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "npp_sat_fixed_col": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "rcv_sat_fixed_col": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "npp_sat_is_bin_comb": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "npp_sat_num_pos_coef": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "npp_sat_num_neg_coef": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "npp_sat_is_cover_ineq": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    },
    "npp_sat_is_pack_ineq": {
      "start_point": [
        282,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": []
    },
    "npp_sat_is_partn_eq": {
      "start_point": [
        341,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": []
    },
    "npp_sat_reverse_row": {
      "start_point": [
        376,
        0
      ],
      "end_point": [
        405,
        1
      ],
      "strings": []
    },
    "npp_sat_split_pack": {
      "start_point": [
        434,
        0
      ],
      "end_point": [
        469,
        1
      ],
      "strings": []
    },
    "npp_sat_encode_pack": {
      "start_point": [
        493,
        0
      ],
      "end_point": [
        520,
        1
      ],
      "strings": []
    },
    "npp_sat_encode_sum2": {
      "start_point": [
        540,
        0
      ],
      "end_point": [
        619,
        1
      ],
      "strings": []
    },
    "npp_sat_encode_sum3": {
      "start_point": [
        639,
        0
      ],
      "end_point": [
        735,
        1
      ],
      "strings": []
    },
    "remove_lse": {
      "start_point": [
        821,
        0
      ],
      "end_point": [
        833,
        1
      ],
      "strings": []
    },
    "npp_sat_encode_sum_ax": {
      "start_point": [
        835,
        0
      ],
      "end_point": [
        916,
        1
      ],
      "strings": []
    },
    "npp_sat_normalize_clause": {
      "start_point": [
        930,
        0
      ],
      "end_point": [
        956,
        1
      ],
      "strings": []
    },
    "npp_sat_encode_clause": {
      "start_point": [
        978,
        0
      ],
      "end_point": [
        996,
        1
      ],
      "strings": []
    },
    "npp_sat_encode_geq": {
      "start_point": [
        1057,
        0
      ],
      "end_point": [
        1123,
        1
      ],
      "strings": []
    },
    "npp_sat_encode_leq": {
      "start_point": [
        1184,
        0
      ],
      "end_point": [
        1252,
        1
      ],
      "strings": []
    },
    "npp_sat_encode_row": {
      "start_point": [
        1322,
        0
      ],
      "end_point": [
        1363,
        1
      ],
      "strings": []
    },
    "npp_sat_encode_prob": {
      "start_point": [
        1381,
        0
      ],
      "end_point": [
        1497,
        1
      ],
      "strings": [
        "\"%d covering inequalities\\n\"",
        "\"%d packing inequalities\\n\"",
        "\"%d partitioning equalities\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/proxy/main.c": {
    "main": {
      "start_point": [
        10,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": [
        "\"ERROR: Usage: ts <instance> <(possibly) xml initsols>\\n\"",
        "\"Proxy\"",
        "\"Problem %s does not exist!!!, status %d\\n\"",
        "\"r\"",
        "\"value\"",
        "\"%d%*s\"",
        "\"Status = %d; ZSTAR = %f\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/proxy/proxy.c": {
    "proxy": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        620,
        1
      ],
      "strings": [
        "\"The problem has not binary variables. Proximity se\"",
        "\"arch cannot be used.\\n\"",
        "\"REFINE = %d\\n\"",
        "\"Applying PROXY heuristic...\\n\"",
        "\"Proxy's time limit set to %d seconds.\\n\"",
        "\"Proxy's relative improvement \"",
        "\"set to %2.2lf %c.\\n\"",
        "\"Searching for a feasible solution...\\n\"",
        "\"Input solution found.\\n\"",
        "\"Proxy heuristic terminated.\\n\"",
        "\"GLP_SIMPLEX status = %d\\n\"",
        "\"GLP_SIMPLEX error code = %d\\n\"",
        "\"Time limit exceeded. Proxy could not \"",
        "\"find optimal solution to LP relaxation.\\n\"",
        "\"Proxy heuristic aborted.\\n\"",
        "\"Time limit exceeded. Proxy could not \"",
        "\"find an initial integer feasible solution.\\n\"",
        "\"Proxy heuristic aborted.\\n\"",
        "\"Proxy could not \"",
        "\"find an initial integer feasible solution.\\n\"",
        "\"Proxy heuristic aborted.\\n\"",
        "\">>>>> first solution = %e;\\n\"",
        "\"Time limit exceeded. Proxy heuristic terminated.\\n\"",
        "\"Time used: %3.1lf secs.  Memory used: %2.1lf Mb\\n\"",
        "\"Starting proximity search...\\n\"",
        "\"TRUE_OBJ[0] = %f\\n\"",
        "\"ZSTAR  = %f\\n\"",
        "\"CUTOFF = %f\\n\"",
        "\"Time limit exceeded. Proxy heuristic \"",
        "\"terminated.\\n\"",
        "\"TELA = %3.1lf\\n\"",
        "\"TLIM = %3.1lf\\n\"",
        "\"Bound exceeded = %f. \"",
        "\"Proxy heuristic terminated.\\n\"",
        "\"GLP_SIMPLEX status = %d\\n\"",
        "\"GLP_SIMPLEX error code = %d\\n\"",
        "\"Time limit exceeded. Proxy heuristic \"",
        "\"terminated.\\n\"",
        "\"Bound exceeded = %f. Proxy heuristic \"",
        "\"terminated.\\n\"",
        "\"Time limit exceeded. Proxy heuristic \"",
        "\"terminated.\\n\"",
        "\"Proxy terminated unexpectedly.\\n\"",
        "\"GLP_INTOPT error code = %d\\n\"",
        "\"ZZ = %f\\n\"",
        "\"ZSTAR = %f\\n\"",
        "\"REFINE = %d\\n\"",
        "\">>>>> it: %3d:   mip = %e;   elapsed time \"",
        "\"%3.1lf sec.s\\n\"",
        "\"Time used: %3.1lf.  Memory used: %2.1lf Mb\\n\""
      ]
    },
    "callback": {
      "start_point": [
        623,
        0
      ],
      "end_point": [
        632,
        1
      ],
      "strings": []
    },
    "get_info": {
      "start_point": [
        635,
        0
      ],
      "end_point": [
        665,
        1
      ],
      "strings": []
    },
    "is_integer": {
      "start_point": [
        668,
        0
      ],
      "end_point": [
        695,
        1
      ],
      "strings": []
    },
    "check_integrality": {
      "start_point": [
        698,
        0
      ],
      "end_point": [
        722,
        1
      ],
      "strings": []
    },
    "check_ref": {
      "start_point": [
        725,
        0
      ],
      "end_point": [
        748,
        1
      ],
      "strings": []
    },
    "second": {
      "start_point": [
        751,
        0
      ],
      "end_point": [
        759,
        1
      ],
      "strings": []
    },
    "add_cutoff": {
      "start_point": [
        762,
        0
      ],
      "end_point": [
        809,
        1
      ],
      "strings": [
        "\"Cutoff\""
      ]
    },
    "get_sol": {
      "start_point": [
        812,
        0
      ],
      "end_point": [
        821,
        1
      ],
      "strings": []
    },
    "elapsed_time": {
      "start_point": [
        824,
        0
      ],
      "end_point": [
        830,
        1
      ],
      "strings": []
    },
    "redefine_obj": {
      "start_point": [
        833,
        0
      ],
      "end_point": [
        877,
        1
      ],
      "strings": []
    },
    "update_cutoff": {
      "start_point": [
        880,
        0
      ],
      "end_point": [
        901,
        1
      ],
      "strings": []
    },
    "compute_delta": {
      "start_point": [
        904,
        0
      ],
      "end_point": [
        913,
        1
      ],
      "strings": []
    },
    "objval": {
      "start_point": [
        916,
        0
      ],
      "end_point": [
        927,
        1
      ],
      "strings": []
    },
    "array_copy": {
      "start_point": [
        930,
        0
      ],
      "end_point": [
        938,
        1
      ],
      "strings": []
    },
    "do_refine": {
      "start_point": [
        940,
        0
      ],
      "end_point": [
        1054,
        1
      ],
      "strings": [
        "\"Error in Proxy refinement: \"",
        "\"wrong number of columns (%d vs %d).\\n\"",
        "\"***** REFINING *****\\n\"",
        "\"STATUS REFINING = %d\\n\"",
        "\"Time limit exceeded on Proxy refining.\\n\"",
        "\"REFINE TELA = %3.1lf\\n\""
      ]
    },
    "deallocate": {
      "start_point": [
        1056,
        0
      ],
      "end_point": [
        1070,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/proxy/proxy.h": {},
  "glpk/glpk-4.65/src/proxy/proxy1.c": {
    "ios_proxy_heur": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": [
        "\"WARNING: PROXY HEURISTIC REPORTED WRONG SOLUTION; \"",
        "\"SOLUTION REJECTED\\n\""
      ]
    }
  },
  "glpk/glpk-4.65/src/simplex/simplex.h": {},
  "glpk/glpk-4.65/src/simplex/spxat.c": {
    "spx_alloc_at": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "spx_build_at": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "spx_at_prod": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "spx_nt_prod1": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "spx_eval_trow1": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    },
    "spx_free_at": {
      "start_point": [
        255,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/simplex/spxat.h": {},
  "glpk/glpk-4.65/src/simplex/spxchuzc.c": {
    "spx_chuzc_sel": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "spx_chuzc_std": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    },
    "spx_alloc_se": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "spx_reset_refsp": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    },
    "spx_eval_gamma_j": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "spx_chuzc_pse": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        274,
        1
      ],
      "strings": []
    },
    "spx_update_gamma": {
      "start_point": [
        309,
        0
      ],
      "end_point": [
        364,
        1
      ],
      "strings": []
    },
    "spx_free_se": {
      "start_point": [
        372,
        0
      ],
      "end_point": [
        378,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/simplex/spxchuzc.h": {},
  "glpk/glpk-4.65/src/simplex/spxchuzr.c": {
    "spx_chuzr_std": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": []
    },
    "spx_chuzr_harris": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": []
    },
    "spx_ls_eval_bp": {
      "start_point": [
        401,
        0
      ],
      "end_point": [
        511,
        1
      ],
      "strings": []
    },
    "fcmp": {
      "start_point": [
        538,
        0
      ],
      "end_point": [
        546,
        1
      ],
      "strings": []
    },
    "spx_ls_select_bp": {
      "start_point": [
        548,
        0
      ],
      "end_point": [
        590,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/simplex/spxchuzr.h": {},
  "glpk/glpk-4.65/src/simplex/spxlp.c": {
    "jth_col": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "spx_factorize": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "spx_eval_beta": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "spx_eval_obj": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "spx_eval_pi": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": []
    },
    "spx_eval_dj": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": []
    },
    "spx_eval_tcol": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": []
    },
    "spx_eval_rho": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": []
    },
    "spx_eval_rho_s": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        329,
        1
      ],
      "strings": []
    },
    "spx_eval_tij": {
      "start_point": [
        348,
        0
      ],
      "end_point": [
        365,
        1
      ],
      "strings": []
    },
    "spx_eval_trow": {
      "start_point": [
        386,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": []
    },
    "spx_update_beta": {
      "start_point": [
        457,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": []
    },
    "spx_update_beta_s": {
      "start_point": [
        533,
        0
      ],
      "end_point": [
        616,
        1
      ],
      "strings": []
    },
    "spx_update_d": {
      "start_point": [
        671,
        0
      ],
      "end_point": [
        697,
        1
      ],
      "strings": []
    },
    "spx_update_d_s": {
      "start_point": [
        700,
        0
      ],
      "end_point": [
        738,
        1
      ],
      "strings": []
    },
    "spx_change_basis": {
      "start_point": [
        750,
        0
      ],
      "end_point": [
        783,
        1
      ],
      "strings": []
    },
    "spx_update_invb": {
      "start_point": [
        802,
        0
      ],
      "end_point": [
        816,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/simplex/spxlp.h": {},
  "glpk/glpk-4.65/src/simplex/spxnt.c": {
    "spx_alloc_nt": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "spx_init_nt": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "spx_nt_add_col": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "spx_build_nt": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "spx_nt_del_col": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "spx_update_nt": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "spx_nt_prod": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    },
    "spx_nt_prod_s": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": []
    },
    "spx_free_nt": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        300,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/simplex/spxnt.h": {},
  "glpk/glpk-4.65/src/simplex/spxprim.c": {
    "set_penalty": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    },
    "check_feas": {
      "start_point": [
        285,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    },
    "adjust_penalty": [
      {
        "start_point": [
          370,
          0
        ],
        "end_point": [
          404,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          406,
          0
        ],
        "end_point": [
          445,
          1
        ],
        "strings": []
      }
    ],
    "err_in_vec": {
      "start_point": [
        459,
        0
      ],
      "end_point": [
        469,
        1
      ],
      "strings": []
    },
    "err_in_beta": {
      "start_point": [
        481,
        0
      ],
      "end_point": [
        490,
        1
      ],
      "strings": []
    },
    "err_in_d": {
      "start_point": [
        502,
        0
      ],
      "end_point": [
        517,
        1
      ],
      "strings": []
    },
    "err_in_gamma": {
      "start_point": [
        529,
        0
      ],
      "end_point": [
        543,
        1
      ],
      "strings": []
    },
    "check_accuracy": {
      "start_point": [
        554,
        0
      ],
      "end_point": [
        566,
        1
      ],
      "strings": [
        "\"e_beta = %10.3e; e_d = %10.3e; e_gamma = %10.3e\\n\""
      ]
    },
    "play_bounds": {
      "start_point": [
        863,
        0
      ],
      "end_point": [
        945,
        1
      ],
      "strings": []
    },
    "remove_perturb": {
      "start_point": [
        947,
        0
      ],
      "end_point": [
        978,
        1
      ],
      "strings": [
        "\"Removing LP perturbation [%d]...\\n\""
      ]
    },
    "sum_infeas": {
      "start_point": [
        986,
        0
      ],
      "end_point": [
        1001,
        1
      ],
      "strings": []
    },
    "display": {
      "start_point": [
        1021,
        0
      ],
      "end_point": [
        1105,
        1
      ],
      "strings": [
        "\"%c%6d: obj = %17.9e inf = %11.3e (%d)\"",
        "\" %d\"",
        "\" %d%%\"",
        "\"\\n\""
      ]
    },
    "spx_primal": {
      "start_point": [
        1603,
        0
      ],
      "end_point": [
        1857,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/simplex/spxprob.c": {
    "spx_init_lp": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "spx_alloc_lp": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "spx_build_lp": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        329,
        1
      ],
      "strings": []
    },
    "spx_build_basis": {
      "start_point": [
        342,
        0
      ],
      "end_point": [
        413,
        1
      ],
      "strings": []
    },
    "spx_store_basis": {
      "start_point": [
        431,
        0
      ],
      "end_point": [
        533,
        1
      ],
      "strings": []
    },
    "spx_store_sol": {
      "start_point": [
        569,
        0
      ],
      "end_point": [
        657,
        1
      ],
      "strings": []
    },
    "spx_free_lp": {
      "start_point": [
        665,
        0
      ],
      "end_point": [
        676,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/simplex/spxprob.h": {},
  "glpk/glpk-4.65/src/simplex/spychuzc.c": {
    "spy_chuzc_std": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    },
    "spy_chuzc_harris": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    },
    "fcmp": [
      {
        "start_point": [
          277,
          0
        ],
        "end_point": [
          285,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          499,
          0
        ],
        "end_point": [
          507,
          1
        ],
        "strings": []
      }
    ],
    "spy_eval_bp": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        396,
        1
      ],
      "strings": []
    },
    "spy_ls_eval_bp": {
      "start_point": [
        411,
        0
      ],
      "end_point": [
        474,
        1
      ],
      "strings": []
    },
    "spy_ls_select_bp": {
      "start_point": [
        509,
        0
      ],
      "end_point": [
        564,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/simplex/spychuzc.h": {},
  "glpk/glpk-4.65/src/simplex/spychuzr.c": {
    "spy_chuzr_sel": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "spy_chuzr_std": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "spy_alloc_se": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "spy_reset_refsp": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "spy_eval_gamma_i": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": []
    },
    "spy_chuzr_pse": {
      "start_point": [
        285,
        0
      ],
      "end_point": [
        315,
        1
      ],
      "strings": []
    },
    "spy_update_gamma": {
      "start_point": [
        351,
        0
      ],
      "end_point": [
        400,
        1
      ],
      "strings": []
    },
    "spy_update_gamma_s": {
      "start_point": [
        403,
        0
      ],
      "end_point": [
        461,
        1
      ],
      "strings": []
    },
    "spy_free_se": {
      "start_point": [
        470,
        0
      ],
      "end_point": [
        480,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/simplex/spychuzr.h": {},
  "glpk/glpk-4.65/src/simplex/spydual.c": {
    "check_flags": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    },
    "set_art_bounds": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": []
    },
    "set_orig_bounds": {
      "start_point": [
        295,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": []
    },
    "check_feas": {
      "start_point": [
        365,
        0
      ],
      "end_point": [
        429,
        1
      ],
      "strings": []
    },
    "err_in_vec": {
      "start_point": [
        442,
        0
      ],
      "end_point": [
        452,
        1
      ],
      "strings": []
    },
    "err_in_beta": {
      "start_point": [
        464,
        0
      ],
      "end_point": [
        473,
        1
      ],
      "strings": []
    },
    "err_in_r": {
      "start_point": [
        477,
        0
      ],
      "end_point": [
        500,
        1
      ],
      "strings": [
        "\"i = %d; r = %g; csa->r = %g\\n\""
      ]
    },
    "err_in_d": {
      "start_point": [
        512,
        0
      ],
      "end_point": [
        527,
        1
      ],
      "strings": []
    },
    "err_in_gamma": {
      "start_point": [
        539,
        0
      ],
      "end_point": [
        553,
        1
      ],
      "strings": []
    },
    "check_accuracy": {
      "start_point": [
        564,
        0
      ],
      "end_point": [
        577,
        1
      ],
      "strings": [
        "\"e_beta = %10.3e; e_r = %10.3e; e_d = %10.3e; e_gamma = %\"",
        "\"10.3e\\n\""
      ]
    },
    "spy_eval_r": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        627,
        1
      ],
      "strings": []
    },
    "choose_pivot": {
      "start_point": [
        652,
        0
      ],
      "end_point": [
        884,
        1
      ],
      "strings": [
        "\"num = %d; t_best = %d; dz = %g\\n\""
      ]
    },
    "play_coef": {
      "start_point": [
        905,
        0
      ],
      "end_point": [
        963,
        1
      ],
      "strings": []
    },
    "remove_perturb": {
      "start_point": [
        966,
        0
      ],
      "end_point": [
        981,
        1
      ],
      "strings": [
        "\"Removing LP perturbation [%d]...\\n\""
      ]
    },
    "display": {
      "start_point": [
        1003,
        0
      ],
      "end_point": [
        1126,
        1
      ],
      "strings": [
        "\" %6d: %23s inf = %11.3e (%d)\"",
        "\"\"",
        "\" %6d: sum = %17.9e inf = %11.3e (%d)\"",
        "\"#%6d: obj = %17.9e inf = %11.3e (%d)\"",
        "\" %d\"",
        "\" %d%%\"",
        "\"\\n\""
      ]
    },
    "spy_update_r": {
      "start_point": [
        1129,
        0
      ],
      "end_point": [
        1191,
        1
      ],
      "strings": []
    },
    "spy_dual": {
      "start_point": [
        1833,
        0
      ],
      "end_point": [
        2098,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/zlib/adler32.c": {},
  "glpk/glpk-4.65/src/zlib/compress.c": {},
  "glpk/glpk-4.65/src/zlib/crc32.c": {
    "make_crc_table": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": [
        "\"crc32.h\"",
        "\"w\"",
        "\"/* crc32.h -- tables for rapid CRC calculation\\n\"",
        "\" * Generated automatically by crc32.c\\n */\\n\\n\"",
        "\"local const unsigned long FAR \"",
        "\"crc_table[TBLS][256] =\\n{\\n  {\\n\"",
        "\"#ifdef BYFOUR\\n\"",
        "\"  },\\n  {\\n\"",
        "\"#endif\\n\"",
        "\"  }\\n};\\n\""
      ]
    },
    "get_crc_table": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/zlib/crc32.h": {},
  "glpk/glpk-4.65/src/zlib/deflate.c": {},
  "glpk/glpk-4.65/src/zlib/deflate.h": {},
  "glpk/glpk-4.65/src/zlib/gzclose.c": {},
  "glpk/glpk-4.65/src/zlib/gzguts.h": {},
  "glpk/glpk-4.65/src/zlib/gzlib.c": {
    "gz_intmax": {
      "start_point": [
        524,
        0
      ],
      "end_point": [
        535,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/zlib/gzread.c": {},
  "glpk/glpk-4.65/src/zlib/gzwrite.c": {
    "ZEXPORTVA": {
      "start_point": [
        280,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/zlib/inffast.c": {},
  "glpk/glpk-4.65/src/zlib/inffast.h": {},
  "glpk/glpk-4.65/src/zlib/inffixed.h": {},
  "glpk/glpk-4.65/src/zlib/inflate.c": {
    "makefixed": {
      "start_point": [
        303,
        0
      ],
      "end_point": [
        340,
        1
      ],
      "strings": [
        "\"    /* inffixed.h -- table for decoding fixed codes\"",
        "\"     * Generated automatically by makefixed().\"",
        "\"     */\"",
        "\"\"",
        "\"    /* WARNING: this file should *not* be used by applications.\"",
        "\"       It is part of the implementation of this library and is\"",
        "\"       subject to change. Applications should only use zlib.h.\"",
        "\"     */\"",
        "\"\"",
        "\"    static const code lenfix[%u] = {\"",
        "\"\\n        \"",
        "\"{%u,%u,%d}\"",
        "\"\\n    };\"",
        "\"\\n    static const code distfix[%u] = {\"",
        "\"\\n        \"",
        "\"{%u,%u,%d}\"",
        "\"\\n    };\""
      ]
    }
  },
  "glpk/glpk-4.65/src/zlib/inflate.h": {},
  "glpk/glpk-4.65/src/zlib/inftrees.c": {},
  "glpk/glpk-4.65/src/zlib/inftrees.h": {},
  "glpk/glpk-4.65/src/zlib/trees.c": {
    "tr_static_init": {
      "start_point": [
        238,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": [
        "\"tr_static_init: length != 256\"",
        "\"tr_static_init: dist != 256\"",
        "\"tr_static_init: 256+dist != 512\""
      ]
    },
    "gen_trees_header": {
      "start_point": [
        332,
        0
      ],
      "end_point": [
        379,
        1
      ],
      "strings": [
        "\"trees.h\"",
        "\"w\"",
        "\"Can't open trees.h\"",
        "\"/* header created automatically with -DGEN_TREES_H */\\n\\n\"",
        "\"local const ct_data static_ltree[L_CODES+2] = {\\n\"",
        "\"{{%3u},{%3u}}%s\"",
        "\"local const ct_data static_dtree[D_CODES] = {\\n\"",
        "\"{{%2u},{%2u}}%s\"",
        "\"const uch ZLIB_INTERNAL _dist_code[DIST_CODE_LEN] = {\\n\"",
        "\"%2u%s\"",
        "\"const uch ZLIB_INTERNAL _length_code[MAX_MATCH-MIN_MATCH+1]= {\\n\"",
        "\"%2u%s\"",
        "\"local const int base_length[LENGTH_CODES] = {\\n\"",
        "\"%1u%s\"",
        "\"local const int base_dist[D_CODES] = {\\n\"",
        "\"%5u%s\""
      ]
    }
  },
  "glpk/glpk-4.65/src/zlib/trees.h": {},
  "glpk/glpk-4.65/src/zlib/uncompr.c": {},
  "glpk/glpk-4.65/src/zlib/zconf.h": {},
  "glpk/glpk-4.65/src/zlib/zio.c": {
    "initialize": {
      "start_point": [
        15,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": []
    },
    "open": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": [
        "\"rb\"",
        "\"wb\"",
        "\"ab\""
      ]
    },
    "read": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "write": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "lseek": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "close": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "glpk/glpk-4.65/src/zlib/zio.h": {},
  "glpk/glpk-4.65/src/zlib/zlib.h": {},
  "glpk/glpk-4.65/src/zlib/zutil.c": {
    "zlibVersion": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    },
    "zlibCompileFlags": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "ZLIB_INTERNAL": [
      {
        "start_point": [
          215,
          0
        ],
        "end_point": [
          237,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          239,
          0
        ],
        "end_point": [
          259,
          1
        ],
        "strings": [
          "\"zcfree: ptr not found\""
        ]
      },
      {
        "start_point": [
          274,
          0
        ],
        "end_point": [
          278,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          280,
          0
        ],
        "end_point": [
          284,
          1
        ],
        "strings": []
      }
    ]
  },
  "glpk/glpk-4.65/src/zlib/zutil.h": {}
}