{
  "coreutils/coreutils-8.29/gnulib-tests/accept.c": {
    "rpl_accept": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/arg-nonnull.h": {},
  "coreutils/coreutils-8.29/gnulib-tests/bind.c": {
    "rpl_bind": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/c++defs.h": {},
  "coreutils/coreutils-8.29/gnulib-tests/connect.c": {
    "rpl_connect": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/inet_pton.c": {
    "rpl_inet_pton": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "inet_pton": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "inet_pton4": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "inet_pton6": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": [
        "\"0123456789abcdef\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/infinity.h": {
    "Infinityf": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        28,
        1
      ],
      "strings": []
    },
    "Infinityd": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "Infinityl": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/ioctl.c": {
    "rpl_ioctl": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "primary_ioctl": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "ioctl": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/listen.c": {
    "rpl_listen": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/localename.c": {
    "gl_locale_name_canonicalize": [
      {
        "start_point": [
          1154,
          0
        ],
        "end_point": [
          1417,
          1
        ],
        "strings": [
          "\"Afrikaans\"",
          "\"af\"",
          "\"Albanian\"",
          "\"sq\"",
          "\"Amharic\"",
          "\"am\"",
          "\"Arabic\"",
          "\"ar\"",
          "\"Armenian\"",
          "\"hy\"",
          "\"Assamese\"",
          "\"as\"",
          "\"Aymara\"",
          "\"ay\"",
          "\"Azerbaijani\"",
          "\"az\"",
          "\"Basque\"",
          "\"eu\"",
          "\"Belarusian\"",
          "\"be\"",
          "\"Belorussian\"",
          "\"be\"",
          "\"Bengali\"",
          "\"bn\"",
          "\"Brazilian Portugese\"",
          "\"pt_BR\"",
          "\"Brazilian Portuguese\"",
          "\"pt_BR\"",
          "\"Breton\"",
          "\"br\"",
          "\"Bulgarian\"",
          "\"bg\"",
          "\"Burmese\"",
          "\"my\"",
          "\"Byelorussian\"",
          "\"be\"",
          "\"Catalan\"",
          "\"ca\"",
          "\"Chewa\"",
          "\"ny\"",
          "\"Chichewa\"",
          "\"ny\"",
          "\"Chinese\"",
          "\"zh\"",
          "\"Chinese, Simplified\"",
          "\"zh_CN\"",
          "\"Chinese, Traditional\"",
          "\"zh_TW\"",
          "\"Chinese, Tradtional\"",
          "\"zh_TW\"",
          "\"Croatian\"",
          "\"hr\"",
          "\"Czech\"",
          "\"cs\"",
          "\"Danish\"",
          "\"da\"",
          "\"Dutch\"",
          "\"nl\"",
          "\"Dzongkha\"",
          "\"dz\"",
          "\"English\"",
          "\"en\"",
          "\"Esperanto\"",
          "\"eo\"",
          "\"Estonian\"",
          "\"et\"",
          "\"Faroese\"",
          "\"fo\"",
          "\"Farsi\"",
          "\"fa\"",
          "\"Finnish\"",
          "\"fi\"",
          "\"Flemish\"",
          "\"nl_BE\"",
          "\"French\"",
          "\"fr\"",
          "\"Galician\"",
          "\"gl\"",
          "\"Gallegan\"",
          "\"gl\"",
          "\"Georgian\"",
          "\"ka\"",
          "\"German\"",
          "\"de\"",
          "\"Greek\"",
          "\"el\"",
          "\"Greenlandic\"",
          "\"kl\"",
          "\"Guarani\"",
          "\"gn\"",
          "\"Gujarati\"",
          "\"gu\"",
          "\"Hawaiian\"",
          "\"haw\"",
          "\"Hebrew\"",
          "\"he\"",
          "\"Hindi\"",
          "\"hi\"",
          "\"Hungarian\"",
          "\"hu\"",
          "\"Icelandic\"",
          "\"is\"",
          "\"Indonesian\"",
          "\"id\"",
          "\"Inuktitut\"",
          "\"iu\"",
          "\"Irish\"",
          "\"ga\"",
          "\"Italian\"",
          "\"it\"",
          "\"Japanese\"",
          "\"ja\"",
          "\"Javanese\"",
          "\"jv\"",
          "\"Kalaallisut\"",
          "\"kl\"",
          "\"Kannada\"",
          "\"kn\"",
          "\"Kashmiri\"",
          "\"ks\"",
          "\"Kazakh\"",
          "\"kk\"",
          "\"Khmer\"",
          "\"km\"",
          "\"Kinyarwanda\"",
          "\"rw\"",
          "\"Kirghiz\"",
          "\"ky\"",
          "\"Korean\"",
          "\"ko\"",
          "\"Kurdish\"",
          "\"ku\"",
          "\"Latin\"",
          "\"la\"",
          "\"Latvian\"",
          "\"lv\"",
          "\"Lithuanian\"",
          "\"lt\"",
          "\"Macedonian\"",
          "\"mk\"",
          "\"Malagasy\"",
          "\"mg\"",
          "\"Malay\"",
          "\"ms\"",
          "\"Malayalam\"",
          "\"ml\"",
          "\"Maltese\"",
          "\"mt\"",
          "\"Manx\"",
          "\"gv\"",
          "\"Marathi\"",
          "\"mr\"",
          "\"Moldavian\"",
          "\"mo\"",
          "\"Mongolian\"",
          "\"mn\"",
          "\"Nepali\"",
          "\"ne\"",
          "\"Norwegian\"",
          "\"nb\"",
          "\"Nyanja\"",
          "\"ny\"",
          "\"Nynorsk\"",
          "\"nn\"",
          "\"Oriya\"",
          "\"or\"",
          "\"Oromo\"",
          "\"om\"",
          "\"Panjabi\"",
          "\"pa\"",
          "\"Pashto\"",
          "\"ps\"",
          "\"Persian\"",
          "\"fa\"",
          "\"Polish\"",
          "\"pl\"",
          "\"Portuguese\"",
          "\"pt\"",
          "\"Portuguese, Brazilian\"",
          "\"pt_BR\"",
          "\"Punjabi\"",
          "\"pa\"",
          "\"Pushto\"",
          "\"ps\"",
          "\"Quechua\"",
          "\"qu\"",
          "\"Romanian\"",
          "\"ro\"",
          "\"Ruanda\"",
          "\"rw\"",
          "\"Rundi\"",
          "\"rn\"",
          "\"Russian\"",
          "\"ru\"",
          "\"Sami\"",
          "\"se_NO\"",
          "\"Sanskrit\"",
          "\"sa\"",
          "\"Scottish\"",
          "\"gd\"",
          "\"Serbian\"",
          "\"sr\"",
          "\"Simplified Chinese\"",
          "\"zh_CN\"",
          "\"Sindhi\"",
          "\"sd\"",
          "\"Sinhalese\"",
          "\"si\"",
          "\"Slovak\"",
          "\"sk\"",
          "\"Slovenian\"",
          "\"sl\"",
          "\"Somali\"",
          "\"so\"",
          "\"Spanish\"",
          "\"es\"",
          "\"Sundanese\"",
          "\"su\"",
          "\"Swahili\"",
          "\"sw\"",
          "\"Swedish\"",
          "\"sv\"",
          "\"Tagalog\"",
          "\"tl\"",
          "\"Tajik\"",
          "\"tg\"",
          "\"Tajiki\"",
          "\"tg\"",
          "\"Tamil\"",
          "\"ta\"",
          "\"Tatar\"",
          "\"tt\"",
          "\"Telugu\"",
          "\"te\"",
          "\"Thai\"",
          "\"th\"",
          "\"Tibetan\"",
          "\"bo\"",
          "\"Tigrinya\"",
          "\"ti\"",
          "\"Tongan\"",
          "\"to\"",
          "\"Traditional Chinese\"",
          "\"zh_TW\"",
          "\"Turkish\"",
          "\"tr\"",
          "\"Turkmen\"",
          "\"tk\"",
          "\"Uighur\"",
          "\"ug\"",
          "\"Ukrainian\"",
          "\"uk\"",
          "\"Urdu\"",
          "\"ur\"",
          "\"Uzbek\"",
          "\"uz\"",
          "\"Vietnamese\"",
          "\"vi\"",
          "\"Welsh\"",
          "\"cy\"",
          "\"Yiddish\"",
          "\"yi\"",
          "\"az-Latn\"",
          "\"az\"",
          "\"ga-dots\"",
          "\"ga\"",
          "\"mn-Cyrl\"",
          "\"mn\"",
          "\"ms-Latn\"",
          "\"ms\"",
          "\"tg-Cyrl\"",
          "\"tg\"",
          "\"tt-Cyrl\"",
          "\"tt\"",
          "\"zh-Hans\"",
          "\"zh_CN\"",
          "\"zh-Hant\"",
          "\"zh_TW\"",
          "\"Arab\"",
          "\"arabic\"",
          "\"Cyrl\"",
          "\"cyrillic\"",
          "\"Mong\"",
          "\"mongolian\""
        ]
      },
      {
        "start_point": [
          1431,
          0
        ],
        "end_point": [
          1455,
          1
        ],
        "strings": []
      }
    ],
    "gl_locale_name_from_win32_LANGID": {
      "start_point": [
        1460,
        0
      ],
      "end_point": [
        2503,
        1
      ],
      "strings": [
        "\"GETTEXT_MUI\"",
        "\"af_ZA\"",
        "\"af\"",
        "\"sq_AL\"",
        "\"sq\"",
        "\"gsw_FR\"",
        "\"gsw\"",
        "\"am_ET\"",
        "\"am\"",
        "\"ar_SA\"",
        "\"ar_IQ\"",
        "\"ar_EG\"",
        "\"ar_LY\"",
        "\"ar_DZ\"",
        "\"ar_MA\"",
        "\"ar_TN\"",
        "\"ar_OM\"",
        "\"ar_YE\"",
        "\"ar_SY\"",
        "\"ar_JO\"",
        "\"ar_LB\"",
        "\"ar_KW\"",
        "\"ar_AE\"",
        "\"ar_BH\"",
        "\"ar_QA\"",
        "\"ar\"",
        "\"hy_AM\"",
        "\"hy\"",
        "\"as_IN\"",
        "\"as\"",
        "\"az@latin\"",
        "\"az_AZ@latin\"",
        "\"az@cyrillic\"",
        "\"az_AZ@cyrillic\"",
        "\"az\"",
        "\"ba_RU\"",
        "\"ba\"",
        "\"eu_ES\"",
        "\"eu\"",
        "\"be_BY\"",
        "\"be\"",
        "\"bn_IN\"",
        "\"bn_BD\"",
        "\"bn\"",
        "\"br_FR\"",
        "\"br\"",
        "\"bg_BG\"",
        "\"bg\"",
        "\"my_MM\"",
        "\"my\"",
        "\"km_KH\"",
        "\"km\"",
        "\"ca_ES\"",
        "\"ca\"",
        "\"chr_US\"",
        "\"chr\"",
        "\"zh_TW\"",
        "\"zh_CN\"",
        "\"zh_HK\"",
        "\"zh_SG\"",
        "\"zh_MO\"",
        "\"zh\"",
        "\"co_FR\"",
        "\"co\"",
        "\"hr\"",
        "\"hr_HR\"",
        "\"hr_BA\"",
        "\"sr\"",
        "\"sr\"",
        "\"sr_CS\"",
        "\"sr_RS\"",
        "\"sr_ME\"",
        "\"sr_BA\"",
        "\"sr@cyrillic\"",
        "\"sr_CS@cyrillic\"",
        "\"sr_RS@cyrillic\"",
        "\"sr_ME@cyrillic\"",
        "\"sr_BA@cyrillic\"",
        "\"bs\"",
        "\"bs\"",
        "\"bs_BA\"",
        "\"bs@cyrillic\"",
        "\"bs_BA@cyrillic\"",
        "\"hr\"",
        "\"cs_CZ\"",
        "\"cs\"",
        "\"da_DK\"",
        "\"da\"",
        "\"prs_AF\"",
        "\"prs\"",
        "\"dv_MV\"",
        "\"dv\"",
        "\"nl_NL\"",
        "\"nl_BE\"",
        "\"nl_SR\"",
        "\"nl\"",
        "\"bin_NG\"",
        "\"bin\"",
        "\"en_US\"",
        "\"en_GB\"",
        "\"en_AU\"",
        "\"en_CA\"",
        "\"en_NZ\"",
        "\"en_IE\"",
        "\"en_ZA\"",
        "\"en_JM\"",
        "\"en_GD\"",
        "\"en_BZ\"",
        "\"en_TT\"",
        "\"en_ZW\"",
        "\"en_PH\"",
        "\"en_ID\"",
        "\"en_HK\"",
        "\"en_IN\"",
        "\"en_MY\"",
        "\"en_SG\"",
        "\"en\"",
        "\"et_EE\"",
        "\"et\"",
        "\"fo_FO\"",
        "\"fo\"",
        "\"fa_IR\"",
        "\"fa\"",
        "\"fi_FI\"",
        "\"fi\"",
        "\"fr_FR\"",
        "\"fr_BE\"",
        "\"fr_CA\"",
        "\"fr_CH\"",
        "\"fr_LU\"",
        "\"fr_MC\"",
        "\"fr\"",
        "\"fr_RE\"",
        "\"fr_CG\"",
        "\"fr_SN\"",
        "\"fr_CM\"",
        "\"fr_CI\"",
        "\"fr_ML\"",
        "\"fr_MA\"",
        "\"fr_HT\"",
        "\"fr\"",
        "\"fy_NL\"",
        "\"fy\"",
        "\"ff_NG\"",
        "\"ff\"",
        "\"gd_GB\"",
        "\"ga_IE\"",
        "\"ga\"",
        "\"gl_ES\"",
        "\"gl\"",
        "\"ka_GE\"",
        "\"ka\"",
        "\"de_DE\"",
        "\"de_CH\"",
        "\"de_AT\"",
        "\"de_LU\"",
        "\"de_LI\"",
        "\"de\"",
        "\"el_GR\"",
        "\"el\"",
        "\"kl_GL\"",
        "\"kl\"",
        "\"gn_PY\"",
        "\"gn\"",
        "\"gu_IN\"",
        "\"gu\"",
        "\"ha\"",
        "\"ha_NG\"",
        "\"ha\"",
        "\"cpe_US\"",
        "\"cpe\"",
        "\"he_IL\"",
        "\"he\"",
        "\"hi_IN\"",
        "\"hi\"",
        "\"hu_HU\"",
        "\"hu\"",
        "\"nic_NG\"",
        "\"nic\"",
        "\"is_IS\"",
        "\"is\"",
        "\"ig_NG\"",
        "\"ig\"",
        "\"id_ID\"",
        "\"id\"",
        "\"iu\"",
        "\"iu_CA\"",
        "\"iu@latin\"",
        "\"iu_CA@latin\"",
        "\"iu\"",
        "\"it_IT\"",
        "\"it_CH\"",
        "\"it\"",
        "\"ja_JP\"",
        "\"ja\"",
        "\"kn_IN\"",
        "\"kn\"",
        "\"kr_NG\"",
        "\"kr\"",
        "\"ks_PK\"",
        "\"ks_IN\"",
        "\"ks\"",
        "\"kk_KZ\"",
        "\"kk\"",
        "\"qut_GT\"",
        "\"qut\"",
        "\"rw_RW\"",
        "\"rw\"",
        "\"kok_IN\"",
        "\"kok\"",
        "\"ko_KR\"",
        "\"ko\"",
        "\"ky_KG\"",
        "\"ky\"",
        "\"lo_LA\"",
        "\"lo\"",
        "\"la_VA\"",
        "\"la\"",
        "\"lv_LV\"",
        "\"lv\"",
        "\"lt_LT\"",
        "\"lt\"",
        "\"lb_LU\"",
        "\"lb\"",
        "\"mk_MK\"",
        "\"mk\"",
        "\"ms_MY\"",
        "\"ms_BN\"",
        "\"ms\"",
        "\"ml_IN\"",
        "\"ml\"",
        "\"mt_MT\"",
        "\"mt\"",
        "\"mni_IN\"",
        "\"mni\"",
        "\"mi_NZ\"",
        "\"mi\"",
        "\"arn_CL\"",
        "\"arn\"",
        "\"mr_IN\"",
        "\"mr\"",
        "\"moh_CA\"",
        "\"moh\"",
        "\"mn_MN\"",
        "\"mn_CN\"",
        "\"mn\"",
        "\"ne_NP\"",
        "\"ne_IN\"",
        "\"ne\"",
        "\"nb\"",
        "\"nb_NO\"",
        "\"nn\"",
        "\"nn_NO\"",
        "\"no\"",
        "\"oc_FR\"",
        "\"oc\"",
        "\"or_IN\"",
        "\"or\"",
        "\"om_ET\"",
        "\"om\"",
        "\"pap_AN\"",
        "\"pap\"",
        "\"ps_AF\"",
        "\"ps\"",
        "\"pl_PL\"",
        "\"pl\"",
        "\"pt_BR\"",
        "\"pt_PT\"",
        "\"pt\"",
        "\"pa_IN\"",
        "\"pa_PK\"",
        "\"pa\"",
        "\"qu_BO\"",
        "\"qu_EC\"",
        "\"qu_PE\"",
        "\"qu\"",
        "\"ro_RO\"",
        "\"ro_MD\"",
        "\"ro\"",
        "\"rm_CH\"",
        "\"rm\"",
        "\"ru_RU\"",
        "\"ru_MD\"",
        "\"ru\"",
        "\"se\"",
        "\"se_NO\"",
        "\"se_SE\"",
        "\"se_FI\"",
        "\"smj\"",
        "\"smj_NO\"",
        "\"smj_SE\"",
        "\"sma\"",
        "\"sma_NO\"",
        "\"sma_SE\"",
        "\"sms\"",
        "\"sms_FI\"",
        "\"smn\"",
        "\"smn_FI\"",
        "\"se\"",
        "\"sa_IN\"",
        "\"sa\"",
        "\"gd_GB\"",
        "\"gd\"",
        "\"sd_IN\"",
        "\"sd_PK\"",
        "\"sd\"",
        "\"si_LK\"",
        "\"si\"",
        "\"sk_SK\"",
        "\"sk\"",
        "\"sl_SI\"",
        "\"sl\"",
        "\"so_SO\"",
        "\"so\"",
        "\"hsb\"",
        "\"hsb_DE\"",
        "\"dsb\"",
        "\"dsb_DE\"",
        "\"wen\"",
        "\"nso_ZA\"",
        "\"nso\"",
        "\"es_ES\"",
        "\"es_MX\"",
        "\"es_ES@modern\"",
        "\"es_GT\"",
        "\"es_CR\"",
        "\"es_PA\"",
        "\"es_DO\"",
        "\"es_VE\"",
        "\"es_CO\"",
        "\"es_PE\"",
        "\"es_AR\"",
        "\"es_EC\"",
        "\"es_CL\"",
        "\"es_UY\"",
        "\"es_PY\"",
        "\"es_BO\"",
        "\"es_SV\"",
        "\"es_HN\"",
        "\"es_NI\"",
        "\"es_PR\"",
        "\"es_US\"",
        "\"es\"",
        "\"bnt_TZ\"",
        "\"bnt\"",
        "\"sw_KE\"",
        "\"sw\"",
        "\"sv_SE\"",
        "\"sv_FI\"",
        "\"sv\"",
        "\"syr_SY\"",
        "\"syr\"",
        "\"tl_PH\"",
        "\"tl\"",
        "\"tg\"",
        "\"tg_TJ\"",
        "\"tg\"",
        "\"ber_MA@arabic\"",
        "\"ber@latin\"",
        "\"ber_DZ@latin\"",
        "\"ber\"",
        "\"ta_IN\"",
        "\"ta\"",
        "\"tt_RU\"",
        "\"tt\"",
        "\"te_IN\"",
        "\"te\"",
        "\"th_TH\"",
        "\"th\"",
        "\"bo\"",
        "\"bo_BT\"",
        "\"bo\"",
        "\"ti_ET\"",
        "\"ti_ER\"",
        "\"ti\"",
        "\"ts_ZA\"",
        "\"ts\"",
        "\"tn_ZA\"",
        "\"tn\"",
        "\"tr_TR\"",
        "\"tr\"",
        "\"tk_TM\"",
        "\"tk\"",
        "\"ug_CN\"",
        "\"ug\"",
        "\"uk_UA\"",
        "\"uk\"",
        "\"ur_PK\"",
        "\"ur_IN\"",
        "\"ur\"",
        "\"uz\"",
        "\"uz_UZ\"",
        "\"uz@cyrillic\"",
        "\"uz_UZ@cyrillic\"",
        "\"uz\"",
        "\"ve_ZA\"",
        "\"ve\"",
        "\"vi_VN\"",
        "\"vi\"",
        "\"cy_GB\"",
        "\"cy\"",
        "\"wo_SN\"",
        "\"wo\"",
        "\"xh_ZA\"",
        "\"xh\"",
        "\"sah_RU\"",
        "\"sah\"",
        "\"ii_CN\"",
        "\"ii\"",
        "\"yi_IL\"",
        "\"yi\"",
        "\"yo_NG\"",
        "\"yo\"",
        "\"zu_ZA\"",
        "\"zu\"",
        "\"C\""
      ]
    },
    "gl_locale_name_from_win32_LCID": {
      "start_point": [
        2508,
        0
      ],
      "end_point": [
        2517,
        1
      ],
      "strings": []
    },
    "enum_locales_fn": {
      "start_point": [
        2527,
        0
      ],
      "end_point": [
        2553,
        1
      ],
      "strings": [
        "\"_\""
      ]
    },
    "get_lcid": {
      "start_point": [
        2562,
        0
      ],
      "end_point": [
        2588,
        1
      ],
      "strings": []
    },
    "string_hash": {
      "start_point": [
        2604,
        0
      ],
      "end_point": [
        2614,
        1
      ],
      "strings": []
    },
    "struniq": {
      "start_point": [
        2636,
        0
      ],
      "end_point": [
        2674,
        1
      ],
      "strings": [
        "\"C\""
      ]
    },
    "gl_locale_name_thread_unsafe": {
      "start_point": [
        2686,
        0
      ],
      "end_point": [
        2756,
        1
      ],
      "strings": [
        "\"\"",
        "\"C.UTF-8\"",
        "\"C\""
      ]
    },
    "gl_locale_name_thread": {
      "start_point": [
        2760,
        0
      ],
      "end_point": [
        2790,
        1
      ],
      "strings": []
    },
    "gl_locale_name_posix": {
      "start_point": [
        2802,
        0
      ],
      "end_point": [
        2829,
        1
      ],
      "strings": []
    },
    "gl_locale_name_environ": {
      "start_point": [
        2831,
        0
      ],
      "end_point": [
        2862,
        1
      ],
      "strings": [
        "\"LC_ALL\"",
        "\"LANG\"",
        "\"UTF-8\"",
        "\"C.UTF-8\""
      ]
    },
    "gl_locale_name_default": {
      "start_point": [
        2864,
        0
      ],
      "end_point": [
        2961,
        1
      ],
      "strings": [
        "\"C\"",
        "\"AppleLocale\"",
        "\"C\""
      ]
    },
    "gl_locale_name": {
      "start_point": [
        2969,
        0
      ],
      "end_point": [
        2983,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/localename.h": {},
  "coreutils/coreutils-8.29/gnulib-tests/macros.h": {},
  "coreutils/coreutils-8.29/gnulib-tests/minus-zero.h": {
    "compute_minus_zerof": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "compute_minus_zerod": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "compute_minus_zerol": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/nan.h": {
    "NaNf": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "NaNd": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "NaNl": [
      {
        "start_point": [
          70,
          0
        ],
        "end_point": [
          74,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          76,
          0
        ],
        "end_point": [
          81,
          1
        ],
        "strings": []
      }
    ]
  },
  "coreutils/coreutils-8.29/gnulib-tests/nap.h": {
    "diff_timespec": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "nap_get_stat": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": [
        "\"\\n\""
      ]
    },
    "nap_works": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "clear_temp_file": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "nap": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/null-ptr.h": {
    "null_ptr": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/perror.c": {
    "perror": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"%s: %s\\n\"",
        "\"%s\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/pthread_sigmask.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/randomd.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/randoml.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/setlocale.c": {
    "category_to_name": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"LC_COLLATE\"",
        "\"LC_CTYPE\"",
        "\"LC_MONETARY\"",
        "\"LC_NUMERIC\"",
        "\"LC_TIME\"",
        "\"LC_MESSAGES\"",
        "\"LC_XXX\""
      ]
    },
    "search": {
      "start_point": [
        567,
        0
      ],
      "end_point": [
        623,
        1
      ],
      "strings": []
    },
    "setlocale_unixlike": {
      "start_point": [
        627,
        0
      ],
      "end_point": [
        783,
        1
      ],
      "strings": [
        "\"POSIX\"",
        "\"C\""
      ]
    },
    "setlocale_single": {
      "start_point": [
        795,
        0
      ],
      "end_point": [
        809,
        1
      ],
      "strings": []
    },
    "rpl_setlocale": {
      "start_point": [
        815,
        0
      ],
      "end_point": [
        943,
        1
      ],
      "strings": [
        "\"C\"",
        "\"C\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/setsockopt.c": {
    "rpl_setsockopt": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/signature.h": {},
  "coreutils/coreutils-8.29/gnulib-tests/sleep.c": {
    "sleep": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "rpl_sleep": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/socket.c": {
    "rpl_socket": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/strerror_r.c": {
    "local_snprintf": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "safe_copy": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-accept.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-alignof.c": {
    "main": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-alloca-opt.c": {
    "do_allocation": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-areadlink-with-size.c": {
    "main": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-areadlink.c": {
    "do_areadlink": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-areadlink.h": {
    "test_areadlink": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": [
        "\"no_such\"",
        "\"no_such/\"",
        "\"\"",
        "\".\"",
        "\"./\"",
        "\"file/\"",
        "\"dir\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"link/\"",
        "\"link\"",
        "\"dir\"",
        "\"link\"",
        "\"dir\"",
        "\"link\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-areadlinkat.c": {
    "do_areadlinkat": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\"",
        "\".\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"nowhere\"",
        "\"link\"",
        "\"dir\"",
        "\"link\"",
        "\"nowhere\"",
        "\"link\"",
        "\"link\"",
        "\"..\"",
        "\"link\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-argmatch.c": {
    "main": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": [
        "\"klingon\"",
        "\"none\"",
        "\"nil\"",
        "\"nilpotent\"",
        "\"simpl\"",
        "\"simp\"",
        "\"sim\"",
        "\"numbered\"",
        "\"numbere\"",
        "\"number\"",
        "\"numbe\"",
        "\"numb\"",
        "\"num\"",
        "\"nu\"",
        "\"n\"",
        "\"ne\"",
        "\"si\"",
        "\"s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-argv-iter.c": {
    "write_nul_delimited_argv": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"1\"",
        "\"2\"",
        "\"3\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-arpa_inet.c": {
    "main": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-base32.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": [
        "\"abcdefghijklmnop\"",
        "\"MFRGGZDFMZTWQ2LKNNWG23TPOA======\"",
        "\"ME======\"",
        "\"ME======\"",
        "\"ME======\"",
        "\"ME======\"",
        "\"ME======\"",
        "\"MFRA====\"",
        "\"MFRGG===\"",
        "\"MFRGGZA=\"",
        "\"MFRGGZDF\"",
        "\"MFRGGZDFMY======\"",
        "\"MFRGGZDFMY======\"",
        "\"abcdefghijklmnop\"",
        "\"abcdefghijklmnop\"",
        "\"abcdefghijklmnop\"",
        "\"abcdefghijklmnop\"",
        "\"abcdefghijklmnop\"",
        "\"abcdefghijklmnop\"",
        "\"abcdefghijklmnop\"",
        "\"MFRGGZDFMZTWQ2LKNNWG23TPOA======\"",
        "\"abcdefghijklmnop\"",
        "\"abcdefghijklmnop\"",
        "\"MFRG\\nGZDFMZTWQ2LKNNW\\nG23TPOA======\"",
        "\"MFRGGZDFM\\nZTWQ2LK\"",
        "\"abcdefghij\"",
        "\"MF\\n\"",
        "\"RGGZDFMZ\"",
        "\"abcde\"",
        "\"TWQ2LK\"",
        "\"fghij\"",
        "\"\"",
        "\"\\n\\n\\n\\n\\n\"",
        "\" ! \"",
        "\"ABC\\nDEF\"",
        "\"AA\"",
        "\"AA=\"",
        "\"AABBAAxx\"",
        "\"AABBAA=X\"",
        "\"AABBAA=X\"",
        "\"AABBAA=A\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-base64.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"abcdefghijklmnop\"",
        "\"YWJjZGVmZw==\"",
        "\"YQ==\"",
        "\"YQ==\"",
        "\"YQ==\"",
        "\"YQ==\"",
        "\"YQ==\"",
        "\"YWI=\"",
        "\"YWJj\"",
        "\"YWJjZA==\"",
        "\"YWJjZA==\"",
        "\"abcdefg\"",
        "\"abcdefg\"",
        "\"abcdefg\"",
        "\"abcdefg\"",
        "\"abcdefg\"",
        "\"YWJjZGVmZ2hpamtsbW5vcA==\"",
        "\"abcdefg\"",
        "\"abcdefg\"",
        "\"YWJjZG\\nVmZ2hp\\namtsbW5vcA==\"",
        "\"YW\\nJjZGVmZ2hp\"",
        "\"abcdefghi\"",
        "\"YW\\n\"",
        "\"JjZGVmZ2\"",
        "\"abcdef\"",
        "\"hp\"",
        "\"ghi\"",
        "\"\"",
        "\"\\n\\n\\n\\n\\n\"",
        "\" ! \"",
        "\"abc\\ndef\"",
        "\"aa\"",
        "\"aa=\"",
        "\"aax\"",
        "\"aa=X\"",
        "\"aa=X\"",
        "\"aax=X\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-binary-io.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": [
        "\"t-bin-out0.tmp\"",
        "\"Hello\\n\"",
        "\"t-bin-out0.tmp\"",
        "\"Hello\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-bind.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"127.0.0.1\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-bitrotate.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        278,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-btowc.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": [
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-c-ctype.c": {
    "test_agree_with_C_locale": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "test_all": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": [
        "\"de_DE\"",
        "\"ja_JP.EUC-JP\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-c-strcasecmp.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"\"",
        "\"paragraph\"",
        "\"Paragraph\"",
        "\"paragrapH\"",
        "\"parAgRaph\"",
        "\"paragraph\"",
        "\"paraLyzed\"",
        "\"paraLyzed\"",
        "\"paragraph\"",
        "\"para\"",
        "\"paragraph\"",
        "\"paragraph\"",
        "\"para\"",
        "\"\\311mile\"",
        "\"\\351mile\"",
        "\"\\351mile\"",
        "\"\\311mile\"",
        "\"\\303\\266zg\\303\\274r\"",
        "\"\\303\\226ZG\\303\\234R\"",
        "\"\\303\\226ZG\\303\\234R\"",
        "\"\\303\\266zg\\303\\274r\"",
        "\"turkish\"",
        "\"TURK\\304\\260SH\"",
        "\"TURK\\304\\260SH\"",
        "\"turkish\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-c-strncasecmp.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": [
        "\"\"",
        "\"paragraph\"",
        "\"Paragraph\"",
        "\"paragraph\"",
        "\"Paragraph\"",
        "\"paragrapH\"",
        "\"parAgRaph\"",
        "\"paragrapH\"",
        "\"parAgRaph\"",
        "\"paragraph\"",
        "\"paraLyzed\"",
        "\"paragraph\"",
        "\"paraLyzed\"",
        "\"paragraph\"",
        "\"paraLyzed\"",
        "\"paragraph\"",
        "\"paraLyzed\"",
        "\"paraLyzed\"",
        "\"paragraph\"",
        "\"paraLyzed\"",
        "\"paragraph\"",
        "\"paraLyzed\"",
        "\"paragraph\"",
        "\"paraLyzed\"",
        "\"paragraph\"",
        "\"para\"",
        "\"paragraph\"",
        "\"para\"",
        "\"paragraph\"",
        "\"para\"",
        "\"paragraph\"",
        "\"para\"",
        "\"paragraph\"",
        "\"paragraph\"",
        "\"para\"",
        "\"paragraph\"",
        "\"para\"",
        "\"paragraph\"",
        "\"para\"",
        "\"paragraph\"",
        "\"para\"",
        "\"\\311mily\"",
        "\"\\351mile\"",
        "\"\\351mile\"",
        "\"\\311mily\"",
        "\"\\303\\266zg\\303\\274r\"",
        "\"\\303\\226ZG\\303\\234R\"",
        "\"\\303\\226ZG\\303\\234R\"",
        "\"\\303\\266zg\\303\\274r\"",
        "\"turkish\"",
        "\"TURK\\304\\260SH\"",
        "\"TURK\\304\\260SH\"",
        "\"turkish\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-calloc-gnu.c": {
    "eight": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-canonicalize.c": {
    "main": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\" ise\"",
        "\"/tra\"",
        "\"/\"",
        "\"/tra\"",
        "\"/\"",
        "\"/tra\"",
        "\"\"",
        "\"\"",
        "\".\"",
        "\"/tra/\"",
        "\"/tra/\"",
        "\"/zzz/..\"",
        "\"/zzz/..\"",
        "\"/ket\"",
        "\"ise\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"bef\"",
        "\"/plo\"",
        "\"tra\"",
        "\"/huk\"",
        "\"lum\"",
        "\"/bef\"",
        "\"wum\"",
        "\"/ouk\"",
        "\"../ise\"",
        "\"/ket\"",
        "\"s\"",
        "\"/p\"",
        "\"d\"",
        "\"/s\"",
        "\"/d/2\"",
        "\"../s/2\"",
        "\"/d/1\"",
        "\"//.//../..\"",
        "\"/droot\"",
        "\"/huk\"",
        "\"/\"",
        "\"/huk\"",
        "\"/\"",
        "\"/huk\"",
        "\"/huk\"",
        "\"/tra\"",
        "\"/huk\"",
        "\"/\"",
        "\"/tra\"",
        "\"/\"",
        "\"/tra\"",
        "\"/plo\"",
        "\"/bef\"",
        "\"/lum\"",
        "\"/plo\"",
        "\"/\"",
        "\"/lum\"",
        "\"/\"",
        "\"/lum\"",
        "\"/ouk\"",
        "\"/ouk\"",
        "\"/huk/\"",
        "\"/huk/\"",
        "\"/ouk/..\"",
        "\"/ouk/..\"",
        "\"ise\"",
        "\"ise\"",
        "\"/zzz\"",
        "\"/zzz\"",
        "\"/zzz/\"",
        "\"/zzz/\"",
        "\"/\"",
        "\"/zzz\"",
        "\"/\"",
        "\"/zzz\"",
        "\"/ouk\"",
        "\"/ouk\"",
        "\"/ouk/\"",
        "\"/ouk/\"",
        "\"/\"",
        "\"/wum\"",
        "\"/\"",
        "\"/wum\"",
        "\"t-can.zzz/zzz\"",
        "\"t-can.zzz/zzz\"",
        "\"/t-can.zzz/zzz\"",
        "\"/p/1\"",
        "\"/d/2\"",
        "\"//.\"",
        "\"//.\"",
        "\"/droot\"",
        "\"/droot\"",
        "\"/\"",
        "\"//\"",
        "\"/\"",
        "\"/\"",
        "\"/\"",
        "\"/\"",
        "\"//\"",
        "\"//\"",
        "\"//\"",
        "\"//\"",
        "\"/d/1\"",
        "\"/d/2\"",
        "\"/s\"",
        "\"/plo\"",
        "\"/bef\"",
        "\"/ket\"",
        "\"/tra\"",
        "\"ise\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-chdir.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": [
        "\"/\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-chown.c": {
    "main": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-chown.h": {
    "test_chown": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        208,
        1
      ],
      "strings": [
        "\"dir\"",
        "\"dir\"",
        "\"skipping test: no support for ownership\\n\"",
        "\"dir/file\"",
        "\"\"",
        "\"no_such\"",
        "\"no_such/\"",
        "\"dir/file/\"",
        "\"dir/file\"",
        "\"dir/file\"",
        "\"dir/file\"",
        "\"link\"",
        "\"dir/link2\"",
        "\"dir\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"dir/link2/\"",
        "\"file\"",
        "\"dir/link\"",
        "\"dir/link2/\"",
        "\"dir/file\"",
        "\"dir/link\"",
        "\"dir/link2/\"",
        "\"dir/file\"",
        "\"dir/link\"",
        "\"dir\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-cloexec.c": {
    "is_inheritable": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "zero": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        65,
        36
      ],
      "strings": []
    },
    "is_mode": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"test-cloexec.tmp\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-close.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-closein.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-connect.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"127.0.0.1\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-copy-acl.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"could not open file \\\"%s\\\"\\n\"",
        "\"could not open file \\\"%s\\\"\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-ctype.c": {
    "main": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-di-set.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-dirent-safer.c": {
    "main": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"w\"",
        "\".\"",
        "\".\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-dirent.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-dirname.c": {
    "main": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"dir_name '%s': got '%s' len %d,\"",
        "\" expected '%s' len %lu\\n\"",
        "\"last_component '%s': got '%s', expected '%s'\\n\"",
        "\"base_name '%s': got '%s' len %d,\"",
        "\" expected '%s' len %lu\\n\"",
        "\"strip_trailing_slashes '%s': got %s %s, expected %s %s\\n\"",
        "\"changed\"",
        "\"unchanged\"",
        "\"changed\"",
        "\"unchanged\"",
        "\"'%s': got %s, expected %s\\n\"",
        "\"absolute\"",
        "\"relative\"",
        "\"absolute\"",
        "\"relative\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-dup-safer.c": {
    "zero": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        45,
        36
      ],
      "strings": []
    },
    "is_open": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "is_inheritable": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "is_mode": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": [
        "\"w\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-dup.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-dup2.c": {
    "is_open": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "is_inheritable": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "zero": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        95,
        36
      ],
      "strings": []
    },
    "is_mode": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": [
        "\"test-dup2.tmp\"",
        "\"/dev/null\"",
        "\"1\"",
        "\"2\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-environ.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": [
        "\"PATH=\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-errno.c": {
    "main": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-exclude.c": {
    "main": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"usage: %s file -- words...\"",
        "\"no-\"",
        "\"leading_dir\"",
        "\"casefold\"",
        "\"error loading %s\"",
        "\"%s: %d\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-faccessat.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": [
        "\"foo\"",
        "\"foo\"",
        "\".\"",
        "\"./\"",
        "\"file\"",
        "\"file/\"",
        "\".\"",
        "\"link1\"",
        "\"link1\"",
        "\"link1/\"",
        "\", BASE \"",
        "\"link2\"",
        "\"link2/\"",
        "\"no-such-file\"",
        "\"link3\"",
        "\"link3\"",
        "\"link3/\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fadvise.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fchdir.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\".\"",
        "\"/dev/null\"",
        "\"..\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fchmodat.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": [
        "\"foo\"",
        "\"foo\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fchownat.c": {
    "do_chown": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "do_lchown": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\"",
        "\"foo\"",
        "\"foo\"",
        "\".\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fclose.c": {
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": [
        "\"hello world\"",
        "\"w\"",
        "\"r\"",
        "\"w+\"",
        "\"r\"",
        "\"r\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fcntl-h.c": {
    "main": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fcntl-safer.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fcntl.c": {
    "zero": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        49,
        36
      ],
      "strings": []
    },
    "is_open": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "is_inheritable": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "is_mode": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "func1": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "func2": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "check_flags": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        412,
        1
      ],
      "strings": [
        "\"test-fcntl.tmp\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fdatasync.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": [
        "\"test-fdatasync.txt\"",
        "\"hello\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fdopen.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"w\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fdopendir.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"test-fdopendir.tmp\"",
        "\"test-fdopendir.tmp\"",
        "\".\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fdutimensat.c": {
    "do_futimens": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "do_fdutimens": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "do_lutimens": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "do_lutimens1": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "do_utimens": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\"",
        "\".\"",
        "\"dir\"",
        "\"file\"",
        "\".\"",
        "\"dir/file\"",
        "\"file\"",
        "\".\"",
        "\"..\"",
        "\"dir\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fflush.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\"test-fflush.txt\"",
        "\"w\"",
        "\"1234567890ABCDEFG\"",
        "\"Failed to create sample file.\\n\"",
        "\"test-fflush.txt\"",
        "\"test-fflush.txt\"",
        "\"r\"",
        "\"Failed initial read of sample file.\\n\"",
        "\"test-fflush.txt\"",
        "\"Sample file was not buffered after fread.\\n\"",
        "\"test-fflush.txt\"",
        "\"Failed to flush-fseek sample file.\\n\"",
        "\"test-fflush.txt\"",
        "\"File offset is wrong after fseek: %ld.\\n\"",
        "\"test-fflush.txt\"",
        "\"ftell result is wrong after fseek: %ld.\\n\"",
        "\"test-fflush.txt\"",
        "\"Failed to read next byte after fseek.\\n\"",
        "\"test-fflush.txt\"",
        "\"Sample file was not buffered after fgetc.\\n\"",
        "\"test-fflush.txt\"",
        "\"Failed to flush-fseeko sample file.\\n\"",
        "\"test-fflush.txt\"",
        "\"File offset is wrong after fseeko: %ld.\\n\"",
        "\"test-fflush.txt\"",
        "\"ftell result is wrong after fseeko: %ld.\\n\"",
        "\"test-fflush.txt\"",
        "\"Failed to read next byte after fseeko.\\n\"",
        "\"test-fflush.txt\"",
        "\"test-fflush.txt\"",
        "\"w\"",
        "\"w\"",
        "\"w\"",
        "\"test-fflush.txt\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fflush2.c": {
    "main": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fgetc.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": [
        "\"test-fgetc.txt\"",
        "\"hello world\"",
        "\"r\"",
        "\"r\"",
        "\"r\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-file-has-acl.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": [
        "\"could not access file \\\"%s\\\"\\n\"",
        "\"could not access the ACL of file \\\"%s\\\"\\n\"",
        "\"%s\\n\"",
        "\"yes\"",
        "\"no\"",
        "\"no\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-filenamecat.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": [
        "\"a\"",
        "\"b\"",
        "\"a/b\"",
        "\"a/\"",
        "\"b\"",
        "\"a/b\"",
        "\"a/\"",
        "\"/b\"",
        "\"a/b\"",
        "\"a\"",
        "\"/b\"",
        "\"a/b\"",
        "\"/\"",
        "\"b\"",
        "\"/b\"",
        "\"/\"",
        "\"/b\"",
        "\"/b\"",
        "\"/\"",
        "\"/\"",
        "\"/\"",
        "\"a\"",
        "\"/\"",
        "\"a/\"",
        "\"/a\"",
        "\"/\"",
        "\"/a/\"",
        "\"a\"",
        "\"//b\"",
        "\"a/b\"",
        "\"\"",
        "\"a\"",
        "\"a\"",
        "\"test #%u: got %s, expected %s\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-filevercmp.c": {
    "main": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"a\"",
        "\"a\"",
        "\"a\"",
        "\"b\"",
        "\"b\"",
        "\"a\"",
        "\"a0\"",
        "\"a\"",
        "\"00\"",
        "\"01\"",
        "\"01\"",
        "\"010\"",
        "\"9\"",
        "\"10\"",
        "\"0a\"",
        "\"0\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-float.c": {
    "pow2f": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "pow2d": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "pow2l": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "test_float": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    },
    "test_double": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "test_long_double": {
      "start_point": [
        289,
        0
      ],
      "end_point": [
        353,
        1
      ],
      "strings": []
    },
    "main": [
      {
        "start_point": [
          355,
          0
        ],
        "end_point": [
          372,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          376,
          0
        ],
        "end_point": [
          381,
          1
        ],
        "strings": [
          "\"Skipping test: FLT_RADIX is not 2.\\n\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fnmatch.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"*\"",
        "\"\"",
        "\"*\"",
        "\"foo\"",
        "\"*\"",
        "\"bar\"",
        "\"*\"",
        "\"*\"",
        "\"**\"",
        "\"f\"",
        "\"**\"",
        "\"foo.txt\"",
        "\"*.*\"",
        "\"foo.txt\"",
        "\"foo*.txt\"",
        "\"foobar.txt\"",
        "\"foo.txt\"",
        "\"foo.txt\"",
        "\"foo\\\\.txt\"",
        "\"foo.txt\"",
        "\"foo\\\\.txt\"",
        "\"foo.txt\"",
        "\"[/b\"",
        "\"[/b\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fopen-safer.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fopen.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fopen.h": {
    "test_fopen": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"file\"",
        "\"w\"",
        "\"file/\"",
        "\"r\"",
        "\"nonexist.ent/\"",
        "\"w\"",
        "\".\"",
        "\"w\"",
        "\"/dev/null\"",
        "\"r\"",
        "\"/dev/null\"",
        "\"w\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fpending.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": [
        "\"foo\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fprintf-posix.h": {
    "test_function": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"%ju %d\\n\"",
        "\"%zu %d\\n\"",
        "\"%tu %d\\n\"",
        "\"%a %d\\n\"",
        "\"%a %d\\n\"",
        "\"%a %d\\n\"",
        "\"%010a %d\\n\"",
        "\"%f %d\\n\"",
        "\"%f %d\\n\"",
        "\"%f %d\\n\"",
        "\"%f %d\\n\"",
        "\"%015f %d\\n\"",
        "\"%.f %d\\n\"",
        "\"%.2f %d\\n\"",
        "\"%.2f %d\\n\"",
        "\"%Lf %d\\n\"",
        "\"%Lf %d\\n\"",
        "\"%Lf %d\\n\"",
        "\"%Lf %d\\n\"",
        "\"%015Lf %d\\n\"",
        "\"%.Lf %d\\n\"",
        "\"%.2Lf %d\\n\"",
        "\"%.2Lf %d\\n\"",
        "\"%F %d\\n\"",
        "\"%F %d\\n\"",
        "\"%F %d\\n\"",
        "\"%F %d\\n\"",
        "\"%015F %d\\n\"",
        "\"%.F %d\\n\"",
        "\"%.2F %d\\n\"",
        "\"%.2F %d\\n\"",
        "\"%LF %d\\n\"",
        "\"%LF %d\\n\"",
        "\"%LF %d\\n\"",
        "\"%LF %d\\n\"",
        "\"%015LF %d\\n\"",
        "\"%.LF %d\\n\"",
        "\"%.2LF %d\\n\"",
        "\"%.2LF %d\\n\"",
        "\"%2$d %1$d\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fpurge.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"w\"",
        "\"foobarsh\"",
        "\"r+\"",
        "\"g\"",
        "\"bz\"",
        "\"r\"",
        "\"foogars\"",
        "\"r+\"",
        "\"r\"",
        "\"foogarsh!\"",
        "\"Skipping test: prerequisite file operations failed.\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fputc.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"test-fputc.txt\"",
        "\"w\"",
        "\"w\"",
        "\"w\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fread.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"test-fread.txt\"",
        "\"hello world\"",
        "\"r\"",
        "\"r\"",
        "\"r\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-freadahead.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-freading.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": [
        "\"w\"",
        "\"foobarsh\"",
        "\"r\"",
        "\"r+\"",
        "\"r+\"",
        "\"a\"",
        "\"bla\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-freadptr.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"#!/bin/sh\\n\\n./test-freadptr${EXEEXT} 5 < \\\"$srcdir/test-freadptr.sh\\\" || exit 1\\ncat \\\"$srcdir/test-freadptr.sh\\\" | ./test-freadptr${EXEEXT} 5 || exit 1\\nexit 0\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-freadptr2.c": {
    "freadptrbufsize": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-freadseek.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"#!/bin/sh\\n\\n./test-freadseek${EXEEXT} 5 19 6 7 18 9 19 < \\\"$srcdir/test-freadseek.sh\\\" || exit 1\\ncat \\\"$srcdir/test-freadseek.sh\\\" | ./test-freadseek${EXEEXT} 5 19 6 7 18 9 19 || exit 1\\nexit 0\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-freopen-safer.c": {
    "main": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\"w\"",
        "\"/dev/null\"",
        "\"r\"",
        "\"/dev/null\"",
        "\"w\"",
        "\"/dev/null\"",
        "\"r+\"",
        "\"/dev/null\"",
        "\"r\"",
        "\"/dev/null\"",
        "\"w\"",
        "\"/dev/null\"",
        "\"w\"",
        "\"/dev/null\"",
        "\"w\"",
        "\"/dev/null\"",
        "\"w\"",
        "\"/dev/null\"",
        "\"a\"",
        "\"/dev/null\"",
        "\"w\"",
        "\"/dev/null\"",
        "\"a+\"",
        "\"/dev/null\"",
        "\"w+\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-freopen.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": [
        "\"test-freopen.txt\"",
        "\"/dev/null\"",
        "\"r\"",
        "\"w+\"",
        "\"r\"",
        "\"freopen\"",
        "\"w+\"",
        "\"r\"",
        "\"w+\"",
        "\"r\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-frexp.c": {
    "main": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-frexp.h": {
    "my_ldexp": {
      "start_point": [
        16,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": []
    },
    "test_function": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-frexpl.c": {
    "main": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fseek.c": {
    "main": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": [
        "\"Skipping test: ungetc cannot handle arbitrary bytes\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fseeko.c": {
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": [
        "\"Skipping test: ungetc cannot handle arbitrary bytes\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fseeko3.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"r\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fseeko4.c": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"r\"",
        "\"w\"",
        "\"w\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fseterr.c": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fstat.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fstatat.c": {
    "do_stat": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "do_lstat": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\"",
        "\"foo\"",
        "\"foo\"",
        "\".\"",
        "\"skipping test: symlinks not supported on this file system\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fsync.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"test-fsync.txt\"",
        "\"hello\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-ftell.c": {
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"Skipping test: ungetc cannot handle arbitrary bytes\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-ftell3.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": [
        "\"w\"",
        "\"foogarsh\"",
        "\"r+\"",
        "\"r\"",
        "\"foogarsh!\"",
        "\"Skipping test: prerequisite file operations failed.\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-ftello.c": {
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": [
        "\"Skipping test: ungetc cannot handle arbitrary bytes\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-ftello3.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": [
        "\"w\"",
        "\"foogarsh\"",
        "\"r+\"",
        "\"r\"",
        "\"foogarsh!\"",
        "\"Skipping test: prerequisite file operations failed.\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-ftello4.c": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": [
        "\"r\"",
        "\"w\"",
        "\"w\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-ftruncate.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-futimens.c": {
    "main": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-futimens.h": {
    "test_futimens": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": [
        "\"file\"",
        "\"skipping test: \"",
        "\"setting fd time not supported on this file system\\n\"",
        "\"file\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-fwrite.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"test-fwrite.txt\"",
        "\"w\"",
        "\"world\"",
        "\"w\"",
        "\"world\"",
        "\"w\"",
        "\"world\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getaddrinfo.c": {
    "simple": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": [
        "\"Finding %s service %s...\\n\"",
        "\"res %d: %s\\n\"",
        "\"skipping getaddrinfo test: no network?\\n\"",
        "\"system error: %s\\n\"",
        "\"\\tflags %x\\n\"",
        "\"\\tfamily %x\\n\"",
        "\"\\tsocktype %x\\n\"",
        "\"\\tprotocol %x\\n\"",
        "\"\\taddrlen %lu: \"",
        "\"\\tFound %s\\n\"",
        "\"\\tFound %s...\\n\"",
        "\"\\t\\tgetnameinfo %d: %s\\n\"",
        "\"\\t\\tip %s\\n\"",
        "\"\\t\\tport %s\\n\""
      ]
    },
    "main": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getcwd-lgpl.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"changed to directory %s\\n\"",
        "\"cwd=%s\\n\"",
        "\".//./.\"",
        "\"/./\"",
        "\"/../\"",
        "\"//\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getcwd.c": {
    "test_abort_bug": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"confdir-14B---\"",
        "\"..\""
      ]
    },
    "test_long_name": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": [
        "\"..\""
      ]
    },
    "main": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getdelim.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"test-getdelim.txt\"",
        "\"wb\"",
        "\"anAnbcnd\\0f\"",
        "\"Failed to create sample file.\\n\"",
        "\"test-getdelim.txt\"",
        "\"test-getdelim.txt\"",
        "\"rb\"",
        "\"Failed to reopen sample file.\\n\"",
        "\"test-getdelim.txt\"",
        "\"an\"",
        "\"An\"",
        "\"bcn\"",
        "\"d\\0f\"",
        "\"test-getdelim.txt\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getdtablesize.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getgroups.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"skipping test: no support for groups\\n\"",
        "\"%d\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-gethostname.c": {
    "main": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": [
        "\"HOST_NAME_MAX impossibly small?! %d\\n\"",
        "\"gethostname failed, rc %d errno %d\\n\"",
        "\"gethostname left buffer untouched.\\n\"",
        "\"hostname: %s\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getline.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"test-getline.txt\"",
        "\"wb\"",
        "\"a\\nA\\nbc\\nd\\0f\"",
        "\"Failed to create sample file.\\n\"",
        "\"test-getline.txt\"",
        "\"test-getline.txt\"",
        "\"rb\"",
        "\"Failed to reopen sample file.\\n\"",
        "\"test-getline.txt\"",
        "\"a\\n\"",
        "\"A\\n\"",
        "\"bc\\n\"",
        "\"d\\0f\"",
        "\"test-getline.txt\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getloadavg.c": {
    "check_avg": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": [
        "\"%d-minute: %f  \"",
        "\"suspiciously low %d-minute average: %f\\n\"",
        "\"suspiciously high %d-minute average: %f\\n\""
      ]
    },
    "main": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": [
        "\"Skipping test; load average not supported\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getlogin.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getlogin.h": {
    "test_getlogin_result": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"Skipping test: no entry in utmp file.\\n\"",
        "\"Skipping test: stdin is not a tty.\\n\"",
        "\"Skipping test: stdin is not a tty.\\n\"",
        "\"Skipping test: %s: no such user\\n\"",
        "\"USERNAME\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getndelim2.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": [
        "\"test-getndelim2.txt\"",
        "\"wb+\"",
        "\"a\\nbc\\nd\\0f\"",
        "\"Failed to create sample file.\\n\"",
        "\"test-getndelim2.txt\"",
        "\"a\\n\"",
        "\"bc\\n\"",
        "\"d\\0f\"",
        "\"eeeeeea\\nb\"",
        "\"eeeeeea\\nb\"",
        "\"\\0f\\0eeea\\nb\"",
        "\"%500x%c\"",
        "\"test-getndelim2.txt\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getopt-gnu.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/test-getopt-main.h": {
    "main": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": [
        "\"w\"",
        "\"w\"",
        "\"POSIXLY_CORRECT\"",
        "\"1\"",
        "\"POSIXLY_CORRECT\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getopt-posix.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/test-getopt.h": {
    "getopt_loop": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "test_getopt": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        1390,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\"",
        "\"program\"",
        "\"-a\"",
        "\"foo\"",
        "\"bar\"",
        "\"ab\"",
        "\"program\"",
        "\"-b\"",
        "\"-a\"",
        "\"foo\"",
        "\"bar\"",
        "\"ab\"",
        "\"program\"",
        "\"-ba\"",
        "\"foo\"",
        "\"bar\"",
        "\"ab\"",
        "\"program\"",
        "\"-ab\"",
        "\"-a\"",
        "\"foo\"",
        "\"bar\"",
        "\"ab\"",
        "\"program\"",
        "\"-pfoo\"",
        "\"bar\"",
        "\"p:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"bar\"",
        "\"p:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-ab\"",
        "\"-q\"",
        "\"baz\"",
        "\"-pfoo\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"foo\"",
        "\"baz\"",
        "\"program\"",
        "\"-pfoo\"",
        "\"bar\"",
        "\"p::q::\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"bar\"",
        "\"p::q::\"",
        "\"program\"",
        "\"-p\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp::q::\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"-x\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"-x\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"-x\"",
        "\"-a\"",
        "\"bar\"",
        "\":abp:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"-:\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"-:\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"-:\"",
        "\"-a\"",
        "\"bar\"",
        "\":abp:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-ap\"",
        "\"abp:q:\"",
        "\"program\"",
        "\"-ap\"",
        "\"abp:q:\"",
        "\"program\"",
        "\"-ap\"",
        "\":abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"program\"",
        "\"-p\"",
        "\"billy\"",
        "\"-a\"",
        "\"donald\"",
        "\"duck\"",
        "\"bar\"",
        "\"billy\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"--\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"--\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"program\"",
        "\"-p\"",
        "\"billy\"",
        "\"-a\"",
        "\"--\"",
        "\"donald\"",
        "\"duck\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"billy\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"-abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"billy\"",
        "\"donald\"",
        "\"duck\"",
        "\"bar\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"--\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"-abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"--\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"billy\"",
        "\"donald\"",
        "\"duck\"",
        "\"donald\"",
        "\"duck\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:-\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"program\"",
        "\"-p\"",
        "\"billy\"",
        "\"-a\"",
        "\"donald\"",
        "\"duck\"",
        "\"bar\"",
        "\"billy\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"+abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"program\"",
        "\"-+\"",
        "\"+abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"--\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"+abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"--\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:+\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"program\"",
        "\"-p\"",
        "\"billy\"",
        "\"-a\"",
        "\"donald\"",
        "\"duck\"",
        "\"bar\"",
        "\"billy\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"+:abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"program\"",
        "\"-p\"",
        "\"+:abp:q:\"",
        "\"program\"",
        "\"-b\"",
        "\"-p\"",
        "\"+:abp:q:\"",
        "\"program\"",
        "\"-W\"",
        "\"dummy\"",
        "\"W;\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getopt_long.h": {
    "getopt_long_loop": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "do_getopt_long": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "test_getopt_long": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        1812,
        1
      ],
      "strings": [
        "\"program\"",
        "\"--x\"",
        "\"ab\"",
        "\"program\"",
        "\"--xt\"",
        "\"ab\"",
        "\"program\"",
        "\"--xtr\"",
        "\"ab\"",
        "\"program\"",
        "\"--xtra\"",
        "\"ab\"",
        "\"program\"",
        "\"--xtre\"",
        "\"ab\"",
        "\"program\"",
        "\"--xtrem\"",
        "\"ab\"",
        "\"program\"",
        "\"--xtreme\"",
        "\"ab\"",
        "\"program\"",
        "\"--xtremel\"",
        "\"ab\"",
        "\"program\"",
        "\"--xtremely\"",
        "\"ab\"",
        "\"program\"",
        "\"-W\"",
        "\"W;\"",
        "\"program\"",
        "\"-Wunknown\"",
        "\"W;\"",
        "\"unknown\"",
        "\"program\"",
        "\"-W\"",
        "\"unknown\"",
        "\"W;\"",
        "\"unknown\"",
        "\"program\"",
        "\"-W\"",
        "\"dummy\"",
        "\"W;\"",
        "\"program\"",
        "\"-a\"",
        "\"foo\"",
        "\"bar\"",
        "\"ab\"",
        "\"program\"",
        "\"-b\"",
        "\"-a\"",
        "\"foo\"",
        "\"bar\"",
        "\"ab\"",
        "\"program\"",
        "\"-ba\"",
        "\"foo\"",
        "\"bar\"",
        "\"ab\"",
        "\"program\"",
        "\"-ab\"",
        "\"-a\"",
        "\"foo\"",
        "\"bar\"",
        "\"ab\"",
        "\"program\"",
        "\"--alpha\"",
        "\"foo\"",
        "\"bar\"",
        "\"ab\"",
        "\"program\"",
        "\"--beta\"",
        "\"--alpha\"",
        "\"foo\"",
        "\"bar\"",
        "\"ab\"",
        "\"program\"",
        "\"--alpha\"",
        "\"--beta\"",
        "\"--alpha\"",
        "\"--beta\"",
        "\"foo\"",
        "\"bar\"",
        "\"ab\"",
        "\"program\"",
        "\"-Walpha\"",
        "\"foo\"",
        "\"bar\"",
        "\"abW;\"",
        "\"program\"",
        "\"-W\"",
        "\"beta\"",
        "\"-W\"",
        "\"alpha\"",
        "\"foo\"",
        "\"bar\"",
        "\"aW;b\"",
        "\"program\"",
        "\"-Walpha\"",
        "\"-Wbeta\"",
        "\"-Walpha\"",
        "\"-Wbeta\"",
        "\"foo\"",
        "\"bar\"",
        "\"W;ab\"",
        "\"program\"",
        "\"-pfoo\"",
        "\"bar\"",
        "\"p:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"bar\"",
        "\"p:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-ab\"",
        "\"-q\"",
        "\"baz\"",
        "\"-pfoo\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"foo\"",
        "\"baz\"",
        "\"program\"",
        "\"--p=foo\"",
        "\"bar\"",
        "\"p:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"--p\"",
        "\"foo\"",
        "\"bar\"",
        "\"p:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-ab\"",
        "\"--q\"",
        "\"baz\"",
        "\"--p=foo\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"foo\"",
        "\"baz\"",
        "\"program\"",
        "\"-Wp=foo\"",
        "\"bar\"",
        "\"p:q:W;\"",
        "\"foo\"",
        "\"program\"",
        "\"-W\"",
        "\"p\"",
        "\"foo\"",
        "\"bar\"",
        "\"p:W;q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-ab\"",
        "\"-Wq\"",
        "\"baz\"",
        "\"-W\"",
        "\"p=foo\"",
        "\"bar\"",
        "\"W;abp:q:\"",
        "\"foo\"",
        "\"baz\"",
        "\"program\"",
        "\"-pfoo\"",
        "\"bar\"",
        "\"p::q::\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"bar\"",
        "\"p::q::\"",
        "\"program\"",
        "\"-p\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp::q::\"",
        "\"program\"",
        "\"--p=foo\"",
        "\"bar\"",
        "\"p::q::\"",
        "\"foo\"",
        "\"program\"",
        "\"--p\"",
        "\"foo\"",
        "\"bar\"",
        "\"p::q::\"",
        "\"program\"",
        "\"--p=\"",
        "\"foo\"",
        "\"bar\"",
        "\"p::q::\"",
        "\"program\"",
        "\"--p\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp::q::\"",
        "\"program\"",
        "\"-Wp=foo\"",
        "\"bar\"",
        "\"p::q::W;\"",
        "\"foo\"",
        "\"program\"",
        "\"-Wp\"",
        "\"foo\"",
        "\"bar\"",
        "\"p::q::W;\"",
        "\"program\"",
        "\"-Wp=\"",
        "\"foo\"",
        "\"bar\"",
        "\"W;p::q::\"",
        "\"program\"",
        "\"-W\"",
        "\"p=\"",
        "\"foo\"",
        "\"bar\"",
        "\"W;p::q::\"",
        "\"program\"",
        "\"-W\"",
        "\"p\"",
        "\"-a\"",
        "\"bar\"",
        "\"W;abp::q::\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"-x\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"-:\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"--a=\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"-p\"",
        "\"foo\"",
        "\"--b=\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"foo\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"program\"",
        "\"-p\"",
        "\"billy\"",
        "\"-a\"",
        "\"donald\"",
        "\"duck\"",
        "\"bar\"",
        "\"billy\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"--\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"program\"",
        "\"-p\"",
        "\"billy\"",
        "\"-a\"",
        "\"--\"",
        "\"donald\"",
        "\"duck\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"billy\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"-abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"billy\"",
        "\"donald\"",
        "\"duck\"",
        "\"bar\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"--\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"-abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"--\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"billy\"",
        "\"donald\"",
        "\"duck\"",
        "\"donald\"",
        "\"duck\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:-\"",
        "\"program\"",
        "\"-p\"",
        "\"billy\"",
        "\"-a\"",
        "\"donald\"",
        "\"duck\"",
        "\"bar\"",
        "\"billy\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"+abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"program\"",
        "\"-+\"",
        "\"+abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"--\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"+abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"--\"",
        "\"-b\"",
        "\"foo\"",
        "\"-q\"",
        "\"johnny\"",
        "\"bar\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:+\"",
        "\"program\"",
        "\"-p\"",
        "\"billy\"",
        "\"-a\"",
        "\"donald\"",
        "\"duck\"",
        "\"bar\"",
        "\"billy\""
      ]
    },
    "test_getopt_long_posix": {
      "start_point": [
        1818,
        0
      ],
      "end_point": [
        1926,
        1
      ],
      "strings": [
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"abp:q:\"",
        "\"program\"",
        "\"donald\"",
        "\"-p\"",
        "\"billy\"",
        "\"duck\"",
        "\"-a\"",
        "\"bar\"",
        "\"program\"",
        "\"-p\"",
        "\"billy\"",
        "\"p::\"",
        "\"program\"",
        "\"-a\"",
        "\"billy\"",
        "\"-b\"",
        "\"-ab\"",
        "\"billy\""
      ]
    },
    "do_getopt_long_only": {
      "start_point": [
        1931,
        0
      ],
      "end_point": [
        1936,
        1
      ],
      "strings": []
    },
    "test_getopt_long_only": {
      "start_point": [
        1938,
        0
      ],
      "end_point": [
        2143,
        1
      ],
      "strings": [
        "\"program\"",
        "\"-x\"",
        "\"ab\"",
        "\"program\"",
        "\"-x\"",
        "\"abx\"",
        "\"program\"",
        "\"--x\"",
        "\"abx\"",
        "\"program\"",
        "\"-b\"",
        "\"abx\"",
        "\"program\"",
        "\"--b\"",
        "\"abx\"",
        "\"program\"",
        "\"-xt\"",
        "\"ab\"",
        "\"program\"",
        "\"-xt\"",
        "\"abx\"",
        "\"program\"",
        "\"-xtra\"",
        "\"ab\"",
        "\"program\"",
        "\"-xtreme\"",
        "\"abx:\"",
        "\"program\"",
        "\"-xtremel\"",
        "\"ab\"",
        "\"program\"",
        "\"-xtremel\"",
        "\"abx::\"",
        "\"program\"",
        "\"-xtras\"",
        "\"abx::\"",
        "\"tras\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-getprogname.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"lt-\"",
        "\"test-getprogname\"",
        "\"test-getprogname\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-gettimeofday.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"gettimeofday still clobbers the localtime buffer!\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-hash.c": {
    "hash_compare_strings": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "hash_freer": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "insert_new": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "walk": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "get_seed": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"0123456789\""
      ]
    },
    "main": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": [
        "\"invalid seed: %s\\n\"",
        "\"a\"",
        "\"a\"",
        "\"b\"",
        "\"c\"",
        "\"a\"",
        "\"b\"",
        "\"c\"",
        "\"a\"",
        "\"a\"",
        "\"b\"",
        "\"c\"",
        "\"z\"",
        "\"y\"",
        "\"x\"",
        "\"w\"",
        "\"v\"",
        "\"u\"",
        "\"a\"",
        "\"a\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-i-ring.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-iconv-h.c": {
    "main": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-iconv.c": {
    "main": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"UTF-8\"",
        "\"ISO8859-1\"",
        "\"ISO8859-1\"",
        "\"UTF-8\"",
        "\"\\304rger mit b\\366sen B\\374bchen ohne Augenma\\337\"",
        "\"\\303\\204rger mit b\\303\\266sen B\\303\\274bchen ohne Augenma\\303\\237\"",
        "\"\\304\"",
        "\"\\303\\204rger mit b\\303\\266sen B\\303\\274bchen ohne Augenma\\303\\237\"",
        "\"\\304rger mit b\\366sen B\\374bchen ohne Augenma\\337\"",
        "\"\\342\\202\\254\"",
        "\"\\342\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-ignore-value.c": {
    "doChar": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "doInt": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "doOff": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "doPtr": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "doStruct": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-inet_ntop.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": [
        "\"129.13.115.2\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-inet_pton.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": [
        "\"129.13.115.2\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-ino-map.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-intprops.c": {
    "main": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        390,
        1
      ],
      "strings": [
        "\"-2147483648\"",
        "\"-2147483648\"",
        "\"-9223372036854775808\"",
        "\"-9223372036854775808\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-inttostr.c": {
    "main": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": [
        "\"%ju\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-inttypes.c": {
    "main": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-ioctl.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-isatty.c": {
    "main": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": [
        "\"test-isatty.txt\"",
        "\"hello\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-isblank.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-isnand-nolibm.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/test-isnand.h": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-isnanf-nolibm.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/test-isnanf.h": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-isnanl-nolibm.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/test-isnanl.h": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-iswblank.c": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-langinfo.c": {
    "main": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-lchown.c": {
    "main": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-lchown.h": {
    "test_lchown": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": [
        "\"dir\"",
        "\"dir\"",
        "\"skipping test: no support for ownership\\n\"",
        "\"dir/file\"",
        "\"\"",
        "\"no_such\"",
        "\"no_such/\"",
        "\"dir/file/\"",
        "\"dir/file\"",
        "\"dir/file\"",
        "\"dir/file\"",
        "\"link\"",
        "\"dir/link2\"",
        "\"dir\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"dir/link2\"",
        "\"dir/link2\"",
        "\"skipping test: symlink ownership not supported\\n\"",
        "\"dir/link2/\"",
        "\"file\"",
        "\"dir/link\"",
        "\"sub\"",
        "\"dir/link3\"",
        "\"dir/link2/\"",
        "\"dir/file\"",
        "\"dir/link3/\"",
        "\"dir/link3\"",
        "\"dir/link\"",
        "\"dir/link2/\"",
        "\"dir/file\"",
        "\"dir/link3\"",
        "\"dir/link3/\"",
        "\"dir/link3\"",
        "\"dir/link\"",
        "\"dir/link3\"",
        "\"dir\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-limits-h.c": {
    "main": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-link.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-link.h": {
    "test_link": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": [
        "\"a\"",
        "\"hello\"",
        "\"a\"",
        "\"b\"",
        "\"skipping test: \"",
        "\"hard links not supported on this file system\\n\"",
        "\"link\"",
        "\"b\"",
        "\"world\"",
        "\"a\"",
        "\"helloworld\"",
        "\"a\"",
        "\"helloworld\"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\"d\"",
        "\"c\"",
        "\"a\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\"link\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-linkat.c": {
    "do_link": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "check_same_link": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-listen.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-locale.c": {
    "main": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-localeconv.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": [
        "\".\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-localename.c": {
    "test_locale_name": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": [
        "\"LC_MESSAGES\"",
        "\"en_US.UTF-8\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LC_NUMERIC\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LC_NUMERIC\"",
        "\"LC_ALL\"",
        "\"\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"C\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"C\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"C\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"LANG\"",
        "\"de_DE.UTF-8\"",
        "\"\"",
        "\"LC_CTYPE\"",
        "\"de_DE.UTF-8\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"fr_FR.UTF-8\"",
        "\"LC_CTYPE\"",
        "\"fr_FR.UTF-8\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"fr_FR.UTF-8\"",
        "\"de_DE.UTF-8\"",
        "\"de_DE.UTF-8\"",
        "\"fr_FR.UTF-8\""
      ]
    },
    "test_locale_name_thread": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        479,
        1
      ],
      "strings": [
        "\"en_US.UTF-8\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"LC_CTYPE\"",
        "\"fr_FR.UTF-8\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"fr_FR.UTF-8\"",
        "\"de_DE.UTF-8\"",
        "\"de_DE.UTF-8\"",
        "\"fr_FR.UTF-8\"",
        "\"C\"",
        "\"POSIX\"",
        "\"af_ZA\"",
        "\"af_ZA.UTF-8\"",
        "\"am_ET\"",
        "\"am_ET.UTF-8\"",
        "\"be_BY\"",
        "\"be_BY.UTF-8\"",
        "\"bg_BG\"",
        "\"bg_BG.UTF-8\"",
        "\"ca_ES\"",
        "\"ca_ES.UTF-8\"",
        "\"cs_CZ\"",
        "\"cs_CZ.UTF-8\"",
        "\"da_DK\"",
        "\"da_DK.UTF-8\"",
        "\"de_AT\"",
        "\"de_AT.UTF-8\"",
        "\"de_CH\"",
        "\"de_CH.UTF-8\"",
        "\"de_DE\"",
        "\"de_DE.UTF-8\"",
        "\"el_GR\"",
        "\"el_GR.UTF-8\"",
        "\"en_AU\"",
        "\"en_AU.UTF-8\"",
        "\"en_CA\"",
        "\"en_CA.UTF-8\"",
        "\"en_GB\"",
        "\"en_GB.UTF-8\"",
        "\"en_IE\"",
        "\"en_IE.UTF-8\"",
        "\"en_NZ\"",
        "\"en_NZ.UTF-8\"",
        "\"en_US\"",
        "\"en_US.UTF-8\"",
        "\"es_ES\"",
        "\"es_ES.UTF-8\"",
        "\"et_EE\"",
        "\"et_EE.UTF-8\"",
        "\"eu_ES\"",
        "\"eu_ES.UTF-8\"",
        "\"fi_FI\"",
        "\"fi_FI.UTF-8\"",
        "\"fr_BE\"",
        "\"fr_BE.UTF-8\"",
        "\"fr_CA\"",
        "\"fr_CA.UTF-8\"",
        "\"fr_CH\"",
        "\"fr_CH.UTF-8\"",
        "\"fr_FR\"",
        "\"fr_FR.UTF-8\"",
        "\"he_IL\"",
        "\"he_IL.UTF-8\"",
        "\"hr_HR\"",
        "\"hr_HR.UTF-8\"",
        "\"hu_HU\"",
        "\"hu_HU.UTF-8\"",
        "\"hy_AM\"",
        "\"is_IS\"",
        "\"is_IS.UTF-8\"",
        "\"it_CH\"",
        "\"it_CH.UTF-8\"",
        "\"it_IT\"",
        "\"it_IT.UTF-8\"",
        "\"ja_JP.UTF-8\"",
        "\"kk_KZ\"",
        "\"kk_KZ.UTF-8\"",
        "\"ko_KR.UTF-8\"",
        "\"lt_LT\"",
        "\"lt_LT.UTF-8\"",
        "\"nl_BE\"",
        "\"nl_BE.UTF-8\"",
        "\"nl_NL\"",
        "\"nl_NL.UTF-8\"",
        "\"no_NO\"",
        "\"no_NO.UTF-8\"",
        "\"pl_PL\"",
        "\"pl_PL.UTF-8\"",
        "\"pt_BR\"",
        "\"pt_BR.UTF-8\"",
        "\"pt_PT\"",
        "\"pt_PT.UTF-8\"",
        "\"ro_RO\"",
        "\"ro_RO.UTF-8\"",
        "\"ru_RU\"",
        "\"ru_RU.UTF-8\"",
        "\"sk_SK\"",
        "\"sk_SK.UTF-8\"",
        "\"sl_SI\"",
        "\"sl_SI.UTF-8\"",
        "\"sv_SE\"",
        "\"sv_SE.UTF-8\"",
        "\"tr_TR\"",
        "\"tr_TR.UTF-8\"",
        "\"uk_UA\"",
        "\"uk_UA.UTF-8\"",
        "\"zh_CN\"",
        "\"zh_CN.UTF-8\"",
        "\"zh_HK\"",
        "\"zh_HK.UTF-8\"",
        "\"zh_TW\"",
        "\"zh_TW.UTF-8\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\""
      ]
    },
    "test_locale_name_posix": {
      "start_point": [
        482,
        0
      ],
      "end_point": [
        613,
        1
      ],
      "strings": [
        "\"en_US.UTF-8\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LC_NUMERIC\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LC_NUMERIC\"",
        "\"LC_ALL\"",
        "\"\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"C\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"C\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"C\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"LANG\"",
        "\"de_DE.UTF-8\"",
        "\"\"",
        "\"LC_CTYPE\"",
        "\"de_DE.UTF-8\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"fr_FR.UTF-8\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"C\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"C\""
      ]
    },
    "test_locale_name_environ": {
      "start_point": [
        616,
        0
      ],
      "end_point": [
        727,
        1
      ],
      "strings": [
        "\"en_US.UTF-8\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LC_NUMERIC\"",
        "\"LANG\"",
        "\"LC_MESSAGES\"",
        "\"LC_NUMERIC\"",
        "\"LC_ALL\"",
        "\"\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"\"",
        "\"LANG\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"LC_ALL\"",
        "\"C\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"C\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LANG\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"C\"",
        "\"LC_MESSAGES\"",
        "\"C\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"LANG\"",
        "\"de_DE.UTF-8\"",
        "\"LC_CTYPE\"",
        "\"de_DE.UTF-8\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"LANG\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"fr_FR.UTF-8\"",
        "\"fr_FR.UTF-8\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LANG\"",
        "\"C\"",
        "\"\"",
        "\"LC_MESSAGES\"",
        "\"C\""
      ]
    },
    "test_locale_name_default": {
      "start_point": [
        730,
        0
      ],
      "end_point": [
        756,
        1
      ],
      "strings": [
        "\"C\"",
        "\"fr_FR.UTF-8\""
      ]
    },
    "main": {
      "start_point": [
        758,
        0
      ],
      "end_point": [
        768,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-lock.c": {
    "init_atomic_int": [
      {
        "start_point": [
          137,
          0
        ],
        "end_point": [
          140,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          159,
          0
        ],
        "end_point": [
          163,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          170,
          0
        ],
        "end_point": [
          206,
          1
        ],
        "strings": [
          "\"test-lock-%lu-%p-%u\"",
          "\"sem_open failed\""
        ]
      },
      {
        "start_point": [
          237,
          0
        ],
        "end_point": [
          241,
          1
        ],
        "strings": []
      }
    ],
    "get_atomic_int_value": [
      {
        "start_point": [
          141,
          0
        ],
        "end_point": [
          145,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          208,
          0
        ],
        "end_point": [
          221,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          242,
          0
        ],
        "end_point": [
          249,
          1
        ],
        "strings": []
      }
    ],
    "set_atomic_int_value": [
      {
        "start_point": [
          146,
          0
        ],
        "end_point": [
          150,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          222,
          0
        ],
        "end_point": [
          231,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          250,
          0
        ],
        "end_point": [
          256,
          1
        ],
        "strings": []
      }
    ],
    "random_account": {
      "start_point": [
        263,
        0
      ],
      "end_point": [
        267,
        1
      ],
      "strings": []
    },
    "check_accounts": {
      "start_point": [
        269,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": []
    },
    "lock_mutator_thread": {
      "start_point": [
        290,
        0
      ],
      "end_point": [
        324,
        1
      ],
      "strings": [
        "\"Mutator %p before lock\\n\"",
        "\"Mutator %p after  lock\\n\"",
        "\"Mutator %p before unlock\\n\"",
        "\"Mutator %p after  unlock\\n\"",
        "\"Mutator %p before check lock\\n\"",
        "\"Mutator %p after  check unlock\\n\"",
        "\"Mutator %p dying.\\n\""
      ]
    },
    "lock_checker_thread": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        344,
        1
      ],
      "strings": [
        "\"Checker %p before check lock\\n\"",
        "\"Checker %p after  check unlock\\n\"",
        "\"Checker %p dying.\\n\""
      ]
    },
    "test_lock": {
      "start_point": [
        346,
        0
      ],
      "end_point": [
        370,
        1
      ],
      "strings": []
    },
    "rwlock_mutator_thread": {
      "start_point": [
        381,
        0
      ],
      "end_point": [
        409,
        1
      ],
      "strings": [
        "\"Mutator %p before wrlock\\n\"",
        "\"Mutator %p after  wrlock\\n\"",
        "\"Mutator %p before unlock\\n\"",
        "\"Mutator %p after  unlock\\n\"",
        "\"Mutator %p dying.\\n\""
      ]
    },
    "rwlock_checker_thread": {
      "start_point": [
        413,
        0
      ],
      "end_point": [
        429,
        1
      ],
      "strings": [
        "\"Checker %p before check rdlock\\n\"",
        "\"Checker %p after  check unlock\\n\"",
        "\"Checker %p dying.\\n\""
      ]
    },
    "test_rwlock": {
      "start_point": [
        431,
        0
      ],
      "end_point": [
        457,
        1
      ],
      "strings": []
    },
    "recshuffle": {
      "start_point": [
        468,
        0
      ],
      "end_point": [
        490,
        1
      ],
      "strings": [
        "\"Mutator %p before lock\\n\"",
        "\"Mutator %p after  lock\\n\"",
        "\"Mutator %p before unlock\\n\"",
        "\"Mutator %p after  unlock\\n\""
      ]
    },
    "reclock_mutator_thread": {
      "start_point": [
        492,
        0
      ],
      "end_point": [
        512,
        1
      ],
      "strings": [
        "\"Mutator %p before check lock\\n\"",
        "\"Mutator %p after  check unlock\\n\"",
        "\"Mutator %p dying.\\n\""
      ]
    },
    "reclock_checker_thread": {
      "start_point": [
        516,
        0
      ],
      "end_point": [
        532,
        1
      ],
      "strings": [
        "\"Checker %p before check lock\\n\"",
        "\"Checker %p after  check unlock\\n\"",
        "\"Checker %p dying.\\n\""
      ]
    },
    "test_recursive_lock": {
      "start_point": [
        534,
        0
      ],
      "end_point": [
        558,
        1
      ],
      "strings": []
    },
    "once_execute": {
      "start_point": [
        578,
        0
      ],
      "end_point": [
        584,
        1
      ],
      "strings": []
    },
    "once_contender_thread": {
      "start_point": [
        586,
        0
      ],
      "end_point": [
        622,
        1
      ],
      "strings": [
        "\"Contender %p waiting for signal for round %d\\n\"",
        "\"Contender %p got the     signal for round %d\\n\""
      ]
    },
    "test_once": {
      "start_point": [
        624,
        0
      ],
      "end_point": [
        707,
        1
      ],
      "strings": [
        "\"Main thread before synchronizing for round %d\\n\"",
        "\"Main thread after  synchronizing for round %d\\n\"",
        "\"Main thread giving signal for round %d\\n\""
      ]
    },
    "main": [
      {
        "start_point": [
          712,
          0
        ],
        "end_point": [
          742,
          1
        ],
        "strings": [
          "\"Starting test_lock ...\"",
          "\" OK\\n\"",
          "\"Starting test_rwlock ...\"",
          "\" OK\\n\"",
          "\"Starting test_recursive_lock ...\"",
          "\" OK\\n\"",
          "\"Starting test_once ...\"",
          "\" OK\\n\""
        ]
      },
      {
        "start_point": [
          750,
          0
        ],
        "end_point": [
          755,
          1
        ],
        "strings": [
          "\"Skipping test: multithreading not enabled\\n\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-lseek.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-lstat.c": {
    "do_lstat": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-lstat.h": {
    "test_lstat_func": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": [
        "\".\"",
        "\"./\"",
        "\"/\"",
        "\"///\"",
        "\"..\"",
        "\"\"",
        "\"nosuch\"",
        "\"nosuch/\"",
        "\"file\"",
        "\"file/\"",
        "\".\"",
        "\"link1\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\", BASE \"",
        "\"nosuch\"",
        "\"link3\"",
        "\", BASE \"",
        "\"link1\"",
        "\"link1/\"",
        "\"link1\"",
        "\"link2/\"",
        "\"link3/\"",
        "\"link4/\"",
        "\"link1\"",
        "\"link3\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-lutimens.h": {
    "test_lutimens": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"no_such\"",
        "\"no_such/\"",
        "\"\"",
        "\"file\"",
        "\"file/\"",
        "\"file\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"link\"",
        "\"skipping test: \"",
        "\"setting symlink time not supported on this file system\\n\"",
        "\"link\"",
        "\"link\"",
        "\"link\"",
        "\"dir\"",
        "\"link\"",
        "\"link/\"",
        "\"dir\"",
        "\"link\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-malloc-gnu.c": {
    "main": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-malloca.c": {
    "do_allocation": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"MALLOC_PERTURB_\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-math.c": {
    "numeric_equalf": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "numeric_equald": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "numeric_equall": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mbrtowc-w32.c": {
    "test_one_locale": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        693,
        1
      ],
      "strings": [
        "\"%s.%d\"",
        "\" \"",
        "\"x\"",
        "\"\"",
        "\"\"",
        "\"B\\374\\337er\"",
        "\"x\\302\\341\\346y\"",
        "\"<\\223\\372\\226\\173\\214\\352>\"",
        "\"\\377\"",
        "\"\\225\\377\"",
        "\"<\\244\\351\\245\\273\\273\\171>\"",
        "\"\\377\"",
        "\"\\225\\377\"",
        "\"<\\310\\325\\261\\276\\325\\132>\"",
        "\"\\377\"",
        "\"\\225\\377\"",
        "\"B\\250\\271\\201\\060\\211\\070er\"",
        "\"\\377\"",
        "\"\\225\\377\"",
        "\"\\201\\045\"",
        "\"\\201\\060\\377\"",
        "\"\\201\\060\\377\\064\"",
        "\"\\201\\060\\211\\072\"",
        "\"B\\303\\274\\303\\237er\"",
        "\"\\377\"",
        "\"\\303\\300\"",
        "\"\\343\\300\"",
        "\"\\343\\300\\200\"",
        "\"\\343\\200\\300\"",
        "\"\\363\\300\"",
        "\"\\363\\300\\200\\200\"",
        "\"\\363\\200\\300\"",
        "\"\\363\\200\\300\\200\"",
        "\"\\363\\200\\200\\300\""
      ]
    },
    "main": [
      {
        "start_point": [
          695,
          0
        ],
        "end_point": [
          717,
          1
        ],
        "strings": [
          "\"Skipping test: found no locale with codepage %d\\n\""
        ]
      },
      {
        "start_point": [
          721,
          0
        ],
        "end_point": [
          726,
          1
        ],
        "strings": [
          "\"Skipping test: not a native Windows system\\n\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mbrtowc.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        348,
        1
      ],
      "strings": [
        "\"\"",
        "\"x\"",
        "\"\"",
        "\"\"",
        "\"B\\374\\337er\"",
        "\"B\\303\\274\\303\\237er\"",
        "\"<\\306\\374\\313\\334\\270\\354>\"",
        "\"B\\250\\271\\201\\060\\211\\070er\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mbsalign.c": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": [
        "\"t\\t\u00c3\u00a9s\", ",
        "\"es\"",
        "\"es\"",
        "\"es\"",
        "\"es\"",
        "\"es\"",
        "\"en_US.UTF8\"",
        "\"t\\xe1\\xe2s\"",
        "\"t\\xe1\\xe2s\"",
        "\"\u00c3\u00a9s\", ",
        "\"\u00c3\u00a9s\", ",
        "\"\u00c3\u00a9s\", ",
        "\"\u00e6\u0097\u00a5\u00e6\u009c\u0088\u00e7\u0081\u00ab\u00e6\u00b0\u00b4\", dest, size",
        "\"\u00c2\u00b9\u00c2\u00b2\u00c2\u00b3\u00e2\u0081\u00b4\", dest, s",
        "\"\u00c2\u00b9\u00c2\u00b2\u00c2\u00b3\u00e2\u0081\u00b4\", dest, 0",
        "\"\u00c2\u00b9\u00c2\u00b2\u00c2\u00b3\", dest",
        "\"t\\t\u00c3\u00a9s\" /",
        "\"t\\t\u00c3\u00a9s\", "
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mbscasecmp.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"\"",
        "\"paragraph\"",
        "\"Paragraph\"",
        "\"paragrapH\"",
        "\"parAgRaph\"",
        "\"paragraph\"",
        "\"paraLyzed\"",
        "\"paraLyzed\"",
        "\"paragraph\"",
        "\"para\"",
        "\"paragraph\"",
        "\"paragraph\"",
        "\"para\"",
        "\"\\303\\266zg\\303\\274r\"",
        "\"\\303\\226ZG\\303\\234R\"",
        "\"\\303\\226ZG\\303\\234R\"",
        "\"\\303\\266zg\\303\\274r\"",
        "\"turkish\"",
        "\"TURK\\304\\260SH\"",
        "\"TURK\\304\\260SH\"",
        "\"turkish\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mbschr.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"\"",
        "\"\\312\\276\\300\\375 \\312\\276\\300\\375 \\312\\276\\300\\375\"",
        "\"\\312\\276\\300\\375\"",
        "\"\\272\\305123\\324\\313\\320\\320\\241\\243\"",
        "\"\\203\\062\\332\\066123\\324\\313\\320\\320\\241\\243\"",
        "\"\\312\\300\\275\\347\\304\\343\\272\\303\\243\\241\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mbsinit.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"\\303\"",
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mbsrtowcs.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        292,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"B\\374\\337er\"",
        "\"B\\303\\274\\303\\237er\"",
        "\"<\\306\\374\\313\\334\\270\\354>\"",
        "\"B\\250\\271\\201\\060\\211\\070er\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mbsstr1.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"foo\"",
        "\"\"",
        "\"foo\"",
        "\"o\"",
        "\"ABC ABCDAB ABCDABCDABDE\"",
        "\"ABCDABD\"",
        "\"ABC ABCDAB ABCDABCDABDE\"",
        "\"ABCDABE\"",
        "\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"",
        "\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"",
        "\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"",
        "\"ABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABAB\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mbsstr2.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": [
        "\"\"",
        "\"f\\303\\266\\303\\266\"",
        "\"\"",
        "\"f\\303\\266\\303\\266\"",
        "\"\\303\\266\"",
        "\"f\\303\\266\\303\\266\"",
        "\"\\266\\303\"",
        "\"\\303\\204BC \\303\\204BCD\\303\\204B \\303\\204BCD\\303\\204BCD\\303\\204BDE\"",
        "\"\\303\\204BCD\\303\\204BD\"",
        "\"\\303\\204BC \\303\\204BCD\\303\\204B \\303\\204BCD\\303\\204BCD\\303\\204BDE\"",
        "\"\\303\\204BCD\\303\\204BE\"",
        "\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"",
        "\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"",
        "\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"",
        "\"A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207\"",
        "\"A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207\"",
        "\"A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207\"",
        "\"A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207\"",
        "\"A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207A\\303\\207\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mbsstr3.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": [
        "\"\"",
        "\"\\312\\276\\300\\375 \\312\\276\\300\\375 \\312\\276\\300\\375\"",
        "\" \"",
        "\"\\312\\276\\300\\375\"",
        "\" \"",
        "\"\\272\\305123\\324\\313\\320\\320\\241\\243\"",
        "\"2\"",
        "\"\\313\\320\\320\\320\"",
        "\"\\320\\320\"",
        "\"\\203\\062\\332\\066123\\324\\313\\320\\320\\241\\243\"",
        "\"2\"",
        "\"\\312\\276\\300\\375 \\312\\276\\300\\375 \\312\\276\\300\\375\"",
        "\"\\276\\300\"",
        "\"\\312\\276\\300\\375 \\312\\276\\300\\375 \\312\\276\\300\\375\"",
        "\"\\375 \""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-md5.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": [
        "\"abc\"",
        "\"\\x90\\x01\\x50\\x98\\x3C\\xD2\\x4F\\xB0\\xD6\\x96\\x3F\\x7D\\x28\\xE1\\x7F\\x72\"",
        "\"message digest\"",
        "\"\\xF9\\x6B\\x69\\x7D\\x7C\\xB7\\x93\\x8D\\x52\\x5A\\x2F\\x31\\xAA\\xF1\\x61\\xD0\"",
        "\"expected:\\n\"",
        "\"%02x \"",
        "\"\\ncomputed:\\n\"",
        "\"%02x \"",
        "\"\\n\"",
        "\"expected:\\n\"",
        "\"%02x \"",
        "\"\\ncomputed:\\n\"",
        "\"%02x \"",
        "\"\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-memcasecmp.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": [
        "\"foo\"",
        "\"foobar\"",
        "\"foo\"",
        "\"foobar\"",
        "\"foo\"",
        "\"foobar\"",
        "\"foo\"",
        "\"bar\"",
        "\"foo\"",
        "\"bar\"",
        "\"foo\"",
        "\"moo\"",
        "\"moo\"",
        "\"foo\"",
        "\"oomph\"",
        "\"oops\"",
        "\"oops\"",
        "\"oomph\"",
        "\"foo\"",
        "\"foobar\"",
        "\"foobar\"",
        "\"foo\"",
        "\"1\\0\"",
        "\"2\\0\"",
        "\"2\\0\"",
        "\"1\\0\"",
        "\"x\\0\"",
        "\"1\"",
        "\"x\\0\"",
        "\"2\"",
        "\"x\\0\"",
        "\"2\"",
        "\"x\\0\"",
        "\"1\"",
        "\"--------01111111\"",
        "\"--------10000000\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-memchr.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-memchr2.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-memcoll.c": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"fo\"",
        "\"fo\"",
        "\"foo\"",
        "\"foo\"",
        "\"foo\\0\"",
        "\"foob\"",
        "\"f\"",
        "\"b\"",
        "\"foo\"",
        "\"bar\"",
        "\"foo\\0\"",
        "\"moo\\0\"",
        "\"moo\\0\"",
        "\"foo\\0\"",
        "\"oom\"",
        "\"oop\"",
        "\"oop\"",
        "\"oom\"",
        "\"foo\\0\"",
        "\"foob\"",
        "\"foob\"",
        "\"foo\\0\"",
        "\"1\\0\"",
        "\"2\\0\"",
        "\"2\\0\"",
        "\"1\\0\"",
        "\"x\\0\"",
        "\"1\"",
        "\"x\\0\"",
        "\"2\"",
        "\"x\\0\"",
        "\"2\"",
        "\"x\\0\"",
        "\"1\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-memrchr.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mkdir.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mkdir.h": {
    "test_mkdir": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": [
        "\"file/\"",
        "\"\"",
        "\"dir/.\"",
        "\"dir\"",
        "\"dir/\"",
        "\"dir/\"",
        "\"dir\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"link/\"",
        "\"dir\"",
        "\"link/.\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mkfifo.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mkfifo.h": {
    "test_mkfifo": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"fifo\"",
        "\"skipping test: no support for named fifos\\n\"",
        "\"\"",
        "\".\"",
        "\"fifo/\"",
        "\"fifo\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"link/\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-mknod.c": {
    "do_mknod": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-nanosleep.c": {
    "handle_alarm": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-netdb.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-netinet_in.c": {
    "main": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-nl_langinfo.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": [
        "\"\"",
        "\"UTF-8\"",
        "\"UTF8\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-nstrftime.c": {
    "posixtm_test": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": [
        "\"nstrftime failed with format %s\\n\"",
        "\"%s: result mismatch: got %s, expected %s\\n\""
      ]
    },
    "tzalloc_test": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": [
        "\"%Y-%m-%d %H:%M:%S %z (%Z)\"",
        "\"%s: tzalloc: %s\\n\"",
        "\"UTC0\"",
        "\"%s: %ld: localtime_rz: %s\\n\"",
        "\"%s: %ld: nstrftime failed\\n\"",
        "\"(GMT)\"",
        "\"(GMT)\"",
        "\"(GMT)\"",
        "\"%s: expected \\\"%s\\\", got \\\"%s\\\"\\n\""
      ]
    },
    "quarter_test": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        246,
        1
      ],
      "strings": [
        "\"nstrftime(\\\"%q\\\") failed\"",
        "\"nstrftime %%q: expected \\\"%s\\\", got \\\"%s\\\"\\n\""
      ]
    },
    "main": {
      "start_point": [
        248,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-open.c": {
    "main": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-open.h": {
    "test_open": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"nonexist.ent/\"",
        "\"file\"",
        "\"file/\"",
        "\".\"",
        "\"/dev/null\"",
        "\"/dev/null\"",
        "\"c\"",
        "\"file\"",
        "\"file\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"link/\"",
        "\"link\"",
        "\"link\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-openat-safer.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": [
        "\"w\"",
        "\".\"",
        "\"hi\"",
        "\"..\"",
        "\"\"",
        "\"\"",
        "\".\"",
        "\"nonexist.ent/\"",
        "\"/\"",
        "\"/dev/null\"",
        "\".\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-openat.c": {
    "do_open": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": [
        "\"foo\"",
        "\"foo\"",
        "\".\"",
        "\".\"",
        "\".\"",
        "\"..\"",
        "\".\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-parse-datetime.c": {
    "tm_diff": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "gmt_offset": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        451,
        1
      ],
      "strings": [
        "\"TZ\"",
        "\"EST5EDT,M3.2.0,M11.1.0\"",
        "\"2011-05-01T11:55:18\"",
        "\"2011-05-01 11:55:18\"",
        "\"2011-05-01T11:55:18Z\"",
        "\"2011-05-01 11:55:18Z\"",
        "\"2011-05-01T11:55:18-07:00\"",
        "\"2011-05-01 11:55:18-07:00\"",
        "\"2011-05-01T11:55:18-07\"",
        "\"2011-05-01 11:55:18-07\"",
        "\"now\"",
        "\"tomorrow\"",
        "\"yesterday\"",
        "\"4 hours\"",
        "\"UTC+400 +24 hours\"",
        "\"UTC+400 +1 day\"",
        "\"UTC+14:00\"",
        "\"UTC+14\"",
        "\"UTC+1400\"",
        "\"UTC-14:00\"",
        "\"UTC-14\"",
        "\"UTC-1400\"",
        "\"UTC+0:15\"",
        "\"UTC+0015\"",
        "\"UTC-1:30\"",
        "\"UTC-130\"",
        "\"UTC+25:00\"",
        "\"UTC+4:00 +40 yesterday\"",
        "\"UTC+4:00 next yesterday\"",
        "\"UTC+4:00 tomorrow ago\"",
        "\"UTC+4:00 tomorrow hence\"",
        "\"UTC+4:00 40 now ago\"",
        "\"UTC+4:00 last tomorrow\"",
        "\"UTC+4:00 -4 today\"",
        "\"UTC+400 tomorrow\"",
        "\"UTC+400 +1 day\"",
        "\"UTC+400 1 day hence\"",
        "\"UTC+400 yesterday\"",
        "\"UTC+400 1 day ago\"",
        "\"UTC+400 now\"",
        "\"UTC+400 +0 minutes\"",
        "\"TZ\"",
        "\"UTC0\"",
        "\"NEXT %s\"",
        "\"LAST %s\"",
        "\"THURSDAY UTC+00\"",
        "\"FRIDAY UTC+00\"",
        "\"\\xb0\"",
        "\"TZ=\\\"\\\"\\\"\"",
        "\"TZ=\\\"\\\" \\\"\"",
        "\"TZ=\\\"\"",
        "\"TZ=\\\"\\\\\\\"\"",
        "\"TZ=\\\"\\\\n\"",
        "\"TZ=\\\"\\\\n\\\"\"",
        "\"TZ=\\\"\\\"\"",
        "\"TZ=\\\"\\\" \"",
        "\" TZ=\\\"\\\"\"",
        "\"TZ=\\\"\\\\\\\\\\\"\"",
        "\"TZ=\\\"\\\\\\\"\\\"\"",
        "\"TZ=\\\"\"",
        "\"0\\\" 1970-01-01 01:02:03.123456789\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-pathmax.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-perror.c": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-perror2.c": {
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": [
        "\"w\"",
        "\"w+\"",
        "\"\"",
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-pipe.c": {
    "is_open": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "is_cloexec": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "is_nonblocking": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-pipe2.c": {
    "is_open": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "is_cloexec": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "get_nonblocking_flag": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-posixtm.c": {
    "main": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": [
        "\"TZ\"",
        "\"UTC0\"",
        "\"%Y\"",
        "\"skipping %s: result is negative, \"",
        "\"but your time_t is unsigned\\n\"",
        "\"skipping %s: result is out of range of your time_t\\n\"",
        "\"%s return value mismatch: got %d, expected %d\\n\"",
        "\"%s mismatch (-: actual; +:expected)\\n-%12ld\\n+%12ld\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-printf-frexp.c": {
    "my_ldexp": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-printf-frexpl.c": {
    "my_ldexp": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-printf-posix.h": {
    "test_function": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": [
        "\"%ju %d\\n\"",
        "\"%zu %d\\n\"",
        "\"%tu %d\\n\"",
        "\"%a %d\\n\"",
        "\"%a %d\\n\"",
        "\"%a %d\\n\"",
        "\"%010a %d\\n\"",
        "\"%f %d\\n\"",
        "\"%f %d\\n\"",
        "\"%f %d\\n\"",
        "\"%f %d\\n\"",
        "\"%015f %d\\n\"",
        "\"%.f %d\\n\"",
        "\"%.2f %d\\n\"",
        "\"%.2f %d\\n\"",
        "\"%Lf %d\\n\"",
        "\"%Lf %d\\n\"",
        "\"%Lf %d\\n\"",
        "\"%Lf %d\\n\"",
        "\"%015Lf %d\\n\"",
        "\"%.Lf %d\\n\"",
        "\"%.2Lf %d\\n\"",
        "\"%.2Lf %d\\n\"",
        "\"%F %d\\n\"",
        "\"%F %d\\n\"",
        "\"%F %d\\n\"",
        "\"%F %d\\n\"",
        "\"%015F %d\\n\"",
        "\"%.F %d\\n\"",
        "\"%.2F %d\\n\"",
        "\"%.2F %d\\n\"",
        "\"%LF %d\\n\"",
        "\"%LF %d\\n\"",
        "\"%LF %d\\n\"",
        "\"%LF %d\\n\"",
        "\"%015LF %d\\n\"",
        "\"%.LF %d\\n\"",
        "\"%.2LF %d\\n\"",
        "\"%.2LF %d\\n\"",
        "\"%2$d %1$d\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-priv-set.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-pthread_sigmask1.c": {
    "sigint_handler": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "main": [
      {
        "start_point": [
          42,
          0
        ],
        "end_point": [
          80,
          1
        ],
        "strings": [
          "\"sh -c 'sleep 1; kill -%d %d' &\""
        ]
      },
      {
        "start_point": [
          87,
          0
        ],
        "end_point": [
          92,
          1
        ],
        "strings": [
          "\"Skipping test: native Windows platform\\n\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-pthread_sigmask2.c": {
    "killer_thread_func": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "sigint_handler": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "main": [
      {
        "start_point": [
          51,
          0
        ],
        "end_point": [
          87,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          91,
          0
        ],
        "end_point": [
          96,
          1
        ],
        "strings": [
          "\"Skipping test: POSIX threads not enabled\\n\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-quotearg-simple.c": {
    "use_quote_double_quotes": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        254,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        256,
        0
      ],
      "end_point": [
        365,
        1
      ],
      "strings": [
        "\"ASCII\"",
        "\"ANSI_X3.4-1968\"",
        "\"____\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-quotearg.h": {
    "compare": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "compare_strings": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "use_quotearg_buffer": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "use_quotearg": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "use_quotearg_colon": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-raise.c": {
    "handler": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-rand-isaac.c": {
    "main": {
      "start_point": [
        562,
        0
      ],
      "end_point": [
        590,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-read-file.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"Could not read file\"",
        "\"BAD: out[len] not zero\"",
        "\"Read %lu from %s...\\n\"",
        "\"Read nothing from %s\\n\"",
        "\"Could not read file\"",
        "\"BAD: out[len] not zero\"",
        "\"Read %lu from %s...\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-read.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"test-read.tmp\"",
        "\"Hello World\"",
        "\"World\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-readlink.c": {
    "main": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-readlink.h": {
    "test_readlink": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": [
        "\"no_such\"",
        "\"no_such/\"",
        "\"\"",
        "\".\"",
        "\"./\"",
        "\"file/\"",
        "\"dir\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"link/\"",
        "\", BASE \"",
        "\"link2/\"",
        "\"file\"",
        "\"link2\"",
        "\"link2/\"",
        "\"link2\"",
        "\"dir\"",
        "\"link\"",
        "\"dir\"",
        "\"dir\"",
        "\"link\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-readlinkat.c": {
    "do_readlink": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\"",
        "\"foo\"",
        "\"foo\"",
        "\".\"",
        "\"don't matter!\"",
        "\"link\"",
        "\"link\"",
        "\"..\"",
        "\"link\"",
        "\"link\"",
        "\"link\"",
        "\"link\"",
        "\"link\"",
        "\"link\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-readtokens.c": {
    "basic": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"in.827\"",
        "\"a|b;c+d\"",
        "\"r\"",
        "\"|;\"",
        "\"|;\"",
        "\"+\"",
        "\"-\"",
        "\"%\""
      ]
    },
    "main": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": [
        "\"\\\\0\"",
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-realloc-gnu.c": {
    "main": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-regex.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": [
        "\"en_US.UTF-8\"",
        "\"insert into\"",
        "\"\\xFF\\0\\x12\\xA2\\xAA\\xC4\\xB1,K\\x12\\xC4\\xB1*\\xACK\"",
        "\"UTF-8\"",
        "\"[^x]x\"",
        "\"\\xe1\\x80\\x80\"",
        "\"\\xe1\\x80\\xbb\"",
        "\"\\xe1\\x80\\xbd\"",
        "\"\\xe1\\x80\\x94\"",
        "\"\\xe1\\x80\\xba\"",
        "\"\\xe1\\x80\\xaf\"",
        "\"\\xe1\\x80\\x95\"",
        "\"\\xe1\\x80\\xba\"",
        "\"x\"",
        "\"C\"",
        "\"a[^x]b\"",
        "\"a\\nb\"",
        "\"a[[:@:>@:]]b\\n\"",
        "\"a[b-a]\"",
        "\"{1\"",
        "\"[an\\371]*n\"",
        "\"an\"",
        "\"x\"",
        "\"wxy\"",
        "\"x\"",
        "\"WXY\"",
        "\"[[:alnum:]_-]\\\\\\\\+$\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-remove.c": {
    "main": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\"",
        "\"dir/file\"",
        "\"\"",
        "\"nosuch\"",
        "\"nosuch/\"",
        "\".\"",
        "\"..\"",
        "\"/\"",
        "\"///\"",
        "\"dir\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"link/\"",
        "\"dir\"",
        "\", BASE \"",
        "\"file\"",
        "\", BASE \"",
        "\"file\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-rename.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-rename.h": {
    "dentry_exists": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": [
        "\".\""
      ]
    },
    "assert_nonexistent": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "test_rename": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        954,
        1
      ],
      "strings": [
        "\"file\"",
        "\"hi\"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\"\"",
        "\"missing\"",
        "\", \"",
        "\", \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\"dir\"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\"dir2\"",
        "\", BASE \"",
        "\"dir2\"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\"dir\"",
        "\", BASE \"",
        "\"dir/file\"",
        "\", BASE \"",
        "\"dir\"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\"dir\"",
        "\", BASE \"",
        "\"file\"",
        "\"file2\"",
        "\"skipping test: \"",
        "\"hard links not supported on this file system\\n\"",
        "\"dir\"",
        "\"link\"",
        "\", BASE \"",
        "\"file\"",
        "\", BASE \"",
        "\"file\"",
        "\"file\"",
        "\"link1\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"dir\"",
        "\", BASE \"",
        "\"file\"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\", BASE \"",
        "\"dir\"",
        "\"link2/\"",
        "\", BASE \"",
        "\"dir\"",
        "\"link2\"",
        "\", BASE \"",
        "\"dir\"",
        "\"link2\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-renameat.c": {
    "do_rename": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\"",
        "\"foo\"",
        "\"bar\"",
        "\"foo\"",
        "\"bar\"",
        "\"oo\"",
        "\"bar\"",
        "\"oo\"",
        "\"bar\"",
        "\".\"",
        "\"sub2\"",
        "\"00\"",
        "\"sub1\"",
        "\"..\"",
        "\"xx\"",
        "\"..\"",
        "\"xx\"",
        "\"%02d\"",
        "\"%02d\"",
        "\"..\"",
        "\"../\"",
        "\"16\"",
        "\"17\"",
        "\"..\"",
        "\".\"",
        "\"sub1\"",
        "\"sub2\"",
        "\"sub2\"",
        "\"sub1/.\"",
        "\"sub2/.\"",
        "\"sub1\"",
        "\"17\"",
        "\"sub1\"",
        "\"nosuch\"",
        "\"18\"",
        "\"\"",
        "\"17\"",
        "\"17\"",
        "\"\"",
        "\"sub2\"",
        "\"17\"",
        "\", dfd, BASE \"",
        "\"17\"",
        "\"18/\"",
        "\"sub2/file\"",
        "\"sub2\"",
        "\"sub1\"",
        "\"sub1/file\"",
        "\"17\"",
        "\"sub1/file\"",
        "\"17\"",
        "\"sub1\"",
        "\"sub2\"",
        "\"skipping test: symlinks not supported on this file system\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-renameat2.c": {
    "do_rename": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        208,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\"",
        "\"foo\"",
        "\"bar\"",
        "\"foo\"",
        "\"bar\"",
        "\"oo\"",
        "\"bar\"",
        "\"oo\"",
        "\"bar\"",
        "\".\"",
        "\"sub2\"",
        "\"00\"",
        "\"sub1\"",
        "\"..\"",
        "\"xx\"",
        "\"..\"",
        "\"xx\"",
        "\"%02d\"",
        "\"%02d\"",
        "\"..\"",
        "\"../\"",
        "\"16\"",
        "\"17\"",
        "\"..\"",
        "\".\"",
        "\"sub1\"",
        "\"sub2\"",
        "\"sub2\"",
        "\"sub1/.\"",
        "\"sub2/.\"",
        "\"sub1\"",
        "\"17\"",
        "\"sub1\"",
        "\"nosuch\"",
        "\"18\"",
        "\"\"",
        "\"17\"",
        "\"17\"",
        "\"\"",
        "\"sub2\"",
        "\"17\"",
        "\", dfd, BASE \"",
        "\"17\"",
        "\"18/\"",
        "\"sub2/file\"",
        "\"sub2\"",
        "\"sub1\"",
        "\"sub2/file\"",
        "\"17\"",
        "\"sub2/file\"",
        "\"17\"",
        "\"sub1\"",
        "\"sub2\"",
        "\"skipping test: symlinks not supported on this file system\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-rmdir.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-rmdir.h": {
    "test_rmdir_func": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"dir/file\"",
        "\"\"",
        "\".\"",
        "\"..\"",
        "\"/\"",
        "\"///\"",
        "\"dir\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"link/\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-rwlock1.c": {
    "timer_func": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "reader2_func": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "writer_func": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sameacls.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        694,
        1
      ],
      "strings": [
        "\"error reading file %s: errno = %d\\n\"",
        "\"error reading file %s: errno = %d\\n\"",
        "\"files %s and %s have different sizes\\n\"",
        "\"files %s and %s have different contents\\n\"",
        "\"error accessing file %s: errno = %d\\n\"",
        "\"error accessing file %s: errno = %d\\n\"",
        "\"files %s and %s have different access modes: %03o and %03o\\n\"",
        "\"files %s and %s have different ACLs:\\n%s\\n%s\\n\"",
        "\"file %s has a valid ACL, but file %s has an invalid ACL\\n\"",
        "\"file %s has an invalid ACL, but file %s has a valid ACL\\n\"",
        "\"files %s and %s have differently invalid ACLs, errno = %d vs. %d\\n\"",
        "\"file %s has an ACL, but file %s has no ACL\\n\"",
        "\"file %s has no ACL, but file %s has an ACL\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"files %s and %s have different number of ACLs: %d and %d\\n\"",
        "\"error retrieving the ACLs of file %s\\n\"",
        "\"error retrieving the ACLs of file %s\\n\"",
        "\"files %s and %s: different ACL entry #%d: different types %d and %d\\n\"",
        "\"files %s and %s: different ACL entry #%d: different ids %d and %d\\n\"",
        "\"files %s and %s: different ACL entry #%d: different permissions %03o and %03o\\n\"",
        "\"error accessing the ACE-ACLs of file %s\\n\"",
        "\"error accessing the ACE-ACLs of file %s\\n\"",
        "\"error retrieving the ACE-ACLs of file %s\\n\"",
        "\"error retrieving the ACE-ACLs of file %s\\n\"",
        "\"files %s and %s have different number of ACE-ACLs: %d and %d\\n\"",
        "\"files %s and %s: different ACE-ACL entry #%d: different types %d and %d\\n\"",
        "\"files %s and %s: different ACE-ACL entry #%d: different ids %d and %d\\n\"",
        "\"files %s and %s: different ACE-ACL entry #%d: different access masks %03o and %03o\\n\"",
        "\"files %s and %s: different ACE-ACL entry #%d: different flags 0x%x and 0x%x\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"files %s and %s have different number of ACLs: %d and %d\\n\"",
        "\"error retrieving the ACLs of file %s\\n\"",
        "\"error retrieving the ACLs of file %s\\n\"",
        "\"files %s and %s: different ACL entry #%d: different uids %d and %d\\n\"",
        "\"files %s and %s: different ACL entry #%d: different gids %d and %d\\n\"",
        "\"files %s and %s: different ACL entry #%d: different permissions %03o and %03o\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"files %s and %s have different number of ACLs: %d and %d\\n\"",
        "\"error retrieving the ACLs of file %s\\n\"",
        "\"error retrieving the ACLs of file %s\\n\"",
        "\"files %s and %s: different ACL entry #%d: different types %d and %d\\n\"",
        "\"files %s and %s: different ACL entry #%d: different ids %d and %d\\n\"",
        "\"files %s and %s: different ACL entry #%d: different permissions %03o and %03o\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"cannot convert the ACLs of file %s to text\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"cannot convert the ACLs of file %s to text\\n\"",
        "\"files %s and %s have different ACLs:\\n%s\\n%s\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"files %s and %s have different ACL lengths: %u and %u\\n\"",
        "\"files %s and %s have different ACL modes: %03o and %03o\\n\"",
        "\"files %s and %s have different ACL access masks: %03o %03o %03o and %03o %03o %03o\\n\"",
        "\"files %s and %s have different ACL entries\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"error accessing the ACLs of file %s\\n\"",
        "\"files %s and %s have different number of ACLs: %d and %d\\n\"",
        "\"error retrieving the ACLs of file %s\\n\"",
        "\"error retrieving the ACLs of file %s\\n\"",
        "\"files %s and %s: different ACL entry #%d: different types %d and %d\\n\"",
        "\"files %s and %s: different ACL entry #%d: different ids %d and %d\\n\"",
        "\"files %s and %s: different ACL entry #%d: different permissions %03o and %03o\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sched.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-select-fd.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": [
        "\"wb\"",
        "\"select failed\"",
        "\"incorrect return value\\n\"",
        "\"%d\\n\"",
        "\"Usage: test-select-fd mode fd result-file-name\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-select-stdin.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": [
        "\"Applying select() from standard input. Press Ctrl-C to abort.\\n\"",
        "\"select failed\"",
        "\"incorrect return value\\n\"",
        "\"returned too early\\n\"",
        "\".\"",
        "\"Input available! Trying to read 1 byte...\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-select.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-select.h": {
    "failed": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"  \"",
        "\"failed (%s)\\n\""
      ]
    },
    "test": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": [
        "\"%s... \"",
        "\"passed\\n\""
      ]
    },
    "open_server_socket": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"127.0.0.1\"",
        "\"bind\"",
        "\"listen\""
      ]
    },
    "connect_to_socket": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": [
        "\"127.0.0.1\"",
        "\"connect\""
      ]
    },
    "do_select": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\"select returned 0\"",
        "\"select returned unrequested events\""
      ]
    },
    "do_select_nowait": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    },
    "do_select_wait": {
      "start_point": [
        201,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    },
    "test_tty": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": [
        "\"can read\"",
        "\"cannot write\"",
        "\"return with infinite timeout\"",
        "\"can read after getc\""
      ]
    },
    "do_select_bad_nfd_nowait": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "test_bad_nfd": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": [
        "\"invalid errno after negative nfds\""
      ]
    },
    "do_select_bad_fd": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "do_select_bad_fd_nowait": {
      "start_point": [
        275,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": []
    },
    "test_bad_fd": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        308,
        1
      ],
      "strings": [
        "\"invalid fd among rfds\"",
        "\"invalid fd among wfds\"",
        "\"invalid fd among xfds\""
      ]
    },
    "test_connect_first": {
      "start_point": [
        313,
        0
      ],
      "end_point": [
        337,
        1
      ],
      "strings": [
        "\"can read, socket not connected\"",
        "\"expecting readability on passive socket\"",
        "\"expecting readability on passive socket\""
      ]
    },
    "test_accept_first": {
      "start_point": [
        342,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": [
        "\"foo\"",
        "\"cannot write after blocking connect\"",
        "\"foo\"",
        "\"cannot read data left in the socket by closed process\"",
        "\"foo\""
      ]
    },
    "test_pair": {
      "start_point": [
        387,
        0
      ],
      "end_point": [
        403,
        1
      ],
      "strings": [
        "\"expecting writability before writing\"",
        "\"expecting writability before writing\"",
        "\"foo\"",
        "\"expecting readability after writing\"",
        "\"expecting readability after writing\""
      ]
    },
    "test_socket_pair": {
      "start_point": [
        408,
        0
      ],
      "end_point": [
        424,
        1
      ],
      "strings": [
        "\"foo\""
      ]
    },
    "test_pipe": {
      "start_point": [
        429,
        0
      ],
      "end_point": [
        438,
        1
      ],
      "strings": []
    },
    "test_function": {
      "start_point": [
        443,
        0
      ],
      "end_point": [
        461,
        1
      ],
      "strings": [
        "\"Please press Enter\\n\"",
        "\"TTY\"",
        "\"Invalid nfd test\"",
        "\"Invalid fd test\"",
        "\"Unconnected socket test\"",
        "\"Connected sockets test\"",
        "\"General socket test with fork\"",
        "\"Pipe test\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-set-mode-acl.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-setenv.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": [
        "\"a\"",
        "\"==\"",
        "\"a\"",
        "\"2\"",
        "\"a\"",
        "\"==\"",
        "\"\"",
        "\"\"",
        "\"a=b\"",
        "\"\"",
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-setlocale1.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"\"",
        "\"C\"",
        "\"LC_ALL\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-setlocale2.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"\"",
        "\"C\"",
        "\"setlocale did not fail for implicit %s\\n\"",
        "\"LC_ALL\"",
        "\"C\"",
        "\"LC_ALL\"",
        "\"C\"",
        "\"setlocale did not fail for explicit %s\\n\"",
        "\"LC_ALL\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-setsockopt.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sha1.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": [
        "\"abcdefgh\"",
        "\"\\x42\\x5a\\xf1\\x2a\\x07\\x43\\x50\\x2b\"",
        "\"\\x32\\x2e\\x93\\xa0\\x15\\xbc\\xf8\\x68\\xe3\\x24\\xd5\\x6a\"",
        "\"expected:\\n\"",
        "\"%02x \"",
        "\"\\ncomputed:\\n\"",
        "\"%02x \"",
        "\"\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sigaction.c": {
    "handler": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-signal-h.c": {
    "main": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-signbit.c": {
    "test_signbitf": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "test_signbitd": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    },
    "test_signbitl": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sigprocmask.c": {
    "sigint_handler": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "main": [
      {
        "start_point": [
          42,
          0
        ],
        "end_point": [
          87,
          1
        ],
        "strings": [
          "\"Skipping test: pid too large\\n\"",
          "\"sh -c 'sleep 1; kill -%d %d' &\""
        ]
      },
      {
        "start_point": [
          94,
          0
        ],
        "end_point": [
          99,
          1
        ],
        "strings": [
          "\"Skipping test: native Windows platform\\n\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sleep.c": {
    "handle_alarm": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-snprintf.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": [
        "\"%d\"",
        "\"DEADBEEF\"",
        "\"%d\"",
        "\"12345\"",
        "\"DEADBEEF\"",
        "\"12345\\0EF\"",
        "\"%2$d %1$d\"",
        "\"55 33\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sockets.c": {
    "main": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": [
        "\"wsastartup failed %d\\n\"",
        "\"wsacleanup failed %d\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-stat-time.c": {
    "initialize_filenames": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": [
        "\"t-stt-%ld-stamp1\"",
        "\"t-stt-%ld-testfile\"",
        "\"t-stt-%ld-stamp2\"",
        "\"t-stt-%ld-stamp3\""
      ]
    },
    "force_unlink": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "cleanup": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "open_file": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "create_file": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "do_stat": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "prepare_test": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "test_mtime": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "test_ctime": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    },
    "test_birthtime": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-stat.c": {
    "do_stat": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-stat.h": {
    "test_stat_func": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\".\"",
        "\"./\"",
        "\"/\"",
        "\"///\"",
        "\"\"",
        "\"nosuch\"",
        "\"nosuch/\"",
        "\"file\"",
        "\"file/\"",
        "\".\"",
        "\"link1\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\", BASE \"",
        "\"nosuch\"",
        "\"link3\"",
        "\", BASE \"",
        "\"link1/\"",
        "\"link2/\"",
        "\"link3/\"",
        "\"link4/\"",
        "\"link1\"",
        "\"link3\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-statat.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/test-stdalign.c": {
    "main": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": [
        "\"Skipping test: known Sun C compiler bug\\n\"",
        "\"Skipping test: known HP-UX Itanium cc compiler bug\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-stdbool.c": {
    "main": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": [
        "\"0123456789\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-stddef.c": {
    "main": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-stdint.c": {
    "main": {
      "start_point": [
        421,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-stdio.c": {
    "main": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-stdlib.c": {
    "main": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-strerror.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": [
        "\"nknown\"",
        "\"ndefined\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-strerror_r.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"nknown\"",
        "\"ndefined\"",
        "\"\"",
        "\"^\"",
        "\"BADFACE\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-striconv.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": [
        "\"UTF-8\"",
        "\"ISO-8859-1\"",
        "\"ISO-8859-1\"",
        "\"UTF-8\"",
        "\"\\304rger mit b\\366sen B\\374bchen ohne Augenma\\337\"",
        "\"\\303\\204rger mit b\\303\\266sen B\\303\\274bchen ohne Augenma\\303\\237\"",
        "\"\\303\\204rger mit b\\303\\266sen B\\303\\274bchen ohne Augenma\\303\\237\"",
        "\"\\304rger mit b\\366sen B\\374bchen ohne Augenma\\337\"",
        "\"\\342\\202\\254\"",
        "\"\\342\"",
        "\"\\304rger mit b\\366sen B\\374bchen ohne Augenma\\337\"",
        "\"\\303\\204rger mit b\\303\\266sen B\\303\\274bchen ohne Augenma\\303\\237\"",
        "\"\\303\\204rger mit b\\303\\266sen B\\303\\274bchen ohne Augenma\\303\\237\"",
        "\"\\304rger mit b\\366sen B\\374bchen ohne Augenma\\337\"",
        "\"Costs: 27 \\342\\202\\254\"",
        "\"\\342\"",
        "\"\"",
        "\"\\304rger mit b\\366sen B\\374bchen ohne Augenma\\337\"",
        "\"\\303\\204rger mit b\\303\\266sen B\\303\\274bchen ohne Augenma\\303\\237\"",
        "\"ISO-8859-1\"",
        "\"UTF-8\"",
        "\"\\303\\204rger mit b\\303\\266sen B\\303\\274bchen ohne Augenma\\303\\237\"",
        "\"\\304rger mit b\\366sen B\\374bchen ohne Augenma\\337\"",
        "\"UTF-8\"",
        "\"ISO-8859-1\"",
        "\"Costs: 27 \\342\\202\\254\"",
        "\"UTF-8\"",
        "\"ISO-8859-1\"",
        "\"\\342\"",
        "\"UTF-8\"",
        "\"ISO-8859-1\"",
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-string.c": {
    "main": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-strncat.c": {
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-strnlen.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"a\"",
        "\"a\"",
        "\"a\"",
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-strsignal.c": {
    "main": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"Hangup\"",
        "\"Interrupt\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-strtod.c": {
    "main": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        985,
        1
      ],
      "strings": [
        "\"\"",
        "\" \"",
        "\" +\"",
        "\" .\"",
        "\" .e0\"",
        "\" +.e-0\"",
        "\" in\"",
        "\" na\"",
        "\"1\"",
        "\"1.\"",
        "\".5\"",
        "\" 1\"",
        "\"+1\"",
        "\"-1\"",
        "\"1e0\"",
        "\"1e+0\"",
        "\"1e-0\"",
        "\"1e1\"",
        "\"5e-1\"",
        "\"0\"",
        "\".0\"",
        "\"0e0\"",
        "\"0e+9999999\"",
        "\"0e-9999999\"",
        "\"-0\"",
        "\"1f\"",
        "\"1.f\"",
        "\"1e\"",
        "\"1e+\"",
        "\"1e-\"",
        "\"1E 2\"",
        "\"0x\"",
        "\"00x1\"",
        "\"-0x\"",
        "\"0xg\"",
        "\"0xp\"",
        "\"0XP\"",
        "\"0x.\"",
        "\"0xp+\"",
        "\"0xp+1\"",
        "\"0x.p+1\"",
        "\"1p+1\"",
        "\"1P+1\"",
        "\"1E1000000\"",
        "\"-1E1000000\"",
        "\"1E-100000\"",
        "\"-1E-100000\"",
        "\"1E 1000000\"",
        "\"0x1P 1000000\"",
        "\"iNf\"",
        "\"-InF\"",
        "\"infinite\"",
        "\"infinitY\"",
        "\"infinitY.\"",
        "\"-nan\"",
        "\"+nan(\"",
        "\"-nan()\"",
        "\" nan().\"",
        "\"-nan(0).\"",
        "\"0xa\"",
        "\"0XA\"",
        "\"0x1p\"",
        "\"0x1p+\"",
        "\"0x1P+\"",
        "\"0x1p+1\"",
        "\"0X1P+1\"",
        "\"0x1p+1a\"",
        "\"0x1p 2\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-strtoimax.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"\"",
        "\" \"",
        "\" +\"",
        "\" -\"",
        "\"0\"",
        "\"+0\"",
        "\"-0\"",
        "\"23\"",
        "\" 23\"",
        "\"+23\"",
        "\"-23\"",
        "\"2147483647\"",
        "\"-2147483648\"",
        "\"4294967295\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-strtoll.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"\"",
        "\" \"",
        "\" +\"",
        "\" -\"",
        "\"0\"",
        "\"+0\"",
        "\"-0\"",
        "\"23\"",
        "\" 23\"",
        "\"+23\"",
        "\"-23\"",
        "\"2147483647\"",
        "\"-2147483648\"",
        "\"4294967295\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-strtoull.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": [
        "\"\"",
        "\" \"",
        "\" +\"",
        "\" -\"",
        "\"0\"",
        "\"+0\"",
        "\"-0\"",
        "\"23\"",
        "\" 23\"",
        "\"+23\"",
        "\"-23\"",
        "\"2147483647\"",
        "\"-2147483648\"",
        "\"4294967295\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-strtoumax.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": [
        "\"\"",
        "\" \"",
        "\" +\"",
        "\" -\"",
        "\"0\"",
        "\"+0\"",
        "\"-0\"",
        "\"23\"",
        "\" 23\"",
        "\"+23\"",
        "\"-23\"",
        "\"2147483647\"",
        "\"-2147483648\"",
        "\"4294967295\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-symlink.c": {
    "main": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-symlink.h": {
    "test_symlink": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"nowhere\"",
        "\"link1\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"\"",
        "\"link2\"",
        "\"nowhere\"",
        "\"\"",
        "\"nowhere\"",
        "\".\"",
        "\"somewhere\"",
        "\"link1\"",
        "\"nowhere\"",
        "\"link2/\"",
        "\"nowhere\"",
        "\"dir\"",
        "\"nowhere\"",
        "\"dir/\"",
        "\"nowhere\"",
        "\"file\"",
        "\"nowhere\"",
        "\"file/\"",
        "\"link2\"",
        "\"link1\"",
        "\", BASE \"",
        "\"file\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-symlinkat.c": {
    "do_symlink": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\"",
        "\"foo\"",
        "\"bar\"",
        "\"foo\"",
        "\"bar\"",
        "\".\"",
        "\"skipping test: symlinks not supported on this file system\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sys_ioctl.c": {
    "main": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sys_resource.c": {
    "main": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sys_select.c": {
    "main": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sys_socket.c": {
    "main": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sys_stat.c": {
    "main": {
      "start_point": [
        335,
        0
      ],
      "end_point": [
        339,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sys_time.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sys_types.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sys_uio.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sys_utsname.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": [
        "\"Linux\"",
        "\"hobbybox\"",
        "\"3.141.592\"",
        "\"GENERIC\"",
        "\"i586\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sys_wait.c": {
    "main": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-sys_wait.h": {
    "test_sys_wait_macros": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-termios.c": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-thread_create.c": {
    "worker_thread_func": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": [
        "\"glthread_create failed\\n\"",
        "\"Skipping test: multithreading not enabled\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-thread_self.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-time.c": {
    "main": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-timespec.c": {
    "valid": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "sign": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "cmp": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "eq": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "extremal": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-tls.c": {
    "perhaps_yield": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "worker_thread": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": [
        "\"Worker %p started\\n\"",
        "\"Worker %p before initial verify\\n\"",
        "\"Worker %p after  initial verify\\n\"",
        "\"Worker %p before first tls_set\\n\"",
        "\"Worker %p after  first tls_set\\n\"",
        "\"Worker %p doing value swapping\\n\"",
        "\"Worker %p before final verify\\n\"",
        "\"Worker %p after  final verify\\n\"",
        "\"Worker %p dying.\\n\""
      ]
    },
    "test_tls": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "main": [
      {
        "start_point": [
          183,
          0
        ],
        "end_point": [
          196,
          1
        ],
        "strings": [
          "\"Starting test_tls ...\"",
          "\" OK\\n\""
        ]
      },
      {
        "start_point": [
          204,
          0
        ],
        "end_point": [
          209,
          1
        ],
        "strings": [
          "\"Skipping test: multithreading not enabled\\n\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-u64.c": {
    "main": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-uname.c": {
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"uname -n = nodename       = %s\\n\"",
        "\"uname -s = sysname        = %s\\n\"",
        "\"uname -r = release        = %s\\n\"",
        "\"uname -v = version        = %s\\n\"",
        "\"uname -m = machine or cpu = %s\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-unistd.c": {
    "main": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-unlink.c": {
    "main": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-unlink.h": {
    "test_unlink_func": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": [
        "\"dir/file\"",
        "\"\"",
        "\".\"",
        "\"..\"",
        "\"/\"",
        "\"dir1\"",
        "\"dir1\"",
        "\"dir\"",
        "\"link\"",
        "\"dir\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"link/\"",
        "\"dir/file\"",
        "\"link\"",
        "\"dir/file\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-unlinkat.c": {
    "rmdirat": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "unlinker": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\"",
        "\"foo\"",
        "\"foo\"",
        "\".\"",
        "\"skipping test: symlinks not supported on this file system\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-unsetenv.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"b=2\"",
        "\"a=1\"",
        "\"a\"",
        "\"a\"",
        "\"a\"",
        "\"\"",
        "\"a=b\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-userspec.c": {
    "maybe_null": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": [
        "\"NULL\""
      ]
    },
    "same_diag": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"%s return value mismatch: got %s, expected %s\\n\"",
        "\"%s mismatch (-: expected uid,gid; +:actual)\\n\"",
        "\"-%3lu,%3lu\\n+%3lu,%3lu\\n\"",
        "\"%s diagnostic mismatch (-: expected uid,gid; +:actual)\\n\"",
        "\"-%s\\n+%s\\n\"",
        "\"\"",
        "\"unexpected error: %s\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-usleep.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-utime-h.c": {
    "main": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-utime.c": {
    "test_utime": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": [
        "\"file\"",
        "\"file\"",
        "\"file\"",
        "\"file\"",
        "\"no_such\"",
        "\"no_such/\"",
        "\"\"",
        "\"file/\"",
        "\"file\"",
        "\"file\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"link/\"",
        "\"link\"",
        "\"file\""
      ]
    },
    "main": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-utimens-common.h": {
    "ctime_compare": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-utimens.c": {
    "do_futimens": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "do_fdutimens": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-utimens.h": {
    "test_utimens": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"file\"",
        "\"file\"",
        "\"file\"",
        "\"no_such\"",
        "\"no_such/\"",
        "\"\"",
        "\"file/\"",
        "\"file\"",
        "\"file\"",
        "\"file\"",
        "\"file\"",
        "\"file\"",
        "\"link\"",
        "\"skipping test: symlinks not supported on this file system\\n\"",
        "\"link/\"",
        "\"link\"",
        "\"file\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-utimensat.c": {
    "do_utimensat": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "do_lutimensat": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"rm -rf \"",
        "\"*\"",
        "\"foo\"",
        "\"foo\"",
        "\".\"",
        "\"dir\"",
        "\"file\"",
        "\".\"",
        "\"dir/file\"",
        "\"file\"",
        "\".\"",
        "\"..\"",
        "\"dir\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-vasnprintf.c": {
    "test_function": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"%d\"",
        "\"12345\"",
        "\"DEADBEEF\"",
        "\"%d\"",
        "\"12345\"",
        "\"DEADBEEF\""
      ]
    },
    "my_asnprintf": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "test_vasnprintf": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "test_asnprintf": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-vasprintf-posix.c": {
    "have_minus_zero": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "strmatch": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "strisnan": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": [
        "\"NAN\"",
        "\"nan\""
      ]
    },
    "test_function": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        3569,
        1
      ],
      "strings": [
        "\"%d\"",
        "\"12345\"",
        "\"%ju %d\"",
        "\"12345671 33\"",
        "\"%zu %d\"",
        "\"12345672 33\"",
        "\"%tu %d\"",
        "\"12345673 33\"",
        "\"%Lg %d\"",
        "\"1.5 33\"",
        "\"%a %d\"",
        "\"0x1.922p+1 33\"",
        "\"0x3.244p+0 33\"",
        "\"0x6.488p-1 33\"",
        "\"0xc.91p-2 33\"",
        "\"%A %d\"",
        "\"-0X1.922P+1 33\"",
        "\"-0X3.244P+0 33\"",
        "\"-0X6.488P-1 33\"",
        "\"-0XC.91P-2 33\"",
        "\"%a %d\"",
        "\"0x0p+0 33\"",
        "\"%a %d\"",
        "\"-0x0p+0 33\"",
        "\"%a %d\"",
        "\"inf 33\"",
        "\"%a %d\"",
        "\"-inf 33\"",
        "\"%a %d\"",
        "\" 33\"",
        "\"%.0a %d\"",
        "\"0x1p+0 33\"",
        "\"0x2p+0 33\"",
        "\"0x3p-1 33\"",
        "\"0x6p-2 33\"",
        "\"0xcp-3 33\"",
        "\"%.0a %d\"",
        "\"0x1p+0 33\"",
        "\"0x2p+0 33\"",
        "\"0x3p-1 33\"",
        "\"0x6p-2 33\"",
        "\"0xcp-3 33\"",
        "\"%.1a %d\"",
        "\"0x1.8p+0 33\"",
        "\"0x3.0p-1 33\"",
        "\"0x6.1p-2 33\"",
        "\"0xc.1p-3 33\"",
        "\"%.2a %d\"",
        "\"0x1.83p+0 33\"",
        "\"0x3.05p-1 33\"",
        "\"0x6.0ap-2 33\"",
        "\"0xc.14p-3 33\"",
        "\"%.3a %d\"",
        "\"0x1.829p+0 33\"",
        "\"0x3.052p-1 33\"",
        "\"0x6.0a4p-2 33\"",
        "\"0xc.148p-3 33\"",
        "\"%.3a %d\"",
        "\"0x1.800p+0 33\"",
        "\"0x3.000p-1 33\"",
        "\"0x6.000p-2 33\"",
        "\"0xc.000p-3 33\"",
        "\"%.1a %d\"",
        "\"0x1.0p+1 33\"",
        "\"0x2.0p+0 33\"",
        "\"0x4.0p-1 33\"",
        "\"0x8.0p-2 33\"",
        "\"%10a %d\"",
        "\"  0x1.cp+0 33\"",
        "\"  0x3.8p-1 33\"",
        "\"    0x7p-2 33\"",
        "\"    0xep-3 33\"",
        "\"%.10a %d\"",
        "\"0x1.c000000000p+0 33\"",
        "\"0x3.8000000000p-1 33\"",
        "\"0x7.0000000000p-2 33\"",
        "\"0xe.0000000000p-3 33\"",
        "\"%.50a %d\"",
        "\"0x1.c0000000000000000000000000000000000000000000000000p+0 33\"",
        "\"0x3.80000000000000000000000000000000000000000000000000p-1 33\"",
        "\"0x7.00000000000000000000000000000000000000000000000000p-2 33\"",
        "\"0xe.00000000000000000000000000000000000000000000000000p-3 33\"",
        "\"%-10a %d\"",
        "\"0x1.cp+0   33\"",
        "\"0x3.8p-1   33\"",
        "\"0x7p-2     33\"",
        "\"0xep-3     33\"",
        "\"%+a %d\"",
        "\"+0x1.cp+0 33\"",
        "\"+0x3.8p-1 33\"",
        "\"+0x7p-2 33\"",
        "\"+0xep-3 33\"",
        "\"% a %d\"",
        "\" 0x1.cp+0 33\"",
        "\" 0x3.8p-1 33\"",
        "\" 0x7p-2 33\"",
        "\" 0xep-3 33\"",
        "\"%#a %d\"",
        "\"0x1.cp+0 33\"",
        "\"0x3.8p-1 33\"",
        "\"0x7.p-2 33\"",
        "\"0xe.p-3 33\"",
        "\"%#a %d\"",
        "\"0x1.p+0 33\"",
        "\"0x2.p-1 33\"",
        "\"0x4.p-2 33\"",
        "\"0x8.p-3 33\"",
        "\"%010a %d\"",
        "\"0x001.cp+0 33\"",
        "\"0x003.8p-1 33\"",
        "\"0x00007p-2 33\"",
        "\"0x0000ep-3 33\"",
        "\"%010a %d\"",
        "\"       inf 33\"",
        "\"%050a %d\"",
        "\" \"",
        "\" 33\"",
        "\"%La %d\"",
        "\"0x1.922p+1 33\"",
        "\"0x3.244p+0 33\"",
        "\"0x6.488p-1 33\"",
        "\"0xc.91p-2 33\"",
        "\"%LA %d\"",
        "\"-0X1.922P+1 33\"",
        "\"-0X3.244P+0 33\"",
        "\"-0X6.488P-1 33\"",
        "\"-0XC.91P-2 33\"",
        "\"%La %d\"",
        "\"0x0p+0 33\"",
        "\"%La %d\"",
        "\"-0x0p+0 33\"",
        "\"%La %d\"",
        "\"inf 33\"",
        "\"%La %d\"",
        "\"-inf 33\"",
        "\"%La %d\"",
        "\" 33\"",
        "\"%La %d\"",
        "\" 33\"",
        "\"%La %d\"",
        "\" 33\"",
        "\"%La %d\"",
        "\" 33\"",
        "\"%La %d\"",
        "\" 33\"",
        "\"%La %d\"",
        "\" 33\"",
        "\"%La %d\"",
        "\" 33\"",
        "\"%La %d\"",
        "\" 33\"",
        "\"%.0La %d\"",
        "\"0x2p+0 33\"",
        "\"0x3p-1 33\"",
        "\"0x6p-2 33\"",
        "\"0xcp-3 33\"",
        "\"%.0La %d\"",
        "\"0x2p+0 33\"",
        "\"0x3p-1 33\"",
        "\"0x6p-2 33\"",
        "\"0xcp-3 33\"",
        "\"%.1La %d\"",
        "\"0x1.8p+0 33\"",
        "\"0x3.0p-1 33\"",
        "\"0x6.1p-2 33\"",
        "\"0xc.1p-3 33\"",
        "\"%.2La %d\"",
        "\"0x1.83p+0 33\"",
        "\"0x3.05p-1 33\"",
        "\"0x6.0ap-2 33\"",
        "\"0xc.14p-3 33\"",
        "\"%.3La %d\"",
        "\"0x1.829p+0 33\"",
        "\"0x3.052p-1 33\"",
        "\"0x6.0a4p-2 33\"",
        "\"0xc.148p-3 33\"",
        "\"%.3La %d\"",
        "\"0x1.800p+0 33\"",
        "\"0x3.000p-1 33\"",
        "\"0x6.000p-2 33\"",
        "\"0xc.000p-3 33\"",
        "\"%.1La %d\"",
        "\"0x1.0p+1 33\"",
        "\"0x2.0p+0 33\"",
        "\"0x4.0p-1 33\"",
        "\"0x8.0p-2 33\"",
        "\"%10La %d\"",
        "\"  0x1.cp+0 33\"",
        "\"  0x3.8p-1 33\"",
        "\"    0x7p-2 33\"",
        "\"    0xep-3 33\"",
        "\"%.10La %d\"",
        "\"0x1.c000000000p+0 33\"",
        "\"0x3.8000000000p-1 33\"",
        "\"0x7.0000000000p-2 33\"",
        "\"0xe.0000000000p-3 33\"",
        "\"%.50La %d\"",
        "\"0x1.c0000000000000000000000000000000000000000000000000p+0 33\"",
        "\"0x3.80000000000000000000000000000000000000000000000000p-1 33\"",
        "\"0x7.00000000000000000000000000000000000000000000000000p-2 33\"",
        "\"0xe.00000000000000000000000000000000000000000000000000p-3 33\"",
        "\"%-10La %d\"",
        "\"0x1.cp+0   33\"",
        "\"0x3.8p-1   33\"",
        "\"0x7p-2     33\"",
        "\"0xep-3     33\"",
        "\"%+La %d\"",
        "\"+0x1.cp+0 33\"",
        "\"+0x3.8p-1 33\"",
        "\"+0x7p-2 33\"",
        "\"+0xep-3 33\"",
        "\"% La %d\"",
        "\" 0x1.cp+0 33\"",
        "\" 0x3.8p-1 33\"",
        "\" 0x7p-2 33\"",
        "\" 0xep-3 33\"",
        "\"%#La %d\"",
        "\"0x1.cp+0 33\"",
        "\"0x3.8p-1 33\"",
        "\"0x7.p-2 33\"",
        "\"0xe.p-3 33\"",
        "\"%#La %d\"",
        "\"0x1.p+0 33\"",
        "\"0x2.p-1 33\"",
        "\"0x4.p-2 33\"",
        "\"0x8.p-3 33\"",
        "\"%010La %d\"",
        "\"0x001.cp+0 33\"",
        "\"0x003.8p-1 33\"",
        "\"0x00007p-2 33\"",
        "\"0x0000ep-3 33\"",
        "\"%010La %d\"",
        "\"       inf 33\"",
        "\"%050La %d\"",
        "\" \"",
        "\" 33\"",
        "\"%f %d\"",
        "\"12.750000 33\"",
        "\"%f %d\"",
        "\"1234567.000000 33\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000001\"",
        "\"0.000012\"",
        "\"0.000123\"",
        "\"0.001234\"",
        "\"0.012343\"",
        "\"0.123432\"",
        "\"1.234321\"",
        "\"12.343212\"",
        "\"123.432123\"",
        "\"1234.321234\"",
        "\"12343.212343\"",
        "\"123432.123432\"",
        "\"1234321.234321\"",
        "\"12343212.343212\"",
        "\"123432123.432123\"",
        "\"1234321234.321234\"",
        "\"12343212343.2123**\"",
        "\"123432123432.123***\"",
        "\"1234321234321.23****\"",
        "\"12343212343212.3*****\"",
        "\"123432123432123.******\"",
        "\"1234321234321234.000000\"",
        "\"123432123432123**.000000\"",
        "\"123432123432123***.000000\"",
        "\"123432123432123****.000000\"",
        "\"123432123432123*****.000000\"",
        "\"123432123432123******.000000\"",
        "\"123432123432123*******.000000\"",
        "\"123432123432123********.000000\"",
        "\"123432123432123*********.000000\"",
        "\"123432123432123**********.000000\"",
        "\"123432123432123***********.000000\"",
        "\"123432123432123************.000000\"",
        "\"123432123432123*************.000000\"",
        "\"123432123432123**************.000000\"",
        "\"123432123432123***************.000000\"",
        "\"123432123432123****************.000000\"",
        "\"123432123432123*****************.000000\"",
        "\"123432123432123******************.000000\"",
        "\"123432123432123*******************.000000\"",
        "\"123432123432123********************.000000\"",
        "\"123432123432123*********************.000000\"",
        "\"123432123432123**********************.000000\"",
        "\"%f\"",
        "\"%f %d\"",
        "\"-0.031250 33\"",
        "\"%f %d\"",
        "\"0.000000 33\"",
        "\"%f %d\"",
        "\"-0.000000 33\"",
        "\"%f %d\"",
        "\"inf 33\"",
        "\"infinity 33\"",
        "\"%f %d\"",
        "\"-inf 33\"",
        "\"-infinity 33\"",
        "\"%f %d\"",
        "\" 33\"",
        "\"%10f %d\"",
        "\"  1.750000 33\"",
        "\"%-10f %d\"",
        "\"1.750000   33\"",
        "\"%+f %d\"",
        "\"+1.750000 33\"",
        "\"% f %d\"",
        "\" 1.750000 33\"",
        "\"%#f %d\"",
        "\"1.750000 33\"",
        "\"%#.f %d\"",
        "\"2. 33\"",
        "\"%015f %d\"",
        "\"00001234.000000 33\"",
        "\"%015f %d\"",
        "\"           -inf 33\"",
        "\"      -infinity 33\"",
        "\"%050f %d\"",
        "\" \"",
        "\" 33\"",
        "\"%.f %d\"",
        "\"1234 33\"",
        "\"%.2f %d\"",
        "\"999.95 33\"",
        "\"%.2f %d\"",
        "\"1000.00 33\"",
        "\"%Lf %d\"",
        "\"12.750000 33\"",
        "\"%Lf %d\"",
        "\"1234567.000000 33\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000000\"",
        "\"0.000001\"",
        "\"0.000012\"",
        "\"0.000123\"",
        "\"0.001234\"",
        "\"0.012343\"",
        "\"0.123432\"",
        "\"1.234321\"",
        "\"12.343212\"",
        "\"123.432123\"",
        "\"1234.321234\"",
        "\"12343.212343\"",
        "\"123432.123432\"",
        "\"1234321.234321\"",
        "\"12343212.343212\"",
        "\"123432123.432123\"",
        "\"1234321234.321234\"",
        "\"12343212343.2123**\"",
        "\"123432123432.123***\"",
        "\"1234321234321.23****\"",
        "\"12343212343212.3*****\"",
        "\"123432123432123.******\"",
        "\"1234321234321234.000000\"",
        "\"123432123432123**.000000\"",
        "\"123432123432123***.000000\"",
        "\"123432123432123****.000000\"",
        "\"123432123432123*****.000000\"",
        "\"123432123432123******.000000\"",
        "\"123432123432123*******.000000\"",
        "\"123432123432123********.000000\"",
        "\"123432123432123*********.000000\"",
        "\"123432123432123**********.000000\"",
        "\"123432123432123***********.000000\"",
        "\"123432123432123************.000000\"",
        "\"123432123432123*************.000000\"",
        "\"123432123432123**************.000000\"",
        "\"123432123432123***************.000000\"",
        "\"123432123432123****************.000000\"",
        "\"123432123432123*****************.000000\"",
        "\"123432123432123******************.000000\"",
        "\"123432123432123*******************.000000\"",
        "\"123432123432123********************.000000\"",
        "\"123432123432123*********************.000000\"",
        "\"123432123432123**********************.000000\"",
        "\"%Lf\"",
        "\"%Lf %d\"",
        "\"-0.031250 33\"",
        "\"%Lf %d\"",
        "\"0.000000 33\"",
        "\"%Lf %d\"",
        "\"-0.000000 33\"",
        "\"%Lf %d\"",
        "\"inf 33\"",
        "\"infinity 33\"",
        "\"%Lf %d\"",
        "\"-inf 33\"",
        "\"-infinity 33\"",
        "\"%Lf %d\"",
        "\" 33\"",
        "\"%Lf %d\"",
        "\" 33\"",
        "\"%Lf %d\"",
        "\" 33\"",
        "\"%Lf %d\"",
        "\" 33\"",
        "\"%Lf %d\"",
        "\" 33\"",
        "\"%Lf %d\"",
        "\" 33\"",
        "\"%Lf %d\"",
        "\" 33\"",
        "\"%Lf %d\"",
        "\" 33\"",
        "\"%10Lf %d\"",
        "\"  1.750000 33\"",
        "\"%-10Lf %d\"",
        "\"1.750000   33\"",
        "\"%+Lf %d\"",
        "\"+1.750000 33\"",
        "\"% Lf %d\"",
        "\" 1.750000 33\"",
        "\"%#Lf %d\"",
        "\"1.750000 33\"",
        "\"%#.Lf %d\"",
        "\"2. 33\"",
        "\"%015Lf %d\"",
        "\"00001234.000000 33\"",
        "\"%015Lf %d\"",
        "\"           -inf 33\"",
        "\"      -infinity 33\"",
        "\"%050Lf %d\"",
        "\" \"",
        "\" 33\"",
        "\"%.Lf %d\"",
        "\"1234 33\"",
        "\"%.2Lf %d\"",
        "\"999.95 33\"",
        "\"%.2Lf %d\"",
        "\"1000.00 33\"",
        "\"%F %d\"",
        "\"12.750000 33\"",
        "\"%F %d\"",
        "\"1234567.000000 33\"",
        "\"%F %d\"",
        "\"-0.031250 33\"",
        "\"%F %d\"",
        "\"0.000000 33\"",
        "\"%F %d\"",
        "\"-0.000000 33\"",
        "\"%F %d\"",
        "\"INF 33\"",
        "\"INFINITY 33\"",
        "\"%F %d\"",
        "\"-INF 33\"",
        "\"-INFINITY 33\"",
        "\"%F %d\"",
        "\" 33\"",
        "\"%015F %d\"",
        "\"00001234.000000 33\"",
        "\"%015F %d\"",
        "\"           -INF 33\"",
        "\"      -INFINITY 33\"",
        "\"%.F %d\"",
        "\"1234 33\"",
        "\"%.2F %d\"",
        "\"999.95 33\"",
        "\"%.2F %d\"",
        "\"1000.00 33\"",
        "\"%LF %d\"",
        "\"12.750000 33\"",
        "\"%LF %d\"",
        "\"1234567.000000 33\"",
        "\"%LF %d\"",
        "\"-0.031250 33\"",
        "\"%LF %d\"",
        "\"0.000000 33\"",
        "\"%LF %d\"",
        "\"-0.000000 33\"",
        "\"%LF %d\"",
        "\"INF 33\"",
        "\"INFINITY 33\"",
        "\"%LF %d\"",
        "\"-INF 33\"",
        "\"-INFINITY 33\"",
        "\"%LF %d\"",
        "\" 33\"",
        "\"%015LF %d\"",
        "\"00001234.000000 33\"",
        "\"%015LF %d\"",
        "\"           -INF 33\"",
        "\"      -INFINITY 33\"",
        "\"%.LF %d\"",
        "\"1234 33\"",
        "\"%.2LF %d\"",
        "\"999.95 33\"",
        "\"%.2LF %d\"",
        "\"1000.00 33\"",
        "\"%e %d\"",
        "\"1.275000e+01 33\"",
        "\"1.275000e+001 33\"",
        "\"%e %d\"",
        "\"1.234567e+06 33\"",
        "\"1.234567e+006 33\"",
        "\"1.234321e-37\"",
        "\"1.234321e-36\"",
        "\"1.234321e-35\"",
        "\"1.234321e-34\"",
        "\"1.234321e-33\"",
        "\"1.234321e-32\"",
        "\"1.234321e-31\"",
        "\"1.234321e-30\"",
        "\"1.234321e-29\"",
        "\"1.234321e-28\"",
        "\"1.234321e-27\"",
        "\"1.234321e-26\"",
        "\"1.234321e-25\"",
        "\"1.234321e-24\"",
        "\"1.234321e-23\"",
        "\"1.234321e-22\"",
        "\"1.234321e-21\"",
        "\"1.234321e-20\"",
        "\"1.234321e-19\"",
        "\"1.234321e-18\"",
        "\"1.234321e-17\"",
        "\"1.234321e-16\"",
        "\"1.234321e-15\"",
        "\"1.234321e-14\"",
        "\"1.234321e-13\"",
        "\"1.234321e-12\"",
        "\"1.234321e-11\"",
        "\"1.234321e-10\"",
        "\"1.234321e-09\"",
        "\"1.234321e-08\"",
        "\"1.234321e-07\"",
        "\"1.234321e-06\"",
        "\"1.234321e-05\"",
        "\"1.234321e-04\"",
        "\"1.234321e-03\"",
        "\"1.234321e-02\"",
        "\"1.234321e-01\"",
        "\"1.234321e+00\"",
        "\"1.234321e+01\"",
        "\"1.234321e+02\"",
        "\"1.234321e+03\"",
        "\"1.234321e+04\"",
        "\"1.234321e+05\"",
        "\"1.234321e+06\"",
        "\"1.234321e+07\"",
        "\"1.234321e+08\"",
        "\"1.234321e+09\"",
        "\"1.234321e+10\"",
        "\"1.234321e+11\"",
        "\"1.234321e+12\"",
        "\"1.234321e+13\"",
        "\"1.234321e+14\"",
        "\"1.234321e+15\"",
        "\"1.234321e+16\"",
        "\"1.234321e+17\"",
        "\"1.234321e+18\"",
        "\"1.234321e+19\"",
        "\"1.234321e+20\"",
        "\"1.234321e+21\"",
        "\"1.234321e+22\"",
        "\"1.234321e+23\"",
        "\"1.234321e+24\"",
        "\"1.234321e+25\"",
        "\"1.234321e+26\"",
        "\"1.234321e+27\"",
        "\"1.234321e+28\"",
        "\"1.234321e+29\"",
        "\"1.234321e+30\"",
        "\"1.234321e+31\"",
        "\"1.234321e+32\"",
        "\"1.234321e+33\"",
        "\"1.234321e+34\"",
        "\"1.234321e+35\"",
        "\"1.234321e+36\"",
        "\"%e\"",
        "\"%e %d\"",
        "\"-3.125000e-02 33\"",
        "\"-3.125000e-002 33\"",
        "\"%e %d\"",
        "\"0.000000e+00 33\"",
        "\"0.000000e+000 33\"",
        "\"%e %d\"",
        "\"-0.000000e+00 33\"",
        "\"-0.000000e+000 33\"",
        "\"%e %d\"",
        "\"inf 33\"",
        "\"infinity 33\"",
        "\"%e %d\"",
        "\"-inf 33\"",
        "\"-infinity 33\"",
        "\"%e %d\"",
        "\" 33\"",
        "\"%15e %d\"",
        "\"   1.750000e+00 33\"",
        "\"  1.750000e+000 33\"",
        "\"%-15e %d\"",
        "\"1.750000e+00    33\"",
        "\"1.750000e+000   33\"",
        "\"%+e %d\"",
        "\"+1.750000e+00 33\"",
        "\"+1.750000e+000 33\"",
        "\"% e %d\"",
        "\" 1.750000e+00 33\"",
        "\" 1.750000e+000 33\"",
        "\"%#e %d\"",
        "\"1.750000e+00 33\"",
        "\"1.750000e+000 33\"",
        "\"%#.e %d\"",
        "\"2.e+00 33\"",
        "\"2.e+000 33\"",
        "\"%#.e %d\"",
        "\"1.e+01 33\"",
        "\"1.e+001 33\"",
        "\"%015e %d\"",
        "\"0001.234000e+03 33\"",
        "\"001.234000e+003 33\"",
        "\"%015e %d\"",
        "\"           -inf 33\"",
        "\"      -infinity 33\"",
        "\"%050e %d\"",
        "\" \"",
        "\" 33\"",
        "\"%.e %d\"",
        "\"1e+03 33\"",
        "\"1e+003 33\"",
        "\"%.4e %d\"",
        "\"9.9995e+02 33\"",
        "\"9.9995e+002 33\"",
        "\"%.4e %d\"",
        "\"1.0000e+03 33\"",
        "\"1.0000e+003 33\"",
        "\"%Le %d\"",
        "\"1.275000e+01 33\"",
        "\"1.275000e+001 33\"",
        "\"%Le %d\"",
        "\"1.234567e+06 33\"",
        "\"1.234567e+006 33\"",
        "\"1.234321e-37\"",
        "\"1.234321e-36\"",
        "\"1.234321e-35\"",
        "\"1.234321e-34\"",
        "\"1.234321e-33\"",
        "\"1.234321e-32\"",
        "\"1.234321e-31\"",
        "\"1.234321e-30\"",
        "\"1.234321e-29\"",
        "\"1.234321e-28\"",
        "\"1.234321e-27\"",
        "\"1.234321e-26\"",
        "\"1.234321e-25\"",
        "\"1.234321e-24\"",
        "\"1.234321e-23\"",
        "\"1.234321e-22\"",
        "\"1.234321e-21\"",
        "\"1.234321e-20\"",
        "\"1.234321e-19\"",
        "\"1.234321e-18\"",
        "\"1.234321e-17\"",
        "\"1.234321e-16\"",
        "\"1.234321e-15\"",
        "\"1.234321e-14\"",
        "\"1.234321e-13\"",
        "\"1.234321e-12\"",
        "\"1.234321e-11\"",
        "\"1.234321e-10\"",
        "\"1.234321e-09\"",
        "\"1.234321e-08\"",
        "\"1.234321e-07\"",
        "\"1.234321e-06\"",
        "\"1.234321e-05\"",
        "\"1.234321e-04\"",
        "\"1.234321e-03\"",
        "\"1.234321e-02\"",
        "\"1.234321e-01\"",
        "\"1.234321e+00\"",
        "\"1.234321e+01\"",
        "\"1.234321e+02\"",
        "\"1.234321e+03\"",
        "\"1.234321e+04\"",
        "\"1.234321e+05\"",
        "\"1.234321e+06\"",
        "\"1.234321e+07\"",
        "\"1.234321e+08\"",
        "\"1.234321e+09\"",
        "\"1.234321e+10\"",
        "\"1.234321e+11\"",
        "\"1.234321e+12\"",
        "\"1.234321e+13\"",
        "\"1.234321e+14\"",
        "\"1.234321e+15\"",
        "\"1.234321e+16\"",
        "\"1.234321e+17\"",
        "\"1.234321e+18\"",
        "\"1.234321e+19\"",
        "\"1.234321e+20\"",
        "\"1.234321e+21\"",
        "\"1.234321e+22\"",
        "\"1.234321e+23\"",
        "\"1.234321e+24\"",
        "\"1.234321e+25\"",
        "\"1.234321e+26\"",
        "\"1.234321e+27\"",
        "\"1.234321e+28\"",
        "\"1.234321e+29\"",
        "\"1.234321e+30\"",
        "\"1.234321e+31\"",
        "\"1.234321e+32\"",
        "\"1.234321e+33\"",
        "\"1.234321e+34\"",
        "\"1.234321e+35\"",
        "\"1.234321e+36\"",
        "\"%Le\"",
        "\"%Le %d\"",
        "\"-3.125000e-02 33\"",
        "\"-3.125000e-002 33\"",
        "\"%Le %d\"",
        "\"0.000000e+00 33\"",
        "\"0.000000e+000 33\"",
        "\"%Le %d\"",
        "\"-0.000000e+00 33\"",
        "\"-0.000000e+000 33\"",
        "\"%Le %d\"",
        "\"inf 33\"",
        "\"infinity 33\"",
        "\"%Le %d\"",
        "\"-inf 33\"",
        "\"-infinity 33\"",
        "\"%Le %d\"",
        "\" 33\"",
        "\"%Le %d\"",
        "\" 33\"",
        "\"%Le %d\"",
        "\" 33\"",
        "\"%Le %d\"",
        "\" 33\"",
        "\"%Le %d\"",
        "\" 33\"",
        "\"%Le %d\"",
        "\" 33\"",
        "\"%Le %d\"",
        "\" 33\"",
        "\"%Le %d\"",
        "\" 33\"",
        "\"%15Le %d\"",
        "\"   1.750000e+00 33\"",
        "\"  1.750000e+000 33\"",
        "\"%-15Le %d\"",
        "\"1.750000e+00    33\"",
        "\"1.750000e+000   33\"",
        "\"%+Le %d\"",
        "\"+1.750000e+00 33\"",
        "\"+1.750000e+000 33\"",
        "\"% Le %d\"",
        "\" 1.750000e+00 33\"",
        "\" 1.750000e+000 33\"",
        "\"%#Le %d\"",
        "\"1.750000e+00 33\"",
        "\"1.750000e+000 33\"",
        "\"%#.Le %d\"",
        "\"2.e+00 33\"",
        "\"2.e+000 33\"",
        "\"%#.Le %d\"",
        "\"1.e+01 33\"",
        "\"1.e+001 33\"",
        "\"%015Le %d\"",
        "\"0001.234000e+03 33\"",
        "\"001.234000e+003 33\"",
        "\"%015Le %d\"",
        "\"           -inf 33\"",
        "\"      -infinity 33\"",
        "\"%050Le %d\"",
        "\" \"",
        "\" 33\"",
        "\"%.Le %d\"",
        "\"1e+03 33\"",
        "\"1e+003 33\"",
        "\"%.4Le %d\"",
        "\"9.9995e+02 33\"",
        "\"9.9995e+002 33\"",
        "\"%.4Le %d\"",
        "\"1.0000e+03 33\"",
        "\"1.0000e+003 33\"",
        "\"%g %d\"",
        "\"12.75 33\"",
        "\"%g %d\"",
        "\"1.23457e+06 33\"",
        "\"1.23457e+006 33\"",
        "\"1.23432e-37\"",
        "\"1.23432e-36\"",
        "\"1.23432e-35\"",
        "\"1.23432e-34\"",
        "\"1.23432e-33\"",
        "\"1.23432e-32\"",
        "\"1.23432e-31\"",
        "\"1.23432e-30\"",
        "\"1.23432e-29\"",
        "\"1.23432e-28\"",
        "\"1.23432e-27\"",
        "\"1.23432e-26\"",
        "\"1.23432e-25\"",
        "\"1.23432e-24\"",
        "\"1.23432e-23\"",
        "\"1.23432e-22\"",
        "\"1.23432e-21\"",
        "\"1.23432e-20\"",
        "\"1.23432e-19\"",
        "\"1.23432e-18\"",
        "\"1.23432e-17\"",
        "\"1.23432e-16\"",
        "\"1.23432e-15\"",
        "\"1.23432e-14\"",
        "\"1.23432e-13\"",
        "\"1.23432e-12\"",
        "\"1.23432e-11\"",
        "\"1.23432e-10\"",
        "\"1.23432e-09\"",
        "\"1.23432e-08\"",
        "\"1.23432e-07\"",
        "\"1.23432e-06\"",
        "\"1.23432e-05\"",
        "\"0.000123432\"",
        "\"0.00123432\"",
        "\"0.0123432\"",
        "\"0.123432\"",
        "\"1.23432\"",
        "\"12.3432\"",
        "\"123.432\"",
        "\"1234.32\"",
        "\"12343.2\"",
        "\"123432\"",
        "\"1.23432e+06\"",
        "\"1.23432e+07\"",
        "\"1.23432e+08\"",
        "\"1.23432e+09\"",
        "\"1.23432e+10\"",
        "\"1.23432e+11\"",
        "\"1.23432e+12\"",
        "\"1.23432e+13\"",
        "\"1.23432e+14\"",
        "\"1.23432e+15\"",
        "\"1.23432e+16\"",
        "\"1.23432e+17\"",
        "\"1.23432e+18\"",
        "\"1.23432e+19\"",
        "\"1.23432e+20\"",
        "\"1.23432e+21\"",
        "\"1.23432e+22\"",
        "\"1.23432e+23\"",
        "\"1.23432e+24\"",
        "\"1.23432e+25\"",
        "\"1.23432e+26\"",
        "\"1.23432e+27\"",
        "\"1.23432e+28\"",
        "\"1.23432e+29\"",
        "\"1.23432e+30\"",
        "\"1.23432e+31\"",
        "\"1.23432e+32\"",
        "\"1.23432e+33\"",
        "\"1.23432e+34\"",
        "\"1.23432e+35\"",
        "\"1.23432e+36\"",
        "\"%g\"",
        "\"%g %d\"",
        "\"-0.03125 33\"",
        "\"%g %d\"",
        "\"0 33\"",
        "\"%g %d\"",
        "\"-0 33\"",
        "\"%g %d\"",
        "\"inf 33\"",
        "\"infinity 33\"",
        "\"%g %d\"",
        "\"-inf 33\"",
        "\"-infinity 33\"",
        "\"%g %d\"",
        "\" 33\"",
        "\"%10g %d\"",
        "\"      1.75 33\"",
        "\"%-10g %d\"",
        "\"1.75       33\"",
        "\"%+g %d\"",
        "\"+1.75 33\"",
        "\"% g %d\"",
        "\" 1.75 33\"",
        "\"%#g %d\"",
        "\"1.75000 33\"",
        "\"%#.g %d\"",
        "\"2. 33\"",
        "\"%#.g %d\"",
        "\"1.e+01 33\"",
        "\"1.e+001 33\"",
        "\"%010g %d\"",
        "\"0000001234 33\"",
        "\"%015g %d\"",
        "\"           -inf 33\"",
        "\"      -infinity 33\"",
        "\"%050g %d\"",
        "\" \"",
        "\" 33\"",
        "\"%.g %d\"",
        "\"1e+03 33\"",
        "\"1e+003 33\"",
        "\"%.5g %d\"",
        "\"999.95 33\"",
        "\"%.5g %d\"",
        "\"1000 33\"",
        "\"%Lg %d\"",
        "\"12.75 33\"",
        "\"%Lg %d\"",
        "\"1.23457e+06 33\"",
        "\"1.23457e+006 33\"",
        "\"1.23432e-37\"",
        "\"1.23432e-36\"",
        "\"1.23432e-35\"",
        "\"1.23432e-34\"",
        "\"1.23432e-33\"",
        "\"1.23432e-32\"",
        "\"1.23432e-31\"",
        "\"1.23432e-30\"",
        "\"1.23432e-29\"",
        "\"1.23432e-28\"",
        "\"1.23432e-27\"",
        "\"1.23432e-26\"",
        "\"1.23432e-25\"",
        "\"1.23432e-24\"",
        "\"1.23432e-23\"",
        "\"1.23432e-22\"",
        "\"1.23432e-21\"",
        "\"1.23432e-20\"",
        "\"1.23432e-19\"",
        "\"1.23432e-18\"",
        "\"1.23432e-17\"",
        "\"1.23432e-16\"",
        "\"1.23432e-15\"",
        "\"1.23432e-14\"",
        "\"1.23432e-13\"",
        "\"1.23432e-12\"",
        "\"1.23432e-11\"",
        "\"1.23432e-10\"",
        "\"1.23432e-09\"",
        "\"1.23432e-08\"",
        "\"1.23432e-07\"",
        "\"1.23432e-06\"",
        "\"1.23432e-05\"",
        "\"0.000123432\"",
        "\"0.00123432\"",
        "\"0.0123432\"",
        "\"0.123432\"",
        "\"1.23432\"",
        "\"12.3432\"",
        "\"123.432\"",
        "\"1234.32\"",
        "\"12343.2\"",
        "\"123432\"",
        "\"1.23432e+06\"",
        "\"1.23432e+07\"",
        "\"1.23432e+08\"",
        "\"1.23432e+09\"",
        "\"1.23432e+10\"",
        "\"1.23432e+11\"",
        "\"1.23432e+12\"",
        "\"1.23432e+13\"",
        "\"1.23432e+14\"",
        "\"1.23432e+15\"",
        "\"1.23432e+16\"",
        "\"1.23432e+17\"",
        "\"1.23432e+18\"",
        "\"1.23432e+19\"",
        "\"1.23432e+20\"",
        "\"1.23432e+21\"",
        "\"1.23432e+22\"",
        "\"1.23432e+23\"",
        "\"1.23432e+24\"",
        "\"1.23432e+25\"",
        "\"1.23432e+26\"",
        "\"1.23432e+27\"",
        "\"1.23432e+28\"",
        "\"1.23432e+29\"",
        "\"1.23432e+30\"",
        "\"1.23432e+31\"",
        "\"1.23432e+32\"",
        "\"1.23432e+33\"",
        "\"1.23432e+34\"",
        "\"1.23432e+35\"",
        "\"1.23432e+36\"",
        "\"%Lg\"",
        "\"%Lg %d\"",
        "\"-0.03125 33\"",
        "\"%Lg %d\"",
        "\"0 33\"",
        "\"%Lg %d\"",
        "\"-0 33\"",
        "\"%Lg %d\"",
        "\"inf 33\"",
        "\"infinity 33\"",
        "\"%Lg %d\"",
        "\"-inf 33\"",
        "\"-infinity 33\"",
        "\"%Lg %d\"",
        "\" 33\"",
        "\"%Lg %d\"",
        "\" 33\"",
        "\"%Lg %d\"",
        "\" 33\"",
        "\"%Lg %d\"",
        "\" 33\"",
        "\"%Lg %d\"",
        "\" 33\"",
        "\"%Lg %d\"",
        "\" 33\"",
        "\"%Lg %d\"",
        "\" 33\"",
        "\"%Lg %d\"",
        "\" 33\"",
        "\"%10Lg %d\"",
        "\"      1.75 33\"",
        "\"%-10Lg %d\"",
        "\"1.75       33\"",
        "\"%+Lg %d\"",
        "\"+1.75 33\"",
        "\"% Lg %d\"",
        "\" 1.75 33\"",
        "\"%#Lg %d\"",
        "\"1.75000 33\"",
        "\"%#.Lg %d\"",
        "\"2. 33\"",
        "\"%#.Lg %d\"",
        "\"1.e+01 33\"",
        "\"1.e+001 33\"",
        "\"%010Lg %d\"",
        "\"0000001234 33\"",
        "\"%015Lg %d\"",
        "\"           -inf 33\"",
        "\"      -infinity 33\"",
        "\"%050Lg %d\"",
        "\" \"",
        "\" 33\"",
        "\"%.Lg %d\"",
        "\"1e+03 33\"",
        "\"1e+003 33\"",
        "\"%.5Lg %d\"",
        "\"999.95 33\"",
        "\"%.5Lg %d\"",
        "\"1000 33\"",
        "\"%d %n\"",
        "\"123 \"",
        "\"%2$d %1$d\"",
        "\"55 33\"",
        "\"%'d %d\"",
        "\"a%*sc\"",
        "\"b\"",
        "\"ab  c\"",
        "\"a%-*sc\"",
        "\"b\"",
        "\"ab  c\"",
        "\"a%-*sc\"",
        "\"b\"",
        "\"ab  c\"",
        "\"%.4000d %d\"",
        "\"1234567 99\"",
        "\"%.*d %d\"",
        "\"1234567 99\"",
        "\"%.4000d %d\"",
        "\"1234567 99\"",
        "\"%.4000u %d\"",
        "\"1234567 99\"",
        "\"%.4000o %d\"",
        "\"4553207 99\"",
        "\"%.4000x %d\"",
        "\"12d687 99\"",
        "\"%#.4000x %d\"",
        "\"12d687 99\"",
        "\"%.4000f %d\"",
        "\" 99\"",
        "\"%.511f %d\"",
        "\" 99\"",
        "\"%.4000s %d\"",
        "\" 99\"",
        "\"abcdefgh\"",
        "\"%.*s\"",
        "\"abcdefgh\"",
        "\"%.*ls\"",
        "\"abcdefgh\""
      ]
    },
    "my_asprintf": {
      "start_point": [
        3571,
        0
      ],
      "end_point": [
        3581,
        1
      ],
      "strings": []
    },
    "test_vasprintf": {
      "start_point": [
        3583,
        0
      ],
      "end_point": [
        3587,
        1
      ],
      "strings": []
    },
    "test_asprintf": {
      "start_point": [
        3589,
        0
      ],
      "end_point": [
        3593,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        3595,
        0
      ],
      "end_point": [
        3601,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-vasprintf.c": {
    "my_asprintf": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "test_vasprintf": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": [
        "\"%d\"",
        "\"12345\"",
        "\"%08lx\"",
        "\"00003039\""
      ]
    },
    "test_asprintf": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"%d\"",
        "\"12345\"",
        "\"%08lx\"",
        "\"00003039\""
      ]
    },
    "main": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-verify-try.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/test-verify.c": {
    "function": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-version-etc.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": [
        "\"test-version-etc\"",
        "\"dummy\"",
        "\"0\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-vfprintf-posix.c": {
    "my_fprintf": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-vprintf-posix.c": {
    "my_printf": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-wchar.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-wcrtomb-w32.c": {
    "test_one_locale": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        296,
        1
      ],
      "strings": [
        "\"%s.%d\"",
        "\" \"",
        "\"\\374\"",
        "\"\\337\"",
        "\"\\302\"",
        "\"\\341\"",
        "\"\\346\"",
        "\"\\223\\372\"",
        "\"\\226\\173\"",
        "\"\\214\\352\"",
        "\"\\244\\351\"",
        "\"\\245\\273\"",
        "\"\\273\\171\"",
        "\"\\310\\325\"",
        "\"\\261\\276\"",
        "\"\\325\\132\"",
        "\"\\250\\271\"",
        "\"\\201\\060\\211\\070\"",
        "\"\\303\\274\"",
        "\"\\303\\237\""
      ]
    },
    "main": [
      {
        "start_point": [
          298,
          0
        ],
        "end_point": [
          320,
          1
        ],
        "strings": [
          "\"Skipping test: found no locale with codepage %d\\n\""
        ]
      },
      {
        "start_point": [
          324,
          0
        ],
        "end_point": [
          329,
          1
        ],
        "strings": [
          "\"Skipping test: not a native Windows system\\n\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-wcrtomb.c": {
    "check_character": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": [
        "\"\"",
        "\"B\\374\\337er\"",
        "\"B\\303\\274\\303\\237er\"",
        "\"<\\306\\374\\313\\334\\270\\354>\"",
        "\"B\\250\\271\\201\\060\\211\\070er\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-wctype-h.c": {
    "main": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-wcwidth.c": {
    "main": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": [
        "\"fr_FR.UTF-8\"",
        "\"UTF-8\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-write.c": {
    "main": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"test-write.tmp\"",
        "\"Hello World\"",
        "\"fascination\"",
        "\"Hello fascination\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-xalloc-die.c": {
    "main": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-xfprintf-posix.c": {
    "main": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-xprintf-posix.c": {
    "main": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-xstrtoimax.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/test-xstrtol.c": {
    "print_no_progname": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"bckMw0\"",
        "\"%s->%\"",
        "\" (%s)\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-xstrtoul.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/test-xstrtoumax.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/test-xvasprintf.c": {
    "my_xasprintf": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "test_xvasprintf": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": [
        "\"%d\"",
        "\"12345\"",
        "\"\"",
        "\"\"",
        "\"%s\"",
        "\"foo\"",
        "\"foo\"",
        "\"%s%s\"",
        "\"foo\"",
        "\"bar\"",
        "\"foobar\"",
        "\"%s%sbaz\"",
        "\"foo\"",
        "\"bar\"",
        "\"foobarbaz\""
      ]
    },
    "test_xasprintf": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": [
        "\"%d\"",
        "\"12345\"",
        "\"\"",
        "\"\"",
        "\"%s\"",
        "\"foo\"",
        "\"foo\"",
        "\"%s%s\"",
        "\"foo\"",
        "\"bar\"",
        "\"foobar\"",
        "\"%s%sbaz\"",
        "\"foo\"",
        "\"bar\"",
        "\"foobarbaz\""
      ]
    },
    "main": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/test-yesno.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"Y\"",
        "\"N\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/timespec-add.c": {
    "timespec_add": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/timespec-sub.c": {
    "timespec_sub": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/unlinkdir.c": {
    "cannot_unlink_dir": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/unlinkdir.h": {},
  "coreutils/coreutils-8.29/gnulib-tests/unused-parameter.h": {},
  "coreutils/coreutils-8.29/gnulib-tests/usleep.c": {
    "usleep": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/w32sock.h": {
    "set_winsock_errno": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/warn-on-use.h": {},
  "coreutils/coreutils-8.29/gnulib-tests/wctob.c": {
    "wctob": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/wctomb-impl.h": {
    "wctomb": {
      "start_point": [
        17,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/wctomb.c": {},
  "coreutils/coreutils-8.29/gnulib-tests/zerosize-ptr.h": {
    "zerosize_ptr": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": [
        "\"/dev/zero\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/_Noreturn.h": {},
  "coreutils/coreutils-8.29/gnulib-tests/glthread/thread.c": {
    "do_init_self_key": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "init_self_key": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "get_current_thread_handle": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "gl_thread_self_func": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "wrapper_func": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "glthread_create_func": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    },
    "glthread_join_func": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    },
    "gl_thread_exit_func": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/glthread/thread.h": {
    "gl_thread_create": {
      "start_point": [
        388,
        0
      ],
      "end_point": [
        398,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/glthread/yield.h": {},
  "coreutils/coreutils-8.29/gnulib-tests/unistr/test-strncat.h": {
    "check_single": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "check": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/unistr/test-u8-mbtoucr.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/unistr/test-u8-uctomb.c": {
    "main": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/uniwidth/test-uc_width.c": {
    "main": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": [
        "\"ISO-8859-2\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\""
      ]
    }
  },
  "coreutils/coreutils-8.29/gnulib-tests/uniwidth/test-uc_width2.c": {
    "finish_interval": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": [
        "\"%04X\\t\\t%c\\n\"",
        "\"%04X..%04X\\t%c\\n\""
      ]
    },
    "add_to_interval": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": [
        "\"UTF-8\"",
        "\"GBK\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/acl-errno-valid.c": {
    "acl_errno_valid": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/acl-internal.c": {
    "acl_extended_nontrivial": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "acl_access_nontrivial": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "acl_default_nontrivial": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "acl_nontrivial": [
      {
        "start_point": [
          131,
          0
        ],
        "end_point": [
          152,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          344,
          0
        ],
        "end_point": [
          360,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          393,
          0
        ],
        "end_point": [
          413,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          454,
          0
        ],
        "end_point": [
          473,
          1
        ],
        "strings": []
      }
    ],
    "acl_ace_nontrivial": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": []
    },
    "aclv_nontrivial": {
      "start_point": [
        366,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": []
    },
    "acl_nfs4_nontrivial": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        445,
        1
      ],
      "strings": []
    },
    "free_permission_context": {
      "start_point": [
        477,
        0
      ],
      "end_point": [
        506,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/acl-internal.h": {
    "rpl_acl_get_fd": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "rpl_acl_set_fd": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/acl.h": {},
  "coreutils/coreutils-8.29/lib/acl_entries.c": {
    "acl_entries": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/alignof.h": {},
  "coreutils/coreutils-8.29/lib/alloca.c": {
    "find_stack_direction": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "alloca": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": []
    },
    "i00afunc": [
      {
        "start_point": [
          328,
          0
        ],
        "end_point": [
          393,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          402,
          0
        ],
        "end_point": [
          471,
          1
        ],
        "strings": [
          "\"%011o %011o %011o\\n\"",
          "\"%011o %011o\\n\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/alloca.in.h": {},
  "coreutils/coreutils-8.29/lib/allocator.c": {},
  "coreutils/coreutils-8.29/lib/allocator.h": {},
  "coreutils/coreutils-8.29/lib/anytostr.c": {
    "__attribute_warn_unused_result__": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/areadlink-with-size.c": {
    "areadlink_with_size": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/areadlink.c": {
    "careadlinkatcwd": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "areadlink": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/areadlink.h": {},
  "coreutils/coreutils-8.29/lib/areadlinkat.c": {
    "areadlinkat": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/arg-nonnull.h": {},
  "coreutils/coreutils-8.29/lib/argmatch.c": {
    "__argmatch_die": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "argmatch": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "argmatch_invalid": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": [
        "\"invalid argument %s for %s\"",
        "\"ambiguous argument %s for %s\""
      ]
    },
    "argmatch_valid": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": [
        "\"Valid arguments are:\"",
        "\"\\n  - %s\"",
        "\", %s\""
      ]
    },
    "__xargmatch_internal": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        191,
        1
      ],
      "strings": []
    },
    "argmatch_to_argument": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": [
        "\"Usage: %s [VERSION_CONTROL]\\n\"",
        "\"VERSION_CONTROL\"",
        "\"$VERSION_CONTROL\"",
        "\"The version control is '%s'\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/argmatch.h": {},
  "coreutils/coreutils-8.29/lib/argv-iter.c": {
    "argv_iter_init_argv": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "argv_iter_init_stream": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "argv_iter": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "argv_iter_n_args": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "argv_iter_free": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/argv-iter.h": {},
  "coreutils/coreutils-8.29/lib/arpa_inet.in.h": {},
  "coreutils/coreutils-8.29/lib/asnprintf.c": {
    "asnprintf": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/asprintf.c": {
    "asprintf": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/assure.h": {},
  "coreutils/coreutils-8.29/lib/at-func.c": {
    "AT_FUNC_NAME": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/at-func2.c": {
    "at_func2": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": [
        "\".\"",
        "\".\"",
        "\".\"",
        "\".\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/backup-find.c": {
    "find_backup_file_name": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "get_version": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "xget_version": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": [
        "\"$VERSION_CONTROL\"",
        "\"VERSION_CONTROL\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/backup-internal.h": {},
  "coreutils/coreutils-8.29/lib/backup-rename.c": {
    "backup_file_rename": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/backupfile.c": {
    "set_simple_backup_suffix": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": [
        "\"SIMPLE_BACKUP_SUFFIX\"",
        "\"~\""
      ]
    },
    "check_extension": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\".\"",
        "\".\"",
        "\".\"",
        "\".\""
      ]
    },
    "numbered_backup": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        283,
        1
      ],
      "strings": [
        "\".\"",
        "\".\"",
        "\".\"",
        "\".\"",
        "\".~1~\""
      ]
    },
    "backupfile_internal": {
      "start_point": [
        290,
        0
      ],
      "end_point": [
        371,
        1
      ],
      "strings": [
        "\".~12345~\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/backupfile.h": {},
  "coreutils/coreutils-8.29/lib/base32.c": {
    "to_uchar": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "base32_encode": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\""
      ]
    },
    "base32_encode_alloc": {
      "start_point": [
        138,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "isbase32": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        288,
        1
      ],
      "strings": []
    },
    "base32_decode_ctx_init": {
      "start_point": [
        291,
        0
      ],
      "end_point": [
        295,
        1
      ],
      "strings": []
    },
    "get_8": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    },
    "decode_8": {
      "start_point": [
        358,
        0
      ],
      "end_point": [
        448,
        1
      ],
      "strings": []
    },
    "base32_decode_ctx": {
      "start_point": [
        468,
        0
      ],
      "end_point": [
        546,
        1
      ],
      "strings": []
    },
    "base32_decode_alloc_ctx": {
      "start_point": [
        559,
        0
      ],
      "end_point": [
        586,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/base32.h": {},
  "coreutils/coreutils-8.29/lib/base64.c": {
    "to_uchar": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "base64_encode_fast": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "base64_encode": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "base64_encode_alloc": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "isbase64": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        331,
        1
      ],
      "strings": []
    },
    "base64_decode_ctx_init": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        338,
        1
      ],
      "strings": []
    },
    "get_4": {
      "start_point": [
        347,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": []
    },
    "decode_4": {
      "start_point": [
        401,
        0
      ],
      "end_point": [
        466,
        1
      ],
      "strings": []
    },
    "base64_decode_ctx": {
      "start_point": [
        486,
        0
      ],
      "end_point": [
        564,
        1
      ],
      "strings": []
    },
    "base64_decode_alloc_ctx": {
      "start_point": [
        577,
        0
      ],
      "end_point": [
        604,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/base64.h": {},
  "coreutils/coreutils-8.29/lib/basename-lgpl.c": {
    "last_component": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "base_len": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/basename.c": {
    "base_name": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/binary-io.c": {
    "__gl_setmode_check": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/binary-io.h": {
    "__gl_setmode": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "__gl_setmode_check": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        61,
        41
      ],
      "strings": []
    },
    "set_binary_mode": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/bitrotate.c": {},
  "coreutils/coreutils-8.29/lib/bitrotate.h": {
    "uint64_t": [
      {
        "start_point": [
          37,
          0
        ],
        "end_point": [
          41,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          46,
          0
        ],
        "end_point": [
          50,
          1
        ],
        "strings": []
      }
    ],
    "uint32_t": [
      {
        "start_point": [
          56,
          0
        ],
        "end_point": [
          60,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          65,
          0
        ],
        "end_point": [
          69,
          1
        ],
        "strings": []
      }
    ],
    "rotl_sz": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "rotr_sz": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "uint16_t": [
      {
        "start_point": [
          94,
          0
        ],
        "end_point": [
          98,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          105,
          0
        ],
        "end_point": [
          109,
          1
        ],
        "strings": []
      }
    ],
    "uint8_t": [
      {
        "start_point": [
          116,
          0
        ],
        "end_point": [
          120,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          127,
          0
        ],
        "end_point": [
          131,
          1
        ],
        "strings": []
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/btowc.c": {
    "btowc": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/buffer-lcm.c": {
    "buffer_lcm": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/buffer-lcm.h": {},
  "coreutils/coreutils-8.29/lib/c++defs.h": {},
  "coreutils/coreutils-8.29/lib/c-ctype.c": {},
  "coreutils/coreutils-8.29/lib/c-ctype.h": {
    "c_isalnum": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "c_isalpha": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    },
    "c_isascii": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    },
    "c_isblank": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    },
    "c_iscntrl": {
      "start_point": [
        219,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "c_isdigit": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": []
    },
    "c_isgraph": {
      "start_point": [
        243,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": []
    },
    "c_islower": {
      "start_point": [
        258,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": []
    },
    "c_isprint": {
      "start_point": [
        270,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": []
    },
    "c_ispunct": {
      "start_point": [
        286,
        0
      ],
      "end_point": [
        296,
        1
      ],
      "strings": []
    },
    "c_isspace": {
      "start_point": [
        298,
        0
      ],
      "end_point": [
        308,
        1
      ],
      "strings": []
    },
    "c_isupper": {
      "start_point": [
        310,
        0
      ],
      "end_point": [
        320,
        1
      ],
      "strings": []
    },
    "c_isxdigit": {
      "start_point": [
        322,
        0
      ],
      "end_point": [
        333,
        1
      ],
      "strings": []
    },
    "c_tolower": {
      "start_point": [
        335,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": []
    },
    "c_toupper": {
      "start_point": [
        347,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/c-strcase.h": {},
  "coreutils/coreutils-8.29/lib/c-strcasecmp.c": {
    "c_strcasecmp": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/c-strcaseeq.h": {
    "strcaseeq9": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "strcaseeq8": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "strcaseeq7": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "strcaseeq6": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "strcaseeq5": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "strcaseeq4": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "strcaseeq3": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    },
    "strcaseeq2": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "strcaseeq1": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "strcaseeq0": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/c-strncasecmp.c": {
    "c_strncasecmp": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/c-strtod.c": {
    "c_locale": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"C\""
      ]
    },
    "C_STRTOD": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"C\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/c-strtod.h": {},
  "coreutils/coreutils-8.29/lib/c-strtold.c": {},
  "coreutils/coreutils-8.29/lib/calloc.c": {
    "rpl_calloc": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/canon-host.c": {
    "canon_host": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "canon_host_r": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "ch_strerror": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/canon-host.h": {},
  "coreutils/coreutils-8.29/lib/canonicalize.c": {
    "canonicalize_file_name": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "seen_triple": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "canonicalize_filename_mode": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/canonicalize.h": {},
  "coreutils/coreutils-8.29/lib/careadlinkat.c": {
    "careadlinkat": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/careadlinkat.h": {},
  "coreutils/coreutils-8.29/lib/chdir-long.c": {
    "cdb_init": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "cdb_fchdir": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "cdb_free": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "cdb_advance_fd": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "find_non_slash": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"/\""
      ]
    },
    "chdir_long": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": [
        "\"/\"",
        "\"/\""
      ]
    },
    "main": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": [
        "\"reading standard input\"",
        "\"chdir_long failed: %s\"",
        "\"pwd\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/chdir-long.h": {},
  "coreutils/coreutils-8.29/lib/chmodat.c": {},
  "coreutils/coreutils-8.29/lib/chown.c": {
    "chown": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "rpl_chown": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/chownat.c": {},
  "coreutils/coreutils-8.29/lib/cloexec.c": {
    "set_cloexec_flag": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "dup_cloexec": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/cloexec.h": {},
  "coreutils/coreutils-8.29/lib/close-stream.c": {
    "close_stream": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/close-stream.h": {},
  "coreutils/coreutils-8.29/lib/close.c": {
    "close_nothrow": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        39,
        5
      ],
      "strings": []
    },
    "rpl_close": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/closedir.c": {
    "closedir": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/closein.c": {
    "close_stdin_set_file_name": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "close_stdin": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": [
        "\"error closing file\"",
        "\"%s: %s\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/closein.h": {},
  "coreutils/coreutils-8.29/lib/closeout.c": {
    "close_stdout_set_file_name": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "close_stdout_set_ignore_EPIPE": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "close_stdout": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": [
        "\"write error\"",
        "\"%s: %s\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/closeout.h": {},
  "coreutils/coreutils-8.29/lib/copy-acl.c": {
    "copy_acl": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"preserving permissions for %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/creat-safer.c": {
    "creat_safer": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/ctype.in.h": {},
  "coreutils/coreutils-8.29/lib/cycle-check.c": {
    "is_zero_or_power_of_two": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "cycle_check_init": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "cycle_check": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/cycle-check.h": {},
  "coreutils/coreutils-8.29/lib/dev-ino.h": {},
  "coreutils/coreutils-8.29/lib/di-set.c": {
    "di_ent_hash": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "di_ent_compare": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "di_ent_free": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "di_set_alloc": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "di_set_free": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    },
    "di_ino_hash": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    },
    "map_device": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "map_inode_number": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": []
    },
    "di_set_insert": {
      "start_point": [
        219,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": []
    },
    "di_set_lookup": {
      "start_point": [
        241,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/di-set.h": {},
  "coreutils/coreutils-8.29/lib/diacrit.c": {},
  "coreutils/coreutils-8.29/lib/diacrit.h": {},
  "coreutils/coreutils-8.29/lib/dirchownmod.c": {
    "dirchownmod": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/dirchownmod.h": {},
  "coreutils/coreutils-8.29/lib/dirent--.h": {},
  "coreutils/coreutils-8.29/lib/dirent-private.h": {},
  "coreutils/coreutils-8.29/lib/dirent-safer.h": {},
  "coreutils/coreutils-8.29/lib/dirent.in.h": {
    "dirfd": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        171,
        58
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/dirfd.c": {
    "_gl_register_dirp_fd": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "_gl_unregister_dirp_fd": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "dirfd": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/dirname-lgpl.c": {
    "dir_len": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "mdir_name": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/dirname.c": {
    "dir_name": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/dirname.h": {},
  "coreutils/coreutils-8.29/lib/dosname.h": {},
  "coreutils/coreutils-8.29/lib/dtoastr.c": {},
  "coreutils/coreutils-8.29/lib/dtotimespec.c": {
    "dtotimespec": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/dup-safer-flag.c": {
    "dup_safer_flag": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/dup-safer.c": {
    "dup_safer": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/dup.c": {
    "dup_nothrow": [
      {
        "start_point": [
          31,
          0
        ],
        "end_point": [
          39,
          5
        ],
        "strings": []
      },
      {
        "start_point": [
          55,
          0
        ],
        "end_point": [
          73,
          1
        ],
        "strings": []
      }
    ],
    "rpl_dup": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/dup2.c": {
    "dup2_nothrow": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        57,
        5
      ],
      "strings": []
    },
    "ms_windows_dup2": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "klibc_dup2dirfd": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": [
        "\"NUL\""
      ]
    },
    "klibc_dup2": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": []
    },
    "rpl_dup2": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    },
    "dupfd": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    },
    "dup2": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/errno.in.h": {},
  "coreutils/coreutils-8.29/lib/error.c": {
    "is_open": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "flush_stdout": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "print_errno_message": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": [
        "\"Unknown system error\"",
        "\": %s\"",
        "\": %s\""
      ]
    },
    "error_tail": {
      "start_point": [
        205,
        42
      ],
      "end_point": [
        286,
        1
      ],
      "strings": [
        "L\"out of memory\\n\"",
        "L\"???\"",
        "\"\\n\""
      ]
    },
    "error": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        331,
        1
      ],
      "strings": [
        "\"%s: \"",
        "\"%s: \""
      ]
    },
    "error_at_line": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        402,
        1
      ],
      "strings": [
        "\"%s:\"",
        "\"%s:\"",
        "\"%s:%u: \"",
        "\" \"",
        "\"%s:%u: \"",
        "\" \""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/error.h": {},
  "coreutils/coreutils-8.29/lib/euidaccess.c": {
    "euidaccess": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": [
        "\"%d\\n\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/exclude.c": {
    "exclude_add_pattern_buffer": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "fnmatch_pattern_has_wildcards": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    },
    "unescape_pattern": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "new_exclude": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "string_hasher": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": []
    },
    "string_hasher_ci": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": []
    },
    "string_compare": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": []
    },
    "string_compare_ci": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    },
    "string_free": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": []
    },
    "new_exclude_segment": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": []
    },
    "free_exclude_segment": {
      "start_point": [
        280,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": []
    },
    "free_exclude": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        326,
        1
      ],
      "strings": []
    },
    "fnmatch_no_wildcards": {
      "start_point": [
        331,
        0
      ],
      "end_point": [
        374,
        1
      ],
      "strings": []
    },
    "exclude_fnmatch": {
      "start_point": [
        376,
        0
      ],
      "end_point": [
        392,
        1
      ],
      "strings": []
    },
    "exclude_patopts": {
      "start_point": [
        394,
        0
      ],
      "end_point": [
        402,
        1
      ],
      "strings": []
    },
    "file_pattern_matches": {
      "start_point": [
        406,
        0
      ],
      "end_point": [
        419,
        1
      ],
      "strings": []
    },
    "file_name_matches": {
      "start_point": [
        424,
        0
      ],
      "end_point": [
        464,
        1
      ],
      "strings": []
    },
    "excluded_file_name": {
      "start_point": [
        468,
        0
      ],
      "end_point": [
        512,
        1
      ],
      "strings": []
    },
    "add_exclude": {
      "start_point": [
        516,
        0
      ],
      "end_point": [
        602,
        1
      ],
      "strings": [
        "\"(/.*)?\""
      ]
    },
    "add_exclude_fp": {
      "start_point": [
        609,
        0
      ],
      "end_point": [
        665,
        1
      ],
      "strings": []
    },
    "call_addfn": {
      "start_point": [
        667,
        0
      ],
      "end_point": [
        672,
        1
      ],
      "strings": []
    },
    "add_exclude_file": {
      "start_point": [
        674,
        0
      ],
      "end_point": [
        694,
        1
      ],
      "strings": [
        "\"r\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/exclude.h": {},
  "coreutils/coreutils-8.29/lib/exitfail.c": {},
  "coreutils/coreutils-8.29/lib/exitfail.h": {},
  "coreutils/coreutils-8.29/lib/explicit_bzero.c": {
    "explicit_bzero": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": [
        "\" ::: \""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/faccessat.c": {
    "orig_faccessat": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "rpl_faccessat": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fadvise.c": {
    "fdadvise": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "fadvise": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fadvise.h": {},
  "coreutils/coreutils-8.29/lib/fchdir.c": {
    "ensure_dirs_slot": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "get_name": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "_gl_unregister_fd": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "_gl_register_fd": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    },
    "_gl_register_dup": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "_gl_directory_name": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": []
    },
    "fchdir": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fchmodat.c": {
    "lchmod": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fchown-stub.c": {
    "fchown": {
      "start_point": [
        10,
        0
      ],
      "end_point": [
        15,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fchownat.c": {
    "rpl_fchownat": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fclose.c": {
    "fclose_nothrow": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        40,
        5
      ],
      "strings": []
    },
    "rpl_fclose": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fcntl--.h": {},
  "coreutils/coreutils-8.29/lib/fcntl-safer.h": {},
  "coreutils/coreutils-8.29/lib/fcntl.c": {
    "dupfd": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    },
    "klibc_fcntl": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": []
    },
    "rpl_fcntl": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        417,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fcntl.in.h": {},
  "coreutils/coreutils-8.29/lib/fd-hook.c": {
    "execute_close_hooks": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "execute_all_close_hooks": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "execute_ioctl_hooks": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "execute_all_ioctl_hooks": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "register_fd_hook": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "unregister_fd_hook": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fd-hook.h": {},
  "coreutils/coreutils-8.29/lib/fd-reopen.c": {
    "fd_reopen": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fd-reopen.h": {},
  "coreutils/coreutils-8.29/lib/fd-safer-flag.c": {
    "fd_safer_flag": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fd-safer.c": {
    "fd_safer": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fdatasync.c": {
    "fdatasync": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fdopen.c": {
    "fdopen_nothrow": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        38,
        5
      ],
      "strings": []
    },
    "rpl_fdopen": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fdopendir.c": {
    "fdopendir": [
      {
        "start_point": [
          67,
          0
        ],
        "end_point": [
          97,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          99,
          0
        ],
        "end_point": [
          120,
          1
        ],
        "strings": []
      }
    ],
    "fdopendir_with_dup": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "fd_clone_opendir": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": [
        "\".\"",
        "\".\""
      ]
    },
    "rpl_fdopendir": {
      "start_point": [
        234,
        0
      ],
      "end_point": [
        246,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fdutimensat.c": {
    "fdutimensat": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fflush.c": {
    "clear_ungetc_buffer_preserving_position": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "clear_ungetc_buffer": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "disable_seek_optimization": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "restore_seek_optimization": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "update_fpos_cache": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "rpl_fflush": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/file-has-acl.c": {
    "file_has_acl": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        502,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/file-set.c": {
    "record_file": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "seen_file": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/file-set.h": {},
  "coreutils/coreutils-8.29/lib/file-type.c": {
    "file_type": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"regular empty file\"",
        "\"regular file\"",
        "\"directory\"",
        "\"symbolic link\"",
        "\"message queue\"",
        "\"semaphore\"",
        "\"shared memory object\"",
        "\"typed memory object\"",
        "\"block special file\"",
        "\"character special file\"",
        "\"contiguous data\"",
        "\"fifo\"",
        "\"door\"",
        "\"multiplexed block special file\"",
        "\"multiplexed character special file\"",
        "\"multiplexed file\"",
        "\"named file\"",
        "\"network special file\"",
        "\"migrated file with data\"",
        "\"migrated file without data\"",
        "\"port\"",
        "\"socket\"",
        "\"whiteout\"",
        "\"weird file\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/file-type.h": {},
  "coreutils/coreutils-8.29/lib/fileblocks.c": {
    "st_blocks": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/filemode.c": {
    "ftypelet": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "strmode": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "filemodestring": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/filemode.h": {},
  "coreutils/coreutils-8.29/lib/filename.h": {},
  "coreutils/coreutils-8.29/lib/filenamecat-lgpl.c": {
    "longest_relative_suffix": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "mfile_name_concat": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/filenamecat.c": {
    "file_name_concat": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/filenamecat.h": {},
  "coreutils/coreutils-8.29/lib/filevercmp.c": {
    "match_suffix": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "order": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_PURE": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "filevercmp": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\".\"",
        "\".\"",
        "\"..\"",
        "\"..\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/filevercmp.h": {},
  "coreutils/coreutils-8.29/lib/flexmember.h": {},
  "coreutils/coreutils-8.29/lib/float+.h": {},
  "coreutils/coreutils-8.29/lib/float.c": {},
  "coreutils/coreutils-8.29/lib/float.in.h": {},
  "coreutils/coreutils-8.29/lib/fnmatch.c": {
    "is_char_class": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": []
    },
    "fnmatch": {
      "start_point": [
        275,
        0
      ],
      "end_point": [
        343,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fnmatch.in.h": {},
  "coreutils/coreutils-8.29/lib/fnmatch_loop.c": {
    "internal_function": [
      {
        "start_point": [
          23,
          0
        ],
        "end_point": [
          981,
          1
        ],
        "strings": [
          "\"POSIXLY_CORRECT\"",
          "\"alnum\"",
          "\"alpha\"",
          "\"blank\"",
          "\"cntrl\"",
          "\"digit\"",
          "\"graph\"",
          "\"lower\"",
          "\"print\"",
          "\"punct\"",
          "\"space\"",
          "\"upper\"",
          "\"xdigit\""
        ]
      },
      {
        "start_point": [
          984,
          0
        ],
        "end_point": [
          1020,
          1
        ],
        "strings": [
          "\"POSIXLY_CORRECT\""
        ]
      },
      {
        "start_point": [
          1023,
          0
        ],
        "end_point": [
          1201,
          1
        ],
        "strings": [
          "\"POSIXLY_CORRECT\"",
          "\"Invalid extended matching operator\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/fopen-safer.c": {
    "fopen_safer": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fopen.c": {
    "orig_fopen": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "rpl_fopen": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"/dev/null\"",
        "\"NUL\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/fpending.c": {
    "__fpending": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fpending.h": {},
  "coreutils/coreutils-8.29/lib/fprintftime.c": {},
  "coreutils/coreutils-8.29/lib/fprintftime.h": {},
  "coreutils/coreutils-8.29/lib/fpucw.h": {},
  "coreutils/coreutils-8.29/lib/fpurge.c": {
    "fpurge": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/freadahead.c": {
    "freadahead": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/freadahead.h": {},
  "coreutils/coreutils-8.29/lib/freading.c": {
    "freading": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/freading.h": {},
  "coreutils/coreutils-8.29/lib/freadptr.c": {
    "freadptr": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/freadptr.h": {},
  "coreutils/coreutils-8.29/lib/freadseek.c": {
    "freadptrinc": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "freadseek": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/freadseek.h": {},
  "coreutils/coreutils-8.29/lib/freopen-safer.c": {
    "protect_fd": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"/dev/null\""
      ]
    },
    "freopen_safer": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/freopen.c": {
    "orig_freopen": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "rpl_freopen": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"NUL\"",
        "\"/dev/null\"",
        "\"/dev/null\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/frexp.c": {
    "FUNC": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/frexpl.c": {
    "frexpl": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fseek.c": {
    "fseek": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fseeko.c": {},
  "coreutils/coreutils-8.29/lib/fseterr.c": {
    "fseterr": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fseterr.h": {},
  "coreutils/coreutils-8.29/lib/fstat.c": {
    "orig_fstat": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "rpl_fstat": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fstatat.c": {
    "orig_fstatat": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    },
    "normal_fstatat": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "rpl_fstatat": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "stat_func": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fsusage.c": {
    "statvfs_works": [
      {
        "start_point": [
          85,
          0
        ],
        "end_point": [
          85,
          45
        ],
        "strings": []
      },
      {
        "start_point": [
          92,
          0
        ],
        "end_point": [
          101,
          1
        ],
        "strings": [
          "\"2.6.36\""
        ]
      }
    ],
    "get_fs_usage": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "statfs": {
      "start_point": [
        264,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fsusage.h": {},
  "coreutils/coreutils-8.29/lib/fsync.c": {
    "fsync": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/ftell.c": {
    "ftell": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/ftello.c": {},
  "coreutils/coreutils-8.29/lib/ftoastr.c": {
    "ftoastr_snprintf": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "FTOASTR": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"%-+ 0*.*Lg\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/ftoastr.h": {},
  "coreutils/coreutils-8.29/lib/ftruncate.c": {
    "SetFileSize": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "ftruncate": [
      {
        "start_point": [
          121,
          0
        ],
        "end_point": [
          155,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          185,
          0
        ],
        "end_point": [
          189,
          1
        ],
        "strings": []
      }
    ],
    "chsize_nothrow": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        171,
        5
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fts-cycle.c": {
    "AD_compare": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "AD_hash": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "setup_dir": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "enter_dir": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "leave_dir": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "free_dir": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/fts.c": {
    "fd_ring_clear": {
      "start_point": [
        273,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": []
    },
    "fts_set_stat_required": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": []
    },
    "internal_function": [
      {
        "start_point": [
          298,
          0
        ],
        "end_point": [
          319,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          367,
          0
        ],
        "end_point": [
          379,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          572,
          0
        ],
        "end_point": [
          594,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1314,
          0
        ],
        "end_point": [
          1658,
          1
        ],
        "strings": [
          "\"4\"",
          "\"..\""
        ]
      },
      {
        "start_point": [
          1869,
          0
        ],
        "end_point": [
          1917,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1919,
          0
        ],
        "end_point": [
          1948,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1950,
          0
        ],
        "end_point": [
          1963,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1972,
          0
        ],
        "end_point": [
          1997,
          1
        ],
        "strings": []
      }
    ],
    "cwd_advance_fd": {
      "start_point": [
        326,
        0
      ],
      "end_point": [
        349,
        1
      ],
      "strings": [
        "\"post-push\""
      ]
    },
    "restore_initial_cwd": {
      "start_point": [
        355,
        0
      ],
      "end_point": [
        361,
        1
      ],
      "strings": []
    },
    "fts_open": {
      "start_point": [
        381,
        0
      ],
      "end_point": [
        570,
        1
      ],
      "strings": [
        "\".\"",
        "\"\"",
        "\"\"",
        "\".\""
      ]
    },
    "fts_close": {
      "start_point": [
        596,
        0
      ],
      "end_point": [
        658,
        1
      ],
      "strings": []
    },
    "dev_type_hash": {
      "start_point": [
        711,
        0
      ],
      "end_point": [
        717,
        1
      ],
      "strings": []
    },
    "dev_type_compare": {
      "start_point": [
        719,
        0
      ],
      "end_point": [
        725,
        1
      ],
      "strings": []
    },
    "filesystem_type": {
      "start_point": [
        730,
        0
      ],
      "end_point": [
        777,
        1
      ],
      "strings": []
    },
    "dirent_inode_sort_may_be_useful": [
      {
        "start_point": [
          783,
          0
        ],
        "end_point": [
          803,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          846,
          0
        ],
        "end_point": [
          850,
          1
        ],
        "strings": []
      }
    ],
    "leaf_optimization": [
      {
        "start_point": [
          811,
          0
        ],
        "end_point": [
          843,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          851,
          0
        ],
        "end_point": [
          855,
          1
        ],
        "strings": []
      }
    ],
    "fts_read": {
      "start_point": [
        866,
        0
      ],
      "end_point": [
        1135,
        1
      ],
      "strings": [
        "\"fts_read: p=%s\\n\"",
        "\"\"",
        "\".\"",
        "\"1\"",
        "\"2\"",
        "\".\"",
        "\"  entering: %s\\n\"",
        "\"..\"",
        "\"3\""
      ]
    },
    "fts_set": {
      "start_point": [
        1144,
        0
      ],
      "end_point": [
        1154,
        1
      ],
      "strings": []
    },
    "fts_children": {
      "start_point": [
        1156,
        0
      ],
      "end_point": [
        1232,
        1
      ],
      "strings": [
        "\".\""
      ]
    },
    "fts_compare_ino": {
      "start_point": [
        1239,
        0
      ],
      "end_point": [
        1244,
        1
      ],
      "strings": []
    },
    "set_stat_type": {
      "start_point": [
        1248,
        0
      ],
      "end_point": [
        1279,
        1
      ],
      "strings": []
    },
    "find_matching_ancestor": {
      "start_point": [
        1665,
        0
      ],
      "end_point": [
        1686,
        1
      ],
      "strings": [
        "\"ERROR: tree dir, %s, not active\\n\"",
        "\"active dirs:\\n\"",
        "\"  %s(%\"",
        "\"/%\"",
        "\") to %s(%\"",
        "\"/%\"",
        "\")...\\n\""
      ]
    },
    "fts_cross_check": {
      "start_point": [
        1688,
        0
      ],
      "end_point": [
        1720,
        1
      ],
      "strings": [
        "\"fts-cross-check cur=%s\\n\"",
        "\"ERROR: active dir, %s, not in tree\\n\""
      ]
    },
    "same_fd": {
      "start_point": [
        1722,
        0
      ],
      "end_point": [
        1729,
        1
      ],
      "strings": []
    },
    "fd_ring_print": {
      "start_point": [
        1731,
        0
      ],
      "end_point": [
        1757,
        1
      ],
      "strings": [
        "\"=== %s ========== %s\\n\"",
        "\"%d: %d:\\n\"",
        "\"%d: %d: %s\\n\""
      ]
    },
    "fd_ring_check": {
      "start_point": [
        1761,
        0
      ],
      "end_point": [
        1802,
        1
      ],
      "strings": [
        "\"===== check ===== cwd: %s\"",
        "\"..\"",
        "\"ring  : %s\"",
        "\"parent: %s\""
      ]
    },
    "fts_stat": {
      "start_point": [
        1805,
        0
      ],
      "end_point": [
        1854,
        1
      ],
      "strings": []
    },
    "fts_compar": {
      "start_point": [
        1856,
        0
      ],
      "end_point": [
        1867,
        1
      ],
      "strings": []
    },
    "fts_padjust": {
      "start_point": [
        2003,
        0
      ],
      "end_point": [
        2026,
        1
      ],
      "strings": []
    },
    "fts_maxarglen": {
      "start_point": [
        2029,
        18
      ],
      "end_point": [
        2038,
        1
      ],
      "strings": []
    },
    "fts_safe_changedir": {
      "start_point": [
        2049,
        0
      ],
      "end_point": [
        2133,
        1
      ],
      "strings": [
        "\"..\"",
        "\"pre-pop\"",
        "\"..\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/fts_.h": {},
  "coreutils/coreutils-8.29/lib/full-read.c": {},
  "coreutils/coreutils-8.29/lib/full-read.h": {},
  "coreutils/coreutils-8.29/lib/full-write.c": {
    "full_rw": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/full-write.h": {},
  "coreutils/coreutils-8.29/lib/futimens.c": {
    "futimens": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/gai_strerror.c": {
    "rpl_gai_strerror": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "gai_strerror": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": [
        "\"Unknown error\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/get-permissions.c": {
    "get_permissions": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/getaddrinfo.c": {
    "use_win32_p": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"ws2_32.dll\"",
        "\"getaddrinfo\"",
        "\"freeaddrinfo\"",
        "\"getnameinfo\""
      ]
    },
    "validate_family": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "getaddrinfo": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        331,
        1
      ],
      "strings": [
        "\"::\"",
        "\"0.0.0.0\"",
        "\"0.0.0.0\"",
        "\"udp\"",
        "\"tcp\""
      ]
    },
    "freeaddrinfo": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        355,
        1
      ],
      "strings": []
    },
    "getnameinfo": {
      "start_point": [
        357,
        0
      ],
      "end_point": [
        442,
        1
      ],
      "strings": [
        "\"%u\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/getcwd-lgpl.c": {
    "rpl_getcwd": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/getcwd.c": {
    "__getcwd": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        441,
        1
      ],
      "strings": [
        "\"..\"",
        "\".\"",
        "\"/\"",
        "\"..\"",
        "\"..\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/getdelim.c": {
    "alloc_failed": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "getdelim": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/getdtablesize.c": {
    "_setmaxstdio_nothrow": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        39,
        5
      ],
      "strings": []
    },
    "getdtablesize": [
      {
        "start_point": [
          56,
          0
        ],
        "end_point": [
          87,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          108,
          0
        ],
        "end_point": [
          121,
          1
        ],
        "strings": []
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/getfilecon.c": {
    "map_to_failure": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": [
        "\"unlabeled\""
      ]
    },
    "rpl_getfilecon": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "rpl_lgetfilecon": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "rpl_fgetfilecon": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/getgroups.c": {
    "getgroups": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "rpl_getgroups": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/gethostname.c": {
    "gethostname": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": [
        "\"\""
      ]
    },
    "rpl_gethostname": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/gethrxtime.c": {
    "gethrxtime": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/gethrxtime.h": {
    "gethrxtime": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        43,
        68
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/getline.c": {
    "getline": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        26,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/getloadavg.c": {
    "getloadavg": {
      "start_point": [
        477,
        0
      ],
      "end_point": [
        1023,
        1
      ],
      "strings": [
        "\"unix\"",
        "\"system_misc\"",
        "\"avenrun_1min\"",
        "\"avenrun_5min\"",
        "\"avenrun_15min\"",
        "\".00 \"",
        "\"r\"",
        "\"%lu %lu %lu %lu\\n\"",
        "\"$$VMS_LOAD_AVERAGE\"",
        "\"LAV0:\"",
        "\"\"",
        "\"/dev/kmem\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/getlogin.c": {
    "getlogin": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/getndelim2.c": {
    "getndelim2": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/getndelim2.h": {},
  "coreutils/coreutils-8.29/lib/getopt-cdefs.in.h": {},
  "coreutils/coreutils-8.29/lib/getopt-core.h": {},
  "coreutils/coreutils-8.29/lib/getopt-ext.h": {
    "struct": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/getopt-pfx-core.h": {},
  "coreutils/coreutils-8.29/lib/getopt-pfx-ext.h": {},
  "coreutils/coreutils-8.29/lib/getopt.c": {
    "exchange": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "process_long_option": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        375,
        1
      ],
      "strings": [
        "\"%s: option '%s%s' is ambiguous\\n\"",
        "\"%s: option '%s%s' is ambiguous; possibilities:\"",
        "\" '%s%s'\"",
        "\"\\n\"",
        "\"%s: unrecognized option '%s%s'\\n\"",
        "\"%s: option '%s%s' doesn't allow an argument\\n\"",
        "\"%s: option '%s%s' requires an argument\\n\""
      ]
    },
    "_getopt_initialize": {
      "start_point": [
        379,
        0
      ],
      "end_point": [
        411,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\""
      ]
    },
    "_getopt_internal_r": {
      "start_point": [
        469,
        0
      ],
      "end_point": [
        699,
        1
      ],
      "strings": [
        "\"--\"",
        "\"--\"",
        "\"-\"",
        "\"%s: invalid option -- '%c'\\n\"",
        "\"%s: option requires an argument -- '%c'\\n\"",
        "\"-W \"",
        "\"%s: option requires an argument -- '%c'\\n\""
      ]
    },
    "_getopt_internal": {
      "start_point": [
        701,
        0
      ],
      "end_point": [
        720,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        747,
        0
      ],
      "end_point": [
        808,
        1
      ],
      "strings": [
        "\"abc:d:0123456789\"",
        "\"digits occur in two different argv-elements.\\n\"",
        "\"option %c\\n\"",
        "\"option a\\n\"",
        "\"option b\\n\"",
        "\"option c with value '%s'\\n\"",
        "\"?? getopt returned character code 0%o ??\\n\"",
        "\"non-option ARGV-elements: \"",
        "\"%s \"",
        "\"\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/getopt.in.h": {},
  "coreutils/coreutils-8.29/lib/getopt1.c": {
    "getopt_long": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    },
    "_getopt_long_r": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "getopt_long_only": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "_getopt_long_only_r": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": [
        "\"add\"",
        "\"append\"",
        "\"delete\"",
        "\"verbose\"",
        "\"create\"",
        "\"file\"",
        "\"abc:d:0123456789\"",
        "\"option %s\"",
        "\" with arg %s\"",
        "\"\\n\"",
        "\"digits occur in two different argv-elements.\\n\"",
        "\"option %c\\n\"",
        "\"option a\\n\"",
        "\"option b\\n\"",
        "\"option c with value '%s'\\n\"",
        "\"option d with value '%s'\\n\"",
        "\"?? getopt returned character code 0%o ??\\n\"",
        "\"non-option ARGV-elements: \"",
        "\"%s \"",
        "\"\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/getopt_int.h": {},
  "coreutils/coreutils-8.29/lib/getpagesize.c": {
    "getpagesize": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/getpass.c": {
    "call_fclose": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "getpass": [
      {
        "start_point": [
          82,
          0
        ],
        "end_point": [
          171,
          1
        ],
        "strings": [
          "\"/dev/tty\"",
          "\"w+\""
        ]
      },
      {
        "start_point": [
          189,
          0
        ],
        "end_point": [
          229,
          1
        ],
        "strings": [
          "\"\\r\\n\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/getpass.h": {},
  "coreutils/coreutils-8.29/lib/getprogname.c": {
    "getprogname": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": [
        "\"?\"",
        "\"?\"",
        "\"?\"",
        "\"?\"",
        "\"?\"",
        "\"?\"",
        "\"/proc/pinfo/%d\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/getprogname.h": {},
  "coreutils/coreutils-8.29/lib/gettext.h": {
    "pgettext_aux": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "npgettext_aux": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": []
    },
    "dcpgettext_expr": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    },
    "dcnpgettext_expr": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        291,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/gettime.c": {
    "gettime": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/gettimeofday.c": {
    "initialize": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": [
        "\"kernel32.dll\"",
        "\"GetSystemTimePreciseAsFileTime\""
      ]
    },
    "gettimeofday": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/getugroups.c": {
    "getugroups": [
      {
        "start_point": [
          37,
          0
        ],
        "end_point": [
          45,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          59,
          0
        ],
        "end_point": [
          125,
          1
        ],
        "strings": []
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/getugroups.h": {},
  "coreutils/coreutils-8.29/lib/getusershell.c": {
    "getusershell": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": [
        "\"r\""
      ]
    },
    "setusershell": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    },
    "endusershell": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "readname": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/gl_openssl.h": {
    "GL_CRYPTO_FN": [
      {
        "start_point": [
          76,
          0
        ],
        "end_point": [
          78,
          48
        ],
        "strings": []
      },
      {
        "start_point": [
          82,
          0
        ],
        "end_point": [
          84,
          53
        ],
        "strings": []
      },
      {
        "start_point": [
          86,
          0
        ],
        "end_point": [
          88,
          50
        ],
        "strings": []
      },
      {
        "start_point": [
          91,
          0
        ],
        "end_point": [
          93,
          77
        ],
        "strings": []
      },
      {
        "start_point": [
          95,
          0
        ],
        "end_point": [
          97,
          83
        ],
        "strings": []
      },
      {
        "start_point": [
          99,
          0
        ],
        "end_point": [
          106,
          1
        ],
        "strings": []
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/group-member.c": {
    "free_group_info": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "get_group_info": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "group_member": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"%d: %s\\n\"",
        "\"yes\"",
        "\"no\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/hard-locale.c": {
    "hard_locale": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": [
        "\"C\"",
        "\"POSIX\"",
        "\"C\"",
        "\"POSIX\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/hard-locale.h": {},
  "coreutils/coreutils-8.29/lib/hash-pjw.c": {
    "hash_pjw": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/hash-pjw.h": {},
  "coreutils/coreutils-8.29/lib/hash-triple.c": {
    "triple_hash": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "triple_hash_no_name": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "triple_compare": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "triple_compare_ino_str": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "triple_free": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/hash-triple.h": {},
  "coreutils/coreutils-8.29/lib/hash.c": {
    "hash_get_n_buckets": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "hash_get_n_buckets_used": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "hash_get_n_entries": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    },
    "hash_get_max_bucket_length": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    },
    "hash_table_ok": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "hash_print_statistics": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": [
        "\"# entries:         %lu\\n\"",
        "\"# buckets:         %lu\\n\"",
        "\"# buckets used:    %lu (%.2f%%)\\n\"",
        "\"max bucket length: %lu\\n\""
      ]
    },
    "safe_hasher": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        254,
        1
      ],
      "strings": []
    },
    "hash_lookup": {
      "start_point": [
        259,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "hash_get_first": {
      "start_point": [
        286,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": []
    },
    "hash_get_next": {
      "start_point": [
        305,
        0
      ],
      "end_point": [
        328,
        1
      ],
      "strings": []
    },
    "hash_get_entries": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": []
    },
    "hash_do_for_each": {
      "start_point": [
        366,
        0
      ],
      "end_point": [
        388,
        1
      ],
      "strings": []
    },
    "hash_string": [
      {
        "start_point": [
          403,
          0
        ],
        "end_point": [
          417,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          426,
          0
        ],
        "end_point": [
          435,
          1
        ],
        "strings": []
      }
    ],
    "_GL_ATTRIBUTE_CONST": [
      {
        "start_point": [
          442,
          0
        ],
        "end_point": [
          456,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          461,
          0
        ],
        "end_point": [
          475,
          1
        ],
        "strings": []
      }
    ],
    "hash_reset_tuning": {
      "start_point": [
        477,
        0
      ],
      "end_point": [
        481,
        1
      ],
      "strings": []
    },
    "raw_hasher": {
      "start_point": [
        484,
        0
      ],
      "end_point": [
        494,
        1
      ],
      "strings": []
    },
    "raw_comparator": {
      "start_point": [
        497,
        0
      ],
      "end_point": [
        501,
        1
      ],
      "strings": []
    },
    "check_tuning": {
      "start_point": [
        510,
        0
      ],
      "end_point": [
        536,
        1
      ],
      "strings": []
    },
    "compute_bucket_size": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        556,
        1
      ],
      "strings": []
    },
    "hash_initialize": {
      "start_point": [
        592,
        0
      ],
      "end_point": [
        645,
        1
      ],
      "strings": []
    },
    "hash_clear": {
      "start_point": [
        651,
        0
      ],
      "end_point": [
        687,
        1
      ],
      "strings": []
    },
    "hash_free": {
      "start_point": [
        694,
        0
      ],
      "end_point": [
        742,
        1
      ],
      "strings": []
    },
    "allocate_entry": {
      "start_point": [
        749,
        0
      ],
      "end_point": [
        769,
        1
      ],
      "strings": []
    },
    "free_entry": {
      "start_point": [
        774,
        0
      ],
      "end_point": [
        780,
        1
      ],
      "strings": []
    },
    "hash_find_entry": {
      "start_point": [
        788,
        0
      ],
      "end_point": [
        850,
        1
      ],
      "strings": []
    },
    "transfer_entries": {
      "start_point": [
        858,
        0
      ],
      "end_point": [
        931,
        1
      ],
      "strings": []
    },
    "hash_rehash": {
      "start_point": [
        941,
        0
      ],
      "end_point": [
        1018,
        1
      ],
      "strings": []
    },
    "hash_insert_if_absent": {
      "start_point": [
        1036,
        0
      ],
      "end_point": [
        1116,
        1
      ],
      "strings": []
    },
    "hash_insert": {
      "start_point": [
        1124,
        0
      ],
      "end_point": [
        1132,
        1
      ],
      "strings": []
    },
    "hash_delete": {
      "start_point": [
        1138,
        0
      ],
      "end_point": [
        1196,
        1
      ],
      "strings": []
    },
    "hash_print": {
      "start_point": [
        1202,
        0
      ],
      "end_point": [
        1222,
        1
      ],
      "strings": [
        "\"%lu:\\n\"",
        "\"  %s\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/hash.h": {},
  "coreutils/coreutils-8.29/lib/heap.c": {
    "heap_alloc": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "heap_default_compare": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "heap_free": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "heap_insert": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "heap_remove_top": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "heapify_down": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "heapify_up": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/heap.h": {},
  "coreutils/coreutils-8.29/lib/human.c": {
    "adjust_value": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "group_number": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "human_readable": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        388,
        1
      ],
      "strings": [
        "\".\"",
        "\"\"",
        "\"\"",
        "\"%.0Lf\"",
        "\"%.1Lf\"",
        "\"%.0Lf\""
      ]
    },
    "default_block_size": {
      "start_point": [
        404,
        0
      ],
      "end_point": [
        408,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\""
      ]
    },
    "humblock": {
      "start_point": [
        410,
        0
      ],
      "end_point": [
        458,
        1
      ],
      "strings": [
        "\"BLOCK_SIZE\"",
        "\"BLOCKSIZE\"",
        "\"eEgGkKmMpPtTyYzZ0\""
      ]
    },
    "human_options": {
      "start_point": [
        460,
        0
      ],
      "end_point": [
        470,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/human.h": {},
  "coreutils/coreutils-8.29/lib/i-ring.c": {
    "i_ring_init": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "i_ring_empty": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "i_ring_push": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "i_ring_pop": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/i-ring.h": {},
  "coreutils/coreutils-8.29/lib/iconv.c": {
    "utf16be_mbtowc": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "utf16be_wctomb": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "utf16le_mbtowc": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "utf16le_wctomb": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "utf32be_mbtowc": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "utf32be_wctomb": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "utf32le_mbtowc": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    },
    "utf32le_wctomb": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        271,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/iconv.in.h": {},
  "coreutils/coreutils-8.29/lib/iconv_close.c": {},
  "coreutils/coreutils-8.29/lib/iconv_open-aix.h": {
    "mapping_hash": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "mapping_lookup": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/iconv_open-hpux.h": {
    "mapping_hash": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "mapping_lookup": {
      "start_point": [
        278,
        0
      ],
      "end_point": [
        298,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/iconv_open-irix.h": {
    "mapping_hash": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "mapping_lookup": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/iconv_open-osf.h": {
    "mapping_hash": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "mapping_lookup": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/iconv_open-solaris.h": {
    "mapping_hash": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "mapping_lookup": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/iconv_open.c": {},
  "coreutils/coreutils-8.29/lib/idcache.c": {
    "getuser": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\"\""
      ]
    },
    "getuidbyname": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": [
        "\"USER\""
      ]
    },
    "getgroup": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": [
        "\"\""
      ]
    },
    "getgidbyname": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": [
        "\"GROUP\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/idcache.h": {},
  "coreutils/coreutils-8.29/lib/ignore-value.h": {},
  "coreutils/coreutils-8.29/lib/imaxtostr.c": {},
  "coreutils/coreutils-8.29/lib/inet_ntop.c": {
    "rpl_inet_ntop": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "inet_ntop": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "inet_ntop4": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": [
        "\"255.255.255.255\"",
        "\"%u.%u.%u.%u\""
      ]
    },
    "inet_ntop6": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": [
        "\"ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255\"",
        "\"%x\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/ino-map.c": {
    "ino_hash": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "ino_compare": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "ino_map_alloc": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "ino_map_free": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "ino_map_insert": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/ino-map.h": {},
  "coreutils/coreutils-8.29/lib/intprops.h": {},
  "coreutils/coreutils-8.29/lib/inttostr.c": {},
  "coreutils/coreutils-8.29/lib/inttostr.h": {},
  "coreutils/coreutils-8.29/lib/inttypes.in.h": {},
  "coreutils/coreutils-8.29/lib/isapipe.c": {
    "isapipe": [
      {
        "start_point": [
          38,
          0
        ],
        "end_point": [
          50,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          71,
          0
        ],
        "end_point": [
          120,
          1
        ],
        "strings": []
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/isapipe.h": {},
  "coreutils/coreutils-8.29/lib/isatty.c": {
    "IsConsoleHandle": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "_isatty_nothrow": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        55,
        5
      ],
      "strings": []
    },
    "isatty": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/isblank.c": {
    "isblank": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/isnan.c": {
    "FUNC": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/isnand-nolibm.h": {},
  "coreutils/coreutils-8.29/lib/isnand.c": {},
  "coreutils/coreutils-8.29/lib/isnanf-nolibm.h": {},
  "coreutils/coreutils-8.29/lib/isnanf.c": {},
  "coreutils/coreutils-8.29/lib/isnanl-nolibm.h": {},
  "coreutils/coreutils-8.29/lib/isnanl.c": {},
  "coreutils/coreutils-8.29/lib/iswblank.c": {
    "iswblank": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/itold.c": {
    "_Qp_itoq": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/langinfo.in.h": {},
  "coreutils/coreutils-8.29/lib/lchown.c": {
    "lchown": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "rpl_lchown": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/ldtoastr.c": {},
  "coreutils/coreutils-8.29/lib/limits.in.h": {},
  "coreutils/coreutils-8.29/lib/linebuffer.c": {
    "initbuffer": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "readlinebuffer": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "readlinebuffer_delim": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "freebuffer": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/linebuffer.h": {},
  "coreutils/coreutils-8.29/lib/link.c": {
    "initialize": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"kernel32.dll\"",
        "\"CreateHardLinkA\""
      ]
    },
    "link": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    },
    "rpl_link": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/linkat.c": {
    "link_immediate": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "link_follow": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "solaris_optimized_link_immediate": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "solaris_optimized_link_follow": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    },
    "linkat": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    },
    "linkat_follow": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        288,
        1
      ],
      "strings": []
    },
    "rpl_linkat": {
      "start_point": [
        294,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/localcharset.c": {
    "get_charset_aliases": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        384,
        1
      ],
      "strings": [
        "\"charset.alias\"",
        "\"CHARSETALIASDIR\"",
        "\"\"",
        "\"\"",
        "\"r\"",
        "\"\"",
        "\"%50s %50s\"",
        "\"\"",
        "\"ISO8859-1\"",
        "\"\\0\"",
        "\"ISO-8859-1\"",
        "\"\\0\"",
        "\"ISO8859-2\"",
        "\"\\0\"",
        "\"ISO-8859-2\"",
        "\"\\0\"",
        "\"ISO8859-4\"",
        "\"\\0\"",
        "\"ISO-8859-4\"",
        "\"\\0\"",
        "\"ISO8859-5\"",
        "\"\\0\"",
        "\"ISO-8859-5\"",
        "\"\\0\"",
        "\"ISO8859-7\"",
        "\"\\0\"",
        "\"ISO-8859-7\"",
        "\"\\0\"",
        "\"ISO8859-9\"",
        "\"\\0\"",
        "\"ISO-8859-9\"",
        "\"\\0\"",
        "\"ISO8859-13\"",
        "\"\\0\"",
        "\"ISO-8859-13\"",
        "\"\\0\"",
        "\"ISO8859-15\"",
        "\"\\0\"",
        "\"ISO-8859-15\"",
        "\"\\0\"",
        "\"KOI8-R\"",
        "\"\\0\"",
        "\"KOI8-R\"",
        "\"\\0\"",
        "\"KOI8-U\"",
        "\"\\0\"",
        "\"KOI8-U\"",
        "\"\\0\"",
        "\"CP866\"",
        "\"\\0\"",
        "\"CP866\"",
        "\"\\0\"",
        "\"CP949\"",
        "\"\\0\"",
        "\"CP949\"",
        "\"\\0\"",
        "\"CP1131\"",
        "\"\\0\"",
        "\"CP1131\"",
        "\"\\0\"",
        "\"CP1251\"",
        "\"\\0\"",
        "\"CP1251\"",
        "\"\\0\"",
        "\"eucCN\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"eucJP\"",
        "\"\\0\"",
        "\"EUC-JP\"",
        "\"\\0\"",
        "\"eucKR\"",
        "\"\\0\"",
        "\"EUC-KR\"",
        "\"\\0\"",
        "\"Big5\"",
        "\"\\0\"",
        "\"BIG5\"",
        "\"\\0\"",
        "\"Big5HKSCS\"",
        "\"\\0\"",
        "\"BIG5-HKSCS\"",
        "\"\\0\"",
        "\"GBK\"",
        "\"\\0\"",
        "\"GBK\"",
        "\"\\0\"",
        "\"GB18030\"",
        "\"\\0\"",
        "\"GB18030\"",
        "\"\\0\"",
        "\"SJIS\"",
        "\"\\0\"",
        "\"SHIFT_JIS\"",
        "\"\\0\"",
        "\"ARMSCII-8\"",
        "\"\\0\"",
        "\"ARMSCII-8\"",
        "\"\\0\"",
        "\"PT154\"",
        "\"\\0\"",
        "\"PT154\"",
        "\"\\0\"",
        "\"*\"",
        "\"\\0\"",
        "\"UTF-8\"",
        "\"\\0\"",
        "\"ISO8859-1\"",
        "\"\\0\"",
        "\"ISO-8859-1\"",
        "\"\\0\"",
        "\"ISO8859-2\"",
        "\"\\0\"",
        "\"ISO-8859-2\"",
        "\"\\0\"",
        "\"ISO8859-5\"",
        "\"\\0\"",
        "\"ISO-8859-5\"",
        "\"\\0\"",
        "\"ISO8859-7\"",
        "\"\\0\"",
        "\"ISO-8859-7\"",
        "\"\\0\"",
        "\"ISO8859-8\"",
        "\"\\0\"",
        "\"ISO-8859-8\"",
        "\"\\0\"",
        "\"ISO8859-9\"",
        "\"\\0\"",
        "\"ISO-8859-9\"",
        "\"\\0\"",
        "\"eucJP\"",
        "\"\\0\"",
        "\"EUC-JP\"",
        "\"\\0\"",
        "\"SJIS\"",
        "\"\\0\"",
        "\"SHIFT_JIS\"",
        "\"\\0\"",
        "\"DECKANJI\"",
        "\"\\0\"",
        "\"DEC-KANJI\"",
        "\"\\0\"",
        "\"SDECKANJI\"",
        "\"\\0\"",
        "\"EUC-JP\"",
        "\"\\0\"",
        "\"eucTW\"",
        "\"\\0\"",
        "\"EUC-TW\"",
        "\"\\0\"",
        "\"DECHANYU\"",
        "\"\\0\"",
        "\"DEC-HANYU\"",
        "\"\\0\"",
        "\"DECHANZI\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"DECKOREAN\"",
        "\"\\0\"",
        "\"EUC-KR\"",
        "\"\\0\"",
        "\"CP936\"",
        "\"\\0\"",
        "\"GBK\"",
        "\"\\0\"",
        "\"CP1361\"",
        "\"\\0\"",
        "\"JOHAB\"",
        "\"\\0\"",
        "\"CP20127\"",
        "\"\\0\"",
        "\"ASCII\"",
        "\"\\0\"",
        "\"CP20866\"",
        "\"\\0\"",
        "\"KOI8-R\"",
        "\"\\0\"",
        "\"CP20936\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"CP21866\"",
        "\"\\0\"",
        "\"KOI8-RU\"",
        "\"\\0\"",
        "\"CP28591\"",
        "\"\\0\"",
        "\"ISO-8859-1\"",
        "\"\\0\"",
        "\"CP28592\"",
        "\"\\0\"",
        "\"ISO-8859-2\"",
        "\"\\0\"",
        "\"CP28593\"",
        "\"\\0\"",
        "\"ISO-8859-3\"",
        "\"\\0\"",
        "\"CP28594\"",
        "\"\\0\"",
        "\"ISO-8859-4\"",
        "\"\\0\"",
        "\"CP28595\"",
        "\"\\0\"",
        "\"ISO-8859-5\"",
        "\"\\0\"",
        "\"CP28596\"",
        "\"\\0\"",
        "\"ISO-8859-6\"",
        "\"\\0\"",
        "\"CP28597\"",
        "\"\\0\"",
        "\"ISO-8859-7\"",
        "\"\\0\"",
        "\"CP28598\"",
        "\"\\0\"",
        "\"ISO-8859-8\"",
        "\"\\0\"",
        "\"CP28599\"",
        "\"\\0\"",
        "\"ISO-8859-9\"",
        "\"\\0\"",
        "\"CP28605\"",
        "\"\\0\"",
        "\"ISO-8859-15\"",
        "\"\\0\"",
        "\"CP38598\"",
        "\"\\0\"",
        "\"ISO-8859-8\"",
        "\"\\0\"",
        "\"CP51932\"",
        "\"\\0\"",
        "\"EUC-JP\"",
        "\"\\0\"",
        "\"CP51936\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"CP51949\"",
        "\"\\0\"",
        "\"EUC-KR\"",
        "\"\\0\"",
        "\"CP51950\"",
        "\"\\0\"",
        "\"EUC-TW\"",
        "\"\\0\"",
        "\"CP54936\"",
        "\"\\0\"",
        "\"GB18030\"",
        "\"\\0\"",
        "\"CP65001\"",
        "\"\\0\"",
        "\"UTF-8\"",
        "\"\\0\"",
        "\"CP813\"",
        "\"\\0\"",
        "\"ISO-8859-7\"",
        "\"\\0\"",
        "\"CP878\"",
        "\"\\0\"",
        "\"KOI8-R\"",
        "\"\\0\"",
        "\"CP819\"",
        "\"\\0\"",
        "\"ISO-8859-1\"",
        "\"\\0\"",
        "\"CP912\"",
        "\"\\0\"",
        "\"ISO-8859-2\"",
        "\"\\0\"",
        "\"CP913\"",
        "\"\\0\"",
        "\"ISO-8859-3\"",
        "\"\\0\"",
        "\"CP914\"",
        "\"\\0\"",
        "\"ISO-8859-4\"",
        "\"\\0\"",
        "\"CP915\"",
        "\"\\0\"",
        "\"ISO-8859-5\"",
        "\"\\0\"",
        "\"CP916\"",
        "\"\\0\"",
        "\"ISO-8859-8\"",
        "\"\\0\"",
        "\"CP920\"",
        "\"\\0\"",
        "\"ISO-8859-9\"",
        "\"\\0\"",
        "\"CP921\"",
        "\"\\0\"",
        "\"ISO-8859-13\"",
        "\"\\0\"",
        "\"CP923\"",
        "\"\\0\"",
        "\"ISO-8859-15\"",
        "\"\\0\"",
        "\"CP954\"",
        "\"\\0\"",
        "\"EUC-JP\"",
        "\"\\0\"",
        "\"CP964\"",
        "\"\\0\"",
        "\"EUC-TW\"",
        "\"\\0\"",
        "\"CP970\"",
        "\"\\0\"",
        "\"EUC-KR\"",
        "\"\\0\"",
        "\"CP1089\"",
        "\"\\0\"",
        "\"ISO-8859-6\"",
        "\"\\0\"",
        "\"CP1208\"",
        "\"\\0\"",
        "\"UTF-8\"",
        "\"\\0\"",
        "\"CP1381\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"CP1386\"",
        "\"\\0\"",
        "\"GBK\"",
        "\"\\0\"",
        "\"CP3372\"",
        "\"\\0\"",
        "\"EUC-JP\"",
        "\"\\0\""
      ]
    },
    "locale_charset": {
      "start_point": [
        395,
        0
      ],
      "end_point": [
        616,
        1
      ],
      "strings": [
        "\"US-ASCII\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LANG\"",
        "\"CP%u\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LANG\"",
        "\"CP%s\"",
        "\"CP%u\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LANG\"",
        "\"C\"",
        "\"POSIX\"",
        "\"\"",
        "\"\"",
        "\"CP%u\"",
        "\"\"",
        "\"ASCII\"",
        "\"UTF-8\"",
        "\"ASCII\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/localcharset.h": {},
  "coreutils/coreutils-8.29/lib/locale.in.h": {},
  "coreutils/coreutils-8.29/lib/localeconv.c": {
    "localeconv": [
      {
        "start_point": [
          26,
          0
        ],
        "end_point": [
          60,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          68,
          0
        ],
        "end_point": [
          100,
          1
        ],
        "strings": [
          "\".\"",
          "\"\"",
          "\"\"",
          "\"\"",
          "\"\"",
          "\"\"",
          "\"\"",
          "\"\"",
          "\"\"",
          "\"\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/localtime-buffer.c": {
    "rpl_localtime": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "rpl_gmtime": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/localtime-buffer.h": {},
  "coreutils/coreutils-8.29/lib/long-options.c": {
    "parse_long_options": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": [
        "\"+\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/long-options.h": {},
  "coreutils/coreutils-8.29/lib/lseek.c": {
    "rpl_lseek": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/lstat.c": {
    "orig_lstat": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "rpl_lstat": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/malloc.c": {
    "rpl_malloc": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/malloca.c": {
    "mmalloca": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "NO_SANITIZE_MEMORY": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/malloca.h": {},
  "coreutils/coreutils-8.29/lib/math.c": {},
  "coreutils/coreutils-8.29/lib/math.in.h": {
    "float": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mbchar.c": {},
  "coreutils/coreutils-8.29/lib/mbchar.h": {
    "mb_width_aux": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    },
    "mb_copy": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": []
    },
    "is_basic": [
      {
        "start_point": [
          314,
          0
        ],
        "end_point": [
          319,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          323,
          0
        ],
        "end_point": [
          353,
          1
        ],
        "strings": []
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/mbiter.c": {},
  "coreutils/coreutils-8.29/lib/mbiter.h": {
    "mbiter_multi_next": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": []
    },
    "mbiter_multi_reloc": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": []
    },
    "mbiter_multi_copy": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mbrlen.c": {
    "mbrlen": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mbrtowc.c": {
    "mbrtowc": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": [
        "\"\"",
        "\"UTF-8\"",
        "\"EUC-JP\"",
        "\"EUC-KR\"",
        "\"GB2312\"",
        "\"BIG5\"",
        "\"EUC-TW\"",
        "\"GB18030\"",
        "\"SJIS\""
      ]
    },
    "rpl_mbrtowc": {
      "start_point": [
        339,
        0
      ],
      "end_point": [
        411,
        1
      ],
      "strings": [
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/mbsalign.c": {
    "wc_ensure_printable": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "wc_truncate": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "mbs_align_pad": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "mbsalign": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "ambsalign": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mbsalign.h": {},
  "coreutils/coreutils-8.29/lib/mbscasecmp.c": {
    "mbscasecmp": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mbschr.c": {
    "mbschr": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mbsinit.c": {
    "mbsinit": [
      {
        "start_point": [
          43,
          0
        ],
        "end_point": [
          49,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          53,
          0
        ],
        "end_point": [
          70,
          1
        ],
        "strings": []
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/mbslen.c": {
    "mbslen": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mbsrtowcs-impl.h": {
    "mbsrtowcs": {
      "start_point": [
        17,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mbsrtowcs-state.c": {},
  "coreutils/coreutils-8.29/lib/mbsrtowcs.c": {},
  "coreutils/coreutils-8.29/lib/mbsstr.c": {
    "knuth_morris_pratt_multibyte": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "mbsstr": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        383,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mbswidth.c": {
    "mbswidth": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "mbsnwidth": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mbswidth.h": {},
  "coreutils/coreutils-8.29/lib/mbtowc-impl.h": {
    "mbtowc": {
      "start_point": [
        21,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mbtowc.c": {},
  "coreutils/coreutils-8.29/lib/mbuiter.c": {},
  "coreutils/coreutils-8.29/lib/mbuiter.h": {
    "mbuiter_multi_next": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    },
    "mbuiter_multi_reloc": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "mbuiter_multi_copy": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/md5.c": {
    "md5_init_ctx": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "set_uint32": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "md5_read_ctx": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "md5_finish_ctx": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "md5_stream": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": []
    },
    "md5_buffer": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    },
    "md5_process_bytes": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": []
    },
    "md5_process_block": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        469,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/md5.h": {},
  "coreutils/coreutils-8.29/lib/memcasecmp.c": {
    "memcasecmp": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/memcasecmp.h": {},
  "coreutils/coreutils-8.29/lib/memchr.c": {
    "__memchr": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/memchr2.c": {
    "memchr2": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/memchr2.h": {},
  "coreutils/coreutils-8.29/lib/memcmp2.c": {
    "memcmp2": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/memcmp2.h": {},
  "coreutils/coreutils-8.29/lib/memcoll.c": {
    "strcoll_loop": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "memcoll": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "memcoll0": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/memcoll.h": {},
  "coreutils/coreutils-8.29/lib/mempcpy.c": {
    "mempcpy": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/memrchr.c": {
    "__memrchr": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mgetgroups.c": {
    "realloc_groupbuf": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "mgetgroups": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mgetgroups.h": {},
  "coreutils/coreutils-8.29/lib/minmax.h": {},
  "coreutils/coreutils-8.29/lib/mkancesdirs.c": {
    "mkancesdirs": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mkancesdirs.h": {},
  "coreutils/coreutils-8.29/lib/mkdir-p.c": {
    "make_dir_parents": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\".\"",
        "\"cannot change permissions of %s\"",
        "\"cannot change owner and permissions of %s\"",
        "\"cannot create directory %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/mkdir-p.h": {},
  "coreutils/coreutils-8.29/lib/mkdir.c": {
    "rpl_mkdir": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mkfifo.c": {
    "mkfifo": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "rpl_mkfifo": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mknod.c": {
    "mknod": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "rpl_mknod": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mkostemp.c": {
    "mkostemp": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mkstemp-safer.c": {
    "mkstemp_safer": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "mkostemp_safer": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "mkostemps_safer": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "mkstemps_safer": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mkstemp.c": {
    "mkstemp": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mktime-internal.h": {},
  "coreutils/coreutils-8.29/lib/mktime.c": {
    "shr": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "leapyear": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "isdst_differ": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "ydhms_diff": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    },
    "long_int_avg": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": []
    },
    "guess_time_tm": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    },
    "convert_time": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        258,
        1
      ],
      "strings": []
    },
    "ranged_convert": {
      "start_point": [
        264,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": []
    },
    "__mktime_internal": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        478,
        1
      ],
      "strings": []
    },
    "mktime": {
      "start_point": [
        489,
        0
      ],
      "end_point": [
        535,
        1
      ],
      "strings": [
        "\"TZ\"",
        "\"TZ=\""
      ]
    },
    "not_equal_tm": {
      "start_point": [
        550,
        0
      ],
      "end_point": [
        561,
        1
      ],
      "strings": []
    },
    "print_tm": {
      "start_point": [
        563,
        0
      ],
      "end_point": [
        573,
        1
      ],
      "strings": [
        "\"%04d-%02d-%02d %02d:%02d:%02d yday %03d wday %d isdst %d\"",
        "\"0\""
      ]
    },
    "check_result": {
      "start_point": [
        575,
        0
      ],
      "end_point": [
        589,
        1
      ],
      "strings": [
        "\"mktime (\"",
        "\")\\nyields (\"",
        "\") == %ld, should be %ld\\n\""
      ]
    },
    "main": {
      "start_point": [
        591,
        0
      ],
      "end_point": [
        681,
        1
      ],
      "strings": [
        "\"localtime (0) fails\\n\"",
        "\"%d-%d-%d%c\"",
        "\"%d:%d:%d%c\"",
        "\"mktime returns %ld == \"",
        "\"\\n\"",
        "\"-\"",
        "\"localtime_r (%ld) yields 0\\n\"",
        "\"localtime_r (%ld) yields 0\\n\"",
        "\"Usage:\\\n\\t%s YYYY-MM-DD HH:MM:SS [ISDST] # Test given time.\\n\\\n\\t%s FROM BY TO # Test values FROM, FROM+BY, ..., TO.\\n\\\n\\t%s FROM BY TO - # Do not test those values (for benchmark).\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/modechange.c": {
    "octal_to_mode": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "make_node_op_equals": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "mode_compile": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": []
    },
    "mode_create_from_ref": {
      "start_point": [
        314,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    },
    "mode_adjust": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        413,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/modechange.h": {},
  "coreutils/coreutils-8.29/lib/mountlist.c": {
    "me_remote": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": [
        "\"%c:\\\\\""
      ]
    },
    "fstype_to_string": [
      {
        "start_point": [
          239,
          0
        ],
        "end_point": [
          331,
          1
        ],
        "strings": [
          "\"pc\"",
          "\"mfs\"",
          "\"lo\"",
          "\"tfs\"",
          "\"tmp\"",
          "\"ufs\"",
          "\"nfs\"",
          "\"msdos\"",
          "\"lfs\"",
          "\"lofs\"",
          "\"fdesc\"",
          "\"portal\"",
          "\"null\"",
          "\"umap\"",
          "\"kernfs\"",
          "\"procfs\"",
          "\"afs\"",
          "\"cd9660\"",
          "\"union\"",
          "\"devfs\"",
          "\"ext2fs\"",
          "\"?\""
        ]
      },
      {
        "start_point": [
          347,
          0
        ],
        "end_point": [
          357,
          1
        ],
        "strings": [
          "\"none\""
        ]
      }
    ],
    "fsp_to_string": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    },
    "dev_from_mount_options": {
      "start_point": [
        365,
        0
      ],
      "end_point": [
        393,
        1
      ],
      "strings": [
        "\",dev=\""
      ]
    },
    "unescape_tab": {
      "start_point": [
        402,
        0
      ],
      "end_point": [
        422,
        1
      ],
      "strings": []
    },
    "read_file_system_list": {
      "start_point": [
        430,
        0
      ],
      "end_point": [
        1126,
        1
      ],
      "strings": [
        "\"/proc/self/mountinfo\"",
        "\"r\"",
        "\"%*u \"",
        "\"%*u \"",
        "\"%u:%u \"",
        "\"%n%*s%n \"",
        "\"%n%*s%n\"",
        "\"%c\"",
        "\" - \"",
        "\" - \"",
        "\"%n%*s%n \"",
        "\"%n%*s%n \"",
        "\"%c\"",
        "\"r\"",
        "\"bind\"",
        "\"/\"",
        "\"..\"",
        "\".\"",
        "\"/\"",
        "\"/etc/mnttab\"",
        "\"r\"",
        "\"/dev/\"",
        "\"\"",
        "\"r\"",
        "\":\"",
        "\"ignore\"",
        "\"ignore\"",
        "\"ignore\"",
        "\"/dev/fs\"",
        "\"/dev/fs/\""
      ]
    },
    "free_mount_entry": {
      "start_point": [
        1130,
        0
      ],
      "end_point": [
        1138,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mountlist.h": {},
  "coreutils/coreutils-8.29/lib/mpsort.c": {
    "mpsort_into_tmp": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "mpsort_with_tmp": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "mpsort": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/mpsort.h": {},
  "coreutils/coreutils-8.29/lib/msvc-inval.c": {
    "gl_msvc_invalid_parameter_handler": [
      {
        "start_point": [
          30,
          0
        ],
        "end_point": [
          37,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          47,
          0
        ],
        "end_point": [
          55,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          96,
          0
        ],
        "end_point": [
          110,
          1
        ],
        "strings": []
      }
    ],
    "gl_msvc_inval_current": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "gl_msvc_inval_ensure_handler": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/msvc-inval.h": {},
  "coreutils/coreutils-8.29/lib/msvc-nothrow.c": {
    "_gl_nothrow_get_osfhandle": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        41,
        5
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/msvc-nothrow.h": {},
  "coreutils/coreutils-8.29/lib/nanosleep.c": {
    "nanosleep": [
      {
        "start_point": [
          100,
          0
        ],
        "end_point": [
          180,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          226,
          0
        ],
        "end_point": [
          274,
          1
        ],
        "strings": []
      }
    ],
    "sighandler": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": []
    },
    "my_usleep": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/netdb.in.h": {},
  "coreutils/coreutils-8.29/lib/netinet_in.in.h": {},
  "coreutils/coreutils-8.29/lib/nl_langinfo.c": {
    "ctype_codeset": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": [
        "\"%u\"",
        "\"CP\""
      ]
    },
    "rpl_nl_langinfo": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": [
        "\"%I:%M:%S %p\"",
        "\"\"",
        "\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"",
        "\"^[yY]\"",
        "\"^[nN]\""
      ]
    },
    "nl_langinfo": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": [
        "\"UTF-8\"",
        "\"ISO-8859-1\"",
        "\"%a %b %e %H:%M:%S %Y\"",
        "\"%m/%d/%y\"",
        "\"%H:%M:%S\"",
        "\"%I:%M:%S %p\"",
        "\"%p\"",
        "\"AM\"",
        "\"%p\"",
        "\"PM\"",
        "\"Wednesday\"",
        "\"Sunday\"",
        "\"Monday\"",
        "\"Tuesday\"",
        "\"Wednesday\"",
        "\"Thursday\"",
        "\"Friday\"",
        "\"Saturday\"",
        "\"%A\"",
        "\"Sun\"",
        "\"Sun\"",
        "\"Mon\"",
        "\"Tue\"",
        "\"Wed\"",
        "\"Thu\"",
        "\"Fri\"",
        "\"Sat\"",
        "\"%a\"",
        "\"September\"",
        "\"January\"",
        "\"February\"",
        "\"March\"",
        "\"April\"",
        "\"May\"",
        "\"June\"",
        "\"July\"",
        "\"September\"",
        "\"October\"",
        "\"November\"",
        "\"December\"",
        "\"%B\"",
        "\"Jan\"",
        "\"Jan\"",
        "\"Feb\"",
        "\"Mar\"",
        "\"Apr\"",
        "\"May\"",
        "\"Jun\"",
        "\"Jul\"",
        "\"Sep\"",
        "\"Oct\"",
        "\"Nov\"",
        "\"Dec\"",
        "\"%b\"",
        "\"\"",
        "\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"",
        "\"^[yY]\"",
        "\"^[nN]\"",
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/nproc.c": {
    "num_processors_via_affinity_mask": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    },
    "num_processors_ignoring_omp": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": []
    },
    "parse_omp_threads": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        367,
        1
      ],
      "strings": []
    },
    "num_processors": {
      "start_point": [
        369,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": [
        "\"OMP_NUM_THREADS\"",
        "\"OMP_THREAD_LIMIT\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/nproc.h": {},
  "coreutils/coreutils-8.29/lib/nstrftime.c": {
    "fwrite_lowcase": {
      "start_point": [
        294,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": []
    },
    "fwrite_uppcase": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        312,
        1
      ],
      "strings": []
    },
    "memcpy_lowcase": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        323,
        1
      ],
      "strings": []
    },
    "memcpy_uppcase": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "tm_diff": {
      "start_point": [
        343,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": []
    },
    "iso_week_days": {
      "start_point": [
        378,
        0
      ],
      "end_point": [
        386,
        1
      ],
      "strings": []
    },
    "my_strftime": {
      "start_point": [
        428,
        0
      ],
      "end_point": [
        436,
        1
      ],
      "strings": []
    },
    "__strftime_internal": {
      "start_point": [
        444,
        0
      ],
      "end_point": [
        1505,
        1
      ],
      "strings": [
        "\"GMT\"",
        "\"\"",
        "\"%m/%d/%y\"",
        "\"%Y-%m-%d\"",
        "\"%H:%M\"",
        "\"%I:%M:%S %p\"",
        "\"%H:%M:%S\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/obstack.c": {
    "call_chunkfun": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "call_freefun": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "_obstack_begin_worker": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "_obstack_begin": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    },
    "_obstack_begin_1": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "_obstack_newchunk": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "_obstack_allocated_p": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    },
    "_obstack_free": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        288,
        1
      ],
      "strings": []
    },
    "_obstack_memory_used": {
      "start_point": [
        290,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": []
    },
    "print_and_abort": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": [
        "\"%s\\n\"",
        "\"memory exhausted\"",
        "\"%s\\n\"",
        "\"memory exhausted\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/obstack.h": {},
  "coreutils/coreutils-8.29/lib/offtostr.c": {},
  "coreutils/coreutils-8.29/lib/open-safer.c": {
    "open_safer": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/open.c": {
    "orig_open": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "open": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": [
        "\"/dev/null\"",
        "\"NUL\"",
        "\"/dev/null\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/openat-die.c": {
    "openat_save_fail": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": [
        "\"unable to record current working directory\""
      ]
    },
    "openat_restore_fail": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"failed to return to initial working directory\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/openat-priv.h": {},
  "coreutils/coreutils-8.29/lib/openat-proc.c": {
    "openat_proc_name": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"%d\"",
        "\"/proc/self/fd\"",
        "\"../fd\"",
        "\"../fd\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/openat-safer.c": {
    "openat_safer": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/openat.c": {
    "orig_openat": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "rpl_openat": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "openat": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": []
    },
    "openat_permissive": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": []
    },
    "openat_needs_fchdir": {
      "start_point": [
        291,
        0
      ],
      "end_point": [
        311,
        1
      ],
      "strings": [
        "\"/\"",
        "\".\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/openat.h": {
    "chownat": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "lchownat": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "chmodat": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "lchmodat": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "statat": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "lstatat": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/opendir-safer.c": {
    "opendir_safer": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/opendir.c": {
    "opendir": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/parse-datetime.c": {
    "time_overflow": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "to_uchar": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        198,
        54
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_FORMAT": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": [
        "\"date: \""
      ]
    },
    "digits_to_date_time": {
      "start_point": [
        326,
        0
      ],
      "end_point": [
        363,
        1
      ],
      "strings": []
    },
    "apply_relative_time": {
      "start_point": [
        367,
        0
      ],
      "end_point": [
        388,
        1
      ],
      "strings": []
    },
    "set_hhmmss": {
      "start_point": [
        391,
        0
      ],
      "end_point": [
        399,
        1
      ],
      "strings": []
    },
    "str_days": {
      "start_point": [
        403,
        0
      ],
      "end_point": [
        460,
        1
      ],
      "strings": [
        "\"last\"",
        "\"this\"",
        "\"next/first\"",
        "\"(SECOND)\"",
        "\"third\"",
        "\"fourth\"",
        "\"fifth\"",
        "\"sixth\"",
        "\"seventh\"",
        "\"eight\"",
        "\"ninth\"",
        "\"tenth\"",
        "\"eleventh\"",
        "\"twelfth\"",
        "\"Sun\"",
        "\"Mon\"",
        "\"Tue\"",
        "\"Wed\"",
        "\"Thu\"",
        "\"Fri\"",
        "\"Sat\"",
        "\"%s\"",
        "\"%\"",
        "\" %s\""
      ]
    },
    "time_zone_str": {
      "start_point": [
        466,
        0
      ],
      "end_point": [
        490,
        1
      ],
      "strings": [
        "\"%c%02d\""
      ]
    },
    "debug_print_current_time": {
      "start_point": [
        495,
        0
      ],
      "end_point": [
        582,
        1
      ],
      "strings": [
        "\"parsed %s part: \"",
        "\"(Y-M-D) %04\"",
        "\"-%02\"",
        "\"-%02\"",
        "\"year: %04\"",
        "\" %02\"",
        "\":%02\"",
        "\":%02\"",
        "\".%09d\"",
        "\"pm\"",
        "\"%s (day ordinal=%\"",
        "\" number=%d)\"",
        "\" isdst=%d%s\"",
        "\" DST\"",
        "\"\"",
        "\" UTC%s\"",
        "\"number of seconds: %\""
      ]
    },
    "print_rel_part": {
      "start_point": [
        586,
        0
      ],
      "end_point": [
        593,
        1
      ],
      "strings": [
        "\" %+\"",
        "\" %s\""
      ]
    },
    "debug_print_relative_time": {
      "start_point": [
        595,
        0
      ],
      "end_point": [
        624,
        1
      ],
      "strings": [
        "\"parsed %s part: \"",
        "\"today/this/now\\n\"",
        "\"year(s)\"",
        "\"month(s)\"",
        "\"day(s)\"",
        "\"hour(s)\"",
        "\"minutes\"",
        "\"seconds\"",
        "\"nanoseconds\""
      ]
    },
    "yy_symbol_value_print": {
      "start_point": [
        1292,
        0
      ],
      "end_point": [
        1305,
        1
      ],
      "strings": []
    },
    "yy_symbol_print": {
      "start_point": [
        1312,
        0
      ],
      "end_point": [
        1320,
        1
      ],
      "strings": [
        "\"%s %s (\"",
        "\"token\"",
        "\"nterm\"",
        "\")\""
      ]
    },
    "yy_stack_print": {
      "start_point": [
        1327,
        0
      ],
      "end_point": [
        1337,
        1
      ],
      "strings": [
        "\"Stack now\"",
        "\" %d\"",
        "\"\\n\""
      ]
    },
    "yy_reduce_print": {
      "start_point": [
        1350,
        0
      ],
      "end_point": [
        1368,
        1
      ],
      "strings": [
        "\"Reducing stack by rule %d (line %lu):\\n\"",
        "\"   $%d = \"",
        "\"\\n\""
      ]
    },
    "yystrlen": {
      "start_point": [
        1411,
        0
      ],
      "end_point": [
        1418,
        1
      ],
      "strings": []
    },
    "yystpcpy": {
      "start_point": [
        1428,
        0
      ],
      "end_point": [
        1438,
        1
      ],
      "strings": []
    },
    "yytnamerr": {
      "start_point": [
        1450,
        0
      ],
      "end_point": [
        1487,
        1
      ],
      "strings": []
    },
    "yysyntax_error": {
      "start_point": [
        1498,
        0
      ],
      "end_point": [
        1623,
        1
      ],
      "strings": [
        "\"syntax error\"",
        "\"syntax error, unexpected %s\"",
        "\"syntax error, unexpected %s, expecting %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s or %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s or %s or %s\""
      ]
    },
    "yydestruct": {
      "start_point": [
        1630,
        0
      ],
      "end_point": [
        1642,
        1
      ],
      "strings": [
        "\"Deleting\""
      ]
    },
    "yyparse": {
      "start_point": [
        1651,
        0
      ],
      "end_point": [
        2725,
        1
      ],
      "strings": [
        "\"Starting parse\\n\"",
        "\"memory exhausted\"",
        "\"Stack size increased to %lu\\n\"",
        "\"Entering state %d\\n\"",
        "\"Reading a token: \"",
        "\"Now at end of input.\\n\"",
        "\"Next token is\"",
        "\"Shifting\"",
        "\"number of seconds\"",
        "\"datetime\"",
        "\"time\"",
        "\"local_zone\"",
        "\"zone\"",
        "\"date\"",
        "\"day\"",
        "\"relative\"",
        "\"number\"",
        "\"hybrid\"",
        "\"relative\"",
        "\"relative\"",
        "\"warning: value %\"",
        "\" has %\"",
        "\" digits. \"",
        "\"Assuming YYYY/MM/DD\\n\"",
        "\"warning: value %\"",
        "\" has less than 4 digits. \"",
        "\"Assuming MM/DD/YY[YY]\\n\"",
        "\"-> $$ =\"",
        "\"syntax error\"",
        "\"syntax error\"",
        "\"Error: discarding\"",
        "\"Error: popping\"",
        "\"memory exhausted\"",
        "\"Cleanup: discarding lookahead\"",
        "\"Cleanup: popping\""
      ]
    },
    "time_zone_hhmm": {
      "start_point": [
        2925,
        0
      ],
      "end_point": [
        2950,
        1
      ],
      "strings": []
    },
    "to_hour": {
      "start_point": [
        2952,
        0
      ],
      "end_point": [
        2965,
        1
      ],
      "strings": []
    },
    "tm_year_str": {
      "start_point": [
        2973,
        0
      ],
      "end_point": [
        2981,
        1
      ],
      "strings": [
        "\"-%02d%02d\""
      ]
    },
    "to_tm_year": {
      "start_point": [
        2986,
        0
      ],
      "end_point": [
        3012,
        1
      ],
      "strings": [
        "\"warning: adjusting year value %\"",
        "\" to %\"",
        "\"\\n\"",
        "\"error: out-of-range year %\"",
        "\"\\n\""
      ]
    },
    "lookup_zone": {
      "start_point": [
        3014,
        0
      ],
      "end_point": [
        3034,
        1
      ],
      "strings": []
    },
    "tm_diff": {
      "start_point": [
        3041,
        0
      ],
      "end_point": [
        3060,
        1
      ],
      "strings": []
    },
    "lookup_word": {
      "start_point": [
        3063,
        0
      ],
      "end_point": [
        3129,
        1
      ],
      "strings": []
    },
    "yylex": {
      "start_point": [
        3131,
        0
      ],
      "end_point": [
        3268,
        1
      ],
      "strings": [
        "\"error: unknown word '%s'\\n\""
      ]
    },
    "yyerror": {
      "start_point": [
        3271,
        0
      ],
      "end_point": [
        3276,
        1
      ],
      "strings": []
    },
    "mktime_ok": {
      "start_point": [
        3283,
        0
      ],
      "end_point": [
        3303,
        1
      ],
      "strings": []
    },
    "debug_strfdatetime": {
      "start_point": [
        3307,
        0
      ],
      "end_point": [
        3350,
        1
      ],
      "strings": [
        "\"(Y-M-D) %Y-%m-%d %H:%M:%S\"",
        "\" TZ=%s\""
      ]
    },
    "debug_strfdate": {
      "start_point": [
        3352,
        0
      ],
      "end_point": [
        3360,
        1
      ],
      "strings": [
        "\"(Y-M-D) %s-%02d-%02d\""
      ]
    },
    "debug_strftime": {
      "start_point": [
        3362,
        0
      ],
      "end_point": [
        3367,
        1
      ],
      "strings": [
        "\"%02d:%02d:%02d\""
      ]
    },
    "debug_mktime_not_ok": {
      "start_point": [
        3381,
        0
      ],
      "end_point": [
        3435,
        1
      ],
      "strings": [
        "\"error: invalid date/time value:\\n\"",
        "\"    user provided time: '%s'\\n\"",
        "\"       normalized time: '%s'\\n\"",
        "\"                                 %4s %2s %2s %2s %2s %2s\"",
        "\"\"",
        "\"----\"",
        "\"\"",
        "\"--\"",
        "\"\"",
        "\"--\"",
        "\"\"",
        "\"--\"",
        "\"\"",
        "\"--\"",
        "\"\"",
        "\"--\"",
        "\"%s\\n\"",
        "\"     possible reasons:\\n\"",
        "\"       non-existing due to daylight-saving time;\\n\"",
        "\"       invalid day/month combination;\\n\"",
        "\"       numeric values overflow;\\n\"",
        "\"       %s\\n\"",
        "\"incorrect timezone\"",
        "\"missing timezone\""
      ]
    },
    "parse_datetime": {
      "start_point": [
        3438,
        0
      ],
      "end_point": [
        3449,
        1
      ],
      "strings": [
        "\"TZ\""
      ]
    },
    "parse_datetime2": {
      "start_point": [
        3456,
        0
      ],
      "end_point": [
        4111,
        1
      ],
      "strings": [
        "\"TZ=\\\"\"",
        "\"0\"",
        "\"error: initial year out of range\\n\"",
        "\"error: parsing failed\\n\"",
        "\"error: parsing failed, stopped at '%s'\\n\"",
        "\"input timezone: \"",
        "\"'@timespec' - always UTC\"",
        "\"parsed date/time string\"",
        "\"TZ=\\\"%s\\\" in date string\"",
        "\"UTC0\"",
        "\"TZ=\\\"UTC0\\\" environment value or -u\"",
        "\"TZ=\\\"%s\\\" environment value\"",
        "\"system default\"",
        "\", dst\"",
        "\" (%s)\"",
        "\"error: seen multiple time parts\\n\"",
        "\"error: seen multiple date parts\\n\"",
        "\"error: seen multiple days parts\\n\"",
        "\"error: seen multiple daylight-saving parts\\n\"",
        "\"error: seen multiple time-zone parts\\n\"",
        "\"error: year, month, or day overflow\\n\"",
        "\"am\"",
        "\"pm\"",
        "\"\"",
        "\"error: invalid hour %\"",
        "\"%s\\n\"",
        "\"using specified time as starting value: '%s'\\n\"",
        "\"using current time as starting value: '%s'\\n\"",
        "\"warning: using midnight as starting time: 00:00:00\\n\"",
        "\"XXX\"",
        "\"error: tzalloc (\\\"%s\\\") failed\\n\"",
        "\"error: day '%s' \"",
        "\"(day ordinal=%\"",
        "\" number=%d) \"",
        "\"resulted in an invalid date: '%s'\\n\"",
        "\"new start date: '%s' is '%s'\\n\"",
        "\"using current date as starting value: '%s'\\n\"",
        "\"warning: day (%s) ignored when explicit dates \"",
        "\"are given\\n\"",
        "\"starting date/time: '%s'\\n\"",
        "\"warning: when adding relative months/years, \"",
        "\"it is recommended to specify the 15th of the \"",
        "\"months\\n\"",
        "\"warning: when adding relative days, \"",
        "\"it is recommended to specify noon\\n\"",
        "\"error: %s:%d\\n\"",
        "\"error: adding relative date resulted \"",
        "\"in an invalid date: '%s'\\n\"",
        "\"after date adjustment \"",
        "\"(%+\"",
        "\" years, %+\"",
        "\" months, \"",
        "\"%+\"",
        "\" days),\\n\"",
        "\"    new date/time = '%s'\\n\"",
        "\"warning: daylight saving time changed after \"",
        "\"date adjustment\\n\"",
        "\"warning: month/year adjustment resulted in \"",
        "\"shifted dates:\\n\"",
        "\"     adjusted Y M D: %s %02d %02d\\n\"",
        "\"   normalized Y M D: %s %02d %02d\\n\"",
        "\"error: timezone %d caused time_t overflow\\n\"",
        "\"'%s' = %\"",
        "\" epoch-seconds\\n\"",
        "\"error: adding relative time caused an \"",
        "\"overflow\\n\"",
        "\"after time adjustment (%+\"",
        "\" hours, \"",
        "\"%+\"",
        "\" minutes, \"",
        "\"%+\"",
        "\" seconds, %+d ns),\\n\"",
        "\"    new time = %\"",
        "\" epoch-seconds\\n\"",
        "\"warning: daylight saving time changed after \"",
        "\"time adjustment\\n\"",
        "\"timezone: system default\\n\"",
        "\"UTC0\"",
        "\"timezone: Universal Time\\n\"",
        "\"timezone: TZ=\\\"%s\\\" environment value\\n\"",
        "\"final: %\"",
        "\".%09d (epoch-seconds)\\n\"",
        "\"final: %s (UTC)\\n\"",
        "\"final: %s (UTC%s)\\n\"",
        "\"final: %s (unknown time zone offset)\\n\""
      ]
    },
    "main": {
      "start_point": [
        4115,
        0
      ],
      "end_point": [
        4148,
        1
      ],
      "strings": [
        "\"Enter date, or blank line to exit.\\n\\t> \"",
        "\"Bad format - couldn't convert.\\n\"",
        "\"localtime (%\"",
        "\") failed\\n\"",
        "\"%s-%02d-%02d %02d:%02d:%02d.%09d\\n\"",
        "\"\\t> \""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/parse-datetime.h": {},
  "coreutils/coreutils-8.29/lib/parse-datetime.y": {
    "time_overflow": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    },
    "to_uchar": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        133,
        54
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_FORMAT": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": [
        "\"date: \""
      ]
    },
    "digits_to_date_time": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        298,
        1
      ],
      "strings": []
    },
    "apply_relative_time": {
      "start_point": [
        302,
        0
      ],
      "end_point": [
        323,
        1
      ],
      "strings": []
    },
    "set_hhmmss": {
      "start_point": [
        326,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "str_days": {
      "start_point": [
        338,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": [
        "\"last\"",
        "\"this\"",
        "\"next/first\"",
        "\"(SECOND)\"",
        "\"third\"",
        "\"fourth\"",
        "\"fifth\"",
        "\"sixth\"",
        "\"seventh\"",
        "\"eight\"",
        "\"ninth\"",
        "\"tenth\"",
        "\"eleventh\"",
        "\"twelfth\"",
        "\"Sun\"",
        "\"Mon\"",
        "\"Tue\"",
        "\"Wed\"",
        "\"Thu\"",
        "\"Fri\"",
        "\"Sat\"",
        "\"%s\"",
        "\"%\"",
        "\" %s\""
      ]
    },
    "time_zone_str": {
      "start_point": [
        401,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": [
        "\"%c%02d\""
      ]
    },
    "debug_print_current_time": {
      "start_point": [
        430,
        0
      ],
      "end_point": [
        517,
        1
      ],
      "strings": [
        "\"parsed %s part: \"",
        "\"(Y-M-D) %04\"",
        "\"-%02\"",
        "\"-%02\"",
        "\"year: %04\"",
        "\" %02\"",
        "\":%02\"",
        "\":%02\"",
        "\".%09d\"",
        "\"pm\"",
        "\"%s (day ordinal=%\"",
        "\" number=%d)\"",
        "\" isdst=%d%s\"",
        "\" DST\"",
        "\"\"",
        "\" UTC%s\"",
        "\"number of seconds: %\""
      ]
    },
    "print_rel_part": {
      "start_point": [
        521,
        0
      ],
      "end_point": [
        528,
        1
      ],
      "strings": [
        "\" %+\"",
        "\" %s\""
      ]
    },
    "debug_print_relative_time": {
      "start_point": [
        530,
        0
      ],
      "end_point": [
        559,
        1
      ],
      "strings": [
        "\"parsed %s part: \"",
        "\"today/this/now\\n\"",
        "\"year(s)\"",
        "\"month(s)\"",
        "\"day(s)\"",
        "\"hour(s)\"",
        "\"minutes\"",
        "\"seconds\"",
        "\"nanoseconds\""
      ]
    },
    "tZONE": [
      {
        "start_point": [
          684,
          30
        ],
        "end_point": [
          688,
          7
        ],
        "strings": []
      },
      {
        "start_point": [
          703,
          30
        ],
        "end_point": [
          707,
          7
        ],
        "strings": []
      },
      {
        "start_point": [
          743,
          4
        ],
        "end_point": [
          747,
          7
        ],
        "strings": []
      },
      {
        "start_point": [
          757,
          4
        ],
        "end_point": [
          761,
          7
        ],
        "strings": [
          "\"relative\""
        ]
      },
      {
        "start_point": [
          767,
          4
        ],
        "end_point": [
          769,
          73
        ],
        "strings": []
      },
      {
        "start_point": [
          772,
          4
        ],
        "end_point": [
          773,
          39
        ],
        "strings": []
      },
      {
        "start_point": [
          787,
          4
        ],
        "end_point": [
          792,
          7
        ],
        "strings": []
      },
      {
        "start_point": [
          793,
          4
        ],
        "end_point": [
          798,
          7
        ],
        "strings": []
      },
      {
        "start_point": [
          840,
          4
        ],
        "end_point": [
          847,
          7
        ],
        "strings": []
      },
      {
        "start_point": [
          848,
          4
        ],
        "end_point": [
          855,
          7
        ],
        "strings": []
      },
      {
        "start_point": [
          856,
          4
        ],
        "end_point": [
          860,
          7
        ],
        "strings": []
      }
    ],
    "tUNUMBER": [
      {
        "start_point": [
          867,
          4
        ],
        "end_point": [
          871,
          7
        ],
        "strings": []
      },
      {
        "start_point": [
          872,
          4
        ],
        "end_point": [
          877,
          7
        ],
        "strings": []
      },
      {
        "start_point": [
          882,
          13
        ],
        "end_point": [
          888,
          7
        ],
        "strings": []
      }
    ],
    "tMONTH_UNIT": [
      {
        "start_point": [
          913,
          4
        ],
        "end_point": [
          915,
          60
        ],
        "strings": []
      },
      {
        "start_point": [
          916,
          4
        ],
        "end_point": [
          918,
          66
        ],
        "strings": []
      },
      {
        "start_point": [
          951,
          4
        ],
        "end_point": [
          953,
          66
        ],
        "strings": []
      }
    ],
    "time_zone_hhmm": {
      "start_point": [
        1203,
        0
      ],
      "end_point": [
        1228,
        1
      ],
      "strings": []
    },
    "to_hour": {
      "start_point": [
        1230,
        0
      ],
      "end_point": [
        1243,
        1
      ],
      "strings": []
    },
    "tm_year_str": {
      "start_point": [
        1251,
        0
      ],
      "end_point": [
        1259,
        1
      ],
      "strings": [
        "\"-%02d%02d\""
      ]
    },
    "to_tm_year": {
      "start_point": [
        1264,
        0
      ],
      "end_point": [
        1290,
        1
      ],
      "strings": [
        "\"warning: adjusting year value %\"",
        "\" to %\"",
        "\"\\n\"",
        "\"error: out-of-range year %\"",
        "\"\\n\""
      ]
    },
    "lookup_zone": {
      "start_point": [
        1292,
        0
      ],
      "end_point": [
        1312,
        1
      ],
      "strings": []
    },
    "tm_diff": {
      "start_point": [
        1319,
        0
      ],
      "end_point": [
        1338,
        1
      ],
      "strings": []
    },
    "lookup_word": {
      "start_point": [
        1341,
        0
      ],
      "end_point": [
        1407,
        1
      ],
      "strings": []
    },
    "yylex": {
      "start_point": [
        1409,
        0
      ],
      "end_point": [
        1546,
        1
      ],
      "strings": [
        "\"error: unknown word '%s'\\n\""
      ]
    },
    "yyerror": {
      "start_point": [
        1549,
        0
      ],
      "end_point": [
        1554,
        1
      ],
      "strings": []
    },
    "mktime_ok": {
      "start_point": [
        1561,
        0
      ],
      "end_point": [
        1581,
        1
      ],
      "strings": []
    },
    "debug_strfdatetime": {
      "start_point": [
        1585,
        0
      ],
      "end_point": [
        1628,
        1
      ],
      "strings": [
        "\"(Y-M-D) %Y-%m-%d %H:%M:%S\"",
        "\" TZ=%s\""
      ]
    },
    "debug_strfdate": {
      "start_point": [
        1630,
        0
      ],
      "end_point": [
        1638,
        1
      ],
      "strings": [
        "\"(Y-M-D) %s-%02d-%02d\""
      ]
    },
    "debug_strftime": {
      "start_point": [
        1640,
        0
      ],
      "end_point": [
        1645,
        1
      ],
      "strings": [
        "\"%02d:%02d:%02d\""
      ]
    },
    "debug_mktime_not_ok": {
      "start_point": [
        1659,
        0
      ],
      "end_point": [
        1713,
        1
      ],
      "strings": [
        "\"error: invalid date/time value:\\n\"",
        "\"    user provided time: '%s'\\n\"",
        "\"       normalized time: '%s'\\n\"",
        "\"                                 %4s %2s %2s %2s %2s %2s\"",
        "\"\"",
        "\"----\"",
        "\"\"",
        "\"--\"",
        "\"\"",
        "\"--\"",
        "\"\"",
        "\"--\"",
        "\"\"",
        "\"--\"",
        "\"\"",
        "\"--\"",
        "\"%s\\n\"",
        "\"     possible reasons:\\n\"",
        "\"       non-existing due to daylight-saving time;\\n\"",
        "\"       invalid day/month combination;\\n\"",
        "\"       numeric values overflow;\\n\"",
        "\"       %s\\n\"",
        "\"incorrect timezone\"",
        "\"missing timezone\""
      ]
    },
    "parse_datetime": {
      "start_point": [
        1716,
        0
      ],
      "end_point": [
        1727,
        1
      ],
      "strings": [
        "\"TZ\""
      ]
    },
    "parse_datetime2": {
      "start_point": [
        1734,
        0
      ],
      "end_point": [
        2389,
        1
      ],
      "strings": [
        "\"TZ=\\\"\"",
        "\"0\"",
        "\"error: initial year out of range\\n\"",
        "\"error: parsing failed\\n\"",
        "\"error: parsing failed, stopped at '%s'\\n\"",
        "\"input timezone: \"",
        "\"'@timespec' - always UTC\"",
        "\"parsed date/time string\"",
        "\"TZ=\\\"%s\\\" in date string\"",
        "\"UTC0\"",
        "\"TZ=\\\"UTC0\\\" environment value or -u\"",
        "\"TZ=\\\"%s\\\" environment value\"",
        "\"system default\"",
        "\", dst\"",
        "\" (%s)\"",
        "\"error: seen multiple time parts\\n\"",
        "\"error: seen multiple date parts\\n\"",
        "\"error: seen multiple days parts\\n\"",
        "\"error: seen multiple daylight-saving parts\\n\"",
        "\"error: seen multiple time-zone parts\\n\"",
        "\"error: year, month, or day overflow\\n\"",
        "\"am\"",
        "\"pm\"",
        "\"\"",
        "\"error: invalid hour %\"",
        "\"%s\\n\"",
        "\"using specified time as starting value: '%s'\\n\"",
        "\"using current time as starting value: '%s'\\n\"",
        "\"warning: using midnight as starting time: 00:00:00\\n\"",
        "\"XXX\"",
        "\"error: tzalloc (\\\"%s\\\") failed\\n\"",
        "\"error: day '%s' \"",
        "\"(day ordinal=%\"",
        "\" number=%d) \"",
        "\"resulted in an invalid date: '%s'\\n\"",
        "\"new start date: '%s' is '%s'\\n\"",
        "\"using current date as starting value: '%s'\\n\"",
        "\"warning: day (%s) ignored when explicit dates \"",
        "\"are given\\n\"",
        "\"starting date/time: '%s'\\n\"",
        "\"warning: when adding relative months/years, \"",
        "\"it is recommended to specify the 15th of the \"",
        "\"months\\n\"",
        "\"warning: when adding relative days, \"",
        "\"it is recommended to specify noon\\n\"",
        "\"error: %s:%d\\n\"",
        "\"error: adding relative date resulted \"",
        "\"in an invalid date: '%s'\\n\"",
        "\"after date adjustment \"",
        "\"(%+\"",
        "\" years, %+\"",
        "\" months, \"",
        "\"%+\"",
        "\" days),\\n\"",
        "\"    new date/time = '%s'\\n\"",
        "\"warning: daylight saving time changed after \"",
        "\"date adjustment\\n\"",
        "\"warning: month/year adjustment resulted in \"",
        "\"shifted dates:\\n\"",
        "\"     adjusted Y M D: %s %02d %02d\\n\"",
        "\"   normalized Y M D: %s %02d %02d\\n\"",
        "\"error: timezone %d caused time_t overflow\\n\"",
        "\"'%s' = %\"",
        "\" epoch-seconds\\n\"",
        "\"error: adding relative time caused an \"",
        "\"overflow\\n\"",
        "\"after time adjustment (%+\"",
        "\" hours, \"",
        "\"%+\"",
        "\" minutes, \"",
        "\"%+\"",
        "\" seconds, %+d ns),\\n\"",
        "\"    new time = %\"",
        "\" epoch-seconds\\n\"",
        "\"warning: daylight saving time changed after \"",
        "\"time adjustment\\n\"",
        "\"timezone: system default\\n\"",
        "\"UTC0\"",
        "\"timezone: Universal Time\\n\"",
        "\"timezone: TZ=\\\"%s\\\" environment value\\n\"",
        "\"final: %\"",
        "\".%09d (epoch-seconds)\\n\"",
        "\"final: %s (UTC)\\n\"",
        "\"final: %s (UTC%s)\\n\"",
        "\"final: %s (unknown time zone offset)\\n\""
      ]
    },
    "main": {
      "start_point": [
        2393,
        0
      ],
      "end_point": [
        2426,
        1
      ],
      "strings": [
        "\"Enter date, or blank line to exit.\\n\\t> \"",
        "\"Bad format - couldn't convert.\\n\"",
        "\"localtime (%\"",
        "\") failed\\n\"",
        "\"%s-%02d-%02d %02d:%02d:%02d.%09d\\n\"",
        "\"\\t> \""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/pathmax.h": {},
  "coreutils/coreutils-8.29/lib/physmem.c": {
    "physmem_total": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"kernel32.dll\"",
        "\"GlobalMemoryStatusEx\""
      ]
    },
    "physmem_available": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": [
        "\"kernel32.dll\"",
        "\"GlobalMemoryStatusEx\""
      ]
    },
    "main": {
      "start_point": [
        309,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": [
        "\"%12.f %12.f\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/physmem.h": {},
  "coreutils/coreutils-8.29/lib/pipe-safer.c": {
    "pipe_safer": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/pipe.c": {
    "pipe": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/pipe2.c": {
    "pipe2": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/posixtm.c": {
    "year": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "posix_time_parse": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "posixtime": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": [
        "\"59\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/posixtm.h": {},
  "coreutils/coreutils-8.29/lib/posixver.c": {
    "posix2_version": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": [
        "\"_POSIX2_VERSION\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/posixver.h": {},
  "coreutils/coreutils-8.29/lib/printf-args.c": {
    "PRINTF_FETCHARGS": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"(NULL)\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/printf-args.h": {},
  "coreutils/coreutils-8.29/lib/printf-frexp.c": {
    "FUNC": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/printf-frexp.h": {},
  "coreutils/coreutils-8.29/lib/printf-frexpl.c": {
    "printf_frexpl": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/printf-frexpl.h": {},
  "coreutils/coreutils-8.29/lib/printf-parse.c": {
    "PRINTF_PARSE": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        631,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/printf-parse.h": {},
  "coreutils/coreutils-8.29/lib/priv-set.c": {
    "priv_set_initialize": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "priv_set_ismember": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "priv_set_remove": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "priv_set_restore": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/priv-set.h": {
    "priv_set_remove_linkdir": [
      {
        "start_point": [
          35,
          0
        ],
        "end_point": [
          39,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          49,
          0
        ],
        "end_point": [
          53,
          1
        ],
        "strings": []
      }
    ],
    "priv_set_restore_linkdir": [
      {
        "start_point": [
          41,
          0
        ],
        "end_point": [
          45,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          55,
          0
        ],
        "end_point": [
          59,
          1
        ],
        "strings": []
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/progname.c": {
    "set_program_name": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"A NULL argv[0] was passed through an exec system call.\\n\"",
        "\"/.libs/\"",
        "\"lt-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/progname.h": {},
  "coreutils/coreutils-8.29/lib/propername.c": {
    "mbsstr_trimmed_wordbounded": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "proper_name": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": [
        "\"%s (%s)\""
      ]
    },
    "proper_name_utf8": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        293,
        1
      ],
      "strings": [
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"//TRANSLIT\"",
        "\"UTF-8\"",
        "\"%s (%s)\""
      ]
    },
    "main": [
      {
        "start_point": [
          297,
          0
        ],
        "end_point": [
          304,
          1
        ],
        "strings": [
          "\"\"",
          "\"found\\n\""
        ]
      },
      {
        "start_point": [
          310,
          0
        ],
        "end_point": [
          316,
          1
        ],
        "strings": [
          "\"\"",
          "\"%s\\n\"",
          "\"Franc,ois Pinard\"",
          "\"Fran\\303\\247ois Pinard\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/propername.h": {},
  "coreutils/coreutils-8.29/lib/pthread.c": {},
  "coreutils/coreutils-8.29/lib/pthread.in.h": {
    "pthread_cond_destroy": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "pthread_cond_init": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "pthread_cond_signal": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "pthread_cond_wait": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    },
    "pthread_create": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "pthread_exit": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "pthread_join": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "pthread_mutexattr_destroy": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        191,
        1
      ],
      "strings": []
    },
    "pthread_mutexattr_init": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        197,
        1
      ],
      "strings": []
    },
    "pthread_mutexattr_settype": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "pthread_mutex_destroy": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "pthread_mutex_init": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    },
    "pthread_mutex_lock": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    },
    "pthread_mutex_trylock": {
      "start_point": [
        228,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": []
    },
    "pthread_mutex_unlock": {
      "start_point": [
        234,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": []
    },
    "pthread_spin_init": {
      "start_point": [
        256,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": []
    },
    "pthread_spin_destroy": {
      "start_point": [
        262,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": []
    },
    "pthread_spin_lock": {
      "start_point": [
        268,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": []
    },
    "pthread_spin_trylock": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        278,
        1
      ],
      "strings": []
    },
    "pthread_spin_unlock": {
      "start_point": [
        280,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/putenv.c": {
    "_unsetenv": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "putenv": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": [
        "\"= \"",
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/qcopy-acl.c": {
    "qcopy_acl": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/qset-acl.c": {
    "qset_acl": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/quote.h": {},
  "coreutils/coreutils-8.29/lib/quotearg.c": {
    "clone_quoting_options": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    },
    "get_quoting_style": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "set_quoting_style": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    },
    "set_char_quoting": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "set_quoting_flags": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": []
    },
    "set_custom_quoting": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "quoting_options_from_style": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    },
    "gettext_quote": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": [
        "\"UTF-8\"",
        "\"\\xe2\\x80\\x98\"",
        "\"\\xe2\\x80\\x99\"",
        "\"GB18030\"",
        "\"\\xa1\\ae\"",
        "\"\\xa1\\xaf\"",
        "\"\\\"\"",
        "\"'\""
      ]
    },
    "quotearg_buffer_restyled": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        771,
        1
      ],
      "strings": [
        "\"\\\"\"",
        "\"`\"",
        "\"'\"",
        "\"'\""
      ]
    },
    "quotearg_buffer": {
      "start_point": [
        782,
        0
      ],
      "end_point": [
        794,
        1
      ],
      "strings": []
    },
    "quotearg_alloc": {
      "start_point": [
        797,
        0
      ],
      "end_point": [
        802,
        1
      ],
      "strings": []
    },
    "quotearg_alloc_mem": {
      "start_point": [
        810,
        0
      ],
      "end_point": [
        830,
        1
      ],
      "strings": []
    },
    "quotearg_free": {
      "start_point": [
        846,
        0
      ],
      "end_point": [
        865,
        1
      ],
      "strings": []
    },
    "quotearg_n_options": {
      "start_point": [
        875,
        0
      ],
      "end_point": [
        927,
        1
      ],
      "strings": []
    },
    "quotearg_n": {
      "start_point": [
        929,
        0
      ],
      "end_point": [
        933,
        1
      ],
      "strings": []
    },
    "quotearg_n_mem": {
      "start_point": [
        935,
        0
      ],
      "end_point": [
        939,
        1
      ],
      "strings": []
    },
    "quotearg": {
      "start_point": [
        941,
        0
      ],
      "end_point": [
        945,
        1
      ],
      "strings": []
    },
    "quotearg_mem": {
      "start_point": [
        947,
        0
      ],
      "end_point": [
        951,
        1
      ],
      "strings": []
    },
    "quotearg_n_style": {
      "start_point": [
        953,
        0
      ],
      "end_point": [
        958,
        1
      ],
      "strings": []
    },
    "quotearg_n_style_mem": {
      "start_point": [
        960,
        0
      ],
      "end_point": [
        966,
        1
      ],
      "strings": []
    },
    "quotearg_style": {
      "start_point": [
        968,
        0
      ],
      "end_point": [
        972,
        1
      ],
      "strings": []
    },
    "quotearg_style_mem": {
      "start_point": [
        974,
        0
      ],
      "end_point": [
        978,
        1
      ],
      "strings": []
    },
    "quotearg_char_mem": {
      "start_point": [
        980,
        0
      ],
      "end_point": [
        987,
        1
      ],
      "strings": []
    },
    "quotearg_char": {
      "start_point": [
        989,
        0
      ],
      "end_point": [
        993,
        1
      ],
      "strings": []
    },
    "quotearg_colon": {
      "start_point": [
        995,
        0
      ],
      "end_point": [
        999,
        1
      ],
      "strings": []
    },
    "quotearg_colon_mem": {
      "start_point": [
        1001,
        0
      ],
      "end_point": [
        1005,
        1
      ],
      "strings": []
    },
    "quotearg_n_style_colon": {
      "start_point": [
        1007,
        0
      ],
      "end_point": [
        1014,
        1
      ],
      "strings": []
    },
    "quotearg_n_custom": {
      "start_point": [
        1016,
        0
      ],
      "end_point": [
        1022,
        1
      ],
      "strings": []
    },
    "quotearg_n_custom_mem": {
      "start_point": [
        1024,
        0
      ],
      "end_point": [
        1032,
        1
      ],
      "strings": []
    },
    "quotearg_custom": {
      "start_point": [
        1034,
        0
      ],
      "end_point": [
        1039,
        1
      ],
      "strings": []
    },
    "quotearg_custom_mem": {
      "start_point": [
        1041,
        0
      ],
      "end_point": [
        1047,
        1
      ],
      "strings": []
    },
    "quote_n_mem": {
      "start_point": [
        1059,
        0
      ],
      "end_point": [
        1063,
        1
      ],
      "strings": []
    },
    "quote_mem": {
      "start_point": [
        1065,
        0
      ],
      "end_point": [
        1069,
        1
      ],
      "strings": []
    },
    "quote_n": {
      "start_point": [
        1071,
        0
      ],
      "end_point": [
        1075,
        1
      ],
      "strings": []
    },
    "quote": {
      "start_point": [
        1077,
        0
      ],
      "end_point": [
        1081,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/quotearg.h": {},
  "coreutils/coreutils-8.29/lib/raise.c": {
    "raise_nothrow": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        44,
        5
      ],
      "strings": []
    },
    "rpl_raise": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/rand-isaac.c": {
    "just": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "ind": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "isaac_refill": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        137,
        1
      ],
      "strings": []
    },
    "isaac_init": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": []
    },
    "isaac_seed": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/rand-isaac.h": {},
  "coreutils/coreutils-8.29/lib/randint.c": {
    "main": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": [
        "\"%\"",
        "\"\\n\""
      ]
    },
    "randint_new": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "randint_all_new": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "randint_get_source": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "shift_left": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "randint_genmax": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "randint_free": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "randint_all_free": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/randint.h": {
    "randint_choose": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/randperm.c": {
    "_GL_ATTRIBUTE_CONST": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "randperm_bound": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "swap": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "sparse_hash_": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "sparse_cmp_": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "sparse_new": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "sparse_swap": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    },
    "sparse_free": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "randperm_new": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/randperm.h": {},
  "coreutils/coreutils-8.29/lib/randread.c": {
    "randread_error": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"%s: end of file\"",
        "\"%s: read error\""
      ]
    },
    "simple_new": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    },
    "get_nonce": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "randread_new": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": [
        "\"rb\""
      ]
    },
    "randread_set_handler": {
      "start_point": [
        240,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": []
    },
    "randread_set_handler_arg": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": []
    },
    "readsource": {
      "start_point": [
        256,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    },
    "readisaac": {
      "start_point": [
        276,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": []
    },
    "randread": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        331,
        1
      ],
      "strings": []
    },
    "randread_free": {
      "start_point": [
        339,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/randread.h": {},
  "coreutils/coreutils-8.29/lib/read-file.c": {
    "fread_file": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "internal_read_file": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "read_file": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": [
        "\"r\""
      ]
    },
    "read_binary_file": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        187,
        1
      ],
      "strings": [
        "\"rb\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/read-file.h": {},
  "coreutils/coreutils-8.29/lib/read.c": {
    "read_nothrow": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        50,
        5
      ],
      "strings": []
    },
    "rpl_read": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/readdir.c": {
    "readdir": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/readlink.c": {
    "readlink": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "rpl_readlink": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/readlinkat.c": {
    "rpl_readlinkat": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/readtokens.c": {
    "init_tokenbuffer": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "get_nth_bit": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "set_nth_bit": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "readtoken": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    },
    "readtokens": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/readtokens.h": {},
  "coreutils/coreutils-8.29/lib/readtokens0.c": {
    "readtokens0_init": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "readtokens0_free": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "save_token": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "readtokens0": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/readtokens0.h": {},
  "coreutils/coreutils-8.29/lib/readutmp.c": {
    "extract_trimmed_name": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        59,
        1
      ],
      "strings": []
    },
    "desirable_utmp_entry": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "read_utmp": [
      {
        "start_point": [
          86,
          0
        ],
        "end_point": [
          118,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          122,
          0
        ],
        "end_point": [
          158,
          1
        ],
        "strings": [
          "\"r\""
        ]
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/readutmp.h": {},
  "coreutils/coreutils-8.29/lib/realloc.c": {
    "rpl_realloc": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/regcomp.c": {
    "re_compile_pattern": {
      "start_point": [
        215,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": []
    },
    "re_set_syntax": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    },
    "re_compile_fastmap": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": []
    },
    "re_set_fastmap": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        294,
        1
      ],
      "strings": []
    },
    "re_compile_fastmap_iter": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        427,
        1
      ],
      "strings": []
    },
    "regcomp": {
      "start_point": [
        465,
        0
      ],
      "end_point": [
        516,
        1
      ],
      "strings": []
    },
    "regerror": {
      "start_point": [
        525,
        0
      ],
      "end_point": [
        557,
        1
      ],
      "strings": []
    },
    "free_dfa_content": {
      "start_point": [
        592,
        0
      ],
      "end_point": [
        637,
        1
      ],
      "strings": []
    },
    "regfree": {
      "start_point": [
        642,
        0
      ],
      "end_point": [
        659,
        1
      ],
      "strings": []
    },
    "re_comp": {
      "start_point": [
        678,
        0
      ],
      "end_point": [
        722,
        1
      ],
      "strings": [
        "\"No previous regular expression\""
      ]
    },
    "free_mem": {
      "start_point": [
        725,
        0
      ],
      "end_point": [
        728,
        1
      ],
      "strings": []
    },
    "re_compile_internal": {
      "start_point": [
        737,
        0
      ],
      "end_point": [
        833,
        1
      ],
      "strings": []
    },
    "init_dfa": {
      "start_point": [
        838,
        0
      ],
      "end_point": [
        932,
        1
      ],
      "strings": [
        "\"UTF-8\"",
        "\"8\""
      ]
    },
    "init_word_char": {
      "start_point": [
        938,
        0
      ],
      "end_point": [
        984,
        1
      ],
      "strings": []
    },
    "free_workarea_compile": {
      "start_point": [
        988,
        0
      ],
      "end_point": [
        1003,
        1
      ],
      "strings": []
    },
    "create_initial_state": {
      "start_point": [
        1007,
        0
      ],
      "end_point": [
        1085,
        1
      ],
      "strings": []
    },
    "optimize_utf8": {
      "start_point": [
        1092,
        0
      ],
      "end_point": [
        1166,
        1
      ],
      "strings": []
    },
    "analyze": {
      "start_point": [
        1172,
        0
      ],
      "end_point": [
        1230,
        1
      ],
      "strings": []
    },
    "postorder": {
      "start_point": [
        1235,
        0
      ],
      "end_point": [
        1265,
        1
      ],
      "strings": []
    },
    "preorder": {
      "start_point": [
        1267,
        0
      ],
      "end_point": [
        1295,
        1
      ],
      "strings": []
    },
    "optimize_subexps": {
      "start_point": [
        1300,
        0
      ],
      "end_point": [
        1327,
        1
      ],
      "strings": []
    },
    "lower_subexps": {
      "start_point": [
        1331,
        0
      ],
      "end_point": [
        1351,
        1
      ],
      "strings": []
    },
    "lower_subexp": {
      "start_point": [
        1353,
        0
      ],
      "end_point": [
        1386,
        1
      ],
      "strings": []
    },
    "calc_first": {
      "start_point": [
        1390,
        0
      ],
      "end_point": [
        1409,
        1
      ],
      "strings": []
    },
    "calc_next": {
      "start_point": [
        1412,
        0
      ],
      "end_point": [
        1432,
        1
      ],
      "strings": []
    },
    "link_nfa_nodes": {
      "start_point": [
        1435,
        0
      ],
      "end_point": [
        1489,
        1
      ],
      "strings": []
    },
    "duplicate_node_closure": {
      "start_point": [
        1495,
        0
      ],
      "end_point": [
        1597,
        1
      ],
      "strings": []
    },
    "search_duplicated_node": {
      "start_point": [
        1602,
        0
      ],
      "end_point": [
        1614,
        1
      ],
      "strings": []
    },
    "duplicate_node": {
      "start_point": [
        1620,
        0
      ],
      "end_point": [
        1634,
        1
      ],
      "strings": []
    },
    "calc_inveclosure": {
      "start_point": [
        1636,
        0
      ],
      "end_point": [
        1656,
        1
      ],
      "strings": []
    },
    "calc_eclosure": {
      "start_point": [
        1660,
        0
      ],
      "end_point": [
        1701,
        1
      ],
      "strings": []
    },
    "calc_eclosure_iter": {
      "start_point": [
        1705,
        0
      ],
      "end_point": [
        1779,
        1
      ],
      "strings": []
    },
    "fetch_token": {
      "start_point": [
        1786,
        0
      ],
      "end_point": [
        1790,
        1
      ],
      "strings": []
    },
    "peek_token": {
      "start_point": [
        1795,
        0
      ],
      "end_point": [
        2028,
        1
      ],
      "strings": []
    },
    "peek_token_bracket": {
      "start_point": [
        2033,
        0
      ],
      "end_point": [
        2115,
        1
      ],
      "strings": []
    },
    "parse": {
      "start_point": [
        2131,
        0
      ],
      "end_point": [
        2154,
        1
      ],
      "strings": []
    },
    "parse_reg_exp": {
      "start_point": [
        2165,
        0
      ],
      "end_point": [
        2203,
        1
      ],
      "strings": []
    },
    "parse_branch": {
      "start_point": [
        2214,
        0
      ],
      "end_point": [
        2251,
        1
      ],
      "strings": []
    },
    "parse_expression": {
      "start_point": [
        2259,
        0
      ],
      "end_point": [
        2485,
        1
      ],
      "strings": [
        "\"alnum\"",
        "\"_\"",
        "\"space\"",
        "\"\""
      ]
    },
    "parse_sub_exp": {
      "start_point": [
        2494,
        0
      ],
      "end_point": [
        2532,
        1
      ],
      "strings": []
    },
    "parse_dup_op": {
      "start_point": [
        2536,
        0
      ],
      "end_point": [
        2680,
        1
      ],
      "strings": []
    },
    "parse_byte": {
      "start_point": [
        2692,
        0
      ],
      "end_point": [
        2697,
        1
      ],
      "strings": []
    },
    "start_elem": {
      "start_point": [
        2719,
        23
      ],
      "end_point": [
        2822,
        1
      ],
      "strings": []
    },
    "parse_bracket_exp": {
      "start_point": [
        2854,
        0
      ],
      "end_point": [
        3399,
        1
      ],
      "strings": []
    },
    "seek_collating_symbol_entry": {
      "start_point": [
        2871,
        2
      ],
      "end_point": [
        2891,
        5
      ],
      "strings": []
    },
    "lookup_collation_sequence_value": {
      "start_point": [
        2897,
        2
      ],
      "end_point": [
        2956,
        5
      ],
      "strings": []
    },
    "build_range_exp": {
      "start_point": [
        2965,
        2
      ],
      "end_point": [
        3038,
        5
      ],
      "strings": []
    },
    "build_collating_symbol": {
      "start_point": [
        3046,
        2
      ],
      "end_point": [
        3102,
        5
      ],
      "strings": []
    },
    "parse_bracket_element": {
      "start_point": [
        3403,
        0
      ],
      "end_point": [
        3437,
        1
      ],
      "strings": []
    },
    "parse_bracket_symbol": {
      "start_point": [
        3443,
        0
      ],
      "end_point": [
        3482,
        1
      ],
      "strings": []
    },
    "build_charclass": {
      "start_point": [
        3590,
        9
      ],
      "end_point": [
        3664,
        1
      ],
      "strings": [
        "\"upper\"",
        "\"lower\"",
        "\"alpha\"",
        "\"alnum\"",
        "\"cntrl\"",
        "\"lower\"",
        "\"space\"",
        "\"alpha\"",
        "\"digit\"",
        "\"print\"",
        "\"upper\"",
        "\"blank\"",
        "\"graph\"",
        "\"punct\"",
        "\"xdigit\""
      ]
    },
    "build_charclass_op": {
      "start_point": [
        3666,
        0
      ],
      "end_point": [
        3770,
        1
      ],
      "strings": []
    },
    "fetch_number": {
      "start_point": [
        3778,
        0
      ],
      "end_point": [
        3798,
        1
      ],
      "strings": []
    },
    "free_charset": {
      "start_point": [
        3801,
        0
      ],
      "end_point": [
        3813,
        1
      ],
      "strings": []
    },
    "create_tree": {
      "start_point": [
        3820,
        0
      ],
      "end_point": [
        3830,
        1
      ],
      "strings": []
    },
    "create_token_tree": {
      "start_point": [
        3832,
        0
      ],
      "end_point": [
        3864,
        1
      ],
      "strings": []
    },
    "mark_opt_subexp": {
      "start_point": [
        3869,
        0
      ],
      "end_point": [
        3877,
        1
      ],
      "strings": []
    },
    "free_token": {
      "start_point": [
        3881,
        0
      ],
      "end_point": [
        3891,
        1
      ],
      "strings": []
    },
    "free_tree": {
      "start_point": [
        3896,
        0
      ],
      "end_point": [
        3901,
        1
      ],
      "strings": []
    },
    "duplicate_tree": {
      "start_point": [
        3909,
        0
      ],
      "end_point": [
        3947,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/regex.c": {},
  "coreutils/coreutils-8.29/lib/regex.h": {},
  "coreutils/coreutils-8.29/lib/regexec.c": {
    "regexec": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "__compat_regexec": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "re_match": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": []
    },
    "re_search": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": []
    },
    "re_match_2": {
      "start_point": [
        295,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": []
    },
    "re_search_2": {
      "start_point": [
        307,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": []
    },
    "re_search_2_stub": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        360,
        1
      ],
      "strings": []
    },
    "re_search_stub": {
      "start_point": [
        367,
        0
      ],
      "end_point": [
        454,
        1
      ],
      "strings": []
    },
    "re_copy_regs": {
      "start_point": [
        456,
        0
      ],
      "end_point": [
        519,
        1
      ],
      "strings": []
    },
    "re_set_registers": {
      "start_point": [
        534,
        0
      ],
      "end_point": [
        551,
        1
      ],
      "strings": []
    },
    "re_exec": {
      "start_point": [
        562,
        0
      ],
      "end_point": [
        567,
        1
      ],
      "strings": []
    },
    "re_search_internal": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        913,
        1
      ],
      "strings": []
    },
    "prune_impossible_nodes": {
      "start_point": [
        915,
        0
      ],
      "end_point": [
        1005,
        1
      ],
      "strings": []
    },
    "check_matching": {
      "start_point": [
        1053,
        0
      ],
      "end_point": [
        1182,
        1
      ],
      "strings": []
    },
    "check_halt_node_context": {
      "start_point": [
        1186,
        0
      ],
      "end_point": [
        1198,
        1
      ],
      "strings": []
    },
    "check_halt_state_context": {
      "start_point": [
        1204,
        0
      ],
      "end_point": [
        1218,
        1
      ],
      "strings": []
    },
    "proceed_next_node": {
      "start_point": [
        1225,
        0
      ],
      "end_point": [
        1324,
        1
      ],
      "strings": []
    },
    "push_fail_stack": {
      "start_point": [
        1326,
        0
      ],
      "end_point": [
        1351,
        1
      ],
      "strings": []
    },
    "pop_fail_stack": {
      "start_point": [
        1353,
        0
      ],
      "end_point": [
        1365,
        1
      ],
      "strings": []
    },
    "__attribute_warn_unused_result__": [
      {
        "start_point": [
          1372,
          0
        ],
        "end_point": [
          1477,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          2642,
          0
        ],
        "end_point": [
          2784,
          1
        ],
        "strings": []
      }
    ],
    "free_fail_stack_return": {
      "start_point": [
        1479,
        0
      ],
      "end_point": [
        1493,
        1
      ],
      "strings": []
    },
    "update_regs": {
      "start_point": [
        1495,
        0
      ],
      "end_point": [
        1541,
        1
      ],
      "strings": []
    },
    "sift_states_backward": {
      "start_point": [
        1566,
        0
      ],
      "end_point": [
        1621,
        1
      ],
      "strings": []
    },
    "build_sifted_states": {
      "start_point": [
        1623,
        0
      ],
      "end_point": [
        1681,
        1
      ],
      "strings": []
    },
    "clean_state_log_if_needed": {
      "start_point": [
        1685,
        0
      ],
      "end_point": [
        1708,
        1
      ],
      "strings": []
    },
    "merge_state_array": {
      "start_point": [
        1710,
        0
      ],
      "end_point": [
        1734,
        1
      ],
      "strings": []
    },
    "update_cur_sifted_state": {
      "start_point": [
        1736,
        0
      ],
      "end_point": [
        1781,
        1
      ],
      "strings": []
    },
    "add_epsilon_src_nodes": {
      "start_point": [
        1783,
        0
      ],
      "end_point": [
        1810,
        1
      ],
      "strings": []
    },
    "sub_epsilon_src_nodes": {
      "start_point": [
        1812,
        0
      ],
      "end_point": [
        1858,
        1
      ],
      "strings": []
    },
    "check_dst_limits": {
      "start_point": [
        1860,
        0
      ],
      "end_point": [
        1893,
        1
      ],
      "strings": []
    },
    "check_dst_limits_calc_pos_1": {
      "start_point": [
        1895,
        0
      ],
      "end_point": [
        1974,
        1
      ],
      "strings": []
    },
    "check_dst_limits_calc_pos": {
      "start_point": [
        1976,
        0
      ],
      "end_point": [
        2000,
        1
      ],
      "strings": []
    },
    "check_subexp_limits": {
      "start_point": [
        2005,
        0
      ],
      "end_point": [
        2090,
        1
      ],
      "strings": []
    },
    "sift_states_bkref": {
      "start_point": [
        2092,
        0
      ],
      "end_point": [
        2188,
        1
      ],
      "strings": []
    },
    "sift_states_iter_mb": {
      "start_point": [
        2192,
        0
      ],
      "end_point": [
        2210,
        1
      ],
      "strings": []
    },
    "transit_state": {
      "start_point": [
        2221,
        0
      ],
      "end_point": [
        2276,
        1
      ],
      "strings": []
    },
    "merge_state_with_log": {
      "start_point": [
        2279,
        0
      ],
      "end_point": [
        2352,
        1
      ],
      "strings": []
    },
    "find_recover_state": {
      "start_point": [
        2357,
        0
      ],
      "end_point": [
        2378,
        1
      ],
      "strings": []
    },
    "check_subexp_matching_top": {
      "start_point": [
        2387,
        0
      ],
      "end_point": [
        2414,
        1
      ],
      "strings": []
    },
    "transit_state_sb": {
      "start_point": [
        2420,
        0
      ],
      "end_point": [
        2455,
        1
      ],
      "strings": []
    },
    "transit_state_mb": {
      "start_point": [
        2459,
        0
      ],
      "end_point": [
        2526,
        1
      ],
      "strings": []
    },
    "transit_state_bkref": {
      "start_point": [
        2529,
        0
      ],
      "end_point": [
        2634,
        1
      ],
      "strings": []
    },
    "get_subexp_sub": {
      "start_point": [
        2792,
        0
      ],
      "end_point": [
        2810,
        1
      ],
      "strings": []
    },
    "find_subexp_node": {
      "start_point": [
        2820,
        0
      ],
      "end_point": [
        2834,
        1
      ],
      "strings": []
    },
    "check_arrival": {
      "start_point": [
        2841,
        0
      ],
      "end_point": [
        2996,
        1
      ],
      "strings": []
    },
    "check_arrival_add_next_nodes": {
      "start_point": [
        3006,
        0
      ],
      "end_point": [
        3079,
        1
      ],
      "strings": []
    },
    "check_arrival_expand_ecl": {
      "start_point": [
        3087,
        0
      ],
      "end_point": [
        3133,
        1
      ],
      "strings": []
    },
    "check_arrival_expand_ecl_sub": {
      "start_point": [
        3139,
        0
      ],
      "end_point": [
        3177,
        1
      ],
      "strings": []
    },
    "expand_bkref_cache": {
      "start_point": [
        3184,
        0
      ],
      "end_point": [
        3268,
        1
      ],
      "strings": []
    },
    "build_trtable": {
      "start_point": [
        3273,
        0
      ],
      "end_point": [
        3503,
        1
      ],
      "strings": []
    },
    "group_nodes_into_DFAstates": {
      "start_point": [
        3510,
        0
      ],
      "end_point": [
        3691,
        1
      ],
      "strings": []
    },
    "check_node_accept_bytes": {
      "start_point": [
        3706,
        0
      ],
      "end_point": [
        3932,
        1
      ],
      "strings": []
    },
    "find_collation_sequence_value": {
      "start_point": [
        3935,
        0
      ],
      "end_point": [
        3991,
        1
      ],
      "strings": []
    },
    "check_node_accept": {
      "start_point": [
        3998,
        0
      ],
      "end_point": [
        4043,
        1
      ],
      "strings": []
    },
    "extend_buffers": {
      "start_point": [
        4047,
        0
      ],
      "end_point": [
        4106,
        1
      ],
      "strings": []
    },
    "match_ctx_init": {
      "start_point": [
        4113,
        0
      ],
      "end_point": [
        4142,
        1
      ],
      "strings": []
    },
    "match_ctx_clean": {
      "start_point": [
        4148,
        0
      ],
      "end_point": [
        4173,
        1
      ],
      "strings": []
    },
    "match_ctx_free": {
      "start_point": [
        4177,
        0
      ],
      "end_point": [
        4184,
        1
      ],
      "strings": []
    },
    "match_ctx_add_entry": {
      "start_point": [
        4191,
        0
      ],
      "end_point": [
        4235,
        1
      ],
      "strings": []
    },
    "search_cur_bkref_entry": {
      "start_point": [
        4240,
        0
      ],
      "end_point": [
        4257,
        1
      ],
      "strings": []
    },
    "match_ctx_add_subtop": {
      "start_point": [
        4262,
        0
      ],
      "end_point": [
        4287,
        1
      ],
      "strings": []
    },
    "match_ctx_add_sublast": {
      "start_point": [
        4292,
        0
      ],
      "end_point": [
        4316,
        1
      ],
      "strings": []
    },
    "sift_ctx_init": {
      "start_point": [
        4318,
        0
      ],
      "end_point": [
        4327,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/regex_internal.c": {
    "re_string_allocate": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "re_string_construct": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    },
    "re_string_realloc_buffers": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "re_string_construct_common": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": []
    },
    "build_wcs_buffer": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    },
    "build_wcs_upper_buffer": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        478,
        1
      ],
      "strings": []
    },
    "re_string_skip_chars": {
      "start_point": [
        483,
        0
      ],
      "end_point": [
        517,
        1
      ],
      "strings": []
    },
    "build_upper_buffer": {
      "start_point": [
        523,
        0
      ],
      "end_point": [
        538,
        1
      ],
      "strings": []
    },
    "re_string_translate_buffer": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        556,
        1
      ],
      "strings": []
    },
    "re_string_reconstruct": {
      "start_point": [
        562,
        0
      ],
      "end_point": [
        823,
        1
      ],
      "strings": []
    },
    "re_string_peek_byte_case": {
      "start_point": [
        825,
        0
      ],
      "end_point": [
        860,
        1
      ],
      "strings": []
    },
    "re_string_fetch_byte_case": {
      "start_point": [
        862,
        0
      ],
      "end_point": [
        897,
        1
      ],
      "strings": []
    },
    "re_string_destruct": {
      "start_point": [
        899,
        0
      ],
      "end_point": [
        908,
        1
      ],
      "strings": []
    },
    "re_string_context_at": {
      "start_point": [
        912,
        0
      ],
      "end_point": [
        952,
        1
      ],
      "strings": []
    },
    "re_node_set_alloc": {
      "start_point": [
        956,
        0
      ],
      "end_point": [
        966,
        1
      ],
      "strings": []
    },
    "re_node_set_init_1": {
      "start_point": [
        968,
        0
      ],
      "end_point": [
        982,
        1
      ],
      "strings": []
    },
    "re_node_set_init_2": {
      "start_point": [
        984,
        0
      ],
      "end_point": [
        1012,
        1
      ],
      "strings": []
    },
    "re_node_set_init_copy": {
      "start_point": [
        1014,
        0
      ],
      "end_point": [
        1033,
        1
      ],
      "strings": []
    },
    "re_node_set_add_intersect": {
      "start_point": [
        1039,
        0
      ],
      "end_point": [
        1125,
        1
      ],
      "strings": []
    },
    "re_node_set_init_union": {
      "start_point": [
        1130,
        0
      ],
      "end_point": [
        1178,
        1
      ],
      "strings": []
    },
    "re_node_set_merge": {
      "start_point": [
        1183,
        0
      ],
      "end_point": [
        1260,
        1
      ],
      "strings": []
    },
    "re_node_set_insert": {
      "start_point": [
        1266,
        0
      ],
      "end_point": [
        1312,
        1
      ],
      "strings": []
    },
    "re_node_set_insert_last": {
      "start_point": [
        1318,
        0
      ],
      "end_point": [
        1336,
        1
      ],
      "strings": []
    },
    "re_node_set_compare": {
      "start_point": [
        1341,
        0
      ],
      "end_point": [
        1352,
        1
      ],
      "strings": []
    },
    "re_node_set_contains": {
      "start_point": [
        1356,
        0
      ],
      "end_point": [
        1376,
        1
      ],
      "strings": []
    },
    "re_node_set_remove_at": {
      "start_point": [
        1378,
        0
      ],
      "end_point": [
        1386,
        1
      ],
      "strings": []
    },
    "re_dfa_add_node": {
      "start_point": [
        1392,
        0
      ],
      "end_point": [
        1443,
        1
      ],
      "strings": []
    },
    "calc_state_hash": {
      "start_point": [
        1445,
        0
      ],
      "end_point": [
        1453,
        1
      ],
      "strings": []
    },
    "re_acquire_state": {
      "start_point": [
        1464,
        0
      ],
      "end_point": [
        1500,
        1
      ],
      "strings": []
    },
    "re_acquire_state_context": {
      "start_point": [
        1512,
        0
      ],
      "end_point": [
        1547,
        1
      ],
      "strings": []
    },
    "register_state": {
      "start_point": [
        1553,
        0
      ],
      "end_point": [
        1587,
        1
      ],
      "strings": []
    },
    "free_state": {
      "start_point": [
        1589,
        0
      ],
      "end_point": [
        1603,
        1
      ],
      "strings": []
    },
    "create_ci_newstate": {
      "start_point": [
        1608,
        0
      ],
      "end_point": [
        1653,
        1
      ],
      "strings": []
    },
    "create_cd_newstate": {
      "start_point": [
        1658,
        0
      ],
      "end_point": [
        1729,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/regex_internal.h": {
    "bitset_set": {
      "start_point": [
        759,
        0
      ],
      "end_point": [
        763,
        1
      ],
      "strings": []
    },
    "bitset_clear": {
      "start_point": [
        765,
        0
      ],
      "end_point": [
        769,
        1
      ],
      "strings": []
    },
    "bitset_contain": {
      "start_point": [
        771,
        0
      ],
      "end_point": [
        775,
        1
      ],
      "strings": []
    },
    "bitset_empty": {
      "start_point": [
        777,
        0
      ],
      "end_point": [
        781,
        1
      ],
      "strings": []
    },
    "bitset_set_all": {
      "start_point": [
        783,
        0
      ],
      "end_point": [
        790,
        1
      ],
      "strings": []
    },
    "bitset_copy": {
      "start_point": [
        792,
        0
      ],
      "end_point": [
        796,
        1
      ],
      "strings": []
    },
    "bitset_not": {
      "start_point": [
        798,
        0
      ],
      "end_point": [
        808,
        1
      ],
      "strings": []
    },
    "bitset_merge": {
      "start_point": [
        810,
        0
      ],
      "end_point": [
        816,
        1
      ],
      "strings": []
    },
    "bitset_mask": {
      "start_point": [
        818,
        0
      ],
      "end_point": [
        824,
        1
      ],
      "strings": []
    },
    "re_string_char_size_at": {
      "start_point": [
        828,
        0
      ],
      "end_point": [
        839,
        1
      ],
      "strings": []
    },
    "re_string_wchar_at": {
      "start_point": [
        841,
        0
      ],
      "end_point": [
        848,
        1
      ],
      "strings": []
    },
    "re_string_elem_size_at": {
      "start_point": [
        854,
        0
      ],
      "end_point": [
        877,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/remove.c": {
    "rpl_remove": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/rename.c": {
    "rpl_rename": [
      {
        "start_point": [
          44,
          0
        ],
        "end_point": [
          262,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          278,
          0
        ],
        "end_point": [
          473,
          1
        ],
        "strings": []
      }
    ]
  },
  "coreutils/coreutils-8.29/lib/renameat.c": {
    "renameat": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        24,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/renameat2.c": {
    "errno_fail": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "rename_noreplace": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "renameat2": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/renameat2.h": {},
  "coreutils/coreutils-8.29/lib/rewinddir.c": {
    "rewinddir": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/rmdir.c": {
    "rpl_rmdir": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/root-dev-ino.c": {
    "get_root_dev_ino": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": [
        "\"/\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/root-dev-ino.h": {},
  "coreutils/coreutils-8.29/lib/root-uid.h": {},
  "coreutils/coreutils-8.29/lib/rpmatch.c": {
    "localized_pattern": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "try": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "rpmatch": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\"",
        "\"^[yY]\"",
        "\"^[nN]\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/safe-read.c": {
    "safe_rw": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/safe-read.h": {},
  "coreutils/coreutils-8.29/lib/safe-write.c": {},
  "coreutils/coreutils-8.29/lib/safe-write.h": {},
  "coreutils/coreutils-8.29/lib/same-inode.h": {},
  "coreutils/coreutils-8.29/lib/same.c": {
    "same_name": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/same.h": {},
  "coreutils/coreutils-8.29/lib/save-cwd.c": {
    "save_cwd": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": [
        "\".\""
      ]
    },
    "restore_cwd": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "free_cwd": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/save-cwd.h": {},
  "coreutils/coreutils-8.29/lib/savedir.c": {
    "direntry_cmp_name": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "direntry_cmp_inode": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "streamsavedir": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": []
    },
    "savedir": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/savedir.h": {},
  "coreutils/coreutils-8.29/lib/savewd.c": {
    "savewd_save": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": [
        "\".\""
      ]
    },
    "savewd_chdir": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "savewd_restore": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "savewd_finish": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        254,
        1
      ],
      "strings": []
    },
    "savewd_delegating": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    },
    "savewd_process_files": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/savewd.h": {
    "savewd_init": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "savewd_errno": {
      "start_point": [
        122,
        18
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sched.in.h": {},
  "coreutils/coreutils-8.29/lib/se-context.c": {},
  "coreutils/coreutils-8.29/lib/se-context.in.h": {
    "context_new": {
      "start_point": [
        16,
        0
      ],
      "end_point": [
        17,
        32
      ],
      "strings": []
    },
    "context_str": {
      "start_point": [
        18,
        0
      ],
      "end_point": [
        19,
        41
      ],
      "strings": []
    },
    "context_free": {
      "start_point": [
        20,
        0
      ],
      "end_point": [
        20,
        73
      ],
      "strings": []
    },
    "context_user_set": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        24,
        33
      ],
      "strings": []
    },
    "context_role_set": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        27,
        33
      ],
      "strings": []
    },
    "context_range_set": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        30,
        33
      ],
      "strings": []
    },
    "context_type_set": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        33,
        33
      ],
      "strings": []
    },
    "context_type_get": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        35,
        41
      ],
      "strings": []
    },
    "context_range_get": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        37,
        41
      ],
      "strings": []
    },
    "context_role_get": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        39,
        41
      ],
      "strings": []
    },
    "context_user_get": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        41,
        41
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/se-selinux.c": {},
  "coreutils/coreutils-8.29/lib/se-selinux.in.h": {
    "getcon": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        50,
        33
      ],
      "strings": []
    },
    "freecon": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        52,
        56
      ],
      "strings": []
    },
    "getfscreatecon": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        56,
        33
      ],
      "strings": []
    },
    "setfscreatecon": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        59,
        33
      ],
      "strings": []
    },
    "matchpathcon": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        64,
        33
      ],
      "strings": []
    },
    "getfilecon": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        68,
        33
      ],
      "strings": []
    },
    "lgetfilecon": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        72,
        33
      ],
      "strings": []
    },
    "fgetfilecon": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        75,
        33
      ],
      "strings": []
    },
    "setfilecon": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        79,
        33
      ],
      "strings": []
    },
    "lsetfilecon": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        83,
        33
      ],
      "strings": []
    },
    "fsetfilecon": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        87,
        33
      ],
      "strings": []
    },
    "security_check_context": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        91,
        33
      ],
      "strings": []
    },
    "security_check_context_raw": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        94,
        33
      ],
      "strings": []
    },
    "setexeccon": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        97,
        33
      ],
      "strings": []
    },
    "security_compute_create": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        103,
        33
      ],
      "strings": []
    },
    "string_to_security_class": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        106,
        32
      ],
      "strings": []
    },
    "matchpathcon_init_prefix": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        110,
        33
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/select.c": {
    "IsConsoleHandle": {
      "start_point": [
        88,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    },
    "IsSocketHandle": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "windows_poll_handle": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": [
        "\"ntdll.dll\"",
        "\"NtQueryInformationFile\""
      ]
    },
    "rpl_select": {
      "start_point": [
        546,
        0
      ],
      "end_point": [
        576,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/selinux-at.c": {},
  "coreutils/coreutils-8.29/lib/selinux-at.h": {},
  "coreutils/coreutils-8.29/lib/set-acl.c": {
    "set_acl": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": [
        "\"setting permissions for %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/set-permissions.c": {
    "acl_from_mode": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": [
        "\"u::---,g::---,o::---,\"",
        "\"u::---,g::---,o::---\""
      ]
    },
    "set_acls_from_mode": [
      {
        "start_point": [
          54,
          0
        ],
        "end_point": [
          273,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          330,
          0
        ],
        "end_point": [
          441,
          1
        ],
        "strings": []
      }
    ],
    "context_acl_from_mode": [
      {
        "start_point": [
          276,
          0
        ],
        "end_point": [
          300,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          444,
          0
        ],
        "end_point": [
          454,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          457,
          0
        ],
        "end_point": [
          480,
          1
        ],
        "strings": []
      }
    ],
    "context_aclv_from_mode": {
      "start_point": [
        303,
        0
      ],
      "end_point": [
        326,
        1
      ],
      "strings": []
    },
    "set_acls": {
      "start_point": [
        483,
        0
      ],
      "end_point": [
        749,
        1
      ],
      "strings": []
    },
    "chmod_or_fchmod": {
      "start_point": [
        758,
        0
      ],
      "end_point": [
        765,
        1
      ],
      "strings": []
    },
    "set_permissions": {
      "start_point": [
        774,
        0
      ],
      "end_point": [
        846,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/setenv.c": {
    "__add_to_environ": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": [
        "\"=\"",
        "\"=\""
      ]
    },
    "setenv": {
      "start_point": [
        289,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": []
    },
    "clearenv": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    },
    "free_mem": {
      "start_point": [
        325,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "rpl_setenv": {
      "start_point": [
        357,
        0
      ],
      "end_point": [
        387,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/settime.c": {
    "settime": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sha1.c": {
    "sha1_init_ctx": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "set_uint32": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "sha1_read_ctx": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "sha1_finish_ctx": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "sha1_stream": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": []
    },
    "sha1_buffer": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    },
    "sha1_process_bytes": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        284,
        1
      ],
      "strings": []
    },
    "sha1_process_block": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        434,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sha1.h": {},
  "coreutils/coreutils-8.29/lib/sha256.c": {
    "sha256_init_ctx": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "sha224_init_ctx": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "set_uint32": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "sha256_read_ctx": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "sha224_read_ctx": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "sha256_conclude_ctx": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "sha256_finish_ctx": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    },
    "sha224_finish_ctx": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    },
    "sha256_stream": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    },
    "sha224_stream": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": []
    },
    "sha256_buffer": {
      "start_point": [
        320,
        0
      ],
      "end_point": [
        333,
        1
      ],
      "strings": []
    },
    "sha224_buffer": {
      "start_point": [
        335,
        0
      ],
      "end_point": [
        348,
        1
      ],
      "strings": []
    },
    "sha256_process_bytes": {
      "start_point": [
        350,
        0
      ],
      "end_point": [
        417,
        1
      ],
      "strings": []
    },
    "sha256_process_block": {
      "start_point": [
        450,
        0
      ],
      "end_point": [
        577,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sha256.h": {},
  "coreutils/coreutils-8.29/lib/sha512.c": {
    "sha512_init_ctx": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "sha384_init_ctx": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "set_uint64": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "sha512_read_ctx": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "sha384_read_ctx": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "sha512_conclude_ctx": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "sha512_finish_ctx": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "sha384_finish_ctx": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    },
    "sha512_stream": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": []
    },
    "sha384_stream": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        321,
        1
      ],
      "strings": []
    },
    "sha512_buffer": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        341,
        1
      ],
      "strings": []
    },
    "sha384_buffer": {
      "start_point": [
        343,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": []
    },
    "sha512_process_bytes": {
      "start_point": [
        358,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": []
    },
    "sha512_process_block": {
      "start_point": [
        482,
        0
      ],
      "end_point": [
        629,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sha512.h": {},
  "coreutils/coreutils-8.29/lib/sig-handler.c": {},
  "coreutils/coreutils-8.29/lib/sig-handler.h": {
    "get_handler": {
      "start_point": [
        36,
        32
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sig2str.c": {
    "str2signum": {
      "start_point": [
        259,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": [
        "\"RTMIN\"",
        "\"RTMAX\""
      ]
    },
    "str2sig": {
      "start_point": [
        302,
        0
      ],
      "end_point": [
        307,
        1
      ],
      "strings": []
    },
    "sig2str": {
      "start_point": [
        313,
        0
      ],
      "end_point": [
        348,
        1
      ],
      "strings": [
        "\"RTMIN\"",
        "\"RTMAX\"",
        "\"%+d\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/sig2str.h": {},
  "coreutils/coreutils-8.29/lib/sigaction.c": {
    "sigaction_handler": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    },
    "sigaction": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/siglist.h": {},
  "coreutils/coreutils-8.29/lib/signal.in.h": {},
  "coreutils/coreutils-8.29/lib/signbitd.c": {
    "gl_signbitd": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/signbitf.c": {
    "gl_signbitf": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/signbitl.c": {
    "gl_signbitl": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sigprocmask.c": {
    "signal_nothrow": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        73,
        5
      ],
      "strings": []
    },
    "ext_signal": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "sigismember": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "sigemptyset": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "sigaddset": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": []
    },
    "sigdelset": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "sigfillset": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    },
    "blocked_handler": {
      "start_point": [
        190,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": []
    },
    "sigpending": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    },
    "sigprocmask": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": []
    },
    "rpl_signal": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        329,
        1
      ],
      "strings": []
    },
    "_gl_raise_SIGPIPE": {
      "start_point": [
        333,
        0
      ],
      "end_point": [
        347,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/size_max.h": {},
  "coreutils/coreutils-8.29/lib/smack.h": {
    "smack_new_label_from_self": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        28,
        1
      ],
      "strings": []
    },
    "smack_set_label_for_self": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    },
    "is_smack_enabled": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/snprintf.c": {
    "snprintf": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sockets.c": {
    "close_fd_maybe_socket": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "ioctl_fd_maybe_socket": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": []
    },
    "gl_sockets_startup": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "gl_sockets_cleanup": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sockets.h": {
    "gl_fd_to_handle": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/stat-macros.h": {},
  "coreutils/coreutils-8.29/lib/stat-size.h": {},
  "coreutils/coreutils-8.29/lib/stat-time.c": {},
  "coreutils/coreutils-8.29/lib/stat-time.h": {
    "get_stat_atime_ns": {
      "start_point": [
        64,
        26
      ],
      "end_point": [
        74,
        1
      ],
      "strings": []
    },
    "get_stat_ctime_ns": {
      "start_point": [
        77,
        26
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "get_stat_mtime_ns": {
      "start_point": [
        90,
        26
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "get_stat_birthtime_ns": {
      "start_point": [
        103,
        26
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "get_stat_atime": {
      "start_point": [
        118,
        28
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "get_stat_ctime": {
      "start_point": [
        132,
        28
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    },
    "get_stat_mtime": {
      "start_point": [
        146,
        28
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "get_stat_birthtime": {
      "start_point": [
        161,
        28
      ],
      "end_point": [
        206,
        1
      ],
      "strings": []
    },
    "stat_time_normalize": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/stat-w32.c": {
    "initialize": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": [
        "\"kernel32.dll\"",
        "\"GetFileInformationByHandleEx\"",
        "\"GetFinalPathNameByHandleA\""
      ]
    },
    "_gl_convert_FILETIME_to_timespec": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "_gl_convert_FILETIME_to_POSIX": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "_gl_fstat_by_handle": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        412,
        1
      ],
      "strings": [
        "\"exe\"",
        "\"bat\"",
        "\"cmd\"",
        "\"com\"",
        "\"_gl_fstat_by_handle error 0x%x\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/stat-w32.h": {},
  "coreutils/coreutils-8.29/lib/stat.c": {
    "orig_stat": {
      "start_point": [
        35,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "is_unc_root": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "rpl_stat": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        428,
        1
      ],
      "strings": [
        "\"exe\"",
        "\"bat\"",
        "\"cmd\"",
        "\"com\"",
        "\"rpl_stat error 0x%x\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/statat.c": {},
  "coreutils/coreutils-8.29/lib/stdalign.in.h": {},
  "coreutils/coreutils-8.29/lib/stdarg.in.h": {},
  "coreutils/coreutils-8.29/lib/stdbool.in.h": {},
  "coreutils/coreutils-8.29/lib/stddef.in.h": {},
  "coreutils/coreutils-8.29/lib/stdint.in.h": {},
  "coreutils/coreutils-8.29/lib/stdio--.h": {},
  "coreutils/coreutils-8.29/lib/stdio-impl.h": {},
  "coreutils/coreutils-8.29/lib/stdio-safer.h": {},
  "coreutils/coreutils-8.29/lib/stdio.in.h": {},
  "coreutils/coreutils-8.29/lib/stdlib--.h": {},
  "coreutils/coreutils-8.29/lib/stdlib-safer.h": {},
  "coreutils/coreutils-8.29/lib/stdlib.in.h": {},
  "coreutils/coreutils-8.29/lib/stpcpy.c": {
    "__stpcpy": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/stpncpy.c": {
    "__stpncpy": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/str-kmp.h": {
    "knuth_morris_pratt": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/str-two-way.h": {
    "critical_factorization": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        221,
        1
      ],
      "strings": []
    },
    "two_way_short_needle": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": []
    },
    "two_way_long_needle": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        445,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strdup.c": {
    "__strdup": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/streq.h": {
    "streq9": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "streq8": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "streq7": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "streq6": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "streq5": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "streq4": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "streq3": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "streq2": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "streq1": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "streq0": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strerror-override.c": {
    "strerror_override": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": [
        "\"Success\"",
        "\"Operation now in progress\"",
        "\"Operation already in progress\"",
        "\"Socket operation on non-socket\"",
        "\"Destination address required\"",
        "\"Message too long\"",
        "\"Protocol wrong type for socket\"",
        "\"Protocol not available\"",
        "\"Protocol not supported\"",
        "\"Operation not supported\"",
        "\"Address family not supported by protocol\"",
        "\"Address already in use\"",
        "\"Cannot assign requested address\"",
        "\"Network is down\"",
        "\"Network is unreachable\"",
        "\"Connection reset by peer\"",
        "\"No buffer space available\"",
        "\"Transport endpoint is already connected\"",
        "\"Transport endpoint is not connected\"",
        "\"Connection timed out\"",
        "\"Connection refused\"",
        "\"Too many levels of symbolic links\"",
        "\"No route to host\"",
        "\"Operation would block\"",
        "\"Text file busy\"",
        "\"No data available\"",
        "\"Out of streams resources\"",
        "\"Device not a stream\"",
        "\"Timer expired\"",
        "\"Other error\"",
        "\"Socket type not supported\"",
        "\"Protocol family not supported\"",
        "\"Cannot send after transport endpoint shutdown\"",
        "\"Too many references: cannot splice\"",
        "\"Host is down\"",
        "\"Too many processes\"",
        "\"Too many users\"",
        "\"Disk quota exceeded\"",
        "\"Stale NFS file handle\"",
        "\"Object is remote\"",
        "\"Overlapped operation aborted\"",
        "\"Overlapped I/O event object not in signaled state\"",
        "\"Overlapped operations will complete later\"",
        "\"Network subsystem is unavailable\"",
        "\"Winsock.dll version out of range\"",
        "\"Successful WSAStartup not yet performed\"",
        "\"Graceful shutdown in progress\"",
        "\"No more results\"",
        "\"Call was canceled\"",
        "\"Procedure call table is invalid\"",
        "\"Service provider is invalid\"",
        "\"Service provider failed to initialize\"",
        "\"System call failure\"",
        "\"Service not found\"",
        "\"Class type not found\"",
        "\"Database query was refused\"",
        "\"Host not found\"",
        "\"Nonauthoritative host not found\"",
        "\"Nonrecoverable error\"",
        "\"Valid name, no data record of requested type\"",
        "\"No message of desired type\"",
        "\"Identifier removed\"",
        "\"Link has been severed\"",
        "\"Protocol error\"",
        "\"Multihop attempted\"",
        "\"Bad message\"",
        "\"Value too large for defined data type\"",
        "\"Not supported\"",
        "\"Network dropped connection on reset\"",
        "\"Software caused connection abort\"",
        "\"Stale NFS file handle\"",
        "\"Disk quota exceeded\"",
        "\"Operation canceled\"",
        "\"Owner died\"",
        "\"State not recoverable\"",
        "\"Invalid or incomplete multibyte or wide character\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/strerror-override.h": {},
  "coreutils/coreutils-8.29/lib/strerror.c": {},
  "coreutils/coreutils-8.29/lib/strftime.h": {},
  "coreutils/coreutils-8.29/lib/striconv.c": {
    "mem_cd_iconv": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "str_cd_iconv": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": []
    },
    "str_iconv": {
      "start_point": [
        399,
        0
      ],
      "end_point": [
        462,
        1
      ],
      "strings": [
        "\"EUC-KR\"",
        "\"EUC-KR\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/striconv.h": {},
  "coreutils/coreutils-8.29/lib/string.in.h": {},
  "coreutils/coreutils-8.29/lib/strintcmp.c": {
    "strintcmp": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        31,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/stripslash.c": {
    "strip_trailing_slashes": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strncat.c": {
    "strncat": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strndup.c": {
    "strndup": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strnlen.c": {
    "strnlen": {
      "start_point": [
        24,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strnlen1.c": {
    "strnlen1": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        34,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strnlen1.h": {},
  "coreutils/coreutils-8.29/lib/strnumcmp-in.h": {
    "fraccompare": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_PURE": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strnumcmp.c": {
    "_GL_ATTRIBUTE_PURE": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strnumcmp.h": {},
  "coreutils/coreutils-8.29/lib/strpbrk.c": {
    "strpbrk": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strsignal.c": {
    "strsignal": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": [
        "\"Real-time signal %d\"",
        "\"Unknown signal %d\""
      ]
    },
    "init": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": [
        "\"siglist.h\""
      ]
    },
    "free_key_mem": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "getbuffer": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strstr.c": {
    "strstr": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strtod.c": {
    "locale_isspace": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "ldexp": {
      "start_point": [
        46,
        1
      ],
      "end_point": [
        50,
        2
      ],
      "strings": []
    },
    "scale_radix_exp": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "parse_number": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "compute_minus_zero": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    },
    "strtod": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": []
    },
    "underlying_strtod": {
      "start_point": [
        349,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strtoimax.c": {
    "Strtoimax": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strtol.c": {
    "INTERNAL": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        408,
        1
      ],
      "strings": []
    },
    "strtol": {
      "start_point": [
        415,
        0
      ],
      "end_point": [
        421,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/strtoll.c": {},
  "coreutils/coreutils-8.29/lib/strtoul.c": {},
  "coreutils/coreutils-8.29/lib/strtoull.c": {},
  "coreutils/coreutils-8.29/lib/strtoumax.c": {},
  "coreutils/coreutils-8.29/lib/symlink.c": {
    "rpl_symlink": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "symlink": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/symlinkat.c": {
    "rpl_symlinkat": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    },
    "symlinkat": [
      {
        "start_point": [
          48,
          0
        ],
        "end_point": [
          54,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          89,
          0
        ],
        "end_point": [
          93,
          1
        ],
        "strings": []
      }
    ],
    "symlink_reversed": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sys_ioctl.in.h": {},
  "coreutils/coreutils-8.29/lib/sys_resource.in.h": {},
  "coreutils/coreutils-8.29/lib/sys_select.in.h": {
    "rpl_fd_isset": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sys_socket.c": {},
  "coreutils/coreutils-8.29/lib/sys_socket.in.h": {
    "rpl_fd_isset": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sys_stat.in.h": {
    "rpl_mkdir": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        585,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sys_time.in.h": {
    "GNULIB_NAMESPACE": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/sys_types.in.h": {},
  "coreutils/coreutils-8.29/lib/sys_uio.in.h": {},
  "coreutils/coreutils-8.29/lib/sys_utsname.in.h": {},
  "coreutils/coreutils-8.29/lib/sys_wait.in.h": {},
  "coreutils/coreutils-8.29/lib/tempname.c": {
    "direxists": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "__path_search": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": [
        "\"file\"",
        "\"TMPDIR\"",
        "\"/tmp\"",
        "\"/tmp\"",
        "\"/tmp\"",
        "\"%.*s/%.*sXXXXXX\""
      ]
    },
    "check_x_suffix": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"X\""
      ]
    },
    "try_tempname_len": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        264,
        1
      ],
      "strings": []
    },
    "try_file": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "try_dir": {
      "start_point": [
        275,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": []
    },
    "try_nocreate": {
      "start_point": [
        281,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": []
    },
    "gen_tempname_len": {
      "start_point": [
        305,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": [
        "\"invalid KIND in __gen_tempname\""
      ]
    },
    "__gen_tempname": {
      "start_point": [
        332,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": []
    },
    "__try_tempname": {
      "start_point": [
        338,
        0
      ],
      "end_point": [
        343,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/tempname.h": {},
  "coreutils/coreutils-8.29/lib/termios.in.h": {},
  "coreutils/coreutils-8.29/lib/time-internal.h": {},
  "coreutils/coreutils-8.29/lib/time.in.h": {},
  "coreutils/coreutils-8.29/lib/timegm.c": {
    "timegm": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/timespec.c": {},
  "coreutils/coreutils-8.29/lib/timespec.h": {
    "make_timespec": {
      "start_point": [
        45,
        27
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "timespec_cmp": {
      "start_point": [
        80,
        24
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "timespec_sign": {
      "start_point": [
        98,
        24
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "timespectod": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/time_r.c": {
    "copy_tm_result": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        30,
        1
      ],
      "strings": []
    },
    "gmtime_r": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "localtime_r": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/time_rz.c": {
    "isdst_differ": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "equal_tm": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "extend_abbrs": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "tzalloc": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "save_abbr": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        191,
        1
      ],
      "strings": [
        "\"\""
      ]
    },
    "tzfree": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "getenv_TZ": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": [
        "\"TZ\""
      ]
    },
    "setenv_TZ": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": [
        "\"TZ\"",
        "\"TZ\""
      ]
    },
    "change_env": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": []
    },
    "set_tz": {
      "start_point": [
        240,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": []
    },
    "revert_tz": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        282,
        1
      ],
      "strings": []
    },
    "localtime_rz": {
      "start_point": [
        285,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": []
    },
    "mktime_z": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        328,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/trim.c": {
    "trim2": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/trim.h": {},
  "coreutils/coreutils-8.29/lib/tzset.c": {},
  "coreutils/coreutils-8.29/lib/u64.c": {},
  "coreutils/coreutils-8.29/lib/u64.h": {
    "u64hilo": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "u64lo": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "u64size": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "u64lt": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "u64and": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "u64or": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "u64xor": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    },
    "u64plus": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "u64shl": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "u64shr": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/uinttostr.c": {},
  "coreutils/coreutils-8.29/lib/umaxtostr.c": {},
  "coreutils/coreutils-8.29/lib/uname.c": {
    "uname": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": [
        "\"localhost\"",
        "\"NT\"",
        "\"CE\"",
        "\"95\"",
        "\"98\"",
        "\"ME\"",
        "\"\"",
        "\"\"",
        "\"MINGW32_%s-%u.%u\"",
        "\"Windows%s\"",
        "\"Windows NT Workstation\"",
        "\"Windows NT Server\"",
        "\"Windows NT Workstation\"",
        "\"Windows NT Server\"",
        "\"Windows 2000\"",
        "\"Windows XP\"",
        "\"Windows Server 2003\"",
        "\"Windows Vista\"",
        "\"Windows Server 2008\"",
        "\"Windows 7\"",
        "\"Windows Server 2008 R2\"",
        "\"Windows\"",
        "\"Windows Server\"",
        "\"%s %u.%u\"",
        "\"Windows CE %u.%u\"",
        "\"Windows %s\"",
        "\"x86_64\"",
        "\"ia64\"",
        "\"i386\"",
        "\"i686\"",
        "\"mips\"",
        "\"alpha\"",
        "\"powerpc\"",
        "\"sh\"",
        "\"arm\"",
        "\"unknown\"",
        "\"x86_64\"",
        "\"ia64\"",
        "\"i%u\"",
        "\"unknown\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/unicodeio.c": {
    "unicode_to_mb": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": [
        "\"ASCII\"",
        "\"iconv function not usable\"",
        "\"iconv function not available\"",
        "\"character out of range\""
      ]
    },
    "fwrite_success_callback": {
      "start_point": [
        161,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "exit_failure_callback": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": [
        "\"cannot convert U+%04X to local character set\"",
        "\"cannot convert U+%04X to local character set: %s\""
      ]
    },
    "fallback_failure_callback": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": [
        "\"\\\\u%04X\"",
        "\"\\\\U%08X\""
      ]
    },
    "print_unicode_char": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/unicodeio.h": {},
  "coreutils/coreutils-8.29/lib/unistd--.h": {},
  "coreutils/coreutils-8.29/lib/unistd-safer.h": {},
  "coreutils/coreutils-8.29/lib/unistd.c": {},
  "coreutils/coreutils-8.29/lib/unistd.in.h": {
    "rpl_environ": {
      "start_point": [
        426,
        0
      ],
      "end_point": [
        430,
        1
      ],
      "strings": []
    },
    "getpagesize": {
      "start_point": [
        905,
        0
      ],
      "end_point": [
        909,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/unistr.in.h": {
    "u8_mbtouc_unsafe": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    },
    "u16_mbtouc_unsafe": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    },
    "u32_mbtouc_unsafe": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    },
    "u8_mbtouc": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    },
    "u16_mbtouc": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": []
    },
    "u32_mbtouc": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        271,
        1
      ],
      "strings": []
    },
    "u8_uctomb": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    },
    "u16_uctomb": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        344,
        1
      ],
      "strings": []
    },
    "u32_uctomb": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/unitypes.in.h": {},
  "coreutils/coreutils-8.29/lib/uniwidth.in.h": {},
  "coreutils/coreutils-8.29/lib/unlink.c": {
    "rpl_unlink": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/unlinkat.c": {
    "rpl_unlinkat": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/unlocked-io.h": {},
  "coreutils/coreutils-8.29/lib/unsetenv.c": {
    "unsetenv": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "rpl_unsetenv": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/unused-parameter.h": {},
  "coreutils/coreutils-8.29/lib/userspec.c": {
    "is_number": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "parse_with_separator": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"invalid user\"",
        "\"invalid group\"",
        "\"invalid spec\"",
        "\"USER\"",
        "\"GROUP\"",
        "\"\"",
        "\"\""
      ]
    },
    "parse_user_spec": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        286,
        0
      ],
      "end_point": [
        312,
        1
      ],
      "strings": [
        "\"%s: %lu %lu %s %s %s\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/userspec.h": {},
  "coreutils/coreutils-8.29/lib/utime.c": {
    "_gl_utimens_windows": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"utimens SetFileTime error 0x%x\\n\"",
        "\"utimens CreateFile/GetFileAttributes error 0x%x\\n\""
      ]
    },
    "utime": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/utime.in.h": {},
  "coreutils/coreutils-8.29/lib/utimecmp.c": {
    "dev_info_hash": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "dev_info_compare": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "utimecmp": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/utimecmp.h": {},
  "coreutils/coreutils-8.29/lib/utimens.c": {
    "validate_timespec": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": []
    },
    "update_timespec": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "fdutimens": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        500,
        1
      ],
      "strings": [
        "\"fdutimens SetFileTime error 0x%x\\n\""
      ]
    },
    "utimens": {
      "start_point": [
        504,
        0
      ],
      "end_point": [
        508,
        1
      ],
      "strings": []
    },
    "lutimens": {
      "start_point": [
        514,
        0
      ],
      "end_point": [
        630,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/utimens.h": {
    "lutimensat": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/utimensat.c": {
    "rpl_utimensat": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/vasnprintf.c": {
    "local_strnlen": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": []
    },
    "local_wcslen": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    },
    "local_wcsnlen": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        274,
        1
      ],
      "strings": []
    },
    "decimal_point_char": {
      "start_point": [
        283,
        0
      ],
      "end_point": [
        302,
        1
      ],
      "strings": [
        "\"%#.0f\""
      ]
    },
    "is_infinite_or_zero": {
      "start_point": [
        309,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": []
    },
    "is_infinite_or_zerol": {
      "start_point": [
        320,
        0
      ],
      "end_point": [
        324,
        1
      ],
      "strings": []
    },
    "multiply": {
      "start_point": [
        352,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": []
    },
    "divide": {
      "start_point": [
        424,
        0
      ],
      "end_point": [
        847,
        1
      ],
      "strings": []
    },
    "convert_to_decimal": {
      "start_point": [
        855,
        0
      ],
      "end_point": [
        901,
        1
      ],
      "strings": []
    },
    "decode_long_double": {
      "start_point": [
        909,
        0
      ],
      "end_point": [
        987,
        1
      ],
      "strings": []
    },
    "decode_double": {
      "start_point": [
        997,
        0
      ],
      "end_point": [
        1072,
        1
      ],
      "strings": []
    },
    "scale10_round_decimal_decoded": {
      "start_point": [
        1081,
        0
      ],
      "end_point": [
        1294,
        1
      ],
      "strings": []
    },
    "scale10_round_decimal_long_double": {
      "start_point": [
        1303,
        0
      ],
      "end_point": [
        1310,
        1
      ],
      "strings": []
    },
    "scale10_round_decimal_double": {
      "start_point": [
        1321,
        0
      ],
      "end_point": [
        1328,
        1
      ],
      "strings": []
    },
    "floorlog10l": {
      "start_point": [
        1337,
        0
      ],
      "end_point": [
        1419,
        1
      ],
      "strings": []
    },
    "floorlog10": {
      "start_point": [
        1428,
        0
      ],
      "end_point": [
        1510,
        1
      ],
      "strings": []
    },
    "is_borderline": {
      "start_point": [
        1516,
        0
      ],
      "end_point": [
        1526,
        1
      ],
      "strings": []
    },
    "MAX_ROOM_NEEDED": {
      "start_point": [
        1543,
        0
      ],
      "end_point": [
        1778,
        1
      ],
      "strings": []
    },
    "xsum": {
      "start_point": [
        4625,
        16
      ],
      "end_point": [
        5554,
        15
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/vasnprintf.h": {},
  "coreutils/coreutils-8.29/lib/vasprintf.c": {
    "vasprintf": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/verify.h": {},
  "coreutils/coreutils-8.29/lib/verror.c": {
    "verror": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "verror_at_line": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s\"",
        "\"unable to display error message\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/verror.h": {},
  "coreutils/coreutils-8.29/lib/version-etc-fsf.c": {},
  "coreutils/coreutils-8.29/lib/version-etc.c": {
    "version_etc_arn": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": [
        "\"%s (%s) %s\\n\"",
        "\"%s %s\\n\"",
        "\"Packaged by %s (%s)\\n\"",
        "\"Packaged by %s\\n\"",
        "\"(C)\"",
        "\"\\\n\\n\\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\n\\\nThis is free software: you are free to change and redistribute it.\\n\\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\\n\\n\\\n\"",
        "\"Written by %s.\\n\"",
        "\"Written by %s and %s.\\n\"",
        "\"Written by %s, %s, and %s.\\n\"",
        "\"Written by %s, %s, %s,\\nand %s.\\n\"",
        "\"Written by %s, %s, %s,\\n%s, and %s.\\n\"",
        "\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\"",
        "\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\"",
        "\"\\\nWritten by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\"",
        "\"\\\nWritten by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\"",
        "\"\\\nWritten by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\""
      ]
    },
    "version_etc_ar": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "version_etc_va": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": []
    },
    "version_etc": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": []
    },
    "emit_bug_reporting_address": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        257,
        1
      ],
      "strings": [
        "\"\\nReport bugs to: %s\\n\"",
        "\"Report %s bugs to: %s\\n\"",
        "\"%s home page: <%s>\\n\"",
        "\"%s home page: <https://www.gnu.org/software/%s/>\\n\"",
        "\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/version-etc.h": {},
  "coreutils/coreutils-8.29/lib/vfprintf.c": {
    "vfprintf": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/vprintf.c": {
    "vprintf": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/w32sock.h": {
    "set_winsock_errno": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/warn-on-use.h": {},
  "coreutils/coreutils-8.29/lib/wchar.in.h": {},
  "coreutils/coreutils-8.29/lib/wcrtomb.c": {
    "wcrtomb": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/wcswidth-impl.h": {
    "wcswidth": {
      "start_point": [
        17,
        0
      ],
      "end_point": [
        42,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/wcswidth.c": {},
  "coreutils/coreutils-8.29/lib/wctype-h.c": {},
  "coreutils/coreutils-8.29/lib/wctype.in.h": {
    "rpl_towlower": {
      "start_point": [
        371,
        0
      ],
      "end_point": [
        375,
        1
      ],
      "strings": []
    },
    "rpl_towupper": {
      "start_point": [
        380,
        0
      ],
      "end_point": [
        384,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/wcwidth.c": {},
  "coreutils/coreutils-8.29/lib/write-any-file.c": {
    "can_write_any_file": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/write-any-file.h": {},
  "coreutils/coreutils-8.29/lib/write.c": {
    "write_nothrow": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        56,
        5
      ],
      "strings": []
    },
    "rpl_write": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xalloc-die.c": {
    "xalloc_die": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"memory exhausted\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/xalloc-oversized.h": {},
  "coreutils/coreutils-8.29/lib/xalloc.h": {
    "xnmalloc": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    },
    "xnrealloc": [
      {
        "start_point": [
          116,
          0
        ],
        "end_point": [
          122,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          239,
          29
        ],
        "end_point": [
          243,
          1
        ],
        "strings": []
      }
    ],
    "x2nrealloc": [
      {
        "start_point": [
          178,
          0
        ],
        "end_point": [
          213,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          251,
          29
        ],
        "end_point": [
          255,
          1
        ],
        "strings": []
      }
    ],
    "xcharalloc": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    },
    "xrealloc": {
      "start_point": [
        233,
        29
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "x2realloc": {
      "start_point": [
        245,
        29
      ],
      "end_point": [
        249,
        1
      ],
      "strings": []
    },
    "xmemdup": {
      "start_point": [
        257,
        29
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xasprintf.c": {
    "xasprintf": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xbinary-io.c": {
    "xset_binary_mode_error": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": [
        "\"failed to set file descriptor text/binary mode\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/xbinary-io.h": {
    "xset_binary_mode_error": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        32,
        55
      ],
      "strings": []
    },
    "xset_binary_mode": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xdectoimax.c": {},
  "coreutils/coreutils-8.29/lib/xdectoint.c": {
    "__xnumtoint": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": [
        "\"%s: %s\""
      ]
    },
    "__xdectoint": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xdectoint.h": {},
  "coreutils/coreutils-8.29/lib/xdectoumax.c": {},
  "coreutils/coreutils-8.29/lib/xfts.c": {
    "xfts_open": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "cycle_warning_required": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xfts.h": {},
  "coreutils/coreutils-8.29/lib/xgetcwd.c": {
    "xgetcwd": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xgetcwd.h": {},
  "coreutils/coreutils-8.29/lib/xgetgroups.c": {
    "xgetgroups": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xgethostname.c": {
    "xgethostname": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xgethostname.h": {},
  "coreutils/coreutils-8.29/lib/xmalloc.c": {
    "xmalloc": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "xrealloc": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "x2realloc": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "xzalloc": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "xcalloc": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "xmemdup": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "xstrdup": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xmemcoll.c": {
    "collate_error": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": [
        "\"string comparison failed\"",
        "\"Set LC_ALL='C' to work around the problem.\"",
        "\"The strings compared were %s and %s.\""
      ]
    },
    "xmemcoll": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "xmemcoll0": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xmemcoll.h": {},
  "coreutils/coreutils-8.29/lib/xnanosleep.c": {
    "xnanosleep": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xnanosleep.h": {},
  "coreutils/coreutils-8.29/lib/xprintf.c": {
    "xprintf": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": []
    },
    "xvprintf": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": [
        "\"cannot perform formatted output\""
      ]
    },
    "xfprintf": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "xvfprintf": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"cannot perform formatted output\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/xprintf.h": {},
  "coreutils/coreutils-8.29/lib/xreadlink.c": {
    "xreadlink": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xreadlink.h": {},
  "coreutils/coreutils-8.29/lib/xsize.c": {},
  "coreutils/coreutils-8.29/lib/xsize.h": {
    "size_t": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "__pure__": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xstriconv.c": {
    "xmem_cd_iconv": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        39,
        1
      ],
      "strings": []
    },
    "xstr_cd_iconv": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "xstr_iconv": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xstriconv.h": {},
  "coreutils/coreutils-8.29/lib/xstrndup.c": {
    "xstrndup": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xstrndup.h": {},
  "coreutils/coreutils-8.29/lib/xstrtod.c": {
    "XSTRTOD": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xstrtod.h": {},
  "coreutils/coreutils-8.29/lib/xstrtoimax.c": {},
  "coreutils/coreutils-8.29/lib/xstrtol-error.c": {
    "xstrtol_error": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": [
        "\"--\"",
        "\"invalid %s%s argument '%s'\"",
        "\"invalid suffix in %s%s argument '%s'\"",
        "\"%s%s argument '%s' too large\""
      ]
    },
    "xstrtol_fatal": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xstrtol.c": {
    "bkm_scale": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "bkm_scale_by_power": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "__xstrtol": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xstrtol.h": {},
  "coreutils/coreutils-8.29/lib/xstrtold.c": {},
  "coreutils/coreutils-8.29/lib/xstrtoul.c": {},
  "coreutils/coreutils-8.29/lib/xstrtoumax.c": {},
  "coreutils/coreutils-8.29/lib/xtime.c": {},
  "coreutils/coreutils-8.29/lib/xtime.h": {
    "xtime_make": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "xtime_nonnegative_sec": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "xtime_sec": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    },
    "xtime_nonnegative_nsec": {
      "start_point": [
        81,
        18
      ],
      "end_point": [
        85,
        1
      ],
      "strings": []
    },
    "xtime_nsec": {
      "start_point": [
        88,
        18
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xvasprintf.c": {
    "xstrcat": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "xvasprintf": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/xvasprintf.h": {},
  "coreutils/coreutils-8.29/lib/yesno.c": {
    "yesno": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/yesno.h": {},
  "coreutils/coreutils-8.29/lib/_Noreturn.h": {},
  "coreutils/coreutils-8.29/lib/glthread/lock.c": {
    "glthread_rwlock_init_for_glibc": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": []
    },
    "glthread_rwlock_init_multithreaded": [
      {
        "start_point": [
          65,
          0
        ],
        "end_point": [
          75,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          155,
          0
        ],
        "end_point": [
          172,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          512,
          0
        ],
        "end_point": [
          525,
          1
        ],
        "strings": []
      }
    ],
    "glthread_rwlock_rdlock_multithreaded": [
      {
        "start_point": [
          77,
          0
        ],
        "end_point": [
          101,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          174,
          0
        ],
        "end_point": [
          199,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          527,
          0
        ],
        "end_point": [
          551,
          1
        ],
        "strings": []
      }
    ],
    "glthread_rwlock_wrlock_multithreaded": [
      {
        "start_point": [
          103,
          0
        ],
        "end_point": [
          127,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          201,
          0
        ],
        "end_point": [
          226,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          553,
          0
        ],
        "end_point": [
          577,
          1
        ],
        "strings": []
      }
    ],
    "glthread_rwlock_unlock_multithreaded": [
      {
        "start_point": [
          129,
          0
        ],
        "end_point": [
          135,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          228,
          0
        ],
        "end_point": [
          282,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          579,
          0
        ],
        "end_point": [
          634,
          1
        ],
        "strings": []
      }
    ],
    "glthread_rwlock_destroy_multithreaded": [
      {
        "start_point": [
          137,
          0
        ],
        "end_point": [
          149,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          284,
          0
        ],
        "end_point": [
          299,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          636,
          0
        ],
        "end_point": [
          641,
          1
        ],
        "strings": []
      }
    ],
    "glthread_recursive_lock_init_multithreaded": [
      {
        "start_point": [
          309,
          0
        ],
        "end_point": [
          334,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          338,
          0
        ],
        "end_point": [
          364,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          418,
          0
        ],
        "end_point": [
          429,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          692,
          0
        ],
        "end_point": [
          703,
          1
        ],
        "strings": []
      }
    ],
    "glthread_recursive_lock_lock_multithreaded": [
      {
        "start_point": [
          366,
          0
        ],
        "end_point": [
          390,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          431,
          0
        ],
        "end_point": [
          450,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          705,
          0
        ],
        "end_point": [
          724,
          1
        ],
        "strings": []
      }
    ],
    "glthread_recursive_lock_unlock_multithreaded": [
      {
        "start_point": [
          392,
          0
        ],
        "end_point": [
          398,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          452,
          0
        ],
        "end_point": [
          466,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          726,
          0
        ],
        "end_point": [
          740,
          1
        ],
        "strings": []
      }
    ],
    "glthread_recursive_lock_destroy_multithreaded": [
      {
        "start_point": [
          400,
          0
        ],
        "end_point": [
          412,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          468,
          0
        ],
        "end_point": [
          474,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          742,
          0
        ],
        "end_point": [
          748,
          1
        ],
        "strings": []
      }
    ],
    "glthread_once_singlethreaded": [
      {
        "start_point": [
          482,
          0
        ],
        "end_point": [
          496,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          664,
          0
        ],
        "end_point": [
          676,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          775,
          0
        ],
        "end_point": [
          787,
          1
        ],
        "strings": []
      }
    ],
    "glthread_once_call": {
      "start_point": [
        649,
        0
      ],
      "end_point": [
        655,
        1
      ],
      "strings": []
    },
    "glthread_once_multithreaded": [
      {
        "start_point": [
          657,
          0
        ],
        "end_point": [
          662,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          752,
          0
        ],
        "end_point": [
          773,
          1
        ],
        "strings": []
      }
    ],
    "glthread_lock_init_func": {
      "start_point": [
        797,
        0
      ],
      "end_point": [
        802,
        1
      ],
      "strings": []
    },
    "glthread_lock_lock_func": {
      "start_point": [
        804,
        0
      ],
      "end_point": [
        820,
        1
      ],
      "strings": []
    },
    "glthread_lock_unlock_func": {
      "start_point": [
        822,
        0
      ],
      "end_point": [
        829,
        1
      ],
      "strings": []
    },
    "glthread_lock_destroy_func": {
      "start_point": [
        831,
        0
      ],
      "end_point": [
        839,
        1
      ],
      "strings": []
    },
    "gl_waitqueue_init": {
      "start_point": [
        846,
        0
      ],
      "end_point": [
        853,
        1
      ],
      "strings": []
    },
    "gl_waitqueue_add": {
      "start_point": [
        857,
        0
      ],
      "end_point": [
        904,
        1
      ],
      "strings": []
    },
    "gl_waitqueue_notify_first": {
      "start_point": [
        907,
        0
      ],
      "end_point": [
        915,
        1
      ],
      "strings": []
    },
    "gl_waitqueue_notify_all": {
      "start_point": [
        918,
        0
      ],
      "end_point": [
        932,
        1
      ],
      "strings": []
    },
    "glthread_rwlock_init_func": {
      "start_point": [
        934,
        0
      ],
      "end_point": [
        942,
        1
      ],
      "strings": []
    },
    "glthread_rwlock_rdlock_func": {
      "start_point": [
        944,
        0
      ],
      "end_point": [
        998,
        1
      ],
      "strings": []
    },
    "glthread_rwlock_wrlock_func": {
      "start_point": [
        1000,
        0
      ],
      "end_point": [
        1051,
        1
      ],
      "strings": []
    },
    "glthread_rwlock_unlock_func": {
      "start_point": [
        1053,
        0
      ],
      "end_point": [
        1095,
        1
      ],
      "strings": []
    },
    "glthread_rwlock_destroy_func": {
      "start_point": [
        1097,
        0
      ],
      "end_point": [
        1111,
        1
      ],
      "strings": []
    },
    "glthread_recursive_lock_init_func": {
      "start_point": [
        1115,
        0
      ],
      "end_point": [
        1122,
        1
      ],
      "strings": []
    },
    "glthread_recursive_lock_lock_func": {
      "start_point": [
        1124,
        0
      ],
      "end_point": [
        1152,
        1
      ],
      "strings": []
    },
    "glthread_recursive_lock_unlock_func": {
      "start_point": [
        1154,
        0
      ],
      "end_point": [
        1167,
        1
      ],
      "strings": []
    },
    "glthread_recursive_lock_destroy_func": {
      "start_point": [
        1169,
        0
      ],
      "end_point": [
        1177,
        1
      ],
      "strings": []
    },
    "glthread_once_func": {
      "start_point": [
        1181,
        0
      ],
      "end_point": [
        1216,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/glthread/lock.h": {},
  "coreutils/coreutils-8.29/lib/glthread/threadlib.c": {
    "dummy_thread_func": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "glthread_in_use": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/glthread/tls.c": {
    "glthread_tls_get_multithreaded": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/glthread/tls.h": {},
  "coreutils/coreutils-8.29/lib/unistr/u8-mbtoucr.c": {
    "u8_mbtoucr": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/unistr/u8-uctomb-aux.c": {
    "u8_uctomb_aux": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/unistr/u8-uctomb.c": {
    "u8_uctomb": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/lib/uniwidth/cjk.h": {
    "is_cjk_encoding": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": [
        "\"EUC-JP\"",
        "\"GB2312\"",
        "\"GBK\"",
        "\"EUC-TW\"",
        "\"BIG5\"",
        "\"EUC-KR\"",
        "\"CP949\"",
        "\"JOHAB\""
      ]
    }
  },
  "coreutils/coreutils-8.29/lib/uniwidth/width.c": {
    "uc_width": {
      "start_point": [
        413,
        0
      ],
      "end_point": [
        467,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/base64.c": {
    "usage": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]\\n\\\nBase%d encode or decode FILE, or standard input, to standard output.\\n\\\n\"",
        "\"\\\n  -d, --decode          decode data\\n\\\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\\n\\\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\\n\\\n                          Use 0 to disable line wrapping\\n\\\n\\n\\\n\"",
        "\"\\\n\\n\\\nThe data are encoded as described for the %s alphabet in RFC 4648.\\n\\\nWhen decoding, the input may contain newlines in addition to the bytes of\\n\\\nthe formal %s alphabet.  Use --ignore-garbage to attempt to recover\\n\\\nfrom any other non-alphabet bytes in the encoded stream.\\n\""
      ]
    },
    "wrap_write": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": [
        "\"write error\"",
        "\"write error\"",
        "\"write error\""
      ]
    },
    "do_encode": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": [
        "\"write error\"",
        "\"read error\""
      ]
    },
    "do_decode": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": [
        "\"read error\"",
        "\"write error\"",
        "\"invalid input\""
      ]
    },
    "main": {
      "start_point": [
        263,
        0
      ],
      "end_point": [
        349,
        1
      ],
      "strings": [
        "\"\"",
        "\"diw:\"",
        "\"\"",
        "\"invalid wrap size\"",
        "\"extra operand %s\"",
        "\"-\"",
        "\"-\"",
        "\"rb\"",
        "\"%s\"",
        "\"-\"",
        "\"closing standard input\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/basename.c": {
    "usage": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s NAME [SUFFIX]\\n\\\n  or:  %s OPTION... NAME...\\n\\\n\"",
        "\"\\\nPrint NAME with any leading directory components removed.\\n\\\nIf specified, also remove a trailing SUFFIX.\\n\\\n\"",
        "\"\\\n  -a, --multiple       support multiple arguments and treat each as a NAME\\n\\\n  -s, --suffix=SUFFIX  remove a trailing SUFFIX; implies -a\\n\\\n  -z, --zero           end each output line with NUL, not newline\\n\\\n\"",
        "\"\\\n\\n\\\nExamples:\\n\\\n  %s /usr/bin/sort          -> \\\"sort\\\"\\n\\\n  %s include/stdio.h .h     -> \\\"stdio\\\"\\n\\\n  %s -s .h include/stdio.h  -> \\\"stdio\\\"\\n\\\n  %s -a any/str1 any/str2   -> \\\"str1\\\" followed by \\\"str2\\\"\\n\\\n\""
      ]
    },
    "remove_suffix": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "perform_basename": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": [
        "\"\"",
        "\"+as:z\"",
        "\"missing operand\"",
        "\"extra operand %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/cat.c": {
    "usage": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n\"",
        "\"\\\nConcatenate FILE(s) to standard output.\\n\\\n\"",
        "\"\\\n\\n\\\n  -A, --show-all           equivalent to -vET\\n\\\n  -b, --number-nonblank    number nonempty output lines, overrides -n\\n\\\n  -e                       equivalent to -vE\\n\\\n  -E, --show-ends          display $ at end of each line\\n\\\n  -n, --number             number all output lines\\n\\\n  -s, --squeeze-blank      suppress repeated empty output lines\\n\\\n\"",
        "\"\\\n  -t                       equivalent to -vT\\n\\\n  -T, --show-tabs          display TAB characters as ^I\\n\\\n  -u                       (ignored)\\n\\\n  -v, --show-nonprinting   use ^ and M- notation, except for LFD and TAB\\n\\\n\"",
        "\"\\\n\\n\\\nExamples:\\n\\\n  %s f - g  Output f's contents, then standard input, then g's contents.\\n\\\n  %s        Copy standard input to standard output.\\n\\\n\""
      ]
    },
    "next_line_num": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "simple_cat": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        189,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"write error\""
      ]
    },
    "write_pending": {
      "start_point": [
        195,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": [
        "\"write error\""
      ]
    },
    "cat": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        499,
        1
      ],
      "strings": [
        "\"write error\"",
        "\"cannot do ioctl on %s\"",
        "\"%s\""
      ]
    },
    "main": {
      "start_point": [
        501,
        0
      ],
      "end_point": [
        766,
        1
      ],
      "strings": [
        "\"number-nonblank\"",
        "\"number\"",
        "\"squeeze-blank\"",
        "\"show-nonprinting\"",
        "\"show-ends\"",
        "\"show-tabs\"",
        "\"show-all\"",
        "\"\"",
        "\"benstuvAET\"",
        "\"standard output\"",
        "\"-\"",
        "\"-\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s: input file is output file\"",
        "\"-\"",
        "\"%s\"",
        "\"closing standard input\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/chcon.c": {
    "compute_context_from_mask": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"failed to create security context: %s\""
      ]
    },
    "change_file_context": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        201,
        1
      ],
      "strings": [
        "\"failed to get security context of %s\"",
        "\"can't apply partial context to unlabeled file %s\"",
        "\"failed to change context of %s to %s\""
      ]
    },
    "process_file": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        303,
        1
      ],
      "strings": [
        "\"cannot access %s\"",
        "\"%s\"",
        "\"cannot read directory %s\"",
        "\"changing security context of %s\\n\""
      ]
    },
    "process_files": {
      "start_point": [
        309,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": [
        "\"fts_read failed\"",
        "\"fts_close failed\""
      ]
    },
    "usage": {
      "start_point": [
        344,
        0
      ],
      "end_point": [
        407,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... CONTEXT FILE...\\n\\\n  or:  %s [OPTION]... [-u USER] [-r ROLE] [-l RANGE] [-t TYPE] FILE...\\n\\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n\\\n\"",
        "\"\\\nChange the SELinux security context of each FILE to CONTEXT.\\n\\\nWith --reference, change the security context of each FILE to that of RFILE.\\n\\\n\"",
        "\"\\\n      --dereference      affect the referent of each symbolic link (this is\\n\\\n                         the default), rather than the symbolic link itself\\n\\\n  -h, --no-dereference   affect symbolic links instead of any referenced file\\n\\\n\"",
        "\"\\\n  -u, --user=USER        set user USER in the target security context\\n\\\n  -r, --role=ROLE        set role ROLE in the target security context\\n\\\n  -t, --type=TYPE        set type TYPE in the target security context\\n\\\n  -l, --range=RANGE      set range RANGE in the target security context\\n\\\n\"",
        "\"\\\n      --no-preserve-root  do not treat '/' specially (the default)\\n\\\n      --preserve-root    fail to operate recursively on '/'\\n\\\n\"",
        "\"\\\n      --reference=RFILE  use RFILE's security context rather than specifying\\n\\\n                         a CONTEXT value\\n\\\n\"",
        "\"\\\n  -R, --recursive        operate on files and directories recursively\\n\\\n\"",
        "\"\\\n  -v, --verbose          output a diagnostic for every file processed\\n\\\n\"",
        "\"\\\n\\n\\\nThe following options modify how a hierarchy is traversed when the -R\\n\\\noption is also specified.  If more than one is specified, only the final\\n\\\none takes effect.\\n\\\n\\n\\\n  -H                     if a command line argument is a symbolic link\\n\\\n                         to a directory, traverse it\\n\\\n  -L                     traverse every symbolic link to a directory\\n\\\n                         encountered\\n\\\n  -P                     do not traverse any symbolic links (default)\\n\\\n\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        409,
        0
      ],
      "end_point": [
        586,
        1
      ],
      "strings": [
        "\"\"",
        "\"HLPRhvu:r:t:l:\"",
        "\"-R --dereference requires either -H or -L\"",
        "\"-R -h requires -P\"",
        "\"missing operand\"",
        "\"missing operand after %s\"",
        "\"failed to get security context of %s\"",
        "\"invalid context: %s\"",
        "\"conflicting security context specifiers given\"",
        "\"failed to get attributes of %s\"",
        "\"/\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/chgrp.c": {
    "parse_group": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"\"",
        "\"invalid group: %s\""
      ]
    },
    "usage": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... GROUP FILE...\\n\\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n\\\n\"",
        "\"\\\nChange the group of each FILE to GROUP.\\n\\\nWith --reference, change the group of each FILE to that of RFILE.\\n\\\n\\n\\\n\"",
        "\"\\\n  -c, --changes          like verbose but report only when a change is made\\n\\\n  -f, --silent, --quiet  suppress most error messages\\n\\\n  -v, --verbose          output a diagnostic for every file processed\\n\\\n\"",
        "\"\\\n      --dereference      affect the referent of each symbolic link (this is\\n\\\n                         the default), rather than the symbolic link itself\\n\\\n  -h, --no-dereference   affect symbolic links instead of any referenced file\\n\\\n\"",
        "\"\\\n                         (useful only on systems that can change the\\n\\\n                         ownership of a symlink)\\n\\\n\"",
        "\"\\\n      --no-preserve-root  do not treat '/' specially (the default)\\n\\\n      --preserve-root    fail to operate recursively on '/'\\n\\\n\"",
        "\"\\\n      --reference=RFILE  use RFILE's group rather than specifying a\\n\\\n                         GROUP value\\n\\\n\"",
        "\"\\\n  -R, --recursive        operate on files and directories recursively\\n\\\n\"",
        "\"\\\n\\n\\\nThe following options modify how a hierarchy is traversed when the -R\\n\\\noption is also specified.  If more than one is specified, only the final\\n\\\none takes effect.\\n\\\n\\n\\\n  -H                     if a command line argument is a symbolic link\\n\\\n                         to a directory, traverse it\\n\\\n  -L                     traverse every symbolic link to a directory\\n\\\n                         encountered\\n\\\n  -P                     do not traverse any symbolic links (default)\\n\\\n\\n\\\n\"",
        "\"\\\n\\n\\\nExamples:\\n\\\n  %s staff /u      Change the group of /u to \\\"staff\\\".\\n\\\n  %s -hR staff /u  Change the group of /u and subfiles to \\\"staff\\\".\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": [
        "\"\"",
        "\"HLPRcfhv\"",
        "\"-R --dereference requires either -H or -L\"",
        "\"missing operand\"",
        "\"missing operand after %s\"",
        "\"failed to get attributes of %s\"",
        "\"failed to get attributes of %s\"",
        "\"/\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/chmod.c": {
    "mode_changed": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": [
        "\"getting new attributes of %s\""
      ]
    },
    "describe_change": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": [
        "\"neither symbolic link %s nor referent has been changed\\n\"",
        "\"mode of %s changed from %04lo (%s) to %04lo (%s)\\n\"",
        "\"failed to change mode of %s from %04lo (%s) to %04lo (%s)\\n\"",
        "\"mode of %s retained as %04lo (%s)\\n\""
      ]
    },
    "process_file": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        324,
        1
      ],
      "strings": [
        "\"cannot access %s\"",
        "\"%s\"",
        "\"cannot read directory %s\"",
        "\"cannot operate on dangling symlink %s\"",
        "\"changing permissions of %s\"",
        "\"%s: new permissions are %s, not %s\""
      ]
    },
    "process_files": {
      "start_point": [
        330,
        0
      ],
      "end_point": [
        364,
        1
      ],
      "strings": [
        "\"fts_read failed\"",
        "\"fts_close failed\""
      ]
    },
    "usage": {
      "start_point": [
        366,
        0
      ],
      "end_point": [
        408,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... MODE[,MODE]... FILE...\\n\\\n  or:  %s [OPTION]... OCTAL-MODE FILE...\\n\\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n\\\n\"",
        "\"\\\nChange the mode of each FILE to MODE.\\n\\\nWith --reference, change the mode of each FILE to that of RFILE.\\n\\\n\\n\\\n\"",
        "\"\\\n  -c, --changes          like verbose but report only when a change is made\\n\\\n  -f, --silent, --quiet  suppress most error messages\\n\\\n  -v, --verbose          output a diagnostic for every file processed\\n\\\n\"",
        "\"\\\n      --no-preserve-root  do not treat '/' specially (the default)\\n\\\n      --preserve-root    fail to operate recursively on '/'\\n\\\n\"",
        "\"\\\n      --reference=RFILE  use RFILE's mode instead of MODE values\\n\\\n\"",
        "\"\\\n  -R, --recursive        change files and directories recursively\\n\\\n\"",
        "\"\\\n\\n\\\nEach MODE is of the form '[ugoa]*([-+=]([rwxXst]*|[ugo]))+|[-+=][0-7]+'.\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        413,
        0
      ],
      "end_point": [
        569,
        1
      ],
      "strings": [
        "\"\"",
        "\"Rcfvr::w::x::X::s::t::u::g::o::a::,::+::=::\"",
        "\"0::1::2::3::4::5::6::7::\"",
        "\"cannot combine mode and --reference options\"",
        "\"missing operand\"",
        "\"missing operand after %s\"",
        "\"failed to get attributes of %s\"",
        "\"invalid mode: %s\"",
        "\"failed to get attributes of %s\"",
        "\"/\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/chown-core.c": {
    "chopt_init": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "chopt_free": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "gid_to_name": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "uid_to_name": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "user_group_str": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": [
        "\":\""
      ]
    },
    "describe_change": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\"neither symbolic link %s nor referent has been changed\\n\"",
        "\"changed ownership of %s from %s to %s\\n\"",
        "\"changed group of %s from %s to %s\\n\"",
        "\"no change to ownership of %s\\n\"",
        "\"failed to change ownership of %s from %s to %s\\n\"",
        "\"failed to change group of %s from %s to %s\\n\"",
        "\"failed to change ownership of %s\\n\"",
        "\"failed to change ownership of %s to %s\\n\"",
        "\"failed to change group of %s to %s\\n\"",
        "\"failed to change ownership of %s\\n\"",
        "\"ownership of %s retained as %s\\n\"",
        "\"group of %s retained as %s\\n\"",
        "\"ownership of %s retained\\n\""
      ]
    },
    "restricted_chown": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    },
    "change_file_owner": {
      "start_point": [
        269,
        0
      ],
      "end_point": [
        498,
        1
      ],
      "strings": [
        "\"cannot access %s\"",
        "\"%s\"",
        "\"cannot read directory %s\"",
        "\"cannot dereference %s\"",
        "\"changing ownership of %s\"",
        "\"changing group of %s\""
      ]
    },
    "chown_files": {
      "start_point": [
        509,
        0
      ],
      "end_point": [
        554,
        1
      ],
      "strings": [
        "\"fts_read failed\"",
        "\"fts_close failed\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/chown-core.h": {},
  "coreutils/coreutils-8.29/src/chown.c": {
    "usage": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [OWNER][:[GROUP]] FILE...\\n\\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n\\\n\"",
        "\"\\\nChange the owner and/or group of each FILE to OWNER and/or GROUP.\\n\\\nWith --reference, change the owner and group of each FILE to those of RFILE.\\n\\\n\\n\\\n\"",
        "\"\\\n  -c, --changes          like verbose but report only when a change is made\\n\\\n  -f, --silent, --quiet  suppress most error messages\\n\\\n  -v, --verbose          output a diagnostic for every file processed\\n\\\n\"",
        "\"\\\n      --dereference      affect the referent of each symbolic link (this is\\n\\\n                         the default), rather than the symbolic link itself\\n\\\n  -h, --no-dereference   affect symbolic links instead of any referenced file\\n\\\n\"",
        "\"\\\n                         (useful only on systems that can change the\\n\\\n                         ownership of a symlink)\\n\\\n\"",
        "\"\\\n      --from=CURRENT_OWNER:CURRENT_GROUP\\n\\\n                         change the owner and/or group of each file only if\\n\\\n                         its current owner and/or group match those specified\\n\\\n                         here.  Either may be omitted, in which case a match\\n\\\n                         is not required for the omitted attribute\\n\\\n\"",
        "\"\\\n      --no-preserve-root  do not treat '/' specially (the default)\\n\\\n      --preserve-root    fail to operate recursively on '/'\\n\\\n\"",
        "\"\\\n      --reference=RFILE  use RFILE's owner and group rather than\\n\\\n                         specifying OWNER:GROUP values\\n\\\n\"",
        "\"\\\n  -R, --recursive        operate on files and directories recursively\\n\\\n\"",
        "\"\\\n\\n\\\nThe following options modify how a hierarchy is traversed when the -R\\n\\\noption is also specified.  If more than one is specified, only the final\\n\\\none takes effect.\\n\\\n\\n\\\n  -H                     if a command line argument is a symbolic link\\n\\\n                         to a directory, traverse it\\n\\\n  -L                     traverse every symbolic link to a directory\\n\\\n                         encountered\\n\\\n  -P                     do not traverse any symbolic links (default)\\n\\\n\\n\\\n\"",
        "\"\\\n\\n\\\nOwner is unchanged if missing.  Group is unchanged if missing, but changed\\n\\\nto login group if implied by a ':' following a symbolic OWNER.\\n\\\nOWNER and GROUP may be numeric as well as symbolic.\\n\\\n\"",
        "\"\\\n\\n\\\nExamples:\\n\\\n  %s root /u        Change the owner of /u to \\\"root\\\".\\n\\\n  %s root:staff /u  Likewise, but also change its group to \\\"staff\\\".\\n\\\n  %s -hR root /u    Change the owner of /u and subfiles to \\\"root\\\".\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": [
        "\"\"",
        "\"HLPRcfhv\"",
        "\"%s: %s\"",
        "\"-R --dereference requires either -H or -L\"",
        "\"missing operand\"",
        "\"missing operand after %s\"",
        "\"failed to get attributes of %s\"",
        "\"%s: %s\"",
        "\"\"",
        "\"failed to get attributes of %s\"",
        "\"/\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/chroot.c": {
    "uid_unset": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        44,
        70
      ],
      "strings": []
    },
    "gid_unset": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        45,
        70
      ],
      "strings": []
    },
    "setgroups": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "parse_additional_groups": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\",\"",
        "\",\"",
        "\"\"",
        "\"invalid group %s\"",
        "\"invalid group list %s\""
      ]
    },
    "is_root": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": [
        "\"/\""
      ]
    },
    "usage": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION] NEWROOT [COMMAND [ARG]...]\\n\\\n  or:  %s OPTION\\n\\\n\"",
        "\"\\\nRun COMMAND with root directory set to NEWROOT.\\n\\\n\\n\\\n\"",
        "\"\\\n  --groups=G_LIST        specify supplementary groups as g1,g2,..,gN\\n\\\n\"",
        "\"\\\n  --userspec=USER:GROUP  specify user and group (ID or name) to use\\n\\\n\"",
        "\"\\\n  --skip-chdir           do not change working directory to %s\\n\\\n\"",
        "\"/\"",
        "\"\\\n\\n\\\nIf no command is given, run '\\\"$SHELL\\\" -i' (default: '/bin/sh -i').\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        429,
        1
      ],
      "strings": [
        "\"\"",
        "\"+\"",
        "\"missing operand\"",
        "\"option --skip-chdir only permitted if NEWROOT is old %s\"",
        "\"/\"",
        "\"cannot change root directory to %s\"",
        "\"/\"",
        "\"cannot chdir to root directory\"",
        "\"SHELL\"",
        "\"/bin/sh\"",
        "\"-i\"",
        "\"%s\"",
        "\"no group specified for unknown uid: %d\"",
        "\"failed to get supplemental groups\"",
        "\"failed to set supplemental groups\"",
        "\"failed to set group-ID\"",
        "\"failed to set user-ID\"",
        "\"failed to run command %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/cksum.c": {
    "fill_r": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    },
    "crc_remainder": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "main": [
      {
        "start_point": [
          86,
          0
        ],
        "end_point": [
          100,
          1
        ],
        "strings": [
          "\"static uint_fast32_t const crctab[256] =\\n{\\n  0x00000000\"",
          "\",\\n  0x%08x, 0x%08x, 0x%08x, 0x%08x, 0x%08x\"",
          "\"\\n};\\n\""
        ]
      },
      {
        "start_point": [
          278,
          0
        ],
        "end_point": [
          315,
          1
        ],
        "strings": [
          "\"\"",
          "\"\"",
          "\"-\"",
          "\"-\""
        ]
      }
    ],
    "cksum": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": [
        "\"-\"",
        "\"rb\"",
        "\"r\"",
        "\"%s\"",
        "\"%s: file too long\"",
        "\"%s\"",
        "\"-\"",
        "\"-\"",
        "\"%s\"",
        "\"%u %s %s\\n\"",
        "\"%u %s\\n\"",
        "\"-: %s\"",
        "\"write error\""
      ]
    },
    "usage": {
      "start_point": [
        255,
        0
      ],
      "end_point": [
        276,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [FILE]...\\n\\\n  or:  %s [OPTION]\\n\\\n\"",
        "\"\\\nPrint CRC checksum and byte counts of each FILE.\\n\\\n\\n\\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/comm.c": {
    "usage": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... FILE1 FILE2\\n\\\n\"",
        "\"\\\nCompare sorted files FILE1 and FILE2 line by line.\\n\\\n\"",
        "\"\\\n\\n\\\nWhen FILE1 or FILE2 (not both) is -, read standard input.\\n\\\n\"",
        "\"\\\n\\n\\\nWith no options, produce three-column output.  Column one contains\\n\\\nlines unique to FILE1, column two contains lines unique to FILE2,\\n\\\nand column three contains lines common to both files.\\n\\\n\"",
        "\"\\\n\\n\\\n  -1              suppress column 1 (lines unique to FILE1)\\n\\\n  -2              suppress column 2 (lines unique to FILE2)\\n\\\n  -3              suppress column 3 (lines that appear in both files)\\n\\\n\"",
        "\"\\\n\\n\\\n  --check-order     check that the input is correctly sorted, even\\n\\\n                      if all input lines are pairable\\n\\\n  --nocheck-order   do not check that the input is correctly sorted\\n\\\n\"",
        "\"\\\n  --output-delimiter=STR  separate columns with STR\\n\\\n\"",
        "\"\\\n  --total           output a summary\\n\\\n\"",
        "\"\\\n  -z, --zero-terminated    line delimiter is NUL, not newline\\n\\\n\"",
        "\"\\\n\\n\\\nNote, comparisons honor the rules specified by 'LC_COLLATE'.\\n\\\n\"",
        "\"\\\n\\n\\\nExamples:\\n\\\n  %s -12 file1 file2  Print only lines present in both file1 and file2.\\n\\\n  %s -3 file1 file2  Print lines in file1 not in file2, and vice versa.\\n\\\n\""
      ]
    },
    "writeline": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": []
    },
    "check_order": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": [
        "\"file %d is not in sorted order\""
      ]
    },
    "compare_files": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        403,
        1
      ],
      "strings": [
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s%s%s%s%s%s%s%c\"",
        "\"total\""
      ]
    },
    "main": {
      "start_point": [
        405,
        0
      ],
      "end_point": [
        498,
        1
      ],
      "strings": [
        "\"\"",
        "\"123z\"",
        "\"multiple output delimiters specified\"",
        "\"missing operand\"",
        "\"missing operand after %s\"",
        "\"extra operand %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/copy.c": {
    "rpl_mkfifo": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "utimens_symlink": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "punch_hole": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        180,
        1
      ],
      "strings": []
    },
    "create_hole": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": [
        "\"cannot lseek %s\"",
        "\"error deallocating %s\""
      ]
    },
    "sparse_copy": {
      "start_point": [
        221,
        0
      ],
      "end_point": [
        327,
        1
      ],
      "strings": [
        "\"error reading %s\"",
        "\"error writing %s\"",
        "\"overflow reading %s\""
      ]
    },
    "clone_file": {
      "start_point": [
        331,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    },
    "write_zeros": {
      "start_point": [
        346,
        0
      ],
      "end_point": [
        375,
        1
      ],
      "strings": []
    },
    "extent_copy": {
      "start_point": [
        384,
        0
      ],
      "end_point": [
        574,
        1
      ],
      "strings": [
        "\"%s: failed to get extents info\"",
        "\"cannot lseek %s\"",
        "\"%s: write failed\"",
        "\"failed to extend %s\"",
        "\"error deallocating %s\""
      ]
    },
    "is_ancestor": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        591,
        1
      ],
      "strings": []
    },
    "errno_unsupported": {
      "start_point": [
        593,
        0
      ],
      "end_point": [
        597,
        1
      ],
      "strings": []
    },
    "copy_attr_error": {
      "start_point": [
        600,
        0
      ],
      "end_point": [
        614,
        1
      ],
      "strings": []
    },
    "copy_attr_allerror": {
      "start_point": [
        616,
        0
      ],
      "end_point": [
        627,
        1
      ],
      "strings": []
    },
    "copy_attr_quote": {
      "start_point": [
        629,
        0
      ],
      "end_point": [
        633,
        1
      ],
      "strings": []
    },
    "copy_attr_free": {
      "start_point": [
        635,
        0
      ],
      "end_point": [
        639,
        1
      ],
      "strings": []
    },
    "check_selinux_attr": {
      "start_point": [
        646,
        0
      ],
      "end_point": [
        651,
        1
      ],
      "strings": [
        "\"security.selinux\""
      ]
    },
    "copy_attr": [
      {
        "start_point": [
          656,
          0
        ],
        "end_point": [
          680,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          683,
          0
        ],
        "end_point": [
          691,
          1
        ],
        "strings": []
      }
    ],
    "copy_dir": {
      "start_point": [
        706,
        0
      ],
      "end_point": [
        763,
        1
      ],
      "strings": [
        "\"cannot access %s\""
      ]
    },
    "set_owner": {
      "start_point": [
        777,
        0
      ],
      "end_point": [
        846,
        1
      ],
      "strings": [
        "\"clearing permissions for %s\"",
        "\"failed to preserve ownership for %s\""
      ]
    },
    "set_author": {
      "start_point": [
        853,
        0
      ],
      "end_point": [
        879,
        1
      ],
      "strings": [
        "\"failed to lookup file %s\"",
        "\"failed to preserve authorship for %s\""
      ]
    },
    "set_process_security_ctx": {
      "start_point": [
        890,
        0
      ],
      "end_point": [
        943,
        1
      ],
      "strings": [
        "\"failed to set default file creation context to %s\"",
        "\"failed to get security context of %s\"",
        "\"failed to set default file creation context for %s\""
      ]
    },
    "set_file_security_ctx": {
      "start_point": [
        952,
        0
      ],
      "end_point": [
        969,
        1
      ],
      "strings": [
        "\"failed to set the security context of %s\""
      ]
    },
    "fchmod_or_lchmod": {
      "start_point": [
        974,
        0
      ],
      "end_point": [
        982,
        1
      ],
      "strings": []
    },
    "is_probably_sparse": {
      "start_point": [
        992,
        0
      ],
      "end_point": [
        998,
        1
      ],
      "strings": []
    },
    "copy_reg": {
      "start_point": [
        1013,
        0
      ],
      "end_point": [
        1411,
        1
      ],
      "strings": [
        "\"cannot open %s for reading\"",
        "\"cannot fstat %s\"",
        "\"skipping file %s, as it was replaced while being copied\"",
        "\"cannot remove %s\"",
        "\"removed %s\\n\"",
        "\"not writing through dangling symlink %s\"",
        "\"cannot create regular file %s\"",
        "\"cannot fstat %s\"",
        "\"failed to clone %s from %s\"",
        "\"failed to extend %s\"",
        "\"preserving times for %s\"",
        "\"preserving permissions for %s\"",
        "\"failed to close %s\"",
        "\"failed to close %s\""
      ]
    },
    "same_file_ok": {
      "start_point": [
        1422,
        0
      ],
      "end_point": [
        1658,
        1
      ],
      "strings": []
    },
    "writable_destination": {
      "start_point": [
        1662,
        0
      ],
      "end_point": [
        1668,
        1
      ],
      "strings": []
    },
    "overwrite_ok": {
      "start_point": [
        1670,
        0
      ],
      "end_point": [
        1695,
        1
      ],
      "strings": [
        "\"%s: replace %s, overriding mode %04lo (%s)? \"",
        "\"%s: unwritable %s (mode %04lo, %s); try anyway? \"",
        "\"%s: overwrite %s? \""
      ]
    },
    "dest_info_init": {
      "start_point": [
        1699,
        0
      ],
      "end_point": [
        1708,
        1
      ],
      "strings": []
    },
    "src_info_init": {
      "start_point": [
        1712,
        0
      ],
      "end_point": [
        1730,
        1
      ],
      "strings": []
    },
    "abandon_move": {
      "start_point": [
        1738,
        0
      ],
      "end_point": [
        1750,
        1
      ],
      "strings": []
    },
    "emit_verbose": {
      "start_point": [
        1755,
        0
      ],
      "end_point": [
        1762,
        1
      ],
      "strings": [
        "\"%s -> %s\"",
        "\" (backup: %s)\""
      ]
    },
    "restore_default_fscreatecon_or_die": {
      "start_point": [
        1765,
        0
      ],
      "end_point": [
        1771,
        1
      ],
      "strings": [
        "\"failed to restore the default file creation context\""
      ]
    },
    "create_hard_link": {
      "start_point": [
        1779,
        0
      ],
      "end_point": [
        1795,
        1
      ],
      "strings": [
        "\"cannot create hard link %s to %s\"",
        "\"removed %s\\n\""
      ]
    },
    "should_dereference": {
      "start_point": [
        1800,
        0
      ],
      "end_point": [
        1806,
        1
      ],
      "strings": []
    },
    "source_is_dst_backup": {
      "start_point": [
        1810,
        0
      ],
      "end_point": [
        1829,
        1
      ],
      "strings": []
    },
    "copy_internal": {
      "start_point": [
        1842,
        0
      ],
      "end_point": [
        2906,
        1
      ],
      "strings": [
        "\"cannot stat %s\"",
        "\"-r not specified; omitting directory %s\"",
        "\"omitting directory %s\"",
        "\"warning: source file %s specified more than once\"",
        "\"cannot stat %s\"",
        "\"%s and %s are the same file\"",
        "\"cannot overwrite non-directory %s with directory %s\"",
        "\"will not overwrite just-created %s with %s\"",
        "\"cannot overwrite directory %s with non-directory\"",
        "\"cannot move directory onto non-directory: %s -> %s\"",
        "\"backing up %s might destroy source;  %s not moved\"",
        "\"backing up %s might destroy source;  %s not copied\"",
        "\"cannot backup %s\"",
        "\"cannot remove %s\"",
        "\"removed %s\\n\"",
        "\"will not copy %s through just-created symlink %s\"",
        "\"cannot copy a directory, %s, into itself, %s\"",
        "\"warning: source directory %s \"",
        "\"specified more than once\"",
        "\"will not create hard link %s to directory %s\"",
        "\"renamed \"",
        "\"cannot move %s to a subdirectory of itself, %s\"",
        "\"cannot move %s to %s\"",
        "\"inter-device move failed: %s to %s; unable to remove target\"",
        "\"copied \"",
        "\"cannot copy cyclic symbolic link %s\"",
        "\"cannot create directory %s\"",
        "\"cannot stat %s\"",
        "\"setting permissions for %s\"",
        "\"created directory %s\\n\"",
        "\".\"",
        "\".\"",
        "\"%s: can make relative symbolic links only in current directory\"",
        "\"cannot create symbolic link %s to %s\"",
        "\"cannot create fifo %s\"",
        "\"cannot create special file %s\"",
        "\"cannot read symbolic link %s\"",
        "\"cannot create symbolic link %s\"",
        "\"failed to preserve ownership for %s\"",
        "\"%s has unknown file type\"",
        "\"preserving times for %s\"",
        "\"cannot stat %s\"",
        "\"preserving permissions for %s\"",
        "\"cannot un-backup %s\"",
        "\"%s -> %s (unbackup)\\n\""
      ]
    },
    "valid_options": {
      "start_point": [
        2908,
        0
      ],
      "end_point": [
        2920,
        1
      ],
      "strings": []
    },
    "copy": {
      "start_point": [
        2931,
        0
      ],
      "end_point": [
        2953,
        1
      ],
      "strings": []
    },
    "cp_options_default": {
      "start_point": [
        2957,
        0
      ],
      "end_point": [
        2976,
        1
      ],
      "strings": []
    },
    "chown_failure_ok": {
      "start_point": [
        2982,
        0
      ],
      "end_point": [
        2990,
        1
      ],
      "strings": []
    },
    "owner_failure_ok": {
      "start_point": [
        2996,
        0
      ],
      "end_point": [
        3000,
        1
      ],
      "strings": []
    },
    "cached_umask": {
      "start_point": [
        3008,
        0
      ],
      "end_point": [
        3018,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/copy.h": {},
  "coreutils/coreutils-8.29/src/coreutils-arch.c": {
    "single_binary_main_arch": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/coreutils-dir.c": {
    "single_binary_main_dir": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/coreutils-vdir.c": {
    "single_binary_main_vdir": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        32,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/coreutils.c": {
    "usage": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s --coreutils-prog=PROGRAM_NAME [PARAMETERS]... \\n\"",
        "\"\\\nExecute the PROGRAM_NAME built-in program with the given PARAMETERS.\\n\\\n\\n\"",
        "\" \"",
        "\"coreutils.h\"",
        "\"\\n\\\nBuilt-in programs:\\n\\\n%s\\n\"",
        "\"\\\n\\n\\\nUse: '%s --coreutils-prog=PROGRAM_NAME --help' for individual program help.\\n\""
      ]
    },
    "launch_program": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"coreutils.h\""
      ]
    },
    "main": {
      "start_point": [
        129,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": [
        "\"ginstall\"",
        "\"install\"",
        "\"--coreutils-prog=\"",
        "\"--coreutils-prog=\"",
        "\"--coreutils-prog-shebang=\"",
        "\"--coreutils-prog-shebang=\"",
        "\"unknown program %s\"",
        "\"\"",
        "\"\"",
        "\"coreutils\"",
        "\"unknown program %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/cp-hash.c": {
    "src_to_dest_hash": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "src_to_dest_compare": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "src_to_dest_free": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "forget_created": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "src_to_dest_lookup": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "remember_copied": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "hash_init": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "forget_all": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/cp-hash.h": {},
  "coreutils/coreutils-8.29/src/cp.c": {
    "usage": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [-T] SOURCE DEST\\n\\\n  or:  %s [OPTION]... SOURCE... DIRECTORY\\n\\\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\\n\\\n\"",
        "\"\\\nCopy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.\\n\\\n\"",
        "\"\\\n  -a, --archive                same as -dR --preserve=all\\n\\\n      --attributes-only        don't copy the file data, just the attributes\\n\\\n      --backup[=CONTROL]       make a backup of each existing destination file\\\n\\n\\\n  -b                           like --backup but does not accept an argument\\n\\\n      --copy-contents          copy contents of special files when recursive\\n\\\n  -d                           same as --no-dereference --preserve=links\\n\\\n\"",
        "\"\\\n  -f, --force                  if an existing destination file cannot be\\n\\\n                                 opened, remove it and try again (this option\\n\\\n                                 is ignored when the -n option is also used)\\n\\\n  -i, --interactive            prompt before overwrite (overrides a previous -n\\\n\\n\\\n                                  option)\\n\\\n  -H                           follow command-line symbolic links in SOURCE\\n\\\n\"",
        "\"\\\n  -l, --link                   hard link files instead of copying\\n\\\n  -L, --dereference            always follow symbolic links in SOURCE\\n\\\n\"",
        "\"\\\n  -n, --no-clobber             do not overwrite an existing file (overrides\\n\\\n                                 a previous -i option)\\n\\\n  -P, --no-dereference         never follow symbolic links in SOURCE\\n\\\n\"",
        "\"\\\n  -p                           same as --preserve=mode,ownership,timestamps\\n\\\n      --preserve[=ATTR_LIST]   preserve the specified attributes (default:\\n\\\n                                 mode,ownership,timestamps), if possible\\n\\\n                                 additional attributes: context, links, xattr,\\\n\\n\\\n                                 all\\n\\\n\"",
        "\"\\\n      --no-preserve=ATTR_LIST  don't preserve the specified attributes\\n\\\n      --parents                use full source file name under DIRECTORY\\n\\\n\"",
        "\"\\\n  -R, -r, --recursive          copy directories recursively\\n\\\n      --reflink[=WHEN]         control clone/CoW copies. See below\\n\\\n      --remove-destination     remove each existing destination file before\\n\\\n                                 attempting to open it (contrast with --force)\\\n\\n\"",
        "\"\\\n      --sparse=WHEN            control creation of sparse files. See below\\n\\\n      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\\n\\\n                                 argument\\n\\\n\"",
        "\"\\\n  -s, --symbolic-link          make symbolic links instead of copying\\n\\\n  -S, --suffix=SUFFIX          override the usual backup suffix\\n\\\n  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\\n\\\n  -T, --no-target-directory    treat DEST as a normal file\\n\\\n\"",
        "\"\\\n  -u, --update                 copy only when the SOURCE file is newer\\n\\\n                                 than the destination file or when the\\n\\\n                                 destination file is missing\\n\\\n  -v, --verbose                explain what is being done\\n\\\n  -x, --one-file-system        stay on this file system\\n\\\n\"",
        "\"\\\n  -Z                           set SELinux security context of destination\\n\\\n                                 file to default type\\n\\\n      --context[=CTX]          like -Z, or if CTX is specified then set the\\n\\\n                                 SELinux or SMACK security context to CTX\\n\\\n\"",
        "\"\\\n\\n\\\nBy default, sparse SOURCE files are detected by a crude heuristic and the\\n\\\ncorresponding DEST file is made sparse as well.  That is the behavior\\n\\\nselected by --sparse=auto.  Specify --sparse=always to create a sparse DEST\\n\\\nfile whenever the SOURCE file contains a long enough sequence of zero bytes.\\n\\\nUse --sparse=never to inhibit creation of sparse files.\\n\\\n\\n\\\nWhen --reflink[=always] is specified, perform a lightweight copy, where the\\n\\\ndata blocks are copied only when modified.  If this is not possible the copy\\n\\\nfails, or if --reflink=auto is specified, fall back to a standard copy.\\n\\\n\"",
        "\"\\\n\\n\\\nAs a special case, cp makes a backup of SOURCE when the force and backup\\n\\\noptions are given and SOURCE and DEST are the same name for an existing,\\n\\\nregular file.\\n\\\n\""
      ]
    },
    "re_protect": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        352,
        1
      ],
      "strings": [
        "\"failed to preserve times for %s\"",
        "\"failed to preserve ownership for %s\"",
        "\"failed to preserve permissions for %s\""
      ]
    },
    "make_dir_parents_private": {
      "start_point": [
        373,
        0
      ],
      "end_point": [
        567,
        1
      ],
      "strings": [
        "\"failed to get attributes of %s\"",
        "\"cannot make directory %s\"",
        "\"failed to get attributes of %s\"",
        "\"setting permissions for %s\"",
        "\"%s exists but is not a directory\"",
        "\"%s exists but is not a directory\""
      ]
    },
    "target_directory_operand": {
      "start_point": [
        578,
        0
      ],
      "end_point": [
        590,
        1
      ],
      "strings": [
        "\"failed to access %s\""
      ]
    },
    "do_copy": {
      "start_point": [
        595,
        0
      ],
      "end_point": [
        779,
        1
      ],
      "strings": [
        "\"missing file operand\"",
        "\"missing destination file operand after %s\"",
        "\"cannot combine --target-directory (-t) \"",
        "\"and --no-target-directory (-T)\"",
        "\"extra operand %s\"",
        "\"target %s is not a directory\"",
        "\"%s -> %s\\n\"",
        "\"..\"",
        "\"with --parents, the destination must be a directory\""
      ]
    },
    "cp_option_init": {
      "start_point": [
        781,
        0
      ],
      "end_point": [
        830,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\""
      ]
    },
    "decode_preserve_arg": {
      "start_point": [
        834,
        0
      ],
      "end_point": [
        924,
        1
      ],
      "strings": [
        "\"mode\"",
        "\"timestamps\"",
        "\"ownership\"",
        "\"links\"",
        "\"context\"",
        "\"xattr\"",
        "\"all\"",
        "\"--preserve\"",
        "\"--no-preserve\""
      ]
    },
    "main": {
      "start_point": [
        926,
        0
      ],
      "end_point": [
        1221,
        1
      ],
      "strings": [
        "\"\"",
        "\"abdfHilLnprst:uvxPRS:TZ\"",
        "\"--sparse\"",
        "\"--reflink\"",
        "\"multiple target directories specified\"",
        "\"failed to access %s\"",
        "\"target %s is not a directory\"",
        "\"warning: ignoring --context; \"",
        "\"it requires an SELinux-enabled kernel\"",
        "\"cannot make both hard and symbolic links\"",
        "\"options --backup and --no-clobber are mutually exclusive\"",
        "\"--reflink can be used only with --sparse=auto\"",
        "\"backup type\"",
        "\"cannot set target context and preserve it\"",
        "\"cannot preserve security context \"",
        "\"without an SELinux-enabled kernel\"",
        "\"failed to set default file creation context to %s\"",
        "\"cannot preserve extended attributes, cp is \"",
        "\"built without xattr support\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/csplit.c": {
    "cleanup": {
      "start_point": [
        209,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": []
    },
    "cleanup_fatal": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    },
    "xalloc_die": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"memory exhausted\""
      ]
    },
    "interrupt_handler": {
      "start_point": [
        236,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": []
    },
    "save_to_hold_area": {
      "start_point": [
        250,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": []
    },
    "read_input": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": [
        "\"read error\""
      ]
    },
    "clear_line_control": {
      "start_point": [
        285,
        0
      ],
      "end_point": [
        291,
        1
      ],
      "strings": []
    },
    "new_line_control": {
      "start_point": [
        295,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": []
    },
    "keep_new_line": {
      "start_point": [
        309,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": []
    },
    "record_line_starts": {
      "start_point": [
        342,
        0
      ],
      "end_point": [
        387,
        1
      ],
      "strings": []
    },
    "create_new_buffer": {
      "start_point": [
        392,
        0
      ],
      "end_point": [
        403,
        1
      ],
      "strings": []
    },
    "get_new_buffer": {
      "start_point": [
        408,
        0
      ],
      "end_point": [
        429,
        1
      ],
      "strings": []
    },
    "free_buffer": {
      "start_point": [
        431,
        0
      ],
      "end_point": [
        444,
        1
      ],
      "strings": []
    },
    "save_buffer": {
      "start_point": [
        449,
        0
      ],
      "end_point": [
        465,
        1
      ],
      "strings": []
    },
    "load_buffer": {
      "start_point": [
        480,
        0
      ],
      "end_point": [
        536,
        1
      ],
      "strings": []
    },
    "get_first_line_in_buffer": {
      "start_point": [
        540,
        0
      ],
      "end_point": [
        547,
        1
      ],
      "strings": [
        "\"input disappeared\""
      ]
    },
    "remove_line": {
      "start_point": [
        553,
        0
      ],
      "end_point": [
        599,
        1
      ],
      "strings": []
    },
    "find_line": {
      "start_point": [
        604,
        0
      ],
      "end_point": [
        638,
        1
      ],
      "strings": []
    },
    "no_more_lines": {
      "start_point": [
        642,
        0
      ],
      "end_point": [
        646,
        1
      ],
      "strings": []
    },
    "set_input_file": {
      "start_point": [
        650,
        0
      ],
      "end_point": [
        656,
        1
      ],
      "strings": [
        "\"-\"",
        "\"cannot open %s for reading\""
      ]
    },
    "write_to_file": {
      "start_point": [
        663,
        0
      ],
      "end_point": [
        694,
        1
      ],
      "strings": [
        "\"%s: line number out of range\"",
        "\"%s: line number out of range\""
      ]
    },
    "dump_rest_of_file": {
      "start_point": [
        698,
        0
      ],
      "end_point": [
        705,
        1
      ],
      "strings": []
    },
    "handle_line_error": {
      "start_point": [
        712,
        0
      ],
      "end_point": [
        725,
        1
      ],
      "strings": [
        "\"%s: %s: line number out of range\"",
        "\" on repetition %s\\n\"",
        "\"\\n\""
      ]
    },
    "process_line_count": {
      "start_point": [
        732,
        0
      ],
      "end_point": [
        764,
        1
      ],
      "strings": []
    },
    "regexp_error": {
      "start_point": [
        767,
        0
      ],
      "end_point": [
        787,
        1
      ],
      "strings": [
        "\"%s: %s: match not found\"",
        "\" on repetition %s\\n\"",
        "\"\\n\""
      ]
    },
    "process_regexp": {
      "start_point": [
        793,
        0
      ],
      "end_point": [
        895,
        1
      ],
      "strings": [
        "\"error in regular expression search\"",
        "\"error in regular expression search\""
      ]
    },
    "split_file": {
      "start_point": [
        899,
        0
      ],
      "end_point": [
        922,
        1
      ],
      "strings": []
    },
    "make_filename": {
      "start_point": [
        931,
        0
      ],
      "end_point": [
        940,
        1
      ],
      "strings": [
        "\"%0*u\""
      ]
    },
    "create_output_file": {
      "start_point": [
        944,
        0
      ],
      "end_point": [
        975,
        1
      ],
      "strings": [
        "\"w\"",
        "\"%s\""
      ]
    },
    "delete_all_files": {
      "start_point": [
        980,
        0
      ],
      "end_point": [
        994,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "close_output_file": {
      "start_point": [
        999,
        0
      ],
      "end_point": [
        1042,
        1
      ],
      "strings": [
        "\"write error for %s\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\\n\""
      ]
    },
    "save_line_to_file": {
      "start_point": [
        1047,
        0
      ],
      "end_point": [
        1058,
        1
      ],
      "strings": [
        "\"write error for %s\""
      ]
    },
    "new_control_record": {
      "start_point": [
        1062,
        0
      ],
      "end_point": [
        1077,
        1
      ],
      "strings": []
    },
    "check_for_offset": {
      "start_point": [
        1084,
        0
      ],
      "end_point": [
        1090,
        1
      ],
      "strings": [
        "\"\"",
        "\"%s: integer expected after delimiter\""
      ]
    },
    "parse_repeat_count": {
      "start_point": [
        1097,
        0
      ],
      "end_point": [
        1123,
        1
      ],
      "strings": [
        "\"%s: '}' is required in repeat count\"",
        "\"\"",
        "\"%s}: integer required between '{' and '}'\""
      ]
    },
    "extract_regexp": {
      "start_point": [
        1131,
        0
      ],
      "end_point": [
        1168,
        1
      ],
      "strings": [
        "\"%s: closing delimiter '%c' missing\"",
        "\"%s: invalid regular expression: %s\""
      ]
    },
    "parse_patterns": {
      "start_point": [
        1173,
        0
      ],
      "end_point": [
        1221,
        1
      ],
      "strings": [
        "\"\"",
        "\"%s: invalid pattern\"",
        "\"%s: line number must be greater than zero\"",
        "\"line number %s is smaller than preceding line number, %s\"",
        "\"warning: line number %s is the same as preceding line number\""
      ]
    },
    "get_format_flags": {
      "start_point": [
        1230,
        0
      ],
      "end_point": [
        1256,
        1
      ],
      "strings": []
    },
    "check_format_conv_type": {
      "start_point": [
        1261,
        0
      ],
      "end_point": [
        1299,
        1
      ],
      "strings": [
        "\"missing conversion specifier in suffix\"",
        "\"invalid conversion specifier in suffix: %c\"",
        "\"invalid conversion specifier in suffix: \\\\%.3o\"",
        "\"invalid flags in conversion specification: %%%c%c\""
      ]
    },
    "max_out": {
      "start_point": [
        1304,
        0
      ],
      "end_point": [
        1334,
        1
      ],
      "strings": [
        "\"too many %% conversion specifications in suffix\"",
        "\"missing %% conversion specification in suffix\""
      ]
    },
    "main": {
      "start_point": [
        1336,
        0
      ],
      "end_point": [
        1472,
        1
      ],
      "strings": [
        "\"\"",
        "\"f:b:kn:sqz\"",
        "\"\"",
        "\"invalid number\"",
        "\"missing operand\"",
        "\"missing operand after %s\"",
        "\"read error\""
      ]
    },
    "usage": {
      "start_point": [
        1474,
        0
      ],
      "end_point": [
        1525,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... FILE PATTERN...\\n\\\n\"",
        "\"\\\nOutput pieces of FILE separated by PATTERN(s) to files 'xx00', 'xx01', ...,\\n\\\nand output byte counts of each piece to standard output.\\n\\\n\"",
        "\"\\\n\\n\\\nRead standard input if FILE is -\\n\\\n\"",
        "\"\\\n  -b, --suffix-format=FORMAT  use sprintf FORMAT instead of %02d\\n\\\n  -f, --prefix=PREFIX        use PREFIX instead of 'xx'\\n\\\n  -k, --keep-files           do not remove output files on errors\\n\\\n\"",
        "\"\\\n      --suppress-matched     suppress the lines matching PATTERN\\n\\\n\"",
        "\"\\\n  -n, --digits=DIGITS        use specified number of digits instead of 2\\n\\\n  -s, --quiet, --silent      do not print counts of output file sizes\\n\\\n  -z, --elide-empty-files    remove empty output files\\n\\\n\"",
        "\"\\\n\\n\\\nEach PATTERN may be:\\n\\\n  INTEGER            copy up to but not including specified line number\\n\\\n  /REGEXP/[OFFSET]   copy up to but not including a matching line\\n\\\n  %REGEXP%[OFFSET]   skip to, but not including a matching line\\n\\\n  {INTEGER}          repeat the previous pattern specified number of times\\n\\\n  {*}                repeat the previous pattern as many times as possible\\n\\\n\\n\\\nA line OFFSET is a required '+' or '-' followed by a positive integer.\\n\\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/cut.c": {
    "usage": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        199,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s OPTION... [FILE]...\\n\\\n\"",
        "\"\\\nPrint selected parts of lines from each FILE to standard output.\\n\\\n\"",
        "\"\\\n  -b, --bytes=LIST        select only these bytes\\n\\\n  -c, --characters=LIST   select only these characters\\n\\\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\\n\\\n\"",
        "\"\\\n  -f, --fields=LIST       select only these fields;  also print any line\\n\\\n                            that contains no delimiter character, unless\\n\\\n                            the -s option is specified\\n\\\n  -n                      (ignored)\\n\\\n\"",
        "\"\\\n      --complement        complement the set of selected bytes, characters\\n\\\n                            or fields\\n\\\n\"",
        "\"\\\n  -s, --only-delimited    do not print lines not containing delimiters\\n\\\n      --output-delimiter=STRING  use STRING as the output delimiter\\n\\\n                            the default is to use the input delimiter\\n\\\n\"",
        "\"\\\n  -z, --zero-terminated    line delimiter is NUL, not newline\\n\\\n\"",
        "\"\\\n\\n\\\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\\n\\\nrange, or many ranges separated by commas.  Selected input is written\\n\\\nin the same order that it is read, and is written exactly once.\\n\\\n\"",
        "\"\\\nEach range is one of:\\n\\\n\\n\\\n  N     N'th byte, character or field, counted from 1\\n\\\n  N-    from N'th byte, character or field, to end of line\\n\\\n  N-M   from N'th to M'th (included) byte, character or field\\n\\\n  -M    from first to M'th (included) byte, character or field\\n\\\n\""
      ]
    },
    "next_item": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": []
    },
    "print_kth": {
      "start_point": [
        215,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": []
    },
    "is_range_start_index": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": []
    },
    "cut_bytes": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": []
    },
    "cut_fields": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": []
    },
    "cut_stream": {
      "start_point": [
        427,
        0
      ],
      "end_point": [
        434,
        1
      ],
      "strings": []
    },
    "cut_file": {
      "start_point": [
        439,
        0
      ],
      "end_point": [
        476,
        1
      ],
      "strings": [
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"%s\"",
        "\"-\"",
        "\"%s\""
      ]
    },
    "main": {
      "start_point": [
        478,
        0
      ],
      "end_point": [
        608,
        1
      ],
      "strings": [
        "\"\"",
        "\"b:c:d:f:nsz\"",
        "\"only one type of list may be specified\"",
        "\"only one type of list may be specified\"",
        "\"the delimiter must be a single character\"",
        "\"you must specify a list of bytes, characters, or fields\"",
        "\"an input delimiter may be specified only\\\n when operating on fields\"",
        "\"suppressing non-delimited lines makes sense\\n\\\n\\tonly when operating on fields\"",
        "\"-\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/date.c": {
    "usage": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [+FORMAT]\\n\\\n  or:  %s [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]\\n\\\n\"",
        "\"\\\nDisplay the current time in the given FORMAT, or set the system date.\\n\\\n\"",
        "\"\\\n  -d, --date=STRING          display time described by STRING, not 'now'\\n\\\n\"",
        "\"\\\n      --debug                annotate the parsed date,\\n\\\n                              and warn about questionable usage to stderr\\n\\\n\"",
        "\"\\\n  -f, --file=DATEFILE        like --date; once for each line of DATEFILE\\n\\\n\"",
        "\"\\\n  -I[FMT], --iso-8601[=FMT]  output date/time in ISO 8601 format.\\n\\\n                               FMT='date' for date only (the default),\\n\\\n                               'hours', 'minutes', 'seconds', or 'ns'\\n\\\n                               for date and time to the indicated precision.\\n\\\n                               Example: 2006-08-14T02:34:56-06:00\\n\\\n\"",
        "\"\\\n  -R, --rfc-email            output date and time in RFC 5322 format.\\n\\\n                               Example: Mon, 14 Aug 2006 02:34:56 -0600\\n\\\n\"",
        "\"\\\n      --rfc-3339=FMT         output date/time in RFC 3339 format.\\n\\\n                               FMT='date', 'seconds', or 'ns'\\n\\\n                               for date and time to the indicated precision.\\n\\\n                               Example: 2006-08-14 02:34:56-06:00\\n\\\n\"",
        "\"\\\n  -r, --reference=FILE       display the last modification time of FILE\\n\\\n\"",
        "\"\\\n  -s, --set=STRING           set time described by STRING\\n\\\n  -u, --utc, --universal     print or set Coordinated Universal Time (UTC)\\n\\\n\"",
        "\"\\\n\\n\\\nFORMAT controls the output.  Interpreted sequences are:\\n\\\n\\n\\\n  %%   a literal %\\n\\\n  %a   locale's abbreviated weekday name (e.g., Sun)\\n\\\n\"",
        "\"\\\n  %A   locale's full weekday name (e.g., Sunday)\\n\\\n  %b   locale's abbreviated month name (e.g., Jan)\\n\\\n  %B   locale's full month name (e.g., January)\\n\\\n  %c   locale's date and time (e.g., Thu Mar  3 23:05:25 2005)\\n\\\n\"",
        "\"\\\n  %C   century; like %Y, except omit last two digits (e.g., 20)\\n\\\n  %d   day of month (e.g., 01)\\n\\\n  %D   date; same as %m/%d/%y\\n\\\n  %e   day of month, space padded; same as %_d\\n\\\n\"",
        "\"\\\n  %F   full date; same as %Y-%m-%d\\n\\\n  %g   last two digits of year of ISO week number (see %G)\\n\\\n  %G   year of ISO week number (see %V); normally useful only with %V\\n\\\n\"",
        "\"\\\n  %h   same as %b\\n\\\n  %H   hour (00..23)\\n\\\n  %I   hour (01..12)\\n\\\n  %j   day of year (001..366)\\n\\\n\"",
        "\"\\\n  %k   hour, space padded ( 0..23); same as %_H\\n\\\n  %l   hour, space padded ( 1..12); same as %_I\\n\\\n  %m   month (01..12)\\n\\\n  %M   minute (00..59)\\n\\\n\"",
        "\"\\\n  %n   a newline\\n\\\n  %N   nanoseconds (000000000..999999999)\\n\\\n  %p   locale's equivalent of either AM or PM; blank if not known\\n\\\n  %P   like %p, but lower case\\n\\\n  %q   quarter of year (1..4)\\n\\\n  %r   locale's 12-hour clock time (e.g., 11:11:04 PM)\\n\\\n  %R   24-hour hour and minute; same as %H:%M\\n\\\n  %s   seconds since 1970-01-01 00:00:00 UTC\\n\\\n\"",
        "\"\\\n  %S   second (00..60)\\n\\\n  %t   a tab\\n\\\n  %T   time; same as %H:%M:%S\\n\\\n  %u   day of week (1..7); 1 is Monday\\n\\\n\"",
        "\"\\\n  %U   week number of year, with Sunday as first day of week (00..53)\\n\\\n  %V   ISO week number, with Monday as first day of week (01..53)\\n\\\n  %w   day of week (0..6); 0 is Sunday\\n\\\n  %W   week number of year, with Monday as first day of week (00..53)\\n\\\n\"",
        "\"\\\n  %x   locale's date representation (e.g., 12/31/99)\\n\\\n  %X   locale's time representation (e.g., 23:13:48)\\n\\\n  %y   last two digits of year (00..99)\\n\\\n  %Y   year\\n\\\n\"",
        "\"\\\n  %z   +hhmm numeric time zone (e.g., -0400)\\n\\\n  %:z  +hh:mm numeric time zone (e.g., -04:00)\\n\\\n  %::z  +hh:mm:ss numeric time zone (e.g., -04:00:00)\\n\\\n  %:::z  numeric time zone with : to necessary precision (e.g., -04, +05:30)\\n\\\n  %Z   alphabetic time zone abbreviation (e.g., EDT)\\n\\\n\\n\\\nBy default, date pads numeric fields with zeroes.\\n\\\n\"",
        "\"\\\nThe following optional flags may follow '%':\\n\\\n\\n\\\n  -  (hyphen) do not pad the field\\n\\\n  _  (underscore) pad with spaces\\n\\\n  0  (zero) pad with zeros\\n\\\n  ^  use upper case if possible\\n\\\n  #  use opposite case if possible\\n\\\n\"",
        "\"\\\n\\n\\\nAfter any flags comes an optional field width, as a decimal number;\\n\\\nthen an optional modifier, which is either\\n\\\nE to use the locale's alternate representations if available, or\\n\\\nO to use the locale's alternate numeric symbols if available.\\n\\\n\"",
        "\"\\\n\\n\\\nExamples:\\n\\\nConvert seconds since the epoch (1970-01-01 UTC) to a date\\n\\\n  $ date --date='@2147483647'\\n\\\n\\n\\\nShow the time on the west coast of the US (use tzselect(1) to find TZ)\\n\\\n  $ TZ='America/Los_Angeles' date\\n\\\n\\n\\\nShow the local time for 9AM next Friday on the west coast of the US\\n\\\n  $ date --date='TZ=\\\"America/Los_Angeles\\\" 09:00 next Fri'\\n\\\n\""
      ]
    },
    "batch_convert": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        343,
        1
      ],
      "strings": [
        "\"-\"",
        "\"standard input\"",
        "\"r\"",
        "\"%s\"",
        "\"invalid date %s\"",
        "\"%s\""
      ]
    },
    "main": {
      "start_point": [
        345,
        0
      ],
      "end_point": [
        575,
        1
      ],
      "strings": [
        "\"\"",
        "\"%Y-%m-%d\"",
        "\"%Y-%m-%d %H:%M:%S%:z\"",
        "\"%Y-%m-%d %H:%M:%S.%N%:z\"",
        "\"--rfc-3339\"",
        "\"%Y-%m-%d\"",
        "\"%Y-%m-%dT%H:%M:%S%:z\"",
        "\"%Y-%m-%dT%H:%M:%S,%N%:z\"",
        "\"%Y-%m-%dT%H%:z\"",
        "\"%Y-%m-%dT%H:%M%:z\"",
        "\"--iso-8601\"",
        "\"TZ=UTC0\"",
        "\"multiple output formats specified\"",
        "\"the options to specify dates for printing are mutually exclusive\"",
        "\"the options to print and set the time may not be used together\"",
        "\"extra operand %s\"",
        "\"multiple output formats specified\"",
        "\"the argument %s lacks a leading '+';\\n\"",
        "\"when using an option to specify date(s), any non-option\\n\"",
        "\"argument must be a format string beginning with '+'\"",
        "\"%a %b %e %H:%M:%S %Z %Y\"",
        "\"TZ\"",
        "\"%s\"",
        "\"invalid date %s\"",
        "\"cannot set date\""
      ]
    },
    "show_date": {
      "start_point": [
        580,
        0
      ],
      "end_point": [
        602,
        1
      ],
      "strings": [
        "\"C\"",
        "\"\"",
        "\"time %s is out of range\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/dd.c": {
    "maybe_close_stdout": {
      "start_point": [
        528,
        0
      ],
      "end_point": [
        535,
        1
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_FORMAT": {
      "start_point": [
        539,
        0
      ],
      "end_point": [
        552,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        556,
        0
      ],
      "end_point": [
        685,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPERAND]...\\n\\\n  or:  %s OPTION\\n\\\n\"",
        "\"\\\nCopy a file, converting and formatting according to the operands.\\n\\\n\\n\\\n  bs=BYTES        read and write up to BYTES bytes at a time (default: 512);\\n\\\n                  overrides ibs and obs\\n\\\n  cbs=BYTES       convert BYTES bytes at a time\\n\\\n  conv=CONVS      convert the file as per the comma separated symbol list\\n\\\n  count=N         copy only N input blocks\\n\\\n  ibs=BYTES       read up to BYTES bytes at a time (default: 512)\\n\\\n\"",
        "\"\\\n  if=FILE         read from FILE instead of stdin\\n\\\n  iflag=FLAGS     read as per the comma separated symbol list\\n\\\n  obs=BYTES       write BYTES bytes at a time (default: 512)\\n\\\n  of=FILE         write to FILE instead of stdout\\n\\\n  oflag=FLAGS     write as per the comma separated symbol list\\n\\\n  seek=N          skip N obs-sized blocks at start of output\\n\\\n  skip=N          skip N ibs-sized blocks at start of input\\n\\\n  status=LEVEL    The LEVEL of information to print to stderr;\\n\\\n                  'none' suppresses everything but error messages,\\n\\\n                  'noxfer' suppresses the final transfer statistics,\\n\\\n                  'progress' shows periodic transfer statistics\\n\\\n\"",
        "\"\\\n\\n\\\nN and BYTES may be followed by the following multiplicative suffixes:\\n\\\nc =1, w =2, b =512, kB =1000, K =1024, MB =1000*1000, M =1024*1024, xM =M,\\n\\\nGB =1000*1000*1000, G =1024*1024*1024, and so on for T, P, E, Z, Y.\\n\\\n\\n\\\nEach CONV symbol may be:\\n\\\n\\n\\\n\"",
        "\"\\\n  ascii     from EBCDIC to ASCII\\n\\\n  ebcdic    from ASCII to EBCDIC\\n\\\n  ibm       from ASCII to alternate EBCDIC\\n\\\n  block     pad newline-terminated records with spaces to cbs-size\\n\\\n  unblock   replace trailing spaces in cbs-size records with newline\\n\\\n  lcase     change upper case to lower case\\n\\\n  ucase     change lower case to upper case\\n\\\n  sparse    try to seek rather than write the output for NUL input blocks\\n\\\n  swab      swap every pair of input bytes\\n\\\n  sync      pad every input block with NULs to ibs-size; when used\\n\\\n            with block or unblock, pad with spaces rather than NULs\\n\\\n\"",
        "\"\\\n  excl      fail if the output file already exists\\n\\\n  nocreat   do not create the output file\\n\\\n  notrunc   do not truncate the output file\\n\\\n  noerror   continue after read errors\\n\\\n  fdatasync  physically write output file data before finishing\\n\\\n  fsync     likewise, but also write metadata\\n\\\n\"",
        "\"\\\n\\n\\\nEach FLAG symbol may be:\\n\\\n\\n\\\n  append    append mode (makes sense only for output; conv=notrunc suggested)\\n\\\n\"",
        "\"  cio       use concurrent I/O for data\\n\"",
        "\"  direct    use direct I/O for data\\n\"",
        "\"  directory  fail unless a directory\\n\"",
        "\"  dsync     use synchronized I/O for data\\n\"",
        "\"  sync      likewise, but also for metadata\\n\"",
        "\"  fullblock  accumulate full blocks of input (iflag only)\\n\"",
        "\"  nonblock  use non-blocking I/O\\n\"",
        "\"  noatime   do not update access time\\n\"",
        "\"  nocache   Request to drop cache.  See also oflag=sync\\n\"",
        "\"  noctty    do not assign controlling terminal from file\\n\"",
        "\"  nofollow  do not follow symlinks\\n\"",
        "\"  nolinks   fail if multiply-linked\\n\"",
        "\"  binary    use binary I/O for data\\n\"",
        "\"  text      use text I/O for data\\n\"",
        "\"  count_bytes  treat 'count=N' as a byte count (iflag only)\\n\\\n\"",
        "\"  skip_bytes  treat 'skip=N' as a byte count (iflag only)\\n\\\n\"",
        "\"  seek_bytes  treat 'seek=N' as a byte count (oflag only)\\n\\\n\"",
        "\"\\\n\\n\\\nSending a %s signal to a running 'dd' process makes it\\n\\\nprint I/O statistics to standard error and then resume copying.\\n\\\n\\n\\\nOptions are:\\n\\\n\\n\\\n\"",
        "\"USR1\"",
        "\"INFO\""
      ]
    },
    "alloc_ibuf": {
      "start_point": [
        694,
        0
      ],
      "end_point": [
        715,
        1
      ],
      "strings": [
        "\"memory exhausted by input buffer of size %\"",
        "\" bytes (%s)\""
      ]
    },
    "alloc_obuf": {
      "start_point": [
        719,
        0
      ],
      "end_point": [
        747,
        1
      ],
      "strings": [
        "\"memory exhausted by output buffer of size %\"",
        "\" bytes (%s)\""
      ]
    },
    "translate_charset": {
      "start_point": [
        749,
        0
      ],
      "end_point": [
        755,
        1
      ],
      "strings": []
    },
    "multiple_bits_set": {
      "start_point": [
        759,
        0
      ],
      "end_point": [
        763,
        1
      ],
      "strings": []
    },
    "abbreviation_lacks_prefix": {
      "start_point": [
        765,
        0
      ],
      "end_point": [
        769,
        1
      ],
      "strings": []
    },
    "print_xfer_stats": {
      "start_point": [
        773,
        0
      ],
      "end_point": [
        847,
        1
      ],
      "strings": [
        "\"/s\"",
        "\"%s B/s\"",
        "\"Infinity\"",
        "\"%.0f s\"",
        "\"%g s\"",
        "\"%\"",
        "\" byte copied, %s, %s\"",
        "\"%\"",
        "\" bytes copied, %s, %s\"",
        "\"%\"",
        "\" bytes (%s) copied, %s, %s\"",
        "\"%\"",
        "\" bytes (%s, %s) copied, %s, %s\"",
        "\"%*s\"",
        "\"\""
      ]
    },
    "print_stats": {
      "start_point": [
        849,
        0
      ],
      "end_point": [
        877,
        1
      ],
      "strings": [
        "\"%\"",
        "\"+%\"",
        "\" records in\\n\"",
        "\"%\"",
        "\"+%\"",
        "\" records out\\n\"",
        "\"%\"",
        "\" truncated record\\n\"",
        "\"%\"",
        "\" truncated records\\n\""
      ]
    },
    "interrupt_handler": {
      "start_point": [
        881,
        0
      ],
      "end_point": [
        887,
        1
      ],
      "strings": []
    },
    "siginfo_handler": {
      "start_point": [
        891,
        0
      ],
      "end_point": [
        897,
        1
      ],
      "strings": []
    },
    "install_signal_handlers": {
      "start_point": [
        901,
        0
      ],
      "end_point": [
        947,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\""
      ]
    },
    "cleanup": {
      "start_point": [
        949,
        0
      ],
      "end_point": [
        961,
        1
      ],
      "strings": [
        "\"closing input file %s\"",
        "\"closing output file %s\""
      ]
    },
    "process_signals": {
      "start_point": [
        967,
        0
      ],
      "end_point": [
        994,
        1
      ],
      "strings": []
    },
    "finish_up": {
      "start_point": [
        996,
        0
      ],
      "end_point": [
        1002,
        1
      ],
      "strings": []
    },
    "ATTRIBUTE_NORETURN": {
      "start_point": [
        1004,
        0
      ],
      "end_point": [
        1009,
        1
      ],
      "strings": []
    },
    "cache_round": {
      "start_point": [
        1016,
        0
      ],
      "end_point": [
        1035,
        1
      ],
      "strings": []
    },
    "invalidate_cache": {
      "start_point": [
        1041,
        0
      ],
      "end_point": [
        1105,
        1
      ],
      "strings": []
    },
    "iread": {
      "start_point": [
        1111,
        0
      ],
      "end_point": [
        1155,
        1
      ],
      "strings": [
        "\"warning: partial read (%\"",
        "\" byte); \"",
        "\"suggest iflag=fullblock\"",
        "\"warning: partial read (%\"",
        "\" bytes); \"",
        "\"suggest iflag=fullblock\""
      ]
    },
    "iread_fullblock": {
      "start_point": [
        1158,
        0
      ],
      "end_point": [
        1176,
        1
      ],
      "strings": []
    },
    "iwrite": {
      "start_point": [
        1183,
        0
      ],
      "end_point": [
        1257,
        1
      ],
      "strings": [
        "\"failed to turn off O_DIRECT: %s\""
      ]
    },
    "write_output": {
      "start_point": [
        1261,
        0
      ],
      "end_point": [
        1276,
        1
      ],
      "strings": [
        "\"writing to %s\""
      ]
    },
    "ifd_reopen": {
      "start_point": [
        1280,
        0
      ],
      "end_point": [
        1293,
        1
      ],
      "strings": []
    },
    "iftruncate": {
      "start_point": [
        1297,
        0
      ],
      "end_point": [
        1310,
        1
      ],
      "strings": []
    },
    "operand_matches": {
      "start_point": [
        1314,
        0
      ],
      "end_point": [
        1321,
        1
      ],
      "strings": []
    },
    "parse_symbols": {
      "start_point": [
        1327,
        0
      ],
      "end_point": [
        1361,
        1
      ],
      "strings": [
        "\"%s: %s\""
      ]
    },
    "parse_integer": {
      "start_point": [
        1368,
        0
      ],
      "end_point": [
        1400,
        1
      ],
      "strings": [
        "\"bcEGkKMPTwYZ0\"",
        "\"0x\"",
        "\"warning: %s is a zero multiplier; \"",
        "\"use %s if that is intended\"",
        "\"0x\"",
        "\"00x\""
      ]
    },
    "_GL_ATTRIBUTE_PURE": {
      "start_point": [
        1404,
        0
      ],
      "end_point": [
        1408,
        1
      ],
      "strings": []
    },
    "scanargs": {
      "start_point": [
        1410,
        0
      ],
      "end_point": [
        1604,
        1
      ],
      "strings": [
        "\"unrecognized operand %s\"",
        "\"if\"",
        "\"of\"",
        "\"conv\"",
        "\"invalid conversion\"",
        "\"iflag\"",
        "\"invalid input flag\"",
        "\"oflag\"",
        "\"invalid output flag\"",
        "\"status\"",
        "\"invalid status level\"",
        "\"ibs\"",
        "\"obs\"",
        "\"bs\"",
        "\"cbs\"",
        "\"skip\"",
        "\"seek\"",
        "\"count\"",
        "\"unrecognized operand %s\"",
        "\"%s: %s\"",
        "\"invalid number\"",
        "\"%s: %s\"",
        "\"invalid output flag\"",
        "\"fullblock\"",
        "\"%s: %s\"",
        "\"invalid input flag\"",
        "\"seek_bytes\"",
        "\"%s: %s\"",
        "\"invalid output flag\"",
        "\"count_bytes\"",
        "\"skip_bytes\"",
        "\"cannot combine any two of {ascii,ebcdic,ibm}\"",
        "\"cannot combine block and unblock\"",
        "\"cannot combine lcase and ucase\"",
        "\"cannot combine excl and nocreat\"",
        "\"cannot combine direct and nocache\""
      ]
    },
    "apply_translations": {
      "start_point": [
        1608,
        0
      ],
      "end_point": [
        1641,
        1
      ],
      "strings": []
    },
    "translate_buffer": {
      "start_point": [
        1646,
        0
      ],
      "end_point": [
        1653,
        1
      ],
      "strings": []
    },
    "swab_buffer": {
      "start_point": [
        1666,
        0
      ],
      "end_point": [
        1695,
        1
      ],
      "strings": []
    },
    "advance_input_offset": {
      "start_point": [
        1700,
        0
      ],
      "end_point": [
        1706,
        1
      ],
      "strings": []
    },
    "skip_via_lseek": {
      "start_point": [
        1731,
        0
      ],
      "end_point": [
        1756,
        1
      ],
      "strings": [
        "\"warning: working around lseek kernel bug for file \"",
        "\"(%s)\\n  of mt_type=0x%0lx -- \"",
        "\"see <sys/mtio.h> for the list of types\""
      ]
    },
    "skip": {
      "start_point": [
        1770,
        0
      ],
      "end_point": [
        1885,
        1
      ],
      "strings": [
        "\"cannot fstat %s\"",
        "\"%s: cannot skip\"",
        "\"%s: cannot seek\"",
        "\"error reading %s\"",
        "\"%s: cannot seek\""
      ]
    },
    "advance_input_after_read_error": {
      "start_point": [
        1893,
        0
      ],
      "end_point": [
        1931,
        1
      ],
      "strings": [
        "\"offset overflow while reading file %s\"",
        "\"warning: invalid file offset after failed read\"",
        "\"cannot work around kernel bug after all\"",
        "\"%s: cannot seek\""
      ]
    },
    "copy_simple": {
      "start_point": [
        1935,
        0
      ],
      "end_point": [
        1953,
        1
      ],
      "strings": []
    },
    "copy_with_block": {
      "start_point": [
        1959,
        0
      ],
      "end_point": [
        1983,
        1
      ],
      "strings": []
    },
    "copy_with_unblock": {
      "start_point": [
        1989,
        0
      ],
      "end_point": [
        2018,
        1
      ],
      "strings": []
    },
    "set_fd_flags": {
      "start_point": [
        2023,
        0
      ],
      "end_point": [
        2066,
        1
      ],
      "strings": [
        "\"setting flags for %s\""
      ]
    },
    "dd_copy": {
      "start_point": [
        2070,
        0
      ],
      "end_point": [
        2375,
        1
      ],
      "strings": [
        "\"%s: cannot skip to specified offset\"",
        "\"writing to %s\"",
        "\"error reading %s\"",
        "\"error writing %s\"",
        "\"error writing %s\"",
        "\"cannot fstat %s\"",
        "\"failed to truncate to %\"",
        "\" bytes\"",
        "\" in output file %s\"",
        "\"fdatasync failed for %s\"",
        "\"fsync failed for %s\""
      ]
    },
    "main": {
      "start_point": [
        2377,
        0
      ],
      "end_point": [
        2521,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"standard input\"",
        "\"failed to open %s\"",
        "\"standard output\"",
        "\"failed to open %s\"",
        "\"offset too large: \"",
        "\"cannot truncate to a length of seek=%\"",
        "\"\"",
        "\" (%lu-byte) blocks\"",
        "\"cannot fstat %s\"",
        "\"failed to truncate to %\"",
        "\" bytes\"",
        "\" in output file %s\"",
        "\"failed to discard cache for: %s\"",
        "\"failed to discard cache for: %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/df.c": {
    "hide_problematic_chars": {
      "start_point": [
        277,
        0
      ],
      "end_point": [
        288,
        1
      ],
      "strings": []
    },
    "alloc_table_row": {
      "start_point": [
        293,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": []
    },
    "print_table": {
      "start_point": [
        304,
        0
      ],
      "end_point": [
        340,
        1
      ],
      "strings": []
    },
    "alloc_field": {
      "start_point": [
        345,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": [
        "\"field used\""
      ]
    },
    "decode_output_arg": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        433,
        1
      ],
      "strings": [
        "\"option --output: field %s unknown\"",
        "\"option --output: field %s used more than once\"",
        "\"Size\"",
        "\"Avail\"",
        "\"invalid field\""
      ]
    },
    "get_field_list": {
      "start_point": [
        436,
        0
      ],
      "end_point": [
        497,
        1
      ],
      "strings": [
        "\"Size\"",
        "\"Avail\"",
        "\"Capacity\"",
        "\"invalid header_mode\""
      ]
    },
    "get_header": {
      "start_point": [
        501,
        0
      ],
      "end_point": [
        577,
        1
      ],
      "strings": [
        "\"blocks\"",
        "\"%s-%s\"",
        "\"%s-%s\""
      ]
    },
    "selected_fstype": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        592,
        1
      ],
      "strings": []
    },
    "excluded_fstype": {
      "start_point": [
        596,
        0
      ],
      "end_point": [
        607,
        1
      ],
      "strings": []
    },
    "devlist_hash": {
      "start_point": [
        609,
        0
      ],
      "end_point": [
        614,
        1
      ],
      "strings": []
    },
    "devlist_compare": {
      "start_point": [
        616,
        0
      ],
      "end_point": [
        622,
        1
      ],
      "strings": []
    },
    "devlist_for_dev": {
      "start_point": [
        624,
        0
      ],
      "end_point": [
        632,
        1
      ],
      "strings": []
    },
    "devlist_free": {
      "start_point": [
        634,
        0
      ],
      "end_point": [
        638,
        1
      ],
      "strings": []
    },
    "filter_mount_list": {
      "start_point": [
        647,
        0
      ],
      "end_point": [
        771,
        1
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_PURE": {
      "start_point": [
        777,
        0
      ],
      "end_point": [
        785,
        1
      ],
      "strings": []
    },
    "known_value": {
      "start_point": [
        791,
        0
      ],
      "end_point": [
        795,
        1
      ],
      "strings": []
    },
    "df_readable": {
      "start_point": [
        804,
        0
      ],
      "end_point": [
        818,
        1
      ],
      "strings": [
        "\"-\""
      ]
    },
    "add_uint_with_neg_flag": {
      "start_point": [
        827,
        0
      ],
      "end_point": [
        853,
        1
      ],
      "strings": []
    },
    "has_uuid_suffix": {
      "start_point": [
        858,
        0
      ],
      "end_point": [
        864,
        1
      ],
      "strings": [
        "\"-0123456789abcdefABCDEF\""
      ]
    },
    "get_field_values": {
      "start_point": [
        868,
        0
      ],
      "end_point": [
        903,
        1
      ],
      "strings": []
    },
    "add_to_grand_total": {
      "start_point": [
        906,
        0
      ],
      "end_point": [
        923,
        1
      ],
      "strings": []
    },
    "get_dev": {
      "start_point": [
        940,
        0
      ],
      "end_point": [
        1189,
        1
      ],
      "strings": [
        "\"-\"",
        "\"%s\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"bad field_type\"",
        "\"%.0f%%\"",
        "\"-\"",
        "\"/auto/\"",
        "\"/tmp_mnt/\"",
        "\"unhandled field\"",
        "\"empty cell\""
      ]
    },
    "last_device_for_mount": {
      "start_point": [
        1193,
        0
      ],
      "end_point": [
        1216,
        1
      ],
      "strings": []
    },
    "get_disk": {
      "start_point": [
        1220,
        0
      ],
      "end_point": [
        1296,
        1
      ],
      "strings": [
        "\"cannot access %s: over-mounted by another device\""
      ]
    },
    "get_point": {
      "start_point": [
        1301,
        0
      ],
      "end_point": [
        1394,
        1
      ],
      "strings": [
        "\"lofs\"",
        "\"%s\"",
        "\"lofs\""
      ]
    },
    "get_entry": {
      "start_point": [
        1399,
        0
      ],
      "end_point": [
        1407,
        1
      ],
      "strings": []
    },
    "get_all_entries": {
      "start_point": [
        1412,
        0
      ],
      "end_point": [
        1422,
        1
      ],
      "strings": []
    },
    "add_fs_type": {
      "start_point": [
        1426,
        0
      ],
      "end_point": [
        1435,
        1
      ],
      "strings": []
    },
    "add_excluded_fs_type": {
      "start_point": [
        1439,
        0
      ],
      "end_point": [
        1448,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        1450,
        0
      ],
      "end_point": [
        1510,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [FILE]...\\n\"",
        "\"\\\nShow information about the file system on which each FILE resides,\\n\\\nor all file systems by default.\\n\\\n\"",
        "\"\\\n  -a, --all             include pseudo, duplicate, inaccessible file systems\\n\\\n  -B, --block-size=SIZE  scale sizes by SIZE before printing them; e.g.,\\n\\\n                           '-BM' prints sizes in units of 1,048,576 bytes;\\n\\\n                           see SIZE format below\\n\\\n  -h, --human-readable  print sizes in powers of 1024 (e.g., 1023M)\\n\\\n  -H, --si              print sizes in powers of 1000 (e.g., 1.1G)\\n\\\n\"",
        "\"\\\n  -i, --inodes          list inode information instead of block usage\\n\\\n  -k                    like --block-size=1K\\n\\\n  -l, --local           limit listing to local file systems\\n\\\n      --no-sync         do not invoke sync before getting usage info (default)\\\n\\n\\\n\"",
        "\"\\\n      --output[=FIELD_LIST]  use the output format defined by FIELD_LIST,\\n\\\n                               or print all fields if FIELD_LIST is omitted.\\n\\\n  -P, --portability     use the POSIX output format\\n\\\n      --sync            invoke sync before getting usage info\\n\\\n\"",
        "\"\\\n      --total           elide all entries insignificant to available space,\\n\\\n                          and produce a grand total\\n\\\n\"",
        "\"\\\n  -t, --type=TYPE       limit listing to file systems of type TYPE\\n\\\n  -T, --print-type      print file system type\\n\\\n  -x, --exclude-type=TYPE   limit listing to file systems not of type TYPE\\n\\\n  -v                    (ignored)\\n\\\n\"",
        "\"DF\"",
        "\"\\n\\\nFIELD_LIST is a comma-separated list of columns to be included.  Valid\\n\\\nfield names are: 'source', 'fstype', 'itotal', 'iused', 'iavail', 'ipcent',\\n\\\n'size', 'used', 'avail', 'pcent', 'file' and 'target' (see info page).\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        1512,
        0
      ],
      "end_point": [
        1793,
        1
      ],
      "strings": [
        "\"\"",
        "\"options %s and %s are mutually exclusive\"",
        "\"aB:iF:hHklmPTt:vx:\"",
        "\"-i\"",
        "\"--output\"",
        "\"-T\"",
        "\"--output\"",
        "\"-P\"",
        "\"--output\"",
        "\"-i\"",
        "\"--output\"",
        "\"-P\"",
        "\"--output\"",
        "\"-T\"",
        "\"--output\"",
        "\"POSIXLY_CORRECT\"",
        "\"DF_BLOCK_SIZE\"",
        "\"file system type %s both selected and excluded\"",
        "\"%s\"",
        "\"Warning: \"",
        "\"\"",
        "\"%s%s\"",
        "\"cannot read table of mounted file systems\"",
        "\"total\"",
        "\"-\"",
        "\"total\"",
        "\"no file systems processed\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/die.h": {},
  "coreutils/coreutils-8.29/src/dircolors.c": {
    "usage": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [FILE]\\n\"",
        "\"\\\nOutput commands to set the LS_COLORS environment variable.\\n\\\n\\n\\\nDetermine format of output:\\n\\\n  -b, --sh, --bourne-shell    output Bourne shell code to set LS_COLORS\\n\\\n  -c, --csh, --c-shell        output C shell code to set LS_COLORS\\n\\\n  -p, --print-database        output defaults\\n\\\n\"",
        "\"\\\n\\n\\\nIf FILE is specified, read it to determine which colors to use for which\\n\\\nfile types and extensions.  Otherwise, a precompiled database is used.\\n\\\nFor details on the format of these files, run 'dircolors --print-database'.\\n\\\n\""
      ]
    },
    "guess_shell_syntax": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": [
        "\"SHELL\"",
        "\"csh\"",
        "\"tcsh\""
      ]
    },
    "parse_line": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "append_quoted": {
      "start_point": [
        193,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": []
    },
    "dc_parse_stream": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        370,
        1
      ],
      "strings": [
        "\"TERM\"",
        "\"none\"",
        "\"%s:%lu: invalid line;  missing second token\"",
        "\"TERM\"",
        "\"OPTIONS\"",
        "\"COLOR\"",
        "\"EIGHTBIT\"",
        "\"%s:%lu: unrecognized keyword %s\"",
        "\"<internal>\""
      ]
    },
    "dc_parse_file": {
      "start_point": [
        372,
        0
      ],
      "end_point": [
        392,
        1
      ],
      "strings": [
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"%s\""
      ]
    },
    "main": {
      "start_point": [
        394,
        0
      ],
      "end_point": [
        508,
        1
      ],
      "strings": [
        "\"\"",
        "\"bcp\"",
        "\"the options to output dircolors' internal database and\\n\"",
        "\"to select a shell syntax are mutually exclusive\"",
        "\"extra operand %s\"",
        "\"%s\\n\"",
        "\"file operands cannot be combined with \"",
        "\"--print-database (-p)\"",
        "\"no SHELL environment variable, and no shell type option given\"",
        "\"LS_COLORS='\"",
        "\"';\\nexport LS_COLORS\\n\"",
        "\"setenv LS_COLORS '\"",
        "\"'\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/dircolors.h": {},
  "coreutils/coreutils-8.29/src/dirname.c": {
    "usage": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION] NAME...\\n\\\n\"",
        "\"\\\nOutput each NAME with its last non-slash component and trailing slashes\\n\\\nremoved; if NAME contains no /'s, output '.' (meaning the current directory).\\n\\\n\\n\\\n\"",
        "\"\\\n  -z, --zero     end each output line with NUL, not newline\\n\\\n\"",
        "\"\\\n\\n\\\nExamples:\\n\\\n  %s /usr/bin/          -> \\\"/usr\\\"\\n\\\n  %s dir1/str dir2/str  -> \\\"dir1\\\" followed by \\\"dir2\\\"\\n\\\n  %s stdio.h            -> \\\".\\\"\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": [
        "\"\"",
        "\"z\"",
        "\"missing operand\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/du.c": {
    "duinfo_init": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "duinfo_set": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "duinfo_add": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        276,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n  or:  %s [OPTION]... --files0-from=F\\n\\\n\"",
        "\"\\\nSummarize disk usage of the set of FILEs, recursively for directories.\\n\\\n\"",
        "\"\\\n  -0, --null            end each output line with NUL, not newline\\n\\\n  -a, --all             write counts for all files, not just directories\\n\\\n      --apparent-size   print apparent sizes, rather than disk usage; although\\\n\\n\\\n                          the apparent size is usually smaller, it may be\\n\\\n                          larger due to holes in ('sparse') files, internal\\n\\\n                          fragmentation, indirect blocks, and the like\\n\\\n\"",
        "\"\\\n  -B, --block-size=SIZE  scale sizes by SIZE before printing them; e.g.,\\n\\\n                           '-BM' prints sizes in units of 1,048,576 bytes;\\n\\\n                           see SIZE format below\\n\\\n  -b, --bytes           equivalent to '--apparent-size --block-size=1'\\n\\\n  -c, --total           produce a grand total\\n\\\n  -D, --dereference-args  dereference only symlinks that are listed on the\\n\\\n                          command line\\n\\\n  -d, --max-depth=N     print the total for a directory (or file, with --all)\\n\\\n                          only if it is N or fewer levels below the command\\n\\\n                          line argument;  --max-depth=0 is the same as\\n\\\n                          --summarize\\n\\\n\"",
        "\"\\\n      --files0-from=F   summarize disk usage of the\\n\\\n                          NUL-terminated file names specified in file F;\\n\\\n                          if F is -, then read names from standard input\\n\\\n  -H                    equivalent to --dereference-args (-D)\\n\\\n  -h, --human-readable  print sizes in human readable format (e.g., 1K 234M 2G)\\\n\\n\\\n      --inodes          list inode usage information instead of block usage\\n\\\n\"",
        "\"\\\n  -k                    like --block-size=1K\\n\\\n  -L, --dereference     dereference all symbolic links\\n\\\n  -l, --count-links     count sizes many times if hard linked\\n\\\n  -m                    like --block-size=1M\\n\\\n\"",
        "\"\\\n  -P, --no-dereference  don't follow any symbolic links (this is the default)\\n\\\n  -S, --separate-dirs   for directories do not include size of subdirectories\\n\\\n      --si              like -h, but use powers of 1000 not 1024\\n\\\n  -s, --summarize       display only a total for each argument\\n\\\n\"",
        "\"\\\n  -t, --threshold=SIZE  exclude entries smaller than SIZE if positive,\\n\\\n                          or entries greater than SIZE if negative\\n\\\n      --time            show time of the last modification of any file in the\\n\\\n                          directory, or any of its subdirectories\\n\\\n      --time=WORD       show time as WORD instead of modification time:\\n\\\n                          atime, access, use, ctime or status\\n\\\n      --time-style=STYLE  show times using STYLE, which can be:\\n\\\n                            full-iso, long-iso, iso, or +FORMAT;\\n\\\n                            FORMAT is interpreted like in 'date'\\n\\\n\"",
        "\"\\\n  -X, --exclude-from=FILE  exclude files that match any pattern in FILE\\n\\\n      --exclude=PATTERN    exclude files that match PATTERN\\n\\\n  -x, --one-file-system    skip directories on different file systems\\n\\\n\"",
        "\"DU\""
      ]
    },
    "hash_ins": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        371,
        1
      ],
      "strings": []
    },
    "show_date": {
      "start_point": [
        377,
        0
      ],
      "end_point": [
        390,
        1
      ],
      "strings": [
        "\"time %s is out of range\""
      ]
    },
    "print_only_size": {
      "start_point": [
        394,
        0
      ],
      "end_point": [
        403,
        1
      ],
      "strings": [
        "\"Infinity\""
      ]
    },
    "print_size": {
      "start_point": [
        407,
        0
      ],
      "end_point": [
        421,
        1
      ],
      "strings": [
        "\"\\t%s%c\""
      ]
    },
    "fill_mount_table": {
      "start_point": [
        425,
        0
      ],
      "end_point": [
        448,
        1
      ],
      "strings": []
    },
    "mount_point_in_fts_cycle": {
      "start_point": [
        453,
        0
      ],
      "end_point": [
        479,
        1
      ],
      "strings": []
    },
    "process_file": {
      "start_point": [
        486,
        0
      ],
      "end_point": [
        669,
        1
      ],
      "strings": [
        "\"cannot read directory %s\"",
        "\"cannot access %s\"",
        "\"%s\""
      ]
    },
    "du_files": {
      "start_point": [
        676,
        0
      ],
      "end_point": [
        718,
        1
      ],
      "strings": [
        "\"fts_read failed: %s\"",
        "\"fts_close failed\""
      ]
    },
    "main": {
      "start_point": [
        720,
        0
      ],
      "end_point": [
        1138,
        1
      ],
      "strings": [
        "\".\"",
        "\"\"",
        "\"DU_BLOCK_SIZE\"",
        "\"0abd:chHklmst:xB:DLPSX:\"",
        "\"invalid maximum depth %s\"",
        "\"kKmMGTPEZY0\"",
        "\"invalid --threshold argument '-0'\"",
        "\"%s\"",
        "\"--time\"",
        "\"TZ\"",
        "\"cannot both summarize and show all entries\"",
        "\"warning: summarizing is the same as using --max-depth=0\"",
        "\"warning: summarizing conflicts with --max-depth=%lu\"",
        "\"warning: options --apparent-size and -b are \"",
        "\"ineffective with --inodes\"",
        "\"TIME_STYLE\"",
        "\"locale\"",
        "\"long-iso\"",
        "\"posix-\"",
        "\"time style\"",
        "\"%Y-%m-%d %H:%M:%S.%N %z\"",
        "\"%Y-%m-%d %H:%M\"",
        "\"%Y-%m-%d\"",
        "\"extra operand %s\"",
        "\"%s\\n\"",
        "\"file operands cannot be combined with --files0-from\"",
        "\"-\"",
        "\"r\"",
        "\"cannot open %s for reading\"",
        "\"%s: read error\"",
        "\"unexpected error code from argv_iter\"",
        "\"-\"",
        "\"-\"",
        "\"when reading file names from stdin, \"",
        "\"no file name of %s allowed\"",
        "\"%s\"",
        "\"invalid zero-length file name\"",
        "\"%s:%lu: %s\"",
        "\"invalid zero-length file name\"",
        "\"error reading %s\"",
        "\"total\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/echo.c": {
    "usage": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [SHORT-OPTION]... [STRING]...\\n\\\n  or:  %s LONG-OPTION\\n\\\n\"",
        "\"\\\nEcho the STRING(s) to standard output.\\n\\\n\\n\\\n  -n             do not output the trailing newline\\n\\\n\"",
        "\"\\\n  -e             enable interpretation of backslash escapes (default)\\n\\\n  -E             disable interpretation of backslash escapes\\n\"",
        "\"\\\n  -e             enable interpretation of backslash escapes\\n\\\n  -E             disable interpretation of backslash escapes (default)\\n\"",
        "\"\\\n\\n\\\nIf -e is in effect, the following sequences are recognized:\\n\\\n\\n\\\n\"",
        "\"\\\n  \\\\\\\\      backslash\\n\\\n  \\\\a      alert (BEL)\\n\\\n  \\\\b      backspace\\n\\\n  \\\\c      produce no further output\\n\\\n  \\\\e      escape\\n\\\n  \\\\f      form feed\\n\\\n  \\\\n      new line\\n\\\n  \\\\r      carriage return\\n\\\n  \\\\t      horizontal tab\\n\\\n  \\\\v      vertical tab\\n\\\n\"",
        "\"\\\n  \\\\0NNN   byte with octal value NNN (1 to 3 digits)\\n\\\n  \\\\xHH    byte with hexadecimal value HH (1 to 2 digits)\\n\\\n\""
      ]
    },
    "hextobin": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        271,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\"",
        "\"-n\"",
        "\"\"",
        "\"--help\"",
        "\"--version\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/env.c": {
    "usage": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [-] [NAME=VALUE]... [COMMAND [ARG]...]\\n\"",
        "\"\\\nSet each NAME to VALUE in the environment and run COMMAND.\\n\\\n\"",
        "\"\\\n  -i, --ignore-environment  start with an empty environment\\n\\\n  -0, --null           end each output line with NUL, not newline\\n\\\n  -u, --unset=NAME     remove variable from the environment\\n\\\n\"",
        "\"\\\n  -C, --chdir=DIR      change working directory to DIR\\n\\\n\"",
        "\"\\\n\\n\\\nA mere - implies -i.  If no COMMAND, print the resulting environment.\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": [
        "\"\"",
        "\"+C:iu:0\"",
        "\"-\"",
        "\"+C:iu:0\"",
        "\"cannot unset %s\"",
        "\"-\"",
        "\"cannot set %s\"",
        "\"cannot specify --null (-0) with command\"",
        "\"must specify command with --chdir (-C)\"",
        "\"%s%c\"",
        "\"cannot change directory to %s\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/expand-common.c": {
    "add_tab_stop": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"tabs are too far apart\""
      ]
    },
    "set_extend_size": {
      "start_point": [
        94,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"'/' specifier only allowed\"",
        "\" with the last value\""
      ]
    },
    "set_increment_size": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": [
        "\"'+' specifier only allowed\"",
        "\" with the last value\""
      ]
    },
    "parse_tab_stops": {
      "start_point": [
        130,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": [
        "\"'/' specifier not at start of number: %s\"",
        "\"'+' specifier not at start of number: %s\"",
        "\"0123456789\"",
        "\"tab stop is too large %s\"",
        "\"tab size contains invalid character(s): %s\""
      ]
    },
    "validate_tab_stops": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": [
        "\"tab size cannot be 0\"",
        "\"tab sizes must be ascending\"",
        "\"'/' specifier is mutually exclusive with '+'\""
      ]
    },
    "finalize_tab_stops": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        274,
        1
      ],
      "strings": []
    },
    "get_next_tab_column": {
      "start_point": [
        277,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": []
    },
    "set_file_list": {
      "start_point": [
        316,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": []
    },
    "next_file": {
      "start_point": [
        332,
        0
      ],
      "end_point": [
        374,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"-\"",
        "\"%s\"",
        "\"-\"",
        "\"r\"",
        "\"%s\""
      ]
    },
    "cleanup_file_list_stdin": {
      "start_point": [
        377,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": [
        "\"-\""
      ]
    },
    "emit_tab_list_info": {
      "start_point": [
        385,
        0
      ],
      "end_point": [
        399,
        1
      ],
      "strings": [
        "\"\\\n  -t, --tabs=LIST  use comma separated list of tab positions\\n\\\n\"",
        "\"\\\n                     The last specified position can be prefixed with '/'\\n\\\n                     to specify a tab size to use after the last\\n\\\n                     explicitly specified tab stop.  Also a prefix of '+'\\n\\\n                     can be used to align remaining tab stops relative to\\n\\\n                     the last specified tab stop instead of the first column\\n\\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/expand-common.h": {},
  "coreutils/coreutils-8.29/src/expand.c": {
    "usage": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n\"",
        "\"\\\nConvert tabs in each FILE to spaces, writing to standard output.\\n\\\n\"",
        "\"\\\n  -i, --initial    do not convert tabs after non blanks\\n\\\n  -t, --tabs=N     have tabs N characters apart, not 8\\n\\\n\""
      ]
    },
    "expand": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        178,
        1
      ],
      "strings": [
        "\"input line is too long\"",
        "\"write error\"",
        "\"input line is too long\"",
        "\"write error\""
      ]
    },
    "main": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/expr.c": {
    "mpz_clear": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        57,
        45
      ],
      "strings": []
    },
    "mpz_init_set_ui": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        58,
        72
      ],
      "strings": []
    },
    "mpz_init_set_str": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "mpz_add": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "mpz_sub": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "mpz_mul": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "mpz_tdiv_q": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "mpz_tdiv_r": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "mpz_get_str": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "mpz_sgn": {
      "start_point": [
        122,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "mpz_fits_ulong_p": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "mpz_get_ui": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": []
    },
    "mpz_out_str": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    },
    "mbs_logical_cspn": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": []
    },
    "mbs_logical_substr": {
      "start_point": [
        265,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": [
        "\"\""
      ]
    },
    "mbs_offset_to_chars": {
      "start_point": [
        320,
        0
      ],
      "end_point": [
        333,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        413,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s EXPRESSION\\n\\\n  or:  %s OPTION\\n\\\n\"",
        "\"\\\n\\n\\\nPrint the value of EXPRESSION to standard output.  A blank line below\\n\\\nseparates increasing precedence groups.  EXPRESSION may be:\\n\\\n\\n\\\n  ARG1 | ARG2       ARG1 if it is neither null nor 0, otherwise ARG2\\n\\\n\\n\\\n  ARG1 & ARG2       ARG1 if neither argument is null or 0, otherwise 0\\n\\\n\"",
        "\"\\\n\\n\\\n  ARG1 < ARG2       ARG1 is less than ARG2\\n\\\n  ARG1 <= ARG2      ARG1 is less than or equal to ARG2\\n\\\n  ARG1 = ARG2       ARG1 is equal to ARG2\\n\\\n  ARG1 != ARG2      ARG1 is unequal to ARG2\\n\\\n  ARG1 >= ARG2      ARG1 is greater than or equal to ARG2\\n\\\n  ARG1 > ARG2       ARG1 is greater than ARG2\\n\\\n\"",
        "\"\\\n\\n\\\n  ARG1 + ARG2       arithmetic sum of ARG1 and ARG2\\n\\\n  ARG1 - ARG2       arithmetic difference of ARG1 and ARG2\\n\\\n\"",
        "\"\\\n\\n\\\n  ARG1 * ARG2       arithmetic product of ARG1 and ARG2\\n\\\n  ARG1 / ARG2       arithmetic quotient of ARG1 divided by ARG2\\n\\\n  ARG1 % ARG2       arithmetic remainder of ARG1 divided by ARG2\\n\\\n\"",
        "\"\\\n\\n\\\n  STRING : REGEXP   anchored pattern match of REGEXP in STRING\\n\\\n\\n\\\n  match STRING REGEXP        same as STRING : REGEXP\\n\\\n  substr STRING POS LENGTH   substring of STRING, POS counted from 1\\n\\\n  index STRING CHARS         index in STRING where any CHARS is found, or 0\\n\\\n  length STRING              length of STRING\\n\\\n\"",
        "\"\\\n  + TOKEN                    interpret TOKEN as a string, even if it is a\\n\\\n                               keyword like 'match' or an operator like '/'\\n\\\n\\n\\\n  ( EXPRESSION )             value of EXPRESSION\\n\\\n\"",
        "\"\\\n\\n\\\nBeware that many operators need to be escaped or quoted for shells.\\n\\\nComparisons are arithmetic if both ARGs are numbers, else lexicographical.\\n\\\nPattern matches return the string matched between \\\\( and \\\\) or null; if\\n\\\n\\\\( and \\\\) are not used, they return the number of characters matched or 0.\\n\\\n\"",
        "\"\\\n\\n\\\nExit status is 0 if EXPRESSION is neither null nor 0, 1 if EXPRESSION is null\\n\\\nor 0, 2 if EXPRESSION is syntactically invalid, and 3 if an error occurred.\\n\\\n\""
      ]
    },
    "integer_overflow": {
      "start_point": [
        418,
        0
      ],
      "end_point": [
        422,
        1
      ],
      "strings": [
        "\"%c\""
      ]
    },
    "main": {
      "start_point": [
        425,
        0
      ],
      "end_point": [
        467,
        1
      ],
      "strings": [
        "\"\"",
        "\"--\"",
        "\"missing operand\"",
        "\"syntax error: unexpected argument %s\""
      ]
    },
    "int_value": {
      "start_point": [
        471,
        0
      ],
      "end_point": [
        478,
        1
      ],
      "strings": []
    },
    "str_value": {
      "start_point": [
        482,
        0
      ],
      "end_point": [
        489,
        1
      ],
      "strings": []
    },
    "freev": {
      "start_point": [
        493,
        0
      ],
      "end_point": [
        501,
        1
      ],
      "strings": []
    },
    "printv": {
      "start_point": [
        505,
        0
      ],
      "end_point": [
        520,
        1
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_PURE": {
      "start_point": [
        524,
        0
      ],
      "end_point": [
        551,
        1
      ],
      "strings": []
    },
    "looks_like_integer": {
      "start_point": [
        555,
        0
      ],
      "end_point": [
        566,
        1
      ],
      "strings": []
    },
    "tostring": {
      "start_point": [
        570,
        0
      ],
      "end_point": [
        588,
        1
      ],
      "strings": []
    },
    "toarith": {
      "start_point": [
        592,
        0
      ],
      "end_point": [
        614,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "getsize": {
      "start_point": [
        619,
        0
      ],
      "end_point": [
        631,
        1
      ],
      "strings": []
    },
    "nextarg": {
      "start_point": [
        636,
        0
      ],
      "end_point": [
        647,
        1
      ],
      "strings": []
    },
    "nomoreargs": {
      "start_point": [
        651,
        0
      ],
      "end_point": [
        655,
        1
      ],
      "strings": []
    },
    "require_more_args": {
      "start_point": [
        660,
        0
      ],
      "end_point": [
        666,
        1
      ],
      "strings": [
        "\"syntax error: missing argument after %s\""
      ]
    },
    "docolon": {
      "start_point": [
        689,
        0
      ],
      "end_point": [
        757,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"\"",
        "\"error in regular expression matcher\""
      ]
    },
    "eval7": {
      "start_point": [
        761,
        0
      ],
      "end_point": [
        787,
        1
      ],
      "strings": [
        "\"eval7\"",
        "\"(\"",
        "\"syntax error: expecting ')' after %s\"",
        "\")\"",
        "\"syntax error: expecting ')' instead of %s\"",
        "\")\"",
        "\"syntax error: unexpected ')'\""
      ]
    },
    "eval6": {
      "start_point": [
        791,
        0
      ],
      "end_point": [
        869,
        1
      ],
      "strings": [
        "\"eval6\"",
        "\"+\"",
        "\"length\"",
        "\"match\"",
        "\"index\"",
        "\"substr\"",
        "\"\""
      ]
    },
    "eval5": {
      "start_point": [
        874,
        0
      ],
      "end_point": [
        901,
        1
      ],
      "strings": [
        "\"eval5\"",
        "\":\""
      ]
    },
    "eval4": {
      "start_point": [
        905,
        0
      ],
      "end_point": [
        940,
        1
      ],
      "strings": [
        "\"eval4\"",
        "\"*\"",
        "\"/\"",
        "\"%\"",
        "\"non-integer argument\"",
        "\"division by zero\""
      ]
    },
    "eval3": {
      "start_point": [
        944,
        0
      ],
      "end_point": [
        972,
        1
      ],
      "strings": [
        "\"eval3\"",
        "\"+\"",
        "\"-\"",
        "\"non-integer argument\""
      ]
    },
    "eval2": {
      "start_point": [
        976,
        0
      ],
      "end_point": [
        1050,
        1
      ],
      "strings": [
        "\"eval2\"",
        "\"<\"",
        "\"<=\"",
        "\"=\"",
        "\"==\"",
        "\"!=\"",
        "\">=\"",
        "\">\"",
        "\"string comparison failed\"",
        "\"set LC_ALL='C' to work around the problem\"",
        "\"the strings compared were %s and %s\""
      ]
    },
    "eval1": {
      "start_point": [
        1054,
        0
      ],
      "end_point": [
        1081,
        1
      ],
      "strings": [
        "\"eval1\"",
        "\"&\""
      ]
    },
    "eval": {
      "start_point": [
        1085,
        0
      ],
      "end_point": [
        1116,
        1
      ],
      "strings": [
        "\"eval\"",
        "\"|\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/extent-scan.c": {
    "extent_need_sync": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"2.6.\""
      ]
    },
    "extent_scan_init": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "extent_scan_read": [
      {
        "start_point": [
          85,
          0
        ],
        "end_point": [
          217,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          219,
          0
        ],
        "end_point": [
          225,
          1
        ],
        "strings": []
      }
    ]
  },
  "coreutils/coreutils-8.29/src/extent-scan.h": {
    "extent_scan_free": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/factor.c": {
    "mod2": {
      "start_point": [
        413,
        0
      ],
      "end_point": [
        439,
        1
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_CONST": [
      {
        "start_point": [
          441,
          0
        ],
        "end_point": [
          477,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1059,
          0
        ],
        "end_point": [
          1077,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1768,
          0
        ],
        "end_point": [
          1789,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1791,
          0
        ],
        "end_point": [
          1834,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1843,
          0
        ],
        "end_point": [
          1859,
          1
        ],
        "strings": []
      }
    ],
    "gcd2_odd": {
      "start_point": [
        479,
        0
      ],
      "end_point": [
        521,
        1
      ],
      "strings": []
    },
    "factor_insert_multiplicity": {
      "start_point": [
        523,
        0
      ],
      "end_point": [
        554,
        1
      ],
      "strings": []
    },
    "factor_insert_large": {
      "start_point": [
        558,
        0
      ],
      "end_point": [
        570,
        1
      ],
      "strings": []
    },
    "mpz_va_init": {
      "start_point": [
        579,
        0
      ],
      "end_point": [
        591,
        1
      ],
      "strings": []
    },
    "mp_factor_init": {
      "start_point": [
        596,
        0
      ],
      "end_point": [
        602,
        1
      ],
      "strings": []
    },
    "mp_factor_clear": {
      "start_point": [
        604,
        0
      ],
      "end_point": [
        612,
        1
      ],
      "strings": []
    },
    "mp_factor_insert": {
      "start_point": [
        614,
        0
      ],
      "end_point": [
        651,
        1
      ],
      "strings": []
    },
    "mp_factor_insert_ui": {
      "start_point": [
        653,
        0
      ],
      "end_point": [
        661,
        1
      ],
      "strings": []
    },
    "factor_insert_refind": {
      "start_point": [
        714,
        0
      ],
      "end_point": [
        721,
        1
      ],
      "strings": []
    },
    "factor_using_division": {
      "start_point": [
        756,
        0
      ],
      "end_point": [
        835,
        1
      ],
      "strings": []
    },
    "mp_factor_using_division": {
      "start_point": [
        838,
        0
      ],
      "end_point": [
        873,
        1
      ],
      "strings": [
        "\"[trial division] \""
      ]
    },
    "mulredc": {
      "start_point": [
        973,
        0
      ],
      "end_point": [
        986,
        1
      ],
      "strings": []
    },
    "mulredc2": {
      "start_point": [
        991,
        0
      ],
      "end_point": [
        1057,
        1
      ],
      "strings": []
    },
    "powm2": {
      "start_point": [
        1079,
        0
      ],
      "end_point": [
        1118,
        1
      ],
      "strings": []
    },
    "millerrabin": {
      "start_point": [
        1120,
        0
      ],
      "end_point": [
        1141,
        1
      ],
      "strings": []
    },
    "millerrabin2": {
      "start_point": [
        1143,
        0
      ],
      "end_point": [
        1171,
        1
      ],
      "strings": []
    },
    "mp_millerrabin": {
      "start_point": [
        1174,
        0
      ],
      "end_point": [
        1192,
        1
      ],
      "strings": []
    },
    "prime_p": {
      "start_point": [
        1197,
        0
      ],
      "end_point": [
        1277,
        1
      ],
      "strings": [
        "\"Lucas prime test failure.  This should not happen\""
      ]
    },
    "prime2_p": {
      "start_point": [
        1279,
        0
      ],
      "end_point": [
        1377,
        1
      ],
      "strings": [
        "\"Lucas prime test failure.  This should not happen\""
      ]
    },
    "mp_prime_p": {
      "start_point": [
        1380,
        0
      ],
      "end_point": [
        1461,
        1
      ],
      "strings": [
        "\"Lucas prime test failure.  This should not happen\""
      ]
    },
    "factor_using_pollard_rho": {
      "start_point": [
        1464,
        0
      ],
      "end_point": [
        1548,
        1
      ],
      "strings": []
    },
    "factor_using_pollard_rho2": {
      "start_point": [
        1550,
        0
      ],
      "end_point": [
        1669,
        1
      ],
      "strings": []
    },
    "mp_factor_using_pollard_rho": {
      "start_point": [
        1672,
        0
      ],
      "end_point": [
        1762,
        1
      ],
      "strings": [
        "\"[pollard-rho (%lu)] \"",
        "\"[composite factor--restarting pollard-rho] \""
      ]
    },
    "factor_using_squfof": {
      "start_point": [
        1966,
        0
      ],
      "end_point": [
        2218,
        1
      ],
      "strings": [
        "\"squfof queue overflow\""
      ]
    },
    "factor": {
      "start_point": [
        2223,
        0
      ],
      "end_point": [
        2251,
        1
      ],
      "strings": []
    },
    "mp_factor": {
      "start_point": [
        2256,
        0
      ],
      "end_point": [
        2274,
        1
      ],
      "strings": [
        "\"[is number prime?] \""
      ]
    },
    "strto2uintmax": {
      "start_point": [
        2277,
        0
      ],
      "end_point": [
        2351,
        1
      ],
      "strings": []
    },
    "lbuf_alloc": {
      "start_point": [
        2368,
        0
      ],
      "end_point": [
        2378,
        1
      ],
      "strings": []
    },
    "lbuf_flush": {
      "start_point": [
        2381,
        0
      ],
      "end_point": [
        2388,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"write error\""
      ]
    },
    "lbuf_putc": {
      "start_point": [
        2393,
        0
      ],
      "end_point": [
        2428,
        1
      ],
      "strings": []
    },
    "lbuf_putint": {
      "start_point": [
        2431,
        0
      ],
      "end_point": [
        2444,
        1
      ],
      "strings": []
    },
    "print_uintmaxes": {
      "start_point": [
        2446,
        0
      ],
      "end_point": [
        2463,
        1
      ],
      "strings": []
    },
    "print_factors_single": {
      "start_point": [
        2466,
        0
      ],
      "end_point": [
        2490,
        1
      ],
      "strings": []
    },
    "print_factors": {
      "start_point": [
        2497,
        0
      ],
      "end_point": [
        2551,
        1
      ],
      "strings": [
        "\"[using single-precision arithmetic] \"",
        "\"%s is not a valid positive integer\"",
        "\"[using arbitrary-precision arithmetic] \"",
        "\"%Zd:\"",
        "\" %Zd\"",
        "\"%s is too large\""
      ]
    },
    "usage": {
      "start_point": [
        2553,
        0
      ],
      "end_point": [
        2575,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [NUMBER]...\\n\\\n  or:  %s OPTION\\n\\\n\"",
        "\"\\\nPrint the prime factors of each specified integer NUMBER.  If none\\n\\\nare specified on the command line, read them from standard input.\\n\\\n\\n\\\n\""
      ]
    },
    "do_stdin": {
      "start_point": [
        2577,
        0
      ],
      "end_point": [
        2596,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        2598,
        0
      ],
      "end_point": [
        2660,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"q  freq.  cum. freq.(total: %d)\\n\"",
        "\"%s%d %.2f%% %.2f%%\\n\"",
        "\">=\"",
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/false.c": {},
  "coreutils/coreutils-8.29/src/fiemap.h": {},
  "coreutils/coreutils-8.29/src/find-mount-point.c": {
    "find_mount_point": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": [
        "\"cannot get current directory\"",
        "\"cannot change to directory %s\"",
        "\"cannot change to directory %s\"",
        "\".\"",
        "\"cannot stat current directory (now %s)\"",
        "\"..\"",
        "\"cannot stat %s\"",
        "\"..\"",
        "\"..\"",
        "\"cannot change to directory %s\"",
        "\"..\"",
        "\"failed to return to initial working directory\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/find-mount-point.h": {},
  "coreutils/coreutils-8.29/src/fmt.c": {
    "usage": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        297,
        1
      ],
      "strings": [
        "\"Usage: %s [-WIDTH] [OPTION]... [FILE]...\\n\"",
        "\"\\\nReformat each paragraph in the FILE(s), writing to standard output.\\n\\\nThe option -WIDTH is an abbreviated form of --width=DIGITS.\\n\\\n\"",
        "\"\\\n  -c, --crown-margin        preserve indentation of first two lines\\n\\\n  -p, --prefix=STRING       reformat only lines beginning with STRING,\\n\\\n                              reattaching the prefix to reformatted lines\\n\\\n  -s, --split-only          split long lines, but do not refill\\n\\\n\"",
        "\"\\\n  -t, --tagged-paragraph    indentation of first line different from second\\n\\\n  -u, --uniform-spacing     one space between words, two after sentences\\n\\\n  -w, --width=WIDTH         maximum line width (default of 75 columns)\\n\\\n  -g, --goal=WIDTH          goal width (default of 93% of width)\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        315,
        0
      ],
      "end_point": [
        447,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"0123456789cstuw:p:g:\"",
        "\"invalid option -- %c; -WIDTH is recognized\\\n only when it is the first\\noption; use -w N instead\"",
        "\"\"",
        "\"invalid width\"",
        "\"\"",
        "\"invalid width\"",
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"cannot open %s for reading\""
      ]
    },
    "set_prefix": {
      "start_point": [
        452,
        0
      ],
      "end_point": [
        470,
        1
      ],
      "strings": []
    },
    "fmt": {
      "start_point": [
        474,
        0
      ],
      "end_point": [
        486,
        1
      ],
      "strings": []
    },
    "set_other_indent": {
      "start_point": [
        491,
        0
      ],
      "end_point": [
        519,
        1
      ],
      "strings": []
    },
    "get_paragraph": {
      "start_point": [
        536,
        0
      ],
      "end_point": [
        610,
        1
      ],
      "strings": []
    },
    "copy_rest": {
      "start_point": [
        617,
        0
      ],
      "end_point": [
        639,
        1
      ],
      "strings": []
    },
    "same_para": {
      "start_point": [
        645,
        0
      ],
      "end_point": [
        651,
        1
      ],
      "strings": []
    },
    "get_line": {
      "start_point": [
        661,
        0
      ],
      "end_point": [
        710,
        1
      ],
      "strings": []
    },
    "get_prefix": {
      "start_point": [
        715,
        0
      ],
      "end_point": [
        740,
        1
      ],
      "strings": []
    },
    "get_space": {
      "start_point": [
        745,
        0
      ],
      "end_point": [
        761,
        1
      ],
      "strings": []
    },
    "check_punctuation": {
      "start_point": [
        765,
        0
      ],
      "end_point": [
        777,
        1
      ],
      "strings": []
    },
    "flush_paragraph": {
      "start_point": [
        782,
        0
      ],
      "end_point": [
        840,
        1
      ],
      "strings": []
    },
    "fmt_paragraph": {
      "start_point": [
        846,
        0
      ],
      "end_point": [
        897,
        1
      ],
      "strings": []
    },
    "base_cost": {
      "start_point": [
        902,
        0
      ],
      "end_point": [
        930,
        1
      ],
      "strings": []
    },
    "line_cost": {
      "start_point": [
        935,
        0
      ],
      "end_point": [
        951,
        1
      ],
      "strings": []
    },
    "put_paragraph": {
      "start_point": [
        956,
        0
      ],
      "end_point": [
        964,
        1
      ],
      "strings": []
    },
    "put_line": {
      "start_point": [
        969,
        0
      ],
      "end_point": [
        989,
        1
      ],
      "strings": []
    },
    "put_word": {
      "start_point": [
        993,
        0
      ],
      "end_point": [
        1003,
        1
      ],
      "strings": []
    },
    "put_space": {
      "start_point": [
        1007,
        0
      ],
      "end_point": [
        1028,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/fold.c": {
    "usage": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n\"",
        "\"\\\nWrap input lines in each FILE, writing to standard output.\\n\\\n\"",
        "\"\\\n  -b, --bytes         count bytes rather than columns\\n\\\n  -s, --spaces        break at spaces\\n\\\n  -w, --width=WIDTH   use WIDTH columns instead of 80\\n\\\n\""
      ]
    },
    "adjust_column": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "fold_file": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": [
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"%s\"",
        "\"-\"",
        "\"-\"",
        "\"%s\""
      ]
    },
    "main": {
      "start_point": [
        238,
        0
      ],
      "end_point": [
        308,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"invalid number of columns\"",
        "\"-\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/force-link.c": {
    "samedir_template": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "try_link": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        83,
        1
      ],
      "strings": []
    },
    "force_linkat": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    },
    "try_symlink": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        139,
        1
      ],
      "strings": []
    },
    "force_symlinkat": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/force-link.h": {},
  "coreutils/coreutils-8.29/src/fs-is-local.h": {
    "is_local_fs_type": {
      "start_point": [
        3,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/fs.h": {},
  "coreutils/coreutils-8.29/src/getlimits.c": {
    "usage": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s\\n\\\n\"",
        "\"\\\nOutput platform dependent limits in a format useful for shell scripts.\\n\\\n\\n\\\n\""
      ]
    },
    "decimal_absval_add_one": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": [
        "\"\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/group-list.c": {
    "print_group_list": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": [
        "\"failed to get groups for user %s\"",
        "\"failed to get groups for the current process\""
      ]
    },
    "gidtostr_ptr": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "print_group": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": [
        "\"cannot find name for group ID %lu\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/group-list.h": {},
  "coreutils/coreutils-8.29/src/groups.c": {
    "usage": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [USERNAME]...\\n\"",
        "\"\\\nPrint group memberships for each USERNAME or, if no USERNAME is specified, for\\\n\\n\\\nthe current process (which may differ if the groups database has changed).\\n\""
      ]
    },
    "main": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"cannot get real UID\"",
        "\"cannot get effective GID\"",
        "\"cannot get real GID\"",
        "\"%s: no such user\"",
        "\"%s : \""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/head.c": {
    "usage": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n\"",
        "\"\\\nPrint the first %d lines of each FILE to standard output.\\n\\\nWith more than one FILE, precede each with a header giving the file name.\\n\\\n\"",
        "\"\\\n  -c, --bytes=[-]NUM       print the first NUM bytes of each file;\\n\\\n                             with the leading '-', print all but the last\\n\\\n                             NUM bytes of each file\\n\\\n  -n, --lines=[-]NUM       print the first NUM lines instead of the first %d;\\n\\\n                             with the leading '-', print all but the last\\n\\\n                             NUM lines of each file\\n\\\n\"",
        "\"\\\n  -q, --quiet, --silent    never print headers giving file names\\n\\\n  -v, --verbose            always print headers giving file names\\n\\\n\"",
        "\"\\\n  -z, --zero-terminated    line delimiter is NUL, not newline\\n\\\n\"",
        "\"\\\n\\n\\\nNUM may have a multiplier suffix:\\n\\\nb 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024,\\n\\\nGB 1000*1000*1000, G 1024*1024*1024, and so on for T, P, E, Z, Y.\\n\\\n\""
      ]
    },
    "diagnose_copy_fd_failure": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"error reading %s\"",
        "\"%s: file has shrunk too much\""
      ]
    },
    "write_header": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": [
        "\"%s==> %s <==\\n\"",
        "\"\"",
        "\"\\n\""
      ]
    },
    "xwrite_stdout": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"error writing %s\"",
        "\"standard output\""
      ]
    },
    "copy_fd": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    },
    "elseek": {
      "start_point": [
        221,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": [
        "\"%s: cannot seek to offset %s\"",
        "\"%s: cannot seek to relative offset %s\""
      ]
    },
    "elide_tail_bytes_pipe": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        452,
        1
      ],
      "strings": [
        "\"HEAD_TAIL_PIPE_BYTECOUNT_THRESHOLD must be at least 2 * READ_BUFSIZE\"",
        "\"%s: number of bytes is too large\"",
        "\"error reading %s\"",
        "\"error reading %s\""
      ]
    },
    "elide_tail_bytes_file": {
      "start_point": [
        462,
        0
      ],
      "end_point": [
        486,
        1
      ],
      "strings": []
    },
    "elide_tail_lines_pipe": {
      "start_point": [
        495,
        0
      ],
      "end_point": [
        631,
        1
      ],
      "strings": [
        "\"error reading %s\""
      ]
    },
    "elide_tail_lines_seekable": {
      "start_point": [
        644,
        0
      ],
      "end_point": [
        744,
        1
      ],
      "strings": [
        "\"error reading %s\"",
        "\"error reading %s\""
      ]
    },
    "elide_tail_lines_file": {
      "start_point": [
        751,
        0
      ],
      "end_point": [
        769,
        1
      ],
      "strings": []
    },
    "head_bytes": {
      "start_point": [
        771,
        0
      ],
      "end_point": [
        794,
        1
      ],
      "strings": [
        "\"error reading %s\""
      ]
    },
    "head_lines": {
      "start_point": [
        796,
        0
      ],
      "end_point": [
        831,
        1
      ],
      "strings": [
        "\"error reading %s\""
      ]
    },
    "head": {
      "start_point": [
        833,
        0
      ],
      "end_point": [
        865,
        1
      ],
      "strings": [
        "\"cannot fstat %s\""
      ]
    },
    "head_file": {
      "start_point": [
        867,
        0
      ],
      "end_point": [
        899,
        1
      ],
      "strings": [
        "\"-\"",
        "\"standard input\"",
        "\"cannot open %s for reading\"",
        "\"failed to close %s\""
      ]
    },
    "string_to_integer": {
      "start_point": [
        907,
        0
      ],
      "end_point": [
        913,
        1
      ],
      "strings": [
        "\"bkKmMGTPEZY0\"",
        "\"invalid number of lines\"",
        "\"invalid number of bytes\""
      ]
    },
    "main": {
      "start_point": [
        915,
        0
      ],
      "end_point": [
        1093,
        1
      ],
      "strings": [
        "\"-\"",
        "\"\"",
        "\"invalid trailing option -- %c\"",
        "\"c:n:qvz0123456789\"",
        "\"invalid trailing option -- %c\"",
        "\"%s: %s\"",
        "\"invalid number of bytes\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/hostid.c": {
    "usage": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]\\n\\\nPrint the numeric identifier (in hexadecimal) for the current host.\\n\\\n\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"extra operand %s\"",
        "\"%08x\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/hostname.c": {
    "sethostname": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [NAME]\\n\\\n  or:  %s OPTION\\n\\\nPrint or set the hostname of the current system.\\n\\\n\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"cannot set name to %s\"",
        "\"cannot set hostname; this system lacks the functionality\"",
        "\"cannot determine hostname\"",
        "\"%s\\n\"",
        "\"extra operand %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/id.c": {
    "usage": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [USER]\\n\"",
        "\"\\\nPrint user and group information for the specified USER,\\n\\\nor (when USER omitted) for the current user.\\n\\\n\\n\"",
        "\"\\\n  -a             ignore, for compatibility with other versions\\n\\\n  -Z, --context  print only the security context of the process\\n\\\n  -g, --group    print only the effective group ID\\n\\\n  -G, --groups   print all group IDs\\n\\\n  -n, --name     print a name instead of a number, for -ugG\\n\\\n  -r, --real     print the real ID instead of the effective ID, with -ugG\\n\\\n  -u, --user     print only the effective user ID\\n\\\n  -z, --zero     delimit entries with NUL characters, not whitespace;\\n\\\n                   not permitted in default format\\n\\\n\"",
        "\"\\\n\\n\\\nWithout any OPTION, print some useful set of identified information.\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        320,
        1
      ],
      "strings": [
        "\"\"",
        "\"agnruzGZ\"",
        "\"--context (-Z) works only on \"",
        "\"an SELinux/SMACK-enabled kernel\"",
        "\"--context (-Z) works only on an SELinux-enabled kernel\"",
        "\"extra operand %s\"",
        "\"cannot print security context when user specified\"",
        "\"cannot print \\\"only\\\" of more than one choice\"",
        "\"cannot print only names or real IDs in default format\"",
        "\"option --zero not permitted in default format\"",
        "\"POSIXLY_CORRECT\"",
        "\"can't get process context\"",
        "\"%s: no such user\"",
        "\"cannot get effective UID\"",
        "\"cannot get real UID\"",
        "\"cannot get effective GID\"",
        "\"cannot get real GID\""
      ]
    },
    "gidtostr_ptr": {
      "start_point": [
        325,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": []
    },
    "uidtostr_ptr": {
      "start_point": [
        336,
        0
      ],
      "end_point": [
        341,
        1
      ],
      "strings": []
    },
    "print_user": {
      "start_point": [
        346,
        0
      ],
      "end_point": [
        364,
        1
      ],
      "strings": [
        "\"cannot find name for user ID %s\""
      ]
    },
    "print_full_info": {
      "start_point": [
        368,
        0
      ],
      "end_point": [
        439,
        1
      ],
      "strings": [
        "\"uid=%s\"",
        "\"(%s)\"",
        "\" gid=%s\"",
        "\"(%s)\"",
        "\" euid=%s\"",
        "\"(%s)\"",
        "\" egid=%s\"",
        "\"(%s)\"",
        "\"failed to get groups for user %s\"",
        "\"failed to get groups for the current process\"",
        "\" groups=\"",
        "\"(%s)\"",
        "\" context=%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/install.c": {
    "have_same_content": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    },
    "extra_mode": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "need_copy": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "cp_option_init": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": []
    },
    "setdefaultfilecon": [
      {
        "start_point": [
          312,
          0
        ],
        "end_point": [
          382,
          1
        ],
        "strings": [
          "\"/\"",
          "\"<<none>>\"",
          "\"warning: %s: failed to change context to %s\""
        ]
      },
      {
        "start_point": [
          384,
          0
        ],
        "end_point": [
          388,
          1
        ],
        "strings": []
      }
    ],
    "target_directory_operand": {
      "start_point": [
        396,
        0
      ],
      "end_point": [
        411,
        1
      ],
      "strings": [
        "\"failed to access %s\"",
        "\"target %s is not a directory\""
      ]
    },
    "announce_mkdir": {
      "start_point": [
        414,
        0
      ],
      "end_point": [
        420,
        1
      ],
      "strings": [
        "\"creating directory %s\""
      ]
    },
    "make_ancestor": {
      "start_point": [
        425,
        0
      ],
      "end_point": [
        438,
        1
      ],
      "strings": [
        "\"failed to set default creation context for %s\""
      ]
    },
    "process_dir": {
      "start_point": [
        441,
        0
      ],
      "end_point": [
        466,
        1
      ],
      "strings": [
        "\"failed to restore context for %s\""
      ]
    },
    "copy_file": {
      "start_point": [
        471,
        0
      ],
      "end_point": [
        486,
        1
      ],
      "strings": []
    },
    "change_attributes": {
      "start_point": [
        491,
        0
      ],
      "end_point": [
        519,
        1
      ],
      "strings": [
        "\"cannot change ownership of %s\"",
        "\"cannot change permissions of %s\""
      ]
    },
    "change_timestamps": {
      "start_point": [
        524,
        0
      ],
      "end_point": [
        537,
        1
      ],
      "strings": [
        "\"cannot set timestamps for %s\""
      ]
    },
    "strip": {
      "start_point": [
        545,
        0
      ],
      "end_point": [
        570,
        1
      ],
      "strings": [
        "\"fork system call failed\"",
        "\"cannot run %s\"",
        "\"waiting for strip\"",
        "\"strip process terminated abnormally\""
      ]
    },
    "get_ids": {
      "start_point": [
        574,
        0
      ],
      "end_point": [
        617,
        1
      ],
      "strings": [
        "\"invalid user %s\"",
        "\"invalid group %s\""
      ]
    },
    "usage": {
      "start_point": [
        619,
        0
      ],
      "end_point": [
        688,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [-T] SOURCE DEST\\n\\\n  or:  %s [OPTION]... SOURCE... DIRECTORY\\n\\\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\\n\\\n  or:  %s [OPTION]... -d DIRECTORY...\\n\\\n\"",
        "\"\\\n\\n\\\nThis install program copies files (often just compiled) into destination\\n\\\nlocations you choose.  If you want to download and install a ready-to-use\\n\\\npackage on a GNU/Linux system, you should instead be using a package manager\\n\\\nlike yum(1) or apt-get(1).\\n\\\n\\n\\\nIn the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to\\n\\\nthe existing DIRECTORY, while setting permission modes and owner/group.\\n\\\nIn the 4th form, create all components of the given DIRECTORY(ies).\\n\\\n\"",
        "\"\\\n      --backup[=CONTROL]  make a backup of each existing destination file\\n\\\n  -b                  like --backup but does not accept an argument\\n\\\n  -c                  (ignored)\\n\\\n  -C, --compare       compare each pair of source and destination files, and\\n\\\n                        in some cases, do not modify the destination at all\\n\\\n  -d, --directory     treat all arguments as directory names; create all\\n\\\n                        components of the specified directories\\n\\\n\"",
        "\"\\\n  -D                  create all leading components of DEST except the last,\\n\\\n                        or all components of --target-directory,\\n\\\n                        then copy SOURCE to DEST\\n\\\n  -g, --group=GROUP   set group ownership, instead of process' current group\\n\\\n  -m, --mode=MODE     set permission mode (as in chmod), instead of rwxr-xr-x\\n\\\n  -o, --owner=OWNER   set ownership (super-user only)\\n\\\n\"",
        "\"\\\n  -p, --preserve-timestamps   apply access/modification times of SOURCE files\\n\\\n                        to corresponding destination files\\n\\\n  -s, --strip         strip symbol tables\\n\\\n      --strip-program=PROGRAM  program used to strip binaries\\n\\\n  -S, --suffix=SUFFIX  override the usual backup suffix\\n\\\n  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\\n\\\n  -T, --no-target-directory  treat DEST as a normal file\\n\\\n  -v, --verbose       print the name of each directory as it is created\\n\\\n\"",
        "\"\\\n      --preserve-context  preserve SELinux security context\\n\\\n  -Z                      set SELinux security context of destination\\n\\\n                            file and each created directory to default type\\n\\\n      --context[=CTX]     like -Z, or if CTX is specified then set the\\n\\\n                            SELinux or SMACK security context to CTX\\n\\\n\""
      ]
    },
    "install_file_in_file": {
      "start_point": [
        694,
        0
      ],
      "end_point": [
        717,
        1
      ],
      "strings": [
        "\"cannot stat %s\"",
        "\"cannot unlink %s\""
      ]
    },
    "mkancesdirs_safe_wd": {
      "start_point": [
        723,
        0
      ],
      "end_point": [
        758,
        1
      ],
      "strings": [
        "\"cannot create directory %s\"",
        "\"cannot create directory %s\""
      ]
    },
    "install_file_in_file_parents": {
      "start_point": [
        763,
        0
      ],
      "end_point": [
        769,
        1
      ],
      "strings": []
    },
    "install_file_in_dir": {
      "start_point": [
        775,
        0
      ],
      "end_point": [
        789,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        791,
        0
      ],
      "end_point": [
        1058,
        1
      ],
      "strings": [
        "\"\"",
        "\"bcCsDdg:m:o:pt:TvS:Z\"",
        "\"multiple target directories specified\"",
        "\"WARNING: ignoring --preserve-context; \"",
        "\"this kernel is not SELinux-enabled\"",
        "\"warning: ignoring --context; \"",
        "\"it requires an SELinux-enabled kernel\"",
        "\"the strip option may not be used when installing a directory\"",
        "\"target directory not allowed when installing a directory\"",
        "\"failed to access %s\"",
        "\"target %s is not a directory\"",
        "\"backup type\"",
        "\"cannot set target context and preserve it\"",
        "\"failed to set default file creation context to %s\"",
        "\"missing file operand\"",
        "\"missing destination file operand after %s\"",
        "\"cannot combine --target-directory (-t) \"",
        "\"and --no-target-directory (-T)\"",
        "\"extra operand %s\"",
        "\"target %s is not a directory\"",
        "\"invalid mode %s\"",
        "\"WARNING: ignoring --strip-program option as -s option was \"",
        "\"not specified\"",
        "\"options --compare (-C) and --preserve-timestamps are \"",
        "\"mutually exclusive\"",
        "\"options --compare (-C) and --strip are mutually \"",
        "\"exclusive\"",
        "\"the --compare (-C) option is ignored when you\"",
        "\" specify a mode with non-permission bits\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/ioblksize.h": {
    "io_blksize": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/join.c": {
    "usage": {
      "start_point": [
        184,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... FILE1 FILE2\\n\\\n\"",
        "\"\\\nFor each pair of input lines with identical join fields, write a line to\\n\\\nstandard output.  The default join field is the first, delimited by blanks.\\\n\\n\\\n\"",
        "\"\\\n\\n\\\nWhen FILE1 or FILE2 (not both) is -, read standard input.\\n\\\n\"",
        "\"\\\n\\n\\\n  -a FILENUM        also print unpairable lines from file FILENUM, where\\n\\\n                      FILENUM is 1 or 2, corresponding to FILE1 or FILE2\\n\\\n  -e EMPTY          replace missing input fields with EMPTY\\n\\\n\"",
        "\"\\\n  -i, --ignore-case  ignore differences in case when comparing fields\\n\\\n  -j FIELD          equivalent to '-1 FIELD -2 FIELD'\\n\\\n  -o FORMAT         obey FORMAT while constructing output line\\n\\\n  -t CHAR           use CHAR as input and output field separator\\n\\\n\"",
        "\"\\\n  -v FILENUM        like -a FILENUM, but suppress joined output lines\\n\\\n  -1 FIELD          join on this FIELD of file 1\\n\\\n  -2 FIELD          join on this FIELD of file 2\\n\\\n  --check-order     check that the input is correctly sorted, even\\n\\\n                      if all input lines are pairable\\n\\\n  --nocheck-order   do not check that the input is correctly sorted\\n\\\n  --header          treat the first line in each file as field headers,\\n\\\n                      print them without trying to pair them\\n\\\n\"",
        "\"\\\n  -z, --zero-terminated     line delimiter is NUL, not newline\\n\\\n\"",
        "\"\\\n\\n\\\nUnless -t CHAR is given, leading blanks separate fields and are ignored,\\n\\\nelse fields are separated by CHAR.  Any FIELD is a field number counted\\n\\\nfrom 1.  FORMAT is one or more comma or blank separated specifications,\\n\\\neach being 'FILENUM.FIELD' or '0'.  Default FORMAT outputs the join field,\\n\\\nthe remaining fields from FILE1, the remaining fields from FILE2, all\\n\\\nseparated by CHAR.  If FORMAT is the keyword 'auto', then the first\\n\\\nline of each file determines the number of fields output for each line.\\n\\\n\\n\\\nImportant: FILE1 and FILE2 must be sorted on the join fields.\\n\\\nE.g., use \\\"sort -k 1b,1\\\" if 'join' has no options,\\n\\\nor use \\\"join -t ''\\\" if 'sort' has no options.\\n\\\nNote, comparisons honor the rules specified by 'LC_COLLATE'.\\n\\\nIf the input is not sorted and some lines cannot be joined, a\\n\\\nwarning message will be given.\\n\\\n\""
      ]
    },
    "extract_field": {
      "start_point": [
        255,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": []
    },
    "xfields": {
      "start_point": [
        269,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": []
    },
    "freeline": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    },
    "keycmp": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        379,
        1
      ],
      "strings": []
    },
    "check_order": {
      "start_point": [
        392,
        0
      ],
      "end_point": [
        426,
        1
      ],
      "strings": [
        "\"%s:%\"",
        "\": is not sorted: %.*s\""
      ]
    },
    "reset_line": {
      "start_point": [
        428,
        0
      ],
      "end_point": [
        432,
        1
      ],
      "strings": []
    },
    "init_linep": {
      "start_point": [
        434,
        0
      ],
      "end_point": [
        440,
        1
      ],
      "strings": []
    },
    "get_line": {
      "start_point": [
        445,
        0
      ],
      "end_point": [
        477,
        1
      ],
      "strings": [
        "\"read error\""
      ]
    },
    "free_spareline": {
      "start_point": [
        479,
        0
      ],
      "end_point": [
        490,
        1
      ],
      "strings": []
    },
    "initseq": {
      "start_point": [
        492,
        0
      ],
      "end_point": [
        498,
        1
      ],
      "strings": []
    },
    "getseq": {
      "start_point": [
        502,
        0
      ],
      "end_point": [
        518,
        1
      ],
      "strings": []
    },
    "advance_seq": {
      "start_point": [
        522,
        0
      ],
      "end_point": [
        529,
        1
      ],
      "strings": []
    },
    "delseq": {
      "start_point": [
        531,
        0
      ],
      "end_point": [
        540,
        1
      ],
      "strings": []
    },
    "prfield": {
      "start_point": [
        546,
        0
      ],
      "end_point": [
        561,
        1
      ],
      "strings": []
    },
    "prfields": {
      "start_point": [
        565,
        0
      ],
      "end_point": [
        582,
        1
      ],
      "strings": []
    },
    "prjoin": {
      "start_point": [
        586,
        0
      ],
      "end_point": [
        650,
        1
      ],
      "strings": []
    },
    "join": {
      "start_point": [
        654,
        0
      ],
      "end_point": [
        809,
        1
      ],
      "strings": []
    },
    "add_field": {
      "start_point": [
        813,
        0
      ],
      "end_point": [
        829,
        1
      ],
      "strings": []
    },
    "string_to_join_field": {
      "start_point": [
        837,
        0
      ],
      "end_point": [
        853,
        1
      ],
      "strings": [
        "\"\"",
        "\"invalid field number: %s\""
      ]
    },
    "decode_field_spec": {
      "start_point": [
        859,
        0
      ],
      "end_point": [
        894,
        1
      ],
      "strings": [
        "\"invalid field specifier: %s\"",
        "\"invalid field specifier: %s\"",
        "\"invalid file number in field spec: %s\""
      ]
    },
    "add_field_list": {
      "start_point": [
        898,
        0
      ],
      "end_point": [
        916,
        1
      ],
      "strings": [
        "\", \\t\""
      ]
    },
    "set_join_field": {
      "start_point": [
        921,
        0
      ],
      "end_point": [
        932,
        1
      ],
      "strings": [
        "\"incompatible join fields %lu, %lu\""
      ]
    },
    "add_file_name": {
      "start_point": [
        955,
        0
      ],
      "end_point": [
        999,
        1
      ],
      "strings": [
        "\"extra operand %s\""
      ]
    },
    "main": {
      "start_point": [
        1001,
        0
      ],
      "end_point": [
        1198,
        1
      ],
      "strings": [
        "\"\"",
        "\"-a:e:i1:2:j:o:t:v:z\"",
        "\"\"",
        "\"invalid field number: %s\"",
        "\"conflicting empty-field replacement strings\"",
        "\"auto\"",
        "\"\\\\0\"",
        "\"multi-character tab %s\"",
        "\"incompatible tabs\"",
        "\"missing operand\"",
        "\"missing operand after %s\"",
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"both files cannot be standard input\"",
        "\"%s\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/kill.c": {
    "usage": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [-s SIGNAL | -SIGNAL] PID...\\n\\\n  or:  %s -l [SIGNAL]...\\n\\\n  or:  %s -t [SIGNAL]...\\n\\\n\"",
        "\"\\\nSend signals to processes, or list signals.\\n\\\n\"",
        "\"\\\n  -s, --signal=SIGNAL, -SIGNAL\\n\\\n                   specify the name or number of the signal to be sent\\n\\\n  -l, --list       list signal names, or convert signal names to/from numbers\\n\\\n  -t, --table      print a table of signal information\\n\\\n\"",
        "\"\\n\\\nSIGNAL may be a signal name like 'HUP', or a signal number like '1',\\n\\\nor the exit status of a process terminated by a signal.\\n\\\nPID is an integer; if negative it identifies a process group.\\n\\\n\""
      ]
    },
    "print_table_row": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": [
        "\"%*d %-*s %s\\n\"",
        "\"?\""
      ]
    },
    "list_signals": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": [
        "\"%d\\n\""
      ]
    },
    "send_signals": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": [
        "\"%s: invalid process id\"",
        "\"%s\""
      ]
    },
    "main": {
      "start_point": [
        219,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": [
        "\"\"",
        "\"invalid option -- %c\"",
        "\"%s: multiple signals specified\"",
        "\"multiple -l or -t options specified\"",
        "\"cannot combine signal with -l or -t\"",
        "\"no process ID specified\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/lbracket.c": {},
  "coreutils/coreutils-8.29/src/libstdbuf.c": {
    "fileno_to_name": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        85,
        1
      ],
      "strings": [
        "\"stdin\"",
        "\"stdout\"",
        "\"stderr\"",
        "\"unknown\""
      ]
    },
    "apply_mode": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        130,
        1
      ],
      "strings": [
        "\"failed to allocate a %\"",
        "\" byte stdio buffer\\n\"",
        "\"invalid buffering mode %s for %s\\n\"",
        "\"could not set buffering of %s to mode %s\\n\""
      ]
    },
    "__attribute": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": [
        "\"_STDBUF_E\"",
        "\"_STDBUF_I\"",
        "\"_STDBUF_O\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/link.c": {
    "usage": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s FILE1 FILE2\\n\\\n  or:  %s OPTION\\n\"",
        "\"Call the link function to create a link named FILE2\\\n to an existing FILE1.\\n\\n\""
      ]
    },
    "main": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"missing operand\"",
        "\"missing operand after %s\"",
        "\"extra operand %s\"",
        "\"cannot create link %s to %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/ln.c": {
    "errno_nonexisting": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "target_directory_operand": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": [
        "\"failed to access %s\"",
        "\"target %s is not a directory\""
      ]
    },
    "convert_abs_rel": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "do_link": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": [
        "\"failed to access %s\"",
        "\"%s: hard link not allowed for directory\"",
        "\"failed to access %s\"",
        "\"will not overwrite just-created %s with %s\"",
        "\"%s and %s are the same file\"",
        "\"%s: cannot overwrite directory\"",
        "\"%s: replace %s? \"",
        "\"cannot backup %s\"",
        "\"%s ~ \"",
        "\"%s %c> %s\\n\"",
        "\"failed to create symbolic link %s\"",
        "\"failed to create symbolic link %s -> %s\"",
        "\"failed to create hard link to %.0s%s\"",
        "\"failed to create hard link %s\"",
        "\"failed to create hard link %s => %s\"",
        "\"cannot un-backup %s\""
      ]
    },
    "usage": {
      "start_point": [
        370,
        0
      ],
      "end_point": [
        432,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [-T] TARGET LINK_NAME   (1st form)\\n\\\n  or:  %s [OPTION]... TARGET                  (2nd form)\\n\\\n  or:  %s [OPTION]... TARGET... DIRECTORY     (3rd form)\\n\\\n  or:  %s [OPTION]... -t DIRECTORY TARGET...  (4th form)\\n\\\n\"",
        "\"\\\nIn the 1st form, create a link to TARGET with the name LINK_NAME.\\n\\\nIn the 2nd form, create a link to TARGET in the current directory.\\n\\\nIn the 3rd and 4th forms, create links to each TARGET in DIRECTORY.\\n\\\nCreate hard links by default, symbolic links with --symbolic.\\n\\\nBy default, each destination (name of new link) should not already exist.\\n\\\nWhen creating hard links, each TARGET must exist.  Symbolic links\\n\\\ncan hold arbitrary text; if later resolved, a relative link is\\n\\\ninterpreted in relation to its parent directory.\\n\\\n\"",
        "\"\\\n      --backup[=CONTROL]      make a backup of each existing destination file\\n\\\n  -b                          like --backup but does not accept an argument\\n\\\n  -d, -F, --directory         allow the superuser to attempt to hard link\\n\\\n                                directories (note: will probably fail due to\\n\\\n                                system restrictions, even for the superuser)\\n\\\n  -f, --force                 remove existing destination files\\n\\\n\"",
        "\"\\\n  -i, --interactive           prompt whether to remove destinations\\n\\\n  -L, --logical               dereference TARGETs that are symbolic links\\n\\\n  -n, --no-dereference        treat LINK_NAME as a normal file if\\n\\\n                                it is a symbolic link to a directory\\n\\\n  -P, --physical              make hard links directly to symbolic links\\n\\\n  -r, --relative              create symbolic links relative to link location\\n\\\n  -s, --symbolic              make symbolic links instead of hard links\\n\\\n\"",
        "\"\\\n  -S, --suffix=SUFFIX         override the usual backup suffix\\n\\\n  -t, --target-directory=DIRECTORY  specify the DIRECTORY in which to create\\n\\\n                                the links\\n\\\n  -T, --no-target-directory   treat LINK_NAME as a normal file always\\n\\\n  -v, --verbose               print name of each linked file\\n\\\n\"",
        "\"\\\n\\n\\\nUsing -s ignores -L and -P.  Otherwise, the last option specified controls\\n\\\nbehavior when a TARGET is a symbolic link, defaulting to %s.\\n\\\n\"",
        "\"-L\"",
        "\"-P\""
      ]
    },
    "main": {
      "start_point": [
        434,
        0
      ],
      "end_point": [
        617,
        1
      ],
      "strings": [
        "\"\"",
        "\"bdfinrst:vFLPS:T\"",
        "\"multiple target directories specified\"",
        "\"failed to access %s\"",
        "\"target %s is not a directory\"",
        "\"missing file operand\"",
        "\"cannot combine --target-directory \"",
        "\"and --no-target-directory\"",
        "\"missing destination file operand after %s\"",
        "\"extra operand %s\"",
        "\".\"",
        "\"target %s is not a directory\"",
        "\"backup type\"",
        "\"cannot do --relative without --symbolic\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/logname.c": {
    "usage": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]\\n\"",
        "\"\\\nPrint the name of the current user.\\n\\\n\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"extra operand %s\"",
        "\"no login name\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/longlong.h": {},
  "coreutils/coreutils-8.29/src/ls-dir.c": {},
  "coreutils/coreutils-8.29/src/ls-ls.c": {},
  "coreutils/coreutils-8.29/src/ls-vdir.c": {},
  "coreutils/coreutils-8.29/src/ls.c": {
    "dev_ino_push": {
      "start_point": [
        1003,
        0
      ],
      "end_point": [
        1015,
        1
      ],
      "strings": []
    },
    "dev_ino_pop": {
      "start_point": [
        1019,
        0
      ],
      "end_point": [
        1030,
        1
      ],
      "strings": []
    },
    "dired_dump_obstack": {
      "start_point": [
        1048,
        0
      ],
      "end_point": [
        1062,
        1
      ],
      "strings": [
        "\" %lu\""
      ]
    },
    "first_percent_b": {
      "start_point": [
        1068,
        0
      ],
      "end_point": [
        1079,
        1
      ],
      "strings": []
    },
    "file_escape_init": {
      "start_point": [
        1082,
        0
      ],
      "end_point": [
        1087,
        1
      ],
      "strings": []
    },
    "abmon_init": {
      "start_point": [
        1111,
        0
      ],
      "end_point": [
        1140,
        1
      ],
      "strings": []
    },
    "abformat_init": {
      "start_point": [
        1144,
        0
      ],
      "end_point": [
        1182,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%.*s%s%s\""
      ]
    },
    "dev_ino_hash": {
      "start_point": [
        1184,
        0
      ],
      "end_point": [
        1189,
        1
      ],
      "strings": []
    },
    "dev_ino_compare": {
      "start_point": [
        1191,
        0
      ],
      "end_point": [
        1197,
        1
      ],
      "strings": []
    },
    "dev_ino_free": {
      "start_point": [
        1199,
        0
      ],
      "end_point": [
        1203,
        1
      ],
      "strings": []
    },
    "visit_dir": {
      "start_point": [
        1209,
        0
      ],
      "end_point": [
        1238,
        1
      ],
      "strings": []
    },
    "free_pending_ent": {
      "start_point": [
        1240,
        0
      ],
      "end_point": [
        1246,
        1
      ],
      "strings": []
    },
    "is_colored": {
      "start_point": [
        1248,
        0
      ],
      "end_point": [
        1256,
        1
      ],
      "strings": [
        "\"0\"",
        "\"00\""
      ]
    },
    "restore_default_color": {
      "start_point": [
        1258,
        0
      ],
      "end_point": [
        1263,
        1
      ],
      "strings": []
    },
    "set_normal_color": {
      "start_point": [
        1265,
        0
      ],
      "end_point": [
        1274,
        1
      ],
      "strings": []
    },
    "sighandler": {
      "start_point": [
        1278,
        0
      ],
      "end_point": [
        1285,
        1
      ],
      "strings": []
    },
    "stophandler": {
      "start_point": [
        1289,
        0
      ],
      "end_point": [
        1296,
        1
      ],
      "strings": []
    },
    "process_signals": {
      "start_point": [
        1304,
        0
      ],
      "end_point": [
        1342,
        1
      ],
      "strings": []
    },
    "signal_setup": {
      "start_point": [
        1347,
        0
      ],
      "end_point": [
        1428,
        1
      ],
      "strings": []
    },
    "signal_init": {
      "start_point": [
        1430,
        0
      ],
      "end_point": [
        1434,
        1
      ],
      "strings": []
    },
    "signal_restore": {
      "start_point": [
        1436,
        0
      ],
      "end_point": [
        1440,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        1442,
        0
      ],
      "end_point": [
        1648,
        1
      ],
      "strings": [
        "\"\"",
        "\"TZ\"",
        "\"\"",
        "\".\"",
        "\"\"",
        "\".\"",
        "\"\"",
        "\"\\033[\"",
        "\"//DIRED//\"",
        "\"//SUBDIRED//\"",
        "\"//DIRED-OPTIONS// --quoting-style=%s\\n\""
      ]
    },
    "set_line_length": {
      "start_point": [
        1653,
        0
      ],
      "end_point": [
        1673,
        1
      ],
      "strings": [
        "\"\""
      ]
    },
    "decode_switches": {
      "start_point": [
        1678,
        0
      ],
      "end_point": [
        2257,
        1
      ],
      "strings": [
        "\"COLUMNS\"",
        "\"ignoring invalid width in environment variable COLUMNS: %s\"",
        "\"TABSIZE\"",
        "\"ignoring invalid tab size in environment variable TABSIZE: %s\"",
        "\"abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1\"",
        "\"%s: %s\"",
        "\"invalid line width\"",
        "\"*~\"",
        "\".*~\"",
        "\"\"",
        "\"invalid tab size\"",
        "\"--sort\"",
        "\"--time\"",
        "\"--format\"",
        "\"full-iso\"",
        "\"--color\"",
        "\"--hyperlink\"",
        "\"--indicator-style\"",
        "\"--quoting-style\"",
        "\"LS_BLOCK_SIZE\"",
        "\"BLOCK_SIZE\"",
        "\"*=>@|\"",
        "\"posix-\"",
        "\"TIME_STYLE\"",
        "\"locale\"",
        "\"invalid time style format %s\"",
        "\"time style\"",
        "\"Valid arguments are:\\n\"",
        "\"  - [posix-]%s\\n\"",
        "\"  - +FORMAT (e.g., +%H:%M) for a 'date'-style\"",
        "\" format\\n\"",
        "\"%Y-%m-%d %H:%M:%S.%N %z\"",
        "\"%Y-%m-%d %H:%M\"",
        "\"%Y-%m-%d \"",
        "\"%m-%d %H:%M\""
      ]
    },
    "get_funky_string": {
      "start_point": [
        2272,
        0
      ],
      "end_point": [
        2465,
        1
      ],
      "strings": []
    },
    "known_term_type": {
      "start_point": [
        2480,
        0
      ],
      "end_point": [
        2499,
        1
      ],
      "strings": [
        "\"TERM\"",
        "\"TERM \""
      ]
    },
    "parse_ls_color": {
      "start_point": [
        2501,
        0
      ],
      "end_point": [
        2641,
        1
      ],
      "strings": [
        "\"LS_COLORS\"",
        "\"COLORTERM\"",
        "\"??\"",
        "\"unrecognized prefix: %s\"",
        "\"unparsable value for LS_COLORS environment variable\"",
        "\"target\""
      ]
    },
    "getenv_quoting_style": {
      "start_point": [
        2646,
        0
      ],
      "end_point": [
        2660,
        1
      ],
      "strings": [
        "\"QUOTING_STYLE\"",
        "\"ignoring invalid value of environment variable QUOTING_STYLE: %s\""
      ]
    },
    "set_exit_status": {
      "start_point": [
        2665,
        0
      ],
      "end_point": [
        2672,
        1
      ],
      "strings": []
    },
    "file_failure": {
      "start_point": [
        2678,
        0
      ],
      "end_point": [
        2683,
        1
      ],
      "strings": []
    },
    "queue_directory": {
      "start_point": [
        2695,
        0
      ],
      "end_point": [
        2704,
        1
      ],
      "strings": []
    },
    "print_dir": {
      "start_point": [
        2711,
        0
      ],
      "end_point": [
        2879,
        1
      ],
      "strings": [
        "\"cannot open directory %s\"",
        "\"cannot determine device and inode of %s\"",
        "\"%s: not listing already-listed directory\"",
        "\"error canonicalizing %s\"",
        "\":\\n\"",
        "\"reading directory %s\"",
        "\"closing directory %s\"",
        "\"total\""
      ]
    },
    "add_ignore_pattern": {
      "start_point": [
        2884,
        0
      ],
      "end_point": [
        2894,
        1
      ],
      "strings": []
    },
    "patterns_match": {
      "start_point": [
        2898,
        0
      ],
      "end_point": [
        2906,
        1
      ],
      "strings": []
    },
    "file_ignored": {
      "start_point": [
        2910,
        0
      ],
      "end_point": [
        2919,
        1
      ],
      "strings": []
    },
    "unsigned_file_size": {
      "start_point": [
        2925,
        0
      ],
      "end_point": [
        2929,
        1
      ],
      "strings": []
    },
    "has_capability": [
      {
        "start_point": [
          2933,
          0
        ],
        "end_point": [
          2953,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          2955,
          0
        ],
        "end_point": [
          2960,
          1
        ],
        "strings": []
      }
    ],
    "free_ent": {
      "start_point": [
        2965,
        0
      ],
      "end_point": [
        2978,
        1
      ],
      "strings": []
    },
    "clear_files": {
      "start_point": [
        2981,
        0
      ],
      "end_point": [
        3003,
        1
      ],
      "strings": []
    },
    "errno_unsupported": {
      "start_point": [
        3007,
        0
      ],
      "end_point": [
        3011,
        1
      ],
      "strings": []
    },
    "getfilecon_cache": {
      "start_point": [
        3016,
        0
      ],
      "end_point": [
        3041,
        1
      ],
      "strings": [
        "\"security.SMACK64\""
      ]
    },
    "file_has_acl_cache": {
      "start_point": [
        3046,
        0
      ],
      "end_point": [
        3066,
        1
      ],
      "strings": []
    },
    "has_capability_cache": {
      "start_point": [
        3071,
        0
      ],
      "end_point": [
        3088,
        1
      ],
      "strings": []
    },
    "needs_quoting": {
      "start_point": [
        3090,
        0
      ],
      "end_point": [
        3097,
        1
      ],
      "strings": []
    },
    "gobble_file": {
      "start_point": [
        3102,
        0
      ],
      "end_point": [
        3433,
        1
      ],
      "strings": [
        "\"error canonicalizing %s\"",
        "\"cannot access %s\"",
        "\"_\"",
        "\"unlabeled\"",
        "\"%s\""
      ]
    },
    "is_directory": {
      "start_point": [
        3436,
        0
      ],
      "end_point": [
        3440,
        1
      ],
      "strings": []
    },
    "get_link_name": {
      "start_point": [
        3446,
        0
      ],
      "end_point": [
        3453,
        1
      ],
      "strings": [
        "\"cannot read symbolic link %s\""
      ]
    },
    "make_link_name": {
      "start_point": [
        3460,
        0
      ],
      "end_point": [
        3485,
        1
      ],
      "strings": []
    },
    "basename_is_dot_or_dotdot": {
      "start_point": [
        3490,
        0
      ],
      "end_point": [
        3495,
        1
      ],
      "strings": []
    },
    "extract_dirs_from_files": {
      "start_point": [
        3505,
        0
      ],
      "end_point": [
        3553,
        1
      ],
      "strings": []
    },
    "xstrcoll": {
      "start_point": [
        3560,
        0
      ],
      "end_point": [
        3574,
        1
      ],
      "strings": [
        "\"cannot compare file names %s and %s\""
      ]
    },
    "cmp_ctime": {
      "start_point": [
        3626,
        0
      ],
      "end_point": [
        3633,
        1
      ],
      "strings": []
    },
    "cmp_mtime": {
      "start_point": [
        3635,
        0
      ],
      "end_point": [
        3642,
        1
      ],
      "strings": []
    },
    "cmp_atime": {
      "start_point": [
        3644,
        0
      ],
      "end_point": [
        3651,
        1
      ],
      "strings": []
    },
    "cmp_size": {
      "start_point": [
        3653,
        0
      ],
      "end_point": [
        3659,
        1
      ],
      "strings": []
    },
    "cmp_name": {
      "start_point": [
        3661,
        0
      ],
      "end_point": [
        3666,
        1
      ],
      "strings": []
    },
    "cmp_extension": {
      "start_point": [
        3671,
        0
      ],
      "end_point": [
        3679,
        1
      ],
      "strings": [
        "\"\"",
        "\"\""
      ]
    },
    "cmp_version": {
      "start_point": [
        3697,
        0
      ],
      "end_point": [
        3701,
        1
      ],
      "strings": []
    },
    "xstrcoll_version": {
      "start_point": [
        3703,
        0
      ],
      "end_point": [
        3704,
        30
      ],
      "strings": []
    },
    "rev_xstrcoll_version": {
      "start_point": [
        3705,
        0
      ],
      "end_point": [
        3706,
        30
      ],
      "strings": []
    },
    "xstrcoll_df_version": {
      "start_point": [
        3707,
        0
      ],
      "end_point": [
        3708,
        53
      ],
      "strings": []
    },
    "rev_xstrcoll_df_version": {
      "start_point": [
        3709,
        0
      ],
      "end_point": [
        3710,
        53
      ],
      "strings": []
    },
    "initialize_ordering_vector": {
      "start_point": [
        3776,
        0
      ],
      "end_point": [
        3781,
        1
      ],
      "strings": []
    },
    "sort_files": {
      "start_point": [
        3785,
        0
      ],
      "end_point": [
        3821,
        1
      ],
      "strings": []
    },
    "print_current_files": {
      "start_point": [
        3825,
        0
      ],
      "end_point": [
        3867,
        1
      ],
      "strings": []
    },
    "align_nstrftime": {
      "start_point": [
        3873,
        0
      ],
      "end_point": [
        3881,
        1
      ],
      "strings": []
    },
    "long_time_expected_width": {
      "start_point": [
        3886,
        0
      ],
      "end_point": [
        3917,
        1
      ],
      "strings": []
    },
    "format_user_or_group": {
      "start_point": [
        3922,
        0
      ],
      "end_point": [
        3945,
        1
      ],
      "strings": [
        "\"%*lu \""
      ]
    },
    "format_user": {
      "start_point": [
        3950,
        0
      ],
      "end_point": [
        3955,
        1
      ],
      "strings": [
        "\"?\""
      ]
    },
    "format_group": {
      "start_point": [
        3959,
        0
      ],
      "end_point": [
        3964,
        1
      ],
      "strings": [
        "\"?\""
      ]
    },
    "format_user_or_group_width": {
      "start_point": [
        3968,
        0
      ],
      "end_point": [
        3982,
        1
      ],
      "strings": [
        "\"%lu\""
      ]
    },
    "format_user_width": {
      "start_point": [
        3986,
        0
      ],
      "end_point": [
        3990,
        1
      ],
      "strings": []
    },
    "format_group_width": {
      "start_point": [
        3994,
        0
      ],
      "end_point": [
        3998,
        1
      ],
      "strings": []
    },
    "format_inode": {
      "start_point": [
        4003,
        0
      ],
      "end_point": [
        4010,
        1
      ],
      "strings": [
        "\"?\""
      ]
    },
    "print_long_format": {
      "start_point": [
        4013,
        0
      ],
      "end_point": [
        4222,
        1
      ],
      "strings": [
        "\"%*s \"",
        "\"?\"",
        "\"%s %*s \"",
        "\"?\"",
        "\"%*s, %*s \"",
        "\"?\"",
        "\"%*s \"",
        "\"?\"",
        "\" -> \""
      ]
    },
    "quote_name_buf": {
      "start_point": [
        4233,
        0
      ],
      "end_point": [
        4423,
        1
      ],
      "strings": []
    },
    "quote_name_width": {
      "start_point": [
        4425,
        0
      ],
      "end_point": [
        4443,
        1
      ],
      "strings": []
    },
    "file_escape": {
      "start_point": [
        4447,
        0
      ],
      "end_point": [
        4466,
        1
      ],
      "strings": [
        "\"%%%02x\""
      ]
    },
    "quote_name": {
      "start_point": [
        4468,
        0
      ],
      "end_point": [
        4531,
        1
      ],
      "strings": [
        "\"\\033]8;;file://%s%s%s\\a\"",
        "\"\"",
        "\"/\"",
        "\"\\033]8;;\\a\""
      ]
    },
    "print_name_with_quoting": {
      "start_point": [
        4533,
        0
      ],
      "end_point": [
        4567,
        1
      ],
      "strings": []
    },
    "prep_non_filename_text": {
      "start_point": [
        4569,
        0
      ],
      "end_point": [
        4580,
        1
      ],
      "strings": []
    },
    "print_file_name_and_frills": {
      "start_point": [
        4586,
        0
      ],
      "end_point": [
        4612,
        1
      ],
      "strings": [
        "\"%*s \"",
        "\"%*s \"",
        "\"?\"",
        "\"%*s \""
      ]
    },
    "get_type_indicator": {
      "start_point": [
        4616,
        0
      ],
      "end_point": [
        4646,
        1
      ],
      "strings": []
    },
    "print_type_indicator": {
      "start_point": [
        4648,
        0
      ],
      "end_point": [
        4655,
        1
      ],
      "strings": []
    },
    "print_color_indicator": {
      "start_point": [
        4658,
        0
      ],
      "end_point": [
        4672,
        1
      ],
      "strings": []
    },
    "get_color_indicator": {
      "start_point": [
        4675,
        0
      ],
      "end_point": [
        4783,
        1
      ],
      "strings": []
    },
    "put_indicator": {
      "start_point": [
        4786,
        0
      ],
      "end_point": [
        4804,
        1
      ],
      "strings": []
    },
    "length_of_file_name_and_frills": {
      "start_point": [
        4806,
        0
      ],
      "end_point": [
        4837,
        1
      ],
      "strings": [
        "\"?\""
      ]
    },
    "print_many_per_line": {
      "start_point": [
        4839,
        0
      ],
      "end_point": [
        4873,
        1
      ],
      "strings": []
    },
    "print_horizontal": {
      "start_point": [
        4875,
        0
      ],
      "end_point": [
        4912,
        1
      ],
      "strings": []
    },
    "print_with_separator": {
      "start_point": [
        4916,
        0
      ],
      "end_point": [
        4952,
        1
      ],
      "strings": []
    },
    "indent": {
      "start_point": [
        4957,
        0
      ],
      "end_point": [
        4973,
        1
      ],
      "strings": []
    },
    "attach": {
      "start_point": [
        4979,
        0
      ],
      "end_point": [
        4996,
        1
      ],
      "strings": []
    },
    "init_column_info": {
      "start_point": [
        5002,
        0
      ],
      "end_point": [
        5065,
        1
      ],
      "strings": []
    },
    "calculate_columns": {
      "start_point": [
        5070,
        0
      ],
      "end_point": [
        5118,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        5120,
        0
      ],
      "end_point": [
        5304,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [FILE]...\\n\"",
        "\"\\\nList information about the FILEs (the current directory by default).\\n\\\nSort entries alphabetically if none of -cftuvSUX nor --sort is specified.\\n\\\n\"",
        "\"\\\n  -a, --all                  do not ignore entries starting with .\\n\\\n  -A, --almost-all           do not list implied . and ..\\n\\\n      --author               with -l, print the author of each file\\n\\\n  -b, --escape               print C-style escapes for nongraphic characters\\n\\\n\"",
        "\"\\\n      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;\\n\\\n                               e.g., '--block-size=M'; see SIZE format below\\n\\\n\"",
        "\"\\\n  -B, --ignore-backups       do not list implied entries ending with ~\\n\\\n  -c                         with -lt: sort by, and show, ctime (time of last\\n\\\n                               modification of file status information);\\n\\\n                               with -l: show ctime and sort by name;\\n\\\n                               otherwise: sort by ctime, newest first\\n\\\n\"",
        "\"\\\n  -C                         list entries by columns\\n\\\n      --color[=WHEN]         colorize the output; WHEN can be 'always' (default\\\n\\n\\\n                               if omitted), 'auto', or 'never'; more info below\\\n\\n\\\n  -d, --directory            list directories themselves, not their contents\\n\\\n  -D, --dired                generate output designed for Emacs' dired mode\\n\\\n\"",
        "\"\\\n  -f                         do not sort, enable -aU, disable -ls --color\\n\\\n  -F, --classify             append indicator (one of */=>@|) to entries\\n\\\n      --file-type            likewise, except do not append '*'\\n\\\n      --format=WORD          across -x, commas -m, horizontal -x, long -l,\\n\\\n                               single-column -1, verbose -l, vertical -C\\n\\\n      --full-time            like -l --time-style=full-iso\\n\\\n\"",
        "\"\\\n  -g                         like -l, but do not list owner\\n\\\n\"",
        "\"\\\n      --group-directories-first\\n\\\n                             group directories before files;\\n\\\n                               can be augmented with a --sort option, but any\\n\\\n                               use of --sort=none (-U) disables grouping\\n\\\n\"",
        "\"\\\n  -G, --no-group             in a long listing, don't print group names\\n\\\n\"",
        "\"\\\n  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.\\n\\\n      --si                   likewise, but use powers of 1000 not 1024\\n\\\n\"",
        "\"\\\n  -H, --dereference-command-line\\n\\\n                             follow symbolic links listed on the command line\\n\\\n      --dereference-command-line-symlink-to-dir\\n\\\n                             follow each command line symbolic link\\n\\\n                               that points to a directory\\n\\\n      --hide=PATTERN         do not list implied entries matching shell PATTERN\\\n\\n\\\n                               (overridden by -a or -A)\\n\\\n\"",
        "\"\\\n      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'\\n\\\n                               (default if omitted), 'auto', or 'never'\\n\\\n\"",
        "\"\\\n      --indicator-style=WORD  append indicator with style WORD to entry names:\\\n\\n\\\n                               none (default), slash (-p),\\n\\\n                               file-type (--file-type), classify (-F)\\n\\\n  -i, --inode                print the index number of each file\\n\\\n  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN\\\n\\n\\\n\"",
        "\"\\\n  -k, --kibibytes            default to 1024-byte blocks for disk usage;\\n\\\n                               used only with -s and per directory totals\\n\\\n\"",
        "\"\\\n  -l                         use a long listing format\\n\\\n  -L, --dereference          when showing file information for a symbolic\\n\\\n                               link, show information for the file the link\\n\\\n                               references rather than for the link itself\\n\\\n  -m                         fill width with a comma separated list of entries\\\n\\n\\\n\"",
        "\"\\\n  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\\n\\\n  -N, --literal              print entry names without quoting\\n\\\n  -o                         like -l, but do not list group information\\n\\\n  -p, --indicator-style=slash\\n\\\n                             append / indicator to directories\\n\\\n\"",
        "\"\\\n  -q, --hide-control-chars   print ? instead of nongraphic characters\\n\\\n      --show-control-chars   show nongraphic characters as-is (the default,\\n\\\n                               unless program is 'ls' and output is a terminal)\\\n\\n\\\n  -Q, --quote-name           enclose entry names in double quotes\\n\\\n      --quoting-style=WORD   use quoting style WORD for entry names:\\n\\\n                               literal, locale, shell, shell-always,\\n\\\n                               shell-escape, shell-escape-always, c, escape\\n\\\n                               (overrides QUOTING_STYLE environment variable)\\n\\\n\"",
        "\"\\\n  -r, --reverse              reverse order while sorting\\n\\\n  -R, --recursive            list subdirectories recursively\\n\\\n  -s, --size                 print the allocated size of each file, in blocks\\n\\\n\"",
        "\"\\\n  -S                         sort by file size, largest first\\n\\\n      --sort=WORD            sort by WORD instead of name: none (-U), size (-S)\\\n,\\n\\\n                               time (-t), version (-v), extension (-X)\\n\\\n      --time=WORD            with -l, show time as WORD instead of default\\n\\\n                               modification time: atime or access or use (-u);\\\n\\n\\\n                               ctime or status (-c); also use specified time\\n\\\n                               as sort key if --sort=time (newest first)\\n\\\n\"",
        "\"\\\n      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below\\n\\\n\"",
        "\"\\\n  -t                         sort by modification time, newest first\\n\\\n  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\\n\\\n\"",
        "\"\\\n  -u                         with -lt: sort by, and show, access time;\\n\\\n                               with -l: show access time and sort by name;\\n\\\n                               otherwise: sort by access time, newest first\\n\\\n  -U                         do not sort; list entries in directory order\\n\\\n  -v                         natural sort of (version) numbers within text\\n\\\n\"",
        "\"\\\n  -w, --width=COLS           set output width to COLS.  0 means no limit\\n\\\n  -x                         list entries by lines instead of by columns\\n\\\n  -X                         sort alphabetically by entry extension\\n\\\n  -Z, --context              print any security context of each file\\n\\\n  -1                         list one file per line.  Avoid '\\\\n' with -q or -b\\\n\\n\\\n\"",
        "\"\\\n\\n\\\nThe TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.\\n\\\nFORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,\\n\\\nthen FORMAT1 applies to non-recent files and FORMAT2 to recent files.\\n\\\nTIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.\\n\\\nAlso the TIME_STYLE environment variable sets the default style to use.\\n\\\n\"",
        "\"\\\n\\n\\\nUsing color to distinguish file types is disabled both by default and\\n\\\nwith --color=never.  With --color=auto, ls emits color codes only when\\n\\\nstandard output is connected to a terminal.  The LS_COLORS environment\\n\\\nvariable can change the settings.  Use the dircolors command to set it.\\n\\\n\"",
        "\"\\\n\\n\\\nExit status:\\n\\\n 0  if OK,\\n\\\n 1  if minor problems (e.g., cannot access subdirectory),\\n\\\n 2  if serious trouble (e.g., cannot access command-line argument).\\n\\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/ls.h": {},
  "coreutils/coreutils-8.29/src/make-prime-list.c": {
    "_GL_ATTRIBUTE_CONST": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "process_prime": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "print_wide_uint": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        106,
        1
      ],
      "strings": [
        "\"(\"",
        "\")\\n%*s\"",
        "\"\"",
        "\" << %d | \"",
        "\"(uintmax_t) \"",
        "\"0x%0*xU\""
      ]
    },
    "output_primes": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": [
        "\"/* Generated file -- DO NOT EDIT */\\n\"",
        "\"#define WIDE_UINT_BITS %u\\n\"",
        "\"P (%u, %u,\\n   (\"",
        "\"),\\n   UINTMAX_MAX / %u)\\n\"",
        "\"\\n#undef FIRST_OMITTED_PRIME\\n\"",
        "\"#define FIRST_OMITTED_PRIME %u\\n\""
      ]
    },
    "xalloc": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": [
        "\"Virtual memory exhausted.\\n\""
      ]
    },
    "main": {
      "start_point": [
        170,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"Usage: %s LIMIT\\n\"",
        "\"Produces a list of odd primes <= LIMIT\\n\"",
        "\"write error: %s\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/md5sum.c": {
    "usage": {
      "start_point": [
        217,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\nPrint or check %s (%d-bit) checksums.\\n\\\n\"",
        "\"\\\n\\n\\\n  -b, --binary         read in binary mode (default unless reading tty stdin)\\n\\\n\"",
        "\"\\\n\\n\\\n  -b, --binary         read in binary mode\\n\\\n\"",
        "\"\\\n  -c, --check          read %s sums from the FILEs and check them\\n\"",
        "\"\\\n  -l, --length         digest length in bits; must not exceed the maximum for\\n\\\n                       the blake2 algorithm and must be a multiple of 8\\n\\\n\"",
        "\"\\\n      --tag            create a BSD-style checksum\\n\\\n\"",
        "\"\\\n  -t, --text           read in text mode (default if reading tty stdin)\\n\\\n\"",
        "\"\\\n  -t, --text           read in text mode (default)\\n\\\n\"",
        "\"\\\n\\n\\\nThe following five options are useful only when verifying checksums:\\n\\\n      --ignore-missing  don't fail or report status for missing files\\n\\\n      --quiet          don't print OK for each successfully verified file\\n\\\n      --status         don't output anything, status code shows success\\n\\\n      --strict         exit non-zero for improperly formatted checksum lines\\n\\\n  -w, --warn           warn about improperly formatted checksum lines\\n\\\n\\n\\\n\"",
        "\"\\\n\\n\\\nThe sums are computed as described in %s.  When checking, the input\\n\\\nshould be a former output of this program.  The default mode is to print a\\n\\\nline with checksum, a space, a character indicating input mode ('*' for binary,\\\n\\n' ' for text or where binary is insignificant), and name for each FILE.\\n\""
      ]
    },
    "filename_unescape": {
      "start_point": [
        299,
        0
      ],
      "end_point": [
        342,
        1
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_PURE": {
      "start_point": [
        346,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": []
    },
    "bsd_split_3": {
      "start_point": [
        362,
        0
      ],
      "end_point": [
        400,
        1
      ],
      "strings": []
    },
    "split_3": {
      "start_point": [
        406,
        0
      ],
      "end_point": [
        536,
        1
      ],
      "strings": []
    },
    "print_filename": {
      "start_point": [
        540,
        0
      ],
      "end_point": [
        567,
        1
      ],
      "strings": [
        "\"\\\\n\"",
        "\"\\\\\\\\\""
      ]
    },
    "digest_file": {
      "start_point": [
        581,
        0
      ],
      "end_point": [
        640,
        1
      ],
      "strings": [
        "\"-\"",
        "\"rb\"",
        "\"r\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\""
      ]
    },
    "digest_check": {
      "start_point": [
        642,
        0
      ],
      "end_point": [
        849,
        1
      ],
      "strings": [
        "\"-\"",
        "\"standard input\"",
        "\"r\"",
        "\"%s\"",
        "\"%s: too many checksum lines\"",
        "\"-\"",
        "\"%s: %\"",
        "\": improperly formatted %s checksum line\"",
        "\": %s\\n\"",
        "\"FAILED open or read\"",
        "\": %s\\n\"",
        "\"FAILED\"",
        "\": %s\\n\"",
        "\"OK\"",
        "\"%s: read error\"",
        "\"%s\"",
        "\"%s: no properly formatted %s checksum lines found\"",
        "\"WARNING: %\"",
        "\" line is improperly formatted\"",
        "\"WARNING: %\"",
        "\" lines are improperly formatted\"",
        "\"WARNING: %\"",
        "\" listed file could not be read\"",
        "\"WARNING: %\"",
        "\" listed files could not be read\"",
        "\"WARNING: %\"",
        "\" computed checksum did NOT match\"",
        "\"WARNING: %\"",
        "\" computed checksums did NOT match\"",
        "\"%s: no file was verified\""
      ]
    },
    "main": {
      "start_point": [
        851,
        0
      ],
      "end_point": [
        1090,
        1
      ],
      "strings": [
        "\"\"",
        "\"l:bctw\"",
        "\"\"",
        "\"bctw\"",
        "\"\"",
        "\"invalid length\"",
        "\"invalid length: %s\"",
        "\"length is not a multiple of 8\"",
        "\"invalid length: %s\"",
        "\"maximum digest length for %s is %\"",
        "\" bits\"",
        "\"--tag does not support --text mode\"",
        "\"the --tag option is meaningless when \"",
        "\"verifying checksums\"",
        "\"the --binary and --text options are meaningless when \"",
        "\"verifying checksums\"",
        "\"the --ignore-missing option is meaningful only when \"",
        "\"verifying checksums\"",
        "\"the --status option is meaningful only when verifying checksums\"",
        "\"the --warn option is meaningful only when verifying checksums\"",
        "\"the --quiet option is meaningful only when verifying checksums\"",
        "\"the --strict option is meaningful only when verifying checksums\"",
        "\"-\"",
        "\"-%\"",
        "\" (\"",
        "\") = \"",
        "\"%02x\"",
        "\"standard input\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/mkdir.c": {
    "usage": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... DIRECTORY...\\n\"",
        "\"\\\nCreate the DIRECTORY(ies), if they do not already exist.\\n\\\n\"",
        "\"\\\n  -m, --mode=MODE   set file mode (as in chmod), not a=rwx - umask\\n\\\n  -p, --parents     no error if existing, make parent directories as needed\\n\\\n  -v, --verbose     print a message for each created directory\\n\\\n\"",
        "\"\\\n  -Z                   set SELinux security context of each created directory\\n\\\n                         to the default type\\n\\\n      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\\n\\\n                         or SMACK security context to CTX\\n\\\n\""
      ]
    },
    "announce_mkdir": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "make_ancestor": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"failed to set default creation context for %s\""
      ]
    },
    "process_dir": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": [
        "\"failed to set default creation context for %s\"",
        "\"failed to restore context for %s\""
      ]
    },
    "main": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        295,
        1
      ],
      "strings": [
        "\"\"",
        "\"pm:vZ\"",
        "\"created directory %s\"",
        "\"warning: ignoring --context; \"",
        "\"it requires an SELinux/SMACK-enabled kernel\"",
        "\"missing operand\"",
        "\"failed to set default file creation context to %s\"",
        "\"invalid mode %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/mkfifo.c": {
    "usage": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... NAME...\\n\"",
        "\"\\\nCreate named pipes (FIFOs) with the given NAMEs.\\n\\\n\"",
        "\"\\\n  -m, --mode=MODE    set file permission bits to MODE, not a=rw - umask\\n\\\n\"",
        "\"\\\n  -Z                   set the SELinux security context to default type\\n\\\n      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\\n\\\n                         or SMACK security context to CTX\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": [
        "\"\"",
        "\"m:Z\"",
        "\"warning: ignoring --context; \"",
        "\"it requires an SELinux/SMACK-enabled kernel\"",
        "\"missing operand\"",
        "\"failed to set default file creation context to %s\"",
        "\"invalid mode\"",
        "\"mode must specify only file permission bits\"",
        "\"cannot create fifo %s\"",
        "\"cannot set permissions of %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/mknod.c": {
    "usage": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... NAME TYPE [MAJOR MINOR]\\n\"",
        "\"\\\nCreate the special file NAME of the given TYPE.\\n\\\n\"",
        "\"\\\n  -m, --mode=MODE    set file permission bits to MODE, not a=rw - umask\\n\\\n\"",
        "\"\\\n  -Z                   set the SELinux security context to default type\\n\\\n      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\\n\\\n                         or SMACK security context to CTX\\n\\\n\"",
        "\"\\\n\\n\\\nBoth MAJOR and MINOR must be specified when TYPE is b, c, or u, and they\\n\\\nmust be omitted when TYPE is p.  If MAJOR or MINOR begins with 0x or 0X,\\n\\\nit is interpreted as hexadecimal; otherwise, if it begins with 0, as octal;\\n\\\notherwise, as decimal.  TYPE may be:\\n\\\n\"",
        "\"\\\n\\n\\\n  b      create a block (buffered) special file\\n\\\n  c, u   create a character (unbuffered) special file\\n\\\n  p      create a FIFO\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        274,
        1
      ],
      "strings": [
        "\"\"",
        "\"m:Z\"",
        "\"warning: ignoring --context; \"",
        "\"it requires an SELinux/SMACK-enabled kernel\"",
        "\"invalid mode\"",
        "\"mode must specify only file permission bits\"",
        "\"missing operand\"",
        "\"missing operand after %s\"",
        "\"%s\\n\"",
        "\"Special files require major and minor device numbers.\"",
        "\"extra operand %s\"",
        "\"%s\\n\"",
        "\"Fifos do not have major and minor device numbers.\"",
        "\"failed to set default file creation context to %s\"",
        "\"block special files not supported\"",
        "\"character special files not supported\"",
        "\"invalid major device number %s\"",
        "\"invalid minor device number %s\"",
        "\"invalid device %s %s\"",
        "\"%s\"",
        "\"%s\"",
        "\"invalid device type %s\"",
        "\"cannot set permissions of %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/mktemp.c": {
    "usage": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [TEMPLATE]\\n\"",
        "\"\\\nCreate a temporary file or directory, safely, and print its name.\\n\\\nTEMPLATE must contain at least 3 consecutive 'X's in last component.\\n\\\nIf TEMPLATE is not specified, use tmp.XXXXXXXXXX, and --tmpdir is implied.\\n\\\n\"",
        "\"\\\nFiles are created u+rw, and directories u+rwx, minus umask restrictions.\\n\\\n\"",
        "\"\\n\"",
        "\"\\\n  -d, --directory     create a directory, not a file\\n\\\n  -u, --dry-run       do not create anything; merely print a name (unsafe)\\n\\\n  -q, --quiet         suppress diagnostics about file/dir-creation failure\\n\\\n\"",
        "\"\\\n      --suffix=SUFF   append SUFF to TEMPLATE; SUFF must not contain a slash.\\n\\\n                        This option is implied if TEMPLATE does not end in X\\n\\\n\"",
        "\"\\\n  -p DIR, --tmpdir[=DIR]  interpret TEMPLATE relative to DIR; if DIR is not\\n\\\n                        specified, use $TMPDIR if set, else /tmp.  With\\n\\\n                        this option, TEMPLATE must not be an absolute name;\\n\\\n                        unlike with -t, TEMPLATE may contain slashes, but\\n\\\n                        mktemp creates only the final component\\n\\\n\"",
        "\"\\\n  -t                  interpret TEMPLATE as a single file name component,\\n\\\n                        relative to a directory: $TMPDIR, if set; else the\\n\\\n                        directory specified via -p; else /tmp [deprecated]\\n\\\n\""
      ]
    },
    "count_consecutive_X_s": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    },
    "mkstemp_len": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "mkdtemp_len": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    },
    "maybe_close_stdout": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        349,
        1
      ],
      "strings": [
        "\"\"",
        "\"dp:qtuV\"",
        "\"too many templates\"",
        "\"with --suffix, template %s must end in X\"",
        "\"invalid suffix %s, contains directory separator\"",
        "\"too few X's in template %s\"",
        "\"TMPDIR\"",
        "\"/tmp\"",
        "\"invalid template, %s, contains directory separator\"",
        "\"TMPDIR\"",
        "\"/tmp\"",
        "\"invalid template, %s; with --tmpdir,\"",
        "\" it may not be absolute\"",
        "\"failed to create directory via template %s\"",
        "\"failed to create file via template %s\"",
        "\"write error\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/mv.c": {
    "rm_option_init": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"failed to get attributes of %s\"",
        "\"/\""
      ]
    },
    "cp_option_init": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": []
    },
    "target_directory_operand": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"failed to access %s\""
      ]
    },
    "do_move": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    },
    "movefile": {
      "start_point": [
        248,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        281,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [-T] SOURCE DEST\\n\\\n  or:  %s [OPTION]... SOURCE... DIRECTORY\\n\\\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\\n\\\n\"",
        "\"\\\nRename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\\n\\\n\"",
        "\"\\\n      --backup[=CONTROL]       make a backup of each existing destination file\\\n\\n\\\n  -b                           like --backup but does not accept an argument\\n\\\n  -f, --force                  do not prompt before overwriting\\n\\\n  -i, --interactive            prompt before overwrite\\n\\\n  -n, --no-clobber             do not overwrite an existing file\\n\\\nIf you specify more than one of -i, -f, -n, only the final one takes effect.\\n\\\n\"",
        "\"\\\n      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\\n\\\n                                 argument\\n\\\n  -S, --suffix=SUFFIX          override the usual backup suffix\\n\\\n\"",
        "\"\\\n  -t, --target-directory=DIRECTORY  move all SOURCE arguments into DIRECTORY\\n\\\n  -T, --no-target-directory    treat DEST as a normal file\\n\\\n  -u, --update                 move only when the SOURCE file is newer\\n\\\n                                 than the destination file or when the\\n\\\n                                 destination file is missing\\n\\\n  -v, --verbose                explain what is being done\\n\\\n  -Z, --context                set SELinux security context of destination\\n\\\n                                 file to default type\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        332,
        0
      ],
      "end_point": [
        492,
        1
      ],
      "strings": [
        "\"\"",
        "\"bfint:uvS:TZ\"",
        "\"multiple target directories specified\"",
        "\"failed to access %s\"",
        "\"target %s is not a directory\"",
        "\"missing file operand\"",
        "\"missing destination file operand after %s\"",
        "\"cannot combine --target-directory (-t) \"",
        "\"and --no-target-directory (-T)\"",
        "\"extra operand %s\"",
        "\"target %s is not a directory\"",
        "\"options --backup and --no-clobber are mutually exclusive\"",
        "\"backup type\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/nice.c": {
    "usage": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION] [COMMAND [ARG]...]\\n\"",
        "\"\\\nRun COMMAND with an adjusted niceness, which affects process scheduling.\\n\\\nWith no COMMAND, print the current niceness.  Niceness values range from\\n\\\n%d (most favorable to the process) to %d (least favorable to the process).\\n\\\n\"",
        "\"\\\n  -n, --adjustment=N   add integer N to the niceness (default 10)\\n\\\n\""
      ]
    },
    "perm_related_errno": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": [
        "\"\"",
        "\"+n:\"",
        "\"\"",
        "\"invalid adjustment %s\"",
        "\"a command must be given with an adjustment\"",
        "\"cannot get niceness\"",
        "\"%d\\n\"",
        "\"cannot get niceness\"",
        "\"cannot set niceness\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/nl.c": {
    "usage": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n\"",
        "\"\\\nWrite each FILE to standard output, with line numbers added.\\n\\\n\"",
        "\"\\\n  -b, --body-numbering=STYLE      use STYLE for numbering body lines\\n\\\n  -d, --section-delimiter=CC      use CC for logical page delimiters\\n\\\n  -f, --footer-numbering=STYLE    use STYLE for numbering footer lines\\n\\\n\"",
        "\"\\\n  -h, --header-numbering=STYLE    use STYLE for numbering header lines\\n\\\n  -i, --line-increment=NUMBER     line number increment at each line\\n\\\n  -l, --join-blank-lines=NUMBER   group of NUMBER empty lines counted as one\\n\\\n  -n, --number-format=FORMAT      insert line numbers according to FORMAT\\n\\\n  -p, --no-renumber               do not reset line numbers for each section\\n\\\n  -s, --number-separator=STRING   add STRING after (possible) line number\\n\\\n\"",
        "\"\\\n  -v, --starting-line-number=NUMBER  first line number for each section\\n\\\n  -w, --number-width=NUMBER       use NUMBER columns for line numbers\\n\\\n\"",
        "\"\\\n\\n\\\nBy default, selects -v1 -i1 -l1 -sTAB -w6 -nrn -hn -bt -fn.\\n\\\nCC are two delimiter characters used to construct logical page delimiters,\\n\\\na missing second character implies :.  Type \\\\\\\\ for \\\\.  STYLE is one of:\\n\\\n\"",
        "\"\\\n\\n\\\n  a         number all lines\\n\\\n  t         number only nonempty lines\\n\\\n  n         number no lines\\n\\\n  pBRE      number only lines that contain a match for the basic regular\\n\\\n            expression, BRE\\n\\\n\\n\\\nFORMAT is one of:\\n\\\n\\n\\\n  ln   left justified, no leading zeros\\n\\\n  rn   right justified, no leading zeros\\n\\\n  rz   right justified, leading zeros\\n\\\n\\n\\\n\""
      ]
    },
    "build_type_arg": {
      "start_point": [
        234,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "print_lineno": {
      "start_point": [
        269,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": [
        "\"line number overflow\""
      ]
    },
    "proc_header": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        292,
        1
      ],
      "strings": []
    },
    "proc_body": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": []
    },
    "proc_footer": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        316,
        1
      ],
      "strings": []
    },
    "proc_text": {
      "start_point": [
        320,
        0
      ],
      "end_point": [
        367,
        1
      ],
      "strings": [
        "\"error in regular expression search\""
      ]
    },
    "check_section": {
      "start_point": [
        371,
        0
      ],
      "end_point": [
        388,
        1
      ],
      "strings": []
    },
    "process_file": {
      "start_point": [
        392,
        0
      ],
      "end_point": [
        413,
        1
      ],
      "strings": []
    },
    "nl_file": {
      "start_point": [
        418,
        0
      ],
      "end_point": [
        455,
        1
      ],
      "strings": [
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"%s\"",
        "\"-\"",
        "\"%s\""
      ]
    },
    "main": {
      "start_point": [
        457,
        0
      ],
      "end_point": [
        594,
        1
      ],
      "strings": [
        "\"\"",
        "\"h:b:f:v:i:pl:s:w:n:d:\"",
        "\"invalid header numbering style: %s\"",
        "\"invalid body numbering style: %s\"",
        "\"invalid footer numbering style: %s\"",
        "\"\"",
        "\"invalid starting line number\"",
        "\"\"",
        "\"invalid line number increment\"",
        "\"\"",
        "\"invalid line number of blank lines\"",
        "\"\"",
        "\"invalid line number field width\"",
        "\"ln\"",
        "\"rn\"",
        "\"rz\"",
        "\"invalid line numbering format: %s\"",
        "\"-\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/nohup.c": {
    "usage": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s COMMAND [ARG]...\\n\\\n  or:  %s OPTION\\n\\\n\"",
        "\"\\\nRun COMMAND, ignoring hangup signals.\\n\\\n\\n\\\n\"",
        "\"\\n\\\nIf standard input is a terminal, redirect it from an unreadable file.\\n\\\nIf standard output is a terminal, append output to 'nohup.out' if possible,\\n\\\n'$HOME/nohup.out' otherwise.\\n\\\nIf standard error is a terminal, redirect it to standard output.\\n\\\nTo save output to FILE, use '%s COMMAND > FILE'.\\n\""
      ]
    },
    "main": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": [
        "\"\"",
        "\"POSIXLY_CORRECT\"",
        "\"+\"",
        "\"missing operand\"",
        "\"/dev/null\"",
        "\"failed to render standard input unusable\"",
        "\"ignoring input\"",
        "\"nohup.out\"",
        "\"HOME\"",
        "\"failed to open %s\"",
        "\"failed to open %s\"",
        "\"ignoring input and appending output to %s\"",
        "\"appending output to %s\"",
        "\"ignoring input and redirecting stderr to stdout\"",
        "\"redirecting stderr to stdout\"",
        "\"failed to redirect standard error\"",
        "\"failed to run command %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/nproc.c": {
    "usage": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]...\\n\"",
        "\"\\\nPrint the number of processing units available to the current process,\\n\\\nwhich may be less than the number of online processors\\n\\\n\\n\\\n\"",
        "\"\\\n      --all      print the number of installed processors\\n\\\n      --ignore=N  if possible, exclude N processing units\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"\"",
        "\"invalid number\"",
        "\"extra operand %s\"",
        "\"%lu\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/numfmt.c": {
    "default_scale_base": {
      "start_point": [
        215,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": []
    },
    "valid_suffix": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"KMGTPEZY\""
      ]
    },
    "suffix_power": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        271,
        1
      ],
      "strings": []
    },
    "suffix_power_char": {
      "start_point": [
        273,
        0
      ],
      "end_point": [
        308,
        1
      ],
      "strings": [
        "\"\"",
        "\"K\"",
        "\"M\"",
        "\"G\"",
        "\"T\"",
        "\"P\"",
        "\"E\"",
        "\"Z\"",
        "\"Y\"",
        "\"(error)\""
      ]
    },
    "powerld": {
      "start_point": [
        311,
        0
      ],
      "end_point": [
        324,
        1
      ],
      "strings": []
    },
    "absld": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        331,
        1
      ],
      "strings": []
    },
    "expld": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        353,
        1
      ],
      "strings": []
    },
    "simple_round_ceiling": {
      "start_point": [
        357,
        0
      ],
      "end_point": [
        364,
        1
      ],
      "strings": []
    },
    "simple_round_floor": {
      "start_point": [
        368,
        0
      ],
      "end_point": [
        372,
        1
      ],
      "strings": []
    },
    "simple_round_from_zero": {
      "start_point": [
        376,
        0
      ],
      "end_point": [
        380,
        1
      ],
      "strings": []
    },
    "simple_round_to_zero": {
      "start_point": [
        384,
        0
      ],
      "end_point": [
        388,
        1
      ],
      "strings": []
    },
    "simple_round_nearest": {
      "start_point": [
        392,
        0
      ],
      "end_point": [
        396,
        1
      ],
      "strings": []
    },
    "simple_round": {
      "start_point": [
        398,
        0
      ],
      "end_point": [
        433,
        1
      ],
      "strings": []
    },
    "simple_strtod_int": {
      "start_point": [
        464,
        0
      ],
      "end_point": [
        513,
        1
      ],
      "strings": []
    },
    "simple_strtod_float": {
      "start_point": [
        529,
        0
      ],
      "end_point": [
        584,
        1
      ],
      "strings": []
    },
    "simple_strtod_human": {
      "start_point": [
        605,
        0
      ],
      "end_point": [
        677,
        1
      ],
      "strings": [
        "\"simple_strtod_human:\\n  input string: %s\\n\"",
        "\"  locale decimal-point: %s\\n\"",
        "\"  MAX_UNSCALED_DIGITS: %d\\n\"",
        "\"  parsed numeric value: %Lf\\n\"",
        "\"  input precision = %d\\n\"",
        "\"  Auto-scaling, found 'i', switching to base %d\\n\"",
        "\"  suffix power=%d^%d = %Lf\\n\"",
        "\"  returning value: %Lf (%LG)\\n\""
      ]
    },
    "simple_strtod_fatal": {
      "start_point": [
        680,
        0
      ],
      "end_point": [
        716,
        1
      ],
      "strings": [
        "\"value too large to be converted: %s\"",
        "\"invalid number: %s\"",
        "\"rejecting suffix in input: %s (consider using --from)\"",
        "\"invalid suffix in input: %s\"",
        "\"missing 'i' suffix in input: %s (e.g Ki/Mi/Gi)\""
      ]
    },
    "double_to_human": {
      "start_point": [
        719,
        0
      ],
      "end_point": [
        816,
        1
      ],
      "strings": [
        "\"0%ld\"",
        "\"double_to_human:\\n\"",
        "\"  no scaling, returning (grouped) value: %'.*Lf\\n\"",
        "\"  no scaling, returning value: %.*Lf\\n\"",
        "\".*Lf\"",
        "\"failed to prepare value '%Lf' for printing\"",
        "\"  scaled value to %Lf * %0.f ^ %u\\n\"",
        "\"  after rounding, value=%Lf * %0.f ^ %u\\n\"",
        "\".*Lf%s\"",
        "\"failed to prepare value '%Lf' for printing\"",
        "\"i\"",
        "\"  returning value: %s\\n\""
      ]
    },
    "unit_to_umax": {
      "start_point": [
        822,
        0
      ],
      "end_point": [
        863,
        1
      ],
      "strings": [
        "\"KMGTPEZY\"",
        "\"KMGTPEZY0\"",
        "\"invalid unit size: %s\""
      ]
    },
    "setup_padding_buffer": {
      "start_point": [
        866,
        0
      ],
      "end_point": [
        874,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        876,
        0
      ],
      "end_point": [
        1027,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [NUMBER]...\\n\\\n\"",
        "\"\\\nReformat NUMBER(s), or the numbers from standard input if none are specified.\\n\\\n\"",
        "\"\\\n      --debug          print warnings about invalid input\\n\\\n\"",
        "\"\\\n  -d, --delimiter=X    use X instead of whitespace for field delimiter\\n\\\n\"",
        "\"\\\n      --field=FIELDS   replace the numbers in these input fields (default=1)\\n\\\n                         see FIELDS below\\n\\\n\"",
        "\"\\\n      --format=FORMAT  use printf style floating-point FORMAT;\\n\\\n                         see FORMAT below for details\\n\\\n\"",
        "\"\\\n      --from=UNIT      auto-scale input numbers to UNITs; default is 'none';\\n\\\n                         see UNIT below\\n\\\n\"",
        "\"\\\n      --from-unit=N    specify the input unit size (instead of the default 1)\\n\\\n\"",
        "\"\\\n      --grouping       use locale-defined grouping of digits, e.g. 1,000,000\\n\\\n                         (which means it has no effect in the C/POSIX locale)\\n\\\n\"",
        "\"\\\n      --header[=N]     print (without converting) the first N header lines;\\n\\\n                         N defaults to 1 if not specified\\n\\\n\"",
        "\"\\\n      --invalid=MODE   failure mode for invalid numbers: MODE can be:\\n\\\n                         abort (default), fail, warn, ignore\\n\\\n\"",
        "\"\\\n      --padding=N      pad the output to N characters; positive N will\\n\\\n                         right-align; negative N will left-align;\\n\\\n                         padding is ignored if the output is wider than N;\\n\\\n                         the default is to automatically pad if a whitespace\\n\\\n                         is found\\n\\\n\"",
        "\"\\\n      --round=METHOD   use METHOD for rounding when scaling; METHOD can be:\\n\\\n                         up, down, from-zero (default), towards-zero, nearest\\n\\\n\"",
        "\"\\\n      --suffix=SUFFIX  add SUFFIX to output numbers, and accept optional\\n\\\n                         SUFFIX in input numbers\\n\\\n\"",
        "\"\\\n      --to=UNIT        auto-scale output numbers to UNITs; see UNIT below\\n\\\n\"",
        "\"\\\n      --to-unit=N      the output unit size (instead of the default 1)\\n\\\n\"",
        "\"\\\n  -z, --zero-terminated    line delimiter is NUL, not newline\\n\\\n\"",
        "\"\\\n\\n\\\nUNIT options:\\n\"",
        "\"\\\n  none       no auto-scaling is done; suffixes will trigger an error\\n\\\n\"",
        "\"\\\n  auto       accept optional single/two letter suffix:\\n\\\n               1K = 1000,\\n\\\n               1Ki = 1024,\\n\\\n               1M = 1000000,\\n\\\n               1Mi = 1048576,\\n\"",
        "\"\\\n  si         accept optional single letter suffix:\\n\\\n               1K = 1000,\\n\\\n               1M = 1000000,\\n\\\n               ...\\n\"",
        "\"\\\n  iec        accept optional single letter suffix:\\n\\\n               1K = 1024,\\n\\\n               1M = 1048576,\\n\\\n               ...\\n\"",
        "\"\\\n  iec-i      accept optional two-letter suffix:\\n\\\n               1Ki = 1024,\\n\\\n               1Mi = 1048576,\\n\\\n               ...\\n\"",
        "\"\\n\\\nFIELDS supports cut(1) style field ranges:\\n\\\n  N    N'th field, counted from 1\\n\\\n  N-   from N'th field, to end of line\\n\\\n  N-M  from N'th to M'th field (inclusive)\\n\\\n  -M   from first to M'th field (inclusive)\\n\\\n  -    all fields\\n\\\nMultiple fields/ranges can be separated with commas\\n\\\n\"",
        "\"\\n\\\nFORMAT must be suitable for printing one floating-point argument '%f'.\\n\\\nOptional quote (%'f) will enable --grouping (if supported by current locale).\\n\\\nOptional width value (%10f) will pad output. Optional zero (%010f) width\\n\\\nwill zero pad the number. Optional negative values (%-10f) will left align.\\n\\\nOptional precision (%.1f) will override the input determined precision.\\n\\\n\"",
        "\"\\n\\\nExit status is 0 if all input numbers were successfully converted.\\n\\\nBy default, %s will stop at the first conversion error with exit status 2.\\n\\\nWith --invalid='fail' a warning is printed for each conversion error\\n\\\nand the exit status is 2.  With --invalid='warn' each conversion error is\\n\\\ndiagnosed, but the exit status is 0.  With --invalid='ignore' conversion\\n\\\nerrors are not diagnosed and the exit status is 0.\\n\\\n\"",
        "\"\\n\\\nExamples:\\n\\\n  $ %s --to=si 1000\\n\\\n            -> \\\"1.0K\\\"\\n\\\n  $ %s --to=iec 2048\\n\\\n           -> \\\"2.0K\\\"\\n\\\n  $ %s --to=iec-i 4096\\n\\\n           -> \\\"4.0Ki\\\"\\n\\\n  $ echo 1K | %s --from=si\\n\\\n           -> \\\"1000\\\"\\n\\\n  $ echo 1K | %s --from=iec\\n\\\n           -> \\\"1024\\\"\\n\\\n  $ df -B1 | %s --header --field 2-4 --to=si\\n\\\n  $ ls -l  | %s --header --field 5 --to=iec\\n\\\n  $ ls -lh | %s --header --field 5 --from=iec --padding=10\\n\\\n  $ ls -lh | %s --header --field 5 --from=iec --format %%10f\\n\""
      ]
    },
    "parse_format_string": {
      "start_point": [
        1044,
        0
      ],
      "end_point": [
        1155,
        1
      ],
      "strings": [
        "\"format %s has no %% directive\"",
        "\" \"",
        "\"invalid format %s (width overflow)\"",
        "\"--format padding overriding --padding\"",
        "\"format %s ends in %%\"",
        "\"invalid precision in format %s\"",
        "\"invalid format %s,\"",
        "\" directive must be %%[0]['][-][N][.][N]f\"",
        "\"format %s has too many %% directives\"",
        "\"format String:\\n  input: %s\\n  grouping: %s\\n\"",
        "\"  padding width: %ld\\n  alignment: %s\\n\"",
        "\"  prefix: %s\\n  suffix: %s\\n\"",
        "\"yes\"",
        "\"no\"",
        "\"Left\"",
        "\"Right\"",
        "\"\"",
        "\"\""
      ]
    },
    "parse_human_number": {
      "start_point": [
        1165,
        0
      ],
      "end_point": [
        1187,
        1
      ],
      "strings": [
        "\"invalid suffix in input %s: %s\""
      ]
    },
    "prepare_padded_number": {
      "start_point": [
        1192,
        0
      ],
      "end_point": [
        1252,
        1
      ],
      "strings": [
        "\"value/precision too large to be printed: '%Lg/%\"",
        "\"'\"",
        "\" (consider using --to)\"",
        "\"value too large to be printed: '%Lg'\"",
        "\" (consider using --to)\"",
        "\"value too large to be printed: '%Lg'\"",
        "\" (cannot handle values > 999Y)\"",
        "\"formatting output:\\n  value: %Lf\\n  humanized: %s\\n\"",
        "\"  After padding: %s\\n\""
      ]
    },
    "print_padded_number": {
      "start_point": [
        1254,
        0
      ],
      "end_point": [
        1264,
        1
      ],
      "strings": []
    },
    "process_suffixed_number": {
      "start_point": [
        1268,
        0
      ],
      "end_point": [
        1319,
        1
      ],
      "strings": [
        "\"trimming suffix %s\\n\"",
        "\"no valid suffix found\\n\"",
        "\"setting Auto-Padding to %ld characters\\n\"",
        "\"large input value %s: possible precision loss\""
      ]
    },
    "next_field": {
      "start_point": [
        1323,
        0
      ],
      "end_point": [
        1350,
        1
      ],
      "strings": []
    },
    "include_field": {
      "start_point": [
        1352,
        0
      ],
      "end_point": [
        1366,
        1
      ],
      "strings": []
    },
    "process_field": {
      "start_point": [
        1370,
        0
      ],
      "end_point": [
        1394,
        1
      ],
      "strings": []
    },
    "process_line": {
      "start_point": [
        1398,
        0
      ],
      "end_point": [
        1435,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        1437,
        0
      ],
      "end_point": [
        1650,
        1
      ],
      "strings": [
        "\"\"",
        "\".\"",
        "\"d:z\"",
        "\"--from\"",
        "\"--to\"",
        "\"--round\"",
        "\"\"",
        "\"invalid padding value %s\"",
        "\"multiple field specifications\"",
        "\"the delimiter must be a single character\"",
        "\"\"",
        "\"invalid header value %s\"",
        "\"--invalid\"",
        "\"--grouping cannot be combined with --format\"",
        "\"failed to set locale\"",
        "\"no conversion option specified\"",
        "\"grouping cannot be combined with --to\"",
        "\"grouping has no effect in this locale\"",
        "\"--header ignored with command-line input\"",
        "\"error reading input\"",
        "\"failed to convert some of the input numbers\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/od.c": {
    "usage": {
      "start_point": [
        314,
        0
      ],
      "end_point": [
        423,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n  or:  %s [-abcdfilosx]... [FILE] [[+]OFFSET[.][b]]\\n\\\n  or:  %s --traditional [OPTION]... [FILE] [[+]OFFSET[.][b] [+][LABEL][.][b]]\\n\\\n\"",
        "\"\\n\\\nWrite an unambiguous representation, octal bytes by default,\\n\\\nof FILE to standard output.  With more than one FILE argument,\\n\\\nconcatenate them in the listed order to form the input.\\n\\\n\"",
        "\"\\\n\\n\\\nIf first and second call formats both apply, the second format is assumed\\n\\\nif the last operand begins with + or (if there are 2 operands) a digit.\\n\\\nAn OFFSET operand means -j OFFSET.  LABEL is the pseudo-address\\n\\\nat first byte printed, incremented when dump is progressing.\\n\\\nFor OFFSET and LABEL, a 0x or 0X prefix indicates hexadecimal;\\n\\\nsuffixes may be . for octal and b for multiply by 512.\\n\\\n\"",
        "\"\\\n  -A, --address-radix=RADIX   output format for file offsets; RADIX is one\\n\\\n                                of [doxn], for Decimal, Octal, Hex or None\\n\\\n      --endian={big|little}   swap input bytes according the specified order\\n\\\n  -j, --skip-bytes=BYTES      skip BYTES input bytes first\\n\\\n\"",
        "\"\\\n  -N, --read-bytes=BYTES      limit dump to BYTES input bytes\\n\\\n  -S BYTES, --strings[=BYTES]  output strings of at least BYTES graphic chars;\\\n\\n\\\n                                3 is implied when BYTES is not specified\\n\\\n  -t, --format=TYPE           select output format or formats\\n\\\n  -v, --output-duplicates     do not use * to mark line suppression\\n\\\n  -w[BYTES], --width[=BYTES]  output BYTES bytes per output line;\\n\\\n                                32 is implied when BYTES is not specified\\n\\\n      --traditional           accept arguments in third form above\\n\\\n\"",
        "\"\\\n\\n\\\n\\n\\\nTraditional format specifications may be intermixed; they accumulate:\\n\\\n  -a   same as -t a,  select named characters, ignoring high-order bit\\n\\\n  -b   same as -t o1, select octal bytes\\n\\\n  -c   same as -t c,  select printable characters or backslash escapes\\n\\\n  -d   same as -t u2, select unsigned decimal 2-byte units\\n\\\n\"",
        "\"\\\n  -f   same as -t fF, select floats\\n\\\n  -i   same as -t dI, select decimal ints\\n\\\n  -l   same as -t dL, select decimal longs\\n\\\n  -o   same as -t o2, select octal 2-byte units\\n\\\n  -s   same as -t d2, select decimal 2-byte units\\n\\\n  -x   same as -t x2, select hexadecimal 2-byte units\\n\\\n\"",
        "\"\\\n\\n\\\n\\n\\\nTYPE is made up of one or more of these specifications:\\n\\\n  a          named character, ignoring high-order bit\\n\\\n  c          printable character or backslash escape\\n\\\n\"",
        "\"\\\n  d[SIZE]    signed decimal, SIZE bytes per integer\\n\\\n  f[SIZE]    floating point, SIZE bytes per float\\n\\\n  o[SIZE]    octal, SIZE bytes per integer\\n\\\n  u[SIZE]    unsigned decimal, SIZE bytes per integer\\n\\\n  x[SIZE]    hexadecimal, SIZE bytes per integer\\n\\\n\"",
        "\"\\\n\\n\\\nSIZE is a number.  For TYPE in [doux], SIZE may also be C for\\n\\\nsizeof(char), S for sizeof(short), I for sizeof(int) or L for\\n\\\nsizeof(long).  If TYPE is f, SIZE may also be F for sizeof(float), D\\n\\\nfor sizeof(double) or L for sizeof(long double).\\n\\\n\"",
        "\"\\\n\\n\\\nAdding a z suffix to any type displays printable characters at the end of\\n\\\neach output line.\\n\\\n\"",
        "\"\\\n\\n\\\n\\n\\\nBYTES is hex with 0x or 0X prefix, and may have a multiplier suffix:\\n\\\n  b    512\\n\\\n  KB   1000\\n\\\n  K    1024\\n\\\n  MB   1000*1000\\n\\\n  M    1024*1024\\n\\\nand so on for G, T, P, E, Z, Y.\\n\\\n\""
      ]
    },
    "dump_hexl_mode_trailer": {
      "start_point": [
        483,
        0
      ],
      "end_point": [
        494,
        1
      ],
      "strings": [
        "\"  >\""
      ]
    },
    "print_named_ascii": {
      "start_point": [
        496,
        0
      ],
      "end_point": [
        525,
        1
      ],
      "strings": [
        "\"del\"",
        "\"%*s\""
      ]
    },
    "print_ascii": {
      "start_point": [
        527,
        0
      ],
      "end_point": [
        584,
        1
      ],
      "strings": [
        "\"\\\\0\"",
        "\"\\\\a\"",
        "\"\\\\b\"",
        "\"\\\\f\"",
        "\"\\\\n\"",
        "\"\\\\r\"",
        "\"\\\\t\"",
        "\"\\\\v\"",
        "\"%c\"",
        "\"%03o\"",
        "\"%*s\""
      ]
    },
    "simple_strtoul": {
      "start_point": [
        594,
        0
      ],
      "end_point": [
        610,
        1
      ],
      "strings": []
    },
    "decode_one_format": {
      "start_point": [
        631,
        0
      ],
      "end_point": [
        889,
        1
      ],
      "strings": [
        "\"invalid type string %s\"",
        "\"invalid type string %s;\\nthis system\"",
        "\" doesn't provide a %lu-byte integral type\"",
        "\"%%*%s\"",
        "\"d\"",
        "\"ld\"",
        "\"%%*.%d%s\"",
        "\"o\"",
        "\"lo\"",
        "\"%%*%s\"",
        "\"u\"",
        "\"lu\"",
        "\"%%*.%d%s\"",
        "\"x\"",
        "\"lx\"",
        "\"invalid type string %s\"",
        "\"invalid type string %s;\\n\"",
        "\"this system doesn't provide a %lu-byte\"",
        "\" floating point type\"",
        "\"invalid character '%c' in type string %s\""
      ]
    },
    "open_next_file": {
      "start_point": [
        898,
        0
      ],
      "end_point": [
        933,
        1
      ],
      "strings": [
        "\"-\"",
        "\"standard input\"",
        "\"rb\"",
        "\"r\"",
        "\"%s\""
      ]
    },
    "check_and_close": {
      "start_point": [
        942,
        0
      ],
      "end_point": [
        972,
        1
      ],
      "strings": [
        "\"%s: read error\"",
        "\"-\"",
        "\"-\"",
        "\"%s\"",
        "\"write error\""
      ]
    },
    "decode_format_string": {
      "start_point": [
        978,
        0
      ],
      "end_point": [
        1000,
        1
      ],
      "strings": []
    },
    "skip": {
      "start_point": [
        1009,
        0
      ],
      "end_point": [
        1106,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"cannot skip past end of combined input\""
      ]
    },
    "format_address_none": {
      "start_point": [
        1108,
        0
      ],
      "end_point": [
        1112,
        1
      ],
      "strings": []
    },
    "format_address_std": {
      "start_point": [
        1114,
        0
      ],
      "end_point": [
        1152,
        1
      ],
      "strings": [
        "\"0123456789abcdef\""
      ]
    },
    "format_address_paren": {
      "start_point": [
        1154,
        0
      ],
      "end_point": [
        1161,
        1
      ],
      "strings": []
    },
    "format_address_label": {
      "start_point": [
        1163,
        0
      ],
      "end_point": [
        1168,
        1
      ],
      "strings": []
    },
    "write_block": {
      "start_point": [
        1180,
        0
      ],
      "end_point": [
        1232,
        1
      ],
      "strings": [
        "\"*\\n\"",
        "\"%*s\"",
        "\"\"",
        "\"%*s\"",
        "\"\""
      ]
    },
    "read_char": {
      "start_point": [
        1245,
        0
      ],
      "end_point": [
        1265,
        1
      ],
      "strings": []
    },
    "read_block": {
      "start_point": [
        1281,
        0
      ],
      "end_point": [
        1309,
        1
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_PURE": {
      "start_point": [
        1314,
        0
      ],
      "end_point": [
        1322,
        1
      ],
      "strings": []
    },
    "parse_old_offset": {
      "start_point": [
        1327,
        0
      ],
      "end_point": [
        1353,
        1
      ],
      "strings": [
        "\"Bb\""
      ]
    },
    "dump": {
      "start_point": [
        1367,
        0
      ],
      "end_point": [
        1442,
        1
      ],
      "strings": []
    },
    "dump_strings": {
      "start_point": [
        1450,
        0
      ],
      "end_point": [
        1558,
        1
      ],
      "strings": [
        "\"\\\\a\"",
        "\"\\\\b\"",
        "\"\\\\f\"",
        "\"\\\\n\"",
        "\"\\\\r\"",
        "\"\\\\t\"",
        "\"\\\\v\""
      ]
    },
    "main": {
      "start_point": [
        1560,
        0
      ],
      "end_point": [
        1980,
        1
      ],
      "strings": [
        "\"bEGKkMmPTYZ0\"",
        "\"\"",
        "\"invalid output address radix '%c';\\\n it must be one character from [doxn]\"",
        "\"%s is too large\"",
        "\"--endian\"",
        "\"a\"",
        "\"o1\"",
        "\"c\"",
        "\"u4\"",
        "\"u2\"",
        "\"fD\"",
        "\"fF\"",
        "\"x4\"",
        "\"dI\"",
        "\"dL\"",
        "\"o4\"",
        "\"o2\"",
        "\"d2\"",
        "\"x2\"",
        "\"\"",
        "\"%s is too large\"",
        "\"no type may be specified when dumping strings\"",
        "\"extra operand %s\"",
        "\"%s\"",
        "\"compatibility mode supports at most one file\"",
        "\"skip-bytes + read-bytes is too large\"",
        "\"oS\"",
        "\"warning: invalid width %lu; using %d instead\"",
        "\"lcm=%d, width_per_block=%\"",
        "\"\\n\"",
        "\"%d: fmt=\\\"%s\\\" in_width=%d out_width=%d pad=%d\\n\"",
        "\"standard input\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/operand2sig.c": {
    "operand2sig": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"abcdefghijklmnopqrstuvwxyz\"",
        "\"%s: invalid signal\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/operand2sig.h": {},
  "coreutils/coreutils-8.29/src/paste.c": {
    "collapse_escapes": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": []
    },
    "write_error": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"write error\""
      ]
    },
    "xputchar": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "paste_parallel": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        340,
        1
      ],
      "strings": [
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"standard input is closed\"",
        "\"%s\"",
        "\"%s\""
      ]
    },
    "paste_serial": {
      "start_point": [
        346,
        0
      ],
      "end_point": [
        426,
        1
      ],
      "strings": [
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\""
      ]
    },
    "usage": {
      "start_point": [
        428,
        0
      ],
      "end_point": [
        460,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n\"",
        "\"\\\nWrite lines consisting of the sequentially corresponding lines from\\n\\\neach FILE, separated by TABs, to standard output.\\n\\\n\"",
        "\"\\\n  -d, --delimiters=LIST   reuse characters from LIST instead of TABs\\n\\\n  -s, --serial            paste one file at a time instead of in parallel\\n\\\n\"",
        "\"\\\n  -z, --zero-terminated    line delimiter is NUL, not newline\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        462,
        0
      ],
      "end_point": [
        529,
        1
      ],
      "strings": [
        "\"\\t\"",
        "\"\"",
        "\"d:sz\"",
        "\"\\\\0\"",
        "\"-\"",
        "\"delimiter list ends with an unescaped backslash: %s\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/pathchk.c": {
    "usage": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... NAME...\\n\"",
        "\"\\\nDiagnose invalid or unportable file names.\\n\\\n\\n\\\n  -p                  check for most POSIX systems\\n\\\n  -P                  check for empty names and leading \\\"-\\\"\\n\\\n      --portability   check for all POSIX systems (equivalent to -p -P)\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        155,
        1
      ],
      "strings": [
        "\"\"",
        "\"+pP\"",
        "\"missing operand\""
      ]
    },
    "no_leading_hyphen": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": [
        "\"leading '-' in a component of file name %s\""
      ]
    },
    "portable_chars_only": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": [
        "\"/\"",
        "\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
        "\"abcdefghijklmnopqrstuvwxyz\"",
        "\"0123456789._-\"",
        "\"nonportable character %s in file name %s\""
      ]
    },
    "component_start": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        212,
        1
      ],
      "strings": []
    },
    "component_len": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": []
    },
    "validate_file_name": {
      "start_point": [
        245,
        0
      ],
      "end_point": [
        421,
        1
      ],
      "strings": [
        "\"empty file name\"",
        "\"%s\"",
        "\"/\"",
        "\".\"",
        "\"%s: unable to determine maximum file name length\"",
        "\"limit %lu exceeded by length %lu of file name %s\"",
        "\".\"",
        "\"%s\"",
        "\"limit %lu exceeded by length %lu \"",
        "\"of file name component %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/pinky.c": {
    "count_ampersands": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "create_fullname": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    },
    "idle_string": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": [
        "\"     \"",
        "\"%02d:%02d\"",
        "\"%lud\""
      ]
    },
    "time_string": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"-%m-%d %H:%M\""
      ]
    },
    "print_entry": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": [
        "\"%-8.*s\"",
        "\" %19s\"",
        "\"        ???\"",
        "\" %-19.19s\"",
        "\" %c%-8.*s\"",
        "\" %-6s\"",
        "\" %-6s\"",
        "\"?????\"",
        "\" %s\"",
        "\" %s:%s\"",
        "\" %s\""
      ]
    },
    "print_long_entry": {
      "start_point": [
        305,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": [
        "\"Login name: \"",
        "\"%-28s\"",
        "\"In real life: \"",
        "\" %s\"",
        "\"???\\n\"",
        "\" %s\"",
        "\"Directory: \"",
        "\"%-29s\"",
        "\"Shell: \"",
        "\" %s\"",
        "\"/.project\"",
        "\"r\"",
        "\"Project: \"",
        "\"/.plan\"",
        "\"r\"",
        "\"Plan:\\n\""
      ]
    },
    "print_heading": {
      "start_point": [
        400,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": [
        "\"%-8s\"",
        "\"Login\"",
        "\" %-19s\"",
        "\"Name\"",
        "\" %-9s\"",
        "\" TTY\"",
        "\" %-6s\"",
        "\"Idle\"",
        "\" %-*s\"",
        "\"When\"",
        "\" %s\"",
        "\"Where\""
      ]
    },
    "scan_entries": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        455,
        1
      ],
      "strings": [
        "\"%Y-%m-%d %H:%M\"",
        "\"%b %e %H:%M\""
      ]
    },
    "short_pinky": {
      "start_point": [
        459,
        0
      ],
      "end_point": [
        472,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "long_pinky": {
      "start_point": [
        474,
        0
      ],
      "end_point": [
        479,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        481,
        0
      ],
      "end_point": [
        514,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [USER]...\\n\"",
        "\"\\\n\\n\\\n  -l              produce long format output for the specified USERs\\n\\\n  -b              omit the user's home directory and shell in long format\\n\\\n  -h              omit the user's project file in long format\\n\\\n  -p              omit the user's plan file in long format\\n\\\n  -s              do short format output, this is the default\\n\\\n\"",
        "\"\\\n  -f              omit the line of column headings in short format\\n\\\n  -w              omit the user's full name in short format\\n\\\n  -i              omit the user's full name and remote host in short format\\n\\\n  -q              omit the user's full name, remote host and idle time\\n\\\n                  in short format\\n\\\n\"",
        "\"\\\n\\n\\\nA lightweight 'finger' program;  print user information.\\n\\\nThe utmp file will be %s.\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        516,
        0
      ],
      "end_point": [
        601,
        1
      ],
      "strings": [
        "\"\"",
        "\"sfwiqbhlp\"",
        "\"no username specified; at least one must be\\\n specified when using -l\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/pr.c": {
    "integer_overflow": {
      "start_point": [
        773,
        0
      ],
      "end_point": [
        777,
        1
      ],
      "strings": [
        "\"integer overflow\""
      ]
    },
    "_GL_ATTRIBUTE_PURE": {
      "start_point": [
        783,
        0
      ],
      "end_point": [
        796,
        1
      ],
      "strings": []
    },
    "first_last_page": {
      "start_point": [
        801,
        0
      ],
      "end_point": [
        830,
        1
      ],
      "strings": [
        "\"\"",
        "\"\""
      ]
    },
    "parse_column_count": {
      "start_point": [
        836,
        0
      ],
      "end_point": [
        841,
        1
      ],
      "strings": [
        "\"invalid number of columns\""
      ]
    },
    "separator_string": {
      "start_point": [
        845,
        0
      ],
      "end_point": [
        853,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        855,
        0
      ],
      "end_point": [
        1149,
        1
      ],
      "strings": [
        "\"\"",
        "\"'--pages=FIRST_PAGE[:LAST_PAGE]' missing argument\"",
        "\"invalid page range %s\"",
        "\"'-l PAGE_LENGTH' invalid number of lines\"",
        "\"'-N NUMBER' invalid starting line number\"",
        "\"'-o MARGIN' invalid line offset\"",
        "\"\"",
        "\"'-w PAGE_WIDTH' invalid number of characters\"",
        "\"'-W PAGE_WIDTH' invalid number of characters\"",
        "\"POSIXLY_CORRECT\"",
        "\"%b %e %H:%M %Y\"",
        "\"%Y-%m-%d %H:%M\"",
        "\"TZ\"",
        "\"cannot specify number of columns when printing in parallel\"",
        "\"cannot specify both printing across and printing in parallel\"",
        "\"standard input\""
      ]
    },
    "getoptnum": {
      "start_point": [
        1153,
        0
      ],
      "end_point": [
        1158,
        1
      ],
      "strings": [
        "\"\""
      ]
    },
    "getoptarg": {
      "start_point": [
        1166,
        0
      ],
      "end_point": [
        1184,
        1
      ],
      "strings": [
        "\"\"",
        "\"'-%c' extra characters or invalid number in the argument: %s\""
      ]
    },
    "init_parameters": {
      "start_point": [
        1188,
        0
      ],
      "end_point": [
        1296,
        1
      ],
      "strings": [
        "\"page width too narrow\""
      ]
    },
    "init_fps": {
      "start_point": [
        1309,
        0
      ],
      "end_point": [
        1370,
        1
      ],
      "strings": [
        "\"\"",
        "\"standard input\"",
        "\"\""
      ]
    },
    "init_funcs": {
      "start_point": [
        1378,
        0
      ],
      "end_point": [
        1457,
        1
      ],
      "strings": []
    },
    "open_file": {
      "start_point": [
        1464,
        0
      ],
      "end_point": [
        1490,
        1
      ],
      "strings": [
        "\"-\"",
        "\"standard input\"",
        "\"r\"",
        "\"%s\""
      ]
    },
    "close_file": {
      "start_point": [
        1497,
        0
      ],
      "end_point": [
        1528,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s\""
      ]
    },
    "hold_file": {
      "start_point": [
        1536,
        0
      ],
      "end_point": [
        1555,
        1
      ],
      "strings": []
    },
    "reset_status": {
      "start_point": [
        1560,
        0
      ],
      "end_point": [
        1581,
        1
      ],
      "strings": []
    },
    "print_files": {
      "start_point": [
        1592,
        0
      ],
      "end_point": [
        1616,
        1
      ],
      "strings": []
    },
    "init_header": {
      "start_point": [
        1622,
        0
      ],
      "end_point": [
        1665,
        1
      ],
      "strings": [
        "\"-\"",
        "\"%s.%09d\"",
        "\"\""
      ]
    },
    "init_page": {
      "start_point": [
        1677,
        0
      ],
      "end_point": [
        1716,
        1
      ],
      "strings": []
    },
    "align_column": {
      "start_point": [
        1722,
        0
      ],
      "end_point": [
        1737,
        1
      ],
      "strings": []
    },
    "print_page": {
      "start_point": [
        1750,
        0
      ],
      "end_point": [
        1870,
        1
      ],
      "strings": []
    },
    "init_store_cols": {
      "start_point": [
        1886,
        0
      ],
      "end_point": [
        1908,
        1
      ],
      "strings": []
    },
    "store_columns": {
      "start_point": [
        1922,
        0
      ],
      "end_point": [
        1971,
        1
      ],
      "strings": []
    },
    "balance": {
      "start_point": [
        1973,
        0
      ],
      "end_point": [
        1991,
        1
      ],
      "strings": []
    },
    "store_char": {
      "start_point": [
        1995,
        0
      ],
      "end_point": [
        2004,
        1
      ],
      "strings": []
    },
    "add_line_number": {
      "start_point": [
        2006,
        0
      ],
      "end_point": [
        2048,
        1
      ],
      "strings": [
        "\"%*d\""
      ]
    },
    "pad_across_to": {
      "start_point": [
        2053,
        0
      ],
      "end_point": [
        2066,
        1
      ],
      "strings": []
    },
    "pad_down": {
      "start_point": [
        2073,
        0
      ],
      "end_point": [
        2081,
        1
      ],
      "strings": []
    },
    "read_rest_of_line": {
      "start_point": [
        2089,
        0
      ],
      "end_point": [
        2112,
        1
      ],
      "strings": []
    },
    "skip_read": {
      "start_point": [
        2123,
        0
      ],
      "end_point": [
        2182,
        1
      ],
      "strings": []
    },
    "print_white_space": {
      "start_point": [
        2190,
        0
      ],
      "end_point": [
        2208,
        1
      ],
      "strings": []
    },
    "print_sep_string": {
      "start_point": [
        2215,
        0
      ],
      "end_point": [
        2255,
        1
      ],
      "strings": []
    },
    "print_clump": {
      "start_point": [
        2260,
        0
      ],
      "end_point": [
        2265,
        1
      ],
      "strings": []
    },
    "print_char": {
      "start_point": [
        2276,
        0
      ],
      "end_point": [
        2299,
        1
      ],
      "strings": []
    },
    "skip_to_page": {
      "start_point": [
        2304,
        0
      ],
      "end_point": [
        2343,
        1
      ],
      "strings": [
        "\"starting page number %\"",
        "\" exceeds page count %\""
      ]
    },
    "print_header": {
      "start_point": [
        2350,
        0
      ],
      "end_point": [
        2381,
        1
      ],
      "strings": [
        "\"page number overflow\"",
        "\"Page %\"",
        "\"\\n\\n%*s%s%*s%s%*s%s\\n\\n\\n\"",
        "\"\"",
        "\" \"",
        "\" \""
      ]
    },
    "read_line": {
      "start_point": [
        2404,
        0
      ],
      "end_point": [
        2527,
        1
      ],
      "strings": []
    },
    "print_stored": {
      "start_point": [
        2543,
        0
      ],
      "end_point": [
        2601,
        1
      ],
      "strings": []
    },
    "char_to_clump": {
      "start_point": [
        2615,
        0
      ],
      "end_point": [
        2708,
        1
      ],
      "strings": [
        "\"%03o\"",
        "\"%03o\""
      ]
    },
    "cleanup": {
      "start_point": [
        2715,
        0
      ],
      "end_point": [
        2724,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        2728,
        0
      ],
      "end_point": [
        2846,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n\"",
        "\"\\\nPaginate or columnate FILE(s) for printing.\\n\\\n\"",
        "\"\\\n  +FIRST_PAGE[:LAST_PAGE], --pages=FIRST_PAGE[:LAST_PAGE]\\n\\\n                    begin [stop] printing with page FIRST_[LAST_]PAGE\\n\\\n  -COLUMN, --columns=COLUMN\\n\\\n                    output COLUMN columns and print columns down,\\n\\\n                    unless -a is used. Balance number of lines in the\\n\\\n                    columns on each page\\n\\\n\"",
        "\"\\\n  -a, --across      print columns across rather than down, used together\\n\\\n                    with -COLUMN\\n\\\n  -c, --show-control-chars\\n\\\n                    use hat notation (^G) and octal backslash notation\\n\\\n  -d, --double-space\\n\\\n                    double space the output\\n\\\n\"",
        "\"\\\n  -D, --date-format=FORMAT\\n\\\n                    use FORMAT for the header date\\n\\\n  -e[CHAR[WIDTH]], --expand-tabs[=CHAR[WIDTH]]\\n\\\n                    expand input CHARs (TABs) to tab WIDTH (8)\\n\\\n  -F, -f, --form-feed\\n\\\n                    use form feeds instead of newlines to separate pages\\n\\\n                    (by a 3-line page header with -F or a 5-line header\\n\\\n                    and trailer without -F)\\n\\\n\"",
        "\"\\\n  -h, --header=HEADER\\n\\\n                    use a centered HEADER instead of filename in page header,\\n\\\n                    -h \\\"\\\" prints a blank line, don't use -h\\\"\\\"\\n\\\n  -i[CHAR[WIDTH]], --output-tabs[=CHAR[WIDTH]]\\n\\\n                    replace spaces with CHARs (TABs) to tab WIDTH (8)\\n\\\n  -J, --join-lines  merge full lines, turns off -W line truncation, no column\\n\\\n                    alignment, --sep-string[=STRING] sets separators\\n\\\n\"",
        "\"\\\n  -l, --length=PAGE_LENGTH\\n\\\n                    set the page length to PAGE_LENGTH (66) lines\\n\\\n                    (default number of lines of text 56, and with -F 63).\\n\\\n                    implies -t if PAGE_LENGTH <= 10\\n\\\n\"",
        "\"\\\n  -m, --merge       print all files in parallel, one in each column,\\n\\\n                    truncate lines, but join lines of full length with -J\\n\\\n\"",
        "\"\\\n  -n[SEP[DIGITS]], --number-lines[=SEP[DIGITS]]\\n\\\n                    number lines, use DIGITS (5) digits, then SEP (TAB),\\n\\\n                    default counting starts with 1st line of input file\\n\\\n  -N, --first-line-number=NUMBER\\n\\\n                    start counting with NUMBER at 1st line of first\\n\\\n                    page printed (see +FIRST_PAGE)\\n\\\n\"",
        "\"\\\n  -o, --indent=MARGIN\\n\\\n                    offset each line with MARGIN (zero) spaces, do not\\n\\\n                    affect -w or -W, MARGIN will be added to PAGE_WIDTH\\n\\\n  -r, --no-file-warnings\\n\\\n                    omit warning when a file cannot be opened\\n\\\n\"",
        "\"\\\n  -s[CHAR], --separator[=CHAR]\\n\\\n                    separate columns by a single character, default for CHAR\\n\\\n                    is the <TAB> character without -w and \\'no char\\' with -w.\\\n\\n\\\n                    -s[CHAR] turns off line truncation of all 3 column\\n\\\n                    options (-COLUMN|-a -COLUMN|-m) except -w is set\\n\\\n\"",
        "\"\\\n  -S[STRING], --sep-string[=STRING]\\n\\\n                    separate columns by STRING,\\n\\\n                    without -S: Default separator <TAB> with -J and <space>\\n\\\n                    otherwise (same as -S\\\" \\\"), no effect on column options\\n\\\n\"",
        "\"\\\n  -t, --omit-header  omit page headers and trailers;\\n\\\n                     implied if PAGE_LENGTH <= 10\\n\\\n\"",
        "\"\\\n  -T, --omit-pagination\\n\\\n                    omit page headers and trailers, eliminate any pagination\\n\\\n                    by form feeds set in input files\\n\\\n  -v, --show-nonprinting\\n\\\n                    use octal backslash notation\\n\\\n  -w, --width=PAGE_WIDTH\\n\\\n                    set page width to PAGE_WIDTH (72) characters for\\n\\\n                    multiple text-column output only, -s[char] turns off (72)\\n\\\n\"",
        "\"\\\n  -W, --page-width=PAGE_WIDTH\\n\\\n                    set page width to PAGE_WIDTH (72) characters always,\\n\\\n                    truncate lines, except -J option is set, no interference\\n\\\n                    with -S or -s\\n\\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/primes.h": {},
  "coreutils/coreutils-8.29/src/printenv.c": {
    "usage": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [VARIABLE]...\\n\\\nPrint the values of the specified environment VARIABLE(s).\\n\\\nIf no VARIABLE is specified, print name and value pairs for them all.\\n\\\n\\n\\\n\"",
        "\"\\\n  -0, --null     end each output line with NUL, not newline\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": [
        "\"\"",
        "\"+iu:0\"",
        "\"%s%c\"",
        "\"%s%c\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/printf.c": {
    "usage": {
      "start_point": [
        85,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s FORMAT [ARGUMENT]...\\n\\\n  or:  %s OPTION\\n\\\n\"",
        "\"\\\nPrint ARGUMENT(s) according to FORMAT, or execute according to OPTION:\\n\\\n\\n\\\n\"",
        "\"\\\n\\n\\\nFORMAT controls the output as in C printf.  Interpreted sequences are:\\n\\\n\\n\\\n  \\\\\\\"      double quote\\n\\\n\"",
        "\"\\\n  \\\\\\\\      backslash\\n\\\n  \\\\a      alert (BEL)\\n\\\n  \\\\b      backspace\\n\\\n  \\\\c      produce no further output\\n\\\n  \\\\e      escape\\n\\\n  \\\\f      form feed\\n\\\n  \\\\n      new line\\n\\\n  \\\\r      carriage return\\n\\\n  \\\\t      horizontal tab\\n\\\n  \\\\v      vertical tab\\n\\\n\"",
        "\"\\\n  \\\\NNN    byte with octal value NNN (1 to 3 digits)\\n\\\n  \\\\xHH    byte with hexadecimal value HH (1 to 2 digits)\\n\\\n  \\\\uHHHH  Unicode (ISO/IEC 10646) character with hex value HHHH (4 digits)\\n\\\n  \\\\UHHHHHHHH  Unicode character with hex value HHHHHHHH (8 digits)\\n\\\n\"",
        "\"\\\n  %%      a single %\\n\\\n  %b      ARGUMENT as a string with '\\\\' escapes interpreted,\\n\\\n          except that octal escapes are of the form \\\\0 or \\\\0NNN\\n\\\n  %q      ARGUMENT is printed in a format that can be reused as shell input,\\n\\\n          escaping non-printable characters with the proposed POSIX $'' syntax.\\\n\\n\\n\\\nand all C format specifications ending with one of diouxXfeEgGcs, with\\n\\\nARGUMENTs converted to proper type first.  Variable widths are handled.\\n\\\n\""
      ]
    },
    "verify_numeric": {
      "start_point": [
        143,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s: expected a numeric value\"",
        "\"%s: value not completely converted\""
      ]
    },
    "print_esc_char": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": []
    },
    "print_esc": {
      "start_point": [
        238,
        0
      ],
      "end_point": [
        307,
        1
      ],
      "strings": [
        "\"missing hexadecimal number in escape\"",
        "\"\\\"\\\\abcefnrtv\"",
        "\"missing hexadecimal number in escape\"",
        "\"invalid universal character name \\\\%c%0*x\""
      ]
    },
    "print_esc_string": {
      "start_point": [
        311,
        0
      ],
      "end_point": [
        319,
        1
      ],
      "strings": []
    },
    "print_direc": {
      "start_point": [
        329,
        0
      ],
      "end_point": [
        470,
        1
      ],
      "strings": [
        "\"L\""
      ]
    },
    "print_formatted": {
      "start_point": [
        476,
        0
      ],
      "end_point": [
        647,
        1
      ],
      "strings": [
        "\"invalid field width: %s\"",
        "\"invalid precision: %s\"",
        "\"%.*s: invalid conversion specification\"",
        "\"\""
      ]
    },
    "main": {
      "start_point": [
        649,
        0
      ],
      "end_point": [
        714,
        1
      ],
      "strings": [
        "\"\"",
        "\"POSIXLY_CORRECT\"",
        "\"--help\"",
        "\"--version\"",
        "\"--\"",
        "\"missing operand\"",
        "\"warning: ignoring excess arguments, starting with %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/prog-fprintf.c": {
    "prog_fprintf": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": [
        "\": \""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/prog-fprintf.h": {},
  "coreutils/coreutils-8.29/src/ptx.c": {
    "ATTRIBUTE_NORETURN": {
      "start_point": [
        286,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": [
        "\"error in regular expression matcher\""
      ]
    },
    "copy_unescaped_string": {
      "start_point": [
        297,
        0
      ],
      "end_point": [
        403,
        1
      ],
      "strings": []
    },
    "compile_regex": {
      "start_point": [
        409,
        0
      ],
      "end_point": [
        430,
        1
      ],
      "strings": [
        "\"%s (for regexp %s)\""
      ]
    },
    "initialize_regex": {
      "start_point": [
        437,
        0
      ],
      "end_point": [
        499,
        1
      ],
      "strings": [
        "\"[.?!][]\\\"')}]*\\\\($\\\\|\\t\\\\|  \\\\)[ \\t\\n]*\"",
        "\"\\n\""
      ]
    },
    "swallow_file_in_memory": {
      "start_point": [
        512,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": [
        "\"-\"",
        "\"%s\"",
        "\"-\""
      ]
    },
    "compare_words": {
      "start_point": [
        542,
        0
      ],
      "end_point": [
        577,
        1
      ],
      "strings": []
    },
    "compare_occurs": {
      "start_point": [
        585,
        0
      ],
      "end_point": [
        598,
        1
      ],
      "strings": []
    },
    "search_table": {
      "start_point": [
        602,
        0
      ],
      "end_point": [
        624,
        1
      ],
      "strings": []
    },
    "sort_found_occurs": {
      "start_point": [
        632,
        0
      ],
      "end_point": [
        640,
        1
      ],
      "strings": []
    },
    "digest_break_file": {
      "start_point": [
        650,
        0
      ],
      "end_point": [
        681,
        1
      ],
      "strings": []
    },
    "digest_word_file": {
      "start_point": [
        690,
        0
      ],
      "end_point": [
        736,
        1
      ],
      "strings": []
    },
    "find_occurs_in_text": {
      "start_point": [
        744,
        0
      ],
      "end_point": [
        1012,
        1
      ],
      "strings": [
        "\"error: regular expression has a match of length zero: %s\""
      ]
    },
    "print_spaces": {
      "start_point": [
        1020,
        0
      ],
      "end_point": [
        1025,
        1
      ],
      "strings": []
    },
    "print_field": {
      "start_point": [
        1031,
        0
      ],
      "end_point": [
        1184,
        1
      ],
      "strings": [
        "\"\\\\oe{}\"",
        "\"\\\\OE{}\"",
        "\"\\\\ae{}\"",
        "\"\\\\AE{}\"",
        "\"\\\\'%s%c\"",
        "\"\\\\\"",
        "\"\"",
        "\"\\\\'%s%c\"",
        "\"\\\\\"",
        "\"\"",
        "\"\\\\^%s%c\"",
        "\"\\\\\"",
        "\"\"",
        "\"\\\\\\\"%s%c\"",
        "\"\\\\\"",
        "\"\"",
        "\"\\\\~%s%c\"",
        "\"\\\\\"",
        "\"\"",
        "\"\\\\c{%c}\"",
        "\"\\\\aa{}\"",
        "\"\\\\AA{}\"",
        "\"\\\\o{}\"",
        "\"\\\\O{}\"",
        "\"$\\\\%c$\"",
        "\"\\\\backslash{}\""
      ]
    },
    "fix_output_parameters": {
      "start_point": [
        1193,
        0
      ],
      "end_point": [
        1340,
        1
      ],
      "strings": [
        "\"%\"",
        "\"$%&#_{}\\\\\""
      ]
    },
    "define_all_fields": {
      "start_point": [
        1347,
        0
      ],
      "end_point": [
        1548,
        1
      ],
      "strings": [
        "\"\"",
        "\":%\""
      ]
    },
    "output_one_roff_line": {
      "start_point": [
        1556,
        0
      ],
      "end_point": [
        1601,
        1
      ],
      "strings": [
        "\".%s \\\"\"",
        "\" \\\"\"",
        "\" \\\"\"",
        "\" \\\"\"",
        "\" \\\"\""
      ]
    },
    "output_one_tex_line": {
      "start_point": [
        1607,
        0
      ],
      "end_point": [
        1639,
        1
      ],
      "strings": [
        "\"\\\\%s \"",
        "\"}{\"",
        "\"}{\"",
        "\"}{\"",
        "\"}{\""
      ]
    },
    "output_one_dumb_line": {
      "start_point": [
        1645,
        0
      ],
      "end_point": [
        1738,
        1
      ],
      "strings": []
    },
    "generate_all_output": {
      "start_point": [
        1745,
        0
      ],
      "end_point": [
        1798,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        1806,
        0
      ],
      "end_point": [
        1857,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [INPUT]...   (without -G)\\n\\\n  or:  %s -G [OPTION]... [INPUT [OUTPUT]]\\n\"",
        "\"\\\nOutput a permuted index, including context, of the words in the input files.\\n\\\n\"",
        "\"\\\n  -A, --auto-reference           output automatically generated references\\n\\\n  -G, --traditional              behave more like System V 'ptx'\\n\\\n\"",
        "\"\\\n  -F, --flag-truncation=STRING   use STRING for flagging line truncations.\\n\\\n                                 The default is '/'\\n\\\n\"",
        "\"\\\n  -M, --macro-name=STRING        macro name to use instead of 'xx'\\n\\\n  -O, --format=roff              generate output as roff directives\\n\\\n  -R, --right-side-refs          put references at right, not counted in -w\\n\\\n  -S, --sentence-regexp=REGEXP   for end of lines or end of sentences\\n\\\n  -T, --format=tex               generate output as TeX directives\\n\\\n\"",
        "\"\\\n  -W, --word-regexp=REGEXP       use REGEXP to match each keyword\\n\\\n  -b, --break-file=FILE          word break characters in this FILE\\n\\\n  -f, --ignore-case              fold lower case to upper case for sorting\\n\\\n  -g, --gap-size=NUMBER          gap size in columns between output fields\\n\\\n  -i, --ignore-file=FILE         read ignore word list from FILE\\n\\\n  -o, --only-file=FILE           read only word list from this FILE\\n\\\n\"",
        "\"\\\n  -r, --references               first field of each line is a reference\\n\\\n  -t, --typeset-mode               - not implemented -\\n\\\n  -w, --width=NUMBER             output width in columns, reference excluded\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        1898,
        0
      ],
      "end_point": [
        2152,
        1
      ],
      "strings": [
        "\"\"",
        "\"AF:GM:ORS:TW:b:i:fg:o:trw:\"",
        "\"invalid gap width: %s\"",
        "\"invalid line width: %s\"",
        "\"--format\"",
        "\"-\"",
        "\"-\"",
        "\"w\"",
        "\"%s\"",
        "\"extra operand %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/pwd.c": {
    "usage": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]...\\n\"",
        "\"\\\nPrint the full filename of the current working directory.\\n\\\n\\n\\\n\"",
        "\"\\\n  -L, --logical   use PWD from environment, even if it contains symlinks\\n\\\n  -P, --physical  avoid all symlinks\\n\\\n\"",
        "\"\\n\\\nIf no option is specified, -P is assumed.\\n\\\n\""
      ]
    },
    "file_name_free": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "file_name_init": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "file_name_prepend": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "nth_parent": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": [
        "\"../\""
      ]
    },
    "find_dir_entry": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        241,
        1
      ],
      "strings": [
        "\"..\"",
        "\"cannot open directory %s\"",
        "\"..\"",
        "\"failed to chdir to %s\"",
        "\".\"",
        "\"failed to stat %s\"",
        "\"reading directory %s\"",
        "\"couldn't find directory entry in %s with matching i-node\""
      ]
    },
    "robust_getcwd": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        293,
        1
      ],
      "strings": [
        "\"failed to get attributes of %s\"",
        "\"/\"",
        "\".\"",
        "\"failed to stat %s\"",
        "\".\"",
        "\"\""
      ]
    },
    "logical_getcwd": {
      "start_point": [
        298,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": [
        "\"PWD\"",
        "\"/.\"",
        "\".\""
      ]
    },
    "main": {
      "start_point": [
        325,
        0
      ],
      "end_point": [
        393,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\"",
        "\"\"",
        "\"LP\"",
        "\"ignoring non-option arguments\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/readlink.c": {
    "usage": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... FILE...\\n\"",
        "\"Print value of a symbolic link or canonical file name\\n\\n\"",
        "\"\\\n  -f, --canonicalize            canonicalize by following every symlink in\\n\\\n                                every component of the given name recursively;\\\n\\n\\\n                                all but the last component must exist\\n\\\n  -e, --canonicalize-existing   canonicalize by following every symlink in\\n\\\n                                every component of the given name recursively,\\\n\\n\\\n                                all components must exist\\n\\\n\"",
        "\"\\\n  -m, --canonicalize-missing    canonicalize by following every symlink in\\n\\\n                                every component of the given name recursively,\\\n\\n\\\n                                without requirements on components existence\\n\\\n  -n, --no-newline              do not output the trailing delimiter\\n\\\n  -q, --quiet\\n\\\n  -s, --silent                  suppress most error messages (on by default)\\n\\\n  -v, --verbose                 report error messages\\n\\\n  -z, --zero                    end each output line with NUL, not newline\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        92,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": [
        "\"\"",
        "\"efmnqsvz\"",
        "\"missing operand\"",
        "\"ignoring --no-newline with multiple arguments\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/realpath.c": {
    "usage": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... FILE...\\n\"",
        "\"\\\nPrint the resolved absolute file name;\\n\\\nall but the last component must exist\\n\\\n\\n\\\n\"",
        "\"\\\n  -e, --canonicalize-existing  all components of the path must exist\\n\\\n  -m, --canonicalize-missing   no path components need exist or be a directory\\\n\\n\\\n  -L, --logical                resolve '..' components before symlinks\\n\\\n  -P, --physical               resolve symlinks as encountered (default)\\n\\\n  -q, --quiet                  suppress most error messages\\n\\\n      --relative-to=DIR        print the resolved path relative to DIR\\n\\\n      --relative-base=DIR      print absolute paths unless paths below DIR\\n\\\n  -s, --strip, --no-symlinks   don't expand symlinks\\n\\\n  -z, --zero                   end each output line with NUL, not newline\\n\\\n\\n\\\n\""
      ]
    },
    "realpath_canon": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "path_prefix": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "isdir": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"cannot stat %s\""
      ]
    },
    "process_path": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "main": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": [
        "\"\"",
        "\"eLmPqsz\"",
        "\"missing operand\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/relpath.c": {
    "path_common_prefix": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "buffer_or_output": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "relpath": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"..\"",
        "\"/..\"",
        "\"/\"",
        "\".\"",
        "\"%s\"",
        "\"generating relative path\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/relpath.h": {},
  "coreutils/coreutils-8.29/src/remove.c": {
    "cache_fstatat": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "cache_stat_init": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": []
    },
    "write_protected_non_symlink": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    },
    "prompt": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        298,
        1
      ],
      "strings": [
        "\"cannot remove %s\"",
        "\"%s: descend into write-protected directory %s? \"",
        "\"%s: descend into directory %s? \"",
        "\"cannot remove %s\"",
        "\"%s: remove write-protected %s %s? \"",
        "\"%s: remove %s %s? \""
      ]
    },
    "nonexistent_file_errno": {
      "start_point": [
        303,
        0
      ],
      "end_point": [
        328,
        1
      ],
      "strings": []
    },
    "ignorable_missing": {
      "start_point": [
        331,
        0
      ],
      "end_point": [
        335,
        1
      ],
      "strings": []
    },
    "fts_skip_tree": {
      "start_point": [
        338,
        0
      ],
      "end_point": [
        344,
        1
      ],
      "strings": []
    },
    "mark_ancestor_dirs": {
      "start_point": [
        349,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": []
    },
    "excise": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        407,
        1
      ],
      "strings": [
        "\"removed directory %s\\n\"",
        "\"removed %s\\n\"",
        "\"cannot remove %s\""
      ]
    },
    "rm_fts": {
      "start_point": [
        415,
        0
      ],
      "end_point": [
        536,
        1
      ],
      "strings": [
        "\"cannot remove %s\"",
        "\"refusing to remove %s or %s directory: skipping %s\"",
        "\".\"",
        "\"..\"",
        "\"skipping %s, since it's on a different device\"",
        "\"traversal failed: %s\"",
        "\"unexpected failure: fts_info=%d: %s\\n\"",
        "\"please report to %s\""
      ]
    },
    "rm": {
      "start_point": [
        540,
        0
      ],
      "end_point": [
        585,
        1
      ],
      "strings": [
        "\"fts_read failed\"",
        "\"fts_close failed\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/remove.h": {},
  "coreutils/coreutils-8.29/src/rm.c": {
    "diagnose_leading_hyphen": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": [
        "\"Try '%s ./%s' to remove the file %s.\\n\""
      ]
    },
    "usage": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        183,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [FILE]...\\n\"",
        "\"\\\nRemove (unlink) the FILE(s).\\n\\\n\\n\\\n  -f, --force           ignore nonexistent files and arguments, never prompt\\n\\\n  -i                    prompt before every removal\\n\\\n\"",
        "\"\\\n  -I                    prompt once before removing more than three files, or\\n\\\n                          when removing recursively; less intrusive than -i,\\n\\\n                          while still giving protection against most mistakes\\n\\\n      --interactive[=WHEN]  prompt according to WHEN: never, once (-I), or\\n\\\n                          always (-i); without WHEN, prompt always\\n\\\n\"",
        "\"\\\n      --one-file-system  when removing a hierarchy recursively, skip any\\n\\\n                          directory that is on a file system different from\\n\\\n                          that of the corresponding command line argument\\n\\\n\"",
        "\"\\\n      --no-preserve-root  do not treat '/' specially\\n\\\n      --preserve-root   do not remove '/' (default)\\n\\\n  -r, -R, --recursive   remove directories and their contents recursively\\n\\\n  -d, --dir             remove empty directories\\n\\\n  -v, --verbose         explain what is being done\\n\\\n\"",
        "\"\\\n\\n\\\nBy default, rm does not remove directories.  Use the --recursive (-r or -R)\\n\\\noption to remove each listed directory, too, along with all of its contents.\\n\\\n\"",
        "\"\\\n\\n\\\nTo remove a file whose name starts with a '-', for example '-foo',\\n\\\nuse one of these commands:\\n\\\n  %s -- -foo\\n\\\n\\n\\\n  %s ./-foo\\n\\\n\"",
        "\"\\\n\\n\\\nNote that if you use rm to remove a file, it might be possible to recover\\n\\\nsome of its contents, given sufficient expertise and/or time.  For greater\\n\\\nassurance that the contents are truly unrecoverable, consider using shred.\\n\\\n\""
      ]
    },
    "rm_option_init": {
      "start_point": [
        185,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": [
        "\"\"",
        "\"dfirvIR\"",
        "\"--interactive\"",
        "\"--no-preserve-root\"",
        "\"you may not abbreviate the --no-preserve-root option\"",
        "\"missing operand\"",
        "\"failed to get attributes of %s\"",
        "\"/\"",
        "\"%s: remove %\"",
        "\" argument recursively? \"",
        "\"%s: remove %\"",
        "\" arguments recursively? \"",
        "\"%s: remove %\"",
        "\" argument? \"",
        "\"%s: remove %\"",
        "\" arguments? \""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/rmdir.c": {
    "errno_rmdir_non_empty": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "errno_may_be_empty": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "ignorable_failure": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        105,
        1
      ],
      "strings": []
    },
    "remove_parents": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": [
        "\"removing directory, %s\"",
        "\"failed to remove directory %s\""
      ]
    },
    "usage": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        181,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... DIRECTORY...\\n\"",
        "\"\\\nRemove the DIRECTORY(ies), if they are empty.\\n\\\n\\n\\\n      --ignore-fail-on-non-empty\\n\\\n                  ignore each failure that is solely because a directory\\n\\\n                    is non-empty\\n\\\n\"",
        "\"\\\n  -p, --parents   remove DIRECTORY and its ancestors; e.g., 'rmdir -p a/b/c' is\\\n\\n\\\n                    similar to 'rmdir a/b/c a/b a'\\n\\\n  -v, --verbose   output a diagnostic for every directory processed\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": [
        "\"\"",
        "\"pv\"",
        "\"missing operand\"",
        "\"removing directory, %s\"",
        "\"failed to remove %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/runcon.c": {
    "usage": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s CONTEXT COMMAND [args]\\n\\\n  or:  %s [ -c ] [-u USER] [-r ROLE] [-t TYPE] [-l RANGE] COMMAND [args]\\n\\\n\"",
        "\"\\\nRun a program in a different SELinux security context.\\n\\\nWith neither CONTEXT nor COMMAND, print the current security context.\\n\\\n\"",
        "\"\\\n  CONTEXT            Complete security context\\n\\\n  -c, --compute      compute process transition context before modifying\\n\\\n  -t, --type=TYPE    type (for same role as parent)\\n\\\n  -u, --user=USER    user identity\\n\\\n  -r, --role=ROLE    role\\n\\\n  -l, --range=RANGE  levelrange\\n\\\n\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        263,
        1
      ],
      "strings": [
        "\"\"",
        "\"+r:t:u:l:c\"",
        "\"multiple roles\"",
        "\"multiple types\"",
        "\"multiple users\"",
        "\"multiple levelranges\"",
        "\"failed to get current context\"",
        "\"you must specify -c, -t, -u, -l, -r, or context\"",
        "\"no command specified\"",
        "\"%s may be used only on a SELinux kernel\"",
        "\"failed to create security context: %s\"",
        "\"failed to get current context\"",
        "\"failed to get security context of %s\"",
        "\"process\"",
        "\"failed to compute a new context\"",
        "\"failed to create security context: %s\"",
        "\"failed to set new user: %s\"",
        "\"failed to set new type: %s\"",
        "\"failed to set new range: %s\"",
        "\"failed to set new role: %s\"",
        "\"invalid context: %s\"",
        "\"unable to set security context %s\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/selinux.c": {
    "mode_to_security_class": {
      "start_point": [
        41,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": [
        "\"file\"",
        "\"dir\"",
        "\"chr_file\"",
        "\"blk_file\"",
        "\"fifo_file\"",
        "\"lnk_file\"",
        "\"sock_file\""
      ]
    },
    "computecon": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        98,
        1
      ],
      "strings": []
    },
    "defaultcon": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"error canonicalizing %s\""
      ]
    },
    "restorecon_private": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": []
    },
    "restorecon": {
      "start_point": [
        284,
        0
      ],
      "end_point": [
        339,
        1
      ],
      "strings": [
        "\"error canonicalizing %s\"",
        "\"fts_read failed\"",
        "\"fts_close failed\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/selinux.h": {
    "ignorable_ctx_err": {
      "start_point": [
        23,
        0
      ],
      "end_point": [
        27,
        1
      ],
      "strings": []
    },
    "restorecon": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        40,
        34
      ],
      "strings": []
    },
    "defaultcon": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        44,
        31
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/seq.c": {
    "usage": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... LAST\\n\\\n  or:  %s [OPTION]... FIRST LAST\\n\\\n  or:  %s [OPTION]... FIRST INCREMENT LAST\\n\\\n\"",
        "\"\\\nPrint numbers from FIRST to LAST, in steps of INCREMENT.\\n\\\n\"",
        "\"\\\n  -f, --format=FORMAT      use printf style floating-point FORMAT\\n\\\n  -s, --separator=STRING   use STRING to separate numbers (default: \\\\n)\\n\\\n  -w, --equal-width        equalize width by padding with leading zeroes\\n\\\n\"",
        "\"\\\n\\n\\\nIf FIRST or INCREMENT is omitted, it defaults to 1.  That is, an\\n\\\nomitted INCREMENT defaults to 1 even when LAST is smaller than FIRST.\\n\\\nThe sequence of numbers ends when the sum of the current number and\\n\\\nINCREMENT would become greater than LAST.\\n\\\nFIRST, INCREMENT, and LAST are interpreted as floating point values.\\n\\\nINCREMENT is usually positive if FIRST is smaller than LAST, and\\n\\\nINCREMENT is usually negative if FIRST is greater than LAST.\\n\\\nINCREMENT must not be 0; none of FIRST, INCREMENT and LAST may be NaN.\\n\\\n\"",
        "\"\\\nFORMAT must be suitable for printing one argument of type 'double';\\n\\\nit defaults to %.PRECf if FIRST, INCREMENT, and LAST are all fixed point\\n\\\ndecimal numbers with maximum precision PREC, and to %g otherwise.\\n\\\n\""
      ]
    },
    "scan_arg": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": [
        "\"invalid floating point argument: %s\"",
        "\"invalid %s argument: %s\"",
        "\"not-a-number\"",
        "\"xX\"",
        "\"eE\""
      ]
    },
    "long_double_format": {
      "start_point": [
        226,
        0
      ],
      "end_point": [
        279,
        1
      ],
      "strings": [
        "\"format %s has no %% directive\"",
        "\"-+#0 '\"",
        "\"0123456789\"",
        "\"0123456789\"",
        "\"format %s ends in %%\"",
        "\"efgaEFGA\"",
        "\"format %s has unknown %%%c directive\"",
        "\"format %s has too many %% directives\""
      ]
    },
    "ATTRIBUTE_NORETURN": {
      "start_point": [
        281,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": [
        "\"write error\""
      ]
    },
    "print_numbers": {
      "start_point": [
        292,
        0
      ],
      "end_point": [
        355,
        1
      ],
      "strings": [
        "\"C\"",
        "\"\""
      ]
    },
    "get_default_format": {
      "start_point": [
        358,
        0
      ],
      "end_point": [
        395,
        1
      ],
      "strings": [
        "\"%0.Lf\"",
        "\"%%0%d.%dLf\"",
        "\"%%.%dLf\"",
        "\"%Lg\""
      ]
    },
    "incr": {
      "start_point": [
        400,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": []
    },
    "cmp": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        427,
        1
      ],
      "strings": []
    },
    "trim_leading_zeros": {
      "start_point": [
        431,
        0
      ],
      "end_point": [
        442,
        1
      ],
      "strings": []
    },
    "seq_fast": {
      "start_point": [
        447,
        0
      ],
      "end_point": [
        537,
        1
      ],
      "strings": [
        "\"inf\""
      ]
    },
    "all_digits_p": {
      "start_point": [
        540,
        0
      ],
      "end_point": [
        545,
        1
      ],
      "strings": [
        "\"0123456789\""
      ]
    },
    "main": {
      "start_point": [
        547,
        0
      ],
      "end_point": [
        705,
        1
      ],
      "strings": [
        "\"\"",
        "\"\\n\"",
        "\"+f:s:w\"",
        "\"missing operand\"",
        "\"extra operand %s\"",
        "\"format string may not be specified\"",
        "\" when printing equal width strings\"",
        "\"1\"",
        "\"1\"",
        "\"invalid Zero increment value: %s\"",
        "\"%0.Lf\"",
        "\"inf\"",
        "\"%0.Lf\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/set-fields.c": {
    "add_range_pair": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "compare_ranges": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "complement_rp": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "set_fields": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        310,
        1
      ],
      "strings": [
        "\"-\"",
        "\"invalid byte or character range\"",
        "\"invalid field range\"",
        "\"byte/character positions are numbered from 1\"",
        "\"fields are numbered from 1\"",
        "\"invalid range with no endpoint: -\"",
        "\"invalid decreasing range\"",
        "\"byte/character positions are numbered from 1\"",
        "\"fields are numbered from 1\"",
        "\"0123456789\"",
        "\"byte/character offset %s is too large\"",
        "\"field number %s is too large\"",
        "\"invalid byte/character position %s\"",
        "\"invalid field value %s\"",
        "\"missing list of byte/character positions\"",
        "\"missing list of fields\""
      ]
    },
    "reset_fields": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        319,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/set-fields.h": {},
  "coreutils/coreutils-8.29/src/shred.c": {
    "usage": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... FILE...\\n\"",
        "\"\\\nOverwrite the specified FILE(s) repeatedly, in order to make it harder\\n\\\nfor even very expensive hardware probing to recover the data.\\n\\\n\"",
        "\"\\\n\\n\\\nIf FILE is -, shred standard output.\\n\\\n\"",
        "\"\\\n  -f, --force    change permissions to allow writing if necessary\\n\\\n  -n, --iterations=N  overwrite N times instead of the default (%d)\\n\\\n      --random-source=FILE  get random bytes from FILE\\n\\\n  -s, --size=N   shred this many bytes (suffixes like K, M, G accepted)\\n\\\n\"",
        "\"\\\n  -u             deallocate and remove file after overwriting\\n\\\n      --remove[=HOW]  like -u but give control on HOW to delete;  See below\\n\\\n  -v, --verbose  show progress\\n\\\n  -x, --exact    do not round file sizes up to the next full block;\\n\\\n                   this is the default for non-regular files\\n\\\n  -z, --zero     add a final overwrite with zeros to hide shredding\\n\\\n\"",
        "\"\\\n\\n\\\nDelete FILE(s) if --remove (-u) is specified.  The default is not to remove\\n\\\nthe files because it is common to operate on device files like /dev/hda,\\n\\\nand those files usually should not be removed.\\n\\\nThe optional HOW parameter indicates how to remove a directory entry:\\n\\\n'unlink' => use a standard unlink call.\\n\\\n'wipe' => also first obfuscate bytes in the name.\\n\\\n'wipesync' => also sync each obfuscated byte to disk.\\n\\\nThe default mode is 'wipesync', but note it can be expensive.\\n\\\n\\n\\\n\"",
        "\"\\\nCAUTION: Note that shred relies on a very important assumption:\\n\\\nthat the file system overwrites data in place.  This is the traditional\\n\\\nway to do things, but many modern file system designs do not satisfy this\\n\\\nassumption.  The following are examples of file systems on which shred is\\n\\\nnot effective, or is not guaranteed to be effective in all file system modes:\\n\\\n\\n\\\n\"",
        "\"\\\n* log-structured or journaled file systems, such as those supplied with\\n\\\nAIX and Solaris (and JFS, ReiserFS, XFS, Ext3, etc.)\\n\\\n\\n\\\n* file systems that write redundant data and carry on even if some writes\\n\\\nfail, such as RAID-based file systems\\n\\\n\\n\\\n* file systems that make snapshots, such as Network Appliance's NFS server\\n\\\n\\n\\\n\"",
        "\"\\\n* file systems that cache in temporary locations, such as NFS\\n\\\nversion 3 clients\\n\\\n\\n\\\n* compressed file systems\\n\\\n\\n\\\n\"",
        "\"\\\nIn the case of ext3 file systems, the above disclaimer applies\\n\\\n(and shred is thus of limited effectiveness) only in data=journal mode,\\n\\\nwhich journals file data in addition to just metadata.  In both the\\n\\\ndata=ordered (default) and data=writeback modes, shred works as usual.\\n\\\nExt3 journaling modes can be changed by adding the data=something option\\n\\\nto the mount options for a particular file system in the /etc/fstab file,\\n\\\nas documented in the mount man page (man mount).\\n\\\n\\n\\\n\"",
        "\"\\\nIn addition, file system backups and remote mirrors may contain copies\\n\\\nof the file that cannot be removed, and that will allow a shredded file\\n\\\nto be recovered later.\\n\\\n\""
      ]
    },
    "periodic_pattern": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": []
    },
    "fillpattern": {
      "start_point": [
        280,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": []
    },
    "passname": {
      "start_point": [
        306,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": [
        "\"%02x%02x%02x\"",
        "\"random\""
      ]
    },
    "ignorable_sync_errno": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        324,
        1
      ],
      "strings": []
    },
    "dosync": {
      "start_point": [
        332,
        0
      ],
      "end_point": [
        361,
        1
      ],
      "strings": [
        "\"%s: fdatasync failed\"",
        "\"%s: fsync failed\""
      ]
    },
    "direct_mode": {
      "start_point": [
        365,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": []
    },
    "dorewind": {
      "start_point": [
        388,
        0
      ],
      "end_point": [
        408,
        1
      ],
      "strings": []
    },
    "known": {
      "start_point": [
        412,
        0
      ],
      "end_point": [
        416,
        1
      ],
      "strings": []
    },
    "dopass": {
      "start_point": [
        428,
        0
      ],
      "end_point": [
        659,
        1
      ],
      "strings": [
        "\"%s: cannot rewind\"",
        "\"%s: pass %lu/%lu (%s)...\"",
        "\"\"",
        "\"%s: error writing at offset %s\"",
        "\"%s: lseek failed\"",
        "\"%s: file too large\"",
        "\"%s: pass %lu/%lu (%s)...%s\"",
        "\"%s: pass %lu/%lu (%s)...%s/%s %d%%\""
      ]
    },
    "genpattern": {
      "start_point": [
        740,
        0
      ],
      "end_point": [
        848,
        1
      ],
      "strings": []
    },
    "do_wipefd": {
      "start_point": [
        854,
        0
      ],
      "end_point": [
        991,
        1
      ],
      "strings": [
        "\"%s: fstat failed\"",
        "\"%s: invalid file type\"",
        "\"%s: file has negative size\"",
        "\"%s: error truncating\""
      ]
    },
    "wipefd": {
      "start_point": [
        994,
        0
      ],
      "end_point": [
        1011,
        1
      ],
      "strings": [
        "\"%s: fcntl failed\"",
        "\"%s: cannot shred append-only file descriptor\""
      ]
    },
    "incname": {
      "start_point": [
        1024,
        0
      ],
      "end_point": [
        1047,
        1
      ],
      "strings": []
    },
    "wipename": {
      "start_point": [
        1075,
        0
      ],
      "end_point": [
        1143,
        1
      ],
      "strings": [
        "\"%s: removing\"",
        "\"%s: renamed to %s\"",
        "\"%s: failed to remove\"",
        "\"%s: removed\"",
        "\"%s: failed to close\""
      ]
    },
    "wipefile": {
      "start_point": [
        1157,
        0
      ],
      "end_point": [
        1184,
        1
      ],
      "strings": [
        "\"%s: failed to open for writing\"",
        "\"%s: failed to close\""
      ]
    },
    "clear_random_data": {
      "start_point": [
        1193,
        0
      ],
      "end_point": [
        1197,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        1200,
        0
      ],
      "end_point": [
        1307,
        1
      ],
      "strings": [
        "\"\"",
        "\"fn:s:uvxz\"",
        "\"\"",
        "\"invalid number of passes\"",
        "\"multiple random sources specified\"",
        "\"--remove\"",
        "\"cbBkKMGTPEZY0\"",
        "\"invalid file size\"",
        "\"missing file operand\"",
        "\"%s\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/shuf.c": {
    "usage": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]\\n\\\n  or:  %s -e [OPTION]... [ARG]...\\n\\\n  or:  %s -i LO-HI [OPTION]...\\n\\\n\"",
        "\"\\\nWrite a random permutation of the input lines to standard output.\\n\\\n\"",
        "\"\\\n  -e, --echo                treat each ARG as an input line\\n\\\n  -i, --input-range=LO-HI   treat each number LO through HI as an input line\\n\\\n  -n, --head-count=COUNT    output at most COUNT lines\\n\\\n  -o, --output=FILE         write result to FILE instead of standard output\\n\\\n      --random-source=FILE  get random bytes from FILE\\n\\\n  -r, --repeat              output lines can be repeated\\n\\\n\"",
        "\"\\\n  -z, --zero-terminated     line delimiter is NUL, not newline\\n\\\n\""
      ]
    },
    "input_from_argv": {
      "start_point": [
        114,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "next_line": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": []
    },
    "input_size": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    },
    "read_input_reservoir_sampling": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": [
        "\"too many input lines\"",
        "\"read error\""
      ]
    },
    "write_permuted_output_reservoir": {
      "start_point": [
        238,
        0
      ],
      "end_point": [
        250,
        1
      ],
      "strings": []
    },
    "read_input": {
      "start_point": [
        258,
        0
      ],
      "end_point": [
        296,
        1
      ],
      "strings": [
        "\"read error\""
      ]
    },
    "write_permuted_lines": {
      "start_point": [
        302,
        0
      ],
      "end_point": [
        315,
        1
      ],
      "strings": []
    },
    "write_permuted_numbers": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        331,
        1
      ],
      "strings": [
        "\"%lu%c\""
      ]
    },
    "write_random_numbers": {
      "start_point": [
        335,
        0
      ],
      "end_point": [
        349,
        1
      ],
      "strings": [
        "\"%lu%c\""
      ]
    },
    "write_random_lines": {
      "start_point": [
        354,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        370,
        0
      ],
      "end_point": [
        609,
        1
      ],
      "strings": [
        "\"\"",
        "\"ei:n:o:rz\"",
        "\"multiple -i options specified\"",
        "\"\"",
        "\"invalid input range\"",
        "\"\"",
        "\"invalid input range\"",
        "\"%s: %s\"",
        "\"invalid input range\"",
        "\"invalid line count: %s\"",
        "\"multiple output files specified\"",
        "\"multiple random sources specified\"",
        "\"cannot combine -e and -i options\"",
        "\"extra operand %s\"",
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"%s\"",
        "\"read error\"",
        "\"w\"",
        "\"%s\"",
        "\"no lines to repeat\"",
        "\"write error\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/sleep.c": {
    "usage": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s NUMBER[SUFFIX]...\\n\\\n  or:  %s OPTION\\n\\\nPause for NUMBER seconds.  SUFFIX may be 's' for seconds (the default),\\n\\\n'm' for minutes, 'h' for hours or 'd' for days.  Unlike most implementations\\n\\\nthat require NUMBER be an integer, here NUMBER may be an arbitrary floating\\n\\\npoint number.  Given two or more arguments, pause for the amount of time\\n\\\nspecified by the sum of their values.\\n\\\n\\n\\\n\""
      ]
    },
    "apply_suffix": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        153,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"missing operand\"",
        "\"invalid time interval %s\"",
        "\"cannot read realtime clock\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/sort.c": {
    "async_safe_die": {
      "start_point": [
        385,
        0
      ],
      "end_point": [
        406,
        1
      ],
      "strings": [
        "\": errno \"",
        "\"\\n\""
      ]
    },
    "sort_die": {
      "start_point": [
        412,
        0
      ],
      "end_point": [
        417,
        1
      ],
      "strings": [
        "\"%s: %s\"",
        "\"standard output\""
      ]
    },
    "usage": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        541,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n  or:  %s [OPTION]... --files0-from=F\\n\\\n\"",
        "\"\\\nWrite sorted concatenation of all FILE(s) to standard output.\\n\\\n\"",
        "\"\\\nOrdering options:\\n\\\n\\n\\\n\"",
        "\"\\\n  -b, --ignore-leading-blanks  ignore leading blanks\\n\\\n  -d, --dictionary-order      consider only blanks and alphanumeric characters\\\n\\n\\\n  -f, --ignore-case           fold lower case to upper case characters\\n\\\n\"",
        "\"\\\n  -g, --general-numeric-sort  compare according to general numerical value\\n\\\n  -i, --ignore-nonprinting    consider only printable characters\\n\\\n  -M, --month-sort            compare (unknown) < 'JAN' < ... < 'DEC'\\n\\\n\"",
        "\"\\\n  -h, --human-numeric-sort    compare human readable numbers (e.g., 2K 1G)\\n\\\n\"",
        "\"\\\n  -n, --numeric-sort          compare according to string numerical value\\n\\\n  -R, --random-sort           shuffle, but group identical keys.  See shuf(1)\\n\\\n      --random-source=FILE    get random bytes from FILE\\n\\\n  -r, --reverse               reverse the result of comparisons\\n\\\n\"",
        "\"\\\n      --sort=WORD             sort according to WORD:\\n\\\n                                general-numeric -g, human-numeric -h, month -M,\\\n\\n\\\n                                numeric -n, random -R, version -V\\n\\\n  -V, --version-sort          natural sort of (version) numbers within text\\n\\\n\\n\\\n\"",
        "\"\\\nOther options:\\n\\\n\\n\\\n\"",
        "\"\\\n      --batch-size=NMERGE   merge at most NMERGE inputs at once;\\n\\\n                            for more use temp files\\n\\\n\"",
        "\"\\\n  -c, --check, --check=diagnose-first  check for sorted input; do not sort\\n\\\n  -C, --check=quiet, --check=silent  like -c, but do not report first bad line\\\n\\n\\\n      --compress-program=PROG  compress temporaries with PROG;\\n\\\n                              decompress them with PROG -d\\n\\\n\"",
        "\"\\\n      --debug               annotate the part of the line used to sort,\\n\\\n                              and warn about questionable usage to stderr\\n\\\n      --files0-from=F       read input from the files specified by\\n\\\n                            NUL-terminated names in file F;\\n\\\n                            If F is - then read names from standard input\\n\\\n\"",
        "\"\\\n  -k, --key=KEYDEF          sort via a key; KEYDEF gives location and type\\n\\\n  -m, --merge               merge already sorted files; do not sort\\n\\\n\"",
        "\"\\\n  -o, --output=FILE         write result to FILE instead of standard output\\n\\\n  -s, --stable              stabilize sort by disabling last-resort comparison\\\n\\n\\\n  -S, --buffer-size=SIZE    use SIZE for main memory buffer\\n\\\n\"",
        "\"\\\n  -t, --field-separator=SEP  use SEP instead of non-blank to blank transition\\n\\\n  -T, --temporary-directory=DIR  use DIR for temporaries, not $TMPDIR or %s;\\n\\\n                              multiple options specify multiple directories\\n\\\n      --parallel=N          change the number of sorts run concurrently to N\\n\\\n  -u, --unique              with -c, check for strict ordering;\\n\\\n                              without -c, output only the first of an equal run\\\n\\n\\\n\"",
        "\"\\\n  -z, --zero-terminated     line delimiter is NUL, not newline\\n\\\n\"",
        "\"\\\n\\n\\\nKEYDEF is F[.C][OPTS][,F[.C][OPTS]] for start and stop position, where F is a\\n\\\nfield number and C a character position in the field; both are origin 1, and\\n\\\nthe stop position defaults to the line's end.  If neither -t nor -b is in\\n\\\neffect, characters in a field are counted from the beginning of the preceding\\n\\\nwhitespace.  OPTS is one or more single-letter ordering options [bdfgiMhnRrV],\\\n\\n\\\nwhich override global ordering options for that key.  If no key is given, use\\n\\\nthe entire line as the key.  Use --debug to diagnose incorrect key usage.\\n\\\n\\n\\\nSIZE may be followed by the following multiplicative suffixes:\\n\\\n\"",
        "\"\\\n% 1% of memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.\\n\\\n\\n\\\n*** WARNING ***\\n\\\nThe locale specified by the environment affects sort order.\\n\\\nSet LC_ALL=C to get the traditional sort order that uses\\n\\\nnative byte values.\\n\\\n\""
      ]
    },
    "cs_enter": {
      "start_point": [
        644,
        0
      ],
      "end_point": [
        649,
        1
      ],
      "strings": []
    },
    "cs_leave": {
      "start_point": [
        652,
        0
      ],
      "end_point": [
        660,
        1
      ],
      "strings": []
    },
    "proctab_hasher": {
      "start_point": [
        693,
        0
      ],
      "end_point": [
        698,
        1
      ],
      "strings": []
    },
    "proctab_comparator": {
      "start_point": [
        700,
        0
      ],
      "end_point": [
        706,
        1
      ],
      "strings": []
    },
    "reap": {
      "start_point": [
        720,
        0
      ],
      "end_point": [
        738,
        1
      ],
      "strings": [
        "\"waiting for %s [-d]\"",
        "\"%s [-d] terminated abnormally\""
      ]
    },
    "register_proc": {
      "start_point": [
        743,
        0
      ],
      "end_point": [
        760,
        1
      ],
      "strings": []
    },
    "delete_proc": {
      "start_point": [
        765,
        0
      ],
      "end_point": [
        776,
        1
      ],
      "strings": []
    },
    "wait_proc": {
      "start_point": [
        781,
        0
      ],
      "end_point": [
        786,
        1
      ],
      "strings": []
    },
    "reap_exited": {
      "start_point": [
        791,
        0
      ],
      "end_point": [
        796,
        1
      ],
      "strings": []
    },
    "reap_some": {
      "start_point": [
        800,
        0
      ],
      "end_point": [
        805,
        1
      ],
      "strings": []
    },
    "reap_all": {
      "start_point": [
        809,
        0
      ],
      "end_point": [
        814,
        1
      ],
      "strings": []
    },
    "cleanup": {
      "start_point": [
        818,
        0
      ],
      "end_point": [
        826,
        1
      ],
      "strings": []
    },
    "exit_cleanup": {
      "start_point": [
        830,
        0
      ],
      "end_point": [
        844,
        1
      ],
      "strings": []
    },
    "create_temp_file": {
      "start_point": [
        852,
        0
      ],
      "end_point": [
        895,
        1
      ],
      "strings": [
        "\"/sortXXXXXX\"",
        "\"cannot create temporary file in %s\""
      ]
    },
    "stream_open": {
      "start_point": [
        944,
        0
      ],
      "end_point": [
        974,
        1
      ],
      "strings": [
        "\"-\"",
        "\"%s: error truncating\"",
        "\"unexpected mode passed to stream_open\""
      ]
    },
    "xfopen": {
      "start_point": [
        979,
        0
      ],
      "end_point": [
        986,
        1
      ],
      "strings": [
        "\"open failed\""
      ]
    },
    "xfclose": {
      "start_point": [
        990,
        0
      ],
      "end_point": [
        1012,
        1
      ],
      "strings": [
        "\"fflush failed\"",
        "\"close failed\""
      ]
    },
    "move_fd": {
      "start_point": [
        1016,
        0
      ],
      "end_point": [
        1025,
        1
      ],
      "strings": []
    },
    "pipe_fork": {
      "start_point": [
        1032,
        0
      ],
      "end_point": [
        1101,
        1
      ],
      "strings": []
    },
    "maybe_create_temp": {
      "start_point": [
        1109,
        0
      ],
      "end_point": [
        1151,
        1
      ],
      "strings": [
        "\"couldn't execute compress program\"",
        "\"w\"",
        "\"couldn't create temporary file\""
      ]
    },
    "create_temp": {
      "start_point": [
        1157,
        0
      ],
      "end_point": [
        1161,
        1
      ],
      "strings": []
    },
    "open_temp": {
      "start_point": [
        1168,
        0
      ],
      "end_point": [
        1221,
        1
      ],
      "strings": [
        "\"couldn't create process for %s -d\"",
        "\"-d\"",
        "\"couldn't execute compress program (with -d)\"",
        "\"r\""
      ]
    },
    "add_temp_dir": {
      "start_point": [
        1224,
        0
      ],
      "end_point": [
        1231,
        1
      ],
      "strings": []
    },
    "zaptemp": {
      "start_point": [
        1235,
        0
      ],
      "end_point": [
        1264,
        1
      ],
      "strings": [
        "\"warning: cannot remove: %s\""
      ]
    },
    "struct_month_cmp": {
      "start_point": [
        1268,
        0
      ],
      "end_point": [
        1274,
        1
      ],
      "strings": []
    },
    "inittables": {
      "start_point": [
        1280,
        0
      ],
      "end_point": [
        1317,
        1
      ],
      "strings": []
    },
    "specify_nmerge": {
      "start_point": [
        1322,
        0
      ],
      "end_point": [
        1373,
        1
      ],
      "strings": [
        "\"invalid --%s argument %s\"",
        "\"minimum --%s argument is %s\"",
        "\"2\"",
        "\"--%s argument %s too large\"",
        "\"maximum --%s argument with current rlimit is %s\""
      ]
    },
    "specify_sort_size": {
      "start_point": [
        1376,
        0
      ],
      "end_point": [
        1434,
        1
      ],
      "strings": [
        "\"EgGkKmMPtTYZ\""
      ]
    },
    "specify_nthreads": {
      "start_point": [
        1437,
        0
      ],
      "end_point": [
        1451,
        1
      ],
      "strings": [
        "\"\"",
        "\"number in parallel must be nonzero\""
      ]
    },
    "default_sort_size": {
      "start_point": [
        1454,
        0
      ],
      "end_point": [
        1497,
        1
      ],
      "strings": []
    },
    "sort_buffer_size": {
      "start_point": [
        1506,
        0
      ],
      "end_point": [
        1563,
        1
      ],
      "strings": [
        "\"-\"",
        "\"stat failed\""
      ]
    },
    "initbuf": {
      "start_point": [
        1569,
        0
      ],
      "end_point": [
        1591,
        1
      ],
      "strings": []
    },
    "buffer_linelim": {
      "start_point": [
        1595,
        0
      ],
      "end_point": [
        1600,
        1
      ],
      "strings": []
    },
    "begfield": {
      "start_point": [
        1605,
        0
      ],
      "end_point": [
        1642,
        1
      ],
      "strings": []
    },
    "limfield": {
      "start_point": [
        1647,
        0
      ],
      "end_point": [
        1744,
        1
      ],
      "strings": []
    },
    "fillbuf": {
      "start_point": [
        1752,
        0
      ],
      "end_point": [
        1864,
        1
      ],
      "strings": [
        "\"read failed\""
      ]
    },
    "traverse_raw_number": {
      "start_point": [
        1899,
        0
      ],
      "end_point": [
        1940,
        1
      ],
      "strings": []
    },
    "find_unit_order": {
      "start_point": [
        1947,
        0
      ],
      "end_point": [
        1961,
        1
      ],
      "strings": []
    },
    "human_numcompare": {
      "start_point": [
        1966,
        0
      ],
      "end_point": [
        1976,
        1
      ],
      "strings": []
    },
    "numcompare": {
      "start_point": [
        1982,
        0
      ],
      "end_point": [
        1991,
        1
      ],
      "strings": []
    },
    "nan_compare": {
      "start_point": [
        1997,
        0
      ],
      "end_point": [
        2009,
        1
      ],
      "strings": []
    },
    "general_numcompare": {
      "start_point": [
        2011,
        0
      ],
      "end_point": [
        2037,
        1
      ],
      "strings": []
    },
    "getmonth": {
      "start_point": [
        2042,
        0
      ],
      "end_point": [
        2080,
        1
      ],
      "strings": []
    },
    "random_md5_state_init": {
      "start_point": [
        2087,
        0
      ],
      "end_point": [
        2099,
        1
      ],
      "strings": [
        "\"open failed\"",
        "\"close failed\""
      ]
    },
    "xstrxfrm": {
      "start_point": [
        2103,
        0
      ],
      "end_point": [
        2119,
        1
      ],
      "strings": [
        "\"string transformation failed\"",
        "\"set LC_ALL='C' to work around the problem\"",
        "\"the untransformed string was %s\""
      ]
    },
    "compare_random": {
      "start_point": [
        2125,
        0
      ],
      "end_point": [
        2252,
        1
      ],
      "strings": []
    },
    "debug_width": {
      "start_point": [
        2258,
        0
      ],
      "end_point": [
        2265,
        1
      ],
      "strings": []
    },
    "mark_key": {
      "start_point": [
        2270,
        0
      ],
      "end_point": [
        2286,
        1
      ],
      "strings": [
        "\"^ no match for key\\n\""
      ]
    },
    "key_numeric": {
      "start_point": [
        2290,
        0
      ],
      "end_point": [
        2294,
        1
      ],
      "strings": []
    },
    "debug_key": {
      "start_point": [
        2299,
        0
      ],
      "end_point": [
        2352,
        1
      ],
      "strings": []
    },
    "debug_line": {
      "start_point": [
        2356,
        0
      ],
      "end_point": [
        2364,
        1
      ],
      "strings": []
    },
    "default_key_compare": {
      "start_point": [
        2368,
        0
      ],
      "end_point": [
        2381,
        1
      ],
      "strings": []
    },
    "key_to_opts": {
      "start_point": [
        2385,
        0
      ],
      "end_point": [
        2411,
        1
      ],
      "strings": []
    },
    "key_warnings": {
      "start_point": [
        2415,
        0
      ],
      "end_point": [
        2517,
        1
      ],
      "strings": [
        "\"+\"",
        "\"-k \"",
        "\" -\"",
        "\",\"",
        "\"obsolescent key %s used; consider %s instead\"",
        "\"key %lu has zero width and will be ignored\"",
        "\"leading blanks are significant in key %lu; \"",
        "\"consider also specifying 'b'\"",
        "\"key %lu is numeric and spans multiple fields\"",
        "\"option '-%s' is ignored\"",
        "\"options '-%s' are ignored\"",
        "\"option '-r' only applies to last-resort comparison\""
      ]
    },
    "keycompare": {
      "start_point": [
        2522,
        0
      ],
      "end_point": [
        2722,
        1
      ],
      "strings": []
    },
    "compare": {
      "start_point": [
        2727,
        0
      ],
      "end_point": [
        2763,
        1
      ],
      "strings": []
    },
    "write_line": {
      "start_point": [
        2770,
        0
      ],
      "end_point": [
        2802,
        1
      ],
      "strings": [
        "\"write failed\"",
        "\"write failed\""
      ]
    },
    "check": {
      "start_point": [
        2809,
        0
      ],
      "end_point": [
        2890,
        1
      ],
      "strings": [
        "\"r\"",
        "\"%s: %s:%s: disorder: \"",
        "\"standard error\""
      ]
    },
    "open_input_files": {
      "start_point": [
        2897,
        0
      ],
      "end_point": [
        2914,
        1
      ],
      "strings": [
        "\"r\""
      ]
    },
    "mergefps": {
      "start_point": [
        2924,
        0
      ],
      "end_point": [
        3111,
        1
      ],
      "strings": []
    },
    "mergefiles": {
      "start_point": [
        3123,
        0
      ],
      "end_point": [
        3133,
        1
      ],
      "strings": [
        "\"open failed\""
      ]
    },
    "mergelines": {
      "start_point": [
        3141,
        0
      ],
      "end_point": [
        3172,
        1
      ],
      "strings": []
    },
    "sequential_sort": {
      "start_point": [
        3188,
        0
      ],
      "end_point": [
        3237,
        1
      ],
      "strings": []
    },
    "merge_tree_init": {
      "start_point": [
        3246,
        0
      ],
      "end_point": [
        3262,
        1
      ],
      "strings": []
    },
    "merge_tree_destroy": {
      "start_point": [
        3265,
        0
      ],
      "end_point": [
        3278,
        1
      ],
      "strings": []
    },
    "init_node": {
      "start_point": [
        3287,
        0
      ],
      "end_point": [
        3328,
        1
      ],
      "strings": []
    },
    "compare_nodes": {
      "start_point": [
        3333,
        0
      ],
      "end_point": [
        3341,
        1
      ],
      "strings": []
    },
    "lock_node": {
      "start_point": [
        3345,
        0
      ],
      "end_point": [
        3349,
        1
      ],
      "strings": []
    },
    "unlock_node": {
      "start_point": [
        3353,
        0
      ],
      "end_point": [
        3357,
        1
      ],
      "strings": []
    },
    "queue_destroy": {
      "start_point": [
        3361,
        0
      ],
      "end_point": [
        3367,
        1
      ],
      "strings": []
    },
    "queue_init": {
      "start_point": [
        3372,
        0
      ],
      "end_point": [
        3381,
        1
      ],
      "strings": []
    },
    "queue_insert": {
      "start_point": [
        3386,
        0
      ],
      "end_point": [
        3394,
        1
      ],
      "strings": []
    },
    "queue_pop": {
      "start_point": [
        3398,
        0
      ],
      "end_point": [
        3409,
        1
      ],
      "strings": []
    },
    "write_unique": {
      "start_point": [
        3418,
        0
      ],
      "end_point": [
        3429,
        1
      ],
      "strings": []
    },
    "mergelines_node": {
      "start_point": [
        3438,
        0
      ],
      "end_point": [
        3500,
        1
      ],
      "strings": []
    },
    "queue_check_insert": {
      "start_point": [
        3506,
        0
      ],
      "end_point": [
        3516,
        1
      ],
      "strings": []
    },
    "queue_check_insert_parent": {
      "start_point": [
        3520,
        0
      ],
      "end_point": [
        3536,
        1
      ],
      "strings": []
    },
    "merge_loop": {
      "start_point": [
        3544,
        0
      ],
      "end_point": [
        3565,
        1
      ],
      "strings": []
    },
    "sortlines_thread": {
      "start_point": [
        3602,
        0
      ],
      "end_point": [
        3610,
        1
      ],
      "strings": []
    },
    "sortlines": {
      "start_point": [
        3636,
        0
      ],
      "end_point": [
        3678,
        1
      ],
      "strings": []
    },
    "avoid_trashing_input": {
      "start_point": [
        3697,
        0
      ],
      "end_point": [
        3742,
        1
      ],
      "strings": [
        "\"-\""
      ]
    },
    "check_inputs": {
      "start_point": [
        3753,
        0
      ],
      "end_point": [
        3764,
        1
      ],
      "strings": [
        "\"-\"",
        "\"cannot read\""
      ]
    },
    "check_output": {
      "start_point": [
        3770,
        0
      ],
      "end_point": [
        3781,
        1
      ],
      "strings": [
        "\"open failed\""
      ]
    },
    "merge": {
      "start_point": [
        3788,
        0
      ],
      "end_point": [
        3900,
        1
      ],
      "strings": [
        "\"w\"",
        "\"open failed\"",
        "\"open failed\""
      ]
    },
    "sort": {
      "start_point": [
        3904,
        0
      ],
      "end_point": [
        4018,
        1
      ],
      "strings": [
        "\"r\"",
        "\"w\""
      ]
    },
    "insertkey": {
      "start_point": [
        4022,
        0
      ],
      "end_point": [
        4032,
        1
      ],
      "strings": []
    },
    "badfieldspec": {
      "start_point": [
        4038,
        0
      ],
      "end_point": [
        4043,
        1
      ],
      "strings": [
        "\"%s: invalid field specification %s\""
      ]
    },
    "incompatible_options": {
      "start_point": [
        4048,
        0
      ],
      "end_point": [
        4052,
        1
      ],
      "strings": [
        "\"options '-%s' are incompatible\""
      ]
    },
    "check_ordering_compatibility": {
      "start_point": [
        4056,
        0
      ],
      "end_point": [
        4072,
        1
      ],
      "strings": []
    },
    "parse_field_count": {
      "start_point": [
        4080,
        0
      ],
      "end_point": [
        4107,
        1
      ],
      "strings": [
        "\"\"",
        "\"%s: invalid count at start of %s\""
      ]
    },
    "sighandler": {
      "start_point": [
        4111,
        0
      ],
      "end_point": [
        4121,
        1
      ],
      "strings": []
    },
    "set_ordering": {
      "start_point": [
        4128,
        0
      ],
      "end_point": [
        4180,
        1
      ],
      "strings": []
    },
    "key_init": {
      "start_point": [
        4184,
        0
      ],
      "end_point": [
        4190,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        4192,
        0
      ],
      "end_point": [
        4778,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\"",
        "\"\"",
        "\"invalid number after '-'\"",
        "\"invalid number after '.'\"",
        "\"stray character in field spec\"",
        "\"--sort\"",
        "\"--check\"",
        "\"cC\"",
        "\"multiple compress programs specified\"",
        "\"invalid number at field start\"",
        "\"field number is zero\"",
        "\"invalid number after '.'\"",
        "\"character offset is zero\"",
        "\"invalid number after ','\"",
        "\"field number is zero\"",
        "\"invalid number after '.'\"",
        "\"stray character in field spec\"",
        "\"multiple output files specified\"",
        "\"multiple random sources specified\"",
        "\"empty tab\"",
        "\"\\\\0\"",
        "\"multi-character tab %s\"",
        "\"incompatible tabs\"",
        "\"extra operand %s\"",
        "\"%s\\n\"",
        "\"file operands cannot be combined with --files0-from\"",
        "\"r\"",
        "\"cannot read file names from %s\"",
        "\"-\"",
        "\"when reading file names from stdin, \"",
        "\"no file name of %s allowed\"",
        "\"%s:%lu: invalid zero-length file name\"",
        "\"no input from %s\"",
        "\"X --debug\"",
        "\"\"",
        "\"%s\"",
        "\"failed to set locale\"",
        "\"using %s sorting rules\"",
        "\"%s\"",
        "\"using simple byte comparison\"",
        "\"TMPDIR\"",
        "\"-\"",
        "\"extra operand %s not allowed with -%c\"",
        "\"close failed\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/split.c": {
    "ignorable": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "set_suffix_length": {
      "start_point": [
        161,
        0
      ],
      "end_point": [
        216,
        1
      ],
      "strings": [
        "\"\"",
        "\"the suffix length needs to be at least %\""
      ]
    },
    "usage": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        274,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE [PREFIX]]\\n\\\n\"",
        "\"\\\nOutput pieces of FILE to PREFIXaa, PREFIXab, ...;\\n\\\ndefault size is 1000 lines, and default PREFIX is 'x'.\\n\\\n\"",
        "\"\\\n  -a, --suffix-length=N   generate suffixes of length N (default %d)\\n\\\n      --additional-suffix=SUFFIX  append an additional SUFFIX to file names\\n\\\n  -b, --bytes=SIZE        put SIZE bytes per output file\\n\\\n  -C, --line-bytes=SIZE   put at most SIZE bytes of records per output file\\n\\\n  -d                      use numeric suffixes starting at 0, not alphabetic\\n\\\n      --numeric-suffixes[=FROM]  same as -d, but allow setting the start value\\\n\\n\\\n  -x                      use hex suffixes starting at 0, not alphabetic\\n\\\n      --hex-suffixes[=FROM]  same as -x, but allow setting the start value\\n\\\n  -e, --elide-empty-files  do not generate empty output files with '-n'\\n\\\n      --filter=COMMAND    write to shell COMMAND; file name is $FILE\\n\\\n  -l, --lines=NUMBER      put NUMBER lines/records per output file\\n\\\n  -n, --number=CHUNKS     generate CHUNKS output files; see explanation below\\n\\\n  -t, --separator=SEP     use SEP instead of newline as the record separator;\\n\\\n                            '\\\\0' (zero) specifies the NUL character\\n\\\n  -u, --unbuffered        immediately copy input to output with '-n r/...'\\n\\\n\"",
        "\"\\\n      --verbose           print a diagnostic just before each\\n\\\n                            output file is opened\\n\\\n\"",
        "\"\\n\\\nCHUNKS may be:\\n\\\n  N       split into N files based on size of input\\n\\\n  K/N     output Kth of N to stdout\\n\\\n  l/N     split into N files without splitting lines/records\\n\\\n  l/K/N   output Kth of N to stdout without splitting lines/records\\n\\\n  r/N     like 'l' but use round robin distribution\\n\\\n  r/K/N   likewise but only output Kth of N to stdout\\n\\\n\""
      ]
    },
    "input_file_size": {
      "start_point": [
        281,
        0
      ],
      "end_point": [
        343,
        1
      ],
      "strings": []
    },
    "next_file_name": {
      "start_point": [
        348,
        0
      ],
      "end_point": [
        451,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"output file suffixes exhausted\""
      ]
    },
    "create": {
      "start_point": [
        455,
        0
      ],
      "end_point": [
        531,
        1
      ],
      "strings": [
        "\"creating file %s\\n\"",
        "\"failed to stat %s\"",
        "\"%s would overwrite input; aborting\"",
        "\"%s: error truncating\"",
        "\"SHELL\"",
        "\"/bin/sh\"",
        "\"FILE\"",
        "\"failed to set FILE environment variable\"",
        "\"executing with FILE=%s\\n\"",
        "\"failed to create pipe\"",
        "\"closing prior pipe\"",
        "\"closing output pipe\"",
        "\"moving input pipe\"",
        "\"closing input pipe\"",
        "\"-c\"",
        "\"failed to run command: \\\"%s -c %s\\\"\"",
        "\"fork system call failed\"",
        "\"failed to close input pipe\""
      ]
    },
    "closeout": {
      "start_point": [
        536,
        0
      ],
      "end_point": [
        587,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s\"",
        "\"waiting for child process\"",
        "\"%d\"",
        "\"with FILE=%s, signal %s from command: %s\"",
        "\"with FILE=%s, exit %d from command: %s\"",
        "\"unknown status from command (0x%X)\""
      ]
    },
    "cwrite": {
      "start_point": [
        594,
        0
      ],
      "end_point": [
        616,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s\""
      ]
    },
    "bytes_split": {
      "start_point": [
        622,
        0
      ],
      "end_point": [
        694,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "lines_split": {
      "start_point": [
        699,
        0
      ],
      "end_point": [
        740,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "line_bytes_split": {
      "start_point": [
        746,
        0
      ],
      "end_point": [
        850,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "lines_chunk_split": {
      "start_point": [
        860,
        0
      ],
      "end_point": [
        979,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s\"",
        "\"%s\"",
        "\"write error\""
      ]
    },
    "bytes_chunk_extract": {
      "start_point": [
        983,
        0
      ],
      "end_point": [
        1029,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s\"",
        "\"%s\"",
        "\"-\""
      ]
    },
    "ofile_open": {
      "start_point": [
        1050,
        0
      ],
      "end_point": [
        1119,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s\"",
        "\"%s\"",
        "\"a\"",
        "\"%s\""
      ]
    },
    "lines_rr": {
      "start_point": [
        1126,
        0
      ],
      "end_point": [
        1267,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s\"",
        "\"write error\"",
        "\"%s\"",
        "\"write error\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\""
      ]
    },
    "parse_chunk": {
      "start_point": [
        1280,
        0
      ],
      "end_point": [
        1291,
        1
      ],
      "strings": [
        "\"\"",
        "\"invalid number of chunks\"",
        "\"\"",
        "\"invalid chunk number\""
      ]
    },
    "main": {
      "start_point": [
        1294,
        0
      ],
      "end_point": [
        1666,
        1
      ],
      "strings": [
        "\"bEGKkMmPTYZ0\"",
        "\"\"",
        "\"-\"",
        "\"x\"",
        "\"0123456789C:a:b:del:n:t:ux\"",
        "\"\"",
        "\"invalid suffix length\"",
        "\"invalid suffix %s, contains directory separator\"",
        "\"invalid number of bytes\"",
        "\"\"",
        "\"invalid number of lines\"",
        "\"invalid number of bytes\"",
        "\"r/\"",
        "\"l/\"",
        "\"\"",
        "\"invalid number of chunks\"",
        "\"empty record separator\"",
        "\"\\\\0\"",
        "\"multi-character separator %s\"",
        "\"multiple separator characters specified\"",
        "\"line count option -%s%c... is too large\"",
        "\"0123456789\"",
        "\"0123456789abcdef\"",
        "\"%s: invalid start value for numerical suffix\"",
        "\"%s: invalid start value for hexadecimal suffix\"",
        "\"invalid IO block size\"",
        "\"--filter does not process a chunk extracted to stdout\"",
        "\"%s: %s\"",
        "\"invalid number of lines\"",
        "\"0\"",
        "\"extra operand %s\"",
        "\"numerical suffix start value is too large \"",
        "\"for the suffix length\"",
        "\"-\"",
        "\"cannot open %s for reading\"",
        "\"%s\"",
        "\"%s: cannot determine file size\"",
        "\"%s: %s\"",
        "\"invalid number of chunks\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/stat.c": {
    "ATTRIBUTE_WARN_UNUSED_RESULT": [
      {
        "start_point": [
          102,
          0
        ],
        "end_point": [
          118,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          589,
          0
        ],
        "end_point": [
          614,
          1
        ],
        "strings": [
          "\"-MM-DD HH:MM:SS.NNNNNNNNN +\"",
          "\"TZ\"",
          "\"%Y-%m-%d %H:%M:%S.%N %z\"",
          "\"%s.%09d\""
        ]
      },
      {
        "start_point": [
          1225,
          0
        ],
        "end_point": [
          1339,
          1
        ],
        "strings": [
          "\"%s: invalid directive\"",
          "\"warning: backslash at end of format\""
        ]
      },
      {
        "start_point": [
          1342,
          0
        ],
        "end_point": [
          1363,
          1
        ],
        "strings": [
          "\"-\"",
          "\"using %s to denote standard input does not work\"",
          "\" in file system mode\"",
          "\"cannot read file system information for %s\""
        ]
      },
      {
        "start_point": [
          1366,
          0
        ],
        "end_point": [
          1397,
          1
        ],
        "strings": [
          "\"-\"",
          "\"cannot stat standard input\"",
          "\"cannot stat %s\""
        ]
      }
    ],
    "human_fstype": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        578,
        1
      ],
      "strings": [
        "\"aafs\"",
        "\"acfs\"",
        "\"adfs\"",
        "\"affs\"",
        "\"afs\"",
        "\"anon-inode FS\"",
        "\"aufs\"",
        "\"autofs\"",
        "\"balloon-kvm-fs\"",
        "\"befs\"",
        "\"bdevfs\"",
        "\"bfs\"",
        "\"bpf_fs\"",
        "\"binfmt_misc\"",
        "\"btrfs\"",
        "\"btrfs_test\"",
        "\"ceph\"",
        "\"cgroupfs\"",
        "\"cgroup2fs\"",
        "\"cifs\"",
        "\"coda\"",
        "\"coh\"",
        "\"configfs\"",
        "\"cramfs\"",
        "\"cramfs-wend\"",
        "\"daxfs\"",
        "\"debugfs\"",
        "\"devfs\"",
        "\"devpts\"",
        "\"ecryptfs\"",
        "\"efivarfs\"",
        "\"efs\"",
        "\"exofs\"",
        "\"ext\"",
        "\"ext2/ext3\"",
        "\"ext2\"",
        "\"f2fs\"",
        "\"fat\"",
        "\"fhgfs\"",
        "\"fuseblk\"",
        "\"fusectl\"",
        "\"futexfs\"",
        "\"gfs/gfs2\"",
        "\"gpfs\"",
        "\"hfs\"",
        "\"hfs+\"",
        "\"hfsx\"",
        "\"hostfs\"",
        "\"hpfs\"",
        "\"hugetlbfs\"",
        "\"inodefs\"",
        "\"ibrix\"",
        "\"inotifyfs\"",
        "\"isofs\"",
        "\"isofs\"",
        "\"isofs\"",
        "\"jffs\"",
        "\"jffs2\"",
        "\"jfs\"",
        "\"k-afs\"",
        "\"logfs\"",
        "\"lustre\"",
        "\"m1fs\"",
        "\"minix\"",
        "\"minix (30 char.)\"",
        "\"minix v2\"",
        "\"minix v2 (30 char.)\"",
        "\"minix3\"",
        "\"mqueue\"",
        "\"msdos\"",
        "\"novell\"",
        "\"nfs\"",
        "\"nfsd\"",
        "\"nilfs\"",
        "\"nsfs\"",
        "\"ntfs\"",
        "\"openprom\"",
        "\"ocfs2\"",
        "\"overlayfs\"",
        "\"panfs\"",
        "\"pipefs\"",
        "\"prl_fs\"",
        "\"proc\"",
        "\"pstorefs\"",
        "\"qnx4\"",
        "\"qnx6\"",
        "\"ramfs\"",
        "\"rdt\"",
        "\"reiserfs\"",
        "\"romfs\"",
        "\"rpc_pipefs\"",
        "\"securityfs\"",
        "\"selinux\"",
        "\"smackfs\"",
        "\"smb\"",
        "\"smb2\"",
        "\"snfs\"",
        "\"sockfs\"",
        "\"squashfs\"",
        "\"sysfs\"",
        "\"sysv2\"",
        "\"sysv4\"",
        "\"tmpfs\"",
        "\"tracefs\"",
        "\"ubifs\"",
        "\"udf\"",
        "\"ufs\"",
        "\"ufs\"",
        "\"usbdevfs\"",
        "\"v9fs\"",
        "\"vmhgfs\"",
        "\"vxfs\"",
        "\"vzfs\"",
        "\"wslfs\"",
        "\"xenfs\"",
        "\"xenix\"",
        "\"xfs\"",
        "\"xia\"",
        "\"zfs\"",
        "\"zsmallocfs\"",
        "\"ufs\"",
        "\"nfs\"",
        "\"gfs\"",
        "\"lfs\"",
        "\"sysv\"",
        "\"ftp\"",
        "\"tar\"",
        "\"ar\"",
        "\"cpio\"",
        "\"msloss\"",
        "\"cpm\"",
        "\"hfs\"",
        "\"dtfs\"",
        "\"grfs\"",
        "\"term\"",
        "\"dev\"",
        "\"proc\"",
        "\"ifsock\"",
        "\"afs\"",
        "\"dfs\"",
        "\"proc9\"",
        "\"socket\"",
        "\"misc\"",
        "\"ext2/ext3\"",
        "\"http\"",
        "\"memfs\"",
        "\"iso9660\"",
        "\"UNKNOWN (0x%lx)\"",
        "\"UNKNOWN (0x%lx)\""
      ]
    },
    "human_access": {
      "start_point": [
        580,
        0
      ],
      "end_point": [
        587,
        1
      ],
      "strings": []
    },
    "make_format": {
      "start_point": [
        620,
        0
      ],
      "end_point": [
        633,
        1
      ],
      "strings": []
    },
    "out_string": {
      "start_point": [
        635,
        0
      ],
      "end_point": [
        640,
        1
      ],
      "strings": [
        "\"-\"",
        "\"s\""
      ]
    },
    "out_int": {
      "start_point": [
        641,
        0
      ],
      "end_point": [
        646,
        1
      ],
      "strings": [
        "\"'-+ 0\""
      ]
    },
    "out_uint": {
      "start_point": [
        647,
        0
      ],
      "end_point": [
        652,
        1
      ],
      "strings": [
        "\"'-0\""
      ]
    },
    "out_uint_o": {
      "start_point": [
        653,
        0
      ],
      "end_point": [
        658,
        1
      ],
      "strings": [
        "\"-#0\""
      ]
    },
    "out_uint_x": {
      "start_point": [
        659,
        0
      ],
      "end_point": [
        664,
        1
      ],
      "strings": [
        "\"-#0\""
      ]
    },
    "out_minus_zero": {
      "start_point": [
        665,
        0
      ],
      "end_point": [
        670,
        1
      ],
      "strings": [
        "\"'-+ 0\"",
        "\".0f\""
      ]
    },
    "out_epoch_sec": {
      "start_point": [
        674,
        0
      ],
      "end_point": [
        778,
        1
      ],
      "strings": [
        "\"%d\"",
        "\"%s%.*d%-*.*d\""
      ]
    },
    "out_file_context": {
      "start_point": [
        782,
        0
      ],
      "end_point": [
        802,
        1
      ],
      "strings": [
        "\"failed to get security context of %s\"",
        "\"s\"",
        "\"?\""
      ]
    },
    "print_statfs": {
      "start_point": [
        805,
        0
      ],
      "end_point": [
        888,
        1
      ],
      "strings": []
    },
    "find_bind_mount": {
      "start_point": [
        893,
        0
      ],
      "end_point": [
        929,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"cannot read table of mounted file systems\""
      ]
    },
    "out_mount_point": {
      "start_point": [
        932,
        0
      ],
      "end_point": [
        978,
        1
      ],
      "strings": [
        "\"?\"",
        "\"failed to canonicalize %s\""
      ]
    },
    "get_birthtime": {
      "start_point": [
        980,
        0
      ],
      "end_point": [
        1010,
        1
      ],
      "strings": []
    },
    "neg_to_zero": {
      "start_point": [
        1013,
        0
      ],
      "end_point": [
        1020,
        1
      ],
      "strings": []
    },
    "getenv_quoting_style": {
      "start_point": [
        1025,
        0
      ],
      "end_point": [
        1043,
        1
      ],
      "strings": [
        "\"QUOTING_STYLE\"",
        "\"ignoring invalid value of environment \"",
        "\"variable QUOTING_STYLE: %s\""
      ]
    },
    "print_stat": {
      "start_point": [
        1049,
        0
      ],
      "end_point": [
        1179,
        1
      ],
      "strings": [
        "\"cannot read symbolic link %s\"",
        "\" -> \"",
        "\"UNKNOWN\"",
        "\"UNKNOWN\"",
        "\"-\""
      ]
    },
    "print_esc_char": {
      "start_point": [
        1183,
        0
      ],
      "end_point": [
        1220,
        1
      ],
      "strings": [
        "\"warning: unrecognized escape '\\\\%c'\""
      ]
    },
    "default_format": {
      "start_point": [
        1401,
        0
      ],
      "end_point": [
        1487,
        1
      ],
      "strings": [
        "\"  File: \\\"%n\\\"\\n\"",
        "\"    ID: %-8i Namelen: %-7l Type: %T\\n\"",
        "\"Block size: %-10s Fundamental block size: %S\\n\"",
        "\"Blocks: Total: %-10b Free: %-10f Available: %a\\n\"",
        "\"Inodes: Total: %-10c Free: %d\\n\"",
        "\"\\\n  File: %N\\n\\\n  Size: %-10s\\tBlocks: %-10b IO Block: %-6o %F\\n\\\n\"",
        "\"%s%s\"",
        "\"\\\n\"",
        "\"Device: %Dh/%dd\\tInode: %-10i  Links: %-5h Device type: %t,%T\\n\\\n\"",
        "\"%s%s\"",
        "\"\\\n\"",
        "\"Device: %Dh/%dd\\tInode: %-10i  Links: %h\\n\\\n\"",
        "\"%s%s\"",
        "\"\\\n\"",
        "\"Access: (%04a/%10.10A)  Uid: (%5u/%8U)   Gid: (%5g/%8G)\\n\\\n\"",
        "\"%s%s\"",
        "\"Context: %C\\n\"",
        "\"%s%s\"",
        "\"Access: %x\\n\"",
        "\"Modify: %y\\n\"",
        "\"Change: %z\\n\"",
        "\" Birth: %w\\n\""
      ]
    },
    "usage": {
      "start_point": [
        1489,
        0
      ],
      "end_point": [
        1599,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... FILE...\\n\"",
        "\"\\\nDisplay file or file system status.\\n\\\n\"",
        "\"\\\n  -L, --dereference     follow links\\n\\\n  -f, --file-system     display file system status instead of file status\\n\\\n\"",
        "\"\\\n  -c  --format=FORMAT   use the specified FORMAT instead of the default;\\n\\\n                          output a newline after each use of FORMAT\\n\\\n      --printf=FORMAT   like --format, but interpret backslash escapes,\\n\\\n                          and do not output a mandatory trailing newline;\\n\\\n                          if you want a newline, include \\\\n in FORMAT\\n\\\n  -t, --terse           print the information in terse form\\n\\\n\"",
        "\"\\n\\\nThe valid format sequences for files (without --file-system):\\n\\\n\\n\\\n  %a   access rights in octal (note '#' and '0' printf flags)\\n\\\n  %A   access rights in human readable form\\n\\\n  %b   number of blocks allocated (see %B)\\n\\\n  %B   the size in bytes of each block reported by %b\\n\\\n  %C   SELinux security context string\\n\\\n\"",
        "\"\\\n  %d   device number in decimal\\n\\\n  %D   device number in hex\\n\\\n  %f   raw mode in hex\\n\\\n  %F   file type\\n\\\n  %g   group ID of owner\\n\\\n  %G   group name of owner\\n\\\n\"",
        "\"\\\n  %h   number of hard links\\n\\\n  %i   inode number\\n\\\n  %m   mount point\\n\\\n  %n   file name\\n\\\n  %N   quoted file name with dereference if symbolic link\\n\\\n  %o   optimal I/O transfer size hint\\n\\\n  %s   total size, in bytes\\n\\\n  %t   major device type in hex, for character/block device special files\\n\\\n  %T   minor device type in hex, for character/block device special files\\n\\\n\"",
        "\"\\\n  %u   user ID of owner\\n\\\n  %U   user name of owner\\n\\\n  %w   time of file birth, human-readable; - if unknown\\n\\\n  %W   time of file birth, seconds since Epoch; 0 if unknown\\n\\\n  %x   time of last access, human-readable\\n\\\n  %X   time of last access, seconds since Epoch\\n\\\n  %y   time of last data modification, human-readable\\n\\\n  %Y   time of last data modification, seconds since Epoch\\n\\\n  %z   time of last status change, human-readable\\n\\\n  %Z   time of last status change, seconds since Epoch\\n\\\n\\n\\\n\"",
        "\"\\\nValid format sequences for file systems:\\n\\\n\\n\\\n  %a   free blocks available to non-superuser\\n\\\n  %b   total data blocks in file system\\n\\\n  %c   total file nodes in file system\\n\\\n  %d   free file nodes in file system\\n\\\n  %f   free blocks in file system\\n\\\n\"",
        "\"\\\n  %i   file system ID in hex\\n\\\n  %l   maximum length of filenames\\n\\\n  %n   file name\\n\\\n  %s   block size (for faster transfers)\\n\\\n  %S   fundamental block size (for block counts)\\n\\\n  %t   file system type in hex\\n\\\n  %T   file system type in human readable form\\n\\\n\"",
        "\"\\n\\\n--terse is equivalent to the following FORMAT:\\n\\\n    %s\\\n\"",
        "\"\\\n--terse --file-system is equivalent to the following FORMAT:\\n\\\n    %s\\\n\""
      ]
    },
    "main": {
      "start_point": [
        1601,
        0
      ],
      "end_point": [
        1684,
        1
      ],
      "strings": [
        "\"\"",
        "\".\"",
        "\"c:fLt\"",
        "\"\"",
        "\"\\n\"",
        "\"missing operand\"",
        "\"%N\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/stdbuf.c": {
    "parse_size": {
      "start_point": [
        64,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": [
        "\"EGkKMPTYZ0\""
      ]
    },
    "usage": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": [
        "\"Usage: %s OPTION... COMMAND\\n\"",
        "\"\\\nRun COMMAND, with modified buffering operations for its standard streams.\\n\\\n\"",
        "\"\\\n  -i, --input=MODE   adjust standard input stream buffering\\n\\\n  -o, --output=MODE  adjust standard output stream buffering\\n\\\n  -e, --error=MODE   adjust standard error stream buffering\\n\\\n\"",
        "\"\\n\\\nIf MODE is 'L' the corresponding stream will be line buffered.\\n\\\nThis option is invalid with standard input.\\n\"",
        "\"\\n\\\nIf MODE is '0' the corresponding stream will be unbuffered.\\n\\\n\"",
        "\"\\n\\\nOtherwise MODE is a number which may be followed by one of the following:\\n\\\nKB 1000, K 1024, MB 1000*1000, M 1024*1024, and so on for G, T, P, E, Z, Y.\\n\\\nIn this case the corresponding stream will be fully buffered with the buffer\\n\\\nsize set to MODE bytes.\\n\\\n\"",
        "\"\\n\\\nNOTE: If COMMAND adjusts the buffering of its standard streams ('tee' does\\n\\\nfor example) then that will override corresponding changes by 'stdbuf'.\\n\\\nAlso some filters (like 'dd' and 'cat' etc.) don't use streams for I/O,\\n\\\nand are thus unaffected by 'stdbuf' settings.\\n\\\n\""
      ]
    },
    "set_program_path": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"/proc/self/exe\"",
        "\"PATH\"",
        "\":\"",
        "\":\""
      ]
    },
    "optc_to_fileno": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    },
    "set_LD_PRELOAD": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        268,
        1
      ],
      "strings": [
        "\"DYLD_INSERT_LIBRARIES\"",
        "\"LD_PRELOAD\"",
        "\"%s/%s\"",
        "\"failed to find %s\"",
        "\"%s=%s:%s\"",
        "\"%s=%s\"",
        "\"DYLD_FORCE_FLAT_NAMESPACE\"",
        "\"y\"",
        "\"failed to update the environment with %s\""
      ]
    },
    "set_libstdbuf_options": {
      "start_point": [
        273,
        0
      ],
      "end_point": [
        307,
        1
      ],
      "strings": [
        "\"%s%c=L\"",
        "\"_STDBUF_\"",
        "\"%s%c=%\"",
        "\"_STDBUF_\"",
        "\"failed to update the environment with %s\""
      ]
    },
    "main": {
      "start_point": [
        309,
        0
      ],
      "end_point": [
        392,
        1
      ],
      "strings": [
        "\"\"",
        "\"+i:o:e:\"",
        "\"line buffering stdin is meaningless\"",
        "\"L\"",
        "\"invalid mode %s\"",
        "\"missing operand\"",
        "\"you must specify a buffering mode option\"",
        "\"failed to run command %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/stty.c": {
    "wrapf": {
      "start_point": [
        490,
        0
      ],
      "end_point": [
        521,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        523,
        0
      ],
      "end_point": [
        1077,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [-F DEVICE | --file=DEVICE] [SETTING]...\\n\\\n  or:  %s [-F DEVICE | --file=DEVICE] [-a|--all]\\n\\\n  or:  %s [-F DEVICE | --file=DEVICE] [-g|--save]\\n\\\n\"",
        "\"\\\nPrint or change terminal characteristics.\\n\\\n\"",
        "\"\\\n  -a, --all          print all current settings in human-readable form\\n\\\n  -g, --save         print all current settings in a stty-readable form\\n\\\n  -F, --file=DEVICE  open and use the specified DEVICE instead of stdin\\n\\\n\"",
        "\"\\\n\\n\\\nOptional - before SETTING indicates negation.  An * marks non-POSIX\\n\\\nsettings.  The underlying system defines which settings are available.\\n\\\n\"",
        "\"\\\n\\n\\\nSpecial characters:\\n\"",
        "\"\\\n * discard CHAR  CHAR will toggle discarding of output\\n\\\n\"",
        "\"\\\n * dsusp CHAR    CHAR will send a terminal stop signal once input flushed\\n\\\n\"",
        "\"\\\n   eof CHAR      CHAR will send an end of file (terminate the input)\\n\\\n   eol CHAR      CHAR will end the line\\n\\\n\"",
        "\"\\\n * eol2 CHAR     alternate CHAR for ending the line\\n\\\n\"",
        "\"\\\n   erase CHAR    CHAR will erase the last character typed\\n\\\n   intr CHAR     CHAR will send an interrupt signal\\n\\\n   kill CHAR     CHAR will erase the current line\\n\\\n\"",
        "\"\\\n * lnext CHAR    CHAR will enter the next character quoted\\n\\\n\"",
        "\"\\\n * status CHAR   CHAR will send an info signal\\n\\\n\"",
        "\"\\\n   quit CHAR     CHAR will send a quit signal\\n\\\n\"",
        "\"\\\n * rprnt CHAR    CHAR will redraw the current line\\n\\\n\"",
        "\"\\\n   start CHAR    CHAR will restart the output after stopping it\\n\\\n   stop CHAR     CHAR will stop the output\\n\\\n   susp CHAR     CHAR will send a terminal stop signal\\n\\\n\"",
        "\"\\\n * swtch CHAR    CHAR will switch to a different shell layer\\n\\\n\"",
        "\"\\\n * werase CHAR   CHAR will erase the last word typed\\n\\\n\"",
        "\"\\\n\\n\\\nSpecial settings:\\n\\\n   N             set the input and output speeds to N bauds\\n\\\n\"",
        "\"\\\n * cols N        tell the kernel that the terminal has N columns\\n\\\n * columns N     same as cols N\\n\\\n\"",
        "\"\\\n * [-]drain      wait for transmission before applying settings (%s by default)\\\n\\n\"",
        "\"on\"",
        "\"off\"",
        "\"\\\n   ispeed N      set the input speed to N\\n\\\n\"",
        "\"\\\n * line N        use line discipline N\\n\\\n\"",
        "\"\\\n   min N         with -icanon, set N characters minimum for a completed read\\n\\\n   ospeed N      set the output speed to N\\n\\\n\"",
        "\"\\\n * rows N        tell the kernel that the terminal has N rows\\n\\\n * size          print the number of rows and columns according to the kernel\\n\\\n\"",
        "\"\\\n   speed         print the terminal speed\\n\\\n   time N        with -icanon, set read timeout of N tenths of a second\\n\\\n\"",
        "\"\\\n\\n\\\nControl settings:\\n\\\n   [-]clocal     disable modem control signals\\n\\\n   [-]cread      allow input to be received\\n\\\n\"",
        "\"\\\n * [-]crtscts    enable RTS/CTS handshaking\\n\\\n\"",
        "\"\\\n * [-]cdtrdsr    enable DTR/DSR handshaking\\n\\\n\"",
        "\"\\\n   csN           set character size to N bits, N in [5..8]\\n\\\n\"",
        "\"\\\n   [-]cstopb     use two stop bits per character (one with '-')\\n\\\n   [-]hup        send a hangup signal when the last process closes the tty\\n\\\n   [-]hupcl      same as [-]hup\\n\\\n   [-]parenb     generate parity bit in output and expect parity bit in input\\n\\\n   [-]parodd     set odd parity (or even parity with '-')\\n\\\n\"",
        "\"\\\n * [-]cmspar     use \\\"stick\\\" (mark/space) parity\\n\\\n\"",
        "\"\\\n\\n\\\nInput settings:\\n\\\n   [-]brkint     breaks cause an interrupt signal\\n\\\n   [-]icrnl      translate carriage return to newline\\n\\\n   [-]ignbrk     ignore break characters\\n\\\n   [-]igncr      ignore carriage return\\n\\\n   [-]ignpar     ignore characters with parity errors\\n\\\n\"",
        "\"\\\n * [-]imaxbel    beep and do not flush a full input buffer on a character\\n\\\n\"",
        "\"\\\n   [-]inlcr      translate newline to carriage return\\n\\\n   [-]inpck      enable input parity checking\\n\\\n   [-]istrip     clear high (8th) bit of input characters\\n\\\n\"",
        "\"\\\n * [-]iutf8      assume input characters are UTF-8 encoded\\n\\\n\"",
        "\"\\\n * [-]iuclc      translate uppercase characters to lowercase\\n\\\n\"",
        "\"\\\n * [-]ixany      let any character restart output, not only start character\\n\\\n\"",
        "\"\\\n   [-]ixoff      enable sending of start/stop characters\\n\\\n   [-]ixon       enable XON/XOFF flow control\\n\\\n   [-]parmrk     mark parity errors (with a 255-0-character sequence)\\n\\\n   [-]tandem     same as [-]ixoff\\n\\\n\"",
        "\"\\\n\\n\\\nOutput settings:\\n\\\n\"",
        "\"\\\n * bsN           backspace delay style, N in [0..1]\\n\\\n\"",
        "\"\\\n * crN           carriage return delay style, N in [0..3]\\n\\\n\"",
        "\"\\\n * ffN           form feed delay style, N in [0..1]\\n\\\n\"",
        "\"\\\n * nlN           newline delay style, N in [0..1]\\n\\\n\"",
        "\"\\\n * [-]ocrnl      translate carriage return to newline\\n\\\n\"",
        "\"\\\n * [-]ofdel      use delete characters for fill instead of NUL characters\\n\\\n\"",
        "\"\\\n * [-]ofill      use fill (padding) characters instead of timing for delays\\n\\\n\"",
        "\"\\\n * [-]olcuc      translate lowercase characters to uppercase\\n\\\n\"",
        "\"\\\n * [-]onlcr      translate newline to carriage return-newline\\n\\\n\"",
        "\"\\\n * [-]onlret     newline performs a carriage return\\n\\\n\"",
        "\"\\\n * [-]onocr      do not print carriage returns in the first column\\n\\\n\"",
        "\"\\\n   [-]opost      postprocess output\\n\\\n\"",
        "\"\\\n * tabN          horizontal tab delay style, N in [0..3]\\n\\\n * tabs          same as tab0\\n\\\n * -tabs         same as tab3\\n\\\n\"",
        "\"\\\n * vtN           vertical tab delay style, N in [0..1]\\n\\\n\"",
        "\"\\\n\\n\\\nLocal settings:\\n\\\n   [-]crterase   echo erase characters as backspace-space-backspace\\n\\\n\"",
        "\"\\\n * crtkill       kill all line by obeying the echoprt and echoe settings\\n\\\n * -crtkill      kill all line by obeying the echoctl and echok settings\\n\\\n\"",
        "\"\\\n * [-]ctlecho    echo control characters in hat notation ('^c')\\n\\\n\"",
        "\"\\\n   [-]echo       echo input characters\\n\\\n\"",
        "\"\\\n * [-]echoctl    same as [-]ctlecho\\n\\\n\"",
        "\"\\\n   [-]echoe      same as [-]crterase\\n\\\n   [-]echok      echo a newline after a kill character\\n\\\n\"",
        "\"\\\n * [-]echoke     same as [-]crtkill\\n\\\n\"",
        "\"\\\n   [-]echonl     echo newline even if not echoing other characters\\n\\\n\"",
        "\"\\\n * [-]echoprt    echo erased characters backward, between '\\\\' and '/'\\n\\\n\"",
        "\"\\\n * [-]extproc    enable \\\"LINEMODE\\\"; useful with high latency links\\n\\\n\"",
        "\"\\\n * [-]flusho     discard output\\n\\\n\"",
        "\"\\\n   [-]icanon     enable special characters: %s\\n\\\n   [-]iexten     enable non-POSIX special characters\\n\\\n\"",
        "\"erase, kill\"",
        "\", werase\"",
        "\", rprnt\"",
        "\"\\\n   [-]isig       enable interrupt, quit, and suspend special characters\\n\\\n   [-]noflsh     disable flushing after interrupt and quit special characters\\n\\\n\"",
        "\"\\\n * [-]prterase   same as [-]echoprt\\n\\\n\"",
        "\"\\\n * [-]tostop     stop background jobs that try to write to the terminal\\n\\\n\"",
        "\"\\\n * [-]xcase      with icanon, escape with '\\\\' for uppercase characters\\n\\\n\"",
        "\"\\\n\\n\\\nCombination settings:\\n\\\n\"",
        "\"\\\n * [-]LCASE      same as [-]lcase\\n\\\n\"",
        "\"\\\n   cbreak        same as -icanon\\n\\\n   -cbreak       same as icanon\\n\\\n\"",
        "\"\\\n   cooked        same as brkint ignpar istrip icrnl ixon opost isig\\n\\\n                 icanon, eof and eol characters to their default values\\n\\\n   -cooked       same as raw\\n\\\n\"",
        "\"\\\n   crt           same as %s\\n\\\n\"",
        "\"echoe\"",
        "\" echoctl\"",
        "\" echoke\"",
        "\"\\\n   dec           same as %s intr ^c erase 0177\\n\\\n                 kill ^u\\n\\\n\"",
        "\"echoe\"",
        "\" echoctl\"",
        "\" echoke\"",
        "\" -ixany\"",
        "\"\\\n * [-]decctlq    same as [-]ixany\\n\\\n\"",
        "\"\\\n   ek            erase and kill characters to their default values\\n\\\n   evenp         same as parenb -parodd cs7\\n\\\n   -evenp        same as -parenb cs8\\n\\\n\"",
        "\"\\\n * [-]lcase      same as xcase iuclc olcuc\\n\\\n\"",
        "\"\\\n   litout        same as -parenb -istrip -opost cs8\\n\\\n   -litout       same as parenb istrip opost cs7\\n\\\n\"",
        "\"\\\n   nl            same as %s\\n\\\n   -nl           same as %s\\n\\\n\"",
        "\"-icrnl\"",
        "\" -onlcr\"",
        "\"icrnl -inlcr -igncr\"",
        "\" onlcr\"",
        "\" -ocrnl\"",
        "\" -onlret\"",
        "\"\\\n   oddp          same as parenb parodd cs7\\n\\\n   -oddp         same as -parenb cs8\\n\\\n   [-]parity     same as [-]evenp\\n\\\n   pass8         same as -parenb -istrip cs8\\n\\\n   -pass8        same as parenb istrip cs7\\n\\\n\"",
        "\"\\\n   raw           same as -ignbrk -brkint -ignpar -parmrk -inpck -istrip\\n\\\n                 -inlcr -igncr -icrnl -ixon -ixoff -icanon -opost\\n\\\n                 -isig%s min 1 time 0\\n\\\n   -raw          same as cooked\\n\\\n\"",
        "\" -iuclc\"",
        "\" -ixany\"",
        "\" -imaxbel\"",
        "\" -xcase\"",
        "\"\\\n   sane          same as cread -ignbrk brkint -inlcr -igncr icrnl\\n\\\n                 icanon iexten echo echoe echok -echonl -noflsh\\n\\\n                 %s\\n\\\n                 %s\\n\\\n                 %s,\\n\\\n                 all special characters to their default values\\n\\\n\"",
        "\"-ixoff\"",
        "\" -iutf8\"",
        "\" -iuclc\"",
        "\" -ixany\"",
        "\" imaxbel\"",
        "\" -xcase\"",
        "\" -olcuc\"",
        "\" -ocrnl\"",
        "\"opost\"",
        "\" -ofill\"",
        "\" onlcr\"",
        "\" -onocr\"",
        "\" -onlret\"",
        "\" nl0\"",
        "\" cr0\"",
        "\" tab0\"",
        "\" bs0\"",
        "\" vt0\"",
        "\" ff0\"",
        "\"isig\"",
        "\" -tostop\"",
        "\" -ofdel\"",
        "\" -echoprt\"",
        "\" echoctl\"",
        "\" echoke\"",
        "\" -extproc\"",
        "\" -flusho\"",
        "\"\\\n\\n\\\nHandle the tty line connected to standard input.  Without arguments,\\n\\\nprints baud rate, line discipline, and deviations from stty sane.  In\\n\\\nsettings, CHAR is taken literally, or coded as in ^c, 0x37, 0177 or\\n\\\n127; special values ^- or undef used to disable special characters.\\n\\\n\""
      ]
    },
    "apply_settings": {
      "start_point": [
        1085,
        0
      ],
      "end_point": [
        1264,
        1
      ],
      "strings": [
        "\"drain\"",
        "\"invalid argument %s\"",
        "\"ispeed\"",
        "\"ospeed\"",
        "\"%s: error setting %s\"",
        "\"invalid line discipline %s\"",
        "\"invalid argument %s\""
      ]
    },
    "main": {
      "start_point": [
        1266,
        0
      ],
      "end_point": [
        1462,
        1
      ],
      "strings": [
        "\"\"",
        "\"-agF:\"",
        "\"only one device may be specified\"",
        "\"-drain\"",
        "\"drain\"",
        "\"the options for verbose and stty-readable output styles are\\n\"",
        "\"mutually exclusive\"",
        "\"when specifying an output style, modes may not be set\"",
        "\"standard input\"",
        "\"%s\"",
        "\"%s: couldn't reset non-blocking mode\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s: unable to perform all requested operations\"",
        "\"new_mode: mode\\n\"",
        "\"0x%02x: 0x%02x\\n\""
      ]
    },
    "set_mode": {
      "start_point": [
        1467,
        0
      ],
      "end_point": [
        1671,
        1
      ],
      "strings": [
        "\"evenp\"",
        "\"parity\"",
        "\"oddp\"",
        "\"nl\"",
        "\"ek\"",
        "\"sane\"",
        "\"cbreak\"",
        "\"pass8\"",
        "\"litout\"",
        "\"raw\"",
        "\"cooked\""
      ]
    },
    "set_control_char": {
      "start_point": [
        1673,
        0
      ],
      "end_point": [
        1695,
        1
      ],
      "strings": [
        "\"min\"",
        "\"time\"",
        "\"^-\"",
        "\"undef\""
      ]
    },
    "set_speed": {
      "start_point": [
        1697,
        0
      ],
      "end_point": [
        1707,
        1
      ],
      "strings": []
    },
    "get_win_size": {
      "start_point": [
        1711,
        0
      ],
      "end_point": [
        1716,
        1
      ],
      "strings": []
    },
    "set_window_size": {
      "start_point": [
        1718,
        0
      ],
      "end_point": [
        1778,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\""
      ]
    },
    "display_window_size": {
      "start_point": [
        1780,
        0
      ],
      "end_point": [
        1801,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"%s: no size information for this device\"",
        "\"rows %d; columns %d;\"",
        "\"%d %d\\n\""
      ]
    },
    "screen_columns": {
      "start_point": [
        1804,
        0
      ],
      "end_point": [
        1830,
        1
      ],
      "strings": [
        "\"COLUMNS\"",
        "\"\""
      ]
    },
    "mode_type_flag": {
      "start_point": [
        1832,
        0
      ],
      "end_point": [
        1855,
        1
      ],
      "strings": []
    },
    "display_settings": {
      "start_point": [
        1857,
        0
      ],
      "end_point": [
        1875,
        1
      ],
      "strings": []
    },
    "display_changed": {
      "start_point": [
        1877,
        0
      ],
      "end_point": [
        1972,
        1
      ],
      "strings": [
        "\"line = %d;\"",
        "\"min\"",
        "\"flush\"",
        "\"swtch\"",
        "\"eof\"",
        "\"eol\"",
        "\"%s = %s;\"",
        "\"min = %lu; time = %lu;\\n\"",
        "\"%s\"",
        "\"-%s\""
      ]
    },
    "display_speed": {
      "start_point": [
        2047,
        0
      ],
      "end_point": [
        2059,
        1
      ],
      "strings": [
        "\"speed %lu baud;\"",
        "\"%lu\\n\"",
        "\"ispeed %lu baud; ospeed %lu baud;\"",
        "\"%lu %lu\\n\""
      ]
    },
    "display_recoverable": {
      "start_point": [
        2061,
        0
      ],
      "end_point": [
        2072,
        1
      ],
      "strings": [
        "\"%lx:%lx:%lx:%lx\"",
        "\":%lx\""
      ]
    },
    "strtoul_tcflag_t": {
      "start_point": [
        2075,
        0
      ],
      "end_point": [
        2086,
        1
      ],
      "strings": []
    },
    "strtoul_cc_t": {
      "start_point": [
        2089,
        0
      ],
      "end_point": [
        2099,
        1
      ],
      "strings": []
    },
    "recover_mode": {
      "start_point": [
        2103,
        0
      ],
      "end_point": [
        2131,
        1
      ],
      "strings": []
    },
    "string_to_baud": {
      "start_point": [
        2209,
        0
      ],
      "end_point": [
        2216,
        1
      ],
      "strings": []
    },
    "baud_to_value": {
      "start_point": [
        2218,
        0
      ],
      "end_point": [
        2225,
        1
      ],
      "strings": []
    },
    "sane_mode": {
      "start_point": [
        2227,
        0
      ],
      "end_point": [
        2260,
        1
      ],
      "strings": [
        "\"min\""
      ]
    },
    "visible": {
      "start_point": [
        2265,
        0
      ],
      "end_point": [
        2311,
        1
      ],
      "strings": [
        "\"<undef>\""
      ]
    },
    "integer_arg": {
      "start_point": [
        2317,
        0
      ],
      "end_point": [
        2321,
        1
      ],
      "strings": [
        "\"bB\"",
        "\"invalid integer argument\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/sum.c": {
    "usage": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n\"",
        "\"\\\nPrint checksum and block counts for each FILE.\\n\\\n\"",
        "\"\\\n\\n\\\n  -r              use BSD sum algorithm, use 1K blocks\\n\\\n  -s, --sysv      use System V sum algorithm, use 512 bytes blocks\\n\\\n\""
      ]
    },
    "bsd_sum_file": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        143,
        1
      ],
      "strings": [
        "\"-\"",
        "\"rb\"",
        "\"r\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\"",
        "\"%05d %5s\"",
        "\" %s\""
      ]
    },
    "sysv_sum_file": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": [
        "\"-\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\"",
        "\"%d %s\"",
        "\" %s\""
      ]
    },
    "main": {
      "start_point": [
        219,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": [
        "\"\"",
        "\"rs\"",
        "\"-\"",
        "\"%s\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/sync.c": {
    "usage": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION] [FILE]...\\n\"",
        "\"\\\nSynchronize cached writes to persistent storage\\n\\\n\\n\\\nIf one or more files are specified, sync only them,\\n\\\nor their containing file systems.\\n\\\n\\n\\\n\"",
        "\"\\\n  -d, --data             sync only file data, no unneeded metadata\\n\\\n\"",
        "\"\\\n  -f, --file-system      sync the file systems that contain the files\\n\\\n\""
      ]
    },
    "sync_arg": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": [
        "\"error opening %s\"",
        "\"couldn't reset non-blocking mode %s\"",
        "\"invalid sync_mode\"",
        "\"error syncing %s\"",
        "\"failed to close %s\""
      ]
    },
    "main": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        236,
        1
      ],
      "strings": [
        "\"\"",
        "\"df\"",
        "\"cannot specify both --data and --file-system\"",
        "\"--data needs at least one argument\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/system.h": {
    "initialize_exit_failure": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        102,
        1
      ],
      "strings": []
    },
    "to_uchar": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        155,
        61
      ],
      "strings": []
    },
    "field_sep": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        162,
        1
      ],
      "strings": []
    },
    "select_plural": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "dot_or_dotdot": {
      "start_point": [
        263,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "readdir_ignoring_dot_and_dotdot": {
      "start_point": [
        276,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": []
    },
    "is_empty_dir": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        315,
        1
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_CONST": [
      {
        "start_point": [
          467,
          0
        ],
        "end_point": [
          479,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          485,
          0
        ],
        "end_point": [
          489,
          1
        ],
        "strings": []
      }
    ],
    "ptr_align": {
      "start_point": [
        496,
        0
      ],
      "end_point": [
        502,
        1
      ],
      "strings": []
    },
    "_GL_ATTRIBUTE_PURE": {
      "start_point": [
        507,
        0
      ],
      "end_point": [
        553,
        1
      ],
      "strings": []
    },
    "emit_stdin_note": {
      "start_point": [
        576,
        0
      ],
      "end_point": [
        582,
        1
      ],
      "strings": [
        "\"\\n\\\nWith no FILE, or when FILE is -, read standard input.\\n\\\n\""
      ]
    },
    "emit_mandatory_arg_note": {
      "start_point": [
        583,
        0
      ],
      "end_point": [
        589,
        1
      ],
      "strings": [
        "\"\\n\\\nMandatory arguments to long options are mandatory for short options too.\\n\\\n\""
      ]
    },
    "emit_size_note": {
      "start_point": [
        591,
        0
      ],
      "end_point": [
        598,
        1
      ],
      "strings": [
        "\"\\n\\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\n\\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\n\\\n\""
      ]
    },
    "emit_blocksize_note": {
      "start_point": [
        600,
        0
      ],
      "end_point": [
        608,
        1
      ],
      "strings": [
        "\"\\n\\\nDisplay values are in units of the first available SIZE from --block-size,\\n\\\nand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\\n\\\nOtherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).\\n\\\n\""
      ]
    },
    "emit_backup_suffix_note": {
      "start_point": [
        610,
        0
      ],
      "end_point": [
        626,
        1
      ],
      "strings": [
        "\"\\\n\\n\\\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\n\\\nThe version control method may be selected via the --backup option or through\\n\\\nthe VERSION_CONTROL environment variable.  Here are the values:\\n\\\n\\n\\\n\"",
        "\"\\\n  none, off       never make backups (even if --backup is given)\\n\\\n  numbered, t     make numbered backups\\n\\\n  existing, nil   numbered if numbered backups exist, simple otherwise\\n\\\n  simple, never   always make simple backups\\n\\\n\""
      ]
    },
    "emit_ancillary_info": {
      "start_point": [
        628,
        0
      ],
      "end_point": [
        668,
        1
      ],
      "strings": [
        "\"[\"",
        "\"test invocation\"",
        "\"coreutils\"",
        "\"Multi-call invocation\"",
        "\"sha224sum\"",
        "\"sha2 utilities\"",
        "\"sha256sum\"",
        "\"sha2 utilities\"",
        "\"sha384sum\"",
        "\"sha2 utilities\"",
        "\"sha512sum\"",
        "\"sha2 utilities\"",
        "\"\\n%s online help: <%s>\\n\"",
        "\"en_\"",
        "\"Report %s translation bugs to \"",
        "\"<https://translationproject.org/team/>\\n\"",
        "\"Full documentation at: <%s%s>\\n\"",
        "\"or available locally via: info '(coreutils) %s%s'\\n\"",
        "\" invocation\"",
        "\"\""
      ]
    },
    "timetostr": {
      "start_point": [
        684,
        0
      ],
      "end_point": [
        690,
        1
      ],
      "strings": []
    },
    "bad_cast": {
      "start_point": [
        692,
        0
      ],
      "end_point": [
        696,
        1
      ],
      "strings": []
    },
    "usable_st_size": {
      "start_point": [
        699,
        0
      ],
      "end_point": [
        704,
        1
      ],
      "strings": []
    },
    "stzncpy": {
      "start_point": [
        735,
        0
      ],
      "end_point": [
        743,
        1
      ],
      "strings": []
    },
    "se_const": {
      "start_point": [
        753,
        0
      ],
      "end_point": [
        753,
        75
      ],
      "strings": []
    },
    "is_ENOTSUP": {
      "start_point": [
        759,
        0
      ],
      "end_point": [
        763,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/tac-pipe.c": {
    "buf_init_from_stdin": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        124,
        1
      ],
      "strings": [
        "\"read error\""
      ]
    },
    "buf_free": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "line_ptr_decrement": {
      "start_point": [
        134,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": []
    },
    "line_ptr_increment": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "find_bol": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    },
    "print_line": {
      "start_point": [
        219,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": []
    },
    "tac_mem": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/tac.c": {
    "usage": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n\"",
        "\"\\\nWrite each FILE to standard output, last line first.\\n\\\n\"",
        "\"\\\n  -b, --before             attach the separator before instead of after\\n\\\n  -r, --regex              interpret the separator as a regular expression\\n\\\n  -s, --separator=STRING   use STRING as the separator instead of newline\\n\\\n\""
      ]
    },
    "output": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "tac_seekable": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": [
        "\"%s: seek failed\"",
        "\"%s: seek failed\"",
        "\"%s: read error\"",
        "\"record too large\"",
        "\"error in regular expression search\"",
        "\"%s: seek failed\"",
        "\"%s: read error\""
      ]
    },
    "unlink_tempfile": {
      "start_point": [
        398,
        0
      ],
      "end_point": [
        403,
        1
      ],
      "strings": []
    },
    "record_or_unlink_tempfile": [
      {
        "start_point": [
          405,
          0
        ],
        "end_point": [
          414,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          418,
          0
        ],
        "end_point": [
          422,
          1
        ],
        "strings": []
      }
    ],
    "temp_stream": {
      "start_point": [
        429,
        0
      ],
      "end_point": [
        492,
        1
      ],
      "strings": [
        "\"TMPDIR\"",
        "\"tacXXXXXX\"",
        "\"memory exhausted\"",
        "\"failed to create temporary file in %s\"",
        "\"w+b\"",
        "\"w+\"",
        "\"failed to open %s for writing\"",
        "\"failed to rewind stream for %s\""
      ]
    },
    "copy_to_temp": {
      "start_point": [
        498,
        0
      ],
      "end_point": [
        539,
        1
      ],
      "strings": [
        "\"%s: read error\"",
        "\"%s: write error\"",
        "\"%s: write error\""
      ]
    },
    "tac_nonseekable": {
      "start_point": [
        544,
        0
      ],
      "end_point": [
        555,
        1
      ],
      "strings": []
    },
    "tac_file": {
      "start_point": [
        561,
        0
      ],
      "end_point": [
        599,
        1
      ],
      "strings": [
        "\"-\"",
        "\"standard input\"",
        "\"failed to open %s for reading\"",
        "\"%s: read error\""
      ]
    },
    "main": {
      "start_point": [
        601,
        0
      ],
      "end_point": [
        712,
        1
      ],
      "strings": [
        "\"-\"",
        "\"\"",
        "\"\\n\"",
        "\"brs:\"",
        "\"separator cannot be empty\"",
        "\"%s\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/tail.c": {
    "usage": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n\"",
        "\"\\\nPrint the last %d lines of each FILE to standard output.\\n\\\nWith more than one FILE, precede each with a header giving the file name.\\n\\\n\"",
        "\"\\\n  -c, --bytes=[+]NUM       output the last NUM bytes; or use -c +NUM to\\n\\\n                             output starting with byte NUM of each file\\n\\\n\"",
        "\"\\\n  -f, --follow[={name|descriptor}]\\n\\\n                           output appended data as the file grows;\\n\\\n                             an absent option argument means 'descriptor'\\n\\\n  -F                       same as --follow=name --retry\\n\\\n\"",
        "\"\\\n  -n, --lines=[+]NUM       output the last NUM lines, instead of the last %d;\\n\\\n                             or use -n +NUM to output starting with line NUM\\n\\\n      --max-unchanged-stats=N\\n\\\n                           with --follow=name, reopen a FILE which has not\\n\\\n                             changed size after N (default %d) iterations\\n\\\n                             to see if it has been unlinked or renamed\\n\\\n                             (this is the usual case of rotated log files);\\n\\\n                             with inotify, this option is rarely useful\\n\\\n\"",
        "\"\\\n      --pid=PID            with -f, terminate after process ID, PID dies\\n\\\n  -q, --quiet, --silent    never output headers giving file names\\n\\\n      --retry              keep trying to open a file if it is inaccessible\\n\\\n\"",
        "\"\\\n  -s, --sleep-interval=N   with -f, sleep for approximately N seconds\\n\\\n                             (default 1.0) between iterations;\\n\\\n                             with inotify and --pid=P, check process P at\\n\\\n                             least once every N seconds\\n\\\n  -v, --verbose            always output headers giving file names\\n\\\n\"",
        "\"\\\n  -z, --zero-terminated    line delimiter is NUL, not newline\\n\\\n\"",
        "\"\\\n\\n\\\nNUM may have a multiplier suffix:\\n\\\nb 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024,\\n\\\nGB 1000*1000*1000, G 1024*1024*1024, and so on for T, P, E, Z, Y.\\n\\\n\\n\\\n\"",
        "\"\\\nWith --follow (-f), tail defaults to following the file descriptor, which\\n\\\nmeans that even if a tail'ed file is renamed, tail will continue to track\\n\\\nits end.  This default behavior is not desirable when you really want to\\n\\\ntrack the actual name of the file, not the file descriptor (e.g., log\\n\\\nrotation).  Use --follow=name in that case.  That causes tail to track the\\n\\\nnamed file in a way that accommodates renaming, removal and creation.\\n\\\n\""
      ]
    },
    "check_output_alive": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        351,
        1
      ],
      "strings": []
    },
    "valid_file_spec": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        358,
        1
      ],
      "strings": []
    },
    "pretty_name": {
      "start_point": [
        360,
        0
      ],
      "end_point": [
        364,
        1
      ],
      "strings": [
        "\"-\"",
        "\"standard input\""
      ]
    },
    "record_open_fd": {
      "start_point": [
        369,
        0
      ],
      "end_point": [
        383,
        1
      ],
      "strings": []
    },
    "close_fd": {
      "start_point": [
        387,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": [
        "\"closing %s (fd=%d)\""
      ]
    },
    "write_header": {
      "start_point": [
        396,
        0
      ],
      "end_point": [
        403,
        1
      ],
      "strings": [
        "\"%s==> %s <==\\n\"",
        "\"\"",
        "\"\\n\""
      ]
    },
    "xwrite_stdout": {
      "start_point": [
        408,
        0
      ],
      "end_point": [
        417,
        1
      ],
      "strings": [
        "\"error writing %s\"",
        "\"standard output\""
      ]
    },
    "dump_remainder": {
      "start_point": [
        424,
        0
      ],
      "end_point": [
        462,
        1
      ],
      "strings": [
        "\"error reading %s\""
      ]
    },
    "xlseek": {
      "start_point": [
        469,
        0
      ],
      "end_point": [
        499,
        1
      ],
      "strings": [
        "\"%s: cannot seek to offset %s\"",
        "\"%s: cannot seek to relative offset %s\"",
        "\"%s: cannot seek to end-relative offset %s\""
      ]
    },
    "file_lines": {
      "start_point": [
        510,
        0
      ],
      "end_point": [
        591,
        1
      ],
      "strings": [
        "\"error reading %s\"",
        "\"error reading %s\""
      ]
    },
    "pipe_lines": {
      "start_point": [
        598,
        0
      ],
      "end_point": [
        731,
        1
      ],
      "strings": [
        "\"error reading %s\""
      ]
    },
    "pipe_bytes": {
      "start_point": [
        737,
        0
      ],
      "end_point": [
        832,
        1
      ],
      "strings": [
        "\"error reading %s\""
      ]
    },
    "start_bytes": {
      "start_point": [
        838,
        0
      ],
      "end_point": [
        867,
        1
      ],
      "strings": [
        "\"error reading %s\""
      ]
    },
    "start_lines": {
      "start_point": [
        873,
        0
      ],
      "end_point": [
        908,
        1
      ],
      "strings": [
        "\"error reading %s\""
      ]
    },
    "fremote": {
      "start_point": [
        913,
        0
      ],
      "end_point": [
        950,
        1
      ],
      "strings": [
        "\"cannot determine location of %s. \"",
        "\"reverting to polling\"",
        "\"unexpected return value from is_local_fs_type\""
      ]
    },
    "recheck": {
      "start_point": [
        953,
        0
      ],
      "end_point": [
        1091,
        1
      ],
      "strings": [
        "\"-\"",
        "\"%s has been replaced with an untailable symbolic link\"",
        "\"%s has become inaccessible\"",
        "\"%s\"",
        "\"%s has been replaced with an untailable file%s\"",
        "\"; giving up on this name\"",
        "\"\"",
        "\"%s has been replaced with an untailable remote file\"",
        "\"%s has become accessible\"",
        "\"%s has appeared;  following new file\"",
        "\"%s has been replaced;  following new file\""
      ]
    },
    "any_live_files": {
      "start_point": [
        1098,
        0
      ],
      "end_point": [
        1119,
        1
      ],
      "strings": []
    },
    "tail_forever": {
      "start_point": [
        1128,
        0
      ],
      "end_point": [
        1290,
        1
      ],
      "strings": [
        "\"%s: cannot change nonblocking mode\"",
        "\"%s\"",
        "\"%s: file truncated\"",
        "\"no files remaining\"",
        "\"write error\"",
        "\"cannot read realtime clock\""
      ]
    },
    "any_remote_file": {
      "start_point": [
        1297,
        0
      ],
      "end_point": [
        1304,
        1
      ],
      "strings": []
    },
    "any_non_remote_file": {
      "start_point": [
        1309,
        0
      ],
      "end_point": [
        1316,
        1
      ],
      "strings": []
    },
    "any_symlinks": {
      "start_point": [
        1323,
        0
      ],
      "end_point": [
        1331,
        1
      ],
      "strings": []
    },
    "any_non_regular_fifo": {
      "start_point": [
        1338,
        0
      ],
      "end_point": [
        1345,
        1
      ],
      "strings": []
    },
    "tailable_stdin": {
      "start_point": [
        1350,
        0
      ],
      "end_point": [
        1357,
        1
      ],
      "strings": [
        "\"-\""
      ]
    },
    "wd_hasher": {
      "start_point": [
        1359,
        0
      ],
      "end_point": [
        1364,
        1
      ],
      "strings": []
    },
    "wd_comparator": {
      "start_point": [
        1366,
        0
      ],
      "end_point": [
        1372,
        1
      ],
      "strings": []
    },
    "check_fspec": {
      "start_point": [
        1376,
        0
      ],
      "end_point": [
        1422,
        1
      ],
      "strings": [
        "\"%s: file truncated\"",
        "\"write error\""
      ]
    },
    "tail_forever_inotify": {
      "start_point": [
        1427,
        0
      ],
      "end_point": [
        1812,
        1
      ],
      "strings": [
        "\".\"",
        "\"cannot watch parent directory of %s\"",
        "\"inotify resources exhausted\"",
        "\"inotify resources exhausted\"",
        "\"cannot watch %s\"",
        "\"%s was replaced\"",
        "\"no files remaining\"",
        "\"error waiting for inotify and output events\"",
        "\"error reading inotify event\"",
        "\"directory containing watched file was removed\"",
        "\"inotify resources exhausted\"",
        "\"cannot watch %s\""
      ]
    },
    "tail_bytes": {
      "start_point": [
        1818,
        0
      ],
      "end_point": [
        1876,
        1
      ],
      "strings": [
        "\"cannot fstat %s\""
      ]
    },
    "tail_lines": {
      "start_point": [
        1881,
        0
      ],
      "end_point": [
        1931,
        1
      ],
      "strings": [
        "\"cannot fstat %s\""
      ]
    },
    "tail": {
      "start_point": [
        1943,
        0
      ],
      "end_point": [
        1952,
        1
      ],
      "strings": []
    },
    "tail_file": {
      "start_point": [
        1957,
        0
      ],
      "end_point": [
        2053,
        1
      ],
      "strings": [
        "\"-\"",
        "\"cannot open %s for reading\"",
        "\"error reading %s\"",
        "\"%s: cannot follow end of this type of file%s\"",
        "\"; giving up on this name\"",
        "\"\"",
        "\"error reading %s\""
      ]
    },
    "parse_obsolete_option": {
      "start_point": [
        2064,
        0
      ],
      "end_point": [
        2149,
        1
      ],
      "strings": [
        "\"--\"",
        "\"b\"",
        "\"%s: %s\"",
        "\"invalid number\""
      ]
    },
    "parse_options": {
      "start_point": [
        2151,
        0
      ],
      "end_point": [
        2272,
        1
      ],
      "strings": [
        "\"c:n:fFqs:vz0123456789\"",
        "\"bkKmMGTPEZY0\"",
        "\"invalid number of lines\"",
        "\"invalid number of bytes\"",
        "\"--follow\"",
        "\"\"",
        "\"invalid maximum number of unchanged stats between opens\"",
        "\"\"",
        "\"invalid PID\"",
        "\"invalid number of seconds: %s\"",
        "\"option used in invalid context -- %c\"",
        "\"warning: --retry ignored; --retry is useful\"",
        "\" only when following\"",
        "\"warning: --retry only effective for the initial open\"",
        "\"warning: PID ignored; --pid=PID is useful only when following\"",
        "\"warning: --pid=PID is not supported on this system\""
      ]
    },
    "ignore_fifo_and_pipe": {
      "start_point": [
        2276,
        0
      ],
      "end_point": [
        2303,
        1
      ],
      "strings": [
        "\"-\""
      ]
    },
    "main": {
      "start_point": [
        2305,
        0
      ],
      "end_point": [
        2512,
        1
      ],
      "strings": [
        "\"\"",
        "\"-\"",
        "\"-\"",
        "\"cannot follow %s by name\"",
        "\"-\"",
        "\"warning: following standard input\"",
        "\" indefinitely is ineffective\"",
        "\"standard output\"",
        "\"write error\"",
        "\"inotify cannot be used, reverting to polling\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/tee.c": {
    "usage": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [FILE]...\\n\"",
        "\"\\\nCopy standard input to each FILE, and also to standard output.\\n\\\n\\n\\\n  -a, --append              append to the given FILEs, do not overwrite\\n\\\n  -i, --ignore-interrupts   ignore interrupt signals\\n\\\n\"",
        "\"\\\n  -p                        diagnose errors writing to non pipes\\n\\\n      --output-error[=MODE]   set behavior on write error.  See MODE below\\n\\\n\"",
        "\"\\\n\\n\\\nMODE determines behavior with write errors on the outputs:\\n\\\n  'warn'         diagnose errors writing to any output\\n\\\n  'warn-nopipe'  diagnose errors writing to any output not a pipe\\n\\\n  'exit'         exit on error writing to any output\\n\\\n  'exit-nopipe'  exit on error writing to any output not a pipe\\n\\\nThe default MODE for the -p option is 'warn-nopipe'.\\n\\\nThe default operation when --output-error is not specified, is to\\n\\\nexit immediately on error writing to a pipe, and diagnose errors\\n\\\nwriting to non pipe outputs.\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": [
        "\"\"",
        "\"aip\"",
        "\"--output-error\"",
        "\"%s\"",
        "\"standard input\""
      ]
    },
    "tee_files": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        277,
        1
      ],
      "strings": [
        "\"ab\"",
        "\"wb\"",
        "\"a\"",
        "\"w\"",
        "\"standard output\"",
        "\"%s\"",
        "\"%s\"",
        "\"read error\"",
        "\"%s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/test.c": {
    "test_syntax_error": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    },
    "advance": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        110,
        1
      ],
      "strings": []
    },
    "unary_advance": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    },
    "beyond": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        127,
        1
      ],
      "strings": [
        "\"missing argument after %s\""
      ]
    },
    "find_int": {
      "start_point": [
        132,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"invalid integer %s\""
      ]
    },
    "get_mtime": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "binop": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\"=\"",
        "\"!=\"",
        "\"==\"",
        "\"-nt\"",
        "\"-ot\"",
        "\"-ef\"",
        "\"-eq\"",
        "\"-ne\"",
        "\"-lt\"",
        "\"-le\"",
        "\"-gt\"",
        "\"-ge\""
      ]
    },
    "term": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": [
        "\")\"",
        "\"%s expected\"",
        "\")\"",
        "\"%s expected, found %s\"",
        "\")\"",
        "\"-l\"",
        "\"%s: unary operator expected\""
      ]
    },
    "binary_operator": {
      "start_point": [
        275,
        0
      ],
      "end_point": [
        391,
        1
      ],
      "strings": [
        "\"-l\"",
        "\"-nt does not accept -l\"",
        "\"-ef does not accept -l\"",
        "\"-ot does not accept -l\"",
        "\"%s: unknown binary operator\"",
        "\"!=\""
      ]
    },
    "unary_operator": {
      "start_point": [
        393,
        0
      ],
      "end_point": [
        526,
        1
      ],
      "strings": []
    },
    "and": {
      "start_point": [
        533,
        0
      ],
      "end_point": [
        545,
        1
      ],
      "strings": [
        "\"-a\""
      ]
    },
    "or": {
      "start_point": [
        552,
        0
      ],
      "end_point": [
        564,
        1
      ],
      "strings": [
        "\"-o\""
      ]
    },
    "expr": {
      "start_point": [
        570,
        0
      ],
      "end_point": [
        577,
        1
      ],
      "strings": []
    },
    "test_unop": {
      "start_point": [
        580,
        0
      ],
      "end_point": [
        597,
        1
      ],
      "strings": []
    },
    "one_argument": {
      "start_point": [
        599,
        0
      ],
      "end_point": [
        603,
        1
      ],
      "strings": []
    },
    "two_arguments": {
      "start_point": [
        605,
        0
      ],
      "end_point": [
        627,
        1
      ],
      "strings": [
        "\"!\"",
        "\"%s: unary operator expected\""
      ]
    },
    "three_arguments": {
      "start_point": [
        629,
        0
      ],
      "end_point": [
        652,
        1
      ],
      "strings": [
        "\"!\"",
        "\"(\"",
        "\")\"",
        "\"-a\"",
        "\"-o\"",
        "\"%s: binary operator expected\""
      ]
    },
    "posixtest": {
      "start_point": [
        655,
        0
      ],
      "end_point": [
        697,
        1
      ],
      "strings": [
        "\"!\"",
        "\"(\"",
        "\")\""
      ]
    },
    "usage": {
      "start_point": [
        701,
        0
      ],
      "end_point": [
        804,
        1
      ],
      "strings": [
        "\"\\\nUsage: test EXPRESSION\\n\\\n  or:  test\\n\\\n  or:  [ EXPRESSION ]\\n\\\n  or:  [ ]\\n\\\n  or:  [ OPTION\\n\\\n\"",
        "\"\\\nExit with the status determined by EXPRESSION.\\n\\\n\\n\\\n\"",
        "\"\\\n\\n\\\nAn omitted EXPRESSION defaults to false.  Otherwise,\\n\\\nEXPRESSION is true or false and sets exit status.  It is one of:\\n\\\n\"",
        "\"\\\n\\n\\\n  ( EXPRESSION )               EXPRESSION is true\\n\\\n  ! EXPRESSION                 EXPRESSION is false\\n\\\n  EXPRESSION1 -a EXPRESSION2   both EXPRESSION1 and EXPRESSION2 are true\\n\\\n  EXPRESSION1 -o EXPRESSION2   either EXPRESSION1 or EXPRESSION2 is true\\n\\\n\"",
        "\"\\\n\\n\\\n  -n STRING            the length of STRING is nonzero\\n\\\n  STRING               equivalent to -n STRING\\n\\\n  -z STRING            the length of STRING is zero\\n\\\n  STRING1 = STRING2    the strings are equal\\n\\\n  STRING1 != STRING2   the strings are not equal\\n\\\n\"",
        "\"\\\n\\n\\\n  INTEGER1 -eq INTEGER2   INTEGER1 is equal to INTEGER2\\n\\\n  INTEGER1 -ge INTEGER2   INTEGER1 is greater than or equal to INTEGER2\\n\\\n  INTEGER1 -gt INTEGER2   INTEGER1 is greater than INTEGER2\\n\\\n  INTEGER1 -le INTEGER2   INTEGER1 is less than or equal to INTEGER2\\n\\\n  INTEGER1 -lt INTEGER2   INTEGER1 is less than INTEGER2\\n\\\n  INTEGER1 -ne INTEGER2   INTEGER1 is not equal to INTEGER2\\n\\\n\"",
        "\"\\\n\\n\\\n  FILE1 -ef FILE2   FILE1 and FILE2 have the same device and inode numbers\\n\\\n  FILE1 -nt FILE2   FILE1 is newer (modification date) than FILE2\\n\\\n  FILE1 -ot FILE2   FILE1 is older than FILE2\\n\\\n\"",
        "\"\\\n\\n\\\n  -b FILE     FILE exists and is block special\\n\\\n  -c FILE     FILE exists and is character special\\n\\\n  -d FILE     FILE exists and is a directory\\n\\\n  -e FILE     FILE exists\\n\\\n\"",
        "\"\\\n  -f FILE     FILE exists and is a regular file\\n\\\n  -g FILE     FILE exists and is set-group-ID\\n\\\n  -G FILE     FILE exists and is owned by the effective group ID\\n\\\n  -h FILE     FILE exists and is a symbolic link (same as -L)\\n\\\n  -k FILE     FILE exists and has its sticky bit set\\n\\\n\"",
        "\"\\\n  -L FILE     FILE exists and is a symbolic link (same as -h)\\n\\\n  -O FILE     FILE exists and is owned by the effective user ID\\n\\\n  -p FILE     FILE exists and is a named pipe\\n\\\n  -r FILE     FILE exists and read permission is granted\\n\\\n  -s FILE     FILE exists and has a size greater than zero\\n\\\n\"",
        "\"\\\n  -S FILE     FILE exists and is a socket\\n\\\n  -t FD       file descriptor FD is opened on a terminal\\n\\\n  -u FILE     FILE exists and its set-user-ID bit is set\\n\\\n  -w FILE     FILE exists and write permission is granted\\n\\\n  -x FILE     FILE exists and execute (or search) permission is granted\\n\\\n\"",
        "\"\\\n\\n\\\nExcept for -h and -L, all FILE-related tests dereference symbolic links.\\n\\\nBeware that parentheses need to be escaped (e.g., by backslashes) for shells.\\n\\\nINTEGER may also be -l STRING, which evaluates to the length of STRING.\\n\\\n\"",
        "\"\\\n\\n\\\nNOTE: Binary -a and -o are inherently ambiguous.  Use 'test EXPR1 && test\\n\\\nEXPR2' or 'test EXPR1 || test EXPR2' instead.\\n\\\n\"",
        "\"\\\n\\n\\\nNOTE: [ honors the --help and --version options, but test does not.\\n\\\ntest treats each of those as it treats any other nonempty STRING.\\n\\\n\"",
        "\"test and/or [\""
      ]
    },
    "main": {
      "start_point": [
        821,
        0
      ],
      "end_point": [
        884,
        1
      ],
      "strings": [
        "\"\"",
        "\"--help\"",
        "\"--version\"",
        "\"]\"",
        "\"missing %s\"",
        "\"]\"",
        "\"extra argument %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/timeout.c": {
    "settimeout": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        151,
        1
      ],
      "strings": [
        "\"warning: timer_settime\"",
        "\"warning: timer_create\""
      ]
    },
    "send_sig": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        168,
        1
      ],
      "strings": []
    },
    "chld": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        175,
        1
      ],
      "strings": []
    },
    "cleanup": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": [
        "\"%d\"",
        "\"sending signal %s to command %s\""
      ]
    },
    "usage": {
      "start_point": [
        227,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION] DURATION COMMAND [ARG]...\\n\\\n  or:  %s [OPTION]\\n\"",
        "\"\\\nStart COMMAND, and kill it if still running after DURATION.\\n\\\n\"",
        "\"\\\n      --preserve-status\\n\\\n                 exit with the same status as COMMAND, even when the\\n\\\n                   command times out\\n\\\n      --foreground\\n\\\n                 when not running timeout directly from a shell prompt,\\n\\\n                   allow COMMAND to read from the TTY and get TTY signals;\\n\\\n                   in this mode, children of COMMAND will not be timed out\\n\\\n  -k, --kill-after=DURATION\\n\\\n                 also send a KILL signal if COMMAND is still running\\n\\\n                   this long after the initial signal was sent\\n\\\n  -s, --signal=SIGNAL\\n\\\n                 specify the signal to be sent on timeout;\\n\\\n                   SIGNAL may be a name like 'HUP' or a number;\\n\\\n                   see 'kill -l' for a list of signals\\n\"",
        "\"\\\n  -v, --verbose  diagnose to stderr any signal sent upon timeout\\n\"",
        "\"\\n\\\nDURATION is a floating point number with an optional suffix:\\n\\\n's' for seconds (the default), 'm' for minutes, 'h' for hours \\\nor 'd' for days.\\n\"",
        "\"\\n\\\nIf the command times out, and --preserve-status is not set, then exit with\\n\\\nstatus 124.  Otherwise, exit with the status of COMMAND.  If no signal\\n\\\nis specified, send the TERM signal upon timeout.  The TERM signal kills\\n\\\nany process that does not block or catch that signal.  It may be necessary\\n\\\nto use the KILL (9) signal, since this signal cannot be caught, in which\\n\\\ncase the exit status is 128+9 rather than 124.\\n\""
      ]
    },
    "apply_time_suffix": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        315,
        1
      ],
      "strings": []
    },
    "parse_duration": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": [
        "\"invalid time interval %s\""
      ]
    },
    "unblock_signal": {
      "start_point": [
        338,
        0
      ],
      "end_point": [
        346,
        1
      ],
      "strings": [
        "\"warning: sigprocmask\""
      ]
    },
    "install_sigchld": {
      "start_point": [
        348,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": []
    },
    "install_cleanup": {
      "start_point": [
        364,
        0
      ],
      "end_point": [
        379,
        1
      ],
      "strings": []
    },
    "block_cleanup_and_chld": {
      "start_point": [
        386,
        0
      ],
      "end_point": [
        403,
        1
      ],
      "strings": [
        "\"warning: sigprocmask\""
      ]
    },
    "disable_core_dumps": {
      "start_point": [
        407,
        0
      ],
      "end_point": [
        426,
        1
      ],
      "strings": [
        "\"warning: disabling core dumps failed\""
      ]
    },
    "main": {
      "start_point": [
        428,
        0
      ],
      "end_point": [
        576,
        1
      ],
      "strings": [
        "\"\"",
        "\"+k:s:v\"",
        "\"fork system call failed\"",
        "\"failed to run command %s\"",
        "\"error waiting for command\"",
        "\"the monitored command dumped core\"",
        "\"unknown status from command (%d)\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/touch.c": {
    "get_reldate": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": [
        "\"invalid date format %s\""
      ]
    },
    "touch": {
      "start_point": [
        121,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": [
        "\"-\"",
        "\"failed to close %s\"",
        "\"cannot touch %s\"",
        "\"setting times of %s\""
      ]
    },
    "usage": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... FILE...\\n\"",
        "\"\\\nUpdate the access and modification times of each FILE to the current time.\\n\\\n\\n\\\nA FILE argument that does not exist is created empty, unless -c or -h\\n\\\nis supplied.\\n\\\n\\n\\\nA FILE argument string of - is handled specially and causes touch to\\n\\\nchange the times of the file associated with standard output.\\n\\\n\"",
        "\"\\\n  -a                     change only the access time\\n\\\n  -c, --no-create        do not create any files\\n\\\n  -d, --date=STRING      parse STRING and use it instead of current time\\n\\\n  -f                     (ignored)\\n\\\n\"",
        "\"\\\n  -h, --no-dereference   affect each symbolic link instead of any referenced\\n\\\n                         file (useful only on systems that can change the\\n\\\n                         timestamps of a symlink)\\n\\\n  -m                     change only the modification time\\n\\\n\"",
        "\"\\\n  -r, --reference=FILE   use this file's times instead of current time\\n\\\n  -t STAMP               use [[CC]YY]MMDDhhmm[.ss] instead of current time\\n\\\n      --time=WORD        change the specified time:\\n\\\n                           WORD is access, atime, or use: equivalent to -a\\n\\\n                           WORD is modify or mtime: equivalent to -m\\n\\\n\"",
        "\"\\\n\\n\\\nNote that the -d and -t options accept different time-date formats.\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        255,
        0
      ],
      "end_point": [
        437,
        1
      ],
      "strings": [
        "\"\"",
        "\"acd:fhmr:t:\"",
        "\"invalid date format %s\"",
        "\"--time\"",
        "\"cannot specify times from more than one source\"",
        "\"failed to get attributes of %s\"",
        "\"POSIXLY_CORRECT\"",
        "\"warning: 'touch %s' is obsolete; use \"",
        "\"'touch -t %04ld%02d%02d%02d%02d.%02d'\"",
        "\"missing file operand\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/tr.c": {
    "es_match": {
      "start_point": [
        192,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        351,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... SET1 [SET2]\\n\\\n\"",
        "\"\\\nTranslate, squeeze, and/or delete characters from standard input,\\n\\\nwriting to standard output.\\n\\\n\\n\\\n  -c, -C, --complement    use the complement of SET1\\n\\\n  -d, --delete            delete characters in SET1, do not translate\\n\\\n  -s, --squeeze-repeats   replace each sequence of a repeated character\\n\\\n                            that is listed in the last specified SET,\\n\\\n                            with a single occurrence of that character\\n\\\n  -t, --truncate-set1     first truncate SET1 to length of SET2\\n\\\n\"",
        "\"\\\n\\n\\\nSETs are specified as strings of characters.  Most represent themselves.\\n\\\nInterpreted sequences are:\\n\\\n\\n\\\n  \\\\NNN            character with octal value NNN (1 to 3 octal digits)\\n\\\n  \\\\\\\\              backslash\\n\\\n  \\\\a              audible BEL\\n\\\n  \\\\b              backspace\\n\\\n  \\\\f              form feed\\n\\\n  \\\\n              new line\\n\\\n  \\\\r              return\\n\\\n  \\\\t              horizontal tab\\n\\\n\"",
        "\"\\\n  \\\\v              vertical tab\\n\\\n  CHAR1-CHAR2     all characters from CHAR1 to CHAR2 in ascending order\\n\\\n  [CHAR*]         in SET2, copies of CHAR until length of SET1\\n\\\n  [CHAR*REPEAT]   REPEAT copies of CHAR, REPEAT octal if starting with 0\\n\\\n  [:alnum:]       all letters and digits\\n\\\n  [:alpha:]       all letters\\n\\\n  [:blank:]       all horizontal whitespace\\n\\\n  [:cntrl:]       all control characters\\n\\\n  [:digit:]       all digits\\n\\\n\"",
        "\"\\\n  [:graph:]       all printable characters, not including space\\n\\\n  [:lower:]       all lower case letters\\n\\\n  [:print:]       all printable characters, including space\\n\\\n  [:punct:]       all punctuation characters\\n\\\n  [:space:]       all horizontal or vertical whitespace\\n\\\n  [:upper:]       all upper case letters\\n\\\n  [:xdigit:]      all hexadecimal digits\\n\\\n  [=CHAR=]        all characters which are equivalent to CHAR\\n\\\n\"",
        "\"\\\n\\n\\\nTranslation occurs if -d is not given and both SET1 and SET2 appear.\\n\\\n-t may be used only when translating.  SET2 is extended to length of\\n\\\nSET1 by repeating its last character as necessary.  Excess characters\\n\\\nof SET2 are ignored.  Only [:lower:] and [:upper:] are guaranteed to\\n\\\nexpand in ascending order; used in SET2 while translating, they may\\n\\\nonly be used in pairs to specify case conversion.  -s uses the last\\n\\\nspecified SET, and occurs after translation or deletion.\\n\\\n\""
      ]
    },
    "is_equiv_class_member": {
      "start_point": [
        356,
        0
      ],
      "end_point": [
        360,
        1
      ],
      "strings": []
    },
    "is_char_class_member": {
      "start_point": [
        365,
        0
      ],
      "end_point": [
        413,
        1
      ],
      "strings": []
    },
    "es_free": {
      "start_point": [
        415,
        0
      ],
      "end_point": [
        420,
        1
      ],
      "strings": []
    },
    "unquote": {
      "start_point": [
        430,
        0
      ],
      "end_point": [
        536,
        1
      ],
      "strings": [
        "\"warning: the ambiguous octal escape\\\n \\\\%c%c%c is being\\n\\tinterpreted as the 2-byte sequence \\\\0%c%c, %c\"",
        "\"warning: an unescaped backslash \"",
        "\"at end of string is not portable\""
      ]
    },
    "look_up_char_class": {
      "start_point": [
        541,
        0
      ],
      "end_point": [
        551,
        1
      ],
      "strings": []
    },
    "make_printable_char": {
      "start_point": [
        556,
        0
      ],
      "end_point": [
        571,
        1
      ],
      "strings": [
        "\"\\\\%03o\""
      ]
    },
    "make_printable_str": {
      "start_point": [
        580,
        0
      ],
      "end_point": [
        634,
        1
      ],
      "strings": [
        "\"\\\\\"",
        "\"\\\\a\"",
        "\"\\\\b\"",
        "\"\\\\f\"",
        "\"\\\\n\"",
        "\"\\\\r\"",
        "\"\\\\t\"",
        "\"\\\\v\"",
        "\"\\\\%03o\""
      ]
    },
    "append_normal_char": {
      "start_point": [
        639,
        0
      ],
      "end_point": [
        649,
        1
      ],
      "strings": []
    },
    "append_range": {
      "start_point": [
        656,
        0
      ],
      "end_point": [
        680,
        1
      ],
      "strings": [
        "\"range-endpoints of '%s-%s' are in reverse collating sequence order\""
      ]
    },
    "append_char_class": {
      "start_point": [
        687,
        0
      ],
      "end_point": [
        702,
        1
      ],
      "strings": []
    },
    "append_repeated_char": {
      "start_point": [
        709,
        0
      ],
      "end_point": [
        721,
        1
      ],
      "strings": []
    },
    "append_equiv_class": {
      "start_point": [
        729,
        0
      ],
      "end_point": [
        744,
        1
      ],
      "strings": []
    },
    "find_closing_delim": {
      "start_point": [
        752,
        0
      ],
      "end_point": [
        764,
        1
      ],
      "strings": []
    },
    "find_bracketed_repeat": {
      "start_point": [
        776,
        0
      ],
      "end_point": [
        822,
        1
      ],
      "strings": [
        "\"invalid repeat count %s in [c*n] construct\""
      ]
    },
    "star_digits_closebracket": {
      "start_point": [
        828,
        0
      ],
      "end_point": [
        838,
        1
      ],
      "strings": []
    },
    "build_spec_list": {
      "start_point": [
        852,
        0
      ],
      "end_point": [
        988,
        1
      ],
      "strings": [
        "\"missing character class name '[::]'\"",
        "\"missing equivalence class character '[==]'\"",
        "\"invalid character class %s\"",
        "\"%s: equivalence class operand must be a single character\""
      ]
    },
    "skip_construct": {
      "start_point": [
        992,
        0
      ],
      "end_point": [
        997,
        1
      ],
      "strings": []
    },
    "get_next": {
      "start_point": [
        1013,
        0
      ],
      "end_point": [
        1132,
        1
      ],
      "strings": []
    },
    "card_of_complement": {
      "start_point": [
        1139,
        0
      ],
      "end_point": [
        1153,
        1
      ],
      "strings": []
    },
    "validate_case_classes": {
      "start_point": [
        1164,
        0
      ],
      "end_point": [
        1224,
        1
      ],
      "strings": [
        "\"misaligned [:upper:] and/or [:lower:] construct\""
      ]
    },
    "get_spec_stats": {
      "start_point": [
        1239,
        0
      ],
      "end_point": [
        1313,
        1
      ],
      "strings": [
        "\"too many characters in set\""
      ]
    },
    "get_s1_spec_stats": {
      "start_point": [
        1315,
        0
      ],
      "end_point": [
        1321,
        1
      ],
      "strings": []
    },
    "get_s2_spec_stats": {
      "start_point": [
        1323,
        0
      ],
      "end_point": [
        1333,
        1
      ],
      "strings": []
    },
    "spec_init": {
      "start_point": [
        1335,
        0
      ],
      "end_point": [
        1341,
        1
      ],
      "strings": []
    },
    "parse_str": {
      "start_point": [
        1349,
        0
      ],
      "end_point": [
        1356,
        1
      ],
      "strings": []
    },
    "string2_extend": {
      "start_point": [
        1367,
        0
      ],
      "end_point": [
        1410,
        1
      ],
      "strings": [
        "\"when translating with string1 longer than string2,\\nthe\\\n latter string must not end with a character class\""
      ]
    },
    "homogeneous_spec_list": {
      "start_point": [
        1416,
        0
      ],
      "end_point": [
        1431,
        1
      ],
      "strings": []
    },
    "validate": {
      "start_point": [
        1441,
        0
      ],
      "end_point": [
        1510,
        1
      ],
      "strings": [
        "\"the [c*] repeat construct may not appear in string1\"",
        "\"only one [c*] repeat construct may appear in string2\"",
        "\"[=c=] expressions may not appear in string2\\\n when translating\"",
        "\"when translating, the only character classes that may\\\n appear in\\nstring2 are 'upper' and 'lower'\"",
        "\"when not truncating set1, string2 must be non-empty\"",
        "\"when translating with complemented character classes,\\\n\\nstring2 must map all characters in the domain to one\"",
        "\"the [c*] construct may appear in string2 only\\\n when translating\""
      ]
    },
    "squeeze_filter": {
      "start_point": [
        1520,
        0
      ],
      "end_point": [
        1603,
        1
      ],
      "strings": [
        "\"write error\""
      ]
    },
    "plain_read": {
      "start_point": [
        1605,
        0
      ],
      "end_point": [
        1612,
        1
      ],
      "strings": [
        "\"read error\""
      ]
    },
    "read_and_delete": {
      "start_point": [
        1620,
        0
      ],
      "end_point": [
        1652,
        1
      ],
      "strings": []
    },
    "read_and_xlate": {
      "start_point": [
        1658,
        0
      ],
      "end_point": [
        1667,
        1
      ],
      "strings": []
    },
    "set_initialize": {
      "start_point": [
        1675,
        0
      ],
      "end_point": [
        1686,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        1688,
        0
      ],
      "end_point": [
        1907,
        1
      ],
      "strings": [
        "\"\"",
        "\"+cCdst\"",
        "\"missing operand\"",
        "\"missing operand after %s\"",
        "\"%s\\n\"",
        "\"Two strings must be given when \"",
        "\"both deleting and squeezing repeats.\"",
        "\"Two strings must be given when translating.\"",
        "\"extra operand %s\"",
        "\"%s\\n\"",
        "\"Only one string may be given when \"",
        "\"deleting without squeezing repeats.\"",
        "\"write error\"",
        "\"write error\"",
        "\"standard input\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/true.c": {
    "usage": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [ignored command line arguments]\\n\\\n  or:  %s OPTION\\n\\\n\"",
        "\"%s\\n\\n\"",
        "\"Exit with a status code indicating success.\"",
        "\"Exit with a status code indicating failure.\""
      ]
    },
    "main": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": [
        "\"\"",
        "\"--help\"",
        "\"--version\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/truncate.c": {
    "usage": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"Usage: %s OPTION... FILE...\\n\"",
        "\"\\\nShrink or extend the size of each FILE to the specified size\\n\\\n\\n\\\nA FILE argument that does not exist is created.\\n\\\n\\n\\\nIf a FILE is larger than the specified size, the extra data is lost.\\n\\\nIf a FILE is shorter, it is extended and the extended part (hole)\\n\\\nreads as zero bytes.\\n\\\n\"",
        "\"\\\n  -c, --no-create        do not create any files\\n\\\n\"",
        "\"\\\n  -o, --io-blocks        treat SIZE as number of IO blocks instead of bytes\\n\\\n\"",
        "\"\\\n  -r, --reference=RFILE  base size on RFILE\\n\\\n  -s, --size=SIZE        set or adjust the file size by SIZE bytes\\n\"",
        "\"\\n\\\nSIZE may also be prefixed by one of the following modifying characters:\\n\\\n'+' extend by, '-' reduce by, '<' at most, '>' at least,\\n\\\n'/' round down to multiple of, '%' round up to multiple of.\\n\""
      ]
    },
    "do_ftruncate": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": [
        "\"cannot fstat %s\"",
        "\"overflow in %\"",
        "\" * %\"",
        "\" byte blocks for file %s\"",
        "\"%s has unusable, apparently negative size\"",
        "\"cannot get the size of %s\"",
        "\"overflow rounding up size of file %s\"",
        "\"overflow extending size of file %s\"",
        "\"failed to truncate %s at %\"",
        "\" bytes\""
      ]
    },
    "main": {
      "start_point": [
        211,
        0
      ],
      "end_point": [
        398,
        1
      ],
      "strings": [
        "\"\"",
        "\"cor:s:\"",
        "\"multiple relative modifiers specified\"",
        "\"EgGkKmMPtTYZ0\"",
        "\"Invalid number\"",
        "\"division by zero\"",
        "\"you must specify either %s or %s\"",
        "\"--size\"",
        "\"--reference\"",
        "\"you must specify a relative %s with %s\"",
        "\"--size\"",
        "\"--reference\"",
        "\"%s was specified but %s was not\"",
        "\"--io-blocks\"",
        "\"--size\"",
        "\"missing file operand\"",
        "\"cannot stat %s\"",
        "\"cannot get the size of %s\"",
        "\"cannot open %s for writing\"",
        "\"failed to close %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/tsort.c": {
    "usage": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION] [FILE]\\n\\\nWrite totally ordered list consistent with the partial ordering in FILE.\\n\\\n\"",
        "\"\\\n\\n\\\n\""
      ]
    },
    "new_item": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "search_item": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": []
    },
    "record_relation": {
      "start_point": [
        276,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": []
    },
    "count_items": {
      "start_point": [
        291,
        0
      ],
      "end_point": [
        296,
        1
      ],
      "strings": []
    },
    "scan_zeros": {
      "start_point": [
        298,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": []
    },
    "detect_loop": {
      "start_point": [
        333,
        0
      ],
      "end_point": [
        402,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "recurse_tree": {
      "start_point": [
        407,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": []
    },
    "walk_tree": {
      "start_point": [
        430,
        0
      ],
      "end_point": [
        435,
        1
      ],
      "strings": []
    },
    "tsort": {
      "start_point": [
        439,
        0
      ],
      "end_point": [
        543,
        1
      ],
      "strings": [
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"%s: input contains an odd number of tokens\"",
        "\"%s: input contains a loop:\"",
        "\"%s\"",
        "\"standard input\""
      ]
    },
    "main": {
      "start_point": [
        545,
        0
      ],
      "end_point": [
        572,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"extra operand %s\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/tty.c": {
    "usage": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]...\\n\"",
        "\"\\\nPrint the file name of the terminal connected to standard input.\\n\\\n\\n\\\n  -s, --silent, --quiet   print nothing, only return an exit status\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"\"",
        "\"s\"",
        "\"extra operand %s\"",
        "\"not a tty\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/uname-arch.c": {},
  "coreutils/coreutils-8.29/src/uname-uname.c": {},
  "coreutils/coreutils-8.29/src/uname.c": {
    "usage": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        154,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]...\\n\"",
        "\"\\\nPrint certain system information.  With no OPTION, same as -s.\\n\\\n\\n\\\n  -a, --all                print all information, in the following order,\\n\\\n                             except omit -p and -i if unknown:\\n\\\n  -s, --kernel-name        print the kernel name\\n\\\n  -n, --nodename           print the network node hostname\\n\\\n  -r, --kernel-release     print the kernel release\\n\\\n\"",
        "\"\\\n  -v, --kernel-version     print the kernel version\\n\\\n  -m, --machine            print the machine hardware name\\n\\\n  -p, --processor          print the processor type (non-portable)\\n\\\n  -i, --hardware-platform  print the hardware platform (non-portable)\\n\\\n  -o, --operating-system   print the operating system\\n\\\n\"",
        "\"\\\nPrint machine architecture.\\n\\\n\\n\\\n\""
      ]
    },
    "print_element": {
      "start_point": [
        159,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": []
    },
    "decode_switches": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": [
        "\"\"",
        "\"asnrvmpio\"",
        "\"extra operand %s\""
      ]
    },
    "main": {
      "start_point": [
        258,
        0
      ],
      "end_point": [
        375,
        1
      ],
      "strings": [
        "\"unknown\"",
        "\"\"",
        "\"cannot get system name\"",
        "\"hw.cputype\"",
        "\"ppc\"",
        "\"powerpc\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/uname.h": {},
  "coreutils/coreutils-8.29/src/unexpand.c": {
    "usage": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n\"",
        "\"\\\nConvert blanks in each FILE to tabs, writing to standard output.\\n\\\n\"",
        "\"\\\n  -a, --all        convert all blanks, instead of just initial blanks\\n\\\n      --first-only  convert only leading sequences of blanks (overrides -a)\\n\\\n  -t, --tabs=N     have tabs N characters apart instead of 8 (enables -a)\\n\\\n\""
      ]
    },
    "unexpand": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": [
        "\"input line is too long\"",
        "\"input line is too long\"",
        "\"write error\"",
        "\"write error\""
      ]
    },
    "main": {
      "start_point": [
        255,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"\"",
        "\",0123456789at:\"",
        "\"tab stop value is too large\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/uniq.c": {
    "usage": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        227,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [INPUT [OUTPUT]]\\n\\\n\"",
        "\"\\\nFilter adjacent matching lines from INPUT (or standard input),\\n\\\nwriting to OUTPUT (or standard output).\\n\\\n\\n\\\nWith no options, matching lines are merged to the first occurrence.\\n\\\n\"",
        "\"\\\n  -c, --count           prefix lines by the number of occurrences\\n\\\n  -d, --repeated        only print duplicate lines, one for each group\\n\\\n\"",
        "\"\\\n  -D                    print all duplicate lines\\n\\\n      --all-repeated[=METHOD]  like -D, but allow separating groups\\n\\\n                                 with an empty line;\\n\\\n                                 METHOD={none(default),prepend,separate}\\n\\\n\"",
        "\"\\\n  -f, --skip-fields=N   avoid comparing the first N fields\\n\\\n\"",
        "\"\\\n      --group[=METHOD]  show all items, separating groups with an empty line;\\n\\\n                          METHOD={separate(default),prepend,append,both}\\n\\\n\"",
        "\"\\\n  -i, --ignore-case     ignore differences in case when comparing\\n\\\n  -s, --skip-chars=N    avoid comparing the first N characters\\n\\\n  -u, --unique          only print unique lines\\n\\\n\"",
        "\"\\\n  -z, --zero-terminated     line delimiter is NUL, not newline\\n\\\n\"",
        "\"\\\n  -w, --check-chars=N   compare no more than N characters in lines\\n\\\n\"",
        "\"\\\n\\n\\\nA field is a run of blanks (usually spaces and/or TABs), then non-blank\\n\\\ncharacters.  Fields are skipped before chars.\\n\\\n\"",
        "\"\\\n\\n\\\nNote: 'uniq' does not detect repeated lines unless they are adjacent.\\n\\\nYou may want to sort the input first, or use 'sort -u' without 'uniq'.\\n\\\nAlso, comparisons honor the rules specified by 'LC_COLLATE'.\\n\\\n\""
      ]
    },
    "strict_posix2": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        234,
        1
      ],
      "strings": []
    },
    "size_opt": {
      "start_point": [
        239,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": [
        "\"\"",
        "\"%s: %s\""
      ]
    },
    "_GL_ATTRIBUTE_PURE": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": []
    },
    "different": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": []
    },
    "writeline": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"%7\"",
        "\" \""
      ]
    },
    "check_file": {
      "start_point": [
        330,
        0
      ],
      "end_point": [
        478,
        1
      ],
      "strings": [
        "\"-\"",
        "\"r\"",
        "\"%s\"",
        "\"-\"",
        "\"w\"",
        "\"%s\"",
        "\"too many repeated lines\"",
        "\"error reading %s\""
      ]
    },
    "main": {
      "start_point": [
        487,
        0
      ],
      "end_point": [
        674,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\"",
        "\"-\"",
        "\"\"",
        "\"-0123456789Dcdf:is:uw:z\"",
        "\"extra operand %s\"",
        "\"\"",
        "\"extra operand %s\"",
        "\"--all-repeated\"",
        "\"--group\"",
        "\"invalid number of fields to skip\"",
        "\"invalid number of bytes to skip\"",
        "\"invalid number of bytes to compare\"",
        "\"--group is mutually exclusive with -c/-d/-D/-u\"",
        "\"grouping and printing repeat counts is meaningless\"",
        "\"printing all duplicated lines and repeat counts is meaningless\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/unlink.c": {
    "usage": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s FILE\\n\\\n  or:  %s OPTION\\n\"",
        "\"Call the unlink function to remove the specified FILE.\\n\\n\""
      ]
    },
    "main": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"missing operand\"",
        "\"extra operand %s\"",
        "\"cannot unlink %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/uptime.c": {
    "print_uptime": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": [
        "\"/proc/uptime\"",
        "\"r\"",
        "\"couldn't get boot time\"",
        "\" %H:%M:%S  \"",
        "\" ??:????  \"",
        "\"up ???? days ??:??,  \"",
        "\"up %ld day %2d:%02d,  \"",
        "\"up %ld days %2d:%02d,  \"",
        "\"up  %2d:%02d,  \"",
        "\"%lu user\"",
        "\"%lu users\"",
        "\",  load average: %.2f\"",
        "\", %.2f\"",
        "\", %.2f\""
      ]
    },
    "uptime": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "usage": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        228,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [FILE]\\n\"",
        "\"\\\nPrint the current time, the length of time the system has been up,\\n\\\nthe number of users on the system, and the average number of jobs\\n\\\nin the run queue over the last 1, 5 and 15 minutes.\"",
        "\"  \\\nProcesses in\\n\\\nan uninterruptible sleep state also contribute to the load average.\\n\"",
        "\"\\n\"",
        "\"\\\nIf FILE is not specified, use %s.  %s as FILE is common.\\n\\\n\\n\""
      ]
    },
    "main": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"extra operand %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/users.c": {
    "userid_compare": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "list_entries_users": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    },
    "users": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "usage": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [FILE]\\n\"",
        "\"\\\nOutput who is currently logged in according to FILE.\\n\\\nIf FILE is not specified, use %s.  %s as FILE is common.\\n\\\n\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"extra operand %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/wc.c": {
    "usage": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [OPTION]... [FILE]...\\n\\\n  or:  %s [OPTION]... --files0-from=F\\n\\\n\"",
        "\"\\\nPrint newline, word, and byte counts for each FILE, and a total line if\\n\\\nmore than one FILE is specified.  A word is a non-zero-length sequence of\\n\\\ncharacters delimited by white space.\\n\\\n\"",
        "\"\\\n\\n\\\nThe options below may be used to select which counts are printed, always in\\n\\\nthe following order: newline, word, character, byte, maximum line length.\\n\\\n  -c, --bytes            print the byte counts\\n\\\n  -m, --chars            print the character counts\\n\\\n  -l, --lines            print the newline counts\\n\\\n\"",
        "\"\\\n      --files0-from=F    read input from the files specified by\\n\\\n                           NUL-terminated names in file F;\\n\\\n                           If F is - then read names from standard input\\n\\\n  -L, --max-line-length  print the maximum display width\\n\\\n  -w, --words            print the word counts\\n\\\n\""
      ]
    },
    "write_counts": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\" %*s\"",
        "\" %s\""
      ]
    },
    "wc": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        550,
        1
      ],
      "strings": [
        "\"standard input\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\"",
        "\"%s\""
      ]
    },
    "wc_file": {
      "start_point": [
        552,
        0
      ],
      "end_point": [
        580,
        1
      ],
      "strings": [
        "\"-\"",
        "\"%s\"",
        "\"%s\""
      ]
    },
    "get_input_fstatus": {
      "start_point": [
        588,
        0
      ],
      "end_point": [
        608,
        1
      ],
      "strings": [
        "\"-\""
      ]
    },
    "compute_number_width": {
      "start_point": [
        614,
        0
      ],
      "end_point": [
        640,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        643,
        0
      ],
      "end_point": [
        857,
        1
      ],
      "strings": [
        "\"\"",
        "\"clLmw\"",
        "\"extra operand %s\"",
        "\"%s\\n\"",
        "\"file operands cannot be combined with --files0-from\"",
        "\"-\"",
        "\"r\"",
        "\"cannot open %s for reading\"",
        "\"cannot read file names from %s\"",
        "\"%s: read error\"",
        "\"unexpected error code from argv_iter\"",
        "\"-\"",
        "\"-\"",
        "\"when reading file names from stdin, \"",
        "\"no file name of %s allowed\"",
        "\"%s\"",
        "\"invalid zero-length file name\"",
        "\"%s:%lu: %s\"",
        "\"invalid zero-length file name\"",
        "\"total\"",
        "\"-\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/who.c": {
    "idle_string": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": [
        "\"  .  \"",
        "\"%02d:%02d\"",
        "\" old \""
      ]
    },
    "time_string": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"-%m-%d %H:%M\""
      ]
    },
    "print_line": {
      "start_point": [
        242,
        0
      ],
      "end_point": [
        311,
        1
      ],
      "strings": [
        "\" %-6s\"",
        "\" %10s\"",
        "\" %-12s\"",
        "\"%-8.*s\"",
        "\"%s\"",
        "\" %-12.*s\"",
        "\" %-*s\"",
        "\"%s\"",
        "\"%s\"",
        "\" %-8s\"",
        "\"%s\"",
        "\"   .\"",
        "\"\""
      ]
    },
    "is_tty_writable": {
      "start_point": [
        315,
        0
      ],
      "end_point": [
        327,
        1
      ],
      "strings": []
    },
    "print_user": {
      "start_point": [
        331,
        0
      ],
      "end_point": [
        437,
        1
      ],
      "strings": [
        "\"%.*s\"",
        "\"  ?\"",
        "\"(%s:%s)\"",
        "\"(%s)\"",
        "\"\"",
        "\"\""
      ]
    },
    "print_boottime": {
      "start_point": [
        439,
        0
      ],
      "end_point": [
        444,
        1
      ],
      "strings": [
        "\"\"",
        "\"system boot\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\""
      ]
    },
    "make_id_equals_comment": {
      "start_point": [
        446,
        0
      ],
      "end_point": [
        454,
        1
      ],
      "strings": [
        "\"id=\"",
        "\"id=\""
      ]
    },
    "print_deadprocs": {
      "start_point": [
        456,
        0
      ],
      "end_point": [
        477,
        1
      ],
      "strings": [
        "\"term=\"",
        "\"exit=\"",
        "\"%s%d %s%d\"",
        "\"term=\"",
        "\"exit=\"",
        "\"\"",
        "\"\""
      ]
    },
    "print_login": {
      "start_point": [
        479,
        0
      ],
      "end_point": [
        490,
        1
      ],
      "strings": [
        "\"LOGIN\"",
        "\"\"",
        "\"\""
      ]
    },
    "print_initspawn": {
      "start_point": [
        492,
        0
      ],
      "end_point": [
        501,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"\""
      ]
    },
    "print_clockchange": {
      "start_point": [
        503,
        0
      ],
      "end_point": [
        509,
        1
      ],
      "strings": [
        "\"\"",
        "\"clock change\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\""
      ]
    },
    "print_runlevel": {
      "start_point": [
        511,
        0
      ],
      "end_point": [
        530,
        1
      ],
      "strings": [
        "\"run-level\"",
        "\"%s %c\"",
        "\"run-level\"",
        "\"last=\"",
        "\"%s%c\"",
        "\"last=\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\""
      ]
    },
    "list_entries_who": {
      "start_point": [
        534,
        0
      ],
      "end_point": [
        556,
        1
      ],
      "strings": [
        "\"\"",
        "\"%s%s\"",
        "\" \"",
        "\"\\n# users=%lu\\n\""
      ]
    },
    "print_heading": {
      "start_point": [
        558,
        0
      ],
      "end_point": [
        563,
        1
      ],
      "strings": [
        "\"NAME\"",
        "\"LINE\"",
        "\"TIME\"",
        "\"IDLE\"",
        "\"PID\"",
        "\"COMMENT\"",
        "\"EXIT\""
      ]
    },
    "scan_entries": {
      "start_point": [
        566,
        0
      ],
      "end_point": [
        614,
        1
      ],
      "strings": []
    },
    "who": {
      "start_point": [
        618,
        0
      ],
      "end_point": [
        633,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "usage": {
      "start_point": [
        635,
        0
      ],
      "end_point": [
        683,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [ FILE | ARG1 ARG2 ]\\n\"",
        "\"\\\nPrint information about users who are currently logged in.\\n\\\n\"",
        "\"\\\n\\n\\\n  -a, --all         same as -b -d --login -p -r -t -T -u\\n\\\n  -b, --boot        time of last system boot\\n\\\n  -d, --dead        print dead processes\\n\\\n  -H, --heading     print line of column headings\\n\\\n\"",
        "\"\\\n  -l, --login       print system login processes\\n\\\n\"",
        "\"\\\n      --lookup      attempt to canonicalize hostnames via DNS\\n\\\n  -m                only hostname and user associated with stdin\\n\\\n  -p, --process     print active processes spawned by init\\n\\\n\"",
        "\"\\\n  -q, --count       all login names and number of users logged on\\n\\\n  -r, --runlevel    print current runlevel\\n\\\n  -s, --short       print only name, line, and time (default)\\n\\\n  -t, --time        print last system clock change\\n\\\n\"",
        "\"\\\n  -T, -w, --mesg    add user's message status as +, - or ?\\n\\\n  -u, --users       list users logged in\\n\\\n      --message     same as -T\\n\\\n      --writable    same as -T\\n\\\n\"",
        "\"\\\n\\n\\\nIf FILE is not specified, use %s.  %s as FILE is common.\\n\\\nIf ARG1 ARG2 given, -m presumed: 'am i' or 'mom likes' are usual.\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        685,
        0
      ],
      "end_point": [
        834,
        1
      ],
      "strings": [
        "\"\"",
        "\"abdlmpqrstuwHT\"",
        "\"%Y-%m-%d %H:%M\"",
        "\"%b %e %H:%M\"",
        "\"extra operand %s\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/whoami.c": {
    "usage": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        60,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]...\\n\"",
        "\"\\\nPrint the user name associated with the current effective user ID.\\n\\\nSame as id -un.\\n\\\n\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\"extra operand %s\"",
        "\"cannot find name for user ID %lu\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/yes.c": {
    "usage": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": [
        "\"\\\nUsage: %s [STRING]...\\n\\\n  or:  %s OPTION\\n\\\n\"",
        "\"\\\nRepeatedly output a line with all specified STRING(s), or 'y'.\\n\\\n\\n\\\n\""
      ]
    },
    "main": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"\"",
        "\"+\"",
        "\"y\"",
        "\"standard output\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/blake2/b2sum.c": {
    "blake2b_stream": {
      "start_point": [
        29,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "blake2s_stream": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        128,
        1
      ],
      "strings": []
    },
    "blake2sp_stream": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "blake2bp_stream": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        230,
        1
      ],
      "strings": []
    },
    "usage": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": [
        "\"Usage: %s [OPTION]... [FILE]...\\n\"",
        "\"\\n\"",
        "\"With no FILE, or when FILE is -, read standard input.\\n\"",
        "\"\\n\"",
        "\"  -a <algo>    hash algorithm (blake2b is default): \\n\"",
        "\"               [blake2b|blake2s|blake2bp|blake2sp]\\n\"",
        "\"  -l <length>  digest length in bits, must not exceed the maximum for\\n\"",
        "\"               the selected algorithm and must be a multiple of 8\\n\"",
        "\"  --tag        create a BSD-style checksum\\n\"",
        "\"  --help       display this help and exit\\n\""
      ]
    },
    "main": {
      "start_point": [
        251,
        0
      ],
      "end_point": [
        387,
        1
      ],
      "strings": [
        "\"BLAKE2b\"",
        "\"help\"",
        "\"tag\"",
        "\"a:l:\"",
        "\"blake2b\"",
        "\"BLAKE2b\"",
        "\"blake2s\"",
        "\"BLAKE2s\"",
        "\"blake2bp\"",
        "\"BLAKE2bp\"",
        "\"blake2sp\"",
        "\"BLAKE2sp\"",
        "\"Invalid function name: `%s'\\n\"",
        "\"Invalid length argument: `%s'\\n\"",
        "\"help\"",
        "\"tag\"",
        "\"Invalid length argument: %lu\\n\"",
        "\"Maximum digest length for %s is %lu\\n\"",
        "\"-\"",
        "\"rb\"",
        "\"Could not open `%s': %s\\n\"",
        "\"Failed to hash `%s'\\n\"",
        "\"%s-%lu (%s) = \"",
        "\"%s (%s) = \"",
        "\"%02x\"",
        "\"\\n\"",
        "\"  %s\\n\""
      ]
    }
  },
  "coreutils/coreutils-8.29/src/blake2/b2sum.h": {},
  "coreutils/coreutils-8.29/src/blake2/blake2-impl.h": {
    "load32": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    },
    "load64": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "load16": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "store16": {
      "start_point": [
        79,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "store32": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "store64": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        118,
        1
      ],
      "strings": []
    },
    "load48": {
      "start_point": [
        120,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "store48": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    },
    "rotr32": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "rotr64": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": []
    },
    "secure_zero_memory": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    }
  },
  "coreutils/coreutils-8.29/src/blake2/blake2.h": {},
  "coreutils/coreutils-8.29/src/blake2/blake2b-ref.c": {
    "blake2b_set_lastnode": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        50,
        1
      ],
      "strings": []
    },
    "blake2b_is_lastblock": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "blake2b_set_lastblock": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "blake2b_increment_counter": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "blake2b_init0": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    },
    "blake2b_init_param": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "blake2b_init": {
      "start_point": [
        97,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    },
    "blake2b_init_key": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": []
    },
    "blake2b_compress": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    },
    "blake2b_update": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": []
    },
    "blake2b_final": {
      "start_point": [
        247,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": []
    },
    "blake2b": {
      "start_point": [
        272,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": []
    },
    "blake2": {
      "start_point": [
        301,
        0
      ],
      "end_point": [
        303,
        1
      ],
      "strings": []
    },
    "crypto_hash": {
      "start_point": [
        306,
        0
      ],
      "end_point": [
        309,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        315,
        0
      ],
      "end_point": [
        377,
        1
      ],
      "strings": [
        "\"ok\"",
        "\"error\""
      ]
    }
  }
}