{
  "cppi/cppi-1.18/build-aux/snippet/arg-nonnull.h": {},
  "cppi/cppi-1.18/build-aux/snippet/c++defs.h": {},
  "cppi/cppi-1.18/build-aux/snippet/warn-on-use.h": {},
  "cppi/cppi-1.18/build-aux/snippet/_Noreturn.h": {},
  "cppi/cppi-1.18/lib/c-ctype.c": {
    "c_isascii": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    },
    "c_isalnum": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "c_isalpha": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "c_isblank": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        99,
        1
      ],
      "strings": []
    },
    "c_iscntrl": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": []
    },
    "c_isdigit": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": []
    },
    "c_islower": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "c_isgraph": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "c_isprint": {
      "start_point": [
        206,
        0
      ],
      "end_point": [
        238,
        1
      ],
      "strings": []
    },
    "c_ispunct": {
      "start_point": [
        240,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": []
    },
    "c_isspace": {
      "start_point": [
        264,
        0
      ],
      "end_point": [
        269,
        1
      ],
      "strings": []
    },
    "c_isupper": {
      "start_point": [
        271,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": []
    },
    "c_isxdigit": {
      "start_point": [
        291,
        0
      ],
      "end_point": [
        316,
        1
      ],
      "strings": []
    },
    "c_tolower": {
      "start_point": [
        318,
        0
      ],
      "end_point": [
        355,
        1
      ],
      "strings": []
    },
    "c_toupper": {
      "start_point": [
        357,
        0
      ],
      "end_point": [
        394,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/c-ctype.h": {},
  "cppi/cppi-1.18/lib/c-strcase.h": {},
  "cppi/cppi-1.18/lib/c-strcasecmp.c": {
    "c_strcasecmp": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/c-strcaseeq.h": {
    "strcaseeq9": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        47,
        1
      ],
      "strings": []
    },
    "strcaseeq8": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        61,
        1
      ],
      "strings": []
    },
    "strcaseeq7": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "strcaseeq6": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    },
    "strcaseeq5": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "strcaseeq4": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    },
    "strcaseeq3": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": []
    },
    "strcaseeq2": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "strcaseeq1": {
      "start_point": [
        147,
        0
      ],
      "end_point": [
        159,
        1
      ],
      "strings": []
    },
    "strcaseeq0": {
      "start_point": [
        161,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/c-strncasecmp.c": {
    "c_strncasecmp": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/calloc.c": {
    "rpl_calloc": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        72,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/close-stream.c": {
    "close_stream": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        77,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/close-stream.h": {},
  "cppi/cppi-1.18/lib/closeout.c": {
    "close_stdout_set_file_name": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        43,
        1
      ],
      "strings": []
    },
    "close_stdout_set_ignore_EPIPE": {
      "start_point": [
        76,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "close_stdout": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": [
        "\"write error\"",
        "\"%s: %s\"",
        "\"%s\""
      ]
    }
  },
  "cppi/cppi-1.18/lib/closeout.h": {},
  "cppi/cppi-1.18/lib/errno.in.h": {},
  "cppi/cppi-1.18/lib/error.c": {
    "is_open": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": []
    },
    "flush_stdout": {
      "start_point": [
        141,
        0
      ],
      "end_point": [
        164,
        1
      ],
      "strings": []
    },
    "print_errno_message": {
      "start_point": [
        166,
        0
      ],
      "end_point": [
        195,
        1
      ],
      "strings": [
        "\"Unknown system error\"",
        "\": %s\"",
        "\": %s\""
      ]
    },
    "error_tail": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        281,
        1
      ],
      "strings": [
        "L\"out of memory\\n\"",
        "L\"???\"",
        "\"\\n\""
      ]
    },
    "error": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"%s: \"",
        "\"%s: \""
      ]
    },
    "error_at_line": {
      "start_point": [
        331,
        0
      ],
      "end_point": [
        392,
        1
      ],
      "strings": [
        "\"%s:\"",
        "\"%s:\"",
        "\"%s:%d: \"",
        "\" \"",
        "\"%s:%d: \"",
        "\" \""
      ]
    }
  },
  "cppi/cppi-1.18/lib/error.h": {},
  "cppi/cppi-1.18/lib/exitfail.c": {},
  "cppi/cppi-1.18/lib/exitfail.h": {},
  "cppi/cppi-1.18/lib/fpending.c": {
    "__fpending": {
      "start_point": [
        25,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/fpending.h": {},
  "cppi/cppi-1.18/lib/getopt.c": {
    "exchange": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": []
    },
    "_getopt_initialize": {
      "start_point": [
        223,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\""
      ]
    },
    "_getopt_internal_r": {
      "start_point": [
        344,
        0
      ],
      "end_point": [
        1124,
        1
      ],
      "strings": [
        "\"--\"",
        "\"%s: option '%s' is ambiguous; possibilities:\"",
        "\" '--%s'\"",
        "\"%s\"",
        "\"%s: option '%s' is ambiguous; possibilities:\"",
        "\" '--%s'\"",
        "\"\\\n%s: option '--%s' doesn't allow an argument\\n\"",
        "\"\\\n%s: option '--%s' doesn't allow an argument\\n\"",
        "\"\\\n%s: option '%c%s' doesn't allow an argument\\n\"",
        "\"\\\n%s: option '%c%s' doesn't allow an argument\\n\"",
        "\"%s\"",
        "\"\\\n%s: option '--%s' requires an argument\\n\"",
        "\"%s\"",
        "\"%s: option '--%s' requires an argument\\n\"",
        "\"%s: unrecognized option '--%s'\\n\"",
        "\"%s: unrecognized option '--%s'\\n\"",
        "\"%s: unrecognized option '%c%s'\\n\"",
        "\"%s: unrecognized option '%c%s'\\n\"",
        "\"%s\"",
        "\"\"",
        "\"%s: invalid option -- '%c'\\n\"",
        "\"%s: invalid option -- '%c'\\n\"",
        "\"%s\"",
        "\"%s: option requires an argument -- '%c'\\n\"",
        "\"%s\"",
        "\"%s: option requires an argument -- '%c'\\n\"",
        "\"%s: option '-W %s' is ambiguous\\n\"",
        "\"%s\"",
        "\"%s: option '-W %s' is ambiguous\\n\"",
        "\"\\\n%s: option '-W %s' doesn't allow an argument\\n\"",
        "\"%s\"",
        "\"\\\n%s: option '-W %s' doesn't allow an argument\\n\"",
        "\"\\\n%s: option '-W %s' requires an argument\\n\"",
        "\"%s\"",
        "\"\\\n%s: option '-W %s' requires an argument\\n\"",
        "\"\\\n%s: option requires an argument -- '%c'\\n\"",
        "\"%s\"",
        "\"%s: option requires an argument -- '%c'\\n\""
      ]
    },
    "_getopt_internal": {
      "start_point": [
        1126,
        0
      ],
      "end_point": [
        1145,
        1
      ],
      "strings": []
    },
    "getopt": {
      "start_point": [
        1155,
        0
      ],
      "end_point": [
        1162,
        1
      ],
      "strings": []
    },
    "__posix_getopt": {
      "start_point": [
        1165,
        0
      ],
      "end_point": [
        1172,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        1181,
        0
      ],
      "end_point": [
        1242,
        1
      ],
      "strings": [
        "\"abc:d:0123456789\"",
        "\"digits occur in two different argv-elements.\\n\"",
        "\"option %c\\n\"",
        "\"option a\\n\"",
        "\"option b\\n\"",
        "\"option c with value '%s'\\n\"",
        "\"?? getopt returned character code 0%o ??\\n\"",
        "\"non-option ARGV-elements: \"",
        "\"%s \"",
        "\"\\n\""
      ]
    }
  },
  "cppi/cppi-1.18/lib/getopt.in.h": {},
  "cppi/cppi-1.18/lib/getopt1.c": {
    "getopt_long": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "_getopt_long_r": {
      "start_point": [
        46,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "getopt_long_only": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        67,
        1
      ],
      "strings": []
    },
    "_getopt_long_only_r": {
      "start_point": [
        69,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        83,
        0
      ],
      "end_point": [
        167,
        1
      ],
      "strings": [
        "\"add\"",
        "\"append\"",
        "\"delete\"",
        "\"verbose\"",
        "\"create\"",
        "\"file\"",
        "\"abc:d:0123456789\"",
        "\"option %s\"",
        "\" with arg %s\"",
        "\"\\n\"",
        "\"digits occur in two different argv-elements.\\n\"",
        "\"option %c\\n\"",
        "\"option a\\n\"",
        "\"option b\\n\"",
        "\"option c with value '%s'\\n\"",
        "\"option d with value '%s'\\n\"",
        "\"?? getopt returned character code 0%o ??\\n\"",
        "\"non-option ARGV-elements: \"",
        "\"%s \"",
        "\"\\n\""
      ]
    }
  },
  "cppi/cppi-1.18/lib/getopt_int.h": {},
  "cppi/cppi-1.18/lib/gettext.h": {
    "pgettext_aux": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "npgettext_aux": {
      "start_point": [
        165,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "dcpgettext_expr": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        239,
        1
      ],
      "strings": []
    },
    "dcnpgettext_expr": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/intprops.h": {},
  "cppi/cppi-1.18/lib/inttypes.in.h": {},
  "cppi/cppi-1.18/lib/localcharset.c": {
    "get_charset_aliases": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        344,
        1
      ],
      "strings": [
        "\"charset.alias\"",
        "\"CHARSETALIASDIR\"",
        "\"\"",
        "\"\"",
        "\"r\"",
        "\"\"",
        "\"%50s %50s\"",
        "\"\"",
        "\"ISO8859-1\"",
        "\"\\0\"",
        "\"ISO-8859-1\"",
        "\"\\0\"",
        "\"ISO8859-2\"",
        "\"\\0\"",
        "\"ISO-8859-2\"",
        "\"\\0\"",
        "\"ISO8859-4\"",
        "\"\\0\"",
        "\"ISO-8859-4\"",
        "\"\\0\"",
        "\"ISO8859-5\"",
        "\"\\0\"",
        "\"ISO-8859-5\"",
        "\"\\0\"",
        "\"ISO8859-7\"",
        "\"\\0\"",
        "\"ISO-8859-7\"",
        "\"\\0\"",
        "\"ISO8859-9\"",
        "\"\\0\"",
        "\"ISO-8859-9\"",
        "\"\\0\"",
        "\"ISO8859-13\"",
        "\"\\0\"",
        "\"ISO-8859-13\"",
        "\"\\0\"",
        "\"ISO8859-15\"",
        "\"\\0\"",
        "\"ISO-8859-15\"",
        "\"\\0\"",
        "\"KOI8-R\"",
        "\"\\0\"",
        "\"KOI8-R\"",
        "\"\\0\"",
        "\"KOI8-U\"",
        "\"\\0\"",
        "\"KOI8-U\"",
        "\"\\0\"",
        "\"CP866\"",
        "\"\\0\"",
        "\"CP866\"",
        "\"\\0\"",
        "\"CP949\"",
        "\"\\0\"",
        "\"CP949\"",
        "\"\\0\"",
        "\"CP1131\"",
        "\"\\0\"",
        "\"CP1131\"",
        "\"\\0\"",
        "\"CP1251\"",
        "\"\\0\"",
        "\"CP1251\"",
        "\"\\0\"",
        "\"eucCN\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"eucJP\"",
        "\"\\0\"",
        "\"EUC-JP\"",
        "\"\\0\"",
        "\"eucKR\"",
        "\"\\0\"",
        "\"EUC-KR\"",
        "\"\\0\"",
        "\"Big5\"",
        "\"\\0\"",
        "\"BIG5\"",
        "\"\\0\"",
        "\"Big5HKSCS\"",
        "\"\\0\"",
        "\"BIG5-HKSCS\"",
        "\"\\0\"",
        "\"GBK\"",
        "\"\\0\"",
        "\"GBK\"",
        "\"\\0\"",
        "\"GB18030\"",
        "\"\\0\"",
        "\"GB18030\"",
        "\"\\0\"",
        "\"SJIS\"",
        "\"\\0\"",
        "\"SHIFT_JIS\"",
        "\"\\0\"",
        "\"ARMSCII-8\"",
        "\"\\0\"",
        "\"ARMSCII-8\"",
        "\"\\0\"",
        "\"PT154\"",
        "\"\\0\"",
        "\"PT154\"",
        "\"\\0\"",
        "\"*\"",
        "\"\\0\"",
        "\"UTF-8\"",
        "\"\\0\"",
        "\"ISO8859-1\"",
        "\"\\0\"",
        "\"ISO-8859-1\"",
        "\"\\0\"",
        "\"ISO8859-2\"",
        "\"\\0\"",
        "\"ISO-8859-2\"",
        "\"\\0\"",
        "\"ISO8859-5\"",
        "\"\\0\"",
        "\"ISO-8859-5\"",
        "\"\\0\"",
        "\"ISO8859-7\"",
        "\"\\0\"",
        "\"ISO-8859-7\"",
        "\"\\0\"",
        "\"ISO8859-8\"",
        "\"\\0\"",
        "\"ISO-8859-8\"",
        "\"\\0\"",
        "\"ISO8859-9\"",
        "\"\\0\"",
        "\"ISO-8859-9\"",
        "\"\\0\"",
        "\"eucJP\"",
        "\"\\0\"",
        "\"EUC-JP\"",
        "\"\\0\"",
        "\"SJIS\"",
        "\"\\0\"",
        "\"SHIFT_JIS\"",
        "\"\\0\"",
        "\"DECKANJI\"",
        "\"\\0\"",
        "\"DEC-KANJI\"",
        "\"\\0\"",
        "\"SDECKANJI\"",
        "\"\\0\"",
        "\"EUC-JP\"",
        "\"\\0\"",
        "\"eucTW\"",
        "\"\\0\"",
        "\"EUC-TW\"",
        "\"\\0\"",
        "\"DECHANYU\"",
        "\"\\0\"",
        "\"DEC-HANYU\"",
        "\"\\0\"",
        "\"DECHANZI\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"DECKOREAN\"",
        "\"\\0\"",
        "\"EUC-KR\"",
        "\"\\0\"",
        "\"CP936\"",
        "\"\\0\"",
        "\"GBK\"",
        "\"\\0\"",
        "\"CP1361\"",
        "\"\\0\"",
        "\"JOHAB\"",
        "\"\\0\"",
        "\"CP20127\"",
        "\"\\0\"",
        "\"ASCII\"",
        "\"\\0\"",
        "\"CP20866\"",
        "\"\\0\"",
        "\"KOI8-R\"",
        "\"\\0\"",
        "\"CP20936\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"CP21866\"",
        "\"\\0\"",
        "\"KOI8-RU\"",
        "\"\\0\"",
        "\"CP28591\"",
        "\"\\0\"",
        "\"ISO-8859-1\"",
        "\"\\0\"",
        "\"CP28592\"",
        "\"\\0\"",
        "\"ISO-8859-2\"",
        "\"\\0\"",
        "\"CP28593\"",
        "\"\\0\"",
        "\"ISO-8859-3\"",
        "\"\\0\"",
        "\"CP28594\"",
        "\"\\0\"",
        "\"ISO-8859-4\"",
        "\"\\0\"",
        "\"CP28595\"",
        "\"\\0\"",
        "\"ISO-8859-5\"",
        "\"\\0\"",
        "\"CP28596\"",
        "\"\\0\"",
        "\"ISO-8859-6\"",
        "\"\\0\"",
        "\"CP28597\"",
        "\"\\0\"",
        "\"ISO-8859-7\"",
        "\"\\0\"",
        "\"CP28598\"",
        "\"\\0\"",
        "\"ISO-8859-8\"",
        "\"\\0\"",
        "\"CP28599\"",
        "\"\\0\"",
        "\"ISO-8859-9\"",
        "\"\\0\"",
        "\"CP28605\"",
        "\"\\0\"",
        "\"ISO-8859-15\"",
        "\"\\0\"",
        "\"CP38598\"",
        "\"\\0\"",
        "\"ISO-8859-8\"",
        "\"\\0\"",
        "\"CP51932\"",
        "\"\\0\"",
        "\"EUC-JP\"",
        "\"\\0\"",
        "\"CP51936\"",
        "\"\\0\"",
        "\"GB2312\"",
        "\"\\0\"",
        "\"CP51949\"",
        "\"\\0\"",
        "\"EUC-KR\"",
        "\"\\0\"",
        "\"CP51950\"",
        "\"\\0\"",
        "\"EUC-TW\"",
        "\"\\0\"",
        "\"CP54936\"",
        "\"\\0\"",
        "\"GB18030\"",
        "\"\\0\"",
        "\"CP65001\"",
        "\"\\0\"",
        "\"UTF-8\"",
        "\"\\0\""
      ]
    },
    "locale_charset": {
      "start_point": [
        355,
        0
      ],
      "end_point": [
        552,
        1
      ],
      "strings": [
        "\"US-ASCII\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LANG\"",
        "\"CP%u\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LANG\"",
        "\"CP%u\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LANG\"",
        "\"\"",
        "\"CP%u\"",
        "\"\"",
        "\"ASCII\"",
        "\"UTF-8\"",
        "\"ASCII\""
      ]
    }
  },
  "cppi/cppi-1.18/lib/localcharset.h": {},
  "cppi/cppi-1.18/lib/malloc.c": {
    "rpl_malloc": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/mbrtowc.c": {
    "mbrtowc": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        320,
        1
      ],
      "strings": [
        "\"\"",
        "\"UTF-8\"",
        "\"EUC-JP\"",
        "\"EUC-KR\"",
        "\"GB2312\"",
        "\"BIG5\"",
        "\"EUC-TW\"",
        "\"GB18030\"",
        "\"SJIS\""
      ]
    },
    "rpl_mbrtowc": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        399,
        1
      ],
      "strings": [
        "\"\""
      ]
    }
  },
  "cppi/cppi-1.18/lib/mbsinit.c": {
    "mbsinit": [
      {
        "start_point": [
          28,
          0
        ],
        "end_point": [
          32,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          52,
          0
        ],
        "end_point": [
          58,
          1
        ],
        "strings": []
      }
    ]
  },
  "cppi/cppi-1.18/lib/msvc-inval.c": {
    "gl_msvc_invalid_parameter_handler": [
      {
        "start_point": [
          30,
          0
        ],
        "end_point": [
          37,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          47,
          0
        ],
        "end_point": [
          55,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          96,
          0
        ],
        "end_point": [
          110,
          1
        ],
        "strings": []
      }
    ],
    "gl_msvc_inval_current": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "gl_msvc_inval_ensure_handler": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/msvc-inval.h": {},
  "cppi/cppi-1.18/lib/msvc-nothrow.c": {
    "_gl_nothrow_get_osfhandle": {
      "start_point": [
        31,
        0
      ],
      "end_point": [
        39,
        5
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/msvc-nothrow.h": {},
  "cppi/cppi-1.18/lib/obstack.c": {
    "_obstack_begin": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    },
    "_obstack_begin_1": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": []
    },
    "_obstack_newchunk": {
      "start_point": [
        240,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": []
    },
    "_obstack_allocated_p": {
      "start_point": [
        317,
        0
      ],
      "end_point": [
        333,
        1
      ],
      "strings": []
    },
    "__obstack_free": {
      "start_point": [
        340,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": []
    },
    "_obstack_memory_used": {
      "start_point": [
        376,
        0
      ],
      "end_point": [
        387,
        1
      ],
      "strings": []
    },
    "print_and_abort": {
      "start_point": [
        403,
        0
      ],
      "end_point": [
        417,
        1
      ],
      "strings": [
        "\"%s\\n\"",
        "\"memory exhausted\"",
        "\"%s\\n\"",
        "\"memory exhausted\""
      ]
    }
  },
  "cppi/cppi-1.18/lib/obstack.h": {},
  "cppi/cppi-1.18/lib/progname.c": {
    "set_program_name": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": [
        "\"A NULL argv[0] was passed through an exec system call.\\n\"",
        "\"/.libs/\"",
        "\"lt-\""
      ]
    }
  },
  "cppi/cppi-1.18/lib/progname.h": {},
  "cppi/cppi-1.18/lib/quote.h": {},
  "cppi/cppi-1.18/lib/quotearg.c": {
    "clone_quoting_options": {
      "start_point": [
        106,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "get_quoting_style": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "set_quoting_style": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        129,
        1
      ],
      "strings": []
    },
    "set_char_quoting": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        146,
        1
      ],
      "strings": []
    },
    "set_quoting_flags": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        161,
        1
      ],
      "strings": []
    },
    "set_custom_quoting": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        174,
        1
      ],
      "strings": []
    },
    "quoting_options_from_style": {
      "start_point": [
        177,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "gettext_quote": {
      "start_point": [
        191,
        0
      ],
      "end_point": [
        225,
        1
      ],
      "strings": [
        "\"UTF-8\"",
        "\"\\xe2\\x80\\x98\"",
        "\"\\xe2\\x80\\x99\"",
        "\"GB18030\"",
        "\"\\xa1\\ae\"",
        "\"\\xa1\\xaf\"",
        "\"\\\"\"",
        "\"'\""
      ]
    },
    "quotearg_buffer_restyled": {
      "start_point": [
        240,
        0
      ],
      "end_point": [
        655,
        1
      ],
      "strings": [
        "\"\\\"\"",
        "\"`\"",
        "\"'\"",
        "\"'\""
      ]
    },
    "quotearg_buffer": {
      "start_point": [
        666,
        0
      ],
      "end_point": [
        678,
        1
      ],
      "strings": []
    },
    "quotearg_alloc": {
      "start_point": [
        681,
        0
      ],
      "end_point": [
        686,
        1
      ],
      "strings": []
    },
    "quotearg_alloc_mem": {
      "start_point": [
        694,
        0
      ],
      "end_point": [
        714,
        1
      ],
      "strings": []
    },
    "quotearg_free": {
      "start_point": [
        730,
        0
      ],
      "end_point": [
        749,
        1
      ],
      "strings": []
    },
    "quotearg_n_options": {
      "start_point": [
        759,
        0
      ],
      "end_point": [
        817,
        1
      ],
      "strings": []
    },
    "quotearg_n": {
      "start_point": [
        819,
        0
      ],
      "end_point": [
        823,
        1
      ],
      "strings": []
    },
    "quotearg_n_mem": {
      "start_point": [
        825,
        0
      ],
      "end_point": [
        829,
        1
      ],
      "strings": []
    },
    "quotearg": {
      "start_point": [
        831,
        0
      ],
      "end_point": [
        835,
        1
      ],
      "strings": []
    },
    "quotearg_mem": {
      "start_point": [
        837,
        0
      ],
      "end_point": [
        841,
        1
      ],
      "strings": []
    },
    "quotearg_n_style": {
      "start_point": [
        843,
        0
      ],
      "end_point": [
        848,
        1
      ],
      "strings": []
    },
    "quotearg_n_style_mem": {
      "start_point": [
        850,
        0
      ],
      "end_point": [
        856,
        1
      ],
      "strings": []
    },
    "quotearg_style": {
      "start_point": [
        858,
        0
      ],
      "end_point": [
        862,
        1
      ],
      "strings": []
    },
    "quotearg_style_mem": {
      "start_point": [
        864,
        0
      ],
      "end_point": [
        868,
        1
      ],
      "strings": []
    },
    "quotearg_char_mem": {
      "start_point": [
        870,
        0
      ],
      "end_point": [
        877,
        1
      ],
      "strings": []
    },
    "quotearg_char": {
      "start_point": [
        879,
        0
      ],
      "end_point": [
        883,
        1
      ],
      "strings": []
    },
    "quotearg_colon": {
      "start_point": [
        885,
        0
      ],
      "end_point": [
        889,
        1
      ],
      "strings": []
    },
    "quotearg_colon_mem": {
      "start_point": [
        891,
        0
      ],
      "end_point": [
        895,
        1
      ],
      "strings": []
    },
    "quotearg_n_custom": {
      "start_point": [
        897,
        0
      ],
      "end_point": [
        903,
        1
      ],
      "strings": []
    },
    "quotearg_n_custom_mem": {
      "start_point": [
        905,
        0
      ],
      "end_point": [
        913,
        1
      ],
      "strings": []
    },
    "quotearg_custom": {
      "start_point": [
        915,
        0
      ],
      "end_point": [
        920,
        1
      ],
      "strings": []
    },
    "quotearg_custom_mem": {
      "start_point": [
        922,
        0
      ],
      "end_point": [
        928,
        1
      ],
      "strings": []
    },
    "quote_n_mem": {
      "start_point": [
        940,
        0
      ],
      "end_point": [
        944,
        1
      ],
      "strings": []
    },
    "quote_mem": {
      "start_point": [
        946,
        0
      ],
      "end_point": [
        950,
        1
      ],
      "strings": []
    },
    "quote_n": {
      "start_point": [
        952,
        0
      ],
      "end_point": [
        956,
        1
      ],
      "strings": []
    },
    "quote": {
      "start_point": [
        958,
        0
      ],
      "end_point": [
        962,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/quotearg.h": {},
  "cppi/cppi-1.18/lib/realloc.c": {
    "rpl_realloc": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/stat-macros.h": {},
  "cppi/cppi-1.18/lib/stdarg.in.h": {},
  "cppi/cppi-1.18/lib/stdbool.in.h": {},
  "cppi/cppi-1.18/lib/stddef.in.h": {},
  "cppi/cppi-1.18/lib/stdint.in.h": {},
  "cppi/cppi-1.18/lib/stdlib.in.h": {},
  "cppi/cppi-1.18/lib/stpcpy.c": {
    "__stpcpy": {
      "start_point": [
        34,
        0
      ],
      "end_point": [
        45,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/streq.h": {
    "streq9": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "streq8": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        51,
        1
      ],
      "strings": []
    },
    "streq7": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        65,
        1
      ],
      "strings": []
    },
    "streq6": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "streq5": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        93,
        1
      ],
      "strings": []
    },
    "streq4": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        107,
        1
      ],
      "strings": []
    },
    "streq3": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    },
    "streq2": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": []
    },
    "streq1": {
      "start_point": [
        137,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "streq0": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/strerror-override.c": {
    "strerror_override": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": [
        "\"Success\"",
        "\"Operation now in progress\"",
        "\"Operation already in progress\"",
        "\"Socket operation on non-socket\"",
        "\"Destination address required\"",
        "\"Message too long\"",
        "\"Protocol wrong type for socket\"",
        "\"Protocol not available\"",
        "\"Protocol not supported\"",
        "\"Operation not supported\"",
        "\"Address family not supported by protocol\"",
        "\"Address already in use\"",
        "\"Cannot assign requested address\"",
        "\"Network is down\"",
        "\"Network is unreachable\"",
        "\"Connection reset by peer\"",
        "\"No buffer space available\"",
        "\"Transport endpoint is already connected\"",
        "\"Transport endpoint is not connected\"",
        "\"Connection timed out\"",
        "\"Connection refused\"",
        "\"Too many levels of symbolic links\"",
        "\"No route to host\"",
        "\"Operation would block\"",
        "\"Text file busy\"",
        "\"No data available\"",
        "\"Out of streams resources\"",
        "\"Device not a stream\"",
        "\"Timer expired\"",
        "\"Other error\"",
        "\"Socket type not supported\"",
        "\"Protocol family not supported\"",
        "\"Cannot send after transport endpoint shutdown\"",
        "\"Too many references: cannot splice\"",
        "\"Host is down\"",
        "\"Too many processes\"",
        "\"Too many users\"",
        "\"Disk quota exceeded\"",
        "\"Stale NFS file handle\"",
        "\"Object is remote\"",
        "\"Overlapped operation aborted\"",
        "\"Overlapped I/O event object not in signaled state\"",
        "\"Overlapped operations will complete later\"",
        "\"Network subsystem is unavailable\"",
        "\"Winsock.dll version out of range\"",
        "\"Successful WSAStartup not yet performed\"",
        "\"Graceful shutdown in progress\"",
        "\"No more results\"",
        "\"Call was canceled\"",
        "\"Procedure call table is invalid\"",
        "\"Service provider is invalid\"",
        "\"Service provider failed to initialize\"",
        "\"System call failure\"",
        "\"Service not found\"",
        "\"Class type not found\"",
        "\"Database query was refused\"",
        "\"Host not found\"",
        "\"Nonauthoritative host not found\"",
        "\"Nonrecoverable error\"",
        "\"Valid name, no data record of requested type\"",
        "\"No message of desired type\"",
        "\"Identifier removed\"",
        "\"Link has been severed\"",
        "\"Protocol error\"",
        "\"Multihop attempted\"",
        "\"Bad message\"",
        "\"Value too large for defined data type\"",
        "\"Not supported\"",
        "\"Network dropped connection on reset\"",
        "\"Software caused connection abort\"",
        "\"Stale NFS file handle\"",
        "\"Disk quota exceeded\"",
        "\"Operation canceled\"",
        "\"Owner died\"",
        "\"State not recoverable\"",
        "\"Invalid or incomplete multibyte or wide character\""
      ]
    }
  },
  "cppi/cppi-1.18/lib/strerror-override.h": {},
  "cppi/cppi-1.18/lib/strerror.c": {},
  "cppi/cppi-1.18/lib/string.in.h": {},
  "cppi/cppi-1.18/lib/sys_types.in.h": {},
  "cppi/cppi-1.18/lib/time.in.h": {},
  "cppi/cppi-1.18/lib/timespec.c": {},
  "cppi/cppi-1.18/lib/timespec.h": {
    "timespec_cmp": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        62,
        1
      ],
      "strings": []
    },
    "timespec_sign": {
      "start_point": [
        66,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "timespectod": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        84,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/unistd.c": {},
  "cppi/cppi-1.18/lib/unistd.in.h": {
    "rpl_environ": {
      "start_point": [
        400,
        0
      ],
      "end_point": [
        404,
        1
      ],
      "strings": []
    },
    "getpagesize": {
      "start_point": [
        858,
        0
      ],
      "end_point": [
        862,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/unlocked-io.h": {},
  "cppi/cppi-1.18/lib/verify.h": {},
  "cppi/cppi-1.18/lib/version-etc-fsf.c": {},
  "cppi/cppi-1.18/lib/version-etc.c": {
    "version_etc_arn": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": [
        "\"%s (%s) %s\\n\"",
        "\"%s %s\\n\"",
        "\"Packaged by %s (%s)\\n\"",
        "\"Packaged by %s\\n\"",
        "\"(C)\"",
        "\"\\\n\\n\\\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\\\nThis is free software: you are free to change and redistribute it.\\n\\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\\n\\n\\\n\"",
        "\"Written by %s.\\n\"",
        "\"Written by %s and %s.\\n\"",
        "\"Written by %s, %s, and %s.\\n\"",
        "\"Written by %s, %s, %s,\\nand %s.\\n\"",
        "\"Written by %s, %s, %s,\\n%s, and %s.\\n\"",
        "\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\"",
        "\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\"",
        "\"\\\nWritten by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\"",
        "\"\\\nWritten by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\"",
        "\"\\\nWritten by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\""
      ]
    },
    "version_etc_ar": {
      "start_point": [
        178,
        0
      ],
      "end_point": [
        188,
        1
      ],
      "strings": []
    },
    "version_etc_va": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": []
    },
    "version_etc": {
      "start_point": [
        225,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": []
    },
    "emit_bug_reporting_address": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        257,
        1
      ],
      "strings": [
        "\"\\nReport bugs to: %s\\n\"",
        "\"Report %s bugs to: %s\\n\"",
        "\"%s home page: <%s>\\n\"",
        "\"%s home page: <http://www.gnu.org/software/%s/>\\n\"",
        "\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\""
      ]
    }
  },
  "cppi/cppi-1.18/lib/version-etc.h": {},
  "cppi/cppi-1.18/lib/wchar.in.h": {},
  "cppi/cppi-1.18/lib/wctype-h.c": {},
  "cppi/cppi-1.18/lib/wctype.in.h": {
    "rpl_towlower": {
      "start_point": [
        343,
        0
      ],
      "end_point": [
        347,
        1
      ],
      "strings": []
    },
    "rpl_towupper": {
      "start_point": [
        352,
        0
      ],
      "end_point": [
        356,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/xalloc-die.c": {
    "xalloc_die": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"memory exhausted\""
      ]
    }
  },
  "cppi/cppi-1.18/lib/xalloc-oversized.h": {},
  "cppi/cppi-1.18/lib/xalloc.h": {
    "xnmalloc": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "xnrealloc": [
      {
        "start_point": [
          111,
          0
        ],
        "end_point": [
          117,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          232,
          29
        ],
        "end_point": [
          236,
          1
        ],
        "strings": []
      }
    ],
    "x2nrealloc": [
      {
        "start_point": [
          174,
          0
        ],
        "end_point": [
          206,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          244,
          29
        ],
        "end_point": [
          248,
          1
        ],
        "strings": []
      }
    ],
    "xcharalloc": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": []
    },
    "xrealloc": {
      "start_point": [
        226,
        29
      ],
      "end_point": [
        230,
        1
      ],
      "strings": []
    },
    "x2realloc": {
      "start_point": [
        238,
        29
      ],
      "end_point": [
        242,
        1
      ],
      "strings": []
    },
    "xmemdup": {
      "start_point": [
        250,
        29
      ],
      "end_point": [
        254,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/xmalloc.c": {
    "xmalloc": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        44,
        1
      ],
      "strings": []
    },
    "xrealloc": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "x2realloc": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        76,
        1
      ],
      "strings": []
    },
    "xzalloc": {
      "start_point": [
        82,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "xcalloc": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "xmemdup": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        113,
        1
      ],
      "strings": []
    },
    "xstrdup": {
      "start_point": [
        117,
        0
      ],
      "end_point": [
        121,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/xstrtol-error.c": {
    "xstrtol_error": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": [
        "\"--\"",
        "\"invalid %s%s argument '%s'\"",
        "\"invalid suffix in %s%s argument '%s'\"",
        "\"%s%s argument '%s' too large\""
      ]
    },
    "xstrtol_fatal": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        97,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/xstrtol.c": {
    "bkm_scale": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        73,
        1
      ],
      "strings": []
    },
    "bkm_scale_by_power": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": []
    },
    "__xstrtol": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    }
  },
  "cppi/cppi-1.18/lib/xstrtol.h": {},
  "cppi/cppi-1.18/lib/xstrtoul.c": {},
  "cppi/cppi-1.18/src/cpp-cond.c": {
    "hash": {
      "start_point": [
        47,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "cpp_cond_lookup": {
      "start_point": [
        111,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"src/cpp.gp\"",
        "\"pragma\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"src/cpp.gp\"",
        "\"**\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"src/cpp.gp\"",
        "\"if\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"src/cpp.gp\"",
        "\"else\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"src/cpp.gp\"",
        "\"elif\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"src/cpp.gp\"",
        "\"endif\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"src/cpp.gp\"",
        "\"ifdef\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"src/cpp.gp\"",
        "\"ifndef\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"src/cpp.gp\"",
        "\"define\""
      ]
    }
  },
  "cppi/cppi-1.18/src/cppi.c": {
    "INPUT_AND_ECHO": {
      "start_point": [
        1221,
        0
      ],
      "end_point": [
        1228,
        1
      ],
      "strings": []
    },
    "lookup_cpp_keyword": {
      "start_point": [
        1234,
        0
      ],
      "end_point": [
        1257,
        1
      ],
      "strings": []
    },
    "kth_entry": {
      "start_point": [
        1259,
        0
      ],
      "end_point": [
        1265,
        1
      ],
      "strings": []
    },
    "pop": {
      "start_point": [
        1267,
        0
      ],
      "end_point": [
        1273,
        1
      ],
      "strings": []
    },
    "push": {
      "start_point": [
        1275,
        0
      ],
      "end_point": [
        1283,
        1
      ],
      "strings": []
    },
    "emit_or_check": {
      "start_point": [
        1285,
        0
      ],
      "end_point": [
        1334,
        1
      ],
      "strings": [
        "\" \"",
        "\" \""
      ]
    },
    "emit_indented_cpp": {
      "start_point": [
        1336,
        0
      ],
      "end_point": [
        1426,
        1
      ],
      "strings": [
        "\"%s: line %d: found #%s without matching #if\"",
        "\"%s: line %d: found #%s without matching #if\"",
        "\"%s: line %d: not properly indented\""
      ]
    },
    "yy_get_next_buffer": {
      "start_point": [
        2077,
        0
      ],
      "end_point": [
        2207,
        1
      ],
      "strings": [
        "\"fatal flex scanner internal error--end of buffer missed\"",
        "\"fatal error - scanner input buffer overflow\"",
        "\"out of dynamic memory in yy_get_next_buffer()\""
      ]
    },
    "yy_get_previous_state": {
      "start_point": [
        2211,
        4
      ],
      "end_point": [
        2230,
        1
      ],
      "strings": []
    },
    "yy_try_NUL_trans": {
      "start_point": [
        2237,
        4
      ],
      "end_point": [
        2245,
        1
      ],
      "strings": []
    },
    "yyunput": {
      "start_point": [
        2247,
        4
      ],
      "end_point": [
        2282,
        1
      ],
      "strings": [
        "\"flex scanner push-back overflow\""
      ]
    },
    "input": {
      "start_point": [
        2288,
        4
      ],
      "end_point": [
        2357,
        1
      ],
      "strings": []
    },
    "yyrestart": {
      "start_point": [
        2365,
        4
      ],
      "end_point": [
        2376,
        1
      ],
      "strings": []
    },
    "yy_switch_to_buffer": {
      "start_point": [
        2382,
        4
      ],
      "end_point": [
        2411,
        1
      ],
      "strings": []
    },
    "yy_load_buffer_state": {
      "start_point": [
        2413,
        0
      ],
      "end_point": [
        2419,
        1
      ],
      "strings": []
    },
    "yy_create_buffer": {
      "start_point": [
        2427,
        4
      ],
      "end_point": [
        2449,
        1
      ],
      "strings": [
        "\"out of dynamic memory in yy_create_buffer()\"",
        "\"out of dynamic memory in yy_create_buffer()\""
      ]
    },
    "yy_delete_buffer": {
      "start_point": [
        2455,
        4
      ],
      "end_point": [
        2468,
        1
      ],
      "strings": []
    },
    "yy_init_buffer": {
      "start_point": [
        2474,
        4
      ],
      "end_point": [
        2496,
        1
      ],
      "strings": []
    },
    "yy_flush_buffer": {
      "start_point": [
        2502,
        4
      ],
      "end_point": [
        2523,
        1
      ],
      "strings": []
    },
    "yypush_buffer_state": {
      "start_point": [
        2531,
        0
      ],
      "end_point": [
        2555,
        1
      ],
      "strings": []
    },
    "yypop_buffer_state": {
      "start_point": [
        2561,
        0
      ],
      "end_point": [
        2575,
        1
      ],
      "strings": []
    },
    "yyensure_buffer_stack": {
      "start_point": [
        2580,
        0
      ],
      "end_point": [
        2621,
        1
      ],
      "strings": [
        "\"out of dynamic memory in yyensure_buffer_stack()\"",
        "\"out of dynamic memory in yyensure_buffer_stack()\""
      ]
    },
    "yy_scan_buffer": {
      "start_point": [
        2629,
        0
      ],
      "end_point": [
        2656,
        1
      ],
      "strings": [
        "\"out of dynamic memory in yy_scan_buffer()\""
      ]
    },
    "yy_scan_string": {
      "start_point": [
        2666,
        0
      ],
      "end_point": [
        2670,
        1
      ],
      "strings": []
    },
    "yy_scan_bytes": {
      "start_point": [
        2679,
        0
      ],
      "end_point": [
        2707,
        1
      ],
      "strings": [
        "\"out of dynamic memory in yy_scan_bytes()\"",
        "\"bad buffer in yy_scan_bytes()\""
      ]
    },
    "yy_fatal_error": {
      "start_point": [
        2713,
        0
      ],
      "end_point": [
        2717,
        1
      ],
      "strings": [
        "\"%s\\n\""
      ]
    },
    "yyget_lineno": {
      "start_point": [
        2741,
        0
      ],
      "end_point": [
        2745,
        1
      ],
      "strings": []
    },
    "yyget_in": {
      "start_point": [
        2750,
        0
      ],
      "end_point": [
        2753,
        1
      ],
      "strings": []
    },
    "yyget_out": {
      "start_point": [
        2758,
        0
      ],
      "end_point": [
        2761,
        1
      ],
      "strings": []
    },
    "yyget_leng": {
      "start_point": [
        2766,
        0
      ],
      "end_point": [
        2769,
        1
      ],
      "strings": []
    },
    "yyget_text": {
      "start_point": [
        2775,
        0
      ],
      "end_point": [
        2778,
        1
      ],
      "strings": []
    },
    "yyset_lineno": {
      "start_point": [
        2784,
        0
      ],
      "end_point": [
        2788,
        1
      ],
      "strings": []
    },
    "yyset_in": {
      "start_point": [
        2796,
        0
      ],
      "end_point": [
        2799,
        1
      ],
      "strings": []
    },
    "yyset_out": {
      "start_point": [
        2801,
        0
      ],
      "end_point": [
        2804,
        1
      ],
      "strings": []
    },
    "yyget_debug": {
      "start_point": [
        2806,
        0
      ],
      "end_point": [
        2809,
        1
      ],
      "strings": []
    },
    "yyset_debug": {
      "start_point": [
        2811,
        0
      ],
      "end_point": [
        2814,
        1
      ],
      "strings": []
    },
    "yy_init_globals": {
      "start_point": [
        2816,
        0
      ],
      "end_point": [
        2842,
        1
      ],
      "strings": []
    },
    "yylex_destroy": {
      "start_point": [
        2845,
        0
      ],
      "end_point": [
        2864,
        1
      ],
      "strings": []
    },
    "yy_flex_strncpy": {
      "start_point": [
        2871,
        0
      ],
      "end_point": [
        2876,
        1
      ],
      "strings": []
    },
    "yy_flex_strlen": {
      "start_point": [
        2880,
        0
      ],
      "end_point": [
        2887,
        1
      ],
      "strings": []
    },
    "yyalloc": {
      "start_point": [
        2890,
        0
      ],
      "end_point": [
        2893,
        1
      ],
      "strings": []
    },
    "yyrealloc": {
      "start_point": [
        2895,
        0
      ],
      "end_point": [
        2905,
        1
      ],
      "strings": []
    },
    "yyfree": {
      "start_point": [
        2907,
        0
      ],
      "end_point": [
        2910,
        1
      ],
      "strings": []
    },
    "cpp_indent": {
      "start_point": [
        2918,
        0
      ],
      "end_point": [
        2946,
        1
      ],
      "strings": [
        "\"-\"",
        "\"standard input\"",
        "\"r\"",
        "\"%s\"",
        "\"%s\""
      ]
    },
    "usage": {
      "start_point": [
        2949,
        0
      ],
      "end_point": [
        3017,
        1
      ],
      "strings": [
        "\"Try `%s --help' for more information.\\n\"",
        "\"\\\nUsage: %s [FILE]\\n\\\n  or:  %s -c [OPTION] [FILE]...\\n\\\n\"",
        "\"\\\n\\n\\\nIndent the C preprocessor directives in FILE to reflect their nesting\\n\\\nand ensure that there is exactly one space character between each #if,\\n\\\n#elif, #define directive and the following token, and write the result\\n\\\n\"",
        "\"\\\nto standard output.  The number of spaces between the `#' and the following\\n\\\ndirective must correspond to the level of nesting of that directive.\\n\\\nWith no FILE, or when FILE is -, read standard input.\\n\\\n\"",
        "\"\\\n\\n\\\n  -a, --ansi             when checking, fail if text follows #else or #endif\\n\\\n  -c, --check            set exit code, but don't produce any output\\n\\\n  -l, --list-files-only  don't generate diagnostics about indentation;\\n\\\n                         print to stdout only the names of files that\\n\\\n                         are not properly indented\\n\\\n\"",
        "\"\\\n  -m, --max-string-length=LENGTH\\n\\\n                         fail if there is a double-quoted string longer\\n\\\n                         than LENGTH;  if LENGTH is 0 (the default),\\n\\\n                         then there is no limit\\n\\\n\"",
        "\"\\n\\\nWith the -c option, don't write to stdout.  Instead, check the\\n\\\nindentation of the specified files giving diagnostics for preprocessor\\n\\\nlines that aren't properly indented or are otherwise invalid.\\n\\\n\"",
        "\"\\\n\\n\\\nNote that --ansi without --check does not correct the problem of\\n\\\nnon-ANSI text following #else and #endif directives.\\n\\\n\"",
        "\"\\\n\\n\\\nThe exit code will be one of these:\\n\\\n  0  all directives properly indented\\n\\\n  1  some cpp directive(s) improperly indented, or\\n\\\n     text follows #else/#endif (enabled with --check --ansi), or\\n\\\n     a double-quoted string is longer than the specified maximum\\n\\\n  2  #if/#endif mismatch, EOF in comment or string\\n\\\n  3  file (e.g. open/read/write) error\\n\\\n\"",
        "\"\\\n\\n\\\nA pragma directive may have its `#' indented.\\n\\\n\"",
        "\"\\nReport bugs to <%s>.\\n\""
      ]
    },
    "gobble_define": {
      "start_point": [
        3024,
        0
      ],
      "end_point": [
        3043,
        1
      ],
      "strings": []
    },
    "gobble_c_comment": {
      "start_point": [
        3048,
        0
      ],
      "end_point": [
        3078,
        1
      ],
      "strings": [
        "\"%s: line %d: EOF in comment\""
      ]
    },
    "gobble_line": {
      "start_point": [
        3082,
        0
      ],
      "end_point": [
        3094,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        3096,
        0
      ],
      "end_point": [
        3176,
        1
      ],
      "strings": [
        "\"\"",
        "\"aclm:\"",
        "\"invalid maximum string length %s\"",
        "\"too many arguments\""
      ]
    }
  },
  "cppi/cppi-1.18/src/cppi.l": {
    "noyywrap": {
      "start_point": [
        16,
        1
      ],
      "end_point": [
        22,
        1
      ],
      "strings": [
        "\"config.h\"",
        "\"system.h\""
      ]
    },
    "INPUT_AND_ECHO": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    },
    "lookup_cpp_keyword": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    },
    "kth_entry": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "pop": {
      "start_point": [
        204,
        0
      ],
      "end_point": [
        210,
        1
      ],
      "strings": []
    },
    "push": {
      "start_point": [
        212,
        0
      ],
      "end_point": [
        220,
        1
      ],
      "strings": []
    },
    "emit_or_check": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        271,
        1
      ],
      "strings": [
        "\" \"",
        "\" \""
      ]
    },
    "emit_indented_cpp": {
      "start_point": [
        273,
        0
      ],
      "end_point": [
        363,
        1
      ],
      "strings": [
        "\"%s: line %d: found #%s without matching #if\"",
        "\"%s: line %d: found #%s without matching #if\"",
        "\"%s: line %d: not properly indented\""
      ]
    },
    "cpp_indent": {
      "start_point": [
        601,
        0
      ],
      "end_point": [
        629,
        1
      ],
      "strings": [
        "\"-\"",
        "\"standard input\"",
        "\"r\"",
        "\"%s\"",
        "\"%s\""
      ]
    },
    "usage": {
      "start_point": [
        632,
        0
      ],
      "end_point": [
        700,
        1
      ],
      "strings": [
        "\"Try `%s --help' for more information.\\n\"",
        "\"\\\nUsage: %s [FILE]\\n\\\n  or:  %s -c [OPTION] [FILE]...\\n\\\n\"",
        "\"\\\n\\n\\\nIndent the C preprocessor directives in FILE to reflect their nesting\\n\\\nand ensure that there is exactly one space character between each #if,\\n\\\n#elif, #define directive and the following token, and write the result\\n\\\n\"",
        "\"\\\nto standard output.  The number of spaces between the `#' and the following\\n\\\ndirective must correspond to the level of nesting of that directive.\\n\\\nWith no FILE, or when FILE is -, read standard input.\\n\\\n\"",
        "\"\\\n\\n\\\n  -a, --ansi             when checking, fail if text follows #else or #endif\\n\\\n  -c, --check            set exit code, but don't produce any output\\n\\\n  -l, --list-files-only  don't generate diagnostics about indentation;\\n\\\n                         print to stdout only the names of files that\\n\\\n                         are not properly indented\\n\\\n\"",
        "\"\\\n  -m, --max-string-length=LENGTH\\n\\\n                         fail if there is a double-quoted string longer\\n\\\n                         than LENGTH;  if LENGTH is 0 (the default),\\n\\\n                         then there is no limit\\n\\\n\"",
        "\"\\n\\\nWith the -c option, don't write to stdout.  Instead, check the\\n\\\nindentation of the specified files giving diagnostics for preprocessor\\n\\\nlines that aren't properly indented or are otherwise invalid.\\n\\\n\"",
        "\"\\\n\\n\\\nNote that --ansi without --check does not correct the problem of\\n\\\nnon-ANSI text following #else and #endif directives.\\n\\\n\"",
        "\"\\\n\\n\\\nThe exit code will be one of these:\\n\\\n  0  all directives properly indented\\n\\\n  1  some cpp directive(s) improperly indented, or\\n\\\n     text follows #else/#endif (enabled with --check --ansi), or\\n\\\n     a double-quoted string is longer than the specified maximum\\n\\\n  2  #if/#endif mismatch, EOF in comment or string\\n\\\n  3  file (e.g. open/read/write) error\\n\\\n\"",
        "\"\\\n\\n\\\nA pragma directive may have its `#' indented.\\n\\\n\"",
        "\"\\nReport bugs to <%s>.\\n\""
      ]
    },
    "gobble_define": {
      "start_point": [
        707,
        0
      ],
      "end_point": [
        726,
        1
      ],
      "strings": []
    },
    "gobble_c_comment": {
      "start_point": [
        731,
        0
      ],
      "end_point": [
        761,
        1
      ],
      "strings": [
        "\"%s: line %d: EOF in comment\""
      ]
    },
    "gobble_line": {
      "start_point": [
        765,
        0
      ],
      "end_point": [
        777,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        779,
        0
      ],
      "end_point": [
        859,
        1
      ],
      "strings": [
        "\"\"",
        "\"aclm:\"",
        "\"invalid maximum string length %s\"",
        "\"too many arguments\""
      ]
    }
  },
  "cppi/cppi-1.18/src/system.h": {
    "to_uchar": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        77,
        61
      ],
      "strings": []
    }
  }
}