{
  "gawk/gawk-4.2.1/array.c": {
    "register_array_func": {
      "start_point": [
        63,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "array_init": {
      "start_point": [
        80,
        0
      ],
      "end_point": [
        88,
        1
      ],
      "strings": []
    },
    "make_array": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "null_array": {
      "start_point": [
        109,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "null_lookup": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": []
    },
    "null_length": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": []
    },
    "null_dump": {
      "start_point": [
        172,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": [
        "\"array `%s' is empty\\n\""
      ]
    },
    "assoc_copy": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    },
    "assoc_dump": {
      "start_point": [
        197,
        0
      ],
      "end_point": [
        202,
        1
      ],
      "strings": []
    },
    "make_aname": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": [
        "\"make_aname\"",
        "\"[\\\"%s\\\"]\"",
        "\"make_aname\"",
        "\"make_aname\""
      ]
    },
    "array_vname": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": [
        "\"from %s\"",
        "\"array_vname\"",
        "\"array_vname\"",
        "\"%s (\"",
        "\", \"",
        "\")\""
      ]
    },
    "force_array": {
      "start_point": [
        332,
        0
      ],
      "end_point": [
        371,
        1
      ],
      "strings": [
        "\"attempt to use a scalar value as array\"",
        "\"attempt to use scalar parameter `%s' as an array\"",
        "\"attempt to use scalar `%s' as an array\""
      ]
    },
    "set_SUBSEP": {
      "start_point": [
        376,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": []
    },
    "concat_exp": {
      "start_point": [
        387,
        0
      ],
      "end_point": [
        439,
        1
      ],
      "strings": [
        "\"attempt to use array `%s' in a scalar context\"",
        "\"concat_exp\""
      ]
    },
    "adjust_fcall_stack": {
      "start_point": [
        447,
        0
      ],
      "end_point": [
        527,
        1
      ],
      "strings": []
    },
    "do_delete": {
      "start_point": [
        537,
        0
      ],
      "end_point": [
        622,
        1
      ],
      "strings": [
        "\"attempt to use array `%s' in a scalar context\"",
        "\"delete: index `%.*s' not in array `%s'\"",
        "\"attempt to use scalar `%s[\\\"%.*s\\\"]' as an array\""
      ]
    },
    "do_delete_loop": {
      "start_point": [
        633,
        0
      ],
      "end_point": [
        652,
        1
      ],
      "strings": []
    },
    "value_info": {
      "start_point": [
        657,
        0
      ],
      "end_point": [
        724,
        1
      ],
      "strings": [
        "\"<(null)>\"",
        "\"<\"",
        "\"\\\"%.*s\\\"\"",
        "\":%s\"",
        "\"%.*R*g\"",
        "\":%s\"",
        "\"%Zd\"",
        "\":%.*g\"",
        "\">\"",
        "\"<%s>\"",
        "\"%.*R*g\"",
        "\"<%s>\"",
        "\"%Zd\"",
        "\"<%.*g>\"",
        "\":%s\"",
        "\":%ld\"",
        "\":\"",
        "\"][\"",
        "\"stfmt=%d, \"",
        "\"FMT=\\\"%s\\\"\"",
        "\"<unused>\"",
        "\", RNDMODE=\\\"%c\\\"\""
      ]
    },
    "indent": {
      "start_point": [
        727,
        0
      ],
      "end_point": [
        733,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "assoc_info": {
      "start_point": [
        737,
        0
      ],
      "end_point": [
        765,
        1
      ],
      "strings": [
        "\"I: [%s:\"",
        "\"<%ld>\"",
        "\"]\\n\"",
        "\"V: [scalar: \"",
        "\"V: [\"",
        "\"]\\n\""
      ]
    },
    "do_adump": {
      "start_point": [
        770,
        0
      ],
      "end_point": [
        797,
        1
      ],
      "strings": [
        "\"adump: first argument not an array\""
      ]
    },
    "asort_actual": {
      "start_point": [
        802,
        0
      ],
      "end_point": [
        950,
        1
      ],
      "strings": [
        "\"@val_type_asc\"",
        "\"@ind_str_asc\"",
        "\"asort: second argument not an array\"",
        "\"asorti: second argument not an array\"",
        "\"asort: first argument not an array\"",
        "\"asorti: first argument not an array\"",
        "\"asort: cannot use a subarray of first arg for second arg\"",
        "\"asorti: cannot use a subarray of first arg for second arg\"",
        "\"asort: cannot use a subarray of second arg for first arg\"",
        "\"asorti: cannot use a subarray of second arg for first arg\""
      ]
    },
    "do_asort": {
      "start_point": [
        954,
        0
      ],
      "end_point": [
        958,
        1
      ],
      "strings": []
    },
    "do_asorti": {
      "start_point": [
        962,
        0
      ],
      "end_point": [
        966,
        1
      ],
      "strings": []
    },
    "cmp_strings": {
      "start_point": [
        975,
        0
      ],
      "end_point": [
        1019,
        1
      ],
      "strings": []
    },
    "sort_up_index_string": {
      "start_point": [
        1023,
        0
      ],
      "end_point": [
        1032,
        1
      ],
      "strings": []
    },
    "sort_down_index_string": {
      "start_point": [
        1037,
        0
      ],
      "end_point": [
        1050,
        1
      ],
      "strings": []
    },
    "sort_up_index_number": {
      "start_point": [
        1055,
        0
      ],
      "end_point": [
        1072,
        1
      ],
      "strings": []
    },
    "sort_down_index_number": {
      "start_point": [
        1076,
        0
      ],
      "end_point": [
        1080,
        1
      ],
      "strings": []
    },
    "sort_up_value_string": {
      "start_point": [
        1085,
        0
      ],
      "end_point": [
        1102,
        1
      ],
      "strings": []
    },
    "sort_down_value_string": {
      "start_point": [
        1107,
        0
      ],
      "end_point": [
        1111,
        1
      ],
      "strings": []
    },
    "sort_up_value_number": {
      "start_point": [
        1116,
        0
      ],
      "end_point": [
        1143,
        1
      ],
      "strings": []
    },
    "sort_down_value_number": {
      "start_point": [
        1148,
        0
      ],
      "end_point": [
        1152,
        1
      ],
      "strings": []
    },
    "sort_up_value_type": {
      "start_point": [
        1157,
        0
      ],
      "end_point": [
        1192,
        1
      ],
      "strings": []
    },
    "sort_down_value_type": {
      "start_point": [
        1196,
        0
      ],
      "end_point": [
        1200,
        1
      ],
      "strings": []
    },
    "sort_user_func": {
      "start_point": [
        1204,
        0
      ],
      "end_point": [
        1250,
        1
      ],
      "strings": []
    },
    "assoc_list": {
      "start_point": [
        1255,
        0
      ],
      "end_point": [
        1383,
        1
      ],
      "strings": [
        "\"@ind_str_asc\"",
        "\"@ind_num_asc\"",
        "\"@val_str_asc\"",
        "\"@val_num_asc\"",
        "\"@ind_str_desc\"",
        "\"@ind_num_desc\"",
        "\"@val_str_desc\"",
        "\"@val_num_desc\"",
        "\"@val_type_asc\"",
        "\"@val_type_desc\"",
        "\"@unsorted\"",
        "\"`%s' is invalid as a function name\"",
        "\"sort comparison function `%s' is not defined\"",
        "\"assoc_list\""
      ]
    }
  },
  "gawk/gawk-4.2.1/awk.h": {
    "DEREF": {
      "start_point": [
        1254,
        0
      ],
      "end_point": [
        1260,
        1
      ],
      "strings": []
    },
    "POP_ARRAY": {
      "start_point": [
        1778,
        0
      ],
      "end_point": [
        1784,
        1
      ],
      "strings": []
    },
    "POP_PARAM": {
      "start_point": [
        1788,
        0
      ],
      "end_point": [
        1794,
        1
      ],
      "strings": []
    },
    "POP_SCALAR": {
      "start_point": [
        1798,
        0
      ],
      "end_point": [
        1807,
        1
      ],
      "strings": [
        "\"attempt to use array `%s' in a scalar context\""
      ]
    },
    "TOP_SCALAR": {
      "start_point": [
        1811,
        0
      ],
      "end_point": [
        1820,
        1
      ],
      "strings": [
        "\"attempt to use array `%s' in a scalar context\""
      ]
    },
    "in_array": {
      "start_point": [
        1830,
        0
      ],
      "end_point": [
        1838,
        1
      ],
      "strings": []
    },
    "dupnode": {
      "start_point": [
        1845,
        0
      ],
      "end_point": [
        1853,
        1
      ],
      "strings": []
    },
    "force_string_fmt": {
      "start_point": [
        1868,
        0
      ],
      "end_point": [
        1879,
        1
      ],
      "strings": []
    },
    "unref": {
      "start_point": [
        1893,
        0
      ],
      "end_point": [
        1898,
        1
      ],
      "strings": []
    },
    "force_number": {
      "start_point": [
        1902,
        0
      ],
      "end_point": [
        1906,
        1
      ],
      "strings": []
    },
    "fixtype": {
      "start_point": [
        1923,
        0
      ],
      "end_point": [
        1932,
        1
      ],
      "strings": []
    },
    "boolval": {
      "start_point": [
        1941,
        0
      ],
      "end_point": [
        1948,
        1
      ],
      "strings": []
    },
    "emalloc_real": {
      "start_point": [
        1952,
        0
      ],
      "end_point": [
        1966,
        1
      ],
      "strings": [
        "\"%s:%d: emalloc called with zero bytes\"",
        "\"%s:%d:%s: %s: can't allocate %ld bytes of memory (%s)\""
      ]
    },
    "ezalloc_real": {
      "start_point": [
        1970,
        0
      ],
      "end_point": [
        1984,
        1
      ],
      "strings": [
        "\"%s:%d: ezalloc called with zero bytes\"",
        "\"%s:%d:%s: %s: can't allocate %ld bytes of memory (%s)\""
      ]
    },
    "erealloc_real": {
      "start_point": [
        1988,
        0
      ],
      "end_point": [
        2002,
        1
      ],
      "strings": [
        "\"%s:%d: erealloc called with zero bytes\"",
        "\"%s:%d:%s: %s: can't reallocate %ld bytes of memory (%s)\""
      ]
    },
    "make_number_node": {
      "start_point": [
        2006,
        0
      ],
      "end_point": [
        2016,
        1
      ],
      "strings": []
    },
    "str_terminate_f": {
      "start_point": [
        2024,
        0
      ],
      "end_point": [
        2029,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/awkgram.c": {
    "yy_symbol_value_print": {
      "start_point": [
        1288,
        0
      ],
      "end_point": [
        1300,
        1
      ],
      "strings": []
    },
    "yy_symbol_print": {
      "start_point": [
        1307,
        0
      ],
      "end_point": [
        1315,
        1
      ],
      "strings": [
        "\"%s %s (\"",
        "\"token\"",
        "\"nterm\"",
        "\")\""
      ]
    },
    "yy_stack_print": {
      "start_point": [
        1322,
        0
      ],
      "end_point": [
        1332,
        1
      ],
      "strings": [
        "\"Stack now\"",
        "\" %d\"",
        "\"\\n\""
      ]
    },
    "yy_reduce_print": {
      "start_point": [
        1345,
        0
      ],
      "end_point": [
        1363,
        1
      ],
      "strings": [
        "\"Reducing stack by rule %d (line %lu):\\n\"",
        "\"   $%d = \"",
        "\"\\n\""
      ]
    },
    "yystrlen": {
      "start_point": [
        1406,
        0
      ],
      "end_point": [
        1413,
        1
      ],
      "strings": []
    },
    "yystpcpy": {
      "start_point": [
        1423,
        0
      ],
      "end_point": [
        1433,
        1
      ],
      "strings": []
    },
    "yytnamerr": {
      "start_point": [
        1445,
        0
      ],
      "end_point": [
        1482,
        1
      ],
      "strings": []
    },
    "yysyntax_error": {
      "start_point": [
        1493,
        0
      ],
      "end_point": [
        1618,
        1
      ],
      "strings": [
        "\"syntax error\"",
        "\"syntax error, unexpected %s\"",
        "\"syntax error, unexpected %s, expecting %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s or %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s or %s or %s\""
      ]
    },
    "yydestruct": {
      "start_point": [
        1625,
        0
      ],
      "end_point": [
        1636,
        1
      ],
      "strings": [
        "\"Deleting\""
      ]
    },
    "yyparse": {
      "start_point": [
        1654,
        0
      ],
      "end_point": [
        4465,
        1
      ],
      "strings": [
        "\"Starting parse\\n\"",
        "\"memory exhausted\"",
        "\"Stack size increased to %lu\\n\"",
        "\"Entering state %d\\n\"",
        "\"Reading a token: \"",
        "\"Now at end of input.\\n\"",
        "\"Next token is\"",
        "\"Shifting\"",
        "\"%s blocks must have an action part\"",
        "\"each rule must have a pattern or an action part\"",
        "\"old awk does not support multiple `BEGIN' or `END' rules\"",
        "\"old awk does not support multiple `BEGIN' or `END' rules\"",
        "\"`%s' is a built-in function, it cannot be redefined\"",
        "\"\\n\\n\"",
        "\"regexp constant `//' looks like a C++ comment, but is not\"",
        "\"regexp constant `/%s/' looks like a C comment, but is not\"",
        "\"duplicate case values in switch body: %s\"",
        "\"statement\"",
        "\"statement\"",
        "\"duplicate `default' detected in switch body\"",
        "\"`break' is not allowed outside a loop or switch\"",
        "\"`continue' is not allowed outside a loop\"",
        "\"`next' used in %s action\"",
        "\"`nextfile' used in %s action\"",
        "\"`return' used outside function context\"",
        "\"plain `print' in BEGIN or END rule should probably be `print \\\"\\\"'\"",
        "\"`delete' is not allowed with SYMTAB\"",
        "\"`delete' is not allowed with FUNCTAB\"",
        "\"`delete(array)' is a non-portable tawk extension\"",
        "\"`delete(array)' is a non-portable tawk extension\"",
        "\"`delete' is not allowed with SYMTAB\"",
        "\"`delete' is not allowed with FUNCTAB\"",
        "\"multistage two-way pipelines don't work\"",
        "\"regular expression on right of assignment\"",
        "\"regular expression on left of `~' or `!~' operator\"",
        "\"regular expression on left of `~' or `!~' operator\"",
        "\"old awk does not support the keyword `in' except after `for'\"",
        "\"regular expression on right of comparison\"",
        "\"constant fold\"",
        "\"non-redirected `getline' invalid inside `%s' rule\"",
        "\"non-redirected `getline' undefined inside END action\"",
        "\"old awk does not support the keyword `in' except after `for'\"",
        "\"old awk does not support multidimensional arrays\"",
        "\"0\"",
        "\"call of `length' without parentheses is not portable\"",
        "\"indirect function calls are a gawk extension\"",
        "\"%s\"",
        "\"%s\"",
        "\"can not use special variable `%s' for indirect function call\"",
        "\"attempt to use non-function `%s' in function call\"",
        "\"invalid subscript expression\"",
        "\"-> $$ =\"",
        "\"syntax error\"",
        "\"syntax error\"",
        "\"Error: discarding\"",
        "\"Error: popping\"",
        "\"memory exhausted\"",
        "\"Cleanup: discarding lookahead\"",
        "\"Cleanup: popping\""
      ]
    },
    "tokcompare": {
      "start_point": [
        4491,
        0
      ],
      "end_point": [
        4500,
        1
      ],
      "strings": []
    },
    "getfname": {
      "start_point": [
        4610,
        0
      ],
      "end_point": [
        4622,
        1
      ],
      "strings": []
    },
    "negate_num": {
      "start_point": [
        4626,
        0
      ],
      "end_point": [
        4665,
        1
      ],
      "strings": []
    },
    "add_sign_to_num": {
      "start_point": [
        4669,
        0
      ],
      "end_point": [
        4680,
        1
      ],
      "strings": []
    },
    "print_included_from": {
      "start_point": [
        4684,
        0
      ],
      "end_point": [
        4713,
        1
      ],
      "strings": [
        "\"%s %s:%d%c\"",
        "\"In file included from\"",
        "\"                 from\"",
        "\"cmd. line\""
      ]
    },
    "warning_ln": {
      "start_point": [
        4717,
        0
      ],
      "end_point": [
        4730,
        1
      ],
      "strings": [
        "\"warning: \""
      ]
    },
    "lintwarn_ln": {
      "start_point": [
        4734,
        0
      ],
      "end_point": [
        4752,
        1
      ],
      "strings": [
        "\"fatal: \"",
        "\"warning: \""
      ]
    },
    "error_ln": {
      "start_point": [
        4756,
        0
      ],
      "end_point": [
        4770,
        1
      ],
      "strings": [
        "\"error: \""
      ]
    },
    "yyerror": {
      "start_point": [
        4774,
        0
      ],
      "end_point": [
        4841,
        1
      ],
      "strings": [
        "\"(END OF FILE)\"",
        "\"unexpected newline or end of string\"",
        "\"%.*s\"",
        "\"yyerror\"",
        "\"\""
      ]
    },
    "mk_program": {
      "start_point": [
        4845,
        0
      ],
      "end_point": [
        4966,
        1
      ],
      "strings": []
    },
    "parse_program": {
      "start_point": [
        4970,
        0
      ],
      "end_point": [
        5024,
        1
      ],
      "strings": [
        "\"parse_program\"",
        "\"parse_program\""
      ]
    },
    "free_srcfile": {
      "start_point": [
        5028,
        0
      ],
      "end_point": [
        5033,
        1
      ],
      "strings": []
    },
    "do_add_srcfile": {
      "start_point": [
        5037,
        0
      ],
      "end_point": [
        5052,
        1
      ],
      "strings": [
        "\"do_add_srcfile\""
      ]
    },
    "add_srcfile": {
      "start_point": [
        5058,
        0
      ],
      "end_point": [
        5129,
        1
      ],
      "strings": [
        "\"can't open source file `%s' for reading (%s)\"",
        "\"can't open shared library `%s' for reading (%s)\"",
        "\"reason unknown\"",
        "\"can't include `%s' and use it as a program file\"",
        "\"already included source file `%s'\"",
        "\"already loaded shared library `%s'\"",
        "\"can't include `%s' and use it as a program file\""
      ]
    },
    "include_source": {
      "start_point": [
        5133,
        0
      ],
      "end_point": [
        5179,
        1
      ],
      "strings": [
        "\"@include is a gawk extension\"",
        "\"empty filename after @include\"",
        "\"can't open source file `%s' for reading (%s)\"",
        "\"reason unknown\""
      ]
    },
    "load_library": {
      "start_point": [
        5183,
        0
      ],
      "end_point": [
        5214,
        1
      ],
      "strings": [
        "\"@load is a gawk extension\"",
        "\"empty filename after @load\"",
        "\"can't open shared library `%s' for reading (%s)\"",
        "\"reason unknown\""
      ]
    },
    "next_sourcefile": {
      "start_point": [
        5218,
        0
      ],
      "end_point": [
        5278,
        1
      ],
      "strings": [
        "\"AWKREADFUNC\""
      ]
    },
    "get_src_buf": {
      "start_point": [
        5282,
        0
      ],
      "end_point": [
        5464,
        1
      ],
      "strings": [
        "\"AWKREADFUNC\"",
        "\"empty program text on command line\"",
        "\"get_src_buf\"",
        "\"can't open source file `%s' for reading (%s)\"",
        "\"get_src_buf\"",
        "\"get_src_buf\"",
        "\"can't read sourcefile `%s' (%s)\"",
        "\"source file `%s' is empty\""
      ]
    },
    "tokexpand": {
      "start_point": [
        5472,
        0
      ],
      "end_point": [
        5490,
        1
      ],
      "strings": [
        "\"tokexpand\"",
        "\"tokexpand\""
      ]
    },
    "check_bad_char": {
      "start_point": [
        5500,
        0
      ],
      "end_point": [
        5518,
        1
      ],
      "strings": [
        "\"PEBKAC error: invalid character '\\\\%03o' in source code\""
      ]
    },
    "nextc": {
      "start_point": [
        5522,
        0
      ],
      "end_point": [
        5608,
        1
      ],
      "strings": []
    },
    "pushback": {
      "start_point": [
        5612,
        0
      ],
      "end_point": [
        5619,
        1
      ],
      "strings": []
    },
    "check_comment": {
      "start_point": [
        5623,
        0
      ],
      "end_point": [
        5634,
        1
      ],
      "strings": []
    },
    "get_comment": {
      "start_point": [
        5642,
        0
      ],
      "end_point": [
        5705,
        1
      ],
      "strings": []
    },
    "split_comment": {
      "start_point": [
        5709,
        0
      ],
      "end_point": [
        5736,
        1
      ],
      "strings": []
    },
    "allow_newline": {
      "start_point": [
        5740,
        0
      ],
      "end_point": [
        5771,
        1
      ],
      "strings": []
    },
    "newline_eof": {
      "start_point": [
        5781,
        0
      ],
      "end_point": [
        5798,
        1
      ],
      "strings": [
        "\"source file does not end in newline\""
      ]
    },
    "yylex": [
      {
        "start_point": [
          5804,
          0
        ],
        "end_point": [
          6696,
          1
        ],
        "strings": [
          "\"extproc \"",
          "\"unterminated regexp ends with `\\\\' at end of file\"",
          "\"%s: %d: tawk regex modifier `/.../%c' doesn't work in gawk\"",
          "\"tawk regex modifier `/.../%c' doesn't work in gawk\"",
          "\"unterminated regexp\"",
          "\"unterminated regexp at end of file\"",
          "\"use of `\\\\ #...' line continuation is not portable\"",
          "\"backslash not last character on line\"",
          "\"multidimensional arrays are a gawk extension\"",
          "\"multidimensional arrays are a gawk extension\"",
          "\"POSIX does not allow operator `**='\"",
          "\"old awk does not support operator `**='\"",
          "\"POSIX does not allow operator `**'\"",
          "\"old awk does not support operator `**'\"",
          "\"operator `^=' is not supported in old awk\"",
          "\"operator `^' is not supported in old awk\"",
          "\"unterminated string\"",
          "\"unterminated string\"",
          "\"numeric constant `%.*s' treated as octal\"",
          "\"numeric constant `%.*s' treated as hexadecimal\"",
          "\"invalid char '%c' in expression\"",
          "\"`%s' is a gawk extension\"",
          "\"POSIX does not allow `%s'\"",
          "\"`%s' is not supported in old awk\"",
          "\"yylex\"",
          "\"`continue' is not allowed outside a loop\"",
          "\"`break' is not allowed outside a loop or switch\"",
          "\"goto\"",
          "\"`goto' considered harmful!\\n\""
        ]
      },
      {
        "start_point": [
          6704,
          0
        ],
        "end_point": [
          6730,
          1
        ],
        "strings": []
      }
    ],
    "snode": {
      "start_point": [
        6736,
        0
      ],
      "end_point": [
        7015,
        1
      ],
      "strings": [
        "\"%d is invalid as number of arguments for %s\"",
        "\"gensub\"",
        "\"gsub\"",
        "\"0\"",
        "\"%s: string literal as last arg of substitute has no effect\"",
        "\"%s third parameter is not a changeable object\"",
        "\"0\"",
        "\"0\"",
        "\"match: third argument is a gawk extension\"",
        "\"match: third argument is a gawk extension\"",
        "\"close: second argument is a gawk extension\"",
        "\"close: second argument is a gawk extension\"",
        "\"use of dcgettext(_\\\"...\\\") is incorrect: remove leading underscore\"",
        "\"use of dcngettext(_\\\"...\\\") is incorrect: remove leading underscore\"",
        "\"index: regexp constant as second argument is not allowed\""
      ]
    },
    "parms_shadow": {
      "start_point": [
        7020,
        0
      ],
      "end_point": [
        7059,
        1
      ],
      "strings": [
        "\"function `%s': parameter `%s' shadows global variable\""
      ]
    },
    "valinfo": {
      "start_point": [
        7063,
        0
      ],
      "end_point": [
        7084,
        1
      ],
      "strings": [
        "\"uninitialized scalar\\n\"",
        "\"@/%.*s/\\n\"",
        "\"\\n\"",
        "\"%s\\n\"",
        "\"%.17R*g\"",
        "\"%s\\n\"",
        "\"%Zd\"",
        "\"%.17g\\n\"",
        "\"?? flags %s\\n\""
      ]
    },
    "dump_vars": {
      "start_point": [
        7089,
        0
      ],
      "end_point": [
        7110,
        1
      ],
      "strings": [
        "\"-\"",
        "\"w\"",
        "\"could not open `%s' for writing (%s)\"",
        "\"sending variable list to standard error\"",
        "\"%s: close failed (%s)\""
      ]
    },
    "dump_funcs": {
      "start_point": [
        7114,
        0
      ],
      "end_point": [
        7121,
        1
      ],
      "strings": []
    },
    "shadow_funcs": {
      "start_point": [
        7126,
        0
      ],
      "end_point": [
        7143,
        1
      ],
      "strings": [
        "\"shadow_funcs() called twice!\"",
        "\"there were shadowed variables.\""
      ]
    },
    "mk_function": {
      "start_point": [
        7150,
        0
      ],
      "end_point": [
        7205,
        1
      ],
      "strings": []
    },
    "install_function": {
      "start_point": [
        7213,
        0
      ],
      "end_point": [
        7240,
        1
      ],
      "strings": [
        "\"function name `%s' previously defined\""
      ]
    },
    "check_params": {
      "start_point": [
        7247,
        0
      ],
      "end_point": [
        7289,
        1
      ],
      "strings": [
        "\"check_params\"",
        "\"function `%s': can't use function name as parameter name\"",
        "\"function `%s': can't use special variable `%s' as a function parameter\"",
        "\"function `%s': parameter #%d, `%s', duplicates parameter #%d\""
      ]
    },
    "func_use": {
      "start_point": [
        7307,
        0
      ],
      "end_point": [
        7337,
        1
      ],
      "strings": [
        "\"func_use\"",
        "\"func_use\""
      ]
    },
    "track_ext_func": {
      "start_point": [
        7341,
        0
      ],
      "end_point": [
        7345,
        1
      ],
      "strings": []
    },
    "check_funcs": {
      "start_point": [
        7349,
        0
      ],
      "end_point": [
        7390,
        1
      ],
      "strings": [
        "\"function `%s' called but never defined\"",
        "\"function `%s' called but never defined\"",
        "\"function `%s' defined but never called directly\""
      ]
    },
    "param_sanity": {
      "start_point": [
        7394,
        0
      ],
      "end_point": [
        7410,
        1
      ],
      "strings": [
        "\"regexp constant for parameter #%d yields boolean value\""
      ]
    },
    "variable": {
      "start_point": [
        7414,
        0
      ],
      "end_point": [
        7429,
        1
      ],
      "strings": [
        "\"function `%s' called with space between name and `(',\\nor used as a variable or an array\""
      ]
    },
    "make_regnode": {
      "start_point": [
        7433,
        0
      ],
      "end_point": [
        7460,
        1
      ],
      "strings": []
    },
    "mk_rexp": {
      "start_point": [
        7465,
        0
      ],
      "end_point": [
        7483,
        1
      ],
      "strings": []
    },
    "isnoeffect": {
      "start_point": [
        7488,
        0
      ],
      "end_point": [
        7527,
        1
      ],
      "strings": []
    },
    "make_assignable": {
      "start_point": [
        7533,
        0
      ],
      "end_point": [
        7550,
        1
      ],
      "strings": []
    },
    "stopme": {
      "start_point": [
        7554,
        0
      ],
      "end_point": [
        7558,
        1
      ],
      "strings": []
    },
    "dumpintlstr": {
      "start_point": [
        7562,
        0
      ],
      "end_point": [
        7581,
        1
      ],
      "strings": [
        "\"#: %s:%d\\n\"",
        "\"msgid \"",
        "\"msgstr \\\"\\\"\\n\\n\""
      ]
    },
    "dumpintlstr2": {
      "start_point": [
        7585,
        0
      ],
      "end_point": [
        7607,
        1
      ],
      "strings": [
        "\"#: %s:%d\\n\"",
        "\"msgid \"",
        "\"msgid_plural \"",
        "\"msgstr[0] \\\"\\\"\\nmsgstr[1] \\\"\\\"\\n\\n\""
      ]
    },
    "mk_binary": {
      "start_point": [
        7611,
        0
      ],
      "end_point": [
        7716,
        1
      ],
      "strings": [
        "\"division by zero attempted\"",
        "\"division by zero attempted in `%%'\""
      ]
    },
    "mk_boolean": {
      "start_point": [
        7720,
        0
      ],
      "end_point": [
        7766,
        1
      ],
      "strings": []
    },
    "mk_condition": {
      "start_point": [
        7770,
        0
      ],
      "end_point": [
        7835,
        1
      ],
      "strings": []
    },
    "find_line": {
      "start_point": [
        7841,
        0
      ],
      "end_point": [
        7861,
        1
      ],
      "strings": []
    },
    "append_rule": {
      "start_point": [
        7865,
        0
      ],
      "end_point": [
        7948,
        1
      ],
      "strings": []
    },
    "mk_assignment": {
      "start_point": [
        7952,
        0
      ],
      "end_point": [
        8006,
        1
      ],
      "strings": [
        "\"cannot assign a value to the result of a field post-increment expression\"",
        "\"invalid target of assignment (opcode %s)\""
      ]
    },
    "optimize_assignment": {
      "start_point": [
        8010,
        0
      ],
      "end_point": [
        8163,
        1
      ],
      "strings": []
    },
    "mk_getline": {
      "start_point": [
        8168,
        0
      ],
      "end_point": [
        8228,
        1
      ],
      "strings": []
    },
    "mk_for_loop": {
      "start_point": [
        8233,
        0
      ],
      "end_point": [
        8306,
        1
      ],
      "strings": []
    },
    "add_lint": {
      "start_point": [
        8310,
        0
      ],
      "end_point": [
        8362,
        1
      ],
      "strings": [
        "\"statement may have no effect\""
      ]
    },
    "mk_expression_list": {
      "start_point": [
        8366,
        0
      ],
      "end_point": [
        8401,
        1
      ],
      "strings": []
    },
    "count_expressions": {
      "start_point": [
        8408,
        0
      ],
      "end_point": [
        8437,
        1
      ],
      "strings": []
    },
    "fix_break_continue": {
      "start_point": [
        8441,
        0
      ],
      "end_point": [
        8465,
        1
      ],
      "strings": []
    },
    "list_create": {
      "start_point": [
        8467,
        0
      ],
      "end_point": [
        8476,
        1
      ],
      "strings": []
    },
    "list_append": {
      "start_point": [
        8478,
        0
      ],
      "end_point": [
        8488,
        1
      ],
      "strings": []
    },
    "list_prepend": {
      "start_point": [
        8490,
        0
      ],
      "end_point": [
        8500,
        1
      ],
      "strings": []
    },
    "list_merge": {
      "start_point": [
        8502,
        0
      ],
      "end_point": [
        8515,
        1
      ],
      "strings": []
    },
    "add_pending_comment": {
      "start_point": [
        8519,
        0
      ],
      "end_point": [
        8535,
        1
      ],
      "strings": []
    },
    "check_special": {
      "start_point": [
        8539,
        0
      ],
      "end_point": [
        8580,
        1
      ],
      "strings": []
    },
    "read_one_line": {
      "start_point": [
        8592,
        0
      ],
      "end_point": [
        8611,
        1
      ],
      "strings": [
        "\"r\"",
        "\"ugh. fdopen: %s\\n\""
      ]
    },
    "one_line_close": {
      "start_point": [
        8615,
        0
      ],
      "end_point": [
        8626,
        1
      ],
      "strings": [
        "\"debugging read/close screwed up!\""
      ]
    },
    "lookup_builtin": {
      "start_point": [
        8631,
        0
      ],
      "end_point": [
        8657,
        1
      ],
      "strings": []
    },
    "install_builtins": {
      "start_point": [
        8661,
        0
      ],
      "end_point": [
        8682,
        1
      ],
      "strings": []
    },
    "is_alpha": {
      "start_point": [
        8702,
        0
      ],
      "end_point": [
        8723,
        1
      ],
      "strings": []
    },
    "is_alnum": {
      "start_point": [
        8727,
        0
      ],
      "end_point": [
        8732,
        1
      ],
      "strings": []
    },
    "is_letter": {
      "start_point": [
        8741,
        0
      ],
      "end_point": [
        8745,
        1
      ],
      "strings": []
    },
    "is_identchar": {
      "start_point": [
        8749,
        0
      ],
      "end_point": [
        8753,
        1
      ],
      "strings": []
    },
    "set_profile_text": {
      "start_point": [
        8757,
        0
      ],
      "end_point": [
        8779,
        1
      ],
      "strings": [
        "\"set_profile_text\""
      ]
    }
  },
  "gawk/gawk-4.2.1/awkgram.y": {
    "YNUMBER": [
      {
        "start_point": [
          221,
          3
        ],
        "end_point": [
          225,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          226,
          3
        ],
        "end_point": [
          234,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          243,
          3
        ],
        "end_point": [
          253,
          4
        ],
        "strings": [
          "\"%s blocks must have an action part\"",
          "\"each rule must have a pattern or an action part\""
        ]
      },
      {
        "start_point": [
          254,
          3
        ],
        "end_point": [
          260,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          261,
          7
        ],
        "end_point": [
          266,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          267,
          7
        ],
        "end_point": [
          272,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          284,
          3
        ],
        "end_point": [
          285,
          17
        ],
        "strings": []
      },
      {
        "start_point": [
          299,
          3
        ],
        "end_point": [
          300,
          17
        ],
        "strings": []
      }
    ],
    "r_brace": [
      {
        "start_point": [
          402,
          30
        ],
        "end_point": [
          410,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          437,
          66
        ],
        "end_point": [
          474,
          4
        ],
        "strings": [
          "\"\\n\\n\""
        ]
      },
      {
        "start_point": [
          548,
          3
        ],
        "end_point": [
          594,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          595,
          3
        ],
        "end_point": [
          596,
          17
        ],
        "strings": []
      }
    ],
    "l_brace": {
      "start_point": [
        616,
        46
      ],
      "end_point": [
        705,
        4
      ],
      "strings": [
        "\"duplicate case values in switch body: %s\"",
        "\"statement\"",
        "\"statement\"",
        "\"duplicate `default' detected in switch body\""
      ]
    },
    "r_paren": [
      {
        "start_point": [
          706,
          29
        ],
        "end_point": [
          747,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          790,
          51
        ],
        "end_point": [
          902,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          903,
          85
        ],
        "end_point": [
          909,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1314,
          26
        ],
        "end_point": [
          1317,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1658,
          31
        ],
        "end_point": [
          1677,
          4
        ],
        "strings": [
          "\"old awk does not support the keyword `in' except after `for'\"",
          "\"old awk does not support multidimensional arrays\""
        ]
      },
      {
        "start_point": [
          1683,
          14
        ],
        "end_point": [
          1687,
          3
        ],
        "strings": []
      },
      {
        "start_point": [
          1740,
          7
        ],
        "end_point": [
          1746,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1747,
          19
        ],
        "end_point": [
          1752,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1753,
          18
        ],
        "end_point": [
          1758,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1779,
          3
        ],
        "end_point": [
          1783,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1870,
          17
        ],
        "end_point": [
          1894,
          4
        ],
        "strings": [
          "\"attempt to use non-function `%s' in function call\""
        ]
      },
      {
        "start_point": [
          1907,
          3
        ],
        "end_point": [
          1908,
          15
        ],
        "strings": []
      },
      {
        "start_point": [
          1914,
          3
        ],
        "end_point": [
          1917,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1957,
          3
        ],
        "end_point": [
          1960,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1977,
          3
        ],
        "end_point": [
          1983,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1999,
          7
        ],
        "end_point": [
          2004,
          4
        ],
        "strings": []
      }
    ],
    "LEX_WHILE": {
      "start_point": [
        748,
        42
      ],
      "end_point": [
        789,
        4
      ],
      "strings": []
    },
    "opt_simple_stmt": [
      {
        "start_point": [
          910,
          73
        ],
        "end_point": [
          916,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          938,
          3
        ],
        "end_point": [
          947,
          4
        ],
        "strings": [
          "\"`continue' is not allowed outside a loop\""
        ]
      },
      {
        "start_point": [
          948,
          3
        ],
        "end_point": [
          957,
          4
        ],
        "strings": [
          "\"`next' used in %s action\""
        ]
      },
      {
        "start_point": [
          958,
          3
        ],
        "end_point": [
          969,
          4
        ],
        "strings": [
          "\"`nextfile' used in %s action\""
        ]
      },
      {
        "start_point": [
          970,
          3
        ],
        "end_point": [
          985,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          990,
          5
        ],
        "end_point": [
          1010,
          4
        ],
        "strings": []
      }
    ],
    "statement_term": [
      {
        "start_point": [
          1023,
          45
        ],
        "end_point": [
          1120,
          4
        ],
        "strings": [
          "\"plain `print' in BEGIN or END rule should probably be `print \\\"\\\"'\""
        ]
      },
      {
        "start_point": [
          1122,
          3
        ],
        "end_point": [
          1122,
          39
        ],
        "strings": []
      },
      {
        "start_point": [
          1204,
          3
        ],
        "end_point": [
          1210,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1211,
          3
        ],
        "end_point": [
          1212,
          17
        ],
        "strings": []
      }
    ],
    "colon": [
      {
        "start_point": [
          1216,
          29
        ],
        "end_point": [
          1227,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1228,
          21
        ],
        "end_point": [
          1238,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1290,
          7
        ],
        "end_point": [
          1293,
          4
        ],
        "strings": []
      }
    ],
    "statement": [
      {
        "start_point": [
          1319,
          6
        ],
        "end_point": [
          1322,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1358,
          3
        ],
        "end_point": [
          1366,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1369,
          3
        ],
        "end_point": [
          1370,
          15
        ],
        "strings": []
      }
    ],
    "comma": [
      {
        "start_point": [
          1400,
          3
        ],
        "end_point": [
          1407,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1430,
          3
        ],
        "end_point": [
          1434,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1437,
          3
        ],
        "end_point": [
          1444,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1445,
          3
        ],
        "end_point": [
          1449,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1464,
          12
        ],
        "end_point": [
          1470,
          4
        ],
        "strings": [
          "\"regular expression on right of assignment\""
        ]
      }
    ],
    "LEX_OR": [
      {
        "start_point": [
          1479,
          3
        ],
        "end_point": [
          1491,
          4
        ],
        "strings": [
          "\"regular expression on left of `~' or `!~' operator\""
        ]
      },
      {
        "start_point": [
          1492,
          3
        ],
        "end_point": [
          1508,
          4
        ],
        "strings": [
          "\"regular expression on left of `~' or `!~' operator\""
        ]
      },
      {
        "start_point": [
          1509,
          3
        ],
        "end_point": [
          1518,
          4
        ],
        "strings": [
          "\"old awk does not support the keyword `in' except after `for'\""
        ]
      }
    ],
    "a_relop": [
      {
        "start_point": [
          1537,
          3
        ],
        "end_point": [
          1541,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1563,
          3
        ],
        "end_point": [
          1616,
          4
        ],
        "strings": [
          "\"constant fold\""
        ]
      },
      {
        "start_point": [
          1634,
          3
        ],
        "end_point": [
          1647,
          4
        ],
        "strings": [
          "\"non-redirected `getline' invalid inside `%s' rule\"",
          "\"non-redirected `getline' undefined inside END action\""
        ]
      },
      {
        "start_point": [
          1648,
          3
        ],
        "end_point": [
          1652,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          1653,
          3
        ],
        "end_point": [
          1657,
          4
        ],
        "strings": []
      }
    ],
    "tokcompare": {
      "start_point": [
        2071,
        0
      ],
      "end_point": [
        2080,
        1
      ],
      "strings": []
    },
    "getfname": {
      "start_point": [
        2190,
        0
      ],
      "end_point": [
        2202,
        1
      ],
      "strings": []
    },
    "negate_num": {
      "start_point": [
        2206,
        0
      ],
      "end_point": [
        2245,
        1
      ],
      "strings": []
    },
    "add_sign_to_num": {
      "start_point": [
        2249,
        0
      ],
      "end_point": [
        2260,
        1
      ],
      "strings": []
    },
    "print_included_from": {
      "start_point": [
        2264,
        0
      ],
      "end_point": [
        2293,
        1
      ],
      "strings": [
        "\"%s %s:%d%c\"",
        "\"In file included from\"",
        "\"                 from\"",
        "\"cmd. line\""
      ]
    },
    "warning_ln": {
      "start_point": [
        2297,
        0
      ],
      "end_point": [
        2310,
        1
      ],
      "strings": [
        "\"warning: \""
      ]
    },
    "lintwarn_ln": {
      "start_point": [
        2314,
        0
      ],
      "end_point": [
        2332,
        1
      ],
      "strings": [
        "\"fatal: \"",
        "\"warning: \""
      ]
    },
    "error_ln": {
      "start_point": [
        2336,
        0
      ],
      "end_point": [
        2350,
        1
      ],
      "strings": [
        "\"error: \""
      ]
    },
    "yyerror": {
      "start_point": [
        2354,
        0
      ],
      "end_point": [
        2421,
        1
      ],
      "strings": [
        "\"(END OF FILE)\"",
        "\"unexpected newline or end of string\"",
        "\"%.*s\"",
        "\"yyerror\"",
        "\"\""
      ]
    },
    "mk_program": {
      "start_point": [
        2425,
        0
      ],
      "end_point": [
        2546,
        1
      ],
      "strings": []
    },
    "parse_program": {
      "start_point": [
        2550,
        0
      ],
      "end_point": [
        2604,
        1
      ],
      "strings": [
        "\"parse_program\"",
        "\"parse_program\""
      ]
    },
    "free_srcfile": {
      "start_point": [
        2608,
        0
      ],
      "end_point": [
        2613,
        1
      ],
      "strings": []
    },
    "do_add_srcfile": {
      "start_point": [
        2617,
        0
      ],
      "end_point": [
        2632,
        1
      ],
      "strings": [
        "\"do_add_srcfile\""
      ]
    },
    "add_srcfile": {
      "start_point": [
        2638,
        0
      ],
      "end_point": [
        2709,
        1
      ],
      "strings": [
        "\"can't open source file `%s' for reading (%s)\"",
        "\"can't open shared library `%s' for reading (%s)\"",
        "\"reason unknown\"",
        "\"can't include `%s' and use it as a program file\"",
        "\"already included source file `%s'\"",
        "\"already loaded shared library `%s'\"",
        "\"can't include `%s' and use it as a program file\""
      ]
    },
    "include_source": {
      "start_point": [
        2713,
        0
      ],
      "end_point": [
        2759,
        1
      ],
      "strings": [
        "\"@include is a gawk extension\"",
        "\"empty filename after @include\"",
        "\"can't open source file `%s' for reading (%s)\"",
        "\"reason unknown\""
      ]
    },
    "load_library": {
      "start_point": [
        2763,
        0
      ],
      "end_point": [
        2794,
        1
      ],
      "strings": [
        "\"@load is a gawk extension\"",
        "\"empty filename after @load\"",
        "\"can't open shared library `%s' for reading (%s)\"",
        "\"reason unknown\""
      ]
    },
    "next_sourcefile": {
      "start_point": [
        2798,
        0
      ],
      "end_point": [
        2858,
        1
      ],
      "strings": [
        "\"AWKREADFUNC\""
      ]
    },
    "get_src_buf": {
      "start_point": [
        2862,
        0
      ],
      "end_point": [
        3044,
        1
      ],
      "strings": [
        "\"AWKREADFUNC\"",
        "\"empty program text on command line\"",
        "\"get_src_buf\"",
        "\"can't open source file `%s' for reading (%s)\"",
        "\"get_src_buf\"",
        "\"get_src_buf\"",
        "\"can't read sourcefile `%s' (%s)\"",
        "\"source file `%s' is empty\""
      ]
    },
    "tokexpand": {
      "start_point": [
        3052,
        0
      ],
      "end_point": [
        3070,
        1
      ],
      "strings": [
        "\"tokexpand\"",
        "\"tokexpand\""
      ]
    },
    "check_bad_char": {
      "start_point": [
        3080,
        0
      ],
      "end_point": [
        3098,
        1
      ],
      "strings": [
        "\"PEBKAC error: invalid character '\\\\%03o' in source code\""
      ]
    },
    "nextc": {
      "start_point": [
        3102,
        0
      ],
      "end_point": [
        3188,
        1
      ],
      "strings": []
    },
    "pushback": {
      "start_point": [
        3192,
        0
      ],
      "end_point": [
        3199,
        1
      ],
      "strings": []
    },
    "check_comment": {
      "start_point": [
        3203,
        0
      ],
      "end_point": [
        3214,
        1
      ],
      "strings": []
    },
    "get_comment": {
      "start_point": [
        3222,
        0
      ],
      "end_point": [
        3285,
        1
      ],
      "strings": []
    },
    "split_comment": {
      "start_point": [
        3289,
        0
      ],
      "end_point": [
        3316,
        1
      ],
      "strings": []
    },
    "allow_newline": {
      "start_point": [
        3320,
        0
      ],
      "end_point": [
        3351,
        1
      ],
      "strings": []
    },
    "newline_eof": {
      "start_point": [
        3361,
        0
      ],
      "end_point": [
        3378,
        1
      ],
      "strings": [
        "\"source file does not end in newline\""
      ]
    },
    "yylex": [
      {
        "start_point": [
          3384,
          0
        ],
        "end_point": [
          4276,
          1
        ],
        "strings": [
          "\"extproc \"",
          "\"unterminated regexp ends with `\\\\' at end of file\"",
          "\"%s: %d: tawk regex modifier `/.../%c' doesn't work in gawk\"",
          "\"tawk regex modifier `/.../%c' doesn't work in gawk\"",
          "\"unterminated regexp\"",
          "\"unterminated regexp at end of file\"",
          "\"use of `\\\\ #...' line continuation is not portable\"",
          "\"backslash not last character on line\"",
          "\"multidimensional arrays are a gawk extension\"",
          "\"multidimensional arrays are a gawk extension\"",
          "\"POSIX does not allow operator `**='\"",
          "\"old awk does not support operator `**='\"",
          "\"POSIX does not allow operator `**'\"",
          "\"old awk does not support operator `**'\"",
          "\"operator `^=' is not supported in old awk\"",
          "\"operator `^' is not supported in old awk\"",
          "\"unterminated string\"",
          "\"unterminated string\"",
          "\"numeric constant `%.*s' treated as octal\"",
          "\"numeric constant `%.*s' treated as hexadecimal\"",
          "\"invalid char '%c' in expression\"",
          "\"`%s' is a gawk extension\"",
          "\"POSIX does not allow `%s'\"",
          "\"`%s' is not supported in old awk\"",
          "\"yylex\"",
          "\"`continue' is not allowed outside a loop\"",
          "\"`break' is not allowed outside a loop or switch\"",
          "\"goto\"",
          "\"`goto' considered harmful!\\n\""
        ]
      },
      {
        "start_point": [
          4284,
          0
        ],
        "end_point": [
          4310,
          1
        ],
        "strings": []
      }
    ],
    "snode": {
      "start_point": [
        4316,
        0
      ],
      "end_point": [
        4595,
        1
      ],
      "strings": [
        "\"%d is invalid as number of arguments for %s\"",
        "\"gensub\"",
        "\"gsub\"",
        "\"0\"",
        "\"%s: string literal as last arg of substitute has no effect\"",
        "\"%s third parameter is not a changeable object\"",
        "\"0\"",
        "\"0\"",
        "\"match: third argument is a gawk extension\"",
        "\"match: third argument is a gawk extension\"",
        "\"close: second argument is a gawk extension\"",
        "\"close: second argument is a gawk extension\"",
        "\"use of dcgettext(_\\\"...\\\") is incorrect: remove leading underscore\"",
        "\"use of dcngettext(_\\\"...\\\") is incorrect: remove leading underscore\"",
        "\"index: regexp constant as second argument is not allowed\""
      ]
    },
    "parms_shadow": {
      "start_point": [
        4600,
        0
      ],
      "end_point": [
        4639,
        1
      ],
      "strings": [
        "\"function `%s': parameter `%s' shadows global variable\""
      ]
    },
    "valinfo": {
      "start_point": [
        4643,
        0
      ],
      "end_point": [
        4664,
        1
      ],
      "strings": [
        "\"uninitialized scalar\\n\"",
        "\"@/%.*s/\\n\"",
        "\"\\n\"",
        "\"%s\\n\"",
        "\"%.17R*g\"",
        "\"%s\\n\"",
        "\"%Zd\"",
        "\"%.17g\\n\"",
        "\"?? flags %s\\n\""
      ]
    },
    "dump_vars": {
      "start_point": [
        4669,
        0
      ],
      "end_point": [
        4690,
        1
      ],
      "strings": [
        "\"-\"",
        "\"w\"",
        "\"could not open `%s' for writing (%s)\"",
        "\"sending variable list to standard error\"",
        "\"%s: close failed (%s)\""
      ]
    },
    "dump_funcs": {
      "start_point": [
        4694,
        0
      ],
      "end_point": [
        4701,
        1
      ],
      "strings": []
    },
    "shadow_funcs": {
      "start_point": [
        4706,
        0
      ],
      "end_point": [
        4723,
        1
      ],
      "strings": [
        "\"shadow_funcs() called twice!\"",
        "\"there were shadowed variables.\""
      ]
    },
    "mk_function": {
      "start_point": [
        4730,
        0
      ],
      "end_point": [
        4785,
        1
      ],
      "strings": []
    },
    "install_function": {
      "start_point": [
        4793,
        0
      ],
      "end_point": [
        4820,
        1
      ],
      "strings": [
        "\"function name `%s' previously defined\""
      ]
    },
    "check_params": {
      "start_point": [
        4827,
        0
      ],
      "end_point": [
        4869,
        1
      ],
      "strings": [
        "\"check_params\"",
        "\"function `%s': can't use function name as parameter name\"",
        "\"function `%s': can't use special variable `%s' as a function parameter\"",
        "\"function `%s': parameter #%d, `%s', duplicates parameter #%d\""
      ]
    },
    "func_use": {
      "start_point": [
        4887,
        0
      ],
      "end_point": [
        4917,
        1
      ],
      "strings": [
        "\"func_use\"",
        "\"func_use\""
      ]
    },
    "track_ext_func": {
      "start_point": [
        4921,
        0
      ],
      "end_point": [
        4925,
        1
      ],
      "strings": []
    },
    "check_funcs": {
      "start_point": [
        4929,
        0
      ],
      "end_point": [
        4970,
        1
      ],
      "strings": [
        "\"function `%s' called but never defined\"",
        "\"function `%s' called but never defined\"",
        "\"function `%s' defined but never called directly\""
      ]
    },
    "param_sanity": {
      "start_point": [
        4974,
        0
      ],
      "end_point": [
        4990,
        1
      ],
      "strings": [
        "\"regexp constant for parameter #%d yields boolean value\""
      ]
    },
    "variable": {
      "start_point": [
        4994,
        0
      ],
      "end_point": [
        5009,
        1
      ],
      "strings": [
        "\"function `%s' called with space between name and `(',\\nor used as a variable or an array\""
      ]
    },
    "make_regnode": {
      "start_point": [
        5013,
        0
      ],
      "end_point": [
        5040,
        1
      ],
      "strings": []
    },
    "mk_rexp": {
      "start_point": [
        5045,
        0
      ],
      "end_point": [
        5063,
        1
      ],
      "strings": []
    },
    "isnoeffect": {
      "start_point": [
        5068,
        0
      ],
      "end_point": [
        5107,
        1
      ],
      "strings": []
    },
    "make_assignable": {
      "start_point": [
        5113,
        0
      ],
      "end_point": [
        5130,
        1
      ],
      "strings": []
    },
    "stopme": {
      "start_point": [
        5134,
        0
      ],
      "end_point": [
        5138,
        1
      ],
      "strings": []
    },
    "dumpintlstr": {
      "start_point": [
        5142,
        0
      ],
      "end_point": [
        5161,
        1
      ],
      "strings": [
        "\"#: %s:%d\\n\"",
        "\"msgid \"",
        "\"msgstr \\\"\\\"\\n\\n\""
      ]
    },
    "dumpintlstr2": {
      "start_point": [
        5165,
        0
      ],
      "end_point": [
        5187,
        1
      ],
      "strings": [
        "\"#: %s:%d\\n\"",
        "\"msgid \"",
        "\"msgid_plural \"",
        "\"msgstr[0] \\\"\\\"\\nmsgstr[1] \\\"\\\"\\n\\n\""
      ]
    },
    "mk_binary": {
      "start_point": [
        5191,
        0
      ],
      "end_point": [
        5296,
        1
      ],
      "strings": [
        "\"division by zero attempted\"",
        "\"division by zero attempted in `%%'\""
      ]
    },
    "mk_boolean": {
      "start_point": [
        5300,
        0
      ],
      "end_point": [
        5346,
        1
      ],
      "strings": []
    },
    "mk_condition": {
      "start_point": [
        5350,
        0
      ],
      "end_point": [
        5415,
        1
      ],
      "strings": []
    },
    "find_line": {
      "start_point": [
        5421,
        0
      ],
      "end_point": [
        5441,
        1
      ],
      "strings": []
    },
    "append_rule": {
      "start_point": [
        5445,
        0
      ],
      "end_point": [
        5528,
        1
      ],
      "strings": []
    },
    "mk_assignment": {
      "start_point": [
        5532,
        0
      ],
      "end_point": [
        5586,
        1
      ],
      "strings": [
        "\"cannot assign a value to the result of a field post-increment expression\"",
        "\"invalid target of assignment (opcode %s)\""
      ]
    },
    "optimize_assignment": {
      "start_point": [
        5590,
        0
      ],
      "end_point": [
        5743,
        1
      ],
      "strings": []
    },
    "mk_getline": {
      "start_point": [
        5748,
        0
      ],
      "end_point": [
        5808,
        1
      ],
      "strings": []
    },
    "mk_for_loop": {
      "start_point": [
        5813,
        0
      ],
      "end_point": [
        5886,
        1
      ],
      "strings": []
    },
    "add_lint": {
      "start_point": [
        5890,
        0
      ],
      "end_point": [
        5942,
        1
      ],
      "strings": [
        "\"statement may have no effect\""
      ]
    },
    "mk_expression_list": {
      "start_point": [
        5946,
        0
      ],
      "end_point": [
        5981,
        1
      ],
      "strings": []
    },
    "count_expressions": {
      "start_point": [
        5988,
        0
      ],
      "end_point": [
        6017,
        1
      ],
      "strings": []
    },
    "fix_break_continue": {
      "start_point": [
        6021,
        0
      ],
      "end_point": [
        6045,
        1
      ],
      "strings": []
    },
    "list_create": {
      "start_point": [
        6047,
        0
      ],
      "end_point": [
        6056,
        1
      ],
      "strings": []
    },
    "list_append": {
      "start_point": [
        6058,
        0
      ],
      "end_point": [
        6068,
        1
      ],
      "strings": []
    },
    "list_prepend": {
      "start_point": [
        6070,
        0
      ],
      "end_point": [
        6080,
        1
      ],
      "strings": []
    },
    "list_merge": {
      "start_point": [
        6082,
        0
      ],
      "end_point": [
        6095,
        1
      ],
      "strings": []
    },
    "add_pending_comment": {
      "start_point": [
        6099,
        0
      ],
      "end_point": [
        6115,
        1
      ],
      "strings": []
    },
    "check_special": {
      "start_point": [
        6119,
        0
      ],
      "end_point": [
        6160,
        1
      ],
      "strings": []
    },
    "read_one_line": {
      "start_point": [
        6172,
        0
      ],
      "end_point": [
        6191,
        1
      ],
      "strings": [
        "\"r\"",
        "\"ugh. fdopen: %s\\n\""
      ]
    },
    "one_line_close": {
      "start_point": [
        6195,
        0
      ],
      "end_point": [
        6206,
        1
      ],
      "strings": [
        "\"debugging read/close screwed up!\""
      ]
    },
    "lookup_builtin": {
      "start_point": [
        6211,
        0
      ],
      "end_point": [
        6237,
        1
      ],
      "strings": []
    },
    "install_builtins": {
      "start_point": [
        6241,
        0
      ],
      "end_point": [
        6262,
        1
      ],
      "strings": []
    },
    "is_alpha": {
      "start_point": [
        6282,
        0
      ],
      "end_point": [
        6303,
        1
      ],
      "strings": []
    },
    "is_alnum": {
      "start_point": [
        6307,
        0
      ],
      "end_point": [
        6312,
        1
      ],
      "strings": []
    },
    "is_letter": {
      "start_point": [
        6321,
        0
      ],
      "end_point": [
        6325,
        1
      ],
      "strings": []
    },
    "is_identchar": {
      "start_point": [
        6329,
        0
      ],
      "end_point": [
        6333,
        1
      ],
      "strings": []
    },
    "set_profile_text": {
      "start_point": [
        6337,
        0
      ],
      "end_point": [
        6359,
        1
      ],
      "strings": [
        "\"set_profile_text\""
      ]
    }
  },
  "gawk/gawk-4.2.1/builtin.c": {
    "efwrite": {
      "start_point": [
        99,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": [
        "\"%s to \\\"%s\\\" failed (%s)\"",
        "\"standard output\"",
        "\"standard error\"",
        "\"reason unknown\""
      ]
    },
    "do_exp": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": [
        "\"exp: received non-numeric argument\"",
        "\"exp: argument %g is out of range\""
      ]
    },
    "stdfile": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\"/dev/stderr\"",
        "\"/dev/stdout\""
      ]
    },
    "do_fflush": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": [
        "\"fflush: cannot flush: pipe `%.*s' opened for reading, not writing\"",
        "\"fflush: cannot flush: file `%.*s' opened for reading, not writing\"",
        "\"fflush: cannot flush file `%.*s': %s\"",
        "\"fflush: cannot flush: two-way pipe `%.*s' has closed write end\"",
        "\"fflush: `%.*s' is not an open file, pipe or co-process\""
      ]
    },
    "strncasecmpmbs": {
      "start_point": [
        277,
        0
      ],
      "end_point": [
        318,
        1
      ],
      "strings": []
    },
    "index_multibyte_buffer": {
      "start_point": [
        326,
        0
      ],
      "end_point": [
        353,
        1
      ],
      "strings": []
    },
    "do_index": {
      "start_point": [
        357,
        0
      ],
      "end_point": [
        467,
        1
      ],
      "strings": [
        "\"index: received non-string first argument\"",
        "\"index: received non-string second argument\""
      ]
    },
    "double_to_int": {
      "start_point": [
        471,
        0
      ],
      "end_point": [
        479,
        1
      ],
      "strings": []
    },
    "do_int": {
      "start_point": [
        483,
        0
      ],
      "end_point": [
        496,
        1
      ],
      "strings": [
        "\"int: received non-numeric argument\""
      ]
    },
    "do_isarray": {
      "start_point": [
        500,
        0
      ],
      "end_point": [
        514,
        1
      ],
      "strings": []
    },
    "do_length": {
      "start_point": [
        518,
        0
      ],
      "end_point": [
        569,
        1
      ],
      "strings": [
        "\"length: received array argument\"",
        "\"`length(array)' is a gawk extension\"",
        "\"length: received non-string argument\""
      ]
    },
    "do_log": {
      "start_point": [
        573,
        0
      ],
      "end_point": [
        588,
        1
      ],
      "strings": [
        "\"log: received non-numeric argument\"",
        "\"log: received negative argument %g\""
      ]
    },
    "mpz2mpfr": {
      "start_point": [
        600,
        0
      ],
      "end_point": [
        624,
        1
      ],
      "strings": []
    },
    "format_tree": {
      "start_point": [
        637,
        0
      ],
      "end_point": [
        1618,
        1
      ],
      "strings": [
        "\" \"",
        "\"0\"",
        "\"0123456789abcdef\"",
        "\"0123456789ABCDEF\"",
        "\"format_tree\"",
        "\"field width is ignored for `%%' specifier\"",
        "\"precision is ignored for `%%' specifier\"",
        "\"field width and precision are ignored for `%%' specifier\"",
        "\"%s\"",
        "\"%\"",
        "\"fatal: `$' is not permitted in awk formats\"",
        "\"fatal: arg count with `$' must be > 0\"",
        "\"fatal: arg count %ld greater than total number of supplied arguments\"",
        "\"fatal: `$' not permitted after period in format\"",
        "\"fatal: must use `count$' on all formats or none\"",
        "\"fatal: no `$' supplied for positional field width or precision\"",
        "\"`l' is meaningless in awk formats; ignored\"",
        "\"fatal: `l' is not permitted in POSIX awk formats\"",
        "\"`L' is meaningless in awk formats; ignored\"",
        "\"fatal: `L' is not permitted in POSIX awk formats\"",
        "\"`h' is meaningless in awk formats; ignored\"",
        "\"fatal: `h' is not permitted in POSIX awk formats\"",
        "\"[s]printf: value %g is too big for %%c format\"",
        "\"[s]printf: value %g is not a valid wide character\"",
        "\"%.0f\"",
        "\"format_tree\"",
        "\"[s]printf: value %g is out of range for `%%%c' format\"",
        "\"\"",
        "\"*.*Z%c\"",
        "\"*Z%c\"",
        "\"*.*R*%c\"",
        "\"*.*%c\"",
        "\"C\"",
        "\"ignoring unknown format specifier character `%c': no argument converted\"",
        "\"%s\\n\\t`%s'\\n\\t%*s%s\"",
        "\"fatal: not enough arguments to satisfy format string\"",
        "\"\"",
        "\"^ ran out for this one\"",
        "\"[s]printf: format specifier does not have control letter\"",
        "\"too many arguments supplied for format string\"",
        "\"format_tree\""
      ]
    },
    "printf_common": {
      "start_point": [
        1623,
        0
      ],
      "end_point": [
        1644,
        1
      ],
      "strings": [
        "\"attempt to use array `%s' in a scalar context\""
      ]
    },
    "do_sprintf": {
      "start_point": [
        1648,
        0
      ],
      "end_point": [
        1660,
        1
      ],
      "strings": [
        "\"sprintf: no arguments\""
      ]
    },
    "do_printf": {
      "start_point": [
        1665,
        0
      ],
      "end_point": [
        1732,
        1
      ],
      "strings": [
        "\"printf: no arguments\"",
        "\"attempt to use array `%s' in a scalar context\"",
        "\"printf: no arguments\"",
        "\"attempt to use array `%s' in a scalar context\"",
        "\"printf: attempt to write to closed write end of two-way pipe\"",
        "\"printf\""
      ]
    },
    "do_sqrt": {
      "start_point": [
        1736,
        0
      ],
      "end_point": [
        1750,
        1
      ],
      "strings": [
        "\"sqrt: received non-numeric argument\"",
        "\"sqrt: called with negative argument %g\""
      ]
    },
    "do_substr": {
      "start_point": [
        1754,
        0
      ],
      "end_point": [
        1899,
        1
      ],
      "strings": [
        "\"substr: length %g is not >= 1\"",
        "\"substr: length %g is not >= 0\"",
        "\"\"",
        "\"substr: non-integer length %g will be truncated\"",
        "\"substr: length %g too big for string indexing, truncating to %g\"",
        "\"substr: start index %g is invalid, using 1\"",
        "\"substr: non-integer start index %g will be truncated\"",
        "\"substr: source string is zero length\"",
        "\"\"",
        "\"substr: start index %g is past end of string\"",
        "\"\"",
        "\"substr: length %g at start index %g exceeds length of first argument (%lu)\"",
        "\"do_substr\""
      ]
    },
    "do_strftime": {
      "start_point": [
        1903,
        0
      ],
      "end_point": [
        2035,
        1
      ],
      "strings": [
        "\"strftime\"",
        "\"strftime: format value in PROCINFO[\\\"strftime\\\"] has numeric type\"",
        "\"strftime: received non-numeric second argument\"",
        "\"strftime: second argument less than 0 or too big for time_t\"",
        "\"\"",
        "\"strftime: second argument out of range for time_t\"",
        "\"\"",
        "\"strftime: received non-string first argument\"",
        "\"strftime: received empty format string\"",
        "\"\"",
        "\"\"",
        "\"do_strftime\"",
        "\"do_strftime\""
      ]
    },
    "do_systime": {
      "start_point": [
        2039,
        0
      ],
      "end_point": [
        2046,
        1
      ],
      "strings": []
    },
    "mktime_tz": {
      "start_point": [
        2050,
        0
      ],
      "end_point": [
        2074,
        1
      ],
      "strings": [
        "\"TZ\"",
        "\"TZ\"",
        "\"setenv(TZ, %s) failed (%s)\"",
        "\"TZ\"",
        "\"setenv(TZ, %s) restoration failed (%s)\"",
        "\"TZ\"",
        "\"unsetenv(TZ) failed (%s)\""
      ]
    },
    "do_mktime": {
      "start_point": [
        2078,
        0
      ],
      "end_point": [
        2138,
        1
      ],
      "strings": [
        "\"mktime: received non-string argument\"",
        "\"%ld %d %d %d %d %d %d\"",
        "\"mktime: at least one of the values is out of the default range\"",
        "\"UTC+0\""
      ]
    },
    "do_system": {
      "start_point": [
        2142,
        0
      ],
      "end_point": [
        2198,
        1
      ],
      "strings": [
        "\"'system' function not allowed in sandbox mode\"",
        "\"system: received non-string argument\""
      ]
    },
    "do_print": {
      "start_point": [
        2202,
        0
      ],
      "end_point": [
        2275,
        1
      ],
      "strings": [
        "\"attempt to use array `%s' in a scalar context\"",
        "\"print: attempt to write to closed write end of two-way pipe\"",
        "\"attempt to use array `%s' in a scalar context\"",
        "\"print\"",
        "\"print\"",
        "\"print\""
      ]
    },
    "do_print_rec": {
      "start_point": [
        2279,
        0
      ],
      "end_point": [
        2331,
        1
      ],
      "strings": [
        "\"print: attempt to write to closed write end of two-way pipe\"",
        "\"reference to uninitialized field `$%d'\"",
        "\"print\"",
        "\"print\""
      ]
    },
    "is_wupper": {
      "start_point": [
        2336,
        0
      ],
      "end_point": [
        2340,
        1
      ],
      "strings": []
    },
    "is_wlower": {
      "start_point": [
        2344,
        0
      ],
      "end_point": [
        2348,
        1
      ],
      "strings": []
    },
    "to_wlower": {
      "start_point": [
        2352,
        0
      ],
      "end_point": [
        2356,
        1
      ],
      "strings": []
    },
    "to_wupper": {
      "start_point": [
        2360,
        0
      ],
      "end_point": [
        2364,
        1
      ],
      "strings": []
    },
    "wide_change_case": {
      "start_point": [
        2368,
        0
      ],
      "end_point": [
        2380,
        1
      ],
      "strings": []
    },
    "wide_toupper": {
      "start_point": [
        2384,
        0
      ],
      "end_point": [
        2388,
        1
      ],
      "strings": []
    },
    "wide_tolower": {
      "start_point": [
        2392,
        0
      ],
      "end_point": [
        2396,
        1
      ],
      "strings": []
    },
    "do_tolower": {
      "start_point": [
        2400,
        0
      ],
      "end_point": [
        2427,
        1
      ],
      "strings": [
        "\"tolower: received non-string argument\""
      ]
    },
    "do_toupper": {
      "start_point": [
        2431,
        0
      ],
      "end_point": [
        2458,
        1
      ],
      "strings": [
        "\"toupper: received non-string argument\""
      ]
    },
    "do_atan2": {
      "start_point": [
        2462,
        0
      ],
      "end_point": [
        2480,
        1
      ],
      "strings": [
        "\"atan2: received non-numeric first argument\"",
        "\"atan2: received non-numeric second argument\""
      ]
    },
    "do_sin": {
      "start_point": [
        2484,
        0
      ],
      "end_point": [
        2496,
        1
      ],
      "strings": [
        "\"sin: received non-numeric argument\""
      ]
    },
    "do_cos": {
      "start_point": [
        2500,
        0
      ],
      "end_point": [
        2512,
        1
      ],
      "strings": [
        "\"cos: received non-numeric argument\""
      ]
    },
    "do_rand": {
      "start_point": [
        2523,
        0
      ],
      "end_point": [
        2599,
        1
      ],
      "strings": []
    },
    "do_srand": {
      "start_point": [
        2603,
        0
      ],
      "end_point": [
        2627,
        1
      ],
      "strings": [
        "\"srand: received non-numeric argument\""
      ]
    },
    "do_match": {
      "start_point": [
        2634,
        0
      ],
      "end_point": [
        2766,
        1
      ],
      "strings": [
        "\"match: third argument is not an array\"",
        "\"%d\"",
        "\"length\"",
        "\"do_match\"",
        "\"do_match\"",
        "\"start\"",
        "\"length\""
      ]
    },
    "do_sub": {
      "start_point": [
        2866,
        0
      ],
      "end_point": [
        3219,
        1
      ],
      "strings": [
        "\"gensub: third argument `%.*s' treated as 1\"",
        "\"do_sub\"",
        "\"\\\\\\\\\\\\&\"",
        "\"\\\\\\\\\\\\\\\\\"",
        "\"\\\\\\\\&\"",
        "\"do_sub\"",
        "\"sub_common\"",
        "\"\\\\\\\\\\\\&\"",
        "\"\\\\\\\\\\\\\\\\\"",
        "\"\\\\\\\\&\"",
        "\"debug: len = %zu, but used %ld\\n\"",
        "\"do_sub\""
      ]
    },
    "call_sub": {
      "start_point": [
        3223,
        0
      ],
      "end_point": [
        3301,
        1
      ],
      "strings": [
        "\"%s: can be called indirectly only with two arguments\""
      ]
    },
    "call_match": {
      "start_point": [
        3305,
        0
      ],
      "end_point": [
        3330,
        1
      ],
      "strings": []
    },
    "call_split_func": {
      "start_point": [
        3334,
        0
      ],
      "end_point": [
        3373,
        1
      ],
      "strings": [
        "\"indirect call to %s requires at least two arguments\""
      ]
    },
    "make_integer": {
      "start_point": [
        3377,
        0
      ],
      "end_point": [
        3383,
        1
      ],
      "strings": []
    },
    "do_lshift": {
      "start_point": [
        3387,
        0
      ],
      "end_point": [
        3422,
        1
      ],
      "strings": [
        "\"lshift: received non-numeric first argument\"",
        "\"lshift: received non-numeric second argument\"",
        "\"lshift(%f, %f): negative values are not allowed\"",
        "\"lshift(%f, %f): fractional values will be truncated\"",
        "\"lshift(%f, %f): too large shift value will give strange results\""
      ]
    },
    "do_rshift": {
      "start_point": [
        3426,
        0
      ],
      "end_point": [
        3461,
        1
      ],
      "strings": [
        "\"rshift: received non-numeric first argument\"",
        "\"rshift: received non-numeric second argument\"",
        "\"rshift(%f, %f): negative values are not allowed\"",
        "\"rshift(%f, %f): fractional values will be truncated\"",
        "\"rshift(%f, %f): too large shift value will give strange results\""
      ]
    },
    "do_and": {
      "start_point": [
        3465,
        0
      ],
      "end_point": [
        3493,
        1
      ],
      "strings": [
        "\"and: called with less than two arguments\"",
        "\"and: argument %d is non-numeric\"",
        "\"and: argument %d negative value %g is not allowed\""
      ]
    },
    "do_or": {
      "start_point": [
        3497,
        0
      ],
      "end_point": [
        3525,
        1
      ],
      "strings": [
        "\"or: called with less than two arguments\"",
        "\"or: argument %d is non-numeric\"",
        "\"or: argument %d negative value %g is not allowed\""
      ]
    },
    "do_xor": {
      "start_point": [
        3529,
        0
      ],
      "end_point": [
        3560,
        1
      ],
      "strings": [
        "\"xor: called with less than two arguments\"",
        "\"xor: argument %d is non-numeric\"",
        "\"xor: argument %d negative value %g is not allowed\""
      ]
    },
    "do_compl": {
      "start_point": [
        3564,
        0
      ],
      "end_point": [
        3586,
        1
      ],
      "strings": [
        "\"compl: received non-numeric argument\"",
        "\"compl(%f): negative value is not allowed\"",
        "\"compl(%f): fractional value will be truncated\""
      ]
    },
    "do_strtonum": {
      "start_point": [
        3590,
        0
      ],
      "end_point": [
        3606,
        1
      ],
      "strings": []
    },
    "nondec2awknum": {
      "start_point": [
        3616,
        0
      ],
      "end_point": [
        3699,
        1
      ],
      "strings": []
    },
    "localecategory_from_argument": {
      "start_point": [
        3705,
        0
      ],
      "end_point": [
        3770,
        1
      ],
      "strings": [
        "\"LC_ALL\"",
        "\"LC_COLLATE\"",
        "\"LC_CTYPE\"",
        "\"LC_MESSAGES\"",
        "\"LC_MONETARY\"",
        "\"LC_NUMERIC\"",
        "\"LC_RESPONSE\"",
        "\"LC_TIME\"",
        "\"dcgettext: `%s' is not a valid locale category\""
      ]
    },
    "do_dcgettext": {
      "start_point": [
        3783,
        0
      ],
      "end_point": [
        3837,
        1
      ],
      "strings": []
    },
    "do_dcngettext": {
      "start_point": [
        3840,
        0
      ],
      "end_point": [
        3917,
        1
      ],
      "strings": []
    },
    "do_bindtextdomain": {
      "start_point": [
        3930,
        0
      ],
      "end_point": [
        3968,
        1
      ],
      "strings": []
    },
    "do_intdiv": {
      "start_point": [
        3981,
        0
      ],
      "end_point": [
        4038,
        1
      ],
      "strings": [
        "\"intdiv: third argument is not an array\"",
        "\"intdiv: received non-numeric first argument\"",
        "\"intdiv: received non-numeric second argument\"",
        "\"intdiv: division by zero attempted\"",
        "\"quotient\"",
        "\"remainder\""
      ]
    },
    "do_typeof": {
      "start_point": [
        4043,
        0
      ],
      "end_point": [
        4106,
        1
      ],
      "strings": [
        "\"array\"",
        "\"number\"",
        "\"strnum\"",
        "\"regexp\"",
        "\"string\"",
        "\"unassigned\"",
        "\"typeof detected invalid flags combination `%s'; please file a bug report.\"",
        "\"unknown\"",
        "\"untyped\"",
        "\"typeof: invalid argument type `%s'\"",
        "\"typeof: unknown argument type `%s'\""
      ]
    },
    "mbc_byte_count": {
      "start_point": [
        4110,
        0
      ],
      "end_point": [
        4133,
        1
      ],
      "strings": []
    },
    "mbc_char_count": {
      "start_point": [
        4137,
        0
      ],
      "end_point": [
        4163,
        1
      ],
      "strings": []
    },
    "sanitize_exit_status": {
      "start_point": [
        4167,
        0
      ],
      "end_point": [
        4184,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/cint_array.c": {
    "cint_array_init": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": [
        "\"NHAT\""
      ]
    },
    "is_uinteger": {
      "start_point": [
        171,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "cint_lookup": {
      "start_point": [
        182,
        0
      ],
      "end_point": [
        264,
        1
      ],
      "strings": [
        "\"cint_lookup\""
      ]
    },
    "cint_exists": {
      "start_point": [
        269,
        0
      ],
      "end_point": [
        283,
        1
      ],
      "strings": []
    },
    "cint_clear": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": []
    },
    "cint_remove": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        374,
        1
      ],
      "strings": []
    },
    "cint_copy": {
      "start_point": [
        379,
        0
      ],
      "end_point": [
        414,
        1
      ],
      "strings": [
        "\"cint_copy\""
      ]
    },
    "cint_list": {
      "start_point": [
        419,
        0
      ],
      "end_point": [
        471,
        1
      ],
      "strings": [
        "\"cint_list\"",
        "\"cint_list\""
      ]
    },
    "cint_dump": {
      "start_point": [
        476,
        0
      ],
      "end_point": [
        562,
        1
      ],
      "strings": [
        "\"%s `%s'\\n\"",
        "\"array\"",
        "\"sub-array\"",
        "\"array_func: cint_array_func\\n\"",
        "\"flags: %s\\n\"",
        "\"NHAT: %d\\n\"",
        "\"THRESHOLD: %ld\\n\"",
        "\"table_size: %ld (total), %ld (cint), %ld (int + str)\\n\"",
        "\"array_capacity: %lu\\n\"",
        "\"Load Factor: %.2g\\n\"",
        "\"memory: %.2g kB (total)\\n\"",
        "\"\\n\"",
        "\"\\n\""
      ]
    },
    "cint_hash": {
      "start_point": [
        567,
        0
      ],
      "end_point": [
        620,
        1
      ],
      "strings": []
    },
    "cint_find": {
      "start_point": [
        625,
        0
      ],
      "end_point": [
        633,
        1
      ],
      "strings": []
    },
    "cint_print": {
      "start_point": [
        640,
        0
      ],
      "end_point": [
        654,
        1
      ],
      "strings": [
        "\"I[%4lu:%-4lu]\\n\""
      ]
    },
    "make_node": {
      "start_point": [
        708,
        0
      ],
      "end_point": [
        716,
        1
      ],
      "strings": []
    },
    "tree_lookup": {
      "start_point": [
        721,
        0
      ],
      "end_point": [
        780,
        1
      ],
      "strings": [
        "\"tree_lookup\""
      ]
    },
    "tree_exists": {
      "start_point": [
        785,
        0
      ],
      "end_point": [
        799,
        1
      ],
      "strings": []
    },
    "tree_clear": {
      "start_point": [
        803,
        0
      ],
      "end_point": [
        827,
        1
      ],
      "strings": []
    },
    "tree_remove": {
      "start_point": [
        832,
        0
      ],
      "end_point": [
        863,
        1
      ],
      "strings": []
    },
    "tree_find": {
      "start_point": [
        868,
        0
      ],
      "end_point": [
        881,
        1
      ],
      "strings": []
    },
    "tree_list": {
      "start_point": [
        886,
        0
      ],
      "end_point": [
        912,
        1
      ],
      "strings": []
    },
    "tree_copy": {
      "start_point": [
        917,
        0
      ],
      "end_point": [
        946,
        1
      ],
      "strings": [
        "\"tree_copy\""
      ]
    },
    "tree_info": {
      "start_point": [
        951,
        0
      ],
      "end_point": [
        970,
        1
      ],
      "strings": []
    },
    "tree_kilobytes": {
      "start_point": [
        975,
        0
      ],
      "end_point": [
        995,
        1
      ],
      "strings": []
    },
    "tree_print": {
      "start_point": [
        1001,
        0
      ],
      "end_point": [
        1026,
        1
      ],
      "strings": [
        "\"%4lu:%s[%4lu:%-4lu]\\n\"",
        "\"HH\"",
        "\"H\""
      ]
    },
    "leaf_lookup": {
      "start_point": [
        1036,
        0
      ],
      "end_point": [
        1055,
        1
      ],
      "strings": [
        "\"leaf_lookup\""
      ]
    },
    "leaf_exists": {
      "start_point": [
        1060,
        0
      ],
      "end_point": [
        1066,
        1
      ],
      "strings": []
    },
    "leaf_clear": {
      "start_point": [
        1071,
        0
      ],
      "end_point": [
        1091,
        1
      ],
      "strings": []
    },
    "leaf_remove": {
      "start_point": [
        1096,
        0
      ],
      "end_point": [
        1112,
        1
      ],
      "strings": []
    },
    "leaf_copy": {
      "start_point": [
        1117,
        0
      ],
      "end_point": [
        1145,
        1
      ],
      "strings": [
        "\"leaf_copy\""
      ]
    },
    "leaf_list": {
      "start_point": [
        1150,
        0
      ],
      "end_point": [
        1192,
        1
      ],
      "strings": [
        "\"%ld\""
      ]
    },
    "leaf_info": {
      "start_point": [
        1197,
        0
      ],
      "end_point": [
        1215,
        1
      ],
      "strings": []
    },
    "leaf_print": {
      "start_point": [
        1222,
        0
      ],
      "end_point": [
        1230,
        1
      ],
      "strings": [
        "\"%4lu:L[%4lu:%-4lu]\\n\""
      ]
    }
  },
  "gawk/gawk-4.2.1/cmd.h": {},
  "gawk/gawk-4.2.1/command.c": {
    "yy_symbol_value_print": {
      "start_point": [
        927,
        0
      ],
      "end_point": [
        939,
        1
      ],
      "strings": []
    },
    "yy_symbol_print": {
      "start_point": [
        946,
        0
      ],
      "end_point": [
        954,
        1
      ],
      "strings": [
        "\"%s %s (\"",
        "\"token\"",
        "\"nterm\"",
        "\")\""
      ]
    },
    "yy_stack_print": {
      "start_point": [
        961,
        0
      ],
      "end_point": [
        971,
        1
      ],
      "strings": [
        "\"Stack now\"",
        "\" %d\"",
        "\"\\n\""
      ]
    },
    "yy_reduce_print": {
      "start_point": [
        984,
        0
      ],
      "end_point": [
        1002,
        1
      ],
      "strings": [
        "\"Reducing stack by rule %d (line %lu):\\n\"",
        "\"   $%d = \"",
        "\"\\n\""
      ]
    },
    "yystrlen": {
      "start_point": [
        1045,
        0
      ],
      "end_point": [
        1052,
        1
      ],
      "strings": []
    },
    "yystpcpy": {
      "start_point": [
        1062,
        0
      ],
      "end_point": [
        1072,
        1
      ],
      "strings": []
    },
    "yytnamerr": {
      "start_point": [
        1084,
        0
      ],
      "end_point": [
        1121,
        1
      ],
      "strings": []
    },
    "yysyntax_error": {
      "start_point": [
        1132,
        0
      ],
      "end_point": [
        1257,
        1
      ],
      "strings": [
        "\"syntax error\"",
        "\"syntax error, unexpected %s\"",
        "\"syntax error, unexpected %s, expecting %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s or %s\"",
        "\"syntax error, unexpected %s, expecting %s or %s or %s or %s\""
      ]
    },
    "yydestruct": {
      "start_point": [
        1264,
        0
      ],
      "end_point": [
        1275,
        1
      ],
      "strings": [
        "\"Deleting\""
      ]
    },
    "yyparse": {
      "start_point": [
        1293,
        0
      ],
      "end_point": [
        2495,
        1
      ],
      "strings": [
        "\"Starting parse\\n\"",
        "\"memory exhausted\"",
        "\"Stack size increased to %lu\\n\"",
        "\"Entering state %d\\n\"",
        "\"Reading a token: \"",
        "\"Now at end of input.\\n\"",
        "\"Next token is\"",
        "\"Shifting\"",
        "\"Type (g)awk statement(s). End with the command \\\"end\\\"\\n\"",
        "\"eval\"",
        "\"invalid frame number: %d\"",
        "\"info: invalid option - \\\"%s\\\"\"",
        "\"source \\\"%s\\\": already sourced.\"",
        "\"save \\\"%s\\\": command not permitted.\"",
        "\"Can't use command `commands' for breakpoint/watchpoint commands\"",
        "\"no breakpoint/watchpoint has been set yet\"",
        "\"invalid breakpoint/watchpoint number\"",
        "\"Type commands for when %s %d is hit, one per line.\\n\"",
        "\"breakpoint\"",
        "\"watchpoint\"",
        "\"End with the command \\\"end\\\"\\n\"",
        "\"`end' valid only in command `commands' or `eval'\"",
        "\"`silent' valid only in command `commands'\"",
        "\"trace: invalid option - \\\"%s\\\"\"",
        "\"condition: invalid breakpoint/watchpoint number\"",
        "\"eval\"",
        "\"argument not a string\"",
        "\"option: invalid parameter - \\\"%s\\\"\"",
        "\"option: invalid parameter - \\\"%s\\\"\"",
        "\"no such function - \\\"%s\\\"\"",
        "\"enable: invalid option - \\\"%s\\\"\"",
        "\"invalid range specification: %d - %d\"",
        "\"non-numeric value for field number\"",
        "\"non-numeric value found, numeric expected\"",
        "\"non-numeric value found, numeric expected\"",
        "\"non-zero integer value\"",
        "\"non-zero integer value\"",
        "\"-> $$ =\"",
        "\"syntax error\"",
        "\"syntax error\"",
        "\"Error: discarding\"",
        "\"Error: popping\"",
        "\"memory exhausted\"",
        "\"Cleanup: discarding lookahead\"",
        "\"Cleanup: popping\""
      ]
    },
    "append_statement": {
      "start_point": [
        2502,
        0
      ],
      "end_point": [
        2560,
        1
      ],
      "strings": [
        "\"append_statement\"",
        "\"function @eval(\"",
        "\"append_statement\"",
        "\"append_statement\""
      ]
    },
    "get_command": {
      "start_point": [
        2679,
        0
      ],
      "end_point": [
        2688,
        1
      ],
      "strings": []
    },
    "get_command_name": {
      "start_point": [
        2692,
        0
      ],
      "end_point": [
        2701,
        1
      ],
      "strings": []
    },
    "mk_cmdarg": {
      "start_point": [
        2705,
        0
      ],
      "end_point": [
        2712,
        1
      ],
      "strings": [
        "\"mk_cmdarg\""
      ]
    },
    "append_cmdarg": {
      "start_point": [
        2716,
        0
      ],
      "end_point": [
        2726,
        1
      ],
      "strings": []
    },
    "free_cmdarg": {
      "start_point": [
        2730,
        0
      ],
      "end_point": [
        2755,
        1
      ],
      "strings": []
    },
    "yyerror": {
      "start_point": [
        2759,
        0
      ],
      "end_point": [
        2770,
        1
      ],
      "strings": [
        "\"error: \"",
        "\"\\n\""
      ]
    },
    "yylex": [
      {
        "start_point": [
          2777,
          0
        ],
        "end_point": [
          3054,
          1
        ],
        "strings": [
          "\"can't read command (%s)\\n\"",
          "\"quit\"",
          "\"can't read command (%s)\"",
          "\"help\"",
          "\"invalid character in command\"",
          "\"unknown command - \\\"%.*s\\\", try help\"",
          "\"yylex\"",
          "\"unterminated string\"",
          "\"%s\"",
          "\"invalid character\""
        ]
      },
      {
        "start_point": [
          3060,
          0
        ],
        "end_point": [
          3086,
          1
        ],
        "strings": []
      }
    ],
    "find_argument": {
      "start_point": [
        3091,
        0
      ],
      "end_point": [
        3110,
        1
      ],
      "strings": []
    },
    "concat_args": {
      "start_point": [
        3114,
        0
      ],
      "end_point": [
        3159,
        1
      ],
      "strings": [
        "\"concat_args\"",
        "\"concat_args\""
      ]
    },
    "find_command": {
      "start_point": [
        3165,
        0
      ],
      "end_point": [
        3220,
        1
      ],
      "strings": []
    },
    "do_help": {
      "start_point": [
        3224,
        0
      ],
      "end_point": [
        3249,
        1
      ],
      "strings": [
        "\"%s:\\n\"",
        "\"\\t%s\\n\"",
        "\"%s\\n\"",
        "\"option\"",
        "\"undefined command: %s\\n\""
      ]
    },
    "next_word": {
      "start_point": [
        3258,
        0
      ],
      "end_point": [
        3278,
        1
      ],
      "strings": []
    },
    "command_completion": {
      "start_point": [
        3290,
        0
      ],
      "end_point": [
        3339,
        1
      ],
      "strings": []
    },
    "command_generator": {
      "start_point": [
        3343,
        0
      ],
      "end_point": [
        3360,
        1
      ],
      "strings": []
    },
    "srcfile_generator": {
      "start_point": [
        3364,
        0
      ],
      "end_point": [
        3387,
        1
      ],
      "strings": []
    },
    "argument_generator": {
      "start_point": [
        3391,
        0
      ],
      "end_point": [
        3417,
        1
      ],
      "strings": []
    },
    "variable_generator": {
      "start_point": [
        3421,
        0
      ],
      "end_point": [
        3460,
        1
      ],
      "strings": []
    },
    "history_expand_line": {
      "start_point": [
        3464,
        0
      ],
      "end_point": [
        3480,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/command.y": {
    "D_DELETE": [
      {
        "start_point": [
          94,
          55
        ],
        "end_point": [
          123,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          178,
          3
        ],
        "end_point": [
          181,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          217,
          10
        ],
        "end_point": [
          232,
          4
        ],
        "strings": [
          "\"Type (g)awk statement(s). End with the command \\\"end\\\"\\n\""
        ]
      },
      {
        "start_point": [
          244,
          3
        ],
        "end_point": [
          244,
          74
        ],
        "strings": []
      },
      {
        "start_point": [
          251,
          17
        ],
        "end_point": [
          266,
          4
        ],
        "strings": [
          "\"eval\""
        ]
      },
      {
        "start_point": [
          267,
          3
        ],
        "end_point": [
          277,
          4
        ],
        "strings": []
      },
      {
        "start_point": [
          292,
          3
        ],
        "end_point": [
          303,
          4
        ],
        "strings": [
          "\"info: invalid option - \\\"%s\\\"\""
        ]
      }
    ],
    "plus_integer": [
      {
        "start_point": [
          316,
          36
        ],
        "end_point": [
          323,
          4
        ],
        "strings": [
          "\"source \\\"%s\\\": already sourced.\""
        ]
      },
      {
        "start_point": [
          324,
          3
        ],
        "end_point": [
          328,
          4
        ],
        "strings": [
          "\"save \\\"%s\\\": command not permitted.\""
        ]
      },
      {
        "start_point": [
          329,
          3
        ],
        "end_point": [
          354,
          4
        ],
        "strings": [
          "\"Can't use command `commands' for breakpoint/watchpoint commands\"",
          "\"no breakpoint/watchpoint has been set yet\"",
          "\"invalid breakpoint/watchpoint number\"",
          "\"Type commands for when %s %d is hit, one per line.\\n\"",
          "\"breakpoint\"",
          "\"watchpoint\"",
          "\"End with the command \\\"end\\\"\\n\""
        ]
      },
      {
        "start_point": [
          370,
          3
        ],
        "end_point": [
          381,
          4
        ],
        "strings": [
          "\"trace: invalid option - \\\"%s\\\"\""
        ]
      },
      {
        "start_point": [
          382,
          3
        ],
        "end_point": [
          382,
          52
        ],
        "strings": []
      },
      {
        "start_point": [
          549,
          7
        ],
        "end_point": [
          553,
          4
        ],
        "strings": []
      }
    ],
    "error": [
      {
        "start_point": [
          650,
          3
        ],
        "end_point": [
          651,
          26
        ],
        "strings": []
      },
      {
        "start_point": [
          665,
          3
        ],
        "end_point": [
          671,
          4
        ],
        "strings": []
      }
    ],
    "append_statement": {
      "start_point": [
        753,
        0
      ],
      "end_point": [
        811,
        1
      ],
      "strings": [
        "\"append_statement\"",
        "\"function @eval(\"",
        "\"append_statement\"",
        "\"append_statement\""
      ]
    },
    "get_command": {
      "start_point": [
        930,
        0
      ],
      "end_point": [
        939,
        1
      ],
      "strings": []
    },
    "get_command_name": {
      "start_point": [
        943,
        0
      ],
      "end_point": [
        952,
        1
      ],
      "strings": []
    },
    "mk_cmdarg": {
      "start_point": [
        956,
        0
      ],
      "end_point": [
        963,
        1
      ],
      "strings": [
        "\"mk_cmdarg\""
      ]
    },
    "append_cmdarg": {
      "start_point": [
        967,
        0
      ],
      "end_point": [
        977,
        1
      ],
      "strings": []
    },
    "free_cmdarg": {
      "start_point": [
        981,
        0
      ],
      "end_point": [
        1006,
        1
      ],
      "strings": []
    },
    "yyerror": {
      "start_point": [
        1010,
        0
      ],
      "end_point": [
        1021,
        1
      ],
      "strings": [
        "\"error: \"",
        "\"\\n\""
      ]
    },
    "yylex": [
      {
        "start_point": [
          1028,
          0
        ],
        "end_point": [
          1305,
          1
        ],
        "strings": [
          "\"can't read command (%s)\\n\"",
          "\"quit\"",
          "\"can't read command (%s)\"",
          "\"help\"",
          "\"invalid character in command\"",
          "\"unknown command - \\\"%.*s\\\", try help\"",
          "\"yylex\"",
          "\"unterminated string\"",
          "\"%s\"",
          "\"invalid character\""
        ]
      },
      {
        "start_point": [
          1311,
          0
        ],
        "end_point": [
          1337,
          1
        ],
        "strings": []
      }
    ],
    "find_argument": {
      "start_point": [
        1342,
        0
      ],
      "end_point": [
        1361,
        1
      ],
      "strings": []
    },
    "concat_args": {
      "start_point": [
        1365,
        0
      ],
      "end_point": [
        1410,
        1
      ],
      "strings": [
        "\"concat_args\"",
        "\"concat_args\""
      ]
    },
    "find_command": {
      "start_point": [
        1416,
        0
      ],
      "end_point": [
        1471,
        1
      ],
      "strings": []
    },
    "do_help": {
      "start_point": [
        1475,
        0
      ],
      "end_point": [
        1500,
        1
      ],
      "strings": [
        "\"%s:\\n\"",
        "\"\\t%s\\n\"",
        "\"%s\\n\"",
        "\"option\"",
        "\"undefined command: %s\\n\""
      ]
    },
    "next_word": {
      "start_point": [
        1509,
        0
      ],
      "end_point": [
        1529,
        1
      ],
      "strings": []
    },
    "command_completion": {
      "start_point": [
        1541,
        0
      ],
      "end_point": [
        1590,
        1
      ],
      "strings": []
    },
    "command_generator": {
      "start_point": [
        1594,
        0
      ],
      "end_point": [
        1611,
        1
      ],
      "strings": []
    },
    "srcfile_generator": {
      "start_point": [
        1615,
        0
      ],
      "end_point": [
        1638,
        1
      ],
      "strings": []
    },
    "argument_generator": {
      "start_point": [
        1642,
        0
      ],
      "end_point": [
        1668,
        1
      ],
      "strings": []
    },
    "variable_generator": {
      "start_point": [
        1672,
        0
      ],
      "end_point": [
        1711,
        1
      ],
      "strings": []
    },
    "history_expand_line": {
      "start_point": [
        1715,
        0
      ],
      "end_point": [
        1731,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/custom.h": {},
  "gawk/gawk-4.2.1/debug.c": {
    "g_readline": {
      "start_point": [
        355,
        0
      ],
      "end_point": [
        390,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"g_readline\"",
        "\"g_readline\""
      ]
    },
    "d_error": {
      "start_point": [
        395,
        0
      ],
      "end_point": [
        404,
        1
      ],
      "strings": [
        "\"error: \"",
        "\"\\n\""
      ]
    },
    "find_lines": {
      "start_point": [
        408,
        0
      ],
      "end_point": [
        466,
        1
      ],
      "strings": [
        "\"find_lines\"",
        "\"find_lines\"",
        "\"find_lines\"",
        "\"can't read source file `%s' (%s)\"",
        "\"source file `%s' is empty.\\n\""
      ]
    },
    "source_find": {
      "start_point": [
        470,
        0
      ],
      "end_point": [
        506,
        1
      ],
      "strings": [
        "\"no current source file.\"",
        "\"cannot find source file named `%s' (%s)\""
      ]
    },
    "print_lines": {
      "start_point": [
        510,
        0
      ],
      "end_point": [
        638,
        1
      ],
      "strings": [
        "\"can't open source file `%s' for reading (%s)\"",
        "\"WARNING: source file `%s' modified since program compilation.\\n\"",
        "\"can't open source file `%s' for reading (%s)\"",
        "\"line number %d out of range; `%s' has %d lines\"",
        "\"%s: %s\"",
        "\"print_lines\"",
        "\"print_lines\"",
        "\"%-8d\"",
        "\"%-4d:b=>\"",
        "\"%-4d  =>\"",
        "\"%-4d:b  \"",
        "\"can't read source file `%s' (%s)\"",
        "\"unexpected eof while reading file `%s', line %d\"",
        "\"source file `%s' modified since start of program execution\""
      ]
    },
    "do_list": {
      "start_point": [
        642,
        0
      ],
      "end_point": [
        717,
        1
      ],
      "strings": []
    },
    "do_info": {
      "start_point": [
        721,
        0
      ],
      "end_point": [
        936,
        1
      ],
      "strings": [
        "\"Current source file: %s\\n\"",
        "\"Number of lines: %d\\n\"",
        "\"Source file (lines): %s (%d)\\n\"",
        "\"cmd. line\"",
        "\"Number  Disp  Enabled  Location\\n\\n\"",
        "\"keep\"",
        "\"dis\"",
        "\"del\"",
        "\"%-6d  %-4.4s  %-7.7s  file %s, line #%d\\n\"",
        "\"yes\"",
        "\"no\"",
        "\"\\tno of hits = %ld\\n\"",
        "\"\\tignore next %ld hit(s)\\n\"",
        "\"\\tstop condition: %s\\n\"",
        "\"\\tcommands:\\n\"",
        "\"\\t%s\\n\"",
        "\"%s\"",
        "\"Current frame: \"",
        "\"Called by frame: \"",
        "\"Caller of frame: \"",
        "\"None in main().\\n\"",
        "\"%s = \"",
        "\"%s\"",
        "\"No arguments.\\n\"",
        "\"No locals.\\n\"",
        "\"All defined variables:\\n\\n\"",
        "\"All defined functions:\\n\\n\"",
        "\"Auto-display variables:\\n\\n\"",
        "\"Watch variables:\\n\\n\"",
        "\"%d:\\t%s\"",
        "\"[\\\"%.*s\\\"]\"",
        "\"\\n\"",
        "\"%d:\\t$%ld\\n\"",
        "\"%d:\\t%s\\n\"",
        "\"\\tstop condition: %s\\n\"",
        "\"\\tcommands:\\n\"",
        "\"\\t%s\\n\"",
        "\"%s\""
      ]
    },
    "print_symbol": {
      "start_point": [
        940,
        0
      ],
      "end_point": [
        961,
        1
      ],
      "strings": [
        "\"untyped variable\\n\"",
        "\"array, %ld elements\\n\"",
        "\"`function'\\n\""
      ]
    },
    "find_frame": {
      "start_point": [
        965,
        0
      ],
      "end_point": [
        976,
        1
      ],
      "strings": []
    },
    "find_param": {
      "start_point": [
        980,
        0
      ],
      "end_point": [
        1012,
        1
      ],
      "strings": []
    },
    "find_symbol": {
      "start_point": [
        1016,
        0
      ],
      "end_point": [
        1030,
        1
      ],
      "strings": [
        "\"no symbol `%s' in current context\\n\""
      ]
    },
    "find_array": {
      "start_point": [
        1034,
        0
      ],
      "end_point": [
        1044,
        1
      ],
      "strings": [
        "\"`%s' is not an array\\n\""
      ]
    },
    "print_field": {
      "start_point": [
        1048,
        0
      ],
      "end_point": [
        1059,
        1
      ],
      "strings": [
        "\"$%ld = uninitialized field\\n\"",
        "\"$%ld = \""
      ]
    },
    "print_array": {
      "start_point": [
        1063,
        0
      ],
      "end_point": [
        1106,
        1
      ],
      "strings": [
        "\"array `%s' is empty\\n\"",
        "\"@ind_str_asc\"",
        "\"%s[\\\"%.*s\\\"] = \""
      ]
    },
    "print_subscript": {
      "start_point": [
        1110,
        0
      ],
      "end_point": [
        1131,
        1
      ],
      "strings": [
        "\"[\\\"%.*s\\\"] not in array `%s'\\n\"",
        "\"%s = \"",
        "\"%s[\\\"%.*s\\\"] = \""
      ]
    },
    "do_print_var": {
      "start_point": [
        1135,
        0
      ],
      "end_point": [
        1199,
        1
      ],
      "strings": [
        "\"%s = \"",
        "\"[\\\"%.*s\\\"] not in array `%s'\\n\"",
        "\"`%s[\\\"%.*s\\\"]' is not an array\\n\""
      ]
    },
    "do_set_var": {
      "start_point": [
        1203,
        0
      ],
      "end_point": [
        1314,
        1
      ],
      "strings": [
        "\"%s = \"",
        "\"`%s' is not a scalar variable\"",
        "\"attempt to use array `%s[\\\"%.*s\\\"]' in a scalar context\"",
        "\"%s[\\\"%.*s\\\"] = \"",
        "\"attempt to use scalar `%s[\\\"%.*s\\\"]' as array\""
      ]
    },
    "find_item": {
      "start_point": [
        1318,
        0
      ],
      "end_point": [
        1330,
        1
      ],
      "strings": []
    },
    "delete_item": {
      "start_point": [
        1334,
        0
      ],
      "end_point": [
        1365,
        1
      ],
      "strings": []
    },
    "add_item": {
      "start_point": [
        1369,
        0
      ],
      "end_point": [
        1404,
        1
      ],
      "strings": [
        "\"add_item\""
      ]
    },
    "do_add_item": {
      "start_point": [
        1408,
        0
      ],
      "end_point": [
        1468,
        1
      ],
      "strings": [
        "\"`%s' is a function\"",
        "\"`%s' is not an array\\n\"",
        "\"do_add_item\"",
        "\"watchpoint %d is unconditional\\n\""
      ]
    },
    "do_delete_item": {
      "start_point": [
        1472,
        0
      ],
      "end_point": [
        1507,
        1
      ],
      "strings": [
        "\"No display item numbered %ld\"",
        "\"No watch item numbered %ld\""
      ]
    },
    "display": {
      "start_point": [
        1511,
        0
      ],
      "end_point": [
        1552,
        1
      ],
      "strings": [
        "\"%d: [\\\"%.*s\\\"] not in array `%s'\\n\"",
        "\"%d: %s[\\\"%.*s\\\"] = \"",
        "\"%d: \"",
        "\"%d: %s = \""
      ]
    },
    "do_display": {
      "start_point": [
        1557,
        0
      ],
      "end_point": [
        1573,
        1
      ],
      "strings": []
    },
    "do_undisplay": {
      "start_point": [
        1577,
        0
      ],
      "end_point": [
        1582,
        1
      ],
      "strings": []
    },
    "condition_triggered": {
      "start_point": [
        1586,
        0
      ],
      "end_point": [
        1606,
        1
      ],
      "strings": []
    },
    "find_subscript": {
      "start_point": [
        1609,
        0
      ],
      "end_point": [
        1630,
        1
      ],
      "strings": []
    },
    "cmp_val": {
      "start_point": [
        1634,
        0
      ],
      "end_point": [
        1673,
        1
      ],
      "strings": []
    },
    "watchpoint_triggered": {
      "start_point": [
        1679,
        0
      ],
      "end_point": [
        1754,
        1
      ],
      "strings": []
    },
    "initialize_watch_item": {
      "start_point": [
        1758,
        0
      ],
      "end_point": [
        1798,
        1
      ],
      "strings": [
        "\"attempt to use scalar value as array\""
      ]
    },
    "do_watch": {
      "start_point": [
        1802,
        0
      ],
      "end_point": [
        1835,
        1
      ],
      "strings": [
        "\"Watchpoint %d: \"",
        "\"%s\"",
        "\"[\\\"%.*s\\\"]\"",
        "\"\\n\"",
        "\"$%ld\\n\"",
        "\"%s\\n\""
      ]
    },
    "do_unwatch": {
      "start_point": [
        1839,
        0
      ],
      "end_point": [
        1844,
        1
      ],
      "strings": []
    },
    "frame_popped": {
      "start_point": [
        1848,
        0
      ],
      "end_point": [
        1874,
        1
      ],
      "strings": [
        "\"Watchpoint %d deleted because parameter is out of scope.\\n\"",
        "\"Display %d deleted because parameter is out of scope.\\n\""
      ]
    },
    "print_function": {
      "start_point": [
        1880,
        0
      ],
      "end_point": [
        1904,
        1
      ],
      "strings": [
        "\"%s(\"",
        "\"%s\"",
        "\", \"",
        "\")\"",
        "\" in file `%s', line %d\\n\""
      ]
    },
    "print_frame": {
      "start_point": [
        1911,
        0
      ],
      "end_point": [
        1923,
        1
      ],
      "strings": [
        "\"main()\"",
        "\" at `%s':%d\""
      ]
    },
    "print_numbered_frame": {
      "start_point": [
        1927,
        0
      ],
      "end_point": [
        1943,
        1
      ],
      "strings": [
        "\"#%ld\\t \"",
        "\"#%ld\\tin \"",
        "\"\\n\""
      ]
    },
    "do_backtrace": {
      "start_point": [
        1947,
        0
      ],
      "end_point": [
        1977,
        1
      ],
      "strings": [
        "\"More stack frames follow ...\\n\""
      ]
    },
    "print_cur_frame_and_sourceline": {
      "start_point": [
        1983,
        0
      ],
      "end_point": [
        2008,
        1
      ],
      "strings": [
        "\"#%ld\\tin \"",
        "\"#%ld\\t \"",
        "\"\\n\""
      ]
    },
    "do_frame": {
      "start_point": [
        2012,
        0
      ],
      "end_point": [
        2025,
        1
      ],
      "strings": [
        "\"invalid frame number\""
      ]
    },
    "do_up": {
      "start_point": [
        2029,
        0
      ],
      "end_point": [
        2043,
        1
      ],
      "strings": []
    },
    "do_down": {
      "start_point": [
        2047,
        0
      ],
      "end_point": [
        2061,
        1
      ],
      "strings": []
    },
    "find_rule": {
      "start_point": [
        2067,
        0
      ],
      "end_point": [
        2091,
        1
      ],
      "strings": []
    },
    "mk_breakpoint": {
      "start_point": [
        2097,
        0
      ],
      "end_point": [
        2124,
        1
      ],
      "strings": [
        "\"mk_breakpoint\""
      ]
    },
    "delete_breakpoint": {
      "start_point": [
        2130,
        0
      ],
      "end_point": [
        2159,
        1
      ],
      "strings": []
    },
    "find_breakpoint": {
      "start_point": [
        2163,
        0
      ],
      "end_point": [
        2176,
        1
      ],
      "strings": []
    },
    "add_breakpoint": {
      "start_point": [
        2180,
        0
      ],
      "end_point": [
        2242,
        1
      ],
      "strings": [
        "\"Note: breakpoint %d (enabled, ignore next %ld hits), also set at %s:%d\"",
        "\"Note: breakpoint %d (enabled), also set at %s:%d\"",
        "\"Note: breakpoint %d (disabled, ignore next %ld hits), also set at %s:%d\"",
        "\"Note: breakpoint %d (disabled), also set at %s:%d\"",
        "\"Breakpoint %d set at file `%s', line %d\\n\""
      ]
    },
    "set_breakpoint_at": {
      "start_point": [
        2246,
        0
      ],
      "end_point": [
        2275,
        1
      ],
      "strings": []
    },
    "set_breakpoint_next": {
      "start_point": [
        2279,
        0
      ],
      "end_point": [
        2296,
        1
      ],
      "strings": []
    },
    "set_breakpoint": {
      "start_point": [
        2300,
        0
      ],
      "end_point": [
        2408,
        1
      ],
      "strings": [
        "\"Can't set breakpoint in file `%s'\\n\"",
        "\"line number %d in file `%s' out of range\"",
        "\"Can't find rule!!!\\n\"",
        "\"Can't set breakpoint at `%s':%d\\n\"",
        "\"Can't set breakpoint in function `%s'\\n\"",
        "\"breakpoint %d set at file `%s', line %d is unconditional\\n\""
      ]
    },
    "breakpoint_triggered": {
      "start_point": [
        2413,
        0
      ],
      "end_point": [
        2433,
        1
      ],
      "strings": []
    },
    "do_breakpoint": {
      "start_point": [
        2437,
        0
      ],
      "end_point": [
        2441,
        1
      ],
      "strings": []
    },
    "do_tmp_breakpoint": {
      "start_point": [
        2445,
        0
      ],
      "end_point": [
        2449,
        1
      ],
      "strings": []
    },
    "do_clear": {
      "start_point": [
        2453,
        0
      ],
      "end_point": [
        2547,
        1
      ],
      "strings": [
        "\"line number %d in file `%s' out of range\"",
        "\"Deleted breakpoint %d\"",
        "\", %d\"",
        "\"No breakpoint(s) at entry to function `%s'\\n\"",
        "\"\\n\"",
        "\"Deleted breakpoint %d\"",
        "\", %d\"",
        "\"No breakpoint at file `%s', line #%d\\n\"",
        "\"\\n\""
      ]
    },
    "enable_breakpoint": {
      "start_point": [
        2551,
        0
      ],
      "end_point": [
        2558,
        1
      ],
      "strings": []
    },
    "do_enable_breakpoint": {
      "start_point": [
        2562,
        0
      ],
      "end_point": [
        2603,
        1
      ],
      "strings": [
        "\"invalid breakpoint number\""
      ]
    },
    "do_delete_breakpoint": {
      "start_point": [
        2607,
        0
      ],
      "end_point": [
        2644,
        1
      ],
      "strings": [
        "\"Delete all breakpoints? (y or n) \"",
        "\"y\"",
        "\"invalid breakpoint number\""
      ]
    },
    "do_ignore_breakpoint": {
      "start_point": [
        2648,
        0
      ],
      "end_point": [
        2672,
        1
      ],
      "strings": [
        "\"invalid breakpoint number\"",
        "\"Will ignore next %ld crossing(s) of breakpoint %d.\\n\"",
        "\"Will stop next time breakpoint %d is reached.\\n\""
      ]
    },
    "do_disable_breakpoint": {
      "start_point": [
        2676,
        0
      ],
      "end_point": [
        2707,
        1
      ],
      "strings": [
        "\"invalid breakpoint number\""
      ]
    },
    "get_function": {
      "start_point": [
        2713,
        0
      ],
      "end_point": [
        2722,
        1
      ],
      "strings": []
    },
    "initialize_readline": {
      "start_point": [
        2726,
        0
      ],
      "end_point": [
        2741,
        1
      ],
      "strings": [
        "\"gawk\""
      ]
    },
    "init_debug": {
      "start_point": [
        2749,
        0
      ],
      "end_point": [
        2753,
        1
      ],
      "strings": []
    },
    "debug_prog": {
      "start_point": [
        2758,
        0
      ],
      "end_point": [
        2837,
        1
      ],
      "strings": [
        "\"Can only debug programs provided with the `-f' option.\\n\"",
        "\"DGAWK_RESTART\"",
        "\"DGAWK_RESTART\"",
        "\"Restarting ...\\n\"",
        "\"true\"",
        "\"can't open source file `%s' for reading (%s)\""
      ]
    },
    "check_watchpoint": {
      "start_point": [
        2844,
        0
      ],
      "end_point": [
        2860,
        1
      ],
      "strings": []
    },
    "check_breakpoint": {
      "start_point": [
        2864,
        0
      ],
      "end_point": [
        2885,
        1
      ],
      "strings": []
    },
    "restart": {
      "start_point": [
        2889,
        0
      ],
      "end_point": [
        2915,
        1
      ],
      "strings": [
        "\"DGAWK_RESTART\"",
        "\"true\"",
        "\"false\"",
        "\"Failed to restart debugger\""
      ]
    },
    "do_run": {
      "start_point": [
        2919,
        0
      ],
      "end_point": [
        2970,
        1
      ],
      "strings": [
        "\"Program already running. Restart from beginning (y/n)? \"",
        "\"y\"",
        "\"Program not restarted\\n\"",
        "\"error: cannot restart, operation not allowed\\n\"",
        "\"error (%s): cannot restart, ignoring rest of the commands\\n\"",
        "\"Starting program: \\n\"",
        "\"Program exited abnormally with exit value: %d\\n\"",
        "\"Program exited normally with exit value: %d\\n\""
      ]
    },
    "do_quit": {
      "start_point": [
        2974,
        0
      ],
      "end_point": [
        3000,
        1
      ],
      "strings": [
        "\"The program is running. Exit anyway (y/n)? \"",
        "\"y\""
      ]
    },
    "do_continue": {
      "start_point": [
        3004,
        0
      ],
      "end_point": [
        3028,
        1
      ],
      "strings": [
        "\"Not stopped at any breakpoint; argument ignored.\\n\"",
        "\"invalid breakpoint number %d.\"",
        "\"Will ignore next %ld crossings of breakpoint %d.\\n\""
      ]
    },
    "next_step": {
      "start_point": [
        3032,
        0
      ],
      "end_point": [
        3042,
        1
      ],
      "strings": []
    },
    "check_step": {
      "start_point": [
        3046,
        0
      ],
      "end_point": [
        3068,
        1
      ],
      "strings": []
    },
    "do_step": {
      "start_point": [
        3072,
        0
      ],
      "end_point": [
        3084,
        1
      ],
      "strings": []
    },
    "check_stepi": {
      "start_point": [
        3088,
        0
      ],
      "end_point": [
        3092,
        1
      ],
      "strings": []
    },
    "do_stepi": {
      "start_point": [
        3096,
        0
      ],
      "end_point": [
        3104,
        1
      ],
      "strings": []
    },
    "check_next": {
      "start_point": [
        3109,
        0
      ],
      "end_point": [
        3143,
        1
      ],
      "strings": []
    },
    "do_next": {
      "start_point": [
        3147,
        0
      ],
      "end_point": [
        3160,
        1
      ],
      "strings": []
    },
    "check_nexti": {
      "start_point": [
        3164,
        0
      ],
      "end_point": [
        3175,
        1
      ],
      "strings": []
    },
    "do_nexti": {
      "start_point": [
        3179,
        0
      ],
      "end_point": [
        3190,
        1
      ],
      "strings": []
    },
    "check_finish": {
      "start_point": [
        3194,
        0
      ],
      "end_point": [
        3202,
        1
      ],
      "strings": []
    },
    "do_finish": {
      "start_point": [
        3206,
        0
      ],
      "end_point": [
        3223,
        1
      ],
      "strings": [
        "\"'finish' not meaningful in the outermost frame main()\\n\"",
        "\"Run till return from \""
      ]
    },
    "check_return": {
      "start_point": [
        3227,
        0
      ],
      "end_point": [
        3248,
        1
      ],
      "strings": []
    },
    "do_return": {
      "start_point": [
        3252,
        0
      ],
      "end_point": [
        3279,
        1
      ],
      "strings": [
        "\"'return' not meaningful in the outermost frame main()\\n\""
      ]
    },
    "check_until": {
      "start_point": [
        3283,
        0
      ],
      "end_point": [
        3298,
        1
      ],
      "strings": []
    },
    "do_until": {
      "start_point": [
        3302,
        0
      ],
      "end_point": [
        3400,
        1
      ],
      "strings": [
        "\"line number %d in file `%s' out of range\"",
        "\"Can't find specified location in function `%s'\\n\"",
        "\"invalid source line %d in file `%s'\"",
        "\"Can't find specified location %d in file `%s'\\n\""
      ]
    },
    "print_watch_item": {
      "start_point": [
        3404,
        0
      ],
      "end_point": [
        3439,
        1
      ],
      "strings": [
        "\"%s\"",
        "\"[\\\"%.*s\\\"]\"",
        "\"\\n\"",
        "\"$%ld\\n\"",
        "\"%s\\n\"",
        "\"  Old value: \"",
        "\"  New value: \""
      ]
    },
    "next_command": {
      "start_point": [
        3445,
        0
      ],
      "end_point": [
        3528,
        1
      ],
      "strings": [
        "\"Stopping in %s ...\\n\"",
        "\"Breakpoint %d, \"",
        "\"Watchpoint %d: \"",
        "\"\\n\""
      ]
    },
    "debug_post_execute": {
      "start_point": [
        3532,
        0
      ],
      "end_point": [
        3581,
        1
      ],
      "strings": [
        "\"'finish' not meaningful with non-local jump '%s'\\n\"",
        "\"'until' not meaningful with non-local jump '%s'\\n\"",
        "\"Returned value = \""
      ]
    },
    "debug_pre_execute": {
      "start_point": [
        3588,
        0
      ],
      "end_point": [
        3685,
        1
      ],
      "strings": []
    },
    "print_memory": {
      "start_point": [
        3689,
        0
      ],
      "end_point": [
        3736,
        1
      ],
      "strings": [
        "\"Nnull_string\"",
        "\"%s\"",
        "\"%R*g\"",
        "\"%s\"",
        "\"%Zd\"",
        "\"%g\"",
        "\"@\"",
        "\"-?-\"",
        "\" [%s]\"",
        "\"%s\"",
        "\"%s\"",
        "\"?\""
      ]
    },
    "print_instruction": {
      "start_point": [
        3740,
        0
      ],
      "end_point": [
        4055,
        1
      ],
      "strings": [
        "\"[      :%p] %-20.20s: \"",
        "\"\\n\\t# Function: %s (\"",
        "\"%s\"",
        "\", \"",
        "\")\\n\\n\"",
        "\"\\n\\t# %s\\n\\n\"",
        "\"\\n\"",
        "\"[      :%p] %-20.20s: \"",
        "\"[%6d:%p] %-20.20s: \"",
        "\"[branch_if = %p] [branch_else = %p] [branch_else->lasti = %p]\\n\"",
        "\"[branch_end = %p]\\n\"",
        "\"[while_body = %p] [target_break = %p]\\n\"",
        "\"[doloop_cond = %p] [target_break = %p]\\n\"",
        "\"[forloop_cond = %p] \"",
        "\"[forloop_body = %p] \"",
        "\"[target_break = %p] [target_continue = %p]\\n\"",
        "\"[switch_start = %p] [switch_end = %p]\\n\"",
        "\"[stmt_start = %p] [stmt_end = %p]\\n\"",
        "\"[update_%s()]\\n\"",
        "\"[set_%s()]\"",
        "\" [assign_ctxt = %s]\"",
        "\"\\n\"",
        "\"[%s]\\n\"",
        "\"reset_record()\"",
        "\"invalidate_field0()\"",
        "\"[target_assign = %p] [do_reference = %s]\\n\"",
        "\"true\"",
        "\"false\"",
        "\"[param_cnt = %d] [source_file = %s]\\n\"",
        "\"cmd. line\"",
        "\"[into_var = %s] [redir_type = \\\"%s\\\"]\\n\"",
        "\"true\"",
        "\"false\"",
        "\"[into_var = %s]\\n\"",
        "\"true\"",
        "\"false\"",
        "\"%*s[target_beginfile = %p] [target_endfile = %p]\\n\"",
        "\"\"",
        "\"[redir_type = \\\"%s\\\"]\\n\"",
        "\"[expr_count = %ld] [redir_type = \\\"%s\\\"]\\n\"",
        "\"[func_name = %s] [arg_count = %ld]\\n\"",
        "\"[target_newfile = %p] [target_endfile = %p]\\n\"",
        "\"[target_jmp = %p] [target_endfile = %p]\\n\"",
        "\"%*s[target_get_record = %p]\\n\"",
        "\"\"",
        "\"[target_newfile = %p]\\n\"",
        "\"[target_jmp = %p]\\n\"",
        "\"[target_end = %p] [target_atexit = %p]\\n\"",
        "\"[target_jmp = %p] [match_exp = %s]\\n\"",
        "\"true\"",
        "\"false\"",
        "\"[array_var = %s] [target_jmp = %p]\\n\"",
        "\"[triggered = %ld] [target_jmp = %p]\\n\"",
        "\"[line_range = %p] [target_jmp = %p]\\n\"",
        "\"sub\"",
        "\"GSUB\"",
        "\"GENSUB\"",
        "\"LITERAL\"",
        "\"gsub\"",
        "\"gensub\"",
        "\"%s [arg_count = %ld] [sub_flags = %s]\\n\"",
        "\"%s [arg_count = %ld]\\n\"",
        "\"%s [arg_count = %ld]\\n\"",
        "\"[sub_count = %ld]\\n\"",
        "\" [sub_count = %ld]\\n\"",
        "\"[sub_count = %ld] [do_reference = %s]\\n\"",
        "\"true\"",
        "\"false\"",
        "\"[expr_count = %ld]\\n\"",
        "\"[expr_count = %ld] [concat_flag = %s]\\n\"",
        "\"CSUBSEP\"",
        "\"0\"",
        "\"[in_rule = %s] [source_file = %s]\\n\"",
        "\"cmd. line\"",
        "\"LINT_illegal\"",
        "\"LINT_assign_in_cond\"",
        "\"LINT_no_effect\"",
        "\"[lint_type = %s]\\n\"",
        "\"[exec_count = %ld]\\n\"",
        "\" = \"",
        "\"\\n\"",
        "\" [do_reference = %s]\\n\"",
        "\"true\"",
        "\"false\"",
        "\" [comment_type = %s]\\n\"",
        "\"EOL\"",
        "\"FULL\"",
        "\"\\n\""
      ]
    },
    "do_trace_instruction": {
      "start_point": [
        4059,
        0
      ],
      "end_point": [
        4068,
        1
      ],
      "strings": []
    },
    "print_code": {
      "start_point": [
        4072,
        0
      ],
      "end_point": [
        4079,
        1
      ],
      "strings": []
    },
    "do_dump_instructions": {
      "start_point": [
        4083,
        0
      ],
      "end_point": [
        4122,
        1
      ],
      "strings": [
        "\"w\"",
        "\"could not open `%s' for writing (%s)\""
      ]
    },
    "do_save": {
      "start_point": [
        4126,
        0
      ],
      "end_point": [
        4161,
        1
      ],
      "strings": [
        "\"w\"",
        "\"could not open `%s' for writing (%s)\"",
        "\"sa\"",
        "\"%s\\n\""
      ]
    },
    "do_option": {
      "start_point": [
        4165,
        0
      ],
      "end_point": [
        4200,
        1
      ],
      "strings": [
        "\"%s = \\\"%s\\\"\\n\"",
        "\"%s = %d\\n\"",
        "\"%s = \\\"%s\\\"\\n\"",
        "\"%s = %d\\n\""
      ]
    },
    "initialize_pager": {
      "start_point": [
        4207,
        0
      ],
      "end_point": [
        4226,
        1
      ],
      "strings": []
    },
    "prompt_continue": {
      "start_point": [
        4229,
        0
      ],
      "end_point": [
        4241,
        1
      ],
      "strings": [
        "\"\\t------[Enter] to continue or q [Enter] to quit------\"",
        "\"q\""
      ]
    },
    "gprintf": {
      "start_point": [
        4245,
        0
      ],
      "end_point": [
        4314,
        1
      ],
      "strings": [
        "\"gprintf\"",
        "\"gprintf\"",
        "\"gprintf\"",
        "\"\\n\""
      ]
    },
    "serialize_subscript": {
      "start_point": [
        4317,
        0
      ],
      "end_point": [
        4343,
        1
      ],
      "strings": [
        "\"%d%c%d%c%s%c%d%c\"",
        "\"%lu%c%.*s%c\""
      ]
    },
    "serialize_list": {
      "start_point": [
        4351,
        0
      ],
      "end_point": [
        4587,
        1
      ],
      "strings": [
        "\"serialize\"",
        "\"serialize\"",
        "\"%s%c%d%c%d%c%d%c%d%c%d%c\"",
        "\"%d%c%d%c%d%c\"",
        "\"%d%c%d%c%s%c\"",
        "\"%s%c%d%c\"",
        "\"%s%c%s%c\"",
        "\"end\"",
        "\"commands \"",
        "\"end\"",
        "\"serialize_list\"",
        "\"commands %d\"",
        "\"end\"",
        "\"end\"",
        "\"end\"",
        "\"end\"",
        "\"serialize_list\""
      ]
    },
    "unserialize_commands": {
      "start_point": [
        4590,
        0
      ],
      "end_point": [
        4601,
        1
      ],
      "strings": []
    },
    "unserialize_list_item": {
      "start_point": [
        4606,
        0
      ],
      "end_point": [
        4673,
        1
      ],
      "strings": [
        "\"unserialize_list_item\""
      ]
    },
    "unserialize_breakpoint": {
      "start_point": [
        4677,
        0
      ],
      "end_point": [
        4721,
        1
      ],
      "strings": []
    },
    "unserialize_option": {
      "start_point": [
        4725,
        0
      ],
      "end_point": [
        4741,
        1
      ],
      "strings": []
    },
    "unserialize_list": {
      "start_point": [
        4747,
        0
      ],
      "end_point": [
        4811,
        1
      ],
      "strings": [
        "\"Increase MAX_FIELD and recompile.\\n\""
      ]
    },
    "prompt_yes_no": {
      "start_point": [
        4813,
        0
      ],
      "end_point": [
        4828,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "has_break_or_watch_point": {
      "start_point": [
        4837,
        0
      ],
      "end_point": [
        4881,
        1
      ],
      "strings": []
    },
    "delete_commands_item": {
      "start_point": [
        4885,
        0
      ],
      "end_point": [
        4893,
        1
      ],
      "strings": []
    },
    "do_commands": {
      "start_point": [
        4897,
        0
      ],
      "end_point": [
        4963,
        1
      ],
      "strings": [
        "\"do_commands\""
      ]
    },
    "execute_commands": {
      "start_point": [
        4970,
        0
      ],
      "end_point": [
        4986,
        1
      ],
      "strings": []
    },
    "do_print_f": {
      "start_point": [
        4990,
        0
      ],
      "end_point": [
        5095,
        1
      ],
      "strings": [
        "\"do_print_f\"",
        "\"`%s' is not a scalar variable\"",
        "\"attempt to use array `%s[\\\"%.*s\\\"]' in a scalar context\"",
        "\"[\\\"%.*s\\\"] not in array `%s'\"",
        "\"attempt to use scalar `%s[\\\"%.*s\\\"]' as array\""
      ]
    },
    "do_source": {
      "start_point": [
        5099,
        0
      ],
      "end_point": [
        5115,
        1
      ],
      "strings": [
        "\"can't open source file `%s' for reading (%s)\""
      ]
    },
    "open_readfd": {
      "start_point": [
        5119,
        0
      ],
      "end_point": [
        5133,
        1
      ],
      "strings": []
    },
    "find_option": {
      "start_point": [
        5137,
        0
      ],
      "end_point": [
        5148,
        1
      ],
      "strings": []
    },
    "option_help": {
      "start_point": [
        5152,
        0
      ],
      "end_point": [
        5159,
        1
      ],
      "strings": [
        "\"\\t%-15.15s - %s\\n\""
      ]
    },
    "option_generator": {
      "start_point": [
        5165,
        0
      ],
      "end_point": [
        5182,
        1
      ],
      "strings": []
    },
    "set_gawk_output": {
      "start_point": [
        5188,
        0
      ],
      "end_point": [
        5261,
        1
      ],
      "strings": [
        "\"/dev/stdout\"",
        "\"w\"",
        "\"/dev/\"",
        "\"stdout\"",
        "\"stderr\"",
        "\"/dev/stderr\"",
        "\"fd/\"",
        "\"w\"",
        "\"w\"",
        "\"w\"",
        "\"could not open `%s' for writing (%s)\"",
        "\"reason unknown\"",
        "\"sending output to stdout\\n\""
      ]
    },
    "set_prompt": {
      "start_point": [
        5265,
        0
      ],
      "end_point": [
        5271,
        1
      ],
      "strings": []
    },
    "set_option_flag": {
      "start_point": [
        5275,
        0
      ],
      "end_point": [
        5286,
        1
      ],
      "strings": [
        "\"on\"",
        "\"off\""
      ]
    },
    "set_option_num": {
      "start_point": [
        5290,
        0
      ],
      "end_point": [
        5300,
        1
      ],
      "strings": [
        "\"invalid number\""
      ]
    },
    "set_listsize": {
      "start_point": [
        5304,
        0
      ],
      "end_point": [
        5308,
        1
      ],
      "strings": []
    },
    "set_trace": {
      "start_point": [
        5312,
        0
      ],
      "end_point": [
        5316,
        1
      ],
      "strings": []
    },
    "set_save_history": {
      "start_point": [
        5320,
        0
      ],
      "end_point": [
        5324,
        1
      ],
      "strings": []
    },
    "set_save_options": {
      "start_point": [
        5328,
        0
      ],
      "end_point": [
        5332,
        1
      ],
      "strings": []
    },
    "set_history_size": {
      "start_point": [
        5336,
        0
      ],
      "end_point": [
        5340,
        1
      ],
      "strings": []
    },
    "read_commands_string": {
      "start_point": [
        5348,
        0
      ],
      "end_point": [
        5371,
        1
      ],
      "strings": []
    },
    "save_options": {
      "start_point": [
        5375,
        0
      ],
      "end_point": [
        5393,
        1
      ],
      "strings": [
        "\"w\"",
        "\"option %s = \\\"%s\\\"\\n\"",
        "\"option %s = %d\\n\""
      ]
    },
    "close_all": {
      "start_point": [
        5397,
        0
      ],
      "end_point": [
        5419,
        1
      ],
      "strings": []
    },
    "pre_execute_code": {
      "start_point": [
        5423,
        0
      ],
      "end_point": [
        5453,
        1
      ],
      "strings": [
        "\"`%s' not allowed in current context;\"",
        "\" statement ignored\"",
        "\"`return' not allowed in current context;\"",
        "\" statement ignored\""
      ]
    },
    "execute_code": {
      "start_point": [
        5457,
        0
      ],
      "end_point": [
        5487,
        1
      ],
      "strings": []
    },
    "do_eval": {
      "start_point": [
        5491,
        0
      ],
      "end_point": [
        5637,
        1
      ],
      "strings": [
        "\"@eval\"",
        "\"do_eval\"",
        "\"do_eval\"",
        "\"@eval\""
      ]
    },
    "check_symbol": {
      "start_point": [
        5652,
        0
      ],
      "end_point": [
        5659,
        1
      ],
      "strings": [
        "\"No symbol `%s' in current context\""
      ]
    },
    "parse_condition": {
      "start_point": [
        5663,
        0
      ],
      "end_point": [
        5741,
        1
      ],
      "strings": []
    },
    "do_condition": {
      "start_point": [
        5745,
        0
      ],
      "end_point": [
        5761,
        1
      ],
      "strings": []
    },
    "in_cmd_src": {
      "start_point": [
        5765,
        0
      ],
      "end_point": [
        5774,
        1
      ],
      "strings": []
    },
    "get_eof_status": {
      "start_point": [
        5776,
        0
      ],
      "end_point": [
        5782,
        1
      ],
      "strings": []
    },
    "push_cmd_src": {
      "start_point": [
        5784,
        0
      ],
      "end_point": [
        5813,
        1
      ],
      "strings": [
        "\"push_cmd_src\""
      ]
    },
    "pop_cmd_src": {
      "start_point": [
        5815,
        0
      ],
      "end_point": [
        5835,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/eval.c": {
    "load_casetable": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": [
        "\"C\"",
        "\"POSIX\""
      ]
    },
    "nodetype2str": {
      "start_point": [
        390,
        0
      ],
      "end_point": [
        400,
        1
      ],
      "strings": [
        "\"unknown nodetype %d\""
      ]
    },
    "opcode2str": {
      "start_point": [
        404,
        0
      ],
      "end_point": [
        411,
        1
      ],
      "strings": [
        "\"unknown opcode %d\""
      ]
    },
    "op2str": {
      "start_point": [
        413,
        0
      ],
      "end_point": [
        425,
        1
      ],
      "strings": [
        "\"opcode %s not an operator or keyword\"",
        "\"unknown opcode %d\""
      ]
    },
    "flags2str": {
      "start_point": [
        430,
        0
      ],
      "end_point": [
        457,
        1
      ],
      "strings": [
        "\"MALLOC\"",
        "\"STRING\"",
        "\"STRCUR\"",
        "\"NUMCUR\"",
        "\"NUMBER\"",
        "\"USER_INPUT\"",
        "\"INTLSTR\"",
        "\"NUMINT\"",
        "\"INTIND\"",
        "\"WSTRCUR\"",
        "\"MPFN\"",
        "\"MPZN\"",
        "\"NO_EXT_SET\"",
        "\"NULL_FIELD\"",
        "\"ARRAYMAXED\"",
        "\"HALFHAT\"",
        "\"XARRAY\"",
        "\"NUMCONSTSTR\"",
        "\"REGEX\""
      ]
    },
    "genflags2str": {
      "start_point": [
        461,
        0
      ],
      "end_point": [
        493,
        1
      ],
      "strings": [
        "\"buffer overflow in genflags2str\""
      ]
    },
    "posix_compare": {
      "start_point": [
        497,
        0
      ],
      "end_point": [
        574,
        1
      ],
      "strings": []
    },
    "cmp_nodes": {
      "start_point": [
        579,
        0
      ],
      "end_point": [
        630,
        1
      ],
      "strings": []
    },
    "push_frame": {
      "start_point": [
        634,
        0
      ],
      "end_point": [
        653,
        1
      ],
      "strings": [
        "\"push_frame\"",
        "\"push_frame\""
      ]
    },
    "pop_frame": {
      "start_point": [
        658,
        0
      ],
      "end_point": [
        667,
        1
      ],
      "strings": []
    },
    "dump_fcall_stack": {
      "start_point": [
        672,
        0
      ],
      "end_point": [
        696,
        1
      ],
      "strings": [
        "\"\\n\\t# Function Call Stack:\\n\\n\"",
        "\"\\t# %3ld. %s\\n\"",
        "\"\\t# %3ld. %s\\n\"",
        "\"\\t# %3ld. -- main --\\n\""
      ]
    },
    "set_IGNORECASE": {
      "start_point": [
        701,
        0
      ],
      "end_point": [
        716,
        1
      ],
      "strings": [
        "\"`IGNORECASE' is a gawk extension\""
      ]
    },
    "set_BINMODE": {
      "start_point": [
        720,
        0
      ],
      "end_point": [
        791,
        1
      ],
      "strings": [
        "\"`BINMODE' is a gawk extension\"",
        "\"BINMODE value `%s' is invalid, treated as 3\""
      ]
    },
    "set_OFS": {
      "start_point": [
        795,
        0
      ],
      "end_point": [
        828,
        1
      ],
      "strings": [
        "\"set_OFS\"",
        "\"set_OFS\""
      ]
    },
    "set_ORS": {
      "start_point": [
        832,
        0
      ],
      "end_point": [
        838,
        1
      ],
      "strings": []
    },
    "fmt_ok": {
      "start_point": [
        846,
        0
      ],
      "end_point": [
        882,
        1
      ],
      "strings": [
        "\"efgEG\"",
        "\"efgEFG\"",
        "\" +-#'\"",
        "\" +-#\""
      ]
    },
    "fmt_index": {
      "start_point": [
        886,
        0
      ],
      "end_point": [
        922,
        1
      ],
      "strings": [
        "\"fmt_index\"",
        "\"bad `%sFMT' specification `%s'\"",
        "\"CONV\"",
        "\"O\"",
        "\"\"",
        "\"fmt_index\""
      ]
    },
    "set_OFMT": {
      "start_point": [
        926,
        0
      ],
      "end_point": [
        931,
        1
      ],
      "strings": []
    },
    "set_CONVFMT": {
      "start_point": [
        935,
        0
      ],
      "end_point": [
        940,
        1
      ],
      "strings": []
    },
    "set_LINT": {
      "start_point": [
        944,
        0
      ],
      "end_point": [
        982,
        1
      ],
      "strings": [
        "\"invalid\"",
        "\"fatal\"",
        "\"turning off `--lint' due to assignment to `LINT'\""
      ]
    },
    "set_TEXTDOMAIN": {
      "start_point": [
        986,
        0
      ],
      "end_point": [
        997,
        1
      ],
      "strings": []
    },
    "update_ERRNO_int": {
      "start_point": [
        1001,
        0
      ],
      "end_point": [
        1014,
        1
      ],
      "strings": [
        "\"errno\"",
        "\"\""
      ]
    },
    "update_ERRNO_string": {
      "start_point": [
        1018,
        0
      ],
      "end_point": [
        1024,
        1
      ],
      "strings": [
        "\"errno\""
      ]
    },
    "unset_ERRNO": {
      "start_point": [
        1028,
        0
      ],
      "end_point": [
        1034,
        1
      ],
      "strings": [
        "\"errno\""
      ]
    },
    "update_NR": {
      "start_point": [
        1038,
        0
      ],
      "end_point": [
        1050,
        1
      ],
      "strings": []
    },
    "update_NF": {
      "start_point": [
        1054,
        0
      ],
      "end_point": [
        1066,
        1
      ],
      "strings": []
    },
    "update_FNR": {
      "start_point": [
        1070,
        0
      ],
      "end_point": [
        1082,
        1
      ],
      "strings": []
    },
    "grow_stack": {
      "start_point": [
        1102,
        0
      ],
      "end_point": [
        1110,
        1
      ],
      "strings": [
        "\"grow_stack\""
      ]
    },
    "r_get_lhs": {
      "start_point": [
        1118,
        0
      ],
      "end_point": [
        1159,
        1
      ],
      "strings": [
        "\"attempt to use array `%s' in a scalar context\"",
        "\"attempt to use array `%s' in a scalar context\"",
        "\"reference to uninitialized argument `%s'\"",
        "\"reference to uninitialized variable `%s'\""
      ]
    },
    "r_get_field": {
      "start_point": [
        1164,
        0
      ],
      "end_point": [
        1196,
        1
      ],
      "strings": [
        "\"attempt to field reference from non-numeric value\"",
        "\"attempt to field reference from null string\"",
        "\"attempt to access field %ld\"",
        "\"reference to uninitialized field `$%ld'\""
      ]
    },
    "calc_exp_posint": {
      "start_point": [
        1204,
        0
      ],
      "end_point": [
        1216,
        1
      ],
      "strings": []
    },
    "calc_exp": {
      "start_point": [
        1220,
        0
      ],
      "end_point": [
        1232,
        1
      ],
      "strings": []
    },
    "setup_frame": {
      "start_point": [
        1237,
        0
      ],
      "end_point": [
        1379,
        1
      ],
      "strings": [
        "\"setup_frame\"",
        "\"function `%s' called with more arguments than declared\""
      ]
    },
    "restore_frame": {
      "start_point": [
        1384,
        0
      ],
      "end_point": [
        1422,
        1
      ],
      "strings": []
    },
    "free_arrayfor": {
      "start_point": [
        1427,
        0
      ],
      "end_point": [
        1441,
        1
      ],
      "strings": []
    },
    "unwind_stack": {
      "start_point": [
        1449,
        0
      ],
      "end_point": [
        1502,
        1
      ],
      "strings": [
        "\"unwind_stack: unexpected type `%s'\""
      ]
    },
    "eval_condition": {
      "start_point": [
        1512,
        0
      ],
      "end_point": [
        1522,
        1
      ],
      "strings": []
    },
    "cmp_scalars": {
      "start_point": [
        1531,
        0
      ],
      "end_point": [
        1547,
        1
      ],
      "strings": [
        "\"attempt to use array `%s' in a scalar context\""
      ]
    },
    "op_assign": {
      "start_point": [
        1551,
        0
      ],
      "end_point": [
        1612,
        1
      ],
      "strings": [
        "\"division by zero attempted in `/='\"",
        "\"division by zero attempted in `%%='\""
      ]
    },
    "PUSH_CODE": {
      "start_point": [
        1616,
        0
      ],
      "end_point": [
        1624,
        1
      ],
      "strings": []
    },
    "POP_CODE": {
      "start_point": [
        1628,
        0
      ],
      "end_point": [
        1637,
        1
      ],
      "strings": []
    },
    "push_exec_state": {
      "start_point": [
        1671,
        0
      ],
      "end_point": [
        1683,
        1
      ],
      "strings": [
        "\"push_exec_state\""
      ]
    },
    "pop_exec_state": {
      "start_point": [
        1688,
        0
      ],
      "end_point": [
        1707,
        1
      ],
      "strings": []
    },
    "register_exec_hook": {
      "start_point": [
        1712,
        0
      ],
      "end_point": [
        1745,
        1
      ],
      "strings": []
    },
    "init_interpret": {
      "start_point": [
        1759,
        0
      ],
      "end_point": [
        1797,
        1
      ],
      "strings": [
        "\"GAWK_STACKSIZE\"",
        "\"grow_stack\""
      ]
    }
  },
  "gawk/gawk-4.2.1/ext.c": {
    "load_ext": [
      {
        "start_point": [
          41,
          0
        ],
        "end_point": [
          77,
          1
        ],
        "strings": [
          "\"extensions are not allowed in sandbox mode\"",
          "\"-l / @load are gawk extensions\"",
          "\"load_ext: received NULL lib_name\"",
          "\"load_ext: cannot open library `%s' (%s)\\n\"",
          "\"plugin_is_GPL_compatible\"",
          "\"load_ext: library `%s': does not define `plugin_is_GPL_compatible' (%s)\\n\"",
          "\"load_ext: library `%s': cannot call function `%s' (%s)\\n\"",
          "\"load_ext: library `%s' initialization routine `%s' failed\\n\""
        ]
      },
      {
        "start_point": [
          223,
          0
        ],
        "end_point": [
          227,
          1
        ],
        "strings": [
          "\"dynamic loading of library not supported\""
        ]
      }
    ],
    "is_valid_identifier": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    },
    "make_builtin": {
      "start_point": [
        100,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": [
        "\"make_builtin: missing function name\"",
        "\"make_builtin: can't redefine function `%s'\"",
        "\"make_builtin: function `%s' already defined\"",
        "\"make_builtin: function name `%s' previously defined\"",
        "\"make_builtin: can't use gawk built-in `%s' as function name\"",
        "\"make_builtin: negative argument count for function `%s'\""
      ]
    },
    "get_argument": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "get_actual_argument": {
      "start_point": [
        187,
        0
      ],
      "end_point": [
        217,
        1
      ],
      "strings": [
        "\"function `%s': argument #%d: attempt to use scalar as an array\"",
        "\"function `%s': argument #%d: attempt to use array as a scalar\""
      ]
    },
    "close_extensions": {
      "start_point": [
        232,
        0
      ],
      "end_point": [
        243,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/field.c": {
    "is_blank": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        36,
        1
      ],
      "strings": []
    },
    "init_fields": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"init_fields\""
      ]
    },
    "grow_fields_arr": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        126,
        1
      ],
      "strings": [
        "\"grow_fields_arr\""
      ]
    },
    "set_field": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": []
    },
    "rebuild_record": {
      "start_point": [
        150,
        0
      ],
      "end_point": [
        247,
        1
      ],
      "strings": [
        "\"rebuild_record\"",
        "\"rebuild_record\""
      ]
    },
    "set_record": {
      "start_point": [
        259,
        0
      ],
      "end_point": [
        331,
        1
      ],
      "strings": [
        "\"set_record\"",
        "\"input record too large\"",
        "\"set_record\"",
        "\"FS\"",
        "\"API\"",
        "\"FS\""
      ]
    },
    "reset_record": {
      "start_point": [
        335,
        0
      ],
      "end_point": [
        340,
        1
      ],
      "strings": []
    },
    "purge_record": {
      "start_point": [
        342,
        0
      ],
      "end_point": [
        376,
        1
      ],
      "strings": [
        "\"purge_record\""
      ]
    },
    "set_NF": {
      "start_point": [
        380,
        0
      ],
      "end_point": [
        415,
        1
      ],
      "strings": [
        "\"NF set to negative value\""
      ]
    },
    "re_parse_field": {
      "start_point": [
        424,
        0
      ],
      "end_point": [
        504,
        1
      ],
      "strings": []
    },
    "def_parse_field": {
      "start_point": [
        514,
        0
      ],
      "end_point": [
        584,
        1
      ],
      "strings": []
    },
    "null_parse_field": {
      "start_point": [
        592,
        0
      ],
      "end_point": [
        637,
        1
      ],
      "strings": []
    },
    "sc_parse_field": {
      "start_point": [
        646,
        0
      ],
      "end_point": [
        716,
        1
      ],
      "strings": []
    },
    "calc_mbslen": {
      "start_point": [
        723,
        0
      ],
      "end_point": [
        741,
        1
      ],
      "strings": []
    },
    "fw_parse_field": {
      "start_point": [
        749,
        0
      ],
      "end_point": [
        811,
        1
      ],
      "strings": []
    },
    "invalidate_field0": {
      "start_point": [
        815,
        0
      ],
      "end_point": [
        819,
        1
      ],
      "strings": []
    },
    "get_field": {
      "start_point": [
        825,
        0
      ],
      "end_point": [
        923,
        1
      ],
      "strings": []
    },
    "set_element": {
      "start_point": [
        927,
        0
      ],
      "end_point": [
        943,
        1
      ],
      "strings": []
    },
    "do_split": {
      "start_point": [
        947,
        0
      ],
      "end_point": [
        1040,
        1
      ],
      "strings": [
        "\"split: fourth argument is a gawk extension\"",
        "\"split: fourth argument is not an array\"",
        "\"split: fourth argument is a gawk extension\"",
        "\"split: second argument is not an array\"",
        "\"split: cannot use the same array for second and fourth args\"",
        "\"split: cannot use a subarray of second arg for fourth arg\"",
        "\"split: cannot use a subarray of fourth arg for second arg\"",
        "\"split: null string for third arg is a gawk extension\""
      ]
    },
    "do_patsplit": {
      "start_point": [
        1047,
        0
      ],
      "end_point": [
        1104,
        1
      ],
      "strings": [
        "\"patsplit: fourth argument is not an array\"",
        "\"patsplit: second argument is not an array\"",
        "\"patsplit: third argument must be non-null\"",
        "\"patsplit: cannot use the same array for second and fourth args\"",
        "\"patsplit: cannot use a subarray of second arg for fourth arg\"",
        "\"patsplit: cannot use a subarray of fourth arg for second arg\""
      ]
    },
    "set_parser": {
      "start_point": [
        1108,
        0
      ],
      "end_point": [
        1116,
        1
      ],
      "strings": [
        "\"FS\""
      ]
    },
    "set_FIELDWIDTHS": {
      "start_point": [
        1120,
        0
      ],
      "end_point": [
        1225,
        1
      ],
      "strings": [
        "\"`FIELDWIDTHS' is a gawk extension\"",
        "\"set_FIELDWIDTHS\"",
        "\"set_FIELDWIDTHS\"",
        "\"`*' must be the last designator in FIELDWIDTHS\"",
        "\"invalid FIELDWIDTHS value, for field %d, near `%s'\""
      ]
    },
    "set_FS": {
      "start_point": [
        1229,
        0
      ],
      "end_point": [
        1357,
        1
      ],
      "strings": [
        "\"null string for `FS' is a gawk extension\"",
        "\"old awk does not support regexps as value of `FS'\"",
        "\"[ \\t\\n]+\"",
        "\"[\\\\\\\\\\n]\"",
        "\"[\\\\000\\n]\"",
        "\"[%c\\n]\"",
        "\"[\\\\\\\\]\""
      ]
    },
    "current_field_sep": {
      "start_point": [
        1361,
        0
      ],
      "end_point": [
        1372,
        1
      ],
      "strings": []
    },
    "current_field_sep_str": {
      "start_point": [
        1376,
        0
      ],
      "end_point": [
        1387,
        1
      ],
      "strings": [
        "\"API\"",
        "\"FIELDWIDTHS\"",
        "\"FPAT\"",
        "\"FS\""
      ]
    },
    "update_PROCINFO_str": {
      "start_point": [
        1391,
        0
      ],
      "end_point": [
        1404,
        1
      ],
      "strings": []
    },
    "update_PROCINFO_num": {
      "start_point": [
        1408,
        0
      ],
      "end_point": [
        1421,
        1
      ],
      "strings": []
    },
    "set_FPAT": {
      "start_point": [
        1425,
        0
      ],
      "end_point": [
        1486,
        1
      ],
      "strings": [
        "\"`FPAT' is a gawk extension\""
      ]
    },
    "incr_scan": {
      "start_point": [
        1497,
        0
      ],
      "end_point": [
        1514,
        1
      ],
      "strings": []
    },
    "fpat_parse_field": {
      "start_point": [
        1584,
        0
      ],
      "end_point": [
        1666,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/floatcomp.c": {
    "count_trailing_zeros": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        86,
        1
      ],
      "strings": []
    },
    "adjust_uint": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        112,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/floatmagic.h": {
    "isnan_f": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        37,
        61
      ],
      "strings": []
    },
    "isnan_d": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        38,
        61
      ],
      "strings": []
    },
    "isnan_ld": {
      "start_point": [
        39,
        0
      ],
      "end_point": [
        39,
        61
      ],
      "strings": []
    },
    "isinf_f": {
      "start_point": [
        49,
        0
      ],
      "end_point": [
        49,
        68
      ],
      "strings": []
    },
    "isinf_d": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        50,
        68
      ],
      "strings": []
    },
    "isinf_ld": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        51,
        68
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/gawkapi.c": {
    "api_get_argument": {
      "start_point": [
        51,
        0
      ],
      "end_point": [
        114,
        1
      ],
      "strings": []
    },
    "api_set_argument": {
      "start_point": [
        118,
        0
      ],
      "end_point": [
        148,
        1
      ],
      "strings": []
    },
    "awk_value_to_node": {
      "start_point": [
        152,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"awk_value_to_node: received null retval\"",
        "\"awk_value_to_node: not in MPFR mode\"",
        "\"awk_value_to_node: MPFR not supported\"",
        "\"awk_value_to_node: not in MPFR mode\"",
        "\"awk_value_to_node: MPFR not supported\"",
        "\"awk_value_to_node: invalid number type `%d'\""
      ]
    },
    "api_fatal": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": [
        "\"fatal: \""
      ]
    },
    "api_nonfatal": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": [
        "\"error: \""
      ]
    },
    "api_warning": {
      "start_point": [
        263,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": [
        "\"warning: \""
      ]
    },
    "api_lintwarn": {
      "start_point": [
        277,
        0
      ],
      "end_point": [
        291,
        1
      ],
      "strings": [
        "\"fatal: \"",
        "\"warning: \""
      ]
    },
    "api_register_input_parser": {
      "start_point": [
        295,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": []
    },
    "api_register_output_wrapper": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    },
    "api_register_two_way_processor": {
      "start_point": [
        321,
        0
      ],
      "end_point": [
        331,
        1
      ],
      "strings": []
    },
    "api_update_ERRNO_int": {
      "start_point": [
        337,
        0
      ],
      "end_point": [
        343,
        1
      ],
      "strings": []
    },
    "api_update_ERRNO_string": {
      "start_point": [
        347,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": []
    },
    "api_unset_ERRNO": {
      "start_point": [
        361,
        0
      ],
      "end_point": [
        367,
        1
      ],
      "strings": []
    },
    "api_add_ext_func": {
      "start_point": [
        372,
        0
      ],
      "end_point": [
        388,
        1
      ],
      "strings": []
    },
    "run_ext_exit_handlers": {
      "start_point": [
        401,
        0
      ],
      "end_point": [
        412,
        1
      ],
      "strings": []
    },
    "api_awk_atexit": {
      "start_point": [
        416,
        0
      ],
      "end_point": [
        438,
        1
      ],
      "strings": [
        "\"api_awk_atexit\""
      ]
    },
    "free_api_string_copies": {
      "start_point": [
        447,
        0
      ],
      "end_point": [
        455,
        1
      ],
      "strings": []
    },
    "assign_string": {
      "start_point": [
        459,
        0
      ],
      "end_point": [
        487,
        1
      ],
      "strings": [
        "\"assign_string\"",
        "\"assign_string\""
      ]
    },
    "assign_number": {
      "start_point": [
        496,
        0
      ],
      "end_point": [
        523,
        1
      ],
      "strings": [
        "\"node_to_awk_value: detected invalid numeric flags combination `%s'; please file a bug report.\""
      ]
    },
    "assign_regex": {
      "start_point": [
        528,
        0
      ],
      "end_point": [
        537,
        1
      ],
      "strings": []
    },
    "node_to_awk_value": {
      "start_point": [
        541,
        0
      ],
      "end_point": [
        728,
        1
      ],
      "strings": [
        "\"node_to_awk_value: received null node\"",
        "\"node_to_awk_value: received null val\"",
        "\"node_to_awk_value detected invalid flags combination `%s'; please file a bug report.\"",
        "\"node_to_awk_value detected invalid flags combination `%s'; please file a bug report.\"",
        "\"node_to_awk_value detected invalid flags combination `%s'; please file a bug report.\"",
        "\"node_to_awk_value detected invalid flags combination `%s'; please file a bug report.\""
      ]
    },
    "api_sym_lookup": {
      "start_point": [
        747,
        0
      ],
      "end_point": [
        767,
        1
      ],
      "strings": []
    },
    "api_sym_lookup_scalar": {
      "start_point": [
        771,
        0
      ],
      "end_point": [
        787,
        1
      ],
      "strings": []
    },
    "api_sym_update": {
      "start_point": [
        791,
        0
      ],
      "end_point": [
        863,
        1
      ],
      "strings": []
    },
    "api_sym_update_scalar": {
      "start_point": [
        867,
        0
      ],
      "end_point": [
        949,
        1
      ],
      "strings": []
    },
    "valid_subscript_type": {
      "start_point": [
        957,
        0
      ],
      "end_point": [
        972,
        1
      ],
      "strings": []
    },
    "api_get_array_element": {
      "start_point": [
        981,
        0
      ],
      "end_point": [
        1018,
        1
      ],
      "strings": []
    },
    "api_set_array_element": {
      "start_point": [
        1025,
        0
      ],
      "end_point": [
        1058,
        1
      ],
      "strings": []
    },
    "remove_element": {
      "start_point": [
        1065,
        0
      ],
      "end_point": [
        1090,
        1
      ],
      "strings": [
        "\"remove_element: received null array\"",
        "\"remove_element: received null subscript\""
      ]
    },
    "api_del_array_element": {
      "start_point": [
        1097,
        0
      ],
      "end_point": [
        1116,
        1
      ],
      "strings": []
    },
    "api_get_element_count": {
      "start_point": [
        1123,
        0
      ],
      "end_point": [
        1134,
        1
      ],
      "strings": []
    },
    "api_create_array": {
      "start_point": [
        1138,
        0
      ],
      "end_point": [
        1148,
        1
      ],
      "strings": []
    },
    "api_clear_array": {
      "start_point": [
        1152,
        0
      ],
      "end_point": [
        1164,
        1
      ],
      "strings": []
    },
    "api_flatten_array_typed": {
      "start_point": [
        1168,
        0
      ],
      "end_point": [
        1216,
        1
      ],
      "strings": [
        "\"api_flatten_array_typed\"",
        "\"@unsorted\"",
        "\"api_flatten_array_typed: could not convert index %d to %s\\n\"",
        "\"api_flatten_array_typed: could not convert value %d to %s\\n\""
      ]
    },
    "api_release_flattened_array": {
      "start_point": [
        1224,
        0
      ],
      "end_point": [
        1257,
        1
      ],
      "strings": []
    },
    "api_create_value": {
      "start_point": [
        1261,
        0
      ],
      "end_point": [
        1280,
        1
      ],
      "strings": []
    },
    "api_release_value": {
      "start_point": [
        1284,
        0
      ],
      "end_point": [
        1294,
        1
      ],
      "strings": []
    },
    "api_get_mpfr": {
      "start_point": [
        1298,
        0
      ],
      "end_point": [
        1310,
        1
      ],
      "strings": [
        "\"api_get_mpfr: MPFR not supported\""
      ]
    },
    "api_get_mpz": {
      "start_point": [
        1314,
        0
      ],
      "end_point": [
        1326,
        1
      ],
      "strings": [
        "\"api_get_mpfr: MPFR not supported\""
      ]
    },
    "api_get_file": {
      "start_point": [
        1330,
        0
      ],
      "end_point": [
        1419,
        1
      ],
      "strings": [
        "\"cannot find end of BEGINFILE rule\"",
        "\"cannot open unrecognized file type `%s' for `%s'\""
      ]
    },
    "api_register_ext_version": {
      "start_point": [
        1434,
        0
      ],
      "end_point": [
        1448,
        1
      ],
      "strings": [
        "\"register_ext_version\""
      ]
    },
    "init_ext_api": {
      "start_point": [
        1526,
        0
      ],
      "end_point": [
        1536,
        1
      ],
      "strings": []
    },
    "update_ext_api": {
      "start_point": [
        1540,
        0
      ],
      "end_point": [
        1544,
        1
      ],
      "strings": []
    },
    "print_ext_versions": {
      "start_point": [
        1548,
        0
      ],
      "end_point": [
        1555,
        1
      ],
      "strings": [
        "\"%s\\n\""
      ]
    },
    "valtype2str": {
      "start_point": [
        1559,
        0
      ],
      "end_point": [
        1582,
        1
      ],
      "strings": [
        "\"AWK_UNDEFINED\"",
        "\"AWK_NUMBER\"",
        "\"AWK_STRING\"",
        "\"AWK_REGEX\"",
        "\"AWK_STRNUM\"",
        "\"AWK_ARRAY\"",
        "\"AWK_SCALAR\"",
        "\"AWK_VALUE_COOKIE\"",
        "\"unknown type! (%d)\""
      ]
    }
  },
  "gawk/gawk-4.2.1/gawkapi.h": {
    "r_make_string_type": {
      "start_point": [
        947,
        0
      ],
      "end_point": [
        973,
        1
      ],
      "strings": [
        "\"r_make_string\""
      ]
    },
    "r_make_string": {
      "start_point": [
        977,
        0
      ],
      "end_point": [
        986,
        1
      ],
      "strings": []
    },
    "make_null_string": {
      "start_point": [
        1004,
        0
      ],
      "end_point": [
        1011,
        1
      ],
      "strings": []
    },
    "make_number": {
      "start_point": [
        1015,
        0
      ],
      "end_point": [
        1022,
        1
      ],
      "strings": []
    },
    "make_number_mpz": {
      "start_point": [
        1030,
        0
      ],
      "end_point": [
        1037,
        1
      ],
      "strings": []
    },
    "make_number_mpfr": {
      "start_point": [
        1045,
        0
      ],
      "end_point": [
        1052,
        1
      ],
      "strings": []
    },
    "init_my_extension": {
      "start_point": [
        1090,
        0
      ],
      "end_point": [
        1094,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/gawkmisc.c": {},
  "gawk/gawk-4.2.1/gettext.h": {
    "pgettext_aux": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    },
    "npgettext_aux": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": []
    },
    "dcpgettext_expr": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": []
    },
    "dcnpgettext_expr": {
      "start_point": [
        265,
        0
      ],
      "end_point": [
        299,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/interpret.h": {
    "r_interpret": {
      "start_point": [
        44,
        0
      ],
      "end_point": [
        1470,
        1
      ],
      "strings": [
        "\"reference to uninitialized argument `%s'\"",
        "\"reference to uninitialized variable `%s'\"",
        "\"reference to uninitialized argument `%s'\"",
        "\"reference to uninitialized variable `%s'\"",
        "\"attempt to use array `%s' in a scalar context\"",
        "\"reference to uninitialized element `%s[\\\"%.*s\\\"]'\"",
        "\"subscript of array `%s' is null string\"",
        "\"FUNCTAB is a gawk extension\"",
        "\"SYMTAB is a gawk extension\"",
        "\"attempt to use scalar `%s[\\\"%.*s\\\"]' as an array\"",
        "\"reference to uninitialized element `%s[\\\"%.*s\\\"]'\"",
        "\"subscript of array `%s' is null string\"",
        "\"attempt to use array `%s[\\\"%.*s\\\"]' in a scalar context\"",
        "\"cannot assign to elements of FUNCTAB\"",
        "\"assignment used in conditional context\"",
        "\"statement has no effect\"",
        "\"division by zero attempted\"",
        "\"division by zero attempted in `%%'\"",
        "\"attempt to use array `%s[\\\"%.*s\\\"]' in a scalar context\"",
        "\"cannot assign to elements of FUNCTAB\"",
        "\"r_interpret\"",
        "\"r_interpret\"",
        "\"r_interpret\"",
        "\"@unsorted\"",
        "\"sorted_in\"",
        "\"for loop: array `%s' changed size from %ld to %ld during loop execution\"",
        "\"%s: called with %lu arguments, expecting at least %lu\"",
        "\"%s: called with %lu arguments, expecting no more than %lu\"",
        "\"indirect function call requires a simple scalar value\"",
        "\"`%s' is not a function, so it cannot be called indirectly\"",
        "\"function called indirectly through `%s' does not exist\"",
        "\"function `%s' not defined\"",
        "\"non-redirected `getline' invalid inside `%s' rule\"",
        "\"error reading input file `%s': %s\"",
        "\"`nextfile' cannot be called from a `%s' rule\"",
        "\"`exit' cannot be called in the current context\"",
        "\"`next' cannot be called from a `%s' rule\"",
        "\"Sorry, don't know how to interpret `%s'\""
      ]
    }
  },
  "gawk/gawk-4.2.1/int_array.c": {
    "int_array_init": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        78,
        1
      ],
      "strings": [
        "\"INT_CHAIN_MAX\""
      ]
    },
    "standard_integer_string": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": []
    },
    "is_integer": {
      "start_point": [
        112,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    },
    "int_lookup": {
      "start_point": [
        226,
        0
      ],
      "end_point": [
        280,
        1
      ],
      "strings": []
    },
    "int_exists": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        306,
        1
      ],
      "strings": []
    },
    "int_clear": {
      "start_point": [
        310,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": []
    },
    "int_remove": {
      "start_point": [
        350,
        0
      ],
      "end_point": [
        441,
        1
      ],
      "strings": []
    },
    "int_copy": {
      "start_point": [
        446,
        0
      ],
      "end_point": [
        514,
        1
      ],
      "strings": [
        "\"int_copy\""
      ]
    },
    "int_list": {
      "start_point": [
        519,
        0
      ],
      "end_point": [
        590,
        1
      ],
      "strings": [
        "\"int_list\"",
        "\"int_list\"",
        "\"%ld\""
      ]
    },
    "int_kilobytes": {
      "start_point": [
        595,
        0
      ],
      "end_point": [
        614,
        1
      ],
      "strings": []
    },
    "int_dump": {
      "start_point": [
        619,
        0
      ],
      "end_point": [
        725,
        1
      ],
      "strings": [
        "\"%s `%s'\\n\"",
        "\"array\"",
        "\"sub-array\"",
        "\"array_func: int_array_func\\n\"",
        "\"flags: %s\\n\"",
        "\"INT_CHAIN_MAX: %lu\\n\"",
        "\"array_size: %lu (int)\\n\"",
        "\"table_size: %lu (total), %lu (int), %lu (str)\\n\"",
        "\"Avg # of items per chain (int): %.2g\\n\"",
        "\"memory: %.2g kB (total)\\n\"",
        "\"Hash distribution:\\n\"",
        "\"[>=%lu]:%lu\\n\"",
        "\"[%lu]:%lu\\n\"",
        "\"\\n\"",
        "\"\\n\""
      ]
    },
    "int_hash": {
      "start_point": [
        730,
        0
      ],
      "end_point": [
        752,
        1
      ],
      "strings": []
    },
    "int_find": {
      "start_point": [
        756,
        0
      ],
      "end_point": [
        770,
        1
      ],
      "strings": []
    },
    "int_insert": {
      "start_point": [
        775,
        0
      ],
      "end_point": [
        797,
        1
      ],
      "strings": []
    },
    "grow_int_table": {
      "start_point": [
        802,
        0
      ],
      "end_point": [
        868,
        1
      ],
      "strings": [
        "\"grow_int_table\""
      ]
    }
  },
  "gawk/gawk-4.2.1/io.c": {
    "init_io": {
      "start_point": [
        334,
        0
      ],
      "end_point": [
        360,
        1
      ],
      "strings": [
        "\"GAWK_READ_TIMEOUT\""
      ]
    },
    "binmode": {
      "start_point": [
        366,
        0
      ],
      "end_point": [
        381,
        1
      ],
      "strings": [
        "\"rb\"",
        "\"wb\"",
        "\"ab\""
      ]
    },
    "after_beginfile": {
      "start_point": [
        397,
        0
      ],
      "end_point": [
        431,
        1
      ],
      "strings": [
        "\"command line argument `%s' is a directory: skipped\"",
        "\"cannot open file `%s' for reading (%s)\""
      ]
    },
    "nextfile": {
      "start_point": [
        439,
        0
      ],
      "end_point": [
        552,
        1
      ],
      "strings": [
        "\"r\"",
        "\"r\"",
        "\"-\"",
        "\"-\"",
        "\"cannot open file `%s' for reading (%s)\""
      ]
    },
    "set_FNR": {
      "start_point": [
        556,
        0
      ],
      "end_point": [
        567,
        1
      ],
      "strings": []
    },
    "set_NR": {
      "start_point": [
        571,
        0
      ],
      "end_point": [
        582,
        1
      ],
      "strings": []
    },
    "inrec": {
      "start_point": [
        586,
        0
      ],
      "end_point": [
        613,
        1
      ],
      "strings": []
    },
    "remap_std_file": {
      "start_point": [
        617,
        0
      ],
      "end_point": [
        639,
        1
      ],
      "strings": [
        "\"/dev/null\"",
        "\"/dev/null\""
      ]
    },
    "iop_close": {
      "start_point": [
        643,
        0
      ],
      "end_point": [
        705,
        1
      ],
      "strings": [
        "\"close of fd %d (`%s') failed (%s)\""
      ]
    },
    "redflags2str": {
      "start_point": [
        709,
        0
      ],
      "end_point": [
        728,
        1
      ],
      "strings": [
        "\"RED_FILE\"",
        "\"RED_PIPE\"",
        "\"RED_READ\"",
        "\"RED_WRITE\"",
        "\"RED_APPEND\"",
        "\"RED_NOBUF\"",
        "\"RED_EOF\"",
        "\"RED_TWOWAY\"",
        "\"RED_PTY\"",
        "\"RED_SOCKET\"",
        "\"RED_TCP\""
      ]
    },
    "redirect_string": {
      "start_point": [
        732,
        0
      ],
      "end_point": [
        1073,
        1
      ],
      "strings": [
        "\"to\"",
        "\"redirection not allowed in sandbox mode\"",
        "\">\"",
        "\">>\"",
        "\"|\"",
        "\"|\"",
        "\"<\"",
        "\"|&\"",
        "\"expression in `%s' redirection is a number\"",
        "\"expression for `%s' redirection has null string value\"",
        "\"0\"",
        "\"1\"",
        "\"filename `%.*s' for `%s' redirection may be result of logical expression\"",
        "\"unnecessary mixing of `>' and `>>' for file `%.*s'\"",
        "\"redirect\"",
        "\"redirect\"",
        "\"w\"",
        "\"ab\"",
        "\"a\"",
        "\"a\"",
        "\"get_file cannot create pipe `%s' with fd %d\"",
        "\"w\"",
        "\"can't open pipe `%s' for output (%s)\"",
        "\"pipe\"",
        "\"to\"",
        "\"get_file cannot create pipe `%s' with fd %d\"",
        "\"from\"",
        "\"can't open pipe `%s' for input (%s)\"",
        "\"from\"",
        "\"r\"",
        "\"get_file socket creation not supported on this platform for `%s' with fd %d\"",
        "\"to/from\"",
        "\"can't open two way pipe `%s' for input/output (%s)\"",
        "\"a\"",
        "\"file\"",
        "\"\"",
        "\"can't redirect from `%s' (%s)\"",
        "\"can't redirect to `%s' (%s)\""
      ]
    },
    "redirect": {
      "start_point": [
        1077,
        0
      ],
      "end_point": [
        1085,
        1
      ],
      "strings": []
    },
    "getredirect": {
      "start_point": [
        1089,
        0
      ],
      "end_point": [
        1099,
        1
      ],
      "strings": []
    },
    "is_non_fatal_std": {
      "start_point": [
        1103,
        0
      ],
      "end_point": [
        1118,
        1
      ],
      "strings": [
        "\"-\"",
        "\"/dev/stdout\"",
        "\"/dev/stderr\""
      ]
    },
    "is_non_fatal_redirect": {
      "start_point": [
        1122,
        0
      ],
      "end_point": [
        1138,
        1
      ],
      "strings": []
    },
    "close_one": {
      "start_point": [
        1142,
        0
      ],
      "end_point": [
        1177,
        1
      ],
      "strings": [
        "\"reached system limit for open files: starting to multiplex file descriptors\"",
        "\"close of `%s' failed (%s).\"",
        "\"too many pipes or input files open\""
      ]
    },
    "do_close": {
      "start_point": [
        1181,
        0
      ],
      "end_point": [
        1248,
        1
      ],
      "strings": [
        "\"to\"",
        "\"from\"",
        "\"close: second argument must be `to' or `from'\"",
        "\"close: `%.*s' is not an open file, pipe or co-process\"",
        "\"close of redirection that was never opened\""
      ]
    },
    "close_rp": {
      "start_point": [
        1252,
        0
      ],
      "end_point": [
        1309,
        1
      ],
      "strings": [
        "\"\\004\\n\"",
        "\"\\004\\n\""
      ]
    },
    "close_redir": {
      "start_point": [
        1313,
        0
      ],
      "end_point": [
        1389,
        1
      ],
      "strings": [
        "\"close: redirection `%s' not opened with `|&', second argument ignored\"",
        "\"failure status (%d) on pipe close of `%s' (%s)\"",
        "\"failure status (%d) on file close of `%s' (%s)\"",
        "\"no explicit close of socket `%s' provided\"",
        "\"no explicit close of co-process `%s' provided\"",
        "\"no explicit close of pipe `%s' provided\"",
        "\"no explicit close of file `%s' provided\""
      ]
    },
    "non_fatal_flush_std_file": {
      "start_point": [
        1393,
        0
      ],
      "end_point": [
        1424,
        1
      ],
      "strings": [
        "\"fflush: cannot flush standard output: %s\"",
        "\"fflush: cannot flush standard error: %s\"",
        "\"error writing standard output (%s)\"",
        "\"error writing standard error (%s)\""
      ]
    },
    "flush_io": {
      "start_point": [
        1428,
        0
      ],
      "end_point": [
        1471,
        1
      ],
      "strings": [
        "\"pipe flush of `%s' failed (%s).\"",
        "\"co-process flush of pipe to `%s' failed (%s).\"",
        "\"file flush of `%s' failed (%s).\""
      ]
    },
    "close_io": {
      "start_point": [
        1475,
        0
      ],
      "end_point": [
        1521,
        1
      ],
      "strings": [
        "\"error writing standard output (%s)\"",
        "\"error writing standard error (%s)\""
      ]
    },
    "str2mode": {
      "start_point": [
        1525,
        0
      ],
      "end_point": [
        1560,
        1
      ],
      "strings": []
    },
    "socketopen": {
      "start_point": [
        1566,
        0
      ],
      "end_point": [
        1714,
        1
      ],
      "strings": [
        "\"0\"",
        "\"0\"",
        "\"local port %s invalid in `/inet': %s\"",
        "\"local port %s invalid in `/inet'\"",
        "\"remote host and port information (%s, %s) invalid: %s\"",
        "\"remote host and port information (%s, %s) invalid\""
      ]
    },
    "devopen_simple": {
      "start_point": [
        1731,
        0
      ],
      "end_point": [
        1784,
        1
      ],
      "strings": [
        "\"-\"",
        "\"file\"",
        "\"\"",
        "\"/dev/\"",
        "\"stdin\"",
        "\"stdout\"",
        "\"stderr\"",
        "\"fd/\""
      ]
    },
    "devopen": {
      "start_point": [
        1793,
        0
      ],
      "end_point": [
        1905,
        1
      ],
      "strings": [
        "\"GAWK_SOCK_RETRIES\"",
        "\"GAWK_MSEC_SLEEP\"",
        "\"TCP/IP communications are not supported\"",
        "\"file\"",
        "\"\""
      ]
    },
    "set_slave_pty_attributes": {
      "start_point": [
        1936,
        0
      ],
      "end_point": [
        1967,
        1
      ],
      "strings": []
    },
    "wait_any": {
      "start_point": [
        2506,
        0
      ],
      "end_point": [
        2585,
        1
      ],
      "strings": []
    },
    "gawk_popen": [
      {
        "start_point": [
          2589,
          0
        ],
        "end_point": [
          2691,
          1
        ],
        "strings": [
          "\"cannot open pipe `%s' (%s)\"",
          "\"moving pipe to stdout in child failed (dup: %s)\"",
          "\"pipe\"",
          "\"from\"",
          "\"pipe\"",
          "\"from\"",
          "\"/bin/sh\"",
          "\"sh\"",
          "\"-c\"",
          "\"ComSpec\"",
          "\"cmd.exe\"",
          "\"/c\"",
          "\"restoring stdout in parent process failed\\n\"",
          "\"close of stdout in child failed (%s)\"",
          "\"moving pipe to stdout in child failed (dup: %s)\"",
          "\"close of pipe failed (%s)\"",
          "\"/bin/sh\"",
          "\"sh\"",
          "\"-c\"",
          "\"cannot create child process for `%s' (fork: %s)\"",
          "\"close of pipe failed (%s)\"",
          "\"pipe\"",
          "\"from\""
        ]
      },
      {
        "start_point": [
          2719,
          0
        ],
        "end_point": [
          2750,
          1
        ],
        "strings": [
          "\"r\"",
          "\"pipe\"",
          "\"from\""
        ]
      }
    ],
    "gawk_pclose": [
      {
        "start_point": [
          2695,
          0
        ],
        "end_point": [
          2708,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          2754,
          0
        ],
        "end_point": [
          2767,
          1
        ],
        "strings": []
      }
    ],
    "do_getline_redir": {
      "start_point": [
        2773,
        0
      ],
      "end_point": [
        2843,
        1
      ],
      "strings": [
        "\"getline: attempt to read from closed read end of two-way pipe\""
      ]
    },
    "do_getline": {
      "start_point": [
        2847,
        0
      ],
      "end_point": [
        2886,
        1
      ],
      "strings": []
    },
    "init_awkpath": {
      "start_point": [
        2907,
        0
      ],
      "end_point": [
        2973,
        1
      ],
      "strings": [
        "\"init_awkpath\"",
        "\".\"",
        "\".\"",
        "\".\"",
        "\"init_awkpath\""
      ]
    },
    "do_find_source": {
      "start_point": [
        2977,
        0
      ],
      "end_point": [
        3014,
        1
      ],
      "strings": [
        "\"do_find_source\"",
        "\"do_find_source\"",
        "\"./\"",
        "\".\""
      ]
    },
    "find_source": {
      "start_point": [
        3018,
        0
      ],
      "end_point": [
        3093,
        1
      ],
      "strings": [
        "\"find_source\"",
        "\"%s%s\"",
        "\"find_source\"",
        "\"%s%s\""
      ]
    },
    "srcopen": {
      "start_point": [
        3098,
        0
      ],
      "end_point": [
        3113,
        1
      ],
      "strings": [
        "\"r\""
      ]
    },
    "register_input_parser": {
      "start_point": [
        3126,
        0
      ],
      "end_point": [
        3139,
        1
      ],
      "strings": [
        "\"register_input_parser: received NULL pointer\""
      ]
    },
    "find_input_parser": {
      "start_point": [
        3143,
        0
      ],
      "end_point": [
        3170,
        1
      ],
      "strings": [
        "\"input parser `%s' conflicts with previously installed input parser `%s'\"",
        "\"input parser `%s' failed to open `%s'\""
      ]
    },
    "register_output_wrapper": {
      "start_point": [
        3181,
        0
      ],
      "end_point": [
        3194,
        1
      ],
      "strings": [
        "\"register_output_wrapper: received NULL pointer\""
      ]
    },
    "find_output_wrapper": {
      "start_point": [
        3198,
        0
      ],
      "end_point": [
        3228,
        1
      ],
      "strings": [
        "\"output wrapper `%s' conflicts with previously installed output wrapper `%s'\"",
        "\"output wrapper `%s' failed to open `%s'\""
      ]
    },
    "register_two_way_processor": {
      "start_point": [
        3237,
        0
      ],
      "end_point": [
        3250,
        1
      ],
      "strings": [
        "\"register_output_processor: received NULL pointer\""
      ]
    },
    "find_two_way_processor": {
      "start_point": [
        3254,
        0
      ],
      "end_point": [
        3288,
        1
      ],
      "strings": [
        "\"two-way processor `%s' conflicts with previously installed two-way processor `%s'\"",
        "\"two way processor `%s' failed to open `%s'\""
      ]
    },
    "iop_alloc": {
      "start_point": [
        3333,
        0
      ],
      "end_point": [
        3356,
        1
      ],
      "strings": [
        "\"iop_alloc\""
      ]
    },
    "iop_finish": {
      "start_point": [
        3360,
        0
      ],
      "end_point": [
        3413,
        1
      ],
      "strings": [
        "\"data file `%s' is empty\"",
        "\"iop_finish\""
      ]
    },
    "grow_iop_buffer": {
      "start_point": [
        3430,
        0
      ],
      "end_point": [
        3460,
        1
      ],
      "strings": [
        "\"could not allocate more input memory\"",
        "\"could not allocate more input memory\"",
        "\"grow_iop_buffer\""
      ]
    },
    "rs1scan": {
      "start_point": [
        3464,
        0
      ],
      "end_point": [
        3594,
        1
      ],
      "strings": []
    },
    "rsrescan": {
      "start_point": [
        3598,
        0
      ],
      "end_point": [
        3701,
        1
      ],
      "strings": []
    },
    "rsnullscan": {
      "start_point": [
        3705,
        0
      ],
      "end_point": [
        3777,
        1
      ],
      "strings": []
    },
    "retryable": {
      "start_point": [
        3781,
        0
      ],
      "end_point": [
        3785,
        1
      ],
      "strings": [
        "\"RETRY\""
      ]
    },
    "errno_io_retry": {
      "start_point": [
        3789,
        0
      ],
      "end_point": [
        3811,
        1
      ],
      "strings": []
    },
    "get_a_record": {
      "start_point": [
        3820,
        0
      ],
      "end_point": [
        4021,
        1
      ],
      "strings": []
    },
    "set_RS": {
      "start_point": [
        4025,
        0
      ],
      "end_point": [
        4079,
        1
      ],
      "strings": [
        "\"multicharacter value of `RS' is a gawk extension\""
      ]
    },
    "pty_vs_pipe": {
      "start_point": [
        4088,
        0
      ],
      "end_point": [
        4103,
        1
      ],
      "strings": [
        "\"pty\""
      ]
    },
    "iopflags2str": {
      "start_point": [
        4107,
        0
      ],
      "end_point": [
        4119,
        1
      ],
      "strings": [
        "\"IOP_IS_TTY\"",
        "\"IOP_AT_EOF\"",
        "\"IOP_CLOSED\"",
        "\"IOP_AT_START\""
      ]
    },
    "free_rp": {
      "start_point": [
        4123,
        0
      ],
      "end_point": [
        4128,
        1
      ],
      "strings": []
    },
    "inetfile": {
      "start_point": [
        4132,
        0
      ],
      "end_point": [
        4229,
        1
      ],
      "strings": [
        "\"/inet\"",
        "\"tcp/\"",
        "\"udp/\"",
        "\"IPv6 communication is not supported\""
      ]
    },
    "in_PROCINFO": {
      "start_point": [
        4236,
        0
      ],
      "end_point": [
        4284,
        1
      ],
      "strings": [
        "\"in_PROCINFO\"",
        "\"in_PROCINFO\"",
        "\"%s%.*s%s\""
      ]
    },
    "get_read_timeout": {
      "start_point": [
        4289,
        0
      ],
      "end_point": [
        4324,
        1
      ],
      "strings": [
        "\"READ_TIMEOUT\""
      ]
    },
    "read_with_timeout": {
      "start_point": [
        4331,
        0
      ],
      "end_point": [
        4380,
        1
      ],
      "strings": []
    },
    "gawk_fwrite": {
      "start_point": [
        4388,
        0
      ],
      "end_point": [
        4394,
        1
      ],
      "strings": []
    },
    "gawk_fflush": {
      "start_point": [
        4398,
        0
      ],
      "end_point": [
        4404,
        1
      ],
      "strings": []
    },
    "gawk_ferror": {
      "start_point": [
        4408,
        0
      ],
      "end_point": [
        4414,
        1
      ],
      "strings": []
    },
    "gawk_fclose": {
      "start_point": [
        4418,
        0
      ],
      "end_point": [
        4433,
        1
      ],
      "strings": []
    },
    "init_output_wrapper": {
      "start_point": [
        4437,
        0
      ],
      "end_point": [
        4449,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/main.c": {
    "main": {
      "start_point": [
        216,
        0
      ],
      "end_point": [
        539,
        1
      ],
      "strings": [
        "\"TIDYMEM\"",
        "\"GAWK_LOCALE_DIR\"",
        "\"main\"",
        "\"\"",
        "\"POSIXLY_CORRECT\"",
        "\"environment variable `POSIXLY_CORRECT' set: turning on `--posix'\"",
        "\"`--posix' overrides `--traditional'\"",
        "\"`--posix'/`--traditional' overrides `--non-decimal-data'\"",
        "\"running %s setuid root may be a security problem\"",
        "\"`--posix' overrides `--characters-as-bytes'\"",
        "\"C\"",
        "\"can't set binary mode on stdin (%s)\"",
        "\"can't set binary mode on stdout (%s)\"",
        "\"can't set binary mode on stderr (%s)\"",
        "\"C\"",
        "\"no program text at all!\""
      ]
    },
    "add_preassign": {
      "start_point": [
        543,
        0
      ],
      "end_point": [
        565,
        1
      ],
      "strings": [
        "\"add_preassign\"",
        "\"add_preassigns\""
      ]
    },
    "usage": {
      "start_point": [
        569,
        0
      ],
      "end_point": [
        661,
        1
      ],
      "strings": [
        "\"Usage: %s [POSIX or GNU style options] -f progfile [--] file ...\\n\"",
        "\"Usage: %s [POSIX or GNU style options] [--] %cprogram%c file ...\\n\"",
        "\"POSIX options:\\t\\tGNU long options: (standard)\\n\"",
        "\"\\t-f progfile\\t\\t--file=progfile\\n\"",
        "\"\\t-F fs\\t\\t\\t--field-separator=fs\\n\"",
        "\"\\t-v var=val\\t\\t--assign=var=val\\n\"",
        "\"Short options:\\t\\tGNU long options: (extensions)\\n\"",
        "\"\\t-b\\t\\t\\t--characters-as-bytes\\n\"",
        "\"\\t-c\\t\\t\\t--traditional\\n\"",
        "\"\\t-C\\t\\t\\t--copyright\\n\"",
        "\"\\t-d[file]\\t\\t--dump-variables[=file]\\n\"",
        "\"\\t-D[file]\\t\\t--debug[=file]\\n\"",
        "\"\\t-e 'program-text'\\t--source='program-text'\\n\"",
        "\"\\t-E file\\t\\t\\t--exec=file\\n\"",
        "\"\\t-g\\t\\t\\t--gen-pot\\n\"",
        "\"\\t-h\\t\\t\\t--help\\n\"",
        "\"\\t-i includefile\\t\\t--include=includefile\\n\"",
        "\"\\t-l library\\t\\t--load=library\\n\"",
        "\"\\t-L[fatal|invalid]\\t--lint[=fatal|invalid]\\n\"",
        "\"\\t-M\\t\\t\\t--bignum\\n\"",
        "\"\\t-N\\t\\t\\t--use-lc-numeric\\n\"",
        "\"\\t-n\\t\\t\\t--non-decimal-data\\n\"",
        "\"\\t-o[file]\\t\\t--pretty-print[=file]\\n\"",
        "\"\\t-O\\t\\t\\t--optimize\\n\"",
        "\"\\t-p[file]\\t\\t--profile[=file]\\n\"",
        "\"\\t-P\\t\\t\\t--posix\\n\"",
        "\"\\t-r\\t\\t\\t--re-interval\\n\"",
        "\"\\t-s\\t\\t\\t--no-optimize\\n\"",
        "\"\\t-S\\t\\t\\t--sandbox\\n\"",
        "\"\\t-t\\t\\t\\t--lint-old\\n\"",
        "\"\\t-V\\t\\t\\t--version\\n\"",
        "\"\\t-W nostalgia\\t\\t--nostalgia\\n\"",
        "\"\\t-Y\\t\\t--parsedebug\\n\"",
        "\"\\nTo report bugs, see node `Bugs' in `gawk.info'\\n\\\nwhich is section `Reporting Problems and Bugs' in the\\n\\\nprinted version.  This same information may be found at\\n\\\nhttps://www.gnu.org/software/gawk/manual/html_node/Bugs.html.\\n\\\nPLEASE do NOT try to report bugs by posting in comp.lang.awk.\\n\\n\"",
        "\"gawk is a pattern scanning and processing language.\\n\\\nBy default it reads standard input and writes standard output.\\n\\n\"",
        "\"Examples:\\n\\tgawk '{ sum += $1 }; END { print sum }' file\\n\\\n\\tgawk -F: '{ print $1 }' /etc/passwd\\n\"",
        "\"error writing standard output (%s)\"",
        "\"error writing standard error (%s)\""
      ]
    },
    "copyleft": {
      "start_point": [
        665,
        0
      ],
      "end_point": [
        704,
        1
      ],
      "strings": [
        "\"Copyright (C) 1989, 1991-%d Free Software Foundation.\\n\\\n\\n\\\nThis program is free software; you can redistribute it and/or modify\\n\\\nit under the terms of the GNU General Public License as published by\\n\\\nthe Free Software Foundation; either version 3 of the License, or\\n\\\n(at your option) any later version.\\n\\\n\\n\"",
        "\"This program is distributed in the hope that it will be useful,\\n\\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\n\\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n\\\nGNU General Public License for more details.\\n\\\n\\n\"",
        "\"You should have received a copy of the GNU General Public License\\n\\\nalong with this program. If not, see http://www.gnu.org/licenses/.\\n\"",
        "\"error writing standard output (%s)\""
      ]
    },
    "cmdline_fs": {
      "start_point": [
        708,
        0
      ],
      "end_point": [
        731,
        1
      ],
      "strings": [
        "\"-Ft does not set FS to tab in POSIX awk\""
      ]
    },
    "init_args": {
      "start_point": [
        735,
        0
      ],
      "end_point": [
        760,
        1
      ],
      "strings": [
        "\"ARGV\"",
        "\"ARGC\""
      ]
    },
    "init_vars": {
      "start_point": [
        819,
        0
      ],
      "end_point": [
        843,
        1
      ],
      "strings": []
    },
    "path_environ": {
      "start_point": [
        847,
        0
      ],
      "end_point": [
        873,
        1
      ],
      "strings": []
    },
    "load_environ": {
      "start_point": [
        877,
        0
      ],
      "end_point": [
        931,
        1
      ],
      "strings": [
        "\"ENVIRON\"",
        "\"\"",
        "\"AWKPATH\"",
        "\"AWKLIBPATH\""
      ]
    },
    "load_procinfo_argv": {
      "start_point": [
        933,
        0
      ],
      "end_point": [
        958,
        1
      ],
      "strings": [
        "\"argv\"",
        "\"argv\""
      ]
    },
    "load_procinfo": {
      "start_point": [
        962,
        0
      ],
      "end_point": [
        1046,
        1
      ],
      "strings": [
        "\"PROCINFO\"",
        "\"version\"",
        "\"strftime\"",
        "\"GNU MPFR %s\"",
        "\"mpfr_version\"",
        "\"GNU MP %s\"",
        "\"gmp_version\"",
        "\"prec_max\"",
        "\"prec_min\"",
        "\"api_major\"",
        "\"api_minor\"",
        "\"pgrpid\"",
        "\"pid\"",
        "\"ppid\"",
        "\"uid\"",
        "\"euid\"",
        "\"gid\"",
        "\"egid\"",
        "\"FS\"",
        "\"group%d\""
      ]
    },
    "is_std_var": {
      "start_point": [
        1050,
        0
      ],
      "end_point": [
        1065,
        1
      ],
      "strings": []
    },
    "is_off_limits_var": {
      "start_point": [
        1072,
        0
      ],
      "end_point": [
        1083,
        1
      ],
      "strings": []
    },
    "get_spec_varname": {
      "start_point": [
        1089,
        0
      ],
      "end_point": [
        1101,
        1
      ],
      "strings": []
    },
    "arg_assign": {
      "start_point": [
        1106,
        0
      ],
      "end_point": [
        1211,
        1
      ],
      "strings": [
        "\"%s: `%s' argument to `-v' not in `var=value' form\\n\\n\"",
        "\"`%s' is not a legal variable name\"",
        "\"`%s' is not a variable name, looking for file `%s=%s'\"",
        "\"cannot use gawk builtin `%s' as variable name\"",
        "\"cannot use function `%s' as variable name\"",
        "\"C\""
      ]
    },
    "catchsig": {
      "start_point": [
        1215,
        0
      ],
      "end_point": [
        1234,
        1
      ],
      "strings": [
        "\"floating point exception\"",
        "\"fatal error: internal error\""
      ]
    },
    "catchsegv": {
      "start_point": [
        1239,
        0
      ],
      "end_point": [
        1248,
        1
      ],
      "strings": [
        "\"fatal error: internal error: segfault\""
      ]
    },
    "catchstackoverflow": {
      "start_point": [
        1252,
        0
      ],
      "end_point": [
        1261,
        1
      ],
      "strings": [
        "\"fatal error: internal error: stack overflow\""
      ]
    },
    "nostalgia": {
      "start_point": [
        1266,
        0
      ],
      "end_point": [
        1276,
        1
      ],
      "strings": [
        "\"awk: bailing out near line 1\\n\""
      ]
    },
    "version": {
      "start_point": [
        1280,
        0
      ],
      "end_point": [
        1299,
        1
      ],
      "strings": [
        "\"%s\"",
        "\", API: %d.%d\"",
        "\" (GNU MPFR %s, GNU MP %s)\"",
        "\"\\n\""
      ]
    },
    "init_fds": {
      "start_point": [
        1303,
        0
      ],
      "end_point": [
        1327,
        1
      ],
      "strings": [
        "\"w\"",
        "\"r\"",
        "\"r\"",
        "\"no pre-opened fd %d\"",
        "\"/dev/null\"",
        "\"could not pre-open /dev/null for fd %d\""
      ]
    },
    "init_groupset": {
      "start_point": [
        1331,
        0
      ],
      "end_point": [
        1360,
        1
      ],
      "strings": [
        "\"init_groupset\""
      ]
    },
    "estrdup": {
      "start_point": [
        1364,
        0
      ],
      "end_point": [
        1372,
        1
      ],
      "strings": [
        "\"estrdup\""
      ]
    },
    "init_locale": {
      "start_point": [
        1386,
        0
      ],
      "end_point": [
        1403,
        1
      ],
      "strings": []
    },
    "save_argv": {
      "start_point": [
        1408,
        0
      ],
      "end_point": [
        1417,
        1
      ],
      "strings": [
        "\"save_argv\""
      ]
    },
    "update_global_values": {
      "start_point": [
        1426,
        0
      ],
      "end_point": [
        1435,
        1
      ],
      "strings": []
    },
    "getenv_long": {
      "start_point": [
        1439,
        0
      ],
      "end_point": [
        1450,
        1
      ],
      "strings": []
    },
    "parse_args": {
      "start_point": [
        1454,
        0
      ],
      "end_point": [
        1701,
        1
      ],
      "strings": [
        "\"+F:f:v:W;bcCd::D::e:E:ghi:l:L::nNo::Op::MPrSstVYZ:\"",
        "\"empty argument to `-e/--source' ignored\"",
        "\"fatal\"",
        "\"invalid\"",
        "\"-M ignored: MPFR/GMP support not compiled in\"",
        "\"%s: option `-W %s' unrecognized, ignored\\n\"",
        "\"%s: option requires an argument -- %c\\n\""
      ]
    },
    "set_locale_stuff": {
      "start_point": [
        1705,
        0
      ],
      "end_point": [
        1742,
        1
      ],
      "strings": [
        "\"C\""
      ]
    }
  },
  "gawk/gawk-4.2.1/mbsupport.h": {},
  "gawk/gawk-4.2.1/mpfr.c": {
    "init_mpfr": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        94,
        1
      ],
      "strings": []
    },
    "cleanup_mpfr": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": []
    },
    "mpg_node": {
      "start_point": [
        107,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "mpg_make_number": {
      "start_point": [
        126,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "mpg_strtoui": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        209,
        1
      ],
      "strings": []
    },
    "mpg_maybe_float": {
      "start_point": [
        214,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": []
    },
    "mpg_zero": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": []
    },
    "force_mpnum": {
      "start_point": [
        266,
        0
      ],
      "end_point": [
        329,
        1
      ],
      "strings": []
    },
    "mpg_force_number": {
      "start_point": [
        333,
        0
      ],
      "end_point": [
        349,
        1
      ],
      "strings": []
    },
    "mpg_format_val": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        382,
        1
      ],
      "strings": [
        "\"%d\""
      ]
    },
    "mpg_cmp": {
      "start_point": [
        386,
        0
      ],
      "end_point": [
        417,
        1
      ],
      "strings": []
    },
    "mpg_update_var": {
      "start_point": [
        425,
        0
      ],
      "end_point": [
        455,
        1
      ],
      "strings": []
    },
    "mpg_set_var": {
      "start_point": [
        459,
        0
      ],
      "end_point": [
        482,
        1
      ],
      "strings": []
    },
    "set_PREC": [
      {
        "start_point": [
          486,
          0
        ],
        "end_point": [
          553,
          1
        ],
        "strings": [
          "\"half\"",
          "\"single\"",
          "\"double\"",
          "\"quad\"",
          "\"oct\"",
          "\"PREC value `%.*s' is invalid\""
        ]
      },
      {
        "start_point": [
          1782,
          0
        ],
        "end_point": [
          1786,
          1
        ],
        "strings": []
      }
    ],
    "get_rnd_mode": {
      "start_point": [
        558,
        0
      ],
      "end_point": [
        583,
        1
      ],
      "strings": []
    },
    "set_ROUNDMODE": [
      {
        "start_point": [
          590,
          0
        ],
        "end_point": [
          606,
          1
        ],
        "strings": [
          "\"RNDMODE value `%.*s' is invalid\""
        ]
      },
      {
        "start_point": [
          1788,
          0
        ],
        "end_point": [
          1792,
          1
        ],
        "strings": []
      }
    ],
    "format_ieee": {
      "start_point": [
        611,
        0
      ],
      "end_point": [
        651,
        1
      ],
      "strings": []
    },
    "do_mpfr_atan2": {
      "start_point": [
        656,
        0
      ],
      "end_point": [
        685,
        1
      ],
      "strings": [
        "\"atan2: received non-numeric first argument\"",
        "\"atan2: received non-numeric second argument\""
      ]
    },
    "do_mpfr_func": {
      "start_point": [
        689,
        0
      ],
      "end_point": [
        712,
        1
      ],
      "strings": [
        "\"%s: received non-numeric argument\""
      ]
    },
    "do_mpfr_sin": {
      "start_point": [
        721,
        0
      ],
      "end_point": [
        725,
        1
      ],
      "strings": []
    },
    "do_mpfr_cos": {
      "start_point": [
        729,
        0
      ],
      "end_point": [
        733,
        1
      ],
      "strings": []
    },
    "do_mpfr_exp": {
      "start_point": [
        737,
        0
      ],
      "end_point": [
        741,
        1
      ],
      "strings": []
    },
    "do_mpfr_log": {
      "start_point": [
        745,
        0
      ],
      "end_point": [
        749,
        1
      ],
      "strings": []
    },
    "do_mpfr_sqrt": {
      "start_point": [
        753,
        0
      ],
      "end_point": [
        757,
        1
      ],
      "strings": []
    },
    "do_mpfr_int": {
      "start_point": [
        761,
        0
      ],
      "end_point": [
        786,
        1
      ],
      "strings": [
        "\"int: received non-numeric argument\""
      ]
    },
    "do_mpfr_compl": {
      "start_point": [
        790,
        0
      ],
      "end_point": [
        834,
        1
      ],
      "strings": [
        "\"compl: received non-numeric argument\"",
        "\"%s\"",
        "\"compl(%Rg): negative value is not allowed\"",
        "\"%s\"",
        "\"comp(%Rg): fractional value will be truncated\"",
        "\"%s\"",
        "\"compl(%Zd): negative values are not allowed\""
      ]
    },
    "get_intval": {
      "start_point": [
        838,
        0
      ],
      "end_point": [
        891,
        1
      ],
      "strings": [
        "\"%s: received non-numeric argument #%d\"",
        "\"%s\"",
        "\"%s: argument #%d has invalid value %Rg, using 0\"",
        "\"get_intval\"",
        "\"%s\"",
        "\"%s: argument #%d negative value %Rg is not allowed\"",
        "\"%s\"",
        "\"%s: argument #%d fractional value %Rg will be truncated\"",
        "\"get_intval\"",
        "\"%s\"",
        "\"%s: argument #%d negative value %Zd is not allowed\""
      ]
    },
    "free_intval": {
      "start_point": [
        896,
        0
      ],
      "end_point": [
        903,
        1
      ],
      "strings": []
    },
    "do_mpfr_lshift": {
      "start_point": [
        908,
        0
      ],
      "end_point": [
        936,
        1
      ],
      "strings": [
        "\"lshift\"",
        "\"lshift\""
      ]
    },
    "do_mpfr_rshift": {
      "start_point": [
        940,
        0
      ],
      "end_point": [
        963,
        1
      ],
      "strings": [
        "\"rshift\"",
        "\"rshift\""
      ]
    },
    "do_mpfr_and": {
      "start_point": [
        968,
        0
      ],
      "end_point": [
        995,
        1
      ],
      "strings": [
        "\"and: called with less than two arguments\"",
        "\"and\"",
        "\"and\""
      ]
    },
    "do_mpfr_or": {
      "start_point": [
        1000,
        0
      ],
      "end_point": [
        1027,
        1
      ],
      "strings": [
        "\"or: called with less than two arguments\"",
        "\"or\"",
        "\"or\""
      ]
    },
    "do_mpfr_xor": {
      "start_point": [
        1031,
        0
      ],
      "end_point": [
        1058,
        1
      ],
      "strings": [
        "\"xor: called with less than two arguments\"",
        "\"xor\"",
        "\"xor\""
      ]
    },
    "do_mpfr_strtonum": {
      "start_point": [
        1062,
        0
      ],
      "end_point": [
        1089,
        1
      ],
      "strings": []
    },
    "do_mpfr_rand": {
      "start_point": [
        1098,
        0
      ],
      "end_point": [
        1126,
        1
      ],
      "strings": []
    },
    "do_mpfr_srand": {
      "start_point": [
        1131,
        0
      ],
      "end_point": [
        1174,
        1
      ],
      "strings": [
        "\"srand: received non-numeric argument\""
      ]
    },
    "do_mpfr_intdiv": {
      "start_point": [
        1187,
        0
      ],
      "end_point": [
        1269,
        1
      ],
      "strings": [
        "\"intdiv: third argument is not an array\"",
        "\"intdiv: received non-numeric first argument\"",
        "\"intdiv: received non-numeric second argument\"",
        "\"intdiv: division by zero attempted\"",
        "\"quotient\"",
        "\"remainder\""
      ]
    },
    "mpg_tofloat": {
      "start_point": [
        1278,
        0
      ],
      "end_point": [
        1314,
        1
      ],
      "strings": []
    },
    "mpg_add": {
      "start_point": [
        1319,
        0
      ],
      "end_point": [
        1339,
        1
      ],
      "strings": []
    },
    "mpg_sub": {
      "start_point": [
        1343,
        0
      ],
      "end_point": [
        1373,
        1
      ],
      "strings": []
    },
    "mpg_mul": {
      "start_point": [
        1377,
        0
      ],
      "end_point": [
        1397,
        1
      ],
      "strings": []
    },
    "mpg_pow": {
      "start_point": [
        1402,
        0
      ],
      "end_point": [
        1432,
        1
      ],
      "strings": []
    },
    "mpg_div": {
      "start_point": [
        1436,
        0
      ],
      "end_point": [
        1457,
        1
      ],
      "strings": []
    },
    "mpg_mod": {
      "start_point": [
        1461,
        0
      ],
      "end_point": [
        1498,
        1
      ],
      "strings": []
    },
    "mpg_interpret": {
      "start_point": [
        1505,
        0
      ],
      "end_point": [
        1745,
        1
      ],
      "strings": []
    },
    "mpg_fmt": {
      "start_point": [
        1750,
        0
      ],
      "end_point": [
        1767,
        1
      ],
      "strings": []
    },
    "mpfr_unset": [
      {
        "start_point": [
          1771,
          0
        ],
        "end_point": [
          1778,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1794,
          0
        ],
        "end_point": [
          1798,
          1
        ],
        "strings": []
      }
    ]
  },
  "gawk/gawk-4.2.1/msg.c": {
    "err": {
      "start_point": [
        40,
        0
      ],
      "end_point": [
        109,
        1
      ],
      "strings": [
        "\"GAWK_MSG_SRC\"",
        "\"%s: \"",
        "\"%s:%d:\"",
        "\"%s:\"",
        "\"cmd. line:\"",
        "\"%d: \"",
        "\"FILENAME=%.*s \"",
        "\"FNR=%Zd) \"",
        "\"FILENAME=%.*s \"",
        "\"FNR=%ld) \"",
        "\"%s\"",
        "\"\\n\""
      ]
    },
    "msg": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": [
        "\"\""
      ]
    },
    "r_warning": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        131,
        1
      ],
      "strings": [
        "\"warning: \""
      ]
    },
    "error": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": [
        "\"error: \""
      ]
    },
    "set_loc": {
      "start_point": [
        144,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "r_fatal": {
      "start_point": [
        156,
        0
      ],
      "end_point": [
        163,
        1
      ],
      "strings": [
        "\"fatal: \""
      ]
    },
    "gawk_exit": {
      "start_point": [
        167,
        0
      ],
      "end_point": [
        176,
        1
      ],
      "strings": []
    },
    "final_exit": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/node.c": {
    "is_hex": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "r_force_number": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        172,
        1
      ],
      "strings": []
    },
    "r_format_val": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": [
        "\"%.0f\"",
        "\"%ld\"",
        "\"format_val\""
      ]
    },
    "r_dupnode": {
      "start_point": [
        294,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": [
        "\"r_dupnode\"",
        "\"r_dupnode\""
      ]
    },
    "r_make_number": {
      "start_point": [
        338,
        0
      ],
      "end_point": [
        344,
        1
      ],
      "strings": []
    },
    "cmp_awknums": {
      "start_point": [
        348,
        0
      ],
      "end_point": [
        370,
        1
      ],
      "strings": []
    },
    "make_str_node": {
      "start_point": [
        375,
        0
      ],
      "end_point": [
        446,
        1
      ],
      "strings": [
        "\"make_str_node\"",
        "\"backslash at end of string\"",
        "\"make_str_node\""
      ]
    },
    "make_typed_regex": {
      "start_point": [
        450,
        0
      ],
      "end_point": [
        467,
        1
      ],
      "strings": [
        "\"could not make typed regex\""
      ]
    },
    "r_unref": {
      "start_point": [
        472,
        0
      ],
      "end_point": [
        495,
        1
      ],
      "strings": []
    },
    "parse_escape": {
      "start_point": [
        517,
        0
      ],
      "end_point": [
        630,
        1
      ],
      "strings": [
        "\"old awk does not support the `\\\\%c' escape sequence\"",
        "\"POSIX does not allow `\\\\x' escapes\"",
        "\"no hex digits in `\\\\x' escape sequence\"",
        "\"hex escape \\\\x%.*s of %d characters probably not interpreted the way you expect\"",
        "\"escape sequence `\\\\%c' treated as plain `%c'\""
      ]
    },
    "get_numbase": {
      "start_point": [
        634,
        0
      ],
      "end_point": [
        674,
        1
      ],
      "strings": []
    },
    "str2wstr": {
      "start_point": [
        678,
        0
      ],
      "end_point": [
        811,
        1
      ],
      "strings": [
        "\"str2wstr\"",
        "\"str2wstr\"",
        "\"Invalid multibyte data detected. There may be a mismatch between your data and your locale.\"",
        "\"str2wstr\""
      ]
    },
    "wstr2str": {
      "start_point": [
        815,
        0
      ],
      "end_point": [
        853,
        1
      ],
      "strings": [
        "\"wstr2str\""
      ]
    },
    "r_free_wstr": {
      "start_point": [
        857,
        0
      ],
      "end_point": [
        869,
        1
      ],
      "strings": []
    },
    "dump_wstr": {
      "start_point": [
        871,
        0
      ],
      "end_point": [
        879,
        1
      ],
      "strings": []
    },
    "wstrstr": {
      "start_point": [
        883,
        0
      ],
      "end_point": [
        904,
        1
      ],
      "strings": []
    },
    "wcasestrstr": {
      "start_point": [
        908,
        0
      ],
      "end_point": [
        939,
        1
      ],
      "strings": []
    },
    "is_ieee_magic_val": {
      "start_point": [
        943,
        0
      ],
      "end_point": [
        957,
        1
      ],
      "strings": []
    },
    "get_ieee_magic_val": {
      "start_point": [
        961,
        0
      ],
      "end_point": [
        988,
        1
      ],
      "strings": []
    },
    "init_btowc_cache": {
      "start_point": [
        994,
        0
      ],
      "end_point": [
        1001,
        1
      ],
      "strings": []
    },
    "more_blocks": {
      "start_point": [
        1019,
        0
      ],
      "end_point": [
        1043,
        1
      ],
      "strings": [
        "\"more_blocks\""
      ]
    }
  },
  "gawk/gawk-4.2.1/nonposix.h": {},
  "gawk/gawk-4.2.1/profile.c": {
    "set_prof_file": {
      "start_point": [
        70,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"w\"",
        "\"w\"",
        "\"could not open `%s' for writing: %s\"",
        "\"sending profile to standard error\""
      ]
    },
    "init_profiling_signals": {
      "start_point": [
        105,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": []
    },
    "indent": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        138,
        1
      ],
      "strings": [
        "\"\\t\"",
        "\"%6ld  \"",
        "\"\\t\""
      ]
    },
    "indent_in": {
      "start_point": [
        142,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": []
    },
    "indent_out": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        156,
        1
      ],
      "strings": []
    },
    "pp_push": {
      "start_point": [
        160,
        0
      ],
      "end_point": [
        171,
        1
      ],
      "strings": []
    },
    "pp_pop": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        182,
        1
      ],
      "strings": []
    },
    "pp_free": {
      "start_point": [
        186,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    },
    "pprint": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        1046,
        1
      ],
      "strings": [
        "\"\\t# %s rule(s)\\n\\n\"",
        "\"%s {\"",
        "\"\\t# Rule(s)\\n\\n\"",
        "\"%s {\"",
        "\"{\"",
        "\" # %ld\"",
        "\"{\\n\"",
        "\"}\\n\\n\"",
        "\"_\"",
        "\"\"",
        "\"internal error: %s with null vname\"",
        "\"%s%s%s\"",
        "\", \"",
        "\"%s%s%s%s\"",
        "\"%s%s%s\"",
        "\", \"",
        "\"\"",
        "\"(\"",
        "\")\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"$%s%s%s\"",
        "\"][\"",
        "\", \"",
        "\"%s %s[%s]\"",
        "\"%s %s\"",
        "\"()\"",
        "\", \"",
        "\"sub\"",
        "\"gsub\"",
        "\"gensub\"",
        "\"()\"",
        "\", \"",
        "\"\"",
        "\"()\"",
        "\", \"",
        "\"\"",
        "\"()\"",
        "\"\"",
        "\"internal error: builtin with null fname\"",
        "\" \"",
        "\"0\"",
        "\"()\"",
        "\", \"",
        "\"  \"",
        "\", \"",
        "\"%s%s%s%s\"",
        "\"%s%s\"",
        "\" \"",
        "\"\"",
        "\"\"",
        "\"@\"",
        "\"\"",
        "\"()\"",
        "\", \"",
        "\"()\"",
        "\"%s\"",
        "\"%s %s\"",
        "\"%s\"",
        "\", \"",
        "\"%s (\"",
        "\"%s) {\"",
        "\"}\"",
        "\"%s {\"",
        "\"} %s (%s)\"",
        "\"%s (\"",
        "\";;\"",
        "\"; \"",
        "\"; \"",
        "\"%s; \"",
        "\") {\"",
        "\"}\"",
        "\"%s (%s%s%s) {\"",
        "\"}\"",
        "\"%s (\"",
        "\"%s) {\\n\"",
        "\"}\\n\"",
        "\"%s %s:\"",
        "\"%s:\"",
        "\"%s (\"",
        "\"%s) {\"",
        "\" # %ld\"",
        "\"}\"",
        "\"\\n\"",
        "\"} %s \"",
        "\"{\"",
        "\"}\"",
        "\"pprint\"",
        "\"%s ? %s : %s\""
      ]
    },
    "end_line": {
      "start_point": [
        1050,
        0
      ],
      "end_point": [
        1065,
        1
      ],
      "strings": [
        "\"\\t\"",
        "\"\\n\""
      ]
    },
    "pp_string_fp": {
      "start_point": [
        1074,
        0
      ],
      "end_point": [
        1093,
        1
      ],
      "strings": [
        "\"%c\"",
        "\"%c\\n%c\""
      ]
    },
    "just_dump": {
      "start_point": [
        1098,
        0
      ],
      "end_point": [
        1108,
        1
      ],
      "strings": []
    },
    "dump_and_exit": {
      "start_point": [
        1112,
        0
      ],
      "end_point": [
        1117,
        1
      ],
      "strings": []
    },
    "print_lib_list": {
      "start_point": [
        1121,
        0
      ],
      "end_point": [
        1138,
        1
      ],
      "strings": [
        "\"\\t# Loaded extensions (-l and/or @load)\\n\\n\"",
        "\"\\t@load \\\"%s\\\"\\n\"",
        "\"\\n\""
      ]
    },
    "print_comment": {
      "start_point": [
        1142,
        0
      ],
      "end_point": [
        1163,
        1
      ],
      "strings": []
    },
    "dump_prog": {
      "start_point": [
        1172,
        0
      ],
      "end_point": [
        1183,
        1
      ],
      "strings": [
        "\"\\t# gawk profile, created %s\\n\""
      ]
    },
    "prec_level": {
      "start_point": [
        1187,
        0
      ],
      "end_point": [
        1282,
        1
      ],
      "strings": []
    },
    "is_scalar": {
      "start_point": [
        1286,
        0
      ],
      "end_point": [
        1314,
        1
      ],
      "strings": []
    },
    "is_binary": {
      "start_point": [
        1318,
        0
      ],
      "end_point": [
        1362,
        1
      ],
      "strings": []
    },
    "pp_parenthesize": {
      "start_point": [
        1366,
        0
      ],
      "end_point": [
        1385,
        1
      ],
      "strings": [
        "\"pp_parenthesize\""
      ]
    },
    "parenthesize": {
      "start_point": [
        1389,
        0
      ],
      "end_point": [
        1400,
        1
      ],
      "strings": []
    },
    "pp_string": {
      "start_point": [
        1404,
        0
      ],
      "end_point": [
        1408,
        1
      ],
      "strings": []
    },
    "pp_typed_regex": {
      "start_point": [
        1412,
        0
      ],
      "end_point": [
        1416,
        1
      ],
      "strings": []
    },
    "pp_string_or_typed_regex": {
      "start_point": [
        1420,
        0
      ],
      "end_point": [
        1499,
        1
      ],
      "strings": [
        "\"\\a\\b\\f\\n\\r\\t\\v\\\\\"",
        "\"abfnrtv\\\\\"",
        "\"\\a\\b\\f\\n\\r\\t\\v\"",
        "\"abfnrtv\"",
        "\"pp_string\"",
        "\"\\\\%03o\""
      ]
    },
    "pp_number": {
      "start_point": [
        1503,
        0
      ],
      "end_point": [
        1512,
        1
      ],
      "strings": [
        "\"pp_number\""
      ]
    },
    "pp_node": {
      "start_point": [
        1516,
        0
      ],
      "end_point": [
        1522,
        1
      ],
      "strings": []
    },
    "pp_list": {
      "start_point": [
        1529,
        0
      ],
      "end_point": [
        1585,
        1
      ],
      "strings": [
        "\"pp_list\"",
        "\"pp_list\"",
        "\"pp_list\""
      ]
    },
    "is_unary_minus": {
      "start_point": [
        1589,
        0
      ],
      "end_point": [
        1593,
        1
      ],
      "strings": []
    },
    "pp_concat": {
      "start_point": [
        1597,
        0
      ],
      "end_point": [
        1684,
        1
      ],
      "strings": [
        "\"pp_concat\"",
        "\"pp_concat\"",
        "\"pp_concat\""
      ]
    },
    "pp_group3": {
      "start_point": [
        1688,
        0
      ],
      "end_point": [
        1714,
        1
      ],
      "strings": [
        "\"pp_group3\""
      ]
    },
    "pp_func": {
      "start_point": [
        1718,
        0
      ],
      "end_point": [
        1768,
        1
      ],
      "strings": [
        "\"\\n\\t# Functions, listed alphabetically\\n\"",
        "\"\\n\"",
        "\"%s %s(\"",
        "\"%s\"",
        "\", \"",
        "\")\"",
        "\")\\n\"",
        "\"{\\n\"",
        "\"}\\n\""
      ]
    },
    "redir2str": {
      "start_point": [
        1772,
        0
      ],
      "end_point": [
        1788,
        1
      ],
      "strings": [
        "\"\"",
        "\" > \"",
        "\" >> \"",
        "\" | \"",
        "\" | \"",
        "\" < \"",
        "\" |& \"",
        "\"redir2str: unknown redirection type %d\""
      ]
    }
  },
  "gawk/gawk-4.2.1/protos.h": {},
  "gawk/gawk-4.2.1/re.c": {
    "make_regexp": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        249,
        1
      ],
      "strings": [
        "\".*+(){}[]|?^$\\\\\"",
        "\"GAWK_NO_DFA\"",
        "\"make_regexp\"",
        "\"make_regexp\"",
        "\"()|*+?.^$\\\\[]\"",
        "\"make_regexp\"",
        "\"make_regexp\"",
        "\"%s: /%s/\"",
        "\"%s: /%s/\"",
        "\"*+|?\""
      ]
    },
    "research": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        320,
        1
      ],
      "strings": []
    },
    "refree": {
      "start_point": [
        324,
        0
      ],
      "end_point": [
        340,
        1
      ],
      "strings": []
    },
    "dfaerror": {
      "start_point": [
        344,
        0
      ],
      "end_point": [
        349,
        1
      ],
      "strings": [
        "\"%s\""
      ]
    },
    "re_update": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        401,
        1
      ],
      "strings": []
    },
    "resetup": {
      "start_point": [
        405,
        0
      ],
      "end_point": [
        434,
        1
      ],
      "strings": []
    },
    "using_utf8": {
      "start_point": [
        438,
        0
      ],
      "end_point": [
        442,
        1
      ],
      "strings": []
    },
    "reisstring": {
      "start_point": [
        446,
        0
      ],
      "end_point": [
        462,
        1
      ],
      "strings": []
    },
    "reflags2str": {
      "start_point": [
        466,
        0
      ],
      "end_point": [
        502,
        1
      ],
      "strings": [
        "\"RE_BACKSLASH_ESCAPE_IN_LISTS\"",
        "\"RE_BK_PLUS_QM\"",
        "\"RE_CHAR_CLASSES\"",
        "\"RE_CONTEXT_INDEP_ANCHORS\"",
        "\"RE_CONTEXT_INDEP_OPS\"",
        "\"RE_CONTEXT_INVALID_OPS\"",
        "\"RE_DOT_NEWLINE\"",
        "\"RE_DOT_NOT_NULL\"",
        "\"RE_HAT_LISTS_NOT_NEWLINE\"",
        "\"RE_INTERVALS\"",
        "\"RE_LIMITED_OPS\"",
        "\"RE_NEWLINE_ALT\"",
        "\"RE_NO_BK_BRACES\"",
        "\"RE_NO_BK_PARENS\"",
        "\"RE_NO_BK_REFS\"",
        "\"RE_NO_BK_VBAR\"",
        "\"RE_NO_EMPTY_RANGES\"",
        "\"RE_UNMATCHED_RIGHT_PAREN_ORD\"",
        "\"RE_NO_POSIX_BACKTRACKING\"",
        "\"RE_NO_GNU_OPS\"",
        "\"RE_INVALID_INTERVAL_ORD\"",
        "\"RE_ICASE\"",
        "\"RE_CARET_ANCHORS_HERE\"",
        "\"RE_CONTEXT_INVALID_DUP\"",
        "\"RE_NO_SUB\"",
        "\"RE_SYNTAX_EMACS\""
      ]
    },
    "dfawarn": {
      "start_point": [
        509,
        0
      ],
      "end_point": [
        516,
        1
      ],
      "strings": []
    },
    "check_bracket_exp": {
      "start_point": [
        520,
        0
      ],
      "end_point": [
        620,
        1
      ],
      "strings": [
        "\"[:alpha:]\"",
        "\"[:digit:]\"",
        "\"[:alnum:]\"",
        "\"[:upper:]\"",
        "\"[:lower:]\"",
        "\"[:space:]\"",
        "\"[:xdigit:]\"",
        "\"[:punct:]\"",
        "\"[:print:]\"",
        "\"[:graph:]\"",
        "\"[:cntrl:]\"",
        "\"[:blank:]\"",
        "\"regexp component `%.*s' should probably be `[%.*s]'\""
      ]
    }
  },
  "gawk/gawk-4.2.1/replace.c": {},
  "gawk/gawk-4.2.1/str_array.c": {
    "str_array_init": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\"STR_CHAIN_MAX\"",
        "\"AWK_HASH\"",
        "\"gst\""
      ]
    },
    "str_lookup": {
      "start_point": [
        131,
        0
      ],
      "end_point": [
        213,
        1
      ],
      "strings": []
    },
    "str_exists": {
      "start_point": [
        219,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": []
    },
    "str_clear": {
      "start_point": [
        235,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": []
    },
    "str_remove": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        314,
        1
      ],
      "strings": []
    },
    "str_copy": {
      "start_point": [
        319,
        0
      ],
      "end_point": [
        377,
        1
      ],
      "strings": [
        "\"str_copy\""
      ]
    },
    "str_list": {
      "start_point": [
        382,
        0
      ],
      "end_point": [
        433,
        1
      ],
      "strings": [
        "\"str_list\""
      ]
    },
    "str_kilobytes": {
      "start_point": [
        438,
        0
      ],
      "end_point": [
        450,
        1
      ],
      "strings": []
    },
    "str_dump": {
      "start_point": [
        455,
        0
      ],
      "end_point": [
        535,
        1
      ],
      "strings": [
        "\"%s `%s'\\n\"",
        "\"array\"",
        "\"sub-array\"",
        "\"array_func: str_array_func\\n\"",
        "\"flags: %s\\n\"",
        "\"STR_CHAIN_MAX: %lu\\n\"",
        "\"array_size: %lu\\n\"",
        "\"table_size: %lu\\n\"",
        "\"Avg # of items per chain: %.2g\\n\"",
        "\"memory: %.2g kB\\n\"",
        "\"Hash distribution:\\n\"",
        "\"[>=%lu]:%lu\\n\"",
        "\"[%lu]:%lu\\n\"",
        "\"\\n\""
      ]
    },
    "awk_hash": {
      "start_point": [
        540,
        0
      ],
      "end_point": [
        599,
        1
      ],
      "strings": []
    },
    "str_find": {
      "start_point": [
        604,
        0
      ],
      "end_point": [
        625,
        1
      ],
      "strings": []
    },
    "grow_table": {
      "start_point": [
        630,
        0
      ],
      "end_point": [
        702,
        1
      ],
      "strings": [
        "\"grow_table\""
      ]
    },
    "gst_hash_string": {
      "start_point": [
        729,
        0
      ],
      "end_point": [
        750,
        1
      ],
      "strings": []
    },
    "scramble": {
      "start_point": [
        752,
        0
      ],
      "end_point": [
        770,
        1
      ],
      "strings": []
    },
    "env_remove": {
      "start_point": [
        774,
        0
      ],
      "end_point": [
        787,
        1
      ],
      "strings": []
    },
    "env_clear": {
      "start_point": [
        791,
        0
      ],
      "end_point": [
        803,
        1
      ],
      "strings": []
    },
    "env_store": {
      "start_point": [
        807,
        0
      ],
      "end_point": [
        822,
        1
      ],
      "strings": [
        "\"\""
      ]
    },
    "init_env_array": {
      "start_point": [
        826,
        0
      ],
      "end_point": [
        834,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/symbol.c": {
    "init_symbol_table": {
      "start_point": [
        53,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": [
        "\"FUNCTAB\"",
        "\"SYMTAB\""
      ]
    },
    "install_symbol": {
      "start_point": [
        77,
        0
      ],
      "end_point": [
        81,
        1
      ],
      "strings": []
    },
    "lookup": {
      "start_point": [
        89,
        0
      ],
      "end_point": [
        123,
        1
      ],
      "strings": []
    },
    "make_params": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": [
        "\"make_params\""
      ]
    },
    "install_params": {
      "start_point": [
        149,
        0
      ],
      "end_point": [
        166,
        1
      ],
      "strings": []
    },
    "remove_params": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": []
    },
    "remove_symbol": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        223,
        1
      ],
      "strings": []
    },
    "destroy_symbol": {
      "start_point": [
        231,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "make_symbol": {
      "start_point": [
        278,
        0
      ],
      "end_point": [
        293,
        1
      ],
      "strings": []
    },
    "install": {
      "start_point": [
        297,
        0
      ],
      "end_point": [
        349,
        1
      ],
      "strings": []
    },
    "comp_symbol": {
      "start_point": [
        353,
        0
      ],
      "end_point": [
        365,
        1
      ],
      "strings": []
    },
    "get_symbols": {
      "start_point": [
        372,
        0
      ],
      "end_point": [
        431,
        1
      ],
      "strings": [
        "\"@unsorted\"",
        "\"get_symbols\"",
        "\"@unsorted\"",
        "\"get_symbols\""
      ]
    },
    "variable_list": {
      "start_point": [
        436,
        0
      ],
      "end_point": [
        440,
        1
      ],
      "strings": []
    },
    "function_list": {
      "start_point": [
        444,
        0
      ],
      "end_point": [
        448,
        1
      ],
      "strings": []
    },
    "print_vars": {
      "start_point": [
        452,
        0
      ],
      "end_point": [
        471,
        1
      ],
      "strings": [
        "\"%s: \"",
        "\"array, %ld elements\\n\"",
        "\"untyped variable\\n\""
      ]
    },
    "foreach_func": {
      "start_point": [
        476,
        0
      ],
      "end_point": [
        490,
        1
      ],
      "strings": []
    },
    "release_all_vars": {
      "start_point": [
        494,
        0
      ],
      "end_point": [
        500,
        1
      ],
      "strings": []
    },
    "append_symbol": {
      "start_point": [
        507,
        0
      ],
      "end_point": [
        516,
        1
      ],
      "strings": []
    },
    "release_symbols": {
      "start_point": [
        520,
        0
      ],
      "end_point": [
        537,
        1
      ],
      "strings": []
    },
    "load_symbols": {
      "start_point": [
        541,
        0
      ],
      "end_point": [
        632,
        1
      ],
      "strings": [
        "\"identifiers\"",
        "\"identifiers\"",
        "\"user\"",
        "\"extension\"",
        "\"scalar\"",
        "\"untyped\"",
        "\"array\"",
        "\"builtin\"",
        "\"@unsorted\""
      ]
    },
    "check_param_names": {
      "start_point": [
        636,
        0
      ],
      "end_point": [
        696,
        1
      ],
      "strings": [
        "\"@unsorted\"",
        "\"function `%s': can't use function `%s' as a parameter name\""
      ]
    },
    "bcfree": {
      "start_point": [
        714,
        0
      ],
      "end_point": [
        722,
        1
      ],
      "strings": []
    },
    "bcalloc": {
      "start_point": [
        726,
        0
      ],
      "end_point": [
        755,
        1
      ],
      "strings": [
        "\"bcalloc\""
      ]
    },
    "new_context": {
      "start_point": [
        759,
        0
      ],
      "end_point": [
        769,
        1
      ],
      "strings": [
        "\"new_context\""
      ]
    },
    "set_context": {
      "start_point": [
        773,
        0
      ],
      "end_point": [
        782,
        1
      ],
      "strings": []
    },
    "push_context": {
      "start_point": [
        792,
        0
      ],
      "end_point": [
        805,
        1
      ],
      "strings": []
    },
    "pop_context": {
      "start_point": [
        809,
        0
      ],
      "end_point": [
        823,
        1
      ],
      "strings": [
        "\"can not pop main context\""
      ]
    },
    "in_main_context": {
      "start_point": [
        827,
        0
      ],
      "end_point": [
        832,
        1
      ],
      "strings": []
    },
    "free_context": {
      "start_point": [
        836,
        0
      ],
      "end_point": [
        865,
        1
      ],
      "strings": []
    },
    "free_bc_internal": {
      "start_point": [
        869,
        0
      ],
      "end_point": [
        913,
        1
      ],
      "strings": []
    },
    "free_bc_mempool": {
      "start_point": [
        917,
        0
      ],
      "end_point": [
        935,
        1
      ],
      "strings": []
    },
    "free_bcpool": {
      "start_point": [
        940,
        0
      ],
      "end_point": [
        947,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/version.c": {},
  "gawk/gawk-4.2.1/awklib/eg/lib/grcat.c": {
    "main": [
      {
        "start_point": [
          20,
          0
        ],
        "end_point": [
          20,
          24
        ],
        "strings": []
      },
      {
        "start_point": [
          25,
          0
        ],
        "end_point": [
          47,
          1
        ],
        "strings": [
          "\"%s:%s:%ld:\"",
          "\"%s:*:%ld:\"",
          "\"%s\""
        ]
      }
    ]
  },
  "gawk/gawk-4.2.1/awklib/eg/lib/pwcat.c": {
    "main": {
      "start_point": [
        22,
        0
      ],
      "end_point": [
        40,
        1
      ],
      "strings": [
        "\"%s:%s:%ld:%ld:%s:%s:%s\\n\"",
        "\"%s:*:%ld:%ld:%s:%s\\n\""
      ]
    }
  },
  "gawk/gawk-4.2.1/extension/ext_custom.h": {},
  "gawk/gawk-4.2.1/extension/filefuncs.c": {
    "get_inode": {
      "start_point": [
        124,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": []
    },
    "do_chdir": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": []
    },
    "format_mode": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": [
        "\"----------\""
      ]
    },
    "read_symlink": {
      "start_point": [
        268,
        0
      ],
      "end_point": [
        307,
        1
      ],
      "strings": [
        "\"read_symlink\""
      ]
    },
    "device_blocksize": {
      "start_point": [
        312,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": []
    },
    "array_set": {
      "start_point": [
        336,
        0
      ],
      "end_point": [
        345,
        1
      ],
      "strings": []
    },
    "array_set_numeric": {
      "start_point": [
        349,
        0
      ],
      "end_point": [
        355,
        1
      ],
      "strings": []
    },
    "fill_stat_array": {
      "start_point": [
        359,
        0
      ],
      "end_point": [
        456,
        1
      ],
      "strings": [
        "\"unknown\"",
        "\"file\"",
        "\"blockdev\"",
        "\"chardev\"",
        "\"directory\"",
        "\"socket\"",
        "\"fifo\"",
        "\"symlink\"",
        "\"door\"",
        "\"name\"",
        "\"dev\"",
        "\"ino\"",
        "\"ino\"",
        "\"mode\"",
        "\"nlink\"",
        "\"uid\"",
        "\"gid\"",
        "\"size\"",
        "\"blocks\"",
        "\"blocks\"",
        "\"atime\"",
        "\"mtime\"",
        "\"ctime\"",
        "\"rdev\"",
        "\"major\"",
        "\"minor\"",
        "\"blksize\"",
        "\"blksize\"",
        "\"devbsize\"",
        "\"pmode\"",
        "\"linkval\"",
        "\"stat: unable to read symbolic link `%s'\"",
        "\"unknown\"",
        "\"type\""
      ]
    },
    "do_stat": {
      "start_point": [
        460,
        0
      ],
      "end_point": [
        499,
        1
      ],
      "strings": [
        "\"stat: bad parameters\""
      ]
    },
    "do_statvfs": {
      "start_point": [
        505,
        0
      ],
      "end_point": [
        552,
        1
      ],
      "strings": [
        "\"stat: bad parameters\"",
        "\"bsize\"",
        "\"frsize\"",
        "\"blocks\"",
        "\"bfree\"",
        "\"bavail\"",
        "\"files\"",
        "\"ffree\"",
        "\"favail\"",
        "\"fsid\"",
        "\"flag\"",
        "\"namemax\""
      ]
    },
    "init_filefuncs": {
      "start_point": [
        557,
        0
      ],
      "end_point": [
        590,
        1
      ],
      "strings": [
        "\"fts init: could not create variable %s\""
      ]
    },
    "do_fts": [
      {
        "start_point": [
          601,
          0
        ],
        "end_point": [
          607,
          1
        ],
        "strings": [
          "\"fts is not supported on this system\""
        ]
      },
      {
        "start_point": [
          816,
          0
        ],
        "end_point": [
          911,
          1
        ],
        "strings": [
          "\"fts: called with incorrect number of arguments, expecting 3\"",
          "\"fts: bad first parameter\"",
          "\"fts: bad second parameter\"",
          "\"fts: bad third parameter\"",
          "\"fts: could not flatten array\\n\"",
          "\"fts: ignoring sneaky FTS_NOSTAT flag. nyah, nyah, nyah.\"",
          "\"do_fts\"",
          "\"fts: clear_array() failed\\n\""
        ]
      }
    ],
    "fill_stat_element": {
      "start_point": [
        615,
        0
      ],
      "end_point": [
        635,
        1
      ],
      "strings": [
        "\"fill_stat_element: could not create array\"",
        "\"stat\"",
        "\"fill_stat_element: could not set element\""
      ]
    },
    "fill_path_element": {
      "start_point": [
        639,
        0
      ],
      "end_point": [
        650,
        1
      ],
      "strings": [
        "\"path\"",
        "\"fill_path_element: could not set element\""
      ]
    },
    "fill_error_element": {
      "start_point": [
        654,
        0
      ],
      "end_point": [
        666,
        1
      ],
      "strings": [
        "\"error\"",
        "\"fill_error_element: could not set element\""
      ]
    },
    "fill_default_elements": {
      "start_point": [
        670,
        0
      ],
      "end_point": [
        687,
        1
      ],
      "strings": []
    },
    "process": {
      "start_point": [
        691,
        0
      ],
      "end_point": [
        806,
        1
      ],
      "strings": [
        "\"fts-process: could not create array\"",
        "\"fts-process: could not set element\"",
        "\".\"",
        "\"fts-process: could not create array\"",
        "\"fts-process: could not set element\"",
        "\".\"",
        "\"fts-process: could not set element\""
      ]
    }
  },
  "gawk/gawk-4.2.1/extension/fnmatch.c": {
    "do_fnmatch": {
      "start_point": [
        103,
        0
      ],
      "end_point": [
        145,
        1
      ],
      "strings": [
        "\"fnmatch: could not get first argument\"",
        "\"fnmatch: could not get second argument\"",
        "\"fnmatch: could not get third argument\"",
        "\"fnmatch is not implemented on this system\\n\""
      ]
    },
    "init_fnmatch": {
      "start_point": [
        164,
        0
      ],
      "end_point": [
        200,
        1
      ],
      "strings": [
        "\"FNM_NOMATCH\"",
        "\"fnmatch init: could not add FNM_NOMATCH variable\"",
        "\"fnmatch init: could not set array element %s\"",
        "\"FNM\"",
        "\"fnmatch init: could not install FNM array\""
      ]
    }
  },
  "gawk/gawk-4.2.1/extension/fork.c": {
    "array_set_numeric": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "do_fork": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": [
        "\"PROCINFO\"",
        "\"fork: PROCINFO is not an array!\"",
        "\"pid\"",
        "\"ppid\""
      ]
    },
    "do_waitpid": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        122,
        1
      ],
      "strings": []
    },
    "do_wait": {
      "start_point": [
        127,
        0
      ],
      "end_point": [
        140,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/extension/gawkdirfd.h": {
    "dirfd": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/extension/gawkfts.c": {
    "MAX": {
      "start_point": [
        74,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "fts_open": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": [
        "\"\"",
        "\"\"",
        "\".\""
      ]
    },
    "fts_load": {
      "start_point": [
        261,
        0
      ],
      "end_point": [
        286,
        1
      ],
      "strings": []
    },
    "fts_close": {
      "start_point": [
        288,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    },
    "fts_read": {
      "start_point": [
        361,
        0
      ],
      "end_point": [
        547,
        1
      ],
      "strings": [
        "\".\"",
        "\".\"",
        "\"..\""
      ]
    },
    "fts_set": {
      "start_point": [
        556,
        0
      ],
      "end_point": [
        570,
        1
      ],
      "strings": []
    },
    "fts_children": {
      "start_point": [
        572,
        0
      ],
      "end_point": [
        640,
        1
      ],
      "strings": [
        "\".\""
      ]
    },
    "fts_build": {
      "start_point": [
        656,
        0
      ],
      "end_point": [
        934,
        1
      ],
      "strings": [
        "\"nlinks == %d (cur: %d)\\n\"",
        "\"NOSTAT %d PHYSICAL %d SEEDOT %d\\n\"",
        "\"..\""
      ]
    },
    "fts_stat": {
      "start_point": [
        936,
        0
      ],
      "end_point": [
        1017,
        1
      ],
      "strings": []
    },
    "fts_sort": {
      "start_point": [
        1019,
        0
      ],
      "end_point": [
        1051,
        1
      ],
      "strings": []
    },
    "fts_alloc": {
      "start_point": [
        1053,
        0
      ],
      "end_point": [
        1107,
        1
      ],
      "strings": []
    },
    "fts_free": {
      "start_point": [
        1109,
        0
      ],
      "end_point": [
        1117,
        1
      ],
      "strings": []
    },
    "fts_lfree": {
      "start_point": [
        1119,
        0
      ],
      "end_point": [
        1131,
        1
      ],
      "strings": []
    },
    "fts_pow2": {
      "start_point": [
        1133,
        0
      ],
      "end_point": [
        1151,
        1
      ],
      "strings": []
    },
    "fts_palloc": {
      "start_point": [
        1159,
        0
      ],
      "end_point": [
        1180,
        1
      ],
      "strings": []
    },
    "fts_padjust": {
      "start_point": [
        1186,
        0
      ],
      "end_point": [
        1212,
        1
      ],
      "strings": []
    },
    "fts_maxarglen": {
      "start_point": [
        1214,
        0
      ],
      "end_point": [
        1225,
        1
      ],
      "strings": []
    },
    "fts_safe_changedir": {
      "start_point": [
        1232,
        0
      ],
      "end_point": [
        1261,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/extension/gawkfts.h": {},
  "gawk/gawk-4.2.1/extension/inplace.c": {
    "mkstemp": {
      "start_point": [
        60,
        0
      ],
      "end_point": [
        68,
        1
      ],
      "strings": []
    },
    "at_exit": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": []
    },
    "invalid_filename": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        115,
        1
      ],
      "strings": []
    },
    "do_inplace_begin": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": [
        "\"inplace_begin: in-place editing already active\"",
        "\"inplace_begin: expects 2 arguments but called with %d\"",
        "\"inplace_begin: cannot retrieve 1st argument as a string filename\"",
        "\"inplace_begin: disabling in-place editing for invalid FILENAME `%s'\"",
        "\"inplace_begin: Cannot stat `%s' (%s)\"",
        "\"inplace_begin: `%s' is not a regular file\"",
        "\"do_inplace_begin\"",
        "\"%s.gawk.XXXXXX\"",
        "\"inplace_begin: mkstemp(`%s') failed (%s)\"",
        "\"inplace_begin: chmod failed (%s)\"",
        "\"inplace_begin: dup(stdout) failed (%s)\"",
        "\"inplace_begin: dup2(%d, stdout) failed (%s)\"",
        "\"inplace_begin: close(%d) failed (%s)\""
      ]
    },
    "do_inplace_end": {
      "start_point": [
        202,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": [
        "\"inplace_end: expects 2 arguments but called with %d\"",
        "\"inplace_end: cannot retrieve 1st argument as a string filename\"",
        "\"inplace_end: in-place editing not active\"",
        "\"inplace_end: dup2(%d, stdout) failed (%s)\"",
        "\"inplace_end: close(%d) failed (%s)\"",
        "\"inplace_end: fsetpos(stdout) failed (%s)\"",
        "\"do_inplace_end\"",
        "\"%s%s\"",
        "\"inplace_end: link(`%s', `%s') failed (%s)\"",
        "\"inplace_end: rename(`%s', `%s') failed (%s)\""
      ]
    },
    "init_inplace": {
      "start_point": [
        268,
        0
      ],
      "end_point": [
        272,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/extension/intdiv.c": {
    "double_to_int": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "array_set_number": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": []
    },
    "mpz_conv": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        82,
        1
      ],
      "strings": [
        "\"intdiv: invalid numeric type `%d'\""
      ]
    },
    "array_set_mpz": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/extension/ordchr.c": {
    "do_ord": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        74,
        1
      ],
      "strings": [
        "\"ord: called with inappropriate argument(s)\""
      ]
    },
    "do_chr": {
      "start_point": [
        78,
        0
      ],
      "end_point": [
        101,
        1
      ],
      "strings": [
        "\"chr: called with inappropriate argument(s)\""
      ]
    }
  },
  "gawk/gawk-4.2.1/extension/readdir.c": {
    "ftype": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        136,
        1
      ],
      "strings": [
        "\"b\"",
        "\"c\"",
        "\"d\"",
        "\"p\"",
        "\"l\"",
        "\"f\"",
        "\"s\"",
        "\"u\"",
        "\"/\"",
        "\"b\"",
        "\"c\"",
        "\"d\"",
        "\"p\"",
        "\"f\"",
        "\"l\"",
        "\"s\"",
        "\"u\""
      ]
    },
    "get_inode": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": [
        "\"%s\\\\%s\""
      ]
    },
    "dir_get_record": {
      "start_point": [
        169,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": [
        "\"%I64u/%s\"",
        "\"%llu/%s\"",
        "\"/%s\""
      ]
    },
    "dir_close": {
      "start_point": [
        222,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "dir_can_take_file": {
      "start_point": [
        241,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": []
    },
    "dir_take_control_of": {
      "start_point": [
        256,
        0
      ],
      "end_point": [
        288,
        1
      ],
      "strings": [
        "\"dir_take_control_of: opendir/fdopendir failed: %s\"",
        "\"dir_take_control_of\"",
        "\"dir_take_control_of\""
      ]
    },
    "init_readdir": {
      "start_point": [
        308,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/extension/readdir_test.c": {
    "ftype": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        141,
        1
      ],
      "strings": [
        "\"b\"",
        "\"c\"",
        "\"d\"",
        "\"p\"",
        "\"l\"",
        "\"f\"",
        "\"s\"",
        "\"u\"",
        "\"/\"",
        "\"b\"",
        "\"c\"",
        "\"d\"",
        "\"p\"",
        "\"f\"",
        "\"l\"",
        "\"s\"",
        "\"u\""
      ]
    },
    "get_inode": {
      "start_point": [
        145,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": [
        "\"%s\\\\%s\""
      ]
    },
    "dir_get_record": {
      "start_point": [
        174,
        0
      ],
      "end_point": [
        229,
        1
      ],
      "strings": [
        "\"%I64u\"",
        "\"%llu\"",
        "\"/%s\"",
        "\"/%s\""
      ]
    },
    "dir_close": {
      "start_point": [
        233,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": []
    },
    "dir_can_take_file": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        259,
        1
      ],
      "strings": []
    },
    "dir_take_control_of": {
      "start_point": [
        267,
        0
      ],
      "end_point": [
        305,
        1
      ],
      "strings": [
        "\"dir_take_control_of: opendir/fdopendir failed: %s\"",
        "\"dir_take_control_of\"",
        "\"dir_take_control_of\""
      ]
    },
    "init_readdir": {
      "start_point": [
        325,
        0
      ],
      "end_point": [
        334,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/extension/readfile.c": {
    "read_file_to_buffer": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        92,
        1
      ],
      "strings": [
        "\"do_readfile\""
      ]
    },
    "do_readfile": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        135,
        1
      ],
      "strings": [
        "\"readfile: called with wrong kind of argument\""
      ]
    },
    "readfile_get_record": {
      "start_point": [
        139,
        0
      ],
      "end_point": [
        179,
        1
      ],
      "strings": []
    },
    "readfile_can_take_file": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": [
        "\"PROCINFO\"",
        "\"readfile\""
      ]
    },
    "readfile_take_control_of": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        218,
        1
      ],
      "strings": []
    },
    "init_readfile": {
      "start_point": [
        229,
        0
      ],
      "end_point": [
        235,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/extension/revoutput.c": {
    "rev_fwrite": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "revoutput_can_take_file": {
      "start_point": [
        75,
        0
      ],
      "end_point": [
        87,
        1
      ],
      "strings": [
        "\"REVOUT\""
      ]
    },
    "revoutput_take_control_of": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        104,
        1
      ],
      "strings": []
    },
    "init_revoutput": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        133,
        1
      ],
      "strings": [
        "\"REVOUT\"",
        "\"REVOUT\"",
        "\"revoutput: could not initialize REVOUT variable\""
      ]
    }
  },
  "gawk/gawk-4.2.1/extension/revtwoway.c": {
    "gawk_getdtablesize": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        90,
        1
      ],
      "strings": []
    },
    "close_two_proc_data": {
      "start_point": [
        115,
        0
      ],
      "end_point": [
        125,
        1
      ],
      "strings": []
    },
    "rev2way_get_record": {
      "start_point": [
        133,
        0
      ],
      "end_point": [
        169,
        1
      ],
      "strings": []
    },
    "rev2way_close": {
      "start_point": [
        173,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    },
    "rev2way_fwrite": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        226,
        1
      ],
      "strings": [
        "\"rev2way_fwrite\"",
        "\"rev2way_fwrite\""
      ]
    },
    "rev2way_fflush": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        237,
        1
      ],
      "strings": []
    },
    "rev2way_ferror": {
      "start_point": [
        241,
        0
      ],
      "end_point": [
        248,
        1
      ],
      "strings": []
    },
    "rev2way_fclose": {
      "start_point": [
        252,
        0
      ],
      "end_point": [
        266,
        1
      ],
      "strings": []
    },
    "revtwoway_can_take_two_way": {
      "start_point": [
        271,
        0
      ],
      "end_point": [
        275,
        1
      ],
      "strings": [
        "\"/magic/mirror\""
      ]
    },
    "revtwoway_take_control_of": {
      "start_point": [
        283,
        0
      ],
      "end_point": [
        317,
        1
      ],
      "strings": [
        "\"revtwoway_take_control_of\""
      ]
    },
    "init_revtwoway": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        336,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/extension/rwarray.c": {
    "do_writea": {
      "start_point": [
        102,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": [
        "\"do_writea: argument 0 is not a string\\n\"",
        "\"do_writea: argument 1 is not an array\\n\"",
        "\"wb\""
      ]
    },
    "write_array": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"write_array: could not flatten array\\n\"",
        "\"write_array: could not release flattened array\\n\""
      ]
    },
    "write_elem": {
      "start_point": [
        196,
        0
      ],
      "end_point": [
        214,
        1
      ],
      "strings": []
    },
    "write_value": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": [
        "\"array value has unknown type %d\""
      ]
    },
    "do_reada": {
      "start_point": [
        274,
        0
      ],
      "end_point": [
        357,
        1
      ],
      "strings": [
        "\"do_reada: argument 0 is not a string\\n\"",
        "\"do_reada: argument 1 is not an array\\n\"",
        "\"rb\"",
        "\"do_reada: clear_array failed\\n\""
      ]
    },
    "read_array": {
      "start_point": [
        362,
        0
      ],
      "end_point": [
        389,
        1
      ],
      "strings": [
        "\"read_array: set_array_element failed\\n\""
      ]
    },
    "read_elem": {
      "start_point": [
        393,
        0
      ],
      "end_point": [
        436,
        1
      ],
      "strings": [
        "\"read_elem\""
      ]
    },
    "read_value": {
      "start_point": [
        440,
        0
      ],
      "end_point": [
        503,
        1
      ],
      "strings": [
        "\"treating recovered value with unknown type code %d as a string\""
      ]
    }
  },
  "gawk/gawk-4.2.1/extension/rwarray0.c": {
    "do_writea": {
      "start_point": [
        96,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": [
        "\"do_writea: argument 0 is not a string\\n\"",
        "\"do_writea: argument 1 is not an array\\n\""
      ]
    },
    "write_array": {
      "start_point": [
        157,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": [
        "\"write_array: could not flatten array\\n\"",
        "\"write_array: could not release flattened array\\n\""
      ]
    },
    "write_elem": {
      "start_point": [
        188,
        0
      ],
      "end_point": [
        206,
        1
      ],
      "strings": []
    },
    "write_value": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        244,
        1
      ],
      "strings": []
    },
    "do_reada": {
      "start_point": [
        248,
        0
      ],
      "end_point": [
        330,
        1
      ],
      "strings": [
        "\"do_reada: argument 0 is not a string\\n\"",
        "\"do_reada: argument 1 is not an array\\n\"",
        "\"do_reada: clear_array failed\\n\""
      ]
    },
    "read_array": {
      "start_point": [
        335,
        0
      ],
      "end_point": [
        362,
        1
      ],
      "strings": [
        "\"read_array: set_array_element failed\\n\""
      ]
    },
    "read_elem": {
      "start_point": [
        366,
        0
      ],
      "end_point": [
        409,
        1
      ],
      "strings": [
        "\"read_elem\""
      ]
    },
    "read_value": {
      "start_point": [
        413,
        0
      ],
      "end_point": [
        458,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/extension/stack.c": {
    "stack_empty": {
      "start_point": [
        37,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "stack_top": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "stack_pop": {
      "start_point": [
        56,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": []
    },
    "stack_push": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        89,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/extension/stack.h": {},
  "gawk/gawk-4.2.1/extension/testext.c": {
    "getuid": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        57,
        1
      ],
      "strings": []
    },
    "valrep2str": {
      "start_point": [
        62,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": [
        "\"<undefined>\"",
        "\"<array>\"",
        "\"<scalar>\"",
        "\"<value-cookie>\"",
        "\"\\\"%.*s\\\"\"",
        "\"%g\""
      ]
    },
    "dump_array_and_delete": {
      "start_point": [
        119,
        0
      ],
      "end_point": [
        196,
        1
      ],
      "strings": [
        "\"dump_array_and_delete: nargs not right (%d should be 2)\\n\"",
        "\"dump_array_and_delete: sym_lookup of %s passed\\n\"",
        "\"dump_array_and_delete: sym_lookup of %s failed\\n\"",
        "\"dump_array_and_delete: get_argument(0) failed\\n\"",
        "\"dump_array_and_delete: get_element_count failed\\n\"",
        "\"dump_array_and_delete: incoming size is %lu\\n\"",
        "\"dump_array_and_delete: could not flatten array\\n\"",
        "\"dump_array_and_delete: flat_array->count (%lu) != count (%lu)\\n\"",
        "\"dump_array_and_delete: get_argument(1) failed\\n\"",
        "\"\\t%s[\\\"%.*s\\\"] = %s\\n\"",
        "\"dump_array_and_delete: marking element \\\"%s\\\" for deletion\\n\"",
        "\"dump_array_and_delete: could not release flattened array\\n\""
      ]
    },
    "try_modify_environ": {
      "start_point": [
        213,
        0
      ],
      "end_point": [
        291,
        1
      ],
      "strings": [
        "\"try_modify_environ: nargs not right (%d should be 0)\\n\"",
        "\"ENVIRON\"",
        "\"try_modify_environ: sym_lookup of ENVIRON passed\\n\"",
        "\"try_modify_environ: sym_lookup of ENVIRON failed\\n\"",
        "\"try_modify_environ: get_element_count failed\\n\"",
        "\"testext2\"",
        "\"a value\"",
        "\"try_modify_environ: set_array_element of ENVIRON passed\\n\"",
        "\"try_modify_environ: set_array_element of ENVIRON failed\\n\"",
        "\"try_modify_environ: could not flatten array\\n\"",
        "\"try_modify_environ: flat_array->count (%lu) != count (%lu)\\n\"",
        "\"testext\"",
        "\"try_modify_environ: marking element \\\"%s\\\" for deletion\\n\"",
        "\"try_modify_environ: could not release flattened array\\n\""
      ]
    },
    "var_test": {
      "start_point": [
        302,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": [
        "\"var_test: nargs not right (%d should be 1)\\n\"",
        "\"PROCINFO\"",
        "\"var_test: sym_lookup of PROCINFO passed - got a value!\\n\"",
        "\"var_test: sym_lookup of PROCINFO failed - did not get a value\\n\"",
        "\"ARGC\"",
        "\"var_test: sym_lookup of ARGC passed - got a value!\\n\"",
        "\"var_test: sym_lookup of ARGC failed - did not get a value\\n\"",
        "\"ARGC\"",
        "\"var_test: sym_update of ARGC passed and should not have!\\n\"",
        "\"var_test: sym_update of ARGC failed - correctly\\n\"",
        "\"var_test: sym_update(\\\"%s\\\") succeeded\\n\"",
        "\"var_test: sym_update(\\\"%s\\\") failed\\n\"",
        "\"var_test: sym_lookup(\\\"%s\\\") failed\\n\"",
        "\"var_test: get_argument() failed\\n\""
      ]
    },
    "test_errno": {
      "start_point": [
        369,
        0
      ],
      "end_point": [
        385,
        1
      ],
      "strings": [
        "\"test_errno: nargs not right (%d should be 0)\\n\""
      ]
    },
    "test_deferred": {
      "start_point": [
        398,
        0
      ],
      "end_point": [
        463,
        1
      ],
      "strings": [
        "\"fubar\"",
        "\"rumpus\"",
        "\"uid\"",
        "\"api_major\"",
        "\"test_deferred: nargs not right (%d should be 0)\\n\"",
        "\"PROCINFO\"",
        "\"test_deferred: %d: sym_lookup failed\\n\"",
        "\"test_deferred: %d: set_array_element(%s) failed\\n\"",
        "\"test_deferred: %d: get_array_element(%s) failed\\n\"",
        "\"%s = %g\\n\"",
        "\"test_deferred: %d: get_array_element(%s) failed\\n\"",
        "\"%s matches %d\\n\""
      ]
    },
    "test_array_size": {
      "start_point": [
        477,
        0
      ],
      "end_point": [
        514,
        1
      ],
      "strings": [
        "\"test_array_size: nargs not right (%d should be 1)\\n\"",
        "\"test_array_size: get_argument failed\\n\"",
        "\"test_array_size: get_element_count failed\\n\"",
        "\"test_array_size: incoming size is %lu\\n\"",
        "\"test_array_size: clear_array failed\\n\""
      ]
    },
    "test_array_elem": {
      "start_point": [
        541,
        0
      ],
      "end_point": [
        609,
        1
      ],
      "strings": [
        "\"test_array_elem: nargs not right (%d should be 2)\\n\"",
        "\"test_array_elem: get_argument 0 (array) failed\\n\"",
        "\"test_array_elem: get_argument 1 (index) failed\\n\"",
        "\"test_array_elem: get_array_element failed\\n\"",
        "\"test_array_elem: a[\\\"%.*s\\\"] = %s\\n\"",
        "\"test_array_elem: set_array_element failed\\n\"",
        "\"5\"",
        "\"test_array_elem: del_array_element failed\\n\"",
        "\"7\"",
        "\"seven\"",
        "\"test_array_elem: set_array_element failed\\n\"",
        "\"subarray\"",
        "\"test_array_elem: set_array_element (subarray) failed\\n\""
      ]
    },
    "test_array_param": {
      "start_point": [
        629,
        0
      ],
      "end_point": [
        658,
        1
      ],
      "strings": [
        "\"test_array_param: could not get argument\\n\"",
        "\"test_array_param: argument is not undefined (%d)\\n\"",
        "\"test_array_param: could not change type of argument\\n\""
      ]
    },
    "print_do_lint": {
      "start_point": [
        672,
        0
      ],
      "end_point": [
        689,
        1
      ],
      "strings": [
        "\"print_do_lint: nargs not right (%d should be 0)\\n\"",
        "\"print_do_lint: lint = %d\\n\""
      ]
    },
    "test_scalar": {
      "start_point": [
        708,
        0
      ],
      "end_point": [
        745,
        1
      ],
      "strings": [
        "\"the_scalar\"",
        "\"test_scalar: could not get scalar cookie\\n\"",
        "\"test_scalar: could not get argument\\n\"",
        "\"test_scalar: argument is not a scalar\\n\"",
        "\"test_scalar: could not update new_value2!\\n\""
      ]
    },
    "test_scalar_reserved": {
      "start_point": [
        755,
        0
      ],
      "end_point": [
        785,
        1
      ],
      "strings": [
        "\"ARGC\"",
        "\"test_scalar_reserved: sym_lookup of ARGC passed - got a value!\\n\"",
        "\"test_scalar_reserved: sym_lookup of ARGC failed - did not get a value\\n\"",
        "\"test_scalar_reserved: could not update new_value2 for ARGC - pass\\n\"",
        "\"test_scalar_reserved: was able to update new_value2 for ARGC - fail\\n\""
      ]
    },
    "test_indirect_vars": {
      "start_point": [
        808,
        0
      ],
      "end_point": [
        833,
        1
      ],
      "strings": [
        "\"NR\"",
        "\"testexttmp.txt\"",
        "\"test_indirect_var: sym_lookup of %s passed\\n\"",
        "\"test_indirect_var: sym_lookup of %s failed\\n\"",
        "\"test_indirect_var: value of NR is %g\\n\""
      ]
    },
    "test_get_file": {
      "start_point": [
        856,
        0
      ],
      "end_point": [
        890,
        1
      ],
      "strings": [
        "\"%s: nargs not right (%d should be 2)\\n\"",
        "\"test_get_file\"",
        "\"%s: cannot get first arg\\n\"",
        "\"test_get_file\"",
        "\"%s: cannot get second arg\\n\"",
        "\"test_get_file\"",
        "\"%s: open(%s) failed\\n\"",
        "\"test_get_file\"",
        "\"<\"",
        "\"%s: get_file(%s) failed\\n\"",
        "\"test_get_file\"",
        "\"%s: get_file(%s) returned fd %d instead of %d\\n\"",
        "\"test_get_file\""
      ]
    },
    "do_get_file": {
      "start_point": [
        894,
        0
      ],
      "end_point": [
        951,
        1
      ],
      "strings": [
        "\"%s: nargs not right (%d should be 4)\\n\"",
        "\"get_file\"",
        "\"%s: cannot get first arg\\n\"",
        "\"get_file\"",
        "\"%s: cannot get second arg\\n\"",
        "\"get_file\"",
        "\"%s: cannot get third arg\\n\"",
        "\"get_file\"",
        "\"%s: cannot get fourth arg\\n\"",
        "\"get_file\"",
        "\"%s: get_file(%s, %s, %d) failed\\n\"",
        "\"get_file\"",
        "\"input\"",
        "\"input_name\"",
        "\"output\"",
        "\"output_name\""
      ]
    },
    "fill_in_array": {
      "start_point": [
        955,
        0
      ],
      "end_point": [
        979,
        1
      ],
      "strings": [
        "\"hello\"",
        "\"world\"",
        "\"fill_in_array:%d: set_array_element failed\\n\"",
        "\"answer\"",
        "\"fill_in_array:%d: set_array_element failed\\n\""
      ]
    },
    "create_new_array": {
      "start_point": [
        983,
        0
      ],
      "end_point": [
        991,
        1
      ],
      "strings": [
        "\"new_array\"",
        "\"create_new_array: sym_update(\\\"new_array\\\") failed!\\n\""
      ]
    },
    "at_exit0": {
      "start_point": [
        995,
        0
      ],
      "end_point": [
        1003,
        1
      ],
      "strings": [
        "\"at_exit0 called (should be third):\"",
        "\" data = %p,\"",
        "\" data = NULL,\"",
        "\" exit_status = %d\\n\""
      ]
    },
    "at_exit1": {
      "start_point": [
        1008,
        0
      ],
      "end_point": [
        1022,
        1
      ],
      "strings": [
        "\"at_exit1 called (should be second):\"",
        "\" (data is & data_for_1),\"",
        "\" (data is NOT & data_for_1),\"",
        "\" data value = %#x,\"",
        "\" data = NULL,\"",
        "\" exit_status = %d\\n\""
      ]
    },
    "at_exit2": {
      "start_point": [
        1026,
        0
      ],
      "end_point": [
        1034,
        1
      ],
      "strings": [
        "\"at_exit2 called (should be first):\"",
        "\" data = %p,\"",
        "\" data = NULL,\"",
        "\" exit_status = %d\\n\""
      ]
    },
    "init_testext": {
      "start_point": [
        1055,
        0
      ],
      "end_point": [
        1095,
        1
      ],
      "strings": [
        "\"hello, world\"",
        "\"i am a scalar\"",
        "\"TESTEXT_QUIET\"",
        "\"answer_num\"",
        "\"testext: sym_update(\\\"answer_num\\\") failed!\\n\"",
        "\"message_string\"",
        "\"testext: sym_update(\\\"answer_num\\\") failed!\\n\"",
        "\"the_scalar\"",
        "\"testext: sym_update(\\\"the_scalar\\\") failed!\\n\""
      ]
    }
  },
  "gawk/gawk-4.2.1/extension/time.c": {
    "vms_fake_nanosleep": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "do_gettimeofday": {
      "start_point": [
        104,
        0
      ],
      "end_point": [
        144,
        1
      ],
      "strings": [
        "\"gettimeofday: not supported on this platform\""
      ]
    },
    "do_sleep": {
      "start_point": [
        151,
        0
      ],
      "end_point": [
        205,
        1
      ],
      "strings": [
        "\"sleep: missing required numeric argument\"",
        "\"sleep: argument is negative\"",
        "\"sleep: not supported on this platform\""
      ]
    }
  },
  "gawk/gawk-4.2.1/missing_d/fnmatch.c": {},
  "gawk/gawk-4.2.1/missing_d/fnmatch.h": {},
  "gawk/gawk-4.2.1/missing_d/gawkbool.h": {},
  "gawk/gawk-4.2.1/missing_d/getaddrinfo.c": {
    "freeaddrinfo": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        25,
        1
      ],
      "strings": []
    },
    "getaddrinfo": {
      "start_point": [
        27,
        0
      ],
      "end_point": [
        111,
        1
      ],
      "strings": []
    },
    "gai_strerror": {
      "start_point": [
        113,
        0
      ],
      "end_point": [
        117,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/missing_d/getaddrinfo.h": {},
  "gawk/gawk-4.2.1/missing_d/memcmp.c": {},
  "gawk/gawk-4.2.1/missing_d/memcpy.c": {},
  "gawk/gawk-4.2.1/missing_d/memmove.c": {},
  "gawk/gawk-4.2.1/missing_d/memset.c": {},
  "gawk/gawk-4.2.1/missing_d/mktime.c": {},
  "gawk/gawk-4.2.1/missing_d/setenv.c": {
    "setenv": {
      "start_point": [
        87,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "unsetenv": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        157,
        1
      ],
      "strings": []
    },
    "findenv": {
      "start_point": [
        168,
        0
      ],
      "end_point": [
        186,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/missing_d/snprintf.c": {
    "close_safe_f": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        49,
        1
      ],
      "strings": []
    },
    "safe_tmpfile": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        103,
        1
      ],
      "strings": [
        "\"snprintfXXXXXX\"",
        "\"TMPDIR\"",
        "\"TEMP\"",
        "\"/tmp\"",
        "\"%s/%s\"",
        "\"w+b\""
      ]
    },
    "vsnprintf": {
      "start_point": [
        116,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "snprintf": {
      "start_point": [
        175,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/missing_d/strchr.c": {},
  "gawk/gawk-4.2.1/missing_d/strcoll.c": {
    "strcoll": {
      "start_point": [
        2,
        0
      ],
      "end_point": [
        6,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/missing_d/strerror.c": {},
  "gawk/gawk-4.2.1/missing_d/strftime.c": {
    "strftime": {
      "start_point": [
        534,
        6
      ],
      "end_point": [
        1455,
        1
      ],
      "strings": [
        "\"GMT\"",
        "\"%a %b %e %H:%M:%S %Y\"",
        "\"%m/%d/%y\"",
        "\"%Y-%m-%d\"",
        "\"%H:%M\"",
        "\"%I:%M:%S %p\"",
        "\"%H:%M:%S\"",
        "\"\""
      ]
    }
  },
  "gawk/gawk-4.2.1/missing_d/strncasecmp.c": {},
  "gawk/gawk-4.2.1/missing_d/strtod.c": {},
  "gawk/gawk-4.2.1/missing_d/strtoul.c": {
    "main": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": [
        "\"0xdeadBeeF\"",
        "\"0xdeadBeeF\"",
        "\"(real,my)strtoul(\\\"0xdeadBeeF\\\", & endptr, 0) is %lu, %lu *endptr = %d\\n\"",
        "\"0101101\"",
        "\"0101101\"",
        "\"(real,my)strtoul(\\\"0101101\\\", & endptr, 2) is %lu, %lu *endptr = %d\\n\"",
        "\"01011012\"",
        "\"01011012\"",
        "\"(real,my)strtoul(\\\"01011012\\\", & endptr, 2) is %lu, %lu *endptr = %d\\n\"",
        "\"  +42a\"",
        "\"  +42a\"",
        "\"(real,my)strtoul(\\\"  +42a\\\", & endptr, 0) is %lu, %lu *endptr = %d\\n\"",
        "\"0377\"",
        "\"0377\"",
        "\"(real,my)strtoul(\\\"0377\\\", & endptr, 0) is %lu, %lu *endptr = %d\\n\"",
        "\"Z\"",
        "\"Z\"",
        "\"(real,my)strtoul(\\\"Z\\\", & endptr, 36) is %lu, %lu *endptr = %d\\n\"",
        "\"qZ*\"",
        "\"qZ*\"",
        "\"(real,my)strtoul(\\\"qZ*\\\", & endptr, 36) is %lu, %lu *endptr = %d\\n\""
      ]
    }
  },
  "gawk/gawk-4.2.1/missing_d/system.c": {},
  "gawk/gawk-4.2.1/missing_d/tzset.c": {
    "tzset": {
      "start_point": [
        28,
        0
      ],
      "end_point": [
        38,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/missing_d/usleep.c": {
    "usleep": {
      "start_point": [
        7,
        0
      ],
      "end_point": [
        16,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/missing_d/wcmisc.c": {
    "is_blank": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        41,
        1
      ],
      "strings": []
    },
    "wctype": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        54,
        1
      ],
      "strings": []
    },
    "iswctype": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": []
    },
    "wcscoll": {
      "start_point": [
        84,
        0
      ],
      "end_point": [
        96,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/pc/config.h": {},
  "gawk/gawk-4.2.1/pc/dlfcn.h": {},
  "gawk/gawk-4.2.1/pc/getid.c": {
    "getuid": {
      "start_point": [
        4,
        0
      ],
      "end_point": [
        7,
        1
      ],
      "strings": []
    },
    "geteuid": {
      "start_point": [
        9,
        0
      ],
      "end_point": [
        12,
        1
      ],
      "strings": []
    },
    "getgid": {
      "start_point": [
        14,
        0
      ],
      "end_point": [
        17,
        1
      ],
      "strings": []
    },
    "getegid": {
      "start_point": [
        19,
        0
      ],
      "end_point": [
        22,
        1
      ],
      "strings": []
    },
    "getpgrp": {
      "start_point": [
        26,
        0
      ],
      "end_point": [
        29,
        1
      ],
      "strings": []
    },
    "getppid": {
      "start_point": [
        32,
        0
      ],
      "end_point": [
        35,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/pc/in.h": {},
  "gawk/gawk-4.2.1/pc/popen.c": {
    "unixshell": {
      "start_point": [
        36,
        0
      ],
      "end_point": [
        56,
        1
      ],
      "strings": [
        "\"sh\"",
        "\"bash\"",
        "\"csh\"",
        "\"tcsh\"",
        "\"sh32\"",
        "\"sh16\"",
        "\"ksh\""
      ]
    },
    "slashify": {
      "start_point": [
        58,
        0
      ],
      "end_point": [
        66,
        1
      ],
      "strings": []
    },
    "scriptify": {
      "start_point": [
        68,
        0
      ],
      "end_point": [
        108,
        1
      ],
      "strings": [
        "\".\"",
        "\"pip\"",
        "\"COMSPEC\"",
        "\"SHELL\"",
        "\".bat\"",
        "\" %cc \"",
        "\"wb\"",
        "\"w\"",
        "\"@echo off\\n\""
      ]
    },
    "unlink_and_free": {
      "start_point": [
        110,
        0
      ],
      "end_point": [
        120,
        1
      ],
      "strings": []
    },
    "os_system": {
      "start_point": [
        123,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": [
        "\"ComSpec\"",
        "\"cmd.exe\"",
        "\"/c\""
      ]
    },
    "kill": {
      "start_point": [
        135,
        0
      ],
      "end_point": [
        177,
        1
      ],
      "strings": []
    },
    "quote_cmd": {
      "start_point": [
        179,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"\\\"%s\\\"\""
      ]
    },
    "os_popen": {
      "start_point": [
        200,
        0
      ],
      "end_point": [
        251,
        1
      ],
      "strings": [
        "\".\"",
        "\"pip\""
      ]
    },
    "os_pclose": {
      "start_point": [
        253,
        0
      ],
      "end_point": [
        304,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/pc/popen.h": {},
  "gawk/gawk-4.2.1/pc/socket.h": {},
  "gawk/gawk-4.2.1/posix/gawkmisc.c": {
    "gawk_name": {
      "start_point": [
        38,
        0
      ],
      "end_point": [
        46,
        1
      ],
      "strings": []
    },
    "os_arg_fixup": {
      "start_point": [
        50,
        0
      ],
      "end_point": [
        55,
        1
      ],
      "strings": []
    },
    "os_devopen": {
      "start_point": [
        59,
        0
      ],
      "end_point": [
        64,
        1
      ],
      "strings": []
    },
    "optimal_bufsize": {
      "start_point": [
        90,
        0
      ],
      "end_point": [
        142,
        1
      ],
      "strings": [
        "\"can't stat fd %d (%s)\"",
        "\"AWKBUFSIZE\"",
        "\"exact\""
      ]
    },
    "ispath": {
      "start_point": [
        146,
        0
      ],
      "end_point": [
        150,
        1
      ],
      "strings": []
    },
    "isdirpunct": {
      "start_point": [
        154,
        0
      ],
      "end_point": [
        158,
        1
      ],
      "strings": []
    },
    "os_close_on_exec": {
      "start_point": [
        162,
        0
      ],
      "end_point": [
        190,
        1
      ],
      "strings": [
        "\"%s %s `%s': could not get fd flags: (fcntl F_GETFD: %s)\"",
        "\"%s %s `%s': could not set close-on-exec: (fcntl F_SETFD: %s)\""
      ]
    },
    "os_isdir": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        204,
        1
      ],
      "strings": []
    },
    "os_isreadable": {
      "start_point": [
        208,
        0
      ],
      "end_point": [
        232,
        1
      ],
      "strings": []
    },
    "os_is_setuid": {
      "start_point": [
        236,
        0
      ],
      "end_point": [
        245,
        1
      ],
      "strings": []
    },
    "os_setbinmode": {
      "start_point": [
        249,
        0
      ],
      "end_point": [
        256,
        1
      ],
      "strings": []
    },
    "os_restore_mode": {
      "start_point": [
        260,
        0
      ],
      "end_point": [
        265,
        1
      ],
      "strings": []
    },
    "os_isatty": {
      "start_point": [
        269,
        0
      ],
      "end_point": [
        273,
        1
      ],
      "strings": []
    },
    "files_are_same": {
      "start_point": [
        277,
        0
      ],
      "end_point": [
        285,
        1
      ],
      "strings": []
    },
    "init_sockets": {
      "start_point": [
        287,
        0
      ],
      "end_point": [
        290,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/support/dfa.c": {
    "streq": {
      "start_point": [
        48,
        0
      ],
      "end_point": [
        52,
        1
      ],
      "strings": []
    },
    "isasciidigit": {
      "start_point": [
        54,
        0
      ],
      "end_point": [
        58,
        1
      ],
      "strings": []
    },
    "is_blank": {
      "start_point": [
        91,
        0
      ],
      "end_point": [
        95,
        1
      ],
      "strings": []
    },
    "to_uchar": {
      "start_point": [
        148,
        0
      ],
      "end_point": [
        152,
        1
      ],
      "strings": []
    },
    "newline_constraint": {
      "start_point": [
        189,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "letter_constraint": {
      "start_point": [
        194,
        0
      ],
      "end_point": [
        198,
        1
      ],
      "strings": []
    },
    "other_constraint": {
      "start_point": [
        199,
        0
      ],
      "end_point": [
        203,
        1
      ],
      "strings": []
    },
    "succeeds_in_context": {
      "start_point": [
        205,
        0
      ],
      "end_point": [
        212,
        1
      ],
      "strings": []
    },
    "prev_newline_dependent": {
      "start_point": [
        215,
        0
      ],
      "end_point": [
        219,
        1
      ],
      "strings": []
    },
    "prev_letter_dependent": {
      "start_point": [
        220,
        0
      ],
      "end_point": [
        224,
        1
      ],
      "strings": []
    },
    "accepting": {
      "start_point": [
        603,
        0
      ],
      "end_point": [
        607,
        1
      ],
      "strings": []
    },
    "accepts_in_context": {
      "start_point": [
        610,
        0
      ],
      "end_point": [
        614,
        1
      ],
      "strings": []
    },
    "mbs_to_wchar": {
      "start_point": [
        635,
        0
      ],
      "end_point": [
        655,
        1
      ],
      "strings": []
    },
    "prtok": {
      "start_point": [
        659,
        0
      ],
      "end_point": [
        731,
        1
      ],
      "strings": [
        "\"END\"",
        "\"0x%02x\"",
        "\"EMPTY\"",
        "\"BACKREF\"",
        "\"BEGLINE\"",
        "\"ENDLINE\"",
        "\"BEGWORD\"",
        "\"ENDWORD\"",
        "\"LIMWORD\"",
        "\"NOTLIMWORD\"",
        "\"QMARK\"",
        "\"STAR\"",
        "\"PLUS\"",
        "\"CAT\"",
        "\"OR\"",
        "\"LPAREN\"",
        "\"RPAREN\"",
        "\"ANYCHAR\"",
        "\"MBCSET\"",
        "\"CSET\"",
        "\"%s\""
      ]
    },
    "tstbit": {
      "start_point": [
        736,
        0
      ],
      "end_point": [
        740,
        1
      ],
      "strings": []
    },
    "setbit": {
      "start_point": [
        742,
        0
      ],
      "end_point": [
        747,
        1
      ],
      "strings": []
    },
    "clrbit": {
      "start_point": [
        749,
        0
      ],
      "end_point": [
        754,
        1
      ],
      "strings": []
    },
    "zeroset": {
      "start_point": [
        756,
        0
      ],
      "end_point": [
        760,
        1
      ],
      "strings": []
    },
    "fillset": {
      "start_point": [
        762,
        0
      ],
      "end_point": [
        767,
        1
      ],
      "strings": []
    },
    "notset": {
      "start_point": [
        769,
        0
      ],
      "end_point": [
        774,
        1
      ],
      "strings": []
    },
    "equal": {
      "start_point": [
        776,
        0
      ],
      "end_point": [
        783,
        1
      ],
      "strings": []
    },
    "emptyset": {
      "start_point": [
        785,
        0
      ],
      "end_point": [
        792,
        1
      ],
      "strings": []
    },
    "xpalloc": {
      "start_point": [
        810,
        0
      ],
      "end_point": [
        852,
        1
      ],
      "strings": []
    },
    "maybe_realloc": {
      "start_point": [
        863,
        0
      ],
      "end_point": [
        870,
        1
      ],
      "strings": []
    },
    "charclass_index": {
      "start_point": [
        873,
        0
      ],
      "end_point": [
        886,
        1
      ],
      "strings": []
    },
    "unibyte_word_constituent": {
      "start_point": [
        888,
        0
      ],
      "end_point": [
        892,
        1
      ],
      "strings": []
    },
    "char_context": {
      "start_point": [
        894,
        0
      ],
      "end_point": [
        902,
        1
      ],
      "strings": []
    },
    "dfacopysyntax": {
      "start_point": [
        907,
        0
      ],
      "end_point": [
        919,
        1
      ],
      "strings": []
    },
    "setbit_wc": {
      "start_point": [
        926,
        0
      ],
      "end_point": [
        935,
        1
      ],
      "strings": []
    },
    "setbit_case_fold_c": {
      "start_point": [
        939,
        0
      ],
      "end_point": [
        946,
        1
      ],
      "strings": []
    },
    "using_simple_locale": {
      "start_point": [
        950,
        0
      ],
      "end_point": [
        978,
        1
      ],
      "strings": [
        "\"C\"",
        "\"POSIX\""
      ]
    },
    "fetch_wc": {
      "start_point": [
        986,
        0
      ],
      "end_point": [
        996,
        1
      ],
      "strings": []
    },
    "bracket_fetch_wc": {
      "start_point": [
        1000,
        0
      ],
      "end_point": [
        1006,
        1
      ],
      "strings": [
        "\"unbalanced [\""
      ]
    },
    "_GL_ATTRIBUTE_PURE": [
      {
        "start_point": [
          1037,
          0
        ],
        "end_point": [
          1044,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1904,
          0
        ],
        "end_point": [
          1922,
          1
        ],
        "strings": []
      }
    ],
    "parse_bracket_exp": {
      "start_point": [
        1048,
        0
      ],
      "end_point": [
        1271,
        1
      ],
      "strings": [
        "\"upper\"",
        "\"lower\"",
        "\"alpha\"",
        "\"invalid character class\"",
        "\"character class syntax is [[:space:]], not [:space:]\""
      ]
    },
    "push_lex_state": {
      "start_point": [
        1279,
        0
      ],
      "end_point": [
        1286,
        1
      ],
      "strings": []
    },
    "pop_lex_state": {
      "start_point": [
        1288,
        0
      ],
      "end_point": [
        1293,
        1
      ],
      "strings": []
    },
    "lex": {
      "start_point": [
        1295,
        0
      ],
      "end_point": [
        1640,
        1
      ],
      "strings": [
        "\"unfinished \\\\ escape\"",
        "\"invalid content of \\\\{\\\\}\"",
        "\"regular expression too big\"",
        "\"^[:space:]]\"",
        "\"^_[:alnum:]]\""
      ]
    },
    "addtok_mb": {
      "start_point": [
        1642,
        0
      ],
      "end_point": [
        1681,
        1
      ],
      "strings": []
    },
    "addtok": {
      "start_point": [
        1687,
        0
      ],
      "end_point": [
        1718,
        1
      ],
      "strings": []
    },
    "addtok_wc": {
      "start_point": [
        1726,
        0
      ],
      "end_point": [
        1749,
        1
      ],
      "strings": []
    },
    "add_utf8_anychar": {
      "start_point": [
        1751,
        0
      ],
      "end_point": [
        1806,
        1
      ],
      "strings": []
    },
    "atom": {
      "start_point": [
        1843,
        0
      ],
      "end_point": [
        1901,
        1
      ],
      "strings": [
        "\"unbalanced (\""
      ]
    },
    "copytoks": {
      "start_point": [
        1925,
        0
      ],
      "end_point": [
        1935,
        1
      ],
      "strings": []
    },
    "closure": {
      "start_point": [
        1937,
        0
      ],
      "end_point": [
        1976,
        1
      ],
      "strings": []
    },
    "branch": {
      "start_point": [
        1978,
        0
      ],
      "end_point": [
        1988,
        1
      ],
      "strings": []
    },
    "regexp": {
      "start_point": [
        1990,
        0
      ],
      "end_point": [
        2000,
        1
      ],
      "strings": []
    },
    "dfaparse": {
      "start_point": [
        2005,
        0
      ],
      "end_point": [
        2031,
        1
      ],
      "strings": [
        "\"no syntax specified\"",
        "\"unbalanced )\""
      ]
    },
    "copy": {
      "start_point": [
        2036,
        0
      ],
      "end_point": [
        2048,
        1
      ],
      "strings": []
    },
    "alloc_position_set": {
      "start_point": [
        2050,
        0
      ],
      "end_point": [
        2056,
        1
      ],
      "strings": []
    },
    "insert": {
      "start_point": [
        2062,
        0
      ],
      "end_point": [
        2086,
        1
      ],
      "strings": []
    },
    "merge_constrained": {
      "start_point": [
        2091,
        0
      ],
      "end_point": [
        2124,
        1
      ],
      "strings": []
    },
    "merge": {
      "start_point": [
        2128,
        0
      ],
      "end_point": [
        2132,
        1
      ],
      "strings": []
    },
    "delete": {
      "start_point": [
        2136,
        0
      ],
      "end_point": [
        2159,
        1
      ],
      "strings": []
    },
    "replace": {
      "start_point": [
        2162,
        0
      ],
      "end_point": [
        2173,
        1
      ],
      "strings": []
    },
    "state_index": {
      "start_point": [
        2178,
        0
      ],
      "end_point": [
        2257,
        1
      ],
      "strings": [
        "\"new state %zd\\n nextpos:\"",
        "\" %zu:\"",
        "\"\\n context:\"",
        "\" CTX_NONE\"",
        "\" CTX_LETTER\"",
        "\" CTX_NEWLINE\"",
        "\" CTX_ANY\"",
        "\"\\n\""
      ]
    },
    "epsclosure": {
      "start_point": [
        2264,
        0
      ],
      "end_point": [
        2309,
        1
      ],
      "strings": []
    },
    "charclass_context": {
      "start_point": [
        2314,
        0
      ],
      "end_point": [
        2330,
        1
      ],
      "strings": []
    },
    "state_separate_contexts": {
      "start_point": [
        2338,
        0
      ],
      "end_point": [
        2352,
        1
      ],
      "strings": []
    },
    "dfaanalyze": {
      "start_point": [
        2407,
        0
      ],
      "end_point": [
        2615,
        1
      ],
      "strings": [
        "\"dfaanalyze:\\n\"",
        "\" %zu:\"",
        "\"node %zu:\"",
        "\" nullable: yes\\n\"",
        "\" nullable: no\\n\"",
        "\" firstpos:\"",
        "\" %zu:\"",
        "\"\\n lastpos:\"",
        "\" %zu:\"",
        "\"follows(%zu:\"",
        "\"):\"",
        "\" %zu:\""
      ]
    },
    "realloc_trans_if_necessary": {
      "start_point": [
        2618,
        0
      ],
      "end_point": [
        2650,
        1
      ],
      "strings": []
    },
    "build_state": {
      "start_point": [
        2685,
        0
      ],
      "end_point": [
        2968,
        1
      ],
      "strings": [
        "\"build state %td\\n\"",
        "\" nextpos %zu:\"",
        "\" of\"",
        "\" 0x%02zx\"",
        "\"\\n\"",
        "\"trans table %td\"",
        "\"\\n\"",
        "\" %2td\"",
        "\"\\n\""
      ]
    },
    "transit_state_singlebyte": {
      "start_point": [
        2976,
        0
      ],
      "end_point": [
        3001,
        1
      ],
      "strings": []
    },
    "transit_state": {
      "start_point": [
        3006,
        0
      ],
      "end_point": [
        3075,
        1
      ],
      "strings": []
    },
    "skip_remains_mb": {
      "start_point": [
        3092,
        0
      ],
      "end_point": [
        3105,
        1
      ],
      "strings": []
    },
    "dfaexec_main": {
      "start_point": [
        3127,
        0
      ],
      "end_point": [
        3305,
        1
      ],
      "strings": []
    },
    "dfaexec_mb": {
      "start_point": [
        3310,
        0
      ],
      "end_point": [
        3315,
        1
      ],
      "strings": []
    },
    "dfaexec_sb": {
      "start_point": [
        3317,
        0
      ],
      "end_point": [
        3322,
        1
      ],
      "strings": []
    },
    "dfaexec_noop": {
      "start_point": [
        3326,
        0
      ],
      "end_point": [
        3332,
        1
      ],
      "strings": []
    },
    "dfaexec": {
      "start_point": [
        3338,
        0
      ],
      "end_point": [
        3343,
        1
      ],
      "strings": []
    },
    "dfasuperset": {
      "start_point": [
        3345,
        0
      ],
      "end_point": [
        3349,
        1
      ],
      "strings": []
    },
    "dfaisfast": {
      "start_point": [
        3351,
        0
      ],
      "end_point": [
        3355,
        1
      ],
      "strings": []
    },
    "free_mbdata": {
      "start_point": [
        3357,
        0
      ],
      "end_point": [
        3371,
        1
      ],
      "strings": []
    },
    "dfa_supported": {
      "start_point": [
        3374,
        0
      ],
      "end_point": [
        3394,
        1
      ],
      "strings": []
    },
    "dfaoptimize": {
      "start_point": [
        3396,
        0
      ],
      "end_point": [
        3433,
        1
      ],
      "strings": []
    },
    "dfassbuild": {
      "start_point": [
        3435,
        0
      ],
      "end_point": [
        3514,
        1
      ],
      "strings": []
    },
    "dfacomp": {
      "start_point": [
        3517,
        0
      ],
      "end_point": [
        3538,
        1
      ],
      "strings": []
    },
    "dfafree": {
      "start_point": [
        3541,
        0
      ],
      "end_point": [
        3580,
        1
      ],
      "strings": []
    },
    "icatalloc": {
      "start_point": [
        3664,
        0
      ],
      "end_point": [
        3674,
        1
      ],
      "strings": []
    },
    "freelist": {
      "start_point": [
        3676,
        0
      ],
      "end_point": [
        3681,
        1
      ],
      "strings": []
    },
    "enlist": {
      "start_point": [
        3683,
        0
      ],
      "end_point": [
        3713,
        1
      ],
      "strings": []
    },
    "comsubs": {
      "start_point": [
        3717,
        0
      ],
      "end_point": [
        3739,
        1
      ],
      "strings": []
    },
    "addlists": {
      "start_point": [
        3741,
        0
      ],
      "end_point": [
        3747,
        1
      ],
      "strings": []
    },
    "inboth": {
      "start_point": [
        3751,
        0
      ],
      "end_point": [
        3767,
        1
      ],
      "strings": []
    },
    "allocmust": {
      "start_point": [
        3782,
        0
      ],
      "end_point": [
        3794,
        1
      ],
      "strings": []
    },
    "resetmust": {
      "start_point": [
        3796,
        0
      ],
      "end_point": [
        3804,
        1
      ],
      "strings": []
    },
    "freemust": {
      "start_point": [
        3806,
        0
      ],
      "end_point": [
        3815,
        1
      ],
      "strings": []
    },
    "dfamust": {
      "start_point": [
        3817,
        0
      ],
      "end_point": [
        4052,
        1
      ],
      "strings": [
        "\"\"",
        "\"neither LPAREN nor RPAREN may appear here\""
      ]
    },
    "dfamustfree": {
      "start_point": [
        4054,
        0
      ],
      "end_point": [
        4059,
        1
      ],
      "strings": []
    },
    "dfaalloc": {
      "start_point": [
        4061,
        0
      ],
      "end_point": [
        4065,
        1
      ],
      "strings": []
    },
    "dfasyntax": {
      "start_point": [
        4068,
        0
      ],
      "end_point": [
        4108,
        1
      ],
      "strings": [
        "\"\\n\\r./\""
      ]
    }
  },
  "gawk/gawk-4.2.1/support/dfa.h": {},
  "gawk/gawk-4.2.1/support/getopt.c": {
    "exchange": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        275,
        1
      ],
      "strings": []
    },
    "_getopt_initialize": {
      "start_point": [
        279,
        0
      ],
      "end_point": [
        341,
        1
      ],
      "strings": [
        "\"POSIXLY_CORRECT\""
      ]
    },
    "_getopt_internal_r": {
      "start_point": [
        399,
        0
      ],
      "end_point": [
        1180,
        1
      ],
      "strings": [
        "\"--\"",
        "\"%s: option '%s' is ambiguous; possibilities:\"",
        "\" '--%s'\"",
        "\"%s\"",
        "\"%s: option '%s' is ambiguous; possibilities:\"",
        "\" '--%s'\"",
        "\"\\\n%s: option '--%s' doesn't allow an argument\\n\"",
        "\"\\\n%s: option '--%s' doesn't allow an argument\\n\"",
        "\"\\\n%s: option '%c%s' doesn't allow an argument\\n\"",
        "\"\\\n%s: option '%c%s' doesn't allow an argument\\n\"",
        "\"%s\"",
        "\"\\\n%s: option '--%s' requires an argument\\n\"",
        "\"%s\"",
        "\"%s: option '--%s' requires an argument\\n\"",
        "\"%s: unrecognized option '--%s'\\n\"",
        "\"%s: unrecognized option '--%s'\\n\"",
        "\"%s: unrecognized option '%c%s'\\n\"",
        "\"%s: unrecognized option '%c%s'\\n\"",
        "\"%s\"",
        "\"\"",
        "\"%s: invalid option -- '%c'\\n\"",
        "\"%s: invalid option -- '%c'\\n\"",
        "\"%s\"",
        "\"%s: option requires an argument -- '%c'\\n\"",
        "\"%s\"",
        "\"%s: option requires an argument -- '%c'\\n\"",
        "\"%s: option '-W %s' is ambiguous\\n\"",
        "\"%s\"",
        "\"%s: option '-W %s' is ambiguous\\n\"",
        "\"\\\n%s: option '-W %s' doesn't allow an argument\\n\"",
        "\"%s\"",
        "\"\\\n%s: option '-W %s' doesn't allow an argument\\n\"",
        "\"\\\n%s: option '-W %s' requires an argument\\n\"",
        "\"%s\"",
        "\"\\\n%s: option '-W %s' requires an argument\\n\"",
        "\"\\\n%s: option requires an argument -- '%c'\\n\"",
        "\"%s\"",
        "\"%s: option requires an argument -- '%c'\\n\""
      ]
    },
    "_getopt_internal": {
      "start_point": [
        1182,
        0
      ],
      "end_point": [
        1201,
        1
      ],
      "strings": []
    },
    "getopt": {
      "start_point": [
        1203,
        0
      ],
      "end_point": [
        1210,
        1
      ],
      "strings": []
    },
    "__posix_getopt": {
      "start_point": [
        1213,
        0
      ],
      "end_point": [
        1220,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        1230,
        0
      ],
      "end_point": [
        1291,
        1
      ],
      "strings": [
        "\"abc:d:0123456789\"",
        "\"digits occur in two different argv-elements.\\n\"",
        "\"option %c\\n\"",
        "\"option a\\n\"",
        "\"option b\\n\"",
        "\"option c with value '%s'\\n\"",
        "\"?? getopt returned character code 0%o ??\\n\"",
        "\"non-option ARGV-elements: \"",
        "\"%s \"",
        "\"\\n\""
      ]
    }
  },
  "gawk/gawk-4.2.1/support/getopt.h": {},
  "gawk/gawk-4.2.1/support/getopt1.c": {
    "getopt_long": {
      "start_point": [
        65,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "_getopt_long_r": {
      "start_point": [
        72,
        0
      ],
      "end_point": [
        79,
        1
      ],
      "strings": []
    },
    "getopt_long_only": {
      "start_point": [
        86,
        0
      ],
      "end_point": [
        91,
        1
      ],
      "strings": []
    },
    "_getopt_long_only_r": {
      "start_point": [
        93,
        0
      ],
      "end_point": [
        100,
        1
      ],
      "strings": []
    },
    "main": {
      "start_point": [
        108,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": [
        "\"add\"",
        "\"append\"",
        "\"delete\"",
        "\"verbose\"",
        "\"create\"",
        "\"file\"",
        "\"abc:d:0123456789\"",
        "\"option %s\"",
        "\" with arg %s\"",
        "\"\\n\"",
        "\"digits occur in two different argv-elements.\\n\"",
        "\"option %c\\n\"",
        "\"option a\\n\"",
        "\"option b\\n\"",
        "\"option c with value `%s'\\n\"",
        "\"option d with value `%s'\\n\"",
        "\"?? getopt returned character code 0%o ??\\n\"",
        "\"non-option ARGV-elements: \"",
        "\"%s \"",
        "\"\\n\""
      ]
    }
  },
  "gawk/gawk-4.2.1/support/getopt_int.h": {},
  "gawk/gawk-4.2.1/support/intprops.h": {},
  "gawk/gawk-4.2.1/support/localeinfo.c": {
    "is_using_utf8": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\"\\xc4\\x80\""
      ]
    },
    "init_localeinfo": {
      "start_point": [
        52,
        0
      ],
      "end_point": [
        70,
        1
      ],
      "strings": []
    },
    "case_folded_counterparts": {
      "start_point": [
        98,
        0
      ],
      "end_point": [
        116,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/support/localeinfo.h": {},
  "gawk/gawk-4.2.1/support/random.c": {
    "srandomdev": {
      "start_point": [
        351,
        0
      ],
      "end_point": [
        383,
        1
      ],
      "strings": [
        "\"/dev/random\""
      ]
    },
    "random_old": {
      "start_point": [
        530,
        0
      ],
      "end_point": [
        557,
        1
      ],
      "strings": []
    },
    "random": {
      "start_point": [
        559,
        0
      ],
      "end_point": [
        641,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/support/random.h": {},
  "gawk/gawk-4.2.1/support/regcomp.c": {
    "btowc": {
      "start_point": [
        218,
        0
      ],
      "end_point": [
        231,
        1
      ],
      "strings": []
    },
    "re_compile_pattern": {
      "start_point": [
        241,
        0
      ],
      "end_point": [
        260,
        1
      ],
      "strings": []
    },
    "re_set_syntax": {
      "start_point": [
        280,
        0
      ],
      "end_point": [
        287,
        1
      ],
      "strings": []
    },
    "re_compile_fastmap": {
      "start_point": [
        292,
        0
      ],
      "end_point": [
        308,
        1
      ],
      "strings": []
    },
    "re_set_fastmap": {
      "start_point": [
        313,
        0
      ],
      "end_point": [
        320,
        1
      ],
      "strings": []
    },
    "re_compile_fastmap_iter": {
      "start_point": [
        325,
        0
      ],
      "end_point": [
        453,
        1
      ],
      "strings": []
    },
    "regcomp": {
      "start_point": [
        491,
        0
      ],
      "end_point": [
        542,
        1
      ],
      "strings": []
    },
    "regerror": {
      "start_point": [
        551,
        0
      ],
      "end_point": [
        587,
        1
      ],
      "strings": []
    },
    "free_dfa_content": {
      "start_point": [
        609,
        0
      ],
      "end_point": [
        654,
        1
      ],
      "strings": []
    },
    "regfree": {
      "start_point": [
        659,
        0
      ],
      "end_point": [
        673,
        1
      ],
      "strings": []
    },
    "re_comp": {
      "start_point": [
        692,
        0
      ],
      "end_point": [
        736,
        1
      ],
      "strings": [
        "\"No previous regular expression\""
      ]
    },
    "free_mem": {
      "start_point": [
        739,
        0
      ],
      "end_point": [
        742,
        1
      ],
      "strings": []
    },
    "re_compile_internal": {
      "start_point": [
        751,
        0
      ],
      "end_point": [
        845,
        1
      ],
      "strings": []
    },
    "init_dfa": {
      "start_point": [
        850,
        0
      ],
      "end_point": [
        955,
        1
      ],
      "strings": [
        "\"UTF-8\"",
        "\"LC_ALL\"",
        "\"LC_CTYPE\"",
        "\"LANG\"",
        "\"\"",
        "\"UTF-8\"",
        "\"UTF8\""
      ]
    },
    "init_word_char": {
      "start_point": [
        961,
        0
      ],
      "end_point": [
        1008,
        1
      ],
      "strings": []
    },
    "free_workarea_compile": {
      "start_point": [
        1012,
        0
      ],
      "end_point": [
        1027,
        1
      ],
      "strings": []
    },
    "create_initial_state": {
      "start_point": [
        1031,
        0
      ],
      "end_point": [
        1110,
        1
      ],
      "strings": []
    },
    "optimize_utf8": {
      "start_point": [
        1117,
        0
      ],
      "end_point": [
        1181,
        1
      ],
      "strings": []
    },
    "analyze": {
      "start_point": [
        1187,
        0
      ],
      "end_point": [
        1250,
        1
      ],
      "strings": []
    },
    "postorder": {
      "start_point": [
        1255,
        0
      ],
      "end_point": [
        1285,
        1
      ],
      "strings": []
    },
    "preorder": {
      "start_point": [
        1287,
        0
      ],
      "end_point": [
        1315,
        1
      ],
      "strings": []
    },
    "optimize_subexps": {
      "start_point": [
        1320,
        0
      ],
      "end_point": [
        1347,
        1
      ],
      "strings": []
    },
    "lower_subexps": {
      "start_point": [
        1351,
        0
      ],
      "end_point": [
        1371,
        1
      ],
      "strings": []
    },
    "lower_subexp": {
      "start_point": [
        1373,
        0
      ],
      "end_point": [
        1406,
        1
      ],
      "strings": []
    },
    "calc_first": {
      "start_point": [
        1410,
        0
      ],
      "end_point": [
        1429,
        1
      ],
      "strings": []
    },
    "calc_next": {
      "start_point": [
        1432,
        0
      ],
      "end_point": [
        1452,
        1
      ],
      "strings": []
    },
    "link_nfa_nodes": {
      "start_point": [
        1455,
        0
      ],
      "end_point": [
        1509,
        1
      ],
      "strings": []
    },
    "duplicate_node_closure": {
      "start_point": [
        1515,
        0
      ],
      "end_point": [
        1616,
        1
      ],
      "strings": []
    },
    "search_duplicated_node": {
      "start_point": [
        1621,
        0
      ],
      "end_point": [
        1633,
        1
      ],
      "strings": []
    },
    "duplicate_node": {
      "start_point": [
        1639,
        0
      ],
      "end_point": [
        1653,
        1
      ],
      "strings": []
    },
    "calc_inveclosure": {
      "start_point": [
        1655,
        0
      ],
      "end_point": [
        1674,
        1
      ],
      "strings": []
    },
    "calc_eclosure": {
      "start_point": [
        1678,
        0
      ],
      "end_point": [
        1718,
        1
      ],
      "strings": []
    },
    "calc_eclosure_iter": {
      "start_point": [
        1722,
        0
      ],
      "end_point": [
        1796,
        1
      ],
      "strings": []
    },
    "fetch_token": {
      "start_point": [
        1803,
        0
      ],
      "end_point": [
        1807,
        1
      ],
      "strings": []
    },
    "peek_token": {
      "start_point": [
        1812,
        0
      ],
      "end_point": [
        2045,
        1
      ],
      "strings": []
    },
    "peek_token_bracket": {
      "start_point": [
        2050,
        0
      ],
      "end_point": [
        2130,
        1
      ],
      "strings": []
    },
    "parse": {
      "start_point": [
        2146,
        0
      ],
      "end_point": [
        2169,
        1
      ],
      "strings": []
    },
    "parse_reg_exp": {
      "start_point": [
        2180,
        0
      ],
      "end_point": [
        2218,
        1
      ],
      "strings": []
    },
    "parse_branch": {
      "start_point": [
        2229,
        0
      ],
      "end_point": [
        2266,
        1
      ],
      "strings": []
    },
    "parse_expression": {
      "start_point": [
        2274,
        0
      ],
      "end_point": [
        2488,
        1
      ],
      "strings": [
        "\"alnum\"",
        "\"_\"",
        "\"space\"",
        "\"\""
      ]
    },
    "parse_sub_exp": {
      "start_point": [
        2497,
        0
      ],
      "end_point": [
        2535,
        1
      ],
      "strings": []
    },
    "parse_dup_op": {
      "start_point": [
        2539,
        0
      ],
      "end_point": [
        2667,
        1
      ],
      "strings": []
    },
    "parse_bracket_exp": {
      "start_point": [
        2838,
        0
      ],
      "end_point": [
        3380,
        1
      ],
      "strings": []
    },
    "seek_collating_symbol_entry": {
      "start_point": [
        2855,
        2
      ],
      "end_point": [
        2875,
        5
      ],
      "strings": []
    },
    "lookup_collation_sequence_value": {
      "start_point": [
        2881,
        2
      ],
      "end_point": [
        2940,
        5
      ],
      "strings": []
    },
    "build_range_exp": {
      "start_point": [
        2949,
        2
      ],
      "end_point": [
        3021,
        5
      ],
      "strings": []
    },
    "build_collating_symbol": {
      "start_point": [
        3029,
        2
      ],
      "end_point": [
        3085,
        5
      ],
      "strings": []
    },
    "parse_bracket_element": {
      "start_point": [
        3384,
        0
      ],
      "end_point": [
        3418,
        1
      ],
      "strings": []
    },
    "parse_bracket_symbol": {
      "start_point": [
        3424,
        0
      ],
      "end_point": [
        3463,
        1
      ],
      "strings": []
    },
    "build_charclass_op": {
      "start_point": [
        3652,
        0
      ],
      "end_point": [
        3766,
        1
      ],
      "strings": []
    },
    "fetch_number": {
      "start_point": [
        3773,
        0
      ],
      "end_point": [
        3791,
        1
      ],
      "strings": []
    },
    "free_charset": {
      "start_point": [
        3794,
        0
      ],
      "end_point": [
        3806,
        1
      ],
      "strings": []
    },
    "create_tree": {
      "start_point": [
        3813,
        0
      ],
      "end_point": [
        3821,
        1
      ],
      "strings": []
    },
    "create_token_tree": {
      "start_point": [
        3823,
        0
      ],
      "end_point": [
        3855,
        1
      ],
      "strings": []
    },
    "mark_opt_subexp": {
      "start_point": [
        3860,
        0
      ],
      "end_point": [
        3868,
        1
      ],
      "strings": []
    },
    "free_token": {
      "start_point": [
        3872,
        0
      ],
      "end_point": [
        3882,
        1
      ],
      "strings": []
    },
    "free_tree": {
      "start_point": [
        3887,
        0
      ],
      "end_point": [
        3892,
        1
      ],
      "strings": []
    },
    "duplicate_tree": {
      "start_point": [
        3900,
        0
      ],
      "end_point": [
        3938,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/support/regex.c": {},
  "gawk/gawk-4.2.1/support/regex.h": {},
  "gawk/gawk-4.2.1/support/regexec.c": {
    "MIN": {
      "start_point": [
        180,
        0
      ],
      "end_point": [
        184,
        1
      ],
      "strings": []
    },
    "regexec": {
      "start_point": [
        203,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    },
    "__compat_regexec": {
      "start_point": [
        244,
        0
      ],
      "end_point": [
        252,
        1
      ],
      "strings": []
    },
    "re_match": {
      "start_point": [
        286,
        0
      ],
      "end_point": [
        291,
        1
      ],
      "strings": []
    },
    "re_search": {
      "start_point": [
        296,
        0
      ],
      "end_point": [
        301,
        1
      ],
      "strings": []
    },
    "re_match_2": {
      "start_point": [
        306,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": []
    },
    "re_search_2": {
      "start_point": [
        318,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": []
    },
    "re_search_2_stub": {
      "start_point": [
        330,
        0
      ],
      "end_point": [
        368,
        1
      ],
      "strings": []
    },
    "re_search_stub": {
      "start_point": [
        375,
        0
      ],
      "end_point": [
        459,
        1
      ],
      "strings": []
    },
    "re_copy_regs": {
      "start_point": [
        461,
        0
      ],
      "end_point": [
        524,
        1
      ],
      "strings": []
    },
    "re_set_registers": {
      "start_point": [
        539,
        0
      ],
      "end_point": [
        556,
        1
      ],
      "strings": []
    },
    "re_exec": {
      "start_point": [
        567,
        0
      ],
      "end_point": [
        572,
        1
      ],
      "strings": []
    },
    "re_search_internal": {
      "start_point": [
        586,
        0
      ],
      "end_point": [
        908,
        1
      ],
      "strings": []
    },
    "prune_impossible_nodes": {
      "start_point": [
        910,
        0
      ],
      "end_point": [
        1000,
        1
      ],
      "strings": []
    },
    "check_matching": {
      "start_point": [
        1048,
        0
      ],
      "end_point": [
        1177,
        1
      ],
      "strings": []
    },
    "check_halt_node_context": {
      "start_point": [
        1181,
        0
      ],
      "end_point": [
        1193,
        1
      ],
      "strings": []
    },
    "check_halt_state_context": {
      "start_point": [
        1199,
        0
      ],
      "end_point": [
        1213,
        1
      ],
      "strings": []
    },
    "proceed_next_node": {
      "start_point": [
        1220,
        0
      ],
      "end_point": [
        1317,
        1
      ],
      "strings": []
    },
    "push_fail_stack": {
      "start_point": [
        1319,
        0
      ],
      "end_point": [
        1344,
        1
      ],
      "strings": []
    },
    "pop_fail_stack": {
      "start_point": [
        1346,
        0
      ],
      "end_point": [
        1358,
        1
      ],
      "strings": []
    },
    "__attribute_warn_unused_result__": [
      {
        "start_point": [
          1365,
          0
        ],
        "end_point": [
          1472,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          2635,
          0
        ],
        "end_point": [
          2776,
          1
        ],
        "strings": []
      }
    ],
    "free_fail_stack_return": {
      "start_point": [
        1474,
        0
      ],
      "end_point": [
        1488,
        1
      ],
      "strings": []
    },
    "update_regs": {
      "start_point": [
        1490,
        0
      ],
      "end_point": [
        1536,
        1
      ],
      "strings": []
    },
    "sift_states_backward": {
      "start_point": [
        1561,
        0
      ],
      "end_point": [
        1616,
        1
      ],
      "strings": []
    },
    "build_sifted_states": {
      "start_point": [
        1618,
        0
      ],
      "end_point": [
        1676,
        1
      ],
      "strings": []
    },
    "clean_state_log_if_needed": {
      "start_point": [
        1680,
        0
      ],
      "end_point": [
        1703,
        1
      ],
      "strings": []
    },
    "merge_state_array": {
      "start_point": [
        1705,
        0
      ],
      "end_point": [
        1729,
        1
      ],
      "strings": []
    },
    "update_cur_sifted_state": {
      "start_point": [
        1731,
        0
      ],
      "end_point": [
        1776,
        1
      ],
      "strings": []
    },
    "add_epsilon_src_nodes": {
      "start_point": [
        1778,
        0
      ],
      "end_point": [
        1805,
        1
      ],
      "strings": []
    },
    "sub_epsilon_src_nodes": {
      "start_point": [
        1807,
        0
      ],
      "end_point": [
        1853,
        1
      ],
      "strings": []
    },
    "check_dst_limits": {
      "start_point": [
        1855,
        0
      ],
      "end_point": [
        1888,
        1
      ],
      "strings": []
    },
    "check_dst_limits_calc_pos_1": {
      "start_point": [
        1890,
        0
      ],
      "end_point": [
        1968,
        1
      ],
      "strings": []
    },
    "check_dst_limits_calc_pos": {
      "start_point": [
        1970,
        0
      ],
      "end_point": [
        1994,
        1
      ],
      "strings": []
    },
    "check_subexp_limits": {
      "start_point": [
        1999,
        0
      ],
      "end_point": [
        2084,
        1
      ],
      "strings": []
    },
    "sift_states_bkref": {
      "start_point": [
        2086,
        0
      ],
      "end_point": [
        2182,
        1
      ],
      "strings": []
    },
    "sift_states_iter_mb": {
      "start_point": [
        2186,
        0
      ],
      "end_point": [
        2204,
        1
      ],
      "strings": []
    },
    "transit_state": {
      "start_point": [
        2215,
        0
      ],
      "end_point": [
        2270,
        1
      ],
      "strings": []
    },
    "merge_state_with_log": {
      "start_point": [
        2273,
        0
      ],
      "end_point": [
        2346,
        1
      ],
      "strings": []
    },
    "find_recover_state": {
      "start_point": [
        2351,
        0
      ],
      "end_point": [
        2372,
        1
      ],
      "strings": []
    },
    "check_subexp_matching_top": {
      "start_point": [
        2381,
        0
      ],
      "end_point": [
        2408,
        1
      ],
      "strings": []
    },
    "transit_state_sb": {
      "start_point": [
        2414,
        0
      ],
      "end_point": [
        2449,
        1
      ],
      "strings": []
    },
    "transit_state_mb": {
      "start_point": [
        2453,
        0
      ],
      "end_point": [
        2519,
        1
      ],
      "strings": []
    },
    "transit_state_bkref": {
      "start_point": [
        2522,
        0
      ],
      "end_point": [
        2627,
        1
      ],
      "strings": []
    },
    "get_subexp_sub": {
      "start_point": [
        2784,
        0
      ],
      "end_point": [
        2802,
        1
      ],
      "strings": []
    },
    "find_subexp_node": {
      "start_point": [
        2812,
        0
      ],
      "end_point": [
        2826,
        1
      ],
      "strings": []
    },
    "check_arrival": {
      "start_point": [
        2833,
        0
      ],
      "end_point": [
        2984,
        1
      ],
      "strings": []
    },
    "check_arrival_add_next_nodes": {
      "start_point": [
        2994,
        0
      ],
      "end_point": [
        3067,
        1
      ],
      "strings": []
    },
    "check_arrival_expand_ecl": {
      "start_point": [
        3075,
        0
      ],
      "end_point": [
        3121,
        1
      ],
      "strings": []
    },
    "check_arrival_expand_ecl_sub": {
      "start_point": [
        3127,
        0
      ],
      "end_point": [
        3164,
        1
      ],
      "strings": []
    },
    "expand_bkref_cache": {
      "start_point": [
        3171,
        0
      ],
      "end_point": [
        3255,
        1
      ],
      "strings": []
    },
    "build_trtable": {
      "start_point": [
        3260,
        0
      ],
      "end_point": [
        3492,
        1
      ],
      "strings": []
    },
    "group_nodes_into_DFAstates": {
      "start_point": [
        3499,
        0
      ],
      "end_point": [
        3677,
        1
      ],
      "strings": []
    },
    "check_node_accept_bytes": {
      "start_point": [
        3692,
        0
      ],
      "end_point": [
        3920,
        1
      ],
      "strings": []
    },
    "find_collation_sequence_value": {
      "start_point": [
        3923,
        0
      ],
      "end_point": [
        3978,
        1
      ],
      "strings": []
    },
    "check_node_accept": {
      "start_point": [
        3985,
        0
      ],
      "end_point": [
        4030,
        1
      ],
      "strings": []
    },
    "extend_buffers": {
      "start_point": [
        4034,
        0
      ],
      "end_point": [
        4092,
        1
      ],
      "strings": []
    },
    "match_ctx_init": {
      "start_point": [
        4099,
        0
      ],
      "end_point": [
        4121,
        1
      ],
      "strings": []
    },
    "match_ctx_clean": {
      "start_point": [
        4127,
        0
      ],
      "end_point": [
        4152,
        1
      ],
      "strings": []
    },
    "match_ctx_free": {
      "start_point": [
        4156,
        0
      ],
      "end_point": [
        4163,
        1
      ],
      "strings": []
    },
    "match_ctx_add_entry": {
      "start_point": [
        4170,
        0
      ],
      "end_point": [
        4214,
        1
      ],
      "strings": []
    },
    "search_cur_bkref_entry": {
      "start_point": [
        4219,
        0
      ],
      "end_point": [
        4236,
        1
      ],
      "strings": []
    },
    "match_ctx_add_subtop": {
      "start_point": [
        4241,
        0
      ],
      "end_point": [
        4266,
        1
      ],
      "strings": []
    },
    "match_ctx_add_sublast": {
      "start_point": [
        4271,
        0
      ],
      "end_point": [
        4295,
        1
      ],
      "strings": []
    },
    "sift_ctx_init": {
      "start_point": [
        4297,
        0
      ],
      "end_point": [
        4306,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/support/regex_internal.c": {
    "MAX": {
      "start_point": [
        33,
        0
      ],
      "end_point": [
        37,
        1
      ],
      "strings": []
    },
    "re_string_allocate": {
      "start_point": [
        45,
        0
      ],
      "end_point": [
        69,
        1
      ],
      "strings": []
    },
    "re_string_construct": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        132,
        1
      ],
      "strings": []
    },
    "re_string_realloc_buffers": {
      "start_point": [
        136,
        0
      ],
      "end_point": [
        173,
        1
      ],
      "strings": []
    },
    "re_string_construct_common": {
      "start_point": [
        176,
        0
      ],
      "end_point": [
        192,
        1
      ],
      "strings": []
    },
    "build_wcs_buffer": {
      "start_point": [
        207,
        0
      ],
      "end_point": [
        270,
        1
      ],
      "strings": []
    },
    "build_wcs_upper_buffer": {
      "start_point": [
        275,
        0
      ],
      "end_point": [
        489,
        1
      ],
      "strings": []
    },
    "re_string_skip_chars": {
      "start_point": [
        494,
        0
      ],
      "end_point": [
        528,
        1
      ],
      "strings": []
    },
    "build_upper_buffer": {
      "start_point": [
        534,
        0
      ],
      "end_point": [
        552,
        1
      ],
      "strings": []
    },
    "re_string_translate_buffer": {
      "start_point": [
        556,
        0
      ],
      "end_point": [
        570,
        1
      ],
      "strings": []
    },
    "re_string_reconstruct": {
      "start_point": [
        576,
        0
      ],
      "end_point": [
        834,
        1
      ],
      "strings": []
    },
    "__attribute": [
      {
        "start_point": [
          836,
          0
        ],
        "end_point": [
          870,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1365,
          0
        ],
        "end_point": [
          1376,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          1380,
          0
        ],
        "end_point": [
          1400,
          1
        ],
        "strings": []
      }
    ],
    "re_string_fetch_byte_case": {
      "start_point": [
        872,
        0
      ],
      "end_point": [
        906,
        1
      ],
      "strings": []
    },
    "re_string_destruct": {
      "start_point": [
        908,
        0
      ],
      "end_point": [
        917,
        1
      ],
      "strings": []
    },
    "re_string_context_at": {
      "start_point": [
        921,
        0
      ],
      "end_point": [
        961,
        1
      ],
      "strings": []
    },
    "re_node_set_alloc": {
      "start_point": [
        965,
        0
      ],
      "end_point": [
        985,
        1
      ],
      "strings": []
    },
    "re_node_set_init_1": {
      "start_point": [
        987,
        0
      ],
      "end_point": [
        1001,
        1
      ],
      "strings": []
    },
    "re_node_set_init_2": {
      "start_point": [
        1003,
        0
      ],
      "end_point": [
        1031,
        1
      ],
      "strings": []
    },
    "re_node_set_init_copy": {
      "start_point": [
        1033,
        0
      ],
      "end_point": [
        1052,
        1
      ],
      "strings": []
    },
    "re_node_set_add_intersect": {
      "start_point": [
        1058,
        0
      ],
      "end_point": [
        1144,
        1
      ],
      "strings": []
    },
    "re_node_set_init_union": {
      "start_point": [
        1149,
        0
      ],
      "end_point": [
        1197,
        1
      ],
      "strings": []
    },
    "re_node_set_merge": {
      "start_point": [
        1202,
        0
      ],
      "end_point": [
        1279,
        1
      ],
      "strings": []
    },
    "re_node_set_insert": {
      "start_point": [
        1285,
        0
      ],
      "end_point": [
        1336,
        1
      ],
      "strings": []
    },
    "re_node_set_insert_last": {
      "start_point": [
        1342,
        0
      ],
      "end_point": [
        1360,
        1
      ],
      "strings": []
    },
    "re_node_set_remove_at": {
      "start_point": [
        1402,
        0
      ],
      "end_point": [
        1410,
        1
      ],
      "strings": []
    },
    "re_dfa_add_node": {
      "start_point": [
        1416,
        0
      ],
      "end_point": [
        1471,
        1
      ],
      "strings": []
    },
    "calc_state_hash": {
      "start_point": [
        1473,
        0
      ],
      "end_point": [
        1481,
        1
      ],
      "strings": []
    },
    "re_acquire_state": {
      "start_point": [
        1492,
        0
      ],
      "end_point": [
        1524,
        1
      ],
      "strings": []
    },
    "re_acquire_state_context": {
      "start_point": [
        1536,
        0
      ],
      "end_point": [
        1567,
        1
      ],
      "strings": []
    },
    "register_state": {
      "start_point": [
        1573,
        0
      ],
      "end_point": [
        1607,
        1
      ],
      "strings": []
    },
    "free_state": {
      "start_point": [
        1609,
        0
      ],
      "end_point": [
        1623,
        1
      ],
      "strings": []
    },
    "create_ci_newstate": {
      "start_point": [
        1628,
        0
      ],
      "end_point": [
        1673,
        1
      ],
      "strings": []
    },
    "create_cd_newstate": {
      "start_point": [
        1678,
        0
      ],
      "end_point": [
        1749,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/support/regex_internal.h": {
    "is_blank": {
      "start_point": [
        67,
        0
      ],
      "end_point": [
        71,
        1
      ],
      "strings": []
    },
    "test_malloc": {
      "start_point": [
        456,
        0
      ],
      "end_point": [
        465,
        1
      ],
      "strings": [
        "\"%s:%lu: allocation of zero bytes\\n\""
      ]
    },
    "test_realloc": {
      "start_point": [
        467,
        0
      ],
      "end_point": [
        476,
        1
      ],
      "strings": [
        "\"%s:%lu: reallocation of zero bytes\\n\""
      ]
    },
    "bitset_not": {
      "start_point": [
        735,
        0
      ],
      "end_point": [
        741,
        1
      ],
      "strings": []
    },
    "bitset_merge": {
      "start_point": [
        743,
        0
      ],
      "end_point": [
        749,
        1
      ],
      "strings": []
    },
    "bitset_mask": {
      "start_point": [
        751,
        0
      ],
      "end_point": [
        757,
        1
      ],
      "strings": []
    },
    "re_string_char_size_at": {
      "start_point": [
        761,
        0
      ],
      "end_point": [
        772,
        1
      ],
      "strings": []
    },
    "re_string_wchar_at": {
      "start_point": [
        774,
        0
      ],
      "end_point": [
        781,
        1
      ],
      "strings": []
    },
    "re_string_elem_size_at": {
      "start_point": [
        788,
        0
      ],
      "end_point": [
        811,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/support/verify.h": {},
  "gawk/gawk-4.2.1/support/xalloc.h": {
    "xnmalloc": {
      "start_point": [
        128,
        0
      ],
      "end_point": [
        134,
        1
      ],
      "strings": []
    },
    "xmalloc": {
      "start_point": [
        140,
        0
      ],
      "end_point": [
        149,
        1
      ],
      "strings": []
    },
    "xcalloc": {
      "start_point": [
        155,
        0
      ],
      "end_point": [
        165,
        1
      ],
      "strings": []
    },
    "xrealloc": [
      {
        "start_point": [
          169,
          0
        ],
        "end_point": [
          177,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          343,
          29
        ],
        "end_point": [
          347,
          1
        ],
        "strings": []
      }
    ],
    "xalloc_die": {
      "start_point": [
        181,
        0
      ],
      "end_point": [
        185,
        1
      ],
      "strings": [
        "\"xalloc: malloc failed: %s\""
      ]
    },
    "xmemdup": [
      {
        "start_point": [
          191,
          0
        ],
        "end_point": [
          195,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          367,
          29
        ],
        "end_point": [
          371,
          1
        ],
        "strings": []
      }
    ],
    "xstrdup": {
      "start_point": [
        198,
        0
      ],
      "end_point": [
        211,
        1
      ],
      "strings": [
        "\"xstrdup: null parameter\""
      ]
    },
    "xnrealloc": [
      {
        "start_point": [
          217,
          0
        ],
        "end_point": [
          223,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          349,
          29
        ],
        "end_point": [
          353,
          1
        ],
        "strings": []
      }
    ],
    "x2nrealloc": [
      {
        "start_point": [
          280,
          0
        ],
        "end_point": [
          312,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          361,
          29
        ],
        "end_point": [
          365,
          1
        ],
        "strings": []
      }
    ],
    "xcharalloc": {
      "start_point": [
        318,
        0
      ],
      "end_point": [
        322,
        1
      ],
      "strings": []
    },
    "xzalloc": {
      "start_point": [
        328,
        0
      ],
      "end_point": [
        332,
        1
      ],
      "strings": []
    },
    "x2realloc": {
      "start_point": [
        355,
        29
      ],
      "end_point": [
        359,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/vms/redirect.h": {},
  "gawk/gawk-4.2.1/vms/unixlib.h": {},
  "gawk/gawk-4.2.1/vms/varargs.h": {},
  "gawk/gawk-4.2.1/vms/vms.h": {},
  "gawk/gawk-4.2.1/vms/vms_args.c": {
    "vms_arg_fixup": {
      "start_point": [
        101,
        0
      ],
      "end_point": [
        313,
        1
      ],
      "strings": [
        "\"AWK_LIBRARY\"",
        "\"AWK_LIBRARY\"",
        "\"SYS$LIBRARY:\"",
        "\"SHELL\"",
        "\"DCL\"",
        "\"->\\\\|\"",
        "\"w\"",
        "\"rfm=stmlf\"",
        "\"shr=nil\"",
        "\"mrs=0\"",
        "\"multiple specification of '<' for stdin\"",
        "\"'<<' not available for stdin\"",
        "\"invalid i/o redirection, null filespec after '<'\"",
        "\"a\"",
        "\"rfm=var\"",
        "\"shr=get,upi\"",
        "\"mrs=32767\"",
        "\"wb\"",
        "\"rfm=var\"",
        "\"mrs=32767\"",
        "\"invalid i/o redirection, null filespec after '>'\"",
        "\"conflicting specifications for stdout\"",
        "\"multiple specification of '>' for stdout\"",
        "\"conflicting specifications for stderr\"",
        "\"multiple specification of '>&' for stderr\"",
        "\"2>&1\"",
        "\"conflicting specifications for stderr\"",
        "\"SYS$OUTPUT:\"",
        "\"1>&2\"",
        "\"conflicting specifications for stdout\"",
        "\"command pipes not available ('|' encountered)\"",
        "\"background tasks not available ('&' encountered)\"",
        "\"SYS$OUTPUT\"",
        "\"\"",
        "\"SYS$OUTPUT:\"",
        "\"SYS$ERROR\"",
        "\"r\"",
        "\"ctx=rec\"",
        "\"shr=get,put,del,upd\"",
        "\"mrs=32767\"",
        "\"mbc=32\"",
        "\"mbf=2\"",
        "\"SYS$INPUT\"",
        "\"<%s (%s)\"",
        "\"rat=cr\"",
        "\"mbc=32\"",
        "\"mbf=2\"",
        "\"SYS$OUTPUT\"",
        "\">%s%s (%s)\"",
        "\">\"",
        "\"\"",
        "\"SYS$ERROR\"",
        "\"SYS$OUTPUT:\"",
        "\"SYS$OUTPUT\"",
        "\"SYS$ERROR:\""
      ]
    },
    "vms_expand_wildcards": {
      "start_point": [
        318,
        0
      ],
      "end_point": [
        359,
        1
      ],
      "strings": [
        "\"...\""
      ]
    },
    "v_add_arg": {
      "start_point": [
        362,
        0
      ],
      "end_point": [
        388,
        1
      ],
      "strings": [
        "\"v_add_arg: v_argv[%d] \"",
        "\"%s: %s: can't allocate memory (%s)\"",
        "\"vms_args\"",
        "\"v_argv\"",
        "\"= \\\"%s\\\"\\n\""
      ]
    },
    "skipblanks": {
      "start_point": [
        391,
        0
      ],
      "end_point": [
        398,
        1
      ],
      "strings": []
    },
    "vms_define": {
      "start_point": [
        401,
        0
      ],
      "end_point": [
        423,
        1
      ],
      "strings": [
        "\"LNM$PROCESS_TABLE\""
      ]
    },
    "t_strstr": {
      "start_point": [
        427,
        0
      ],
      "end_point": [
        441,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/vms/vms_cli.c": {
    "Cli_Present": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        53,
        1
      ],
      "strings": []
    },
    "Cli_Get_Value": {
      "start_point": [
        57,
        0
      ],
      "end_point": [
        75,
        1
      ],
      "strings": []
    },
    "Cli_Parse_Command": {
      "start_point": [
        81,
        0
      ],
      "end_point": [
        119,
        1
      ],
      "strings": [
        "\" \""
      ]
    }
  },
  "gawk/gawk-4.2.1/vms/vms_crtl_init.c": {
    "sys_trnlnm": {
      "start_point": [
        125,
        0
      ],
      "end_point": [
        160,
        1
      ],
      "strings": [
        "\"LNM$FILE_DEV\""
      ]
    },
    "sys_crelnm": {
      "start_point": [
        163,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": [
        "\"LNM$PROCESS_TABLE\""
      ]
    },
    "set_feature_default": [
      {
        "start_point": [
          203,
          0
        ],
        "end_point": [
          206,
          1
        ],
        "strings": []
      },
      {
        "start_point": [
          208,
          0
        ],
        "end_point": [
          216,
          1
        ],
        "strings": []
      }
    ],
    "set_coe": {
      "start_point": [
        219,
        0
      ],
      "end_point": [
        430,
        1
      ],
      "strings": [
        "\"GNV$UNIX_SHELL\"",
        "\"GNV$UNIX_SHELL\"",
        "\"DECC$ACL_ACCESS_CHECK\"",
        "\"DECC$ARGV_PARSE_STYLE\"",
        "\"DECC$DISABLE_POSIX_ROOT\"",
        "\"DECC$EFS_CHARSET\"",
        "\"DECC$EFS_CASE_PRESERVE\"",
        "\"DECC$EFS_FILE_TIMESTAMPS\"",
        "\"DECC$ENABLE_GETENV_CACHE\"",
        "\"DECC$EXEC_FILEATTR_INHERITANCE\"",
        "\"2\"",
        "\"DECC$EXEC_FILEATTR_INHERITANCE\"",
        "\"DECC$READDIR_DROPDOTNOTYPE\"",
        "\"DECC$STDIO_CTX_EOL\"",
        "\"DECC$RENAME_NO_INHERIT\"",
        "\"DECC$ALLOW_REMOVE_OPEN_FILES\"",
        "\"DECC$FILENAME_UNIX_ONLY\"",
        "\"DECC$FILE_PERMISSION_UNIX\"",
        "\"DECC$FILE_SHARING\"",
        "\"DECC$FILE_OWNER_UNIX\"",
        "\"DECC$POSIX_SEEK_STREAM_FILE\"",
        "\"DECC$FILENAME_UNIX_REPORT\"",
        "\"DECC$GLOB_UNIX_STYLE\"",
        "\"DECC$FILENAME_UNIX_NO_VERSION\"",
        "\"DECC$UNIX_PATH_BEFORE_LOGNAME\"",
        "\"DECC$STRTOL_ERANGE\"",
        "\"GNV$GNU\"",
        "\"SYS$POSIX_ROOT\"",
        "\"GNV$GNU:\"",
        "\"BIN\"",
        "\"BIN\"",
        "\"GNV$GNU:[BIN]\"",
        "\"BIN\"",
        "\"SYS$POSIX_ROOT:[BIN]\""
      ]
    }
  },
  "gawk/gawk-4.2.1/vms/vms_fwrite.c": {
    "find_c": {
      "start_point": [
        30,
        0
      ],
      "end_point": [
        33,
        1
      ],
      "strings": []
    },
    "tty_fwrite": {
      "start_point": [
        61,
        0
      ],
      "end_point": [
        194,
        1
      ],
      "strings": []
    },
    "tty_fclose": {
      "start_point": [
        201,
        0
      ],
      "end_point": [
        215,
        1
      ],
      "strings": []
    }
  },
  "gawk/gawk-4.2.1/vms/vms_gawk.c": {
    "vms_gawk": {
      "start_point": [
        73,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": [
        "\"GAWK_P1\"",
        "\"GAWK\"",
        "\"GAWK_P1\"",
        "\"USAGE\"",
        "\"VERSION\"",
        "\"COPYRIGHT\"",
        "\"PROGRAM\"",
        "\"PROGFILE\"",
        "\"OPTIMIZE\"",
        "\"-W\"",
        "\"LINT\"",
        "\"LINT.FATAL\"",
        "\"LINT.INVALID\"",
        "\"LINT.WARN\"",
        "\"lint\"",
        "\"LINT.FATAL\"",
        "\"lint=fatal\"",
        "\"LINT.INVALID\"",
        "\"lint=invalid\"",
        "\"LINT.OLD\"",
        "\"lint-old\"",
        "\"POSIX\"",
        "\"posix\"",
        "\"TRADITIONAL\"",
        "\"STRICT\"",
        "\"traditional\"",
        "\"STRICT\"",
        "\"TRADITIONAL\"",
        "\"traditional\"",
        "\"RE_INTERVAL\"",
        "\"re-interval\"",
        "\"SANDBOX\"",
        "\"sandbox\"",
        "\"NON_DECIMAL_DATA\"",
        "\"non-decimal-data\"",
        "\"CHARACTERS_AS_BYTES\"",
        "\"characters-as-bytes\"",
        "\"USE_LC_NUMERIC\"",
        "\"use-lc-numeric\"",
        "\"GEN_POT\"",
        "\"gen-pot\"",
        "\"COPYRIGHT\"",
        "\"copyright\"",
        "\"VERSION\"",
        "\"version\"",
        "\"DEBUG\"",
        "\"PROFILE\"",
        "\"-p\"",
        "\"PROFILE\"",
        "\"DUMP_VARIABLES\"",
        "\"-d\"",
        "\"DUMP_VARIABLES\"",
        "\"FIELD_SEP\"",
        "\"-F\"",
        "\"FIELD_SEP\"",
        "\"VARIABLES\"",
        "\"-v\"",
        "\"VARIABLES\"",
        "\"MOREPROG\"",
        "\"-e\"",
        "\"MOREPROG\"",
        "\"PROGFILE\"",
        "\"-f\"",
        "\"PROGFILE\"",
        "\"--\"",
        "\"PROGRAM\"",
        "\"--\"",
        "\"PROGRAM\"",
        "\"GAWK_P1\"",
        "\"OUTPUT\"",
        "\">$\"",
        "\"OUTPUT\""
      ]
    },
    "vms_usage": {
      "start_point": [
        210,
        0
      ],
      "end_point": [
        289,
        1
      ],
      "strings": [
        "\"\\n\\\nusage: %s /COMMANDS=\\\"awk program text\\\"  data_file[,data_file,...] \\n\\\n   or  %s /INPUT=awk_file  data_file[,\\\"Var=value\\\",data_file,...] \\n\\\n   or  %s /INPUT=(awk_file1,awk_file2,...)  data_file[,...] \\n\\\n   or  %s /INPUT=awk_file /EXTRA_COMMANDS=\\\"program text\\\" data_file \\n\\\n\"",
        "\"\\n\\\noptions: /FIELD_SEPARATOR=\\\"FS_value\\\" \\n\\\n   and   /VARIABLES=(\\\"Var1=value1\\\",\\\"Var2=value2\\\",...) \\n\\\n   and   /OPTIMIZE  /PROFILE[=file]  /DUMP_VARIABLES[=file] \\n\\\n   and   /POSIX  /[NO]TRADITIONAL  /[NO]STRICT  /RE_INTERVAL \\n\\\n   and   /SANDBOX  /NON_DECIMAL_DATA \\n\\\n   and   /LINT[=WARN]  or  /LINT=OLD  or  /LINT=FATAL \\n\\\n   and   /VERSION  /COPYRIGHT  /USAGE \\n\\\n   and   /OUTPUT=out_file \\n\\\n\"",
        "\"missing required element: /COMMANDS or /INPUT\"",
        "\"missing required element: data_file \\n\\\n       (use \\\"SYS$INPUT:\\\" to read data lines from the terminal)\"",
        "\"invalid combination of qualifiers \\n\\\n       (/INPUT=awk_file and /COMMANDS=\\\"awk program\\\" are mutually exclusive)\"",
        "\"\\\"RUN\\\" was used; required command components missing\"",
        "\"USAGE\"",
        "\"VERSION\"",
        "\"COPYRIGHT\"",
        "\"VERSION\"",
        "\"-V\"",
        "\"-C\"",
        "\"-W\"",
        "\"VERSION\"",
        "\"version\"",
        "\"copyright\"",
        "\"--\"",
        "\"{}\"",
        "\"NL:\"",
        "\"\\n%%%s-W-%s, %s \\n\"",
        "\"PROG_RQRD\"",
        "\"\\n%%%s-W-%s, %s \\n\"",
        "\"FILE_RQRD\"",
        "\"\\n%%%s-W-%s, %s \\n\"",
        "\"BAD_COMBO\"",
        "\"\\n%%%s-W-%s, %s \\n\"",
        "\"RUN_CMD\""
      ]
    }
  },
  "gawk/gawk-4.2.1/vms/vms_misc.c": {
    "vms_strerror": {
      "start_point": [
        43,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": []
    },
    "vms_strdup": {
      "start_point": [
        55,
        0
      ],
      "end_point": [
        63,
        1
      ],
      "strings": [
        "\"strdup\""
      ]
    },
    "unlink": {
      "start_point": [
        71,
        0
      ],
      "end_point": [
        80,
        1
      ],
      "strings": [
        "\";0\""
      ]
    },
    "vms_open": {
      "start_point": [
        95,
        0
      ],
      "end_point": [
        147,
        1
      ],
      "strings": [
        "\"/dev/\"",
        "\"null\"",
        "\"NL:\"",
        "\"tty\"",
        "\"TT:\"",
        "\"rfm=stmlf\"",
        "\"rat=cr\"",
        "\"shr=nil\"",
        "\"mbc=32\"",
        "\"shr=get\"",
        "\"ctx=stm\"",
        "\"mbc=8\"",
        "\"mbc=32\"",
        "\"shr=get,put,upd\"",
        "\"mbf=2\""
      ]
    },
    "vms_devopen": {
      "start_point": [
        153,
        0
      ],
      "end_point": [
        170,
        1
      ],
      "strings": [
        "\"SYS$\"",
        "\"INPUT\"",
        "\"OUTPUT\"",
        "\"ERROR\""
      ]
    },
    "vms_gettimeofday": {
      "start_point": [
        183,
        0
      ],
      "end_point": [
        207,
        1
      ],
      "strings": [
        "\"\""
      ]
    },
    "tzset": {
      "start_point": [
        219,
        0
      ],
      "end_point": [
        222,
        1
      ],
      "strings": []
    },
    "getpgrp": {
      "start_point": [
        230,
        0
      ],
      "end_point": [
        233,
        1
      ],
      "strings": []
    },
    "vms_bcopy": {
      "start_point": [
        237,
        0
      ],
      "end_point": [
        240,
        1
      ],
      "strings": []
    },
    "vms_arg_fixup": {
      "start_point": [
        246,
        0
      ],
      "end_point": [
        246,
        57
      ],
      "strings": []
    },
    "popen": {
      "start_point": [
        250,
        0
      ],
      "end_point": [
        253,
        1
      ],
      "strings": [
        "\" Cannot open pipe `%s' (not implemented)\""
      ]
    },
    "pclose": {
      "start_point": [
        254,
        0
      ],
      "end_point": [
        257,
        1
      ],
      "strings": [
        "\" Cannot close pipe #%d (not implemented)\""
      ]
    },
    "fork": {
      "start_point": [
        258,
        0
      ],
      "end_point": [
        261,
        1
      ],
      "strings": [
        "\" Cannot fork process (not implemented)\""
      ]
    }
  },
  "gawk/gawk-4.2.1/vms/vms_popen.c": {
    "popen": [
      {
        "start_point": [
          26,
          0
        ],
        "end_point": [
          32,
          1
        ],
        "strings": [
          "\" Cannot open pipe `%s' (not implemented)\""
        ]
      },
      {
        "start_point": [
          94,
          0
        ],
        "end_point": [
          128,
          1
        ],
        "strings": [
          "\"r\"",
          "\"w\"",
          "\"sys$scratch:gawk-pipe_XXXXXX.tmp\"",
          "\"mbc=24\"",
          "\"mbf=2\""
        ]
      }
    ],
    "pclose": [
      {
        "start_point": [
          34,
          0
        ],
        "end_point": [
          40,
          1
        ],
        "strings": [
          "\" Internal error ('pclose' not implemented)\""
        ]
      },
      {
        "start_point": [
          130,
          0
        ],
        "end_point": [
          150,
          1
        ],
        "strings": []
      }
    ],
    "fork": {
      "start_point": [
        42,
        0
      ],
      "end_point": [
        48,
        1
      ],
      "strings": [
        "\" Internal error ('fork' not implemented)\""
      ]
    },
    "vms_execute": {
      "start_point": [
        158,
        0
      ],
      "end_point": [
        193,
        1
      ],
      "strings": []
    },
    "push_logicals": {
      "start_point": [
        243,
        0
      ],
      "end_point": [
        255,
        1
      ],
      "strings": []
    },
    "pop_logicals": {
      "start_point": [
        257,
        0
      ],
      "end_point": [
        262,
        1
      ],
      "strings": []
    },
    "save_translation": {
      "start_point": [
        264,
        0
      ],
      "end_point": [
        325,
        1
      ],
      "strings": [
        "\"save_translation\"",
        "\"save_translation\""
      ]
    },
    "restore_translation": {
      "start_point": [
        327,
        0
      ],
      "end_point": [
        354,
        1
      ],
      "strings": []
    }
  }
}